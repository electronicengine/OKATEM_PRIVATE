ARM GAS  /tmp/ccPMaRTI.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	setting_enable,1,1
  18              		.comm	motor1,20,4
  19              		.comm	motor2,20,4
  20              		.comm	servo1,16,4
  21              		.comm	servo2,16,4
  22              		.global	reductor_coefficient
  23              		.section	.rodata.reductor_coefficient,"a",%progbits
  24              		.align	2
  27              	reductor_coefficient:
  28 0000 2C010000 		.word	300
  29              		.global	step_num
  30              		.section	.data.step_num,"aw",%progbits
  31              		.align	2
  34              	step_num:
  35 0000 88130000 		.word	5000
  36              		.global	counter
  37              		.section	.bss.counter,"aw",%nobits
  38              		.align	2
  41              	counter:
  42 0000 00000000 		.space	4
  43              		.section	.text.motorInit,"ax",%progbits
  44              		.align	1
  45              		.global	motorInit
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	motorInit:
  52              	.LFB138:
  53              		.file 1 "Src/motor.c"
   1:Src/motor.c   **** 
   2:Src/motor.c   **** 
   3:Src/motor.c   **** #include "motor.h"
   4:Src/motor.c   **** #include "main.h"
   5:Src/motor.c   **** #include "gpio.h"
   6:Src/motor.c   **** #include "tim.h"
   7:Src/motor.c   **** 
   8:Src/motor.c   **** const int reductor_coefficient = 300; // 500/1.8 = 355.55555
   9:Src/motor.c   **** 
  10:Src/motor.c   **** uint32_t step_num = 5000;
  11:Src/motor.c   **** uint32_t counter = 0;
ARM GAS  /tmp/ccPMaRTI.s 			page 2


  12:Src/motor.c   **** 
  13:Src/motor.c   **** void motorInit()
  14:Src/motor.c   **** {
  54              		.loc 1 14 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              	.LCFI1:
  65              		.cfi_def_cfa_register 7
  15:Src/motor.c   ****     HAL_TIM_Base_Start_IT(&htim2);
  66              		.loc 1 15 0
  67 0004 0248     		ldr	r0, .L2
  68 0006 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  16:Src/motor.c   **** }
  69              		.loc 1 16 0
  70 000a 00BF     		nop
  71 000c 80BD     		pop	{r7, pc}
  72              	.L3:
  73 000e 00BF     		.align	2
  74              	.L2:
  75 0010 00000000 		.word	htim2
  76              		.cfi_endproc
  77              	.LFE138:
  79              		.section	.text.motor1Drive,"ax",%progbits
  80              		.align	1
  81              		.global	motor1Drive
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	motor1Drive:
  88              	.LFB139:
  17:Src/motor.c   **** 
  18:Src/motor.c   **** void  motor1Drive(int Direction)
  19:Src/motor.c   **** {
  89              		.loc 1 19 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 80B5     		push	{r7, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 16
 101 0004 00AF     		add	r7, sp, #0
 102              	.LCFI4:
 103              		.cfi_def_cfa_register 7
 104 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccPMaRTI.s 			page 3


  20:Src/motor.c   ****     static volatile int phase = 1;
  21:Src/motor.c   **** 
  22:Src/motor.c   ****     if(Direction == FORWARD)
 105              		.loc 1 22 0
 106 0008 7B68     		ldr	r3, [r7, #4]
 107 000a 012B     		cmp	r3, #1
 108 000c 40F08280 		bne	.L5
  23:Src/motor.c   ****     {
  24:Src/motor.c   **** 
  25:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP1_GPIO_Port, ENABLE_STEP1_PIN,GPIO_PIN_SET);
 109              		.loc 1 25 0
 110 0010 0122     		movs	r2, #1
 111 0012 1021     		movs	r1, #16
 112 0014 9348     		ldr	r0, .L15
 113 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  26:Src/motor.c   **** 
  27:Src/motor.c   ****           if(phase  == 1)
 114              		.loc 1 27 0
 115 001a 934B     		ldr	r3, .L15+4
 116 001c 1B68     		ldr	r3, [r3]
 117 001e 012B     		cmp	r3, #1
 118 0020 1BD1     		bne	.L6
  28:Src/motor.c   ****           {
  29:Src/motor.c   **** 
  30:Src/motor.c   **** 
  31:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_SET);
 119              		.loc 1 31 0
 120 0022 0122     		movs	r2, #1
 121 0024 0821     		movs	r1, #8
 122 0026 9148     		ldr	r0, .L15+8
 123 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  32:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 124              		.loc 1 32 0
 125 002c 0022     		movs	r2, #0
 126 002e 0421     		movs	r1, #4
 127 0030 8E48     		ldr	r0, .L15+8
 128 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  33:Src/motor.c   **** 
  34:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_SET);
 129              		.loc 1 34 0
 130 0036 0122     		movs	r2, #1
 131 0038 4FF40041 		mov	r1, #32768
 132 003c 8C48     		ldr	r0, .L15+12
 133 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  35:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 134              		.loc 1 35 0
 135 0042 0022     		movs	r2, #0
 136 0044 4FF48041 		mov	r1, #16384
 137 0048 8948     		ldr	r0, .L15+12
 138 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
  36:Src/motor.c   ****               phase ++;
 139              		.loc 1 36 0
 140 004e 864B     		ldr	r3, .L15+4
 141 0050 1B68     		ldr	r3, [r3]
 142 0052 0133     		adds	r3, r3, #1
 143 0054 844A     		ldr	r2, .L15+4
 144 0056 1360     		str	r3, [r2]
ARM GAS  /tmp/ccPMaRTI.s 			page 4


 145 0058 5CE0     		b	.L5
 146              	.L6:
  37:Src/motor.c   **** 
  38:Src/motor.c   ****           }
  39:Src/motor.c   ****           else if(phase  == 2)
 147              		.loc 1 39 0
 148 005a 834B     		ldr	r3, .L15+4
 149 005c 1B68     		ldr	r3, [r3]
 150 005e 022B     		cmp	r3, #2
 151 0060 1BD1     		bne	.L7
  40:Src/motor.c   ****           {
  41:Src/motor.c   **** 
  42:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_SET);
 152              		.loc 1 42 0
 153 0062 0122     		movs	r2, #1
 154 0064 0821     		movs	r1, #8
 155 0066 8148     		ldr	r0, .L15+8
 156 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
  43:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 157              		.loc 1 43 0
 158 006c 0022     		movs	r2, #0
 159 006e 0421     		movs	r1, #4
 160 0070 7E48     		ldr	r0, .L15+8
 161 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
  44:Src/motor.c   **** 
  45:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_SET);
 162              		.loc 1 45 0
 163 0076 0122     		movs	r2, #1
 164 0078 4FF48041 		mov	r1, #16384
 165 007c 7C48     		ldr	r0, .L15+12
 166 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
  46:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 167              		.loc 1 46 0
 168 0082 0022     		movs	r2, #0
 169 0084 4FF40041 		mov	r1, #32768
 170 0088 7948     		ldr	r0, .L15+12
 171 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
  47:Src/motor.c   ****               phase ++;
 172              		.loc 1 47 0
 173 008e 764B     		ldr	r3, .L15+4
 174 0090 1B68     		ldr	r3, [r3]
 175 0092 0133     		adds	r3, r3, #1
 176 0094 744A     		ldr	r2, .L15+4
 177 0096 1360     		str	r3, [r2]
 178 0098 3CE0     		b	.L5
 179              	.L7:
  48:Src/motor.c   **** 
  49:Src/motor.c   ****           }
  50:Src/motor.c   ****           else if(phase  == 3)
 180              		.loc 1 50 0
 181 009a 734B     		ldr	r3, .L15+4
 182 009c 1B68     		ldr	r3, [r3]
 183 009e 032B     		cmp	r3, #3
 184 00a0 1BD1     		bne	.L8
  51:Src/motor.c   ****           {
  52:Src/motor.c   **** 
  53:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccPMaRTI.s 			page 5


 185              		.loc 1 53 0
 186 00a2 0122     		movs	r2, #1
 187 00a4 0421     		movs	r1, #4
 188 00a6 7148     		ldr	r0, .L15+8
 189 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
  54:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 190              		.loc 1 54 0
 191 00ac 0022     		movs	r2, #0
 192 00ae 0821     		movs	r1, #8
 193 00b0 6E48     		ldr	r0, .L15+8
 194 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
  55:Src/motor.c   **** 
  56:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_SET);
 195              		.loc 1 56 0
 196 00b6 0122     		movs	r2, #1
 197 00b8 4FF48041 		mov	r1, #16384
 198 00bc 6C48     		ldr	r0, .L15+12
 199 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
  57:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 200              		.loc 1 57 0
 201 00c2 0022     		movs	r2, #0
 202 00c4 4FF40041 		mov	r1, #32768
 203 00c8 6948     		ldr	r0, .L15+12
 204 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
  58:Src/motor.c   ****               phase ++;
 205              		.loc 1 58 0
 206 00ce 664B     		ldr	r3, .L15+4
 207 00d0 1B68     		ldr	r3, [r3]
 208 00d2 0133     		adds	r3, r3, #1
 209 00d4 644A     		ldr	r2, .L15+4
 210 00d6 1360     		str	r3, [r2]
 211 00d8 1CE0     		b	.L5
 212              	.L8:
  59:Src/motor.c   **** 
  60:Src/motor.c   ****           }
  61:Src/motor.c   ****           else if(phase  == 4)
 213              		.loc 1 61 0
 214 00da 634B     		ldr	r3, .L15+4
 215 00dc 1B68     		ldr	r3, [r3]
 216 00de 042B     		cmp	r3, #4
 217 00e0 18D1     		bne	.L5
  62:Src/motor.c   ****           {
  63:Src/motor.c   **** 
  64:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_SET);
 218              		.loc 1 64 0
 219 00e2 0122     		movs	r2, #1
 220 00e4 0421     		movs	r1, #4
 221 00e6 6148     		ldr	r0, .L15+8
 222 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
  65:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 223              		.loc 1 65 0
 224 00ec 0022     		movs	r2, #0
 225 00ee 0821     		movs	r1, #8
 226 00f0 5E48     		ldr	r0, .L15+8
 227 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
  66:Src/motor.c   **** 
  67:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccPMaRTI.s 			page 6


 228              		.loc 1 67 0
 229 00f6 0122     		movs	r2, #1
 230 00f8 4FF40041 		mov	r1, #32768
 231 00fc 5C48     		ldr	r0, .L15+12
 232 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
  68:Src/motor.c   ****               HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 233              		.loc 1 68 0
 234 0102 0022     		movs	r2, #0
 235 0104 4FF48041 		mov	r1, #16384
 236 0108 5948     		ldr	r0, .L15+12
 237 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
  69:Src/motor.c   ****               phase  = 1;
 238              		.loc 1 69 0
 239 010e 564B     		ldr	r3, .L15+4
 240 0110 0122     		movs	r2, #1
 241 0112 1A60     		str	r2, [r3]
 242              	.L5:
  70:Src/motor.c   **** 
  71:Src/motor.c   ****           }
  72:Src/motor.c   **** 
  73:Src/motor.c   **** 
  74:Src/motor.c   ****     }
  75:Src/motor.c   **** 
  76:Src/motor.c   ****     if(Direction == BACKWARD)
 243              		.loc 1 76 0
 244 0114 7B68     		ldr	r3, [r7, #4]
 245 0116 022B     		cmp	r3, #2
 246 0118 40F08280 		bne	.L9
  77:Src/motor.c   ****     {
  78:Src/motor.c   **** 
  79:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP1_GPIO_Port, ENABLE_STEP1_PIN,GPIO_PIN_SET);
 247              		.loc 1 79 0
 248 011c 0122     		movs	r2, #1
 249 011e 1021     		movs	r1, #16
 250 0120 5048     		ldr	r0, .L15
 251 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
  80:Src/motor.c   **** 
  81:Src/motor.c   **** 
  82:Src/motor.c   ****         if(phase  == 1)
 252              		.loc 1 82 0
 253 0126 504B     		ldr	r3, .L15+4
 254 0128 1B68     		ldr	r3, [r3]
 255 012a 012B     		cmp	r3, #1
 256 012c 1BD1     		bne	.L10
  83:Src/motor.c   ****         {
  84:Src/motor.c   **** 
  85:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_SET);
 257              		.loc 1 85 0
 258 012e 0122     		movs	r2, #1
 259 0130 0421     		movs	r1, #4
 260 0132 4E48     		ldr	r0, .L15+8
 261 0134 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 262              		.loc 1 86 0
 263 0138 0022     		movs	r2, #0
 264 013a 0821     		movs	r1, #8
 265 013c 4B48     		ldr	r0, .L15+8
ARM GAS  /tmp/ccPMaRTI.s 			page 7


 266 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
  87:Src/motor.c   **** 
  88:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_SET);
 267              		.loc 1 88 0
 268 0142 0122     		movs	r2, #1
 269 0144 4FF40041 		mov	r1, #32768
 270 0148 4948     		ldr	r0, .L15+12
 271 014a FFF7FEFF 		bl	HAL_GPIO_WritePin
  89:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 272              		.loc 1 89 0
 273 014e 0022     		movs	r2, #0
 274 0150 4FF48041 		mov	r1, #16384
 275 0154 4648     		ldr	r0, .L15+12
 276 0156 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90:Src/motor.c   **** 
  91:Src/motor.c   **** 
  92:Src/motor.c   ****             phase ++;
 277              		.loc 1 92 0
 278 015a 434B     		ldr	r3, .L15+4
 279 015c 1B68     		ldr	r3, [r3]
 280 015e 0133     		adds	r3, r3, #1
 281 0160 414A     		ldr	r2, .L15+4
 282 0162 1360     		str	r3, [r2]
 283 0164 5CE0     		b	.L9
 284              	.L10:
  93:Src/motor.c   **** 
  94:Src/motor.c   ****         }
  95:Src/motor.c   ****         else if(phase  == 2)
 285              		.loc 1 95 0
 286 0166 404B     		ldr	r3, .L15+4
 287 0168 1B68     		ldr	r3, [r3]
 288 016a 022B     		cmp	r3, #2
 289 016c 1BD1     		bne	.L11
  96:Src/motor.c   ****         {
  97:Src/motor.c   **** 
  98:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_SET);
 290              		.loc 1 98 0
 291 016e 0122     		movs	r2, #1
 292 0170 0421     		movs	r1, #4
 293 0172 3E48     		ldr	r0, .L15+8
 294 0174 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 295              		.loc 1 99 0
 296 0178 0022     		movs	r2, #0
 297 017a 0821     		movs	r1, #8
 298 017c 3B48     		ldr	r0, .L15+8
 299 017e FFF7FEFF 		bl	HAL_GPIO_WritePin
 100:Src/motor.c   **** 
 101:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_SET);
 300              		.loc 1 101 0
 301 0182 0122     		movs	r2, #1
 302 0184 4FF48041 		mov	r1, #16384
 303 0188 3948     		ldr	r0, .L15+12
 304 018a FFF7FEFF 		bl	HAL_GPIO_WritePin
 102:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 305              		.loc 1 102 0
 306 018e 0022     		movs	r2, #0
ARM GAS  /tmp/ccPMaRTI.s 			page 8


 307 0190 4FF40041 		mov	r1, #32768
 308 0194 3648     		ldr	r0, .L15+12
 309 0196 FFF7FEFF 		bl	HAL_GPIO_WritePin
 103:Src/motor.c   **** 
 104:Src/motor.c   **** 
 105:Src/motor.c   ****             phase ++;
 310              		.loc 1 105 0
 311 019a 334B     		ldr	r3, .L15+4
 312 019c 1B68     		ldr	r3, [r3]
 313 019e 0133     		adds	r3, r3, #1
 314 01a0 314A     		ldr	r2, .L15+4
 315 01a2 1360     		str	r3, [r2]
 316 01a4 3CE0     		b	.L9
 317              	.L11:
 106:Src/motor.c   **** 
 107:Src/motor.c   ****         }
 108:Src/motor.c   ****         else if(phase  == 3)
 318              		.loc 1 108 0
 319 01a6 304B     		ldr	r3, .L15+4
 320 01a8 1B68     		ldr	r3, [r3]
 321 01aa 032B     		cmp	r3, #3
 322 01ac 1BD1     		bne	.L12
 109:Src/motor.c   ****         {
 110:Src/motor.c   **** 
 111:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_SET);
 323              		.loc 1 111 0
 324 01ae 0122     		movs	r2, #1
 325 01b0 0821     		movs	r1, #8
 326 01b2 2E48     		ldr	r0, .L15+8
 327 01b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 112:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 328              		.loc 1 112 0
 329 01b8 0022     		movs	r2, #0
 330 01ba 0421     		movs	r1, #4
 331 01bc 2B48     		ldr	r0, .L15+8
 332 01be FFF7FEFF 		bl	HAL_GPIO_WritePin
 113:Src/motor.c   **** 
 114:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_SET);
 333              		.loc 1 114 0
 334 01c2 0122     		movs	r2, #1
 335 01c4 4FF48041 		mov	r1, #16384
 336 01c8 2948     		ldr	r0, .L15+12
 337 01ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 115:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 338              		.loc 1 115 0
 339 01ce 0022     		movs	r2, #0
 340 01d0 4FF40041 		mov	r1, #32768
 341 01d4 2648     		ldr	r0, .L15+12
 342 01d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116:Src/motor.c   **** 
 117:Src/motor.c   ****             phase ++;
 343              		.loc 1 117 0
 344 01da 234B     		ldr	r3, .L15+4
 345 01dc 1B68     		ldr	r3, [r3]
 346 01de 0133     		adds	r3, r3, #1
 347 01e0 214A     		ldr	r2, .L15+4
 348 01e2 1360     		str	r3, [r2]
ARM GAS  /tmp/ccPMaRTI.s 			page 9


 349 01e4 1CE0     		b	.L9
 350              	.L12:
 118:Src/motor.c   **** 
 119:Src/motor.c   ****         }
 120:Src/motor.c   ****         else if(phase  == 4)
 351              		.loc 1 120 0
 352 01e6 204B     		ldr	r3, .L15+4
 353 01e8 1B68     		ldr	r3, [r3]
 354 01ea 042B     		cmp	r3, #4
 355 01ec 18D1     		bne	.L9
 121:Src/motor.c   ****         {
 122:Src/motor.c   **** 
 123:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_SET);
 356              		.loc 1 123 0
 357 01ee 0122     		movs	r2, #1
 358 01f0 0821     		movs	r1, #8
 359 01f2 1E48     		ldr	r0, .L15+8
 360 01f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 361              		.loc 1 124 0
 362 01f8 0022     		movs	r2, #0
 363 01fa 0421     		movs	r1, #4
 364 01fc 1B48     		ldr	r0, .L15+8
 365 01fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 125:Src/motor.c   **** 
 126:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_SET);
 366              		.loc 1 126 0
 367 0202 0122     		movs	r2, #1
 368 0204 4FF40041 		mov	r1, #32768
 369 0208 1948     		ldr	r0, .L15+12
 370 020a FFF7FEFF 		bl	HAL_GPIO_WritePin
 127:Src/motor.c   ****             HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 371              		.loc 1 127 0
 372 020e 0022     		movs	r2, #0
 373 0210 4FF48041 		mov	r1, #16384
 374 0214 1648     		ldr	r0, .L15+12
 375 0216 FFF7FEFF 		bl	HAL_GPIO_WritePin
 128:Src/motor.c   ****             phase  = 1;
 376              		.loc 1 128 0
 377 021a 134B     		ldr	r3, .L15+4
 378 021c 0122     		movs	r2, #1
 379 021e 1A60     		str	r2, [r3]
 380              	.L9:
 129:Src/motor.c   **** 
 130:Src/motor.c   ****         }
 131:Src/motor.c   **** 
 132:Src/motor.c   ****     }
 133:Src/motor.c   **** 
 134:Src/motor.c   ****     if(Direction == STOP)
 381              		.loc 1 134 0
 382 0220 7B68     		ldr	r3, [r7, #4]
 383 0222 002B     		cmp	r3, #0
 384 0224 1AD1     		bne	.L14
 135:Src/motor.c   ****     {
 136:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP1_GPIO_Port, ENABLE_STEP1_PIN,GPIO_PIN_RESET);
 385              		.loc 1 136 0
 386 0226 0022     		movs	r2, #0
ARM GAS  /tmp/ccPMaRTI.s 			page 10


 387 0228 1021     		movs	r1, #16
 388 022a 0E48     		ldr	r0, .L15
 389 022c FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Src/motor.c   **** 
 138:Src/motor.c   ****         HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 390              		.loc 1 138 0
 391 0230 0022     		movs	r2, #0
 392 0232 0821     		movs	r1, #8
 393 0234 0D48     		ldr	r0, .L15+8
 394 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139:Src/motor.c   ****         HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 395              		.loc 1 139 0
 396 023a 0022     		movs	r2, #0
 397 023c 0421     		movs	r1, #4
 398 023e 0B48     		ldr	r0, .L15+8
 399 0240 FFF7FEFF 		bl	HAL_GPIO_WritePin
 140:Src/motor.c   **** 
 141:Src/motor.c   ****         HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 400              		.loc 1 141 0
 401 0244 0022     		movs	r2, #0
 402 0246 4FF40041 		mov	r1, #32768
 403 024a 0948     		ldr	r0, .L15+12
 404 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 142:Src/motor.c   ****         HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 405              		.loc 1 142 0
 406 0250 0022     		movs	r2, #0
 407 0252 4FF48041 		mov	r1, #16384
 408 0256 0648     		ldr	r0, .L15+12
 409 0258 FFF7FEFF 		bl	HAL_GPIO_WritePin
 410              	.L14:
 143:Src/motor.c   ****     }
 144:Src/motor.c   **** 
 145:Src/motor.c   **** 
 146:Src/motor.c   **** }
 411              		.loc 1 146 0
 412 025c 00BF     		nop
 413 025e 0837     		adds	r7, r7, #8
 414              	.LCFI5:
 415              		.cfi_def_cfa_offset 8
 416 0260 BD46     		mov	sp, r7
 417              	.LCFI6:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0262 80BD     		pop	{r7, pc}
 421              	.L16:
 422              		.align	2
 423              	.L15:
 424 0264 00080240 		.word	1073874944
 425 0268 00000000 		.word	phase.9732
 426 026c 00180240 		.word	1073879040
 427 0270 000C0240 		.word	1073875968
 428              		.cfi_endproc
 429              	.LFE139:
 431              		.section	.text.motor2Drive,"ax",%progbits
 432              		.align	1
 433              		.global	motor2Drive
 434              		.syntax unified
ARM GAS  /tmp/ccPMaRTI.s 			page 11


 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	motor2Drive:
 440              	.LFB140:
 147:Src/motor.c   **** 
 148:Src/motor.c   **** void motor2Drive(int Direction)
 149:Src/motor.c   **** {
 441              		.loc 1 149 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 80B5     		push	{r7, lr}
 446              	.LCFI7:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 82B0     		sub	sp, sp, #8
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 16
 453 0004 00AF     		add	r7, sp, #0
 454              	.LCFI9:
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 150:Src/motor.c   **** 
 151:Src/motor.c   ****     static volatile int phase = 1;
 152:Src/motor.c   **** 
 153:Src/motor.c   ****     if(Direction == FORWARD)
 457              		.loc 1 153 0
 458 0008 7B68     		ldr	r3, [r7, #4]
 459 000a 012B     		cmp	r3, #1
 460 000c 40F08A80 		bne	.L18
 154:Src/motor.c   ****     {
 155:Src/motor.c   **** 
 156:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP2_GPIO_Port, ENABLE_STEP2_PIN,GPIO_PIN_SET);
 461              		.loc 1 156 0
 462 0010 0122     		movs	r2, #1
 463 0012 2021     		movs	r1, #32
 464 0014 9C48     		ldr	r0, .L28
 465 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157:Src/motor.c   **** 
 158:Src/motor.c   ****           if(phase  == 1)
 466              		.loc 1 158 0
 467 001a 9C4B     		ldr	r3, .L28+4
 468 001c 1B68     		ldr	r3, [r3]
 469 001e 012B     		cmp	r3, #1
 470 0020 1DD1     		bne	.L19
 159:Src/motor.c   ****           {
 160:Src/motor.c   **** 
 161:Src/motor.c   **** 
 162:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 471              		.loc 1 162 0
 472 0022 0122     		movs	r2, #1
 473 0024 4FF48061 		mov	r1, #1024
 474 0028 9948     		ldr	r0, .L28+8
 475 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 163:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccPMaRTI.s 			page 12


 476              		.loc 1 163 0
 477 002e 0022     		movs	r2, #0
 478 0030 4FF40061 		mov	r1, #2048
 479 0034 9648     		ldr	r0, .L28+8
 480 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164:Src/motor.c   **** 
 165:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 481              		.loc 1 165 0
 482 003a 0122     		movs	r2, #1
 483 003c 4FF40051 		mov	r1, #8192
 484 0040 9348     		ldr	r0, .L28+8
 485 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 486              		.loc 1 166 0
 487 0046 0022     		movs	r2, #0
 488 0048 4FF48051 		mov	r1, #4096
 489 004c 9048     		ldr	r0, .L28+8
 490 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 167:Src/motor.c   ****               phase ++;
 491              		.loc 1 167 0
 492 0052 8E4B     		ldr	r3, .L28+4
 493 0054 1B68     		ldr	r3, [r3]
 494 0056 0133     		adds	r3, r3, #1
 495 0058 8C4A     		ldr	r2, .L28+4
 496 005a 1360     		str	r3, [r2]
 497 005c 62E0     		b	.L18
 498              	.L19:
 168:Src/motor.c   **** 
 169:Src/motor.c   ****           }
 170:Src/motor.c   ****           else if(phase  == 2)
 499              		.loc 1 170 0
 500 005e 8B4B     		ldr	r3, .L28+4
 501 0060 1B68     		ldr	r3, [r3]
 502 0062 022B     		cmp	r3, #2
 503 0064 1DD1     		bne	.L20
 171:Src/motor.c   ****           {
 172:Src/motor.c   **** 
 173:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 504              		.loc 1 173 0
 505 0066 0122     		movs	r2, #1
 506 0068 4FF48061 		mov	r1, #1024
 507 006c 8848     		ldr	r0, .L28+8
 508 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 174:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 509              		.loc 1 174 0
 510 0072 0022     		movs	r2, #0
 511 0074 4FF40061 		mov	r1, #2048
 512 0078 8548     		ldr	r0, .L28+8
 513 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 175:Src/motor.c   **** 
 176:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 514              		.loc 1 176 0
 515 007e 0122     		movs	r2, #1
 516 0080 4FF48051 		mov	r1, #4096
 517 0084 8248     		ldr	r0, .L28+8
 518 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 177:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccPMaRTI.s 			page 13


 519              		.loc 1 177 0
 520 008a 0022     		movs	r2, #0
 521 008c 4FF40051 		mov	r1, #8192
 522 0090 7F48     		ldr	r0, .L28+8
 523 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178:Src/motor.c   ****               phase ++;
 524              		.loc 1 178 0
 525 0096 7D4B     		ldr	r3, .L28+4
 526 0098 1B68     		ldr	r3, [r3]
 527 009a 0133     		adds	r3, r3, #1
 528 009c 7B4A     		ldr	r2, .L28+4
 529 009e 1360     		str	r3, [r2]
 530 00a0 40E0     		b	.L18
 531              	.L20:
 179:Src/motor.c   **** 
 180:Src/motor.c   ****           }
 181:Src/motor.c   ****           else if(phase  == 3)
 532              		.loc 1 181 0
 533 00a2 7A4B     		ldr	r3, .L28+4
 534 00a4 1B68     		ldr	r3, [r3]
 535 00a6 032B     		cmp	r3, #3
 536 00a8 1DD1     		bne	.L21
 182:Src/motor.c   ****           {
 183:Src/motor.c   **** 
 184:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 537              		.loc 1 184 0
 538 00aa 0122     		movs	r2, #1
 539 00ac 4FF40061 		mov	r1, #2048
 540 00b0 7748     		ldr	r0, .L28+8
 541 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 185:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 542              		.loc 1 185 0
 543 00b6 0022     		movs	r2, #0
 544 00b8 4FF48061 		mov	r1, #1024
 545 00bc 7448     		ldr	r0, .L28+8
 546 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 186:Src/motor.c   **** 
 187:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 547              		.loc 1 187 0
 548 00c2 0122     		movs	r2, #1
 549 00c4 4FF48051 		mov	r1, #4096
 550 00c8 7148     		ldr	r0, .L28+8
 551 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 188:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 552              		.loc 1 188 0
 553 00ce 0022     		movs	r2, #0
 554 00d0 4FF40051 		mov	r1, #8192
 555 00d4 6E48     		ldr	r0, .L28+8
 556 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189:Src/motor.c   ****               phase ++;
 557              		.loc 1 189 0
 558 00da 6C4B     		ldr	r3, .L28+4
 559 00dc 1B68     		ldr	r3, [r3]
 560 00de 0133     		adds	r3, r3, #1
 561 00e0 6A4A     		ldr	r2, .L28+4
 562 00e2 1360     		str	r3, [r2]
 563 00e4 1EE0     		b	.L18
ARM GAS  /tmp/ccPMaRTI.s 			page 14


 564              	.L21:
 190:Src/motor.c   **** 
 191:Src/motor.c   ****           }
 192:Src/motor.c   ****           else if(phase  == 4)
 565              		.loc 1 192 0
 566 00e6 694B     		ldr	r3, .L28+4
 567 00e8 1B68     		ldr	r3, [r3]
 568 00ea 042B     		cmp	r3, #4
 569 00ec 1AD1     		bne	.L18
 193:Src/motor.c   ****           {
 194:Src/motor.c   **** 
 195:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 570              		.loc 1 195 0
 571 00ee 0122     		movs	r2, #1
 572 00f0 4FF40061 		mov	r1, #2048
 573 00f4 6648     		ldr	r0, .L28+8
 574 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 575              		.loc 1 196 0
 576 00fa 0022     		movs	r2, #0
 577 00fc 4FF48061 		mov	r1, #1024
 578 0100 6348     		ldr	r0, .L28+8
 579 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197:Src/motor.c   **** 
 198:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 580              		.loc 1 198 0
 581 0106 0122     		movs	r2, #1
 582 0108 4FF40051 		mov	r1, #8192
 583 010c 6048     		ldr	r0, .L28+8
 584 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 199:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 585              		.loc 1 199 0
 586 0112 0022     		movs	r2, #0
 587 0114 4FF48051 		mov	r1, #4096
 588 0118 5D48     		ldr	r0, .L28+8
 589 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 200:Src/motor.c   ****               phase  = 1;
 590              		.loc 1 200 0
 591 011e 5B4B     		ldr	r3, .L28+4
 592 0120 0122     		movs	r2, #1
 593 0122 1A60     		str	r2, [r3]
 594              	.L18:
 201:Src/motor.c   **** 
 202:Src/motor.c   ****           }
 203:Src/motor.c   **** 
 204:Src/motor.c   **** 
 205:Src/motor.c   ****     }
 206:Src/motor.c   **** 
 207:Src/motor.c   ****     if(Direction == BACKWARD)
 595              		.loc 1 207 0
 596 0124 7B68     		ldr	r3, [r7, #4]
 597 0126 022B     		cmp	r3, #2
 598 0128 40F08A80 		bne	.L22
 208:Src/motor.c   ****     {
 209:Src/motor.c   **** 
 210:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP2_GPIO_Port, ENABLE_STEP2_PIN,GPIO_PIN_SET);
 599              		.loc 1 210 0
ARM GAS  /tmp/ccPMaRTI.s 			page 15


 600 012c 0122     		movs	r2, #1
 601 012e 2021     		movs	r1, #32
 602 0130 5548     		ldr	r0, .L28
 603 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
 211:Src/motor.c   **** 
 212:Src/motor.c   **** 
 213:Src/motor.c   ****         if(phase  == 1)
 604              		.loc 1 213 0
 605 0136 554B     		ldr	r3, .L28+4
 606 0138 1B68     		ldr	r3, [r3]
 607 013a 012B     		cmp	r3, #1
 608 013c 1DD1     		bne	.L23
 214:Src/motor.c   ****         {
 215:Src/motor.c   **** 
 216:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 609              		.loc 1 216 0
 610 013e 0122     		movs	r2, #1
 611 0140 4FF40061 		mov	r1, #2048
 612 0144 5248     		ldr	r0, .L28+8
 613 0146 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 614              		.loc 1 217 0
 615 014a 0022     		movs	r2, #0
 616 014c 4FF48061 		mov	r1, #1024
 617 0150 4F48     		ldr	r0, .L28+8
 618 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 218:Src/motor.c   **** 
 219:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 619              		.loc 1 219 0
 620 0156 0122     		movs	r2, #1
 621 0158 4FF40051 		mov	r1, #8192
 622 015c 4C48     		ldr	r0, .L28+8
 623 015e FFF7FEFF 		bl	HAL_GPIO_WritePin
 220:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 624              		.loc 1 220 0
 625 0162 0022     		movs	r2, #0
 626 0164 4FF48051 		mov	r1, #4096
 627 0168 4948     		ldr	r0, .L28+8
 628 016a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221:Src/motor.c   **** 
 222:Src/motor.c   **** 
 223:Src/motor.c   ****             phase ++;
 629              		.loc 1 223 0
 630 016e 474B     		ldr	r3, .L28+4
 631 0170 1B68     		ldr	r3, [r3]
 632 0172 0133     		adds	r3, r3, #1
 633 0174 454A     		ldr	r2, .L28+4
 634 0176 1360     		str	r3, [r2]
 635 0178 62E0     		b	.L22
 636              	.L23:
 224:Src/motor.c   **** 
 225:Src/motor.c   ****         }
 226:Src/motor.c   ****         else if(phase  == 2)
 637              		.loc 1 226 0
 638 017a 444B     		ldr	r3, .L28+4
 639 017c 1B68     		ldr	r3, [r3]
 640 017e 022B     		cmp	r3, #2
ARM GAS  /tmp/ccPMaRTI.s 			page 16


 641 0180 1DD1     		bne	.L24
 227:Src/motor.c   ****         {
 228:Src/motor.c   **** 
 229:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 642              		.loc 1 229 0
 643 0182 0122     		movs	r2, #1
 644 0184 4FF40061 		mov	r1, #2048
 645 0188 4148     		ldr	r0, .L28+8
 646 018a FFF7FEFF 		bl	HAL_GPIO_WritePin
 230:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 647              		.loc 1 230 0
 648 018e 0022     		movs	r2, #0
 649 0190 4FF48061 		mov	r1, #1024
 650 0194 3E48     		ldr	r0, .L28+8
 651 0196 FFF7FEFF 		bl	HAL_GPIO_WritePin
 231:Src/motor.c   **** 
 232:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 652              		.loc 1 232 0
 653 019a 0122     		movs	r2, #1
 654 019c 4FF48051 		mov	r1, #4096
 655 01a0 3B48     		ldr	r0, .L28+8
 656 01a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 233:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 657              		.loc 1 233 0
 658 01a6 0022     		movs	r2, #0
 659 01a8 4FF40051 		mov	r1, #8192
 660 01ac 3848     		ldr	r0, .L28+8
 661 01ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 234:Src/motor.c   **** 
 235:Src/motor.c   **** 
 236:Src/motor.c   ****             phase ++;
 662              		.loc 1 236 0
 663 01b2 364B     		ldr	r3, .L28+4
 664 01b4 1B68     		ldr	r3, [r3]
 665 01b6 0133     		adds	r3, r3, #1
 666 01b8 344A     		ldr	r2, .L28+4
 667 01ba 1360     		str	r3, [r2]
 668 01bc 40E0     		b	.L22
 669              	.L24:
 237:Src/motor.c   **** 
 238:Src/motor.c   ****         }
 239:Src/motor.c   ****         else if(phase  == 3)
 670              		.loc 1 239 0
 671 01be 334B     		ldr	r3, .L28+4
 672 01c0 1B68     		ldr	r3, [r3]
 673 01c2 032B     		cmp	r3, #3
 674 01c4 1DD1     		bne	.L25
 240:Src/motor.c   ****         {
 241:Src/motor.c   **** 
 242:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 675              		.loc 1 242 0
 676 01c6 0122     		movs	r2, #1
 677 01c8 4FF48061 		mov	r1, #1024
 678 01cc 3048     		ldr	r0, .L28+8
 679 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 243:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 680              		.loc 1 243 0
ARM GAS  /tmp/ccPMaRTI.s 			page 17


 681 01d2 0022     		movs	r2, #0
 682 01d4 4FF40061 		mov	r1, #2048
 683 01d8 2D48     		ldr	r0, .L28+8
 684 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 244:Src/motor.c   **** 
 245:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 685              		.loc 1 245 0
 686 01de 0122     		movs	r2, #1
 687 01e0 4FF48051 		mov	r1, #4096
 688 01e4 2A48     		ldr	r0, .L28+8
 689 01e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 246:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 690              		.loc 1 246 0
 691 01ea 0022     		movs	r2, #0
 692 01ec 4FF40051 		mov	r1, #8192
 693 01f0 2748     		ldr	r0, .L28+8
 694 01f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 247:Src/motor.c   **** 
 248:Src/motor.c   ****             phase ++;
 695              		.loc 1 248 0
 696 01f6 254B     		ldr	r3, .L28+4
 697 01f8 1B68     		ldr	r3, [r3]
 698 01fa 0133     		adds	r3, r3, #1
 699 01fc 234A     		ldr	r2, .L28+4
 700 01fe 1360     		str	r3, [r2]
 701 0200 1EE0     		b	.L22
 702              	.L25:
 249:Src/motor.c   **** 
 250:Src/motor.c   ****         }
 251:Src/motor.c   ****         else if(phase  == 4)
 703              		.loc 1 251 0
 704 0202 224B     		ldr	r3, .L28+4
 705 0204 1B68     		ldr	r3, [r3]
 706 0206 042B     		cmp	r3, #4
 707 0208 1AD1     		bne	.L22
 252:Src/motor.c   ****         {
 253:Src/motor.c   **** 
 254:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 708              		.loc 1 254 0
 709 020a 0122     		movs	r2, #1
 710 020c 4FF48061 		mov	r1, #1024
 711 0210 1F48     		ldr	r0, .L28+8
 712 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 255:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 713              		.loc 1 255 0
 714 0216 0022     		movs	r2, #0
 715 0218 4FF40061 		mov	r1, #2048
 716 021c 1C48     		ldr	r0, .L28+8
 717 021e FFF7FEFF 		bl	HAL_GPIO_WritePin
 256:Src/motor.c   **** 
 257:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 718              		.loc 1 257 0
 719 0222 0122     		movs	r2, #1
 720 0224 4FF40051 		mov	r1, #8192
 721 0228 1948     		ldr	r0, .L28+8
 722 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 258:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccPMaRTI.s 			page 18


 723              		.loc 1 258 0
 724 022e 0022     		movs	r2, #0
 725 0230 4FF48051 		mov	r1, #4096
 726 0234 1648     		ldr	r0, .L28+8
 727 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 259:Src/motor.c   ****             phase  = 1;
 728              		.loc 1 259 0
 729 023a 144B     		ldr	r3, .L28+4
 730 023c 0122     		movs	r2, #1
 731 023e 1A60     		str	r2, [r3]
 732              	.L22:
 260:Src/motor.c   **** 
 261:Src/motor.c   ****         }
 262:Src/motor.c   **** 
 263:Src/motor.c   ****     }
 264:Src/motor.c   **** 
 265:Src/motor.c   ****     if(Direction == STOP)
 733              		.loc 1 265 0
 734 0240 7B68     		ldr	r3, [r7, #4]
 735 0242 002B     		cmp	r3, #0
 736 0244 1CD1     		bne	.L27
 266:Src/motor.c   ****     {
 267:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP2_GPIO_Port, ENABLE_STEP2_PIN,GPIO_PIN_SET);
 737              		.loc 1 267 0
 738 0246 0122     		movs	r2, #1
 739 0248 2021     		movs	r1, #32
 740 024a 0F48     		ldr	r0, .L28
 741 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 268:Src/motor.c   **** 
 269:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 742              		.loc 1 269 0
 743 0250 0022     		movs	r2, #0
 744 0252 4FF48061 		mov	r1, #1024
 745 0256 0E48     		ldr	r0, .L28+8
 746 0258 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 747              		.loc 1 270 0
 748 025c 0022     		movs	r2, #0
 749 025e 4FF40061 		mov	r1, #2048
 750 0262 0B48     		ldr	r0, .L28+8
 751 0264 FFF7FEFF 		bl	HAL_GPIO_WritePin
 271:Src/motor.c   **** 
 272:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 752              		.loc 1 272 0
 753 0268 0022     		movs	r2, #0
 754 026a 4FF40051 		mov	r1, #8192
 755 026e 0848     		ldr	r0, .L28+8
 756 0270 FFF7FEFF 		bl	HAL_GPIO_WritePin
 273:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 757              		.loc 1 273 0
 758 0274 0022     		movs	r2, #0
 759 0276 4FF48051 		mov	r1, #4096
 760 027a 0548     		ldr	r0, .L28+8
 761 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 762              	.L27:
 274:Src/motor.c   ****     }
 275:Src/motor.c   **** 
ARM GAS  /tmp/ccPMaRTI.s 			page 19


 276:Src/motor.c   **** }
 763              		.loc 1 276 0
 764 0280 00BF     		nop
 765 0282 0837     		adds	r7, r7, #8
 766              	.LCFI10:
 767              		.cfi_def_cfa_offset 8
 768 0284 BD46     		mov	sp, r7
 769              	.LCFI11:
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0286 80BD     		pop	{r7, pc}
 773              	.L29:
 774              		.align	2
 775              	.L28:
 776 0288 00080240 		.word	1073874944
 777 028c 00000000 		.word	phase.9736
 778 0290 000C0240 		.word	1073875968
 779              		.cfi_endproc
 780              	.LFE140:
 782              		.section	.data.phase.9732,"aw",%progbits
 783              		.align	2
 786              	phase.9732:
 787 0000 01000000 		.word	1
 788              		.section	.data.phase.9736,"aw",%progbits
 789              		.align	2
 792              	phase.9736:
 793 0000 01000000 		.word	1
 794              		.text
 795              	.Letext0:
 796              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdint-gcc.h"
 797              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 798              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 799              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 800              		.file 6 "/usr/include/newlib/sys/lock.h"
 801              		.file 7 "/usr/include/newlib/sys/_types.h"
 802              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 803              		.file 9 "/usr/include/newlib/sys/reent.h"
 804              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 805              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 806              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 807              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 808              		.file 14 "Inc/motor.h"
 809              		.file 15 "Inc/tim.h"
ARM GAS  /tmp/ccPMaRTI.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 motor.c
                            *COM*:0000000000000001 setting_enable
                            *COM*:0000000000000014 motor1
                            *COM*:0000000000000014 motor2
                            *COM*:0000000000000010 servo1
                            *COM*:0000000000000010 servo2
     /tmp/ccPMaRTI.s:27     .rodata.reductor_coefficient:0000000000000000 reductor_coefficient
     /tmp/ccPMaRTI.s:24     .rodata.reductor_coefficient:0000000000000000 $d
     /tmp/ccPMaRTI.s:34     .data.step_num:0000000000000000 step_num
     /tmp/ccPMaRTI.s:31     .data.step_num:0000000000000000 $d
     /tmp/ccPMaRTI.s:41     .bss.counter:0000000000000000 counter
     /tmp/ccPMaRTI.s:38     .bss.counter:0000000000000000 $d
     /tmp/ccPMaRTI.s:44     .text.motorInit:0000000000000000 $t
     /tmp/ccPMaRTI.s:51     .text.motorInit:0000000000000000 motorInit
     /tmp/ccPMaRTI.s:75     .text.motorInit:0000000000000010 $d
     /tmp/ccPMaRTI.s:80     .text.motor1Drive:0000000000000000 $t
     /tmp/ccPMaRTI.s:87     .text.motor1Drive:0000000000000000 motor1Drive
     /tmp/ccPMaRTI.s:424    .text.motor1Drive:0000000000000264 $d
     /tmp/ccPMaRTI.s:786    .data.phase.9732:0000000000000000 phase.9732
     /tmp/ccPMaRTI.s:432    .text.motor2Drive:0000000000000000 $t
     /tmp/ccPMaRTI.s:439    .text.motor2Drive:0000000000000000 motor2Drive
     /tmp/ccPMaRTI.s:776    .text.motor2Drive:0000000000000288 $d
     /tmp/ccPMaRTI.s:792    .data.phase.9736:0000000000000000 phase.9736
     /tmp/ccPMaRTI.s:783    .data.phase.9732:0000000000000000 $d
     /tmp/ccPMaRTI.s:789    .data.phase.9736:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Start_IT
htim2
HAL_GPIO_WritePin
