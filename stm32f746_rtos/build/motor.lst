ARM GAS  /tmp/ccPBDNly.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	setting_enable,1,1
  18              		.comm	motor1,16,4
  19              		.comm	motor2,16,4
  20              		.comm	motor3,16,4
  21              		.comm	motor4,16,4
  22              		.comm	servo1,16,4
  23              		.comm	servo2,16,4
  24              		.global	reductor_coefficient
  25              		.section	.rodata.reductor_coefficient,"a",%progbits
  26              		.align	2
  29              	reductor_coefficient:
  30 0000 2C010000 		.word	300
  31              		.global	step_num
  32              		.section	.data.step_num,"aw",%progbits
  33              		.align	2
  36              	step_num:
  37 0000 88130000 		.word	5000
  38              		.global	counter
  39              		.section	.bss.counter,"aw",%nobits
  40              		.align	2
  43              	counter:
  44 0000 00000000 		.space	4
  45              		.section	.text.motorInit,"ax",%progbits
  46              		.align	1
  47              		.global	motorInit
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	motorInit:
  54              	.LFB138:
  55              		.file 1 "Src/motor.c"
   1:Src/motor.c   **** 
   2:Src/motor.c   **** 
   3:Src/motor.c   **** #include "motor.h"
   4:Src/motor.c   **** #include "main.h"
   5:Src/motor.c   **** #include "gpio.h"
   6:Src/motor.c   **** #include "tim.h"
   7:Src/motor.c   **** 
   8:Src/motor.c   **** const int reductor_coefficient = 300; // 500/1.8 = 355.55555
   9:Src/motor.c   **** 
ARM GAS  /tmp/ccPBDNly.s 			page 2


  10:Src/motor.c   **** uint32_t step_num = 5000;
  11:Src/motor.c   **** uint32_t counter = 0;
  12:Src/motor.c   **** 
  13:Src/motor.c   **** void motorInit()
  14:Src/motor.c   **** {
  56              		.loc 1 14 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0000 80B5     		push	{r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI1:
  67              		.cfi_def_cfa_register 7
  15:Src/motor.c   ****     HAL_TIM_Base_Start_IT(&htim2);
  68              		.loc 1 15 0
  69 0004 0248     		ldr	r0, .L2
  70 0006 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  16:Src/motor.c   **** }
  71              		.loc 1 16 0
  72 000a 00BF     		nop
  73 000c 80BD     		pop	{r7, pc}
  74              	.L3:
  75 000e 00BF     		.align	2
  76              	.L2:
  77 0010 00000000 		.word	htim2
  78              		.cfi_endproc
  79              	.LFE138:
  81              		.section	.text.motor1Drive,"ax",%progbits
  82              		.align	1
  83              		.global	motor1Drive
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	motor1Drive:
  90              	.LFB139:
  17:Src/motor.c   **** 
  18:Src/motor.c   **** void  motor1Drive(int Direction)
  19:Src/motor.c   **** {
  91              		.loc 1 19 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 8
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0000 80B5     		push	{r7, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 16
 103 0004 00AF     		add	r7, sp, #0
 104              	.LCFI4:
ARM GAS  /tmp/ccPBDNly.s 			page 3


 105              		.cfi_def_cfa_register 7
 106 0006 7860     		str	r0, [r7, #4]
  20:Src/motor.c   ****     static volatile int phase = 1;
  21:Src/motor.c   **** 
  22:Src/motor.c   ****     if(Direction == FORWARD)
 107              		.loc 1 22 0
 108 0008 7B68     		ldr	r3, [r7, #4]
 109 000a 012B     		cmp	r3, #1
 110 000c 40F08A80 		bne	.L5
  23:Src/motor.c   ****     {
  24:Src/motor.c   **** 
  25:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP1_GPIO_Port, ENABLE_STEP1_PIN,GPIO_PIN_SET);
 111              		.loc 1 25 0
 112 0010 0122     		movs	r2, #1
 113 0012 1021     		movs	r1, #16
 114 0014 9C48     		ldr	r0, .L15
 115 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  26:Src/motor.c   **** 
  27:Src/motor.c   ****           if(phase  == 1)
 116              		.loc 1 27 0
 117 001a 9C4B     		ldr	r3, .L15+4
 118 001c 1B68     		ldr	r3, [r3]
 119 001e 012B     		cmp	r3, #1
 120 0020 1DD1     		bne	.L6
  28:Src/motor.c   ****           {
  29:Src/motor.c   **** 
  30:Src/motor.c   **** 
  31:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_SET);
 121              		.loc 1 31 0
 122 0022 0122     		movs	r2, #1
 123 0024 4FF40051 		mov	r1, #8192
 124 0028 9948     		ldr	r0, .L15+8
 125 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  32:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 126              		.loc 1 32 0
 127 002e 0022     		movs	r2, #0
 128 0030 4FF48041 		mov	r1, #16384
 129 0034 9648     		ldr	r0, .L15+8
 130 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
  33:Src/motor.c   **** 
  34:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_SET);
 131              		.loc 1 34 0
 132 003a 0122     		movs	r2, #1
 133 003c 4FF48071 		mov	r1, #256
 134 0040 9448     		ldr	r0, .L15+12
 135 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  35:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 136              		.loc 1 35 0
 137 0046 0022     		movs	r2, #0
 138 0048 4FF40041 		mov	r1, #32768
 139 004c 9048     		ldr	r0, .L15+8
 140 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  36:Src/motor.c   ****               phase ++;
 141              		.loc 1 36 0
 142 0052 8E4B     		ldr	r3, .L15+4
 143 0054 1B68     		ldr	r3, [r3]
 144 0056 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccPBDNly.s 			page 4


 145 0058 8C4A     		ldr	r2, .L15+4
 146 005a 1360     		str	r3, [r2]
 147 005c 62E0     		b	.L5
 148              	.L6:
  37:Src/motor.c   **** 
  38:Src/motor.c   ****           }
  39:Src/motor.c   ****           else if(phase  == 2)
 149              		.loc 1 39 0
 150 005e 8B4B     		ldr	r3, .L15+4
 151 0060 1B68     		ldr	r3, [r3]
 152 0062 022B     		cmp	r3, #2
 153 0064 1DD1     		bne	.L7
  40:Src/motor.c   ****           {
  41:Src/motor.c   **** 
  42:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_SET);
 154              		.loc 1 42 0
 155 0066 0122     		movs	r2, #1
 156 0068 4FF40051 		mov	r1, #8192
 157 006c 8848     		ldr	r0, .L15+8
 158 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
  43:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 159              		.loc 1 43 0
 160 0072 0022     		movs	r2, #0
 161 0074 4FF48041 		mov	r1, #16384
 162 0078 8548     		ldr	r0, .L15+8
 163 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
  44:Src/motor.c   **** 
  45:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_SET);
 164              		.loc 1 45 0
 165 007e 0122     		movs	r2, #1
 166 0080 4FF40041 		mov	r1, #32768
 167 0084 8248     		ldr	r0, .L15+8
 168 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
  46:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
 169              		.loc 1 46 0
 170 008a 0022     		movs	r2, #0
 171 008c 4FF48071 		mov	r1, #256
 172 0090 8048     		ldr	r0, .L15+12
 173 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
  47:Src/motor.c   ****               phase ++;
 174              		.loc 1 47 0
 175 0096 7D4B     		ldr	r3, .L15+4
 176 0098 1B68     		ldr	r3, [r3]
 177 009a 0133     		adds	r3, r3, #1
 178 009c 7B4A     		ldr	r2, .L15+4
 179 009e 1360     		str	r3, [r2]
 180 00a0 40E0     		b	.L5
 181              	.L7:
  48:Src/motor.c   **** 
  49:Src/motor.c   ****           }
  50:Src/motor.c   ****           else if(phase  == 3)
 182              		.loc 1 50 0
 183 00a2 7A4B     		ldr	r3, .L15+4
 184 00a4 1B68     		ldr	r3, [r3]
 185 00a6 032B     		cmp	r3, #3
 186 00a8 1DD1     		bne	.L8
  51:Src/motor.c   ****           {
ARM GAS  /tmp/ccPBDNly.s 			page 5


  52:Src/motor.c   **** 
  53:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_SET);
 187              		.loc 1 53 0
 188 00aa 0122     		movs	r2, #1
 189 00ac 4FF48041 		mov	r1, #16384
 190 00b0 7748     		ldr	r0, .L15+8
 191 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
  54:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 192              		.loc 1 54 0
 193 00b6 0022     		movs	r2, #0
 194 00b8 4FF40051 		mov	r1, #8192
 195 00bc 7448     		ldr	r0, .L15+8
 196 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
  55:Src/motor.c   **** 
  56:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_SET);
 197              		.loc 1 56 0
 198 00c2 0122     		movs	r2, #1
 199 00c4 4FF40041 		mov	r1, #32768
 200 00c8 7148     		ldr	r0, .L15+8
 201 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
  57:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
 202              		.loc 1 57 0
 203 00ce 0022     		movs	r2, #0
 204 00d0 4FF48071 		mov	r1, #256
 205 00d4 6F48     		ldr	r0, .L15+12
 206 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
  58:Src/motor.c   ****               phase ++;
 207              		.loc 1 58 0
 208 00da 6C4B     		ldr	r3, .L15+4
 209 00dc 1B68     		ldr	r3, [r3]
 210 00de 0133     		adds	r3, r3, #1
 211 00e0 6A4A     		ldr	r2, .L15+4
 212 00e2 1360     		str	r3, [r2]
 213 00e4 1EE0     		b	.L5
 214              	.L8:
  59:Src/motor.c   **** 
  60:Src/motor.c   ****           }
  61:Src/motor.c   ****           else if(phase  == 4)
 215              		.loc 1 61 0
 216 00e6 694B     		ldr	r3, .L15+4
 217 00e8 1B68     		ldr	r3, [r3]
 218 00ea 042B     		cmp	r3, #4
 219 00ec 1AD1     		bne	.L5
  62:Src/motor.c   ****           {
  63:Src/motor.c   **** 
  64:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_SET);
 220              		.loc 1 64 0
 221 00ee 0122     		movs	r2, #1
 222 00f0 4FF48041 		mov	r1, #16384
 223 00f4 6648     		ldr	r0, .L15+8
 224 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
  65:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 225              		.loc 1 65 0
 226 00fa 0022     		movs	r2, #0
 227 00fc 4FF40051 		mov	r1, #8192
 228 0100 6348     		ldr	r0, .L15+8
 229 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccPBDNly.s 			page 6


  66:Src/motor.c   **** 
  67:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_SET);
 230              		.loc 1 67 0
 231 0106 0122     		movs	r2, #1
 232 0108 4FF48071 		mov	r1, #256
 233 010c 6148     		ldr	r0, .L15+12
 234 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
  68:Src/motor.c   ****               HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 235              		.loc 1 68 0
 236 0112 0022     		movs	r2, #0
 237 0114 4FF40041 		mov	r1, #32768
 238 0118 5D48     		ldr	r0, .L15+8
 239 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
  69:Src/motor.c   ****               phase  = 1;
 240              		.loc 1 69 0
 241 011e 5B4B     		ldr	r3, .L15+4
 242 0120 0122     		movs	r2, #1
 243 0122 1A60     		str	r2, [r3]
 244              	.L5:
  70:Src/motor.c   **** 
  71:Src/motor.c   ****           }
  72:Src/motor.c   **** 
  73:Src/motor.c   **** 
  74:Src/motor.c   ****     }
  75:Src/motor.c   **** 
  76:Src/motor.c   ****     if(Direction == BACKWARD)
 245              		.loc 1 76 0
 246 0124 7B68     		ldr	r3, [r7, #4]
 247 0126 022B     		cmp	r3, #2
 248 0128 40F08A80 		bne	.L9
  77:Src/motor.c   ****     {
  78:Src/motor.c   **** 
  79:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP1_GPIO_Port, ENABLE_STEP1_PIN,GPIO_PIN_SET);
 249              		.loc 1 79 0
 250 012c 0122     		movs	r2, #1
 251 012e 1021     		movs	r1, #16
 252 0130 5548     		ldr	r0, .L15
 253 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
  80:Src/motor.c   **** 
  81:Src/motor.c   **** 
  82:Src/motor.c   ****         if(phase  == 1)
 254              		.loc 1 82 0
 255 0136 554B     		ldr	r3, .L15+4
 256 0138 1B68     		ldr	r3, [r3]
 257 013a 012B     		cmp	r3, #1
 258 013c 1DD1     		bne	.L10
  83:Src/motor.c   ****         {
  84:Src/motor.c   **** 
  85:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_SET);
 259              		.loc 1 85 0
 260 013e 0122     		movs	r2, #1
 261 0140 4FF48041 		mov	r1, #16384
 262 0144 5248     		ldr	r0, .L15+8
 263 0146 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 264              		.loc 1 86 0
 265 014a 0022     		movs	r2, #0
ARM GAS  /tmp/ccPBDNly.s 			page 7


 266 014c 4FF40051 		mov	r1, #8192
 267 0150 4F48     		ldr	r0, .L15+8
 268 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
  87:Src/motor.c   **** 
  88:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_SET);
 269              		.loc 1 88 0
 270 0156 0122     		movs	r2, #1
 271 0158 4FF48071 		mov	r1, #256
 272 015c 4D48     		ldr	r0, .L15+12
 273 015e FFF7FEFF 		bl	HAL_GPIO_WritePin
  89:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 274              		.loc 1 89 0
 275 0162 0022     		movs	r2, #0
 276 0164 4FF40041 		mov	r1, #32768
 277 0168 4948     		ldr	r0, .L15+8
 278 016a FFF7FEFF 		bl	HAL_GPIO_WritePin
  90:Src/motor.c   **** 
  91:Src/motor.c   **** 
  92:Src/motor.c   ****             phase ++;
 279              		.loc 1 92 0
 280 016e 474B     		ldr	r3, .L15+4
 281 0170 1B68     		ldr	r3, [r3]
 282 0172 0133     		adds	r3, r3, #1
 283 0174 454A     		ldr	r2, .L15+4
 284 0176 1360     		str	r3, [r2]
 285 0178 62E0     		b	.L9
 286              	.L10:
  93:Src/motor.c   **** 
  94:Src/motor.c   ****         }
  95:Src/motor.c   ****         else if(phase  == 2)
 287              		.loc 1 95 0
 288 017a 444B     		ldr	r3, .L15+4
 289 017c 1B68     		ldr	r3, [r3]
 290 017e 022B     		cmp	r3, #2
 291 0180 1DD1     		bne	.L11
  96:Src/motor.c   ****         {
  97:Src/motor.c   **** 
  98:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_SET);
 292              		.loc 1 98 0
 293 0182 0122     		movs	r2, #1
 294 0184 4FF48041 		mov	r1, #16384
 295 0188 4148     		ldr	r0, .L15+8
 296 018a FFF7FEFF 		bl	HAL_GPIO_WritePin
  99:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 297              		.loc 1 99 0
 298 018e 0022     		movs	r2, #0
 299 0190 4FF40051 		mov	r1, #8192
 300 0194 3E48     		ldr	r0, .L15+8
 301 0196 FFF7FEFF 		bl	HAL_GPIO_WritePin
 100:Src/motor.c   **** 
 101:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_SET);
 302              		.loc 1 101 0
 303 019a 0122     		movs	r2, #1
 304 019c 4FF40041 		mov	r1, #32768
 305 01a0 3B48     		ldr	r0, .L15+8
 306 01a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccPBDNly.s 			page 8


 307              		.loc 1 102 0
 308 01a6 0022     		movs	r2, #0
 309 01a8 4FF48071 		mov	r1, #256
 310 01ac 3948     		ldr	r0, .L15+12
 311 01ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 103:Src/motor.c   **** 
 104:Src/motor.c   **** 
 105:Src/motor.c   ****             phase ++;
 312              		.loc 1 105 0
 313 01b2 364B     		ldr	r3, .L15+4
 314 01b4 1B68     		ldr	r3, [r3]
 315 01b6 0133     		adds	r3, r3, #1
 316 01b8 344A     		ldr	r2, .L15+4
 317 01ba 1360     		str	r3, [r2]
 318 01bc 40E0     		b	.L9
 319              	.L11:
 106:Src/motor.c   **** 
 107:Src/motor.c   ****         }
 108:Src/motor.c   ****         else if(phase  == 3)
 320              		.loc 1 108 0
 321 01be 334B     		ldr	r3, .L15+4
 322 01c0 1B68     		ldr	r3, [r3]
 323 01c2 032B     		cmp	r3, #3
 324 01c4 1DD1     		bne	.L12
 109:Src/motor.c   ****         {
 110:Src/motor.c   **** 
 111:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_SET);
 325              		.loc 1 111 0
 326 01c6 0122     		movs	r2, #1
 327 01c8 4FF40051 		mov	r1, #8192
 328 01cc 3048     		ldr	r0, .L15+8
 329 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 112:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 330              		.loc 1 112 0
 331 01d2 0022     		movs	r2, #0
 332 01d4 4FF48041 		mov	r1, #16384
 333 01d8 2D48     		ldr	r0, .L15+8
 334 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 113:Src/motor.c   **** 
 114:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_SET);
 335              		.loc 1 114 0
 336 01de 0122     		movs	r2, #1
 337 01e0 4FF40041 		mov	r1, #32768
 338 01e4 2A48     		ldr	r0, .L15+8
 339 01e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
 340              		.loc 1 115 0
 341 01ea 0022     		movs	r2, #0
 342 01ec 4FF48071 		mov	r1, #256
 343 01f0 2848     		ldr	r0, .L15+12
 344 01f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116:Src/motor.c   **** 
 117:Src/motor.c   ****             phase ++;
 345              		.loc 1 117 0
 346 01f6 254B     		ldr	r3, .L15+4
 347 01f8 1B68     		ldr	r3, [r3]
 348 01fa 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccPBDNly.s 			page 9


 349 01fc 234A     		ldr	r2, .L15+4
 350 01fe 1360     		str	r3, [r2]
 351 0200 1EE0     		b	.L9
 352              	.L12:
 118:Src/motor.c   **** 
 119:Src/motor.c   ****         }
 120:Src/motor.c   ****         else if(phase  == 4)
 353              		.loc 1 120 0
 354 0202 224B     		ldr	r3, .L15+4
 355 0204 1B68     		ldr	r3, [r3]
 356 0206 042B     		cmp	r3, #4
 357 0208 1AD1     		bne	.L9
 121:Src/motor.c   ****         {
 122:Src/motor.c   **** 
 123:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_SET);
 358              		.loc 1 123 0
 359 020a 0122     		movs	r2, #1
 360 020c 4FF40051 		mov	r1, #8192
 361 0210 1F48     		ldr	r0, .L15+8
 362 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 363              		.loc 1 124 0
 364 0216 0022     		movs	r2, #0
 365 0218 4FF48041 		mov	r1, #16384
 366 021c 1C48     		ldr	r0, .L15+8
 367 021e FFF7FEFF 		bl	HAL_GPIO_WritePin
 125:Src/motor.c   **** 
 126:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_SET);
 368              		.loc 1 126 0
 369 0222 0122     		movs	r2, #1
 370 0224 4FF48071 		mov	r1, #256
 371 0228 1A48     		ldr	r0, .L15+12
 372 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 127:Src/motor.c   ****             HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 373              		.loc 1 127 0
 374 022e 0022     		movs	r2, #0
 375 0230 4FF40041 		mov	r1, #32768
 376 0234 1648     		ldr	r0, .L15+8
 377 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 128:Src/motor.c   ****             phase  = 1;
 378              		.loc 1 128 0
 379 023a 144B     		ldr	r3, .L15+4
 380 023c 0122     		movs	r2, #1
 381 023e 1A60     		str	r2, [r3]
 382              	.L9:
 129:Src/motor.c   **** 
 130:Src/motor.c   ****         }
 131:Src/motor.c   **** 
 132:Src/motor.c   ****     }
 133:Src/motor.c   **** 
 134:Src/motor.c   ****     if(Direction == STOP)
 383              		.loc 1 134 0
 384 0240 7B68     		ldr	r3, [r7, #4]
 385 0242 002B     		cmp	r3, #0
 386 0244 1CD1     		bne	.L14
 135:Src/motor.c   ****     {
 136:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP1_GPIO_Port, ENABLE_STEP1_PIN,GPIO_PIN_RESET);
ARM GAS  /tmp/ccPBDNly.s 			page 10


 387              		.loc 1 136 0
 388 0246 0022     		movs	r2, #0
 389 0248 1021     		movs	r1, #16
 390 024a 0F48     		ldr	r0, .L15
 391 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Src/motor.c   **** 
 138:Src/motor.c   ****         HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 392              		.loc 1 138 0
 393 0250 0022     		movs	r2, #0
 394 0252 4FF40051 		mov	r1, #8192
 395 0256 0E48     		ldr	r0, .L15+8
 396 0258 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139:Src/motor.c   ****         HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 397              		.loc 1 139 0
 398 025c 0022     		movs	r2, #0
 399 025e 4FF48041 		mov	r1, #16384
 400 0262 0B48     		ldr	r0, .L15+8
 401 0264 FFF7FEFF 		bl	HAL_GPIO_WritePin
 140:Src/motor.c   **** 
 141:Src/motor.c   ****         HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
 402              		.loc 1 141 0
 403 0268 0022     		movs	r2, #0
 404 026a 4FF48071 		mov	r1, #256
 405 026e 0948     		ldr	r0, .L15+12
 406 0270 FFF7FEFF 		bl	HAL_GPIO_WritePin
 142:Src/motor.c   ****         HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 407              		.loc 1 142 0
 408 0274 0022     		movs	r2, #0
 409 0276 4FF40041 		mov	r1, #32768
 410 027a 0548     		ldr	r0, .L15+8
 411 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 412              	.L14:
 143:Src/motor.c   ****     }
 144:Src/motor.c   **** 
 145:Src/motor.c   **** 
 146:Src/motor.c   **** }
 413              		.loc 1 146 0
 414 0280 00BF     		nop
 415 0282 0837     		adds	r7, r7, #8
 416              	.LCFI5:
 417              		.cfi_def_cfa_offset 8
 418 0284 BD46     		mov	sp, r7
 419              	.LCFI6:
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 0286 80BD     		pop	{r7, pc}
 423              	.L16:
 424              		.align	2
 425              	.L15:
 426 0288 00080240 		.word	1073874944
 427 028c 00000000 		.word	phase.9717
 428 0290 00040240 		.word	1073873920
 429 0294 000C0240 		.word	1073875968
 430              		.cfi_endproc
 431              	.LFE139:
 433              		.section	.text.motor2Drive,"ax",%progbits
 434              		.align	1
ARM GAS  /tmp/ccPBDNly.s 			page 11


 435              		.global	motor2Drive
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	motor2Drive:
 442              	.LFB140:
 147:Src/motor.c   **** 
 148:Src/motor.c   **** void motor2Drive(int Direction)
 149:Src/motor.c   **** {
 443              		.loc 1 149 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              	.LCFI7:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 82B0     		sub	sp, sp, #8
 453              	.LCFI8:
 454              		.cfi_def_cfa_offset 16
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI9:
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 150:Src/motor.c   **** 
 151:Src/motor.c   ****     static volatile int phase = 1;
 152:Src/motor.c   **** 
 153:Src/motor.c   ****     if(Direction == FORWARD)
 459              		.loc 1 153 0
 460 0008 7B68     		ldr	r3, [r7, #4]
 461 000a 012B     		cmp	r3, #1
 462 000c 40F08A80 		bne	.L18
 154:Src/motor.c   ****     {
 155:Src/motor.c   **** 
 156:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP2_GPIO_Port, ENABLE_STEP2_PIN,GPIO_PIN_SET);
 463              		.loc 1 156 0
 464 0010 0122     		movs	r2, #1
 465 0012 2021     		movs	r1, #32
 466 0014 9C48     		ldr	r0, .L28
 467 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157:Src/motor.c   **** 
 158:Src/motor.c   ****           if(phase  == 1)
 468              		.loc 1 158 0
 469 001a 9C4B     		ldr	r3, .L28+4
 470 001c 1B68     		ldr	r3, [r3]
 471 001e 012B     		cmp	r3, #1
 472 0020 1DD1     		bne	.L19
 159:Src/motor.c   ****           {
 160:Src/motor.c   **** 
 161:Src/motor.c   **** 
 162:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 473              		.loc 1 162 0
 474 0022 0122     		movs	r2, #1
 475 0024 4FF48061 		mov	r1, #1024
 476 0028 9948     		ldr	r0, .L28+8
ARM GAS  /tmp/ccPBDNly.s 			page 12


 477 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 163:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 478              		.loc 1 163 0
 479 002e 0022     		movs	r2, #0
 480 0030 4FF40061 		mov	r1, #2048
 481 0034 9648     		ldr	r0, .L28+8
 482 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164:Src/motor.c   **** 
 165:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 483              		.loc 1 165 0
 484 003a 0122     		movs	r2, #1
 485 003c 4FF40051 		mov	r1, #8192
 486 0040 9348     		ldr	r0, .L28+8
 487 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 488              		.loc 1 166 0
 489 0046 0022     		movs	r2, #0
 490 0048 4FF48051 		mov	r1, #4096
 491 004c 9048     		ldr	r0, .L28+8
 492 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 167:Src/motor.c   ****               phase ++;
 493              		.loc 1 167 0
 494 0052 8E4B     		ldr	r3, .L28+4
 495 0054 1B68     		ldr	r3, [r3]
 496 0056 0133     		adds	r3, r3, #1
 497 0058 8C4A     		ldr	r2, .L28+4
 498 005a 1360     		str	r3, [r2]
 499 005c 62E0     		b	.L18
 500              	.L19:
 168:Src/motor.c   **** 
 169:Src/motor.c   ****           }
 170:Src/motor.c   ****           else if(phase  == 2)
 501              		.loc 1 170 0
 502 005e 8B4B     		ldr	r3, .L28+4
 503 0060 1B68     		ldr	r3, [r3]
 504 0062 022B     		cmp	r3, #2
 505 0064 1DD1     		bne	.L20
 171:Src/motor.c   ****           {
 172:Src/motor.c   **** 
 173:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 506              		.loc 1 173 0
 507 0066 0122     		movs	r2, #1
 508 0068 4FF48061 		mov	r1, #1024
 509 006c 8848     		ldr	r0, .L28+8
 510 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 174:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 511              		.loc 1 174 0
 512 0072 0022     		movs	r2, #0
 513 0074 4FF40061 		mov	r1, #2048
 514 0078 8548     		ldr	r0, .L28+8
 515 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 175:Src/motor.c   **** 
 176:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 516              		.loc 1 176 0
 517 007e 0122     		movs	r2, #1
 518 0080 4FF48051 		mov	r1, #4096
 519 0084 8248     		ldr	r0, .L28+8
ARM GAS  /tmp/ccPBDNly.s 			page 13


 520 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 177:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 521              		.loc 1 177 0
 522 008a 0022     		movs	r2, #0
 523 008c 4FF40051 		mov	r1, #8192
 524 0090 7F48     		ldr	r0, .L28+8
 525 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178:Src/motor.c   ****               phase ++;
 526              		.loc 1 178 0
 527 0096 7D4B     		ldr	r3, .L28+4
 528 0098 1B68     		ldr	r3, [r3]
 529 009a 0133     		adds	r3, r3, #1
 530 009c 7B4A     		ldr	r2, .L28+4
 531 009e 1360     		str	r3, [r2]
 532 00a0 40E0     		b	.L18
 533              	.L20:
 179:Src/motor.c   **** 
 180:Src/motor.c   ****           }
 181:Src/motor.c   ****           else if(phase  == 3)
 534              		.loc 1 181 0
 535 00a2 7A4B     		ldr	r3, .L28+4
 536 00a4 1B68     		ldr	r3, [r3]
 537 00a6 032B     		cmp	r3, #3
 538 00a8 1DD1     		bne	.L21
 182:Src/motor.c   ****           {
 183:Src/motor.c   **** 
 184:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 539              		.loc 1 184 0
 540 00aa 0122     		movs	r2, #1
 541 00ac 4FF40061 		mov	r1, #2048
 542 00b0 7748     		ldr	r0, .L28+8
 543 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 185:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 544              		.loc 1 185 0
 545 00b6 0022     		movs	r2, #0
 546 00b8 4FF48061 		mov	r1, #1024
 547 00bc 7448     		ldr	r0, .L28+8
 548 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 186:Src/motor.c   **** 
 187:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 549              		.loc 1 187 0
 550 00c2 0122     		movs	r2, #1
 551 00c4 4FF48051 		mov	r1, #4096
 552 00c8 7148     		ldr	r0, .L28+8
 553 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 188:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 554              		.loc 1 188 0
 555 00ce 0022     		movs	r2, #0
 556 00d0 4FF40051 		mov	r1, #8192
 557 00d4 6E48     		ldr	r0, .L28+8
 558 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189:Src/motor.c   ****               phase ++;
 559              		.loc 1 189 0
 560 00da 6C4B     		ldr	r3, .L28+4
 561 00dc 1B68     		ldr	r3, [r3]
 562 00de 0133     		adds	r3, r3, #1
 563 00e0 6A4A     		ldr	r2, .L28+4
ARM GAS  /tmp/ccPBDNly.s 			page 14


 564 00e2 1360     		str	r3, [r2]
 565 00e4 1EE0     		b	.L18
 566              	.L21:
 190:Src/motor.c   **** 
 191:Src/motor.c   ****           }
 192:Src/motor.c   ****           else if(phase  == 4)
 567              		.loc 1 192 0
 568 00e6 694B     		ldr	r3, .L28+4
 569 00e8 1B68     		ldr	r3, [r3]
 570 00ea 042B     		cmp	r3, #4
 571 00ec 1AD1     		bne	.L18
 193:Src/motor.c   ****           {
 194:Src/motor.c   **** 
 195:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 572              		.loc 1 195 0
 573 00ee 0122     		movs	r2, #1
 574 00f0 4FF40061 		mov	r1, #2048
 575 00f4 6648     		ldr	r0, .L28+8
 576 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 577              		.loc 1 196 0
 578 00fa 0022     		movs	r2, #0
 579 00fc 4FF48061 		mov	r1, #1024
 580 0100 6348     		ldr	r0, .L28+8
 581 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197:Src/motor.c   **** 
 198:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 582              		.loc 1 198 0
 583 0106 0122     		movs	r2, #1
 584 0108 4FF40051 		mov	r1, #8192
 585 010c 6048     		ldr	r0, .L28+8
 586 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 199:Src/motor.c   ****               HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 587              		.loc 1 199 0
 588 0112 0022     		movs	r2, #0
 589 0114 4FF48051 		mov	r1, #4096
 590 0118 5D48     		ldr	r0, .L28+8
 591 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 200:Src/motor.c   ****               phase  = 1;
 592              		.loc 1 200 0
 593 011e 5B4B     		ldr	r3, .L28+4
 594 0120 0122     		movs	r2, #1
 595 0122 1A60     		str	r2, [r3]
 596              	.L18:
 201:Src/motor.c   **** 
 202:Src/motor.c   ****           }
 203:Src/motor.c   **** 
 204:Src/motor.c   **** 
 205:Src/motor.c   ****     }
 206:Src/motor.c   **** 
 207:Src/motor.c   ****     if(Direction == BACKWARD)
 597              		.loc 1 207 0
 598 0124 7B68     		ldr	r3, [r7, #4]
 599 0126 022B     		cmp	r3, #2
 600 0128 40F08A80 		bne	.L22
 208:Src/motor.c   ****     {
 209:Src/motor.c   **** 
ARM GAS  /tmp/ccPBDNly.s 			page 15


 210:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP2_GPIO_Port, ENABLE_STEP2_PIN,GPIO_PIN_SET);
 601              		.loc 1 210 0
 602 012c 0122     		movs	r2, #1
 603 012e 2021     		movs	r1, #32
 604 0130 5548     		ldr	r0, .L28
 605 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
 211:Src/motor.c   **** 
 212:Src/motor.c   **** 
 213:Src/motor.c   ****         if(phase  == 1)
 606              		.loc 1 213 0
 607 0136 554B     		ldr	r3, .L28+4
 608 0138 1B68     		ldr	r3, [r3]
 609 013a 012B     		cmp	r3, #1
 610 013c 1DD1     		bne	.L23
 214:Src/motor.c   ****         {
 215:Src/motor.c   **** 
 216:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 611              		.loc 1 216 0
 612 013e 0122     		movs	r2, #1
 613 0140 4FF40061 		mov	r1, #2048
 614 0144 5248     		ldr	r0, .L28+8
 615 0146 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 616              		.loc 1 217 0
 617 014a 0022     		movs	r2, #0
 618 014c 4FF48061 		mov	r1, #1024
 619 0150 4F48     		ldr	r0, .L28+8
 620 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 218:Src/motor.c   **** 
 219:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 621              		.loc 1 219 0
 622 0156 0122     		movs	r2, #1
 623 0158 4FF40051 		mov	r1, #8192
 624 015c 4C48     		ldr	r0, .L28+8
 625 015e FFF7FEFF 		bl	HAL_GPIO_WritePin
 220:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 626              		.loc 1 220 0
 627 0162 0022     		movs	r2, #0
 628 0164 4FF48051 		mov	r1, #4096
 629 0168 4948     		ldr	r0, .L28+8
 630 016a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221:Src/motor.c   **** 
 222:Src/motor.c   **** 
 223:Src/motor.c   ****             phase ++;
 631              		.loc 1 223 0
 632 016e 474B     		ldr	r3, .L28+4
 633 0170 1B68     		ldr	r3, [r3]
 634 0172 0133     		adds	r3, r3, #1
 635 0174 454A     		ldr	r2, .L28+4
 636 0176 1360     		str	r3, [r2]
 637 0178 62E0     		b	.L22
 638              	.L23:
 224:Src/motor.c   **** 
 225:Src/motor.c   ****         }
 226:Src/motor.c   ****         else if(phase  == 2)
 639              		.loc 1 226 0
 640 017a 444B     		ldr	r3, .L28+4
ARM GAS  /tmp/ccPBDNly.s 			page 16


 641 017c 1B68     		ldr	r3, [r3]
 642 017e 022B     		cmp	r3, #2
 643 0180 1DD1     		bne	.L24
 227:Src/motor.c   ****         {
 228:Src/motor.c   **** 
 229:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 644              		.loc 1 229 0
 645 0182 0122     		movs	r2, #1
 646 0184 4FF40061 		mov	r1, #2048
 647 0188 4148     		ldr	r0, .L28+8
 648 018a FFF7FEFF 		bl	HAL_GPIO_WritePin
 230:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 649              		.loc 1 230 0
 650 018e 0022     		movs	r2, #0
 651 0190 4FF48061 		mov	r1, #1024
 652 0194 3E48     		ldr	r0, .L28+8
 653 0196 FFF7FEFF 		bl	HAL_GPIO_WritePin
 231:Src/motor.c   **** 
 232:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 654              		.loc 1 232 0
 655 019a 0122     		movs	r2, #1
 656 019c 4FF48051 		mov	r1, #4096
 657 01a0 3B48     		ldr	r0, .L28+8
 658 01a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 233:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 659              		.loc 1 233 0
 660 01a6 0022     		movs	r2, #0
 661 01a8 4FF40051 		mov	r1, #8192
 662 01ac 3848     		ldr	r0, .L28+8
 663 01ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 234:Src/motor.c   **** 
 235:Src/motor.c   **** 
 236:Src/motor.c   ****             phase ++;
 664              		.loc 1 236 0
 665 01b2 364B     		ldr	r3, .L28+4
 666 01b4 1B68     		ldr	r3, [r3]
 667 01b6 0133     		adds	r3, r3, #1
 668 01b8 344A     		ldr	r2, .L28+4
 669 01ba 1360     		str	r3, [r2]
 670 01bc 40E0     		b	.L22
 671              	.L24:
 237:Src/motor.c   **** 
 238:Src/motor.c   ****         }
 239:Src/motor.c   ****         else if(phase  == 3)
 672              		.loc 1 239 0
 673 01be 334B     		ldr	r3, .L28+4
 674 01c0 1B68     		ldr	r3, [r3]
 675 01c2 032B     		cmp	r3, #3
 676 01c4 1DD1     		bne	.L25
 240:Src/motor.c   ****         {
 241:Src/motor.c   **** 
 242:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 677              		.loc 1 242 0
 678 01c6 0122     		movs	r2, #1
 679 01c8 4FF48061 		mov	r1, #1024
 680 01cc 3048     		ldr	r0, .L28+8
 681 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccPBDNly.s 			page 17


 243:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 682              		.loc 1 243 0
 683 01d2 0022     		movs	r2, #0
 684 01d4 4FF40061 		mov	r1, #2048
 685 01d8 2D48     		ldr	r0, .L28+8
 686 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 244:Src/motor.c   **** 
 245:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 687              		.loc 1 245 0
 688 01de 0122     		movs	r2, #1
 689 01e0 4FF48051 		mov	r1, #4096
 690 01e4 2A48     		ldr	r0, .L28+8
 691 01e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 246:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 692              		.loc 1 246 0
 693 01ea 0022     		movs	r2, #0
 694 01ec 4FF40051 		mov	r1, #8192
 695 01f0 2748     		ldr	r0, .L28+8
 696 01f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 247:Src/motor.c   **** 
 248:Src/motor.c   ****             phase ++;
 697              		.loc 1 248 0
 698 01f6 254B     		ldr	r3, .L28+4
 699 01f8 1B68     		ldr	r3, [r3]
 700 01fa 0133     		adds	r3, r3, #1
 701 01fc 234A     		ldr	r2, .L28+4
 702 01fe 1360     		str	r3, [r2]
 703 0200 1EE0     		b	.L22
 704              	.L25:
 249:Src/motor.c   **** 
 250:Src/motor.c   ****         }
 251:Src/motor.c   ****         else if(phase  == 4)
 705              		.loc 1 251 0
 706 0202 224B     		ldr	r3, .L28+4
 707 0204 1B68     		ldr	r3, [r3]
 708 0206 042B     		cmp	r3, #4
 709 0208 1AD1     		bne	.L22
 252:Src/motor.c   ****         {
 253:Src/motor.c   **** 
 254:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 710              		.loc 1 254 0
 711 020a 0122     		movs	r2, #1
 712 020c 4FF48061 		mov	r1, #1024
 713 0210 1F48     		ldr	r0, .L28+8
 714 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 255:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 715              		.loc 1 255 0
 716 0216 0022     		movs	r2, #0
 717 0218 4FF40061 		mov	r1, #2048
 718 021c 1C48     		ldr	r0, .L28+8
 719 021e FFF7FEFF 		bl	HAL_GPIO_WritePin
 256:Src/motor.c   **** 
 257:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 720              		.loc 1 257 0
 721 0222 0122     		movs	r2, #1
 722 0224 4FF40051 		mov	r1, #8192
 723 0228 1948     		ldr	r0, .L28+8
ARM GAS  /tmp/ccPBDNly.s 			page 18


 724 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 258:Src/motor.c   ****             HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 725              		.loc 1 258 0
 726 022e 0022     		movs	r2, #0
 727 0230 4FF48051 		mov	r1, #4096
 728 0234 1648     		ldr	r0, .L28+8
 729 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 259:Src/motor.c   ****             phase  = 1;
 730              		.loc 1 259 0
 731 023a 144B     		ldr	r3, .L28+4
 732 023c 0122     		movs	r2, #1
 733 023e 1A60     		str	r2, [r3]
 734              	.L22:
 260:Src/motor.c   **** 
 261:Src/motor.c   ****         }
 262:Src/motor.c   **** 
 263:Src/motor.c   ****     }
 264:Src/motor.c   **** 
 265:Src/motor.c   ****     if(Direction == STOP)
 735              		.loc 1 265 0
 736 0240 7B68     		ldr	r3, [r7, #4]
 737 0242 002B     		cmp	r3, #0
 738 0244 1CD1     		bne	.L27
 266:Src/motor.c   ****     {
 267:Src/motor.c   ****         HAL_GPIO_WritePin(ENABLE_STEP2_GPIO_Port, ENABLE_STEP2_PIN,GPIO_PIN_SET);
 739              		.loc 1 267 0
 740 0246 0122     		movs	r2, #1
 741 0248 2021     		movs	r1, #32
 742 024a 0F48     		ldr	r0, .L28
 743 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 268:Src/motor.c   **** 
 269:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 744              		.loc 1 269 0
 745 0250 0022     		movs	r2, #0
 746 0252 4FF48061 		mov	r1, #1024
 747 0256 0E48     		ldr	r0, .L28+8
 748 0258 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 749              		.loc 1 270 0
 750 025c 0022     		movs	r2, #0
 751 025e 4FF40061 		mov	r1, #2048
 752 0262 0B48     		ldr	r0, .L28+8
 753 0264 FFF7FEFF 		bl	HAL_GPIO_WritePin
 271:Src/motor.c   **** 
 272:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 754              		.loc 1 272 0
 755 0268 0022     		movs	r2, #0
 756 026a 4FF40051 		mov	r1, #8192
 757 026e 0848     		ldr	r0, .L28+8
 758 0270 FFF7FEFF 		bl	HAL_GPIO_WritePin
 273:Src/motor.c   ****         HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 759              		.loc 1 273 0
 760 0274 0022     		movs	r2, #0
 761 0276 4FF48051 		mov	r1, #4096
 762 027a 0548     		ldr	r0, .L28+8
 763 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 764              	.L27:
ARM GAS  /tmp/ccPBDNly.s 			page 19


 274:Src/motor.c   ****     }
 275:Src/motor.c   **** 
 276:Src/motor.c   **** }
 765              		.loc 1 276 0
 766 0280 00BF     		nop
 767 0282 0837     		adds	r7, r7, #8
 768              	.LCFI10:
 769              		.cfi_def_cfa_offset 8
 770 0284 BD46     		mov	sp, r7
 771              	.LCFI11:
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 0286 80BD     		pop	{r7, pc}
 775              	.L29:
 776              		.align	2
 777              	.L28:
 778 0288 00080240 		.word	1073874944
 779 028c 00000000 		.word	phase.9721
 780 0290 000C0240 		.word	1073875968
 781              		.cfi_endproc
 782              	.LFE140:
 784              		.section	.data.phase.9717,"aw",%progbits
 785              		.align	2
 788              	phase.9717:
 789 0000 01000000 		.word	1
 790              		.section	.data.phase.9721,"aw",%progbits
 791              		.align	2
 794              	phase.9721:
 795 0000 01000000 		.word	1
 796              		.text
 797              	.Letext0:
 798              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdint-gcc.h"
 799              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 800              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 801              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 802              		.file 6 "/usr/include/newlib/sys/lock.h"
 803              		.file 7 "/usr/include/newlib/sys/_types.h"
 804              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 805              		.file 9 "/usr/include/newlib/sys/reent.h"
 806              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 807              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 808              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 809              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 810              		.file 14 "Inc/motor.h"
 811              		.file 15 "Inc/tim.h"
ARM GAS  /tmp/ccPBDNly.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 motor.c
                            *COM*:0000000000000001 setting_enable
                            *COM*:0000000000000010 motor1
                            *COM*:0000000000000010 motor2
                            *COM*:0000000000000010 motor3
                            *COM*:0000000000000010 motor4
                            *COM*:0000000000000010 servo1
                            *COM*:0000000000000010 servo2
     /tmp/ccPBDNly.s:29     .rodata.reductor_coefficient:0000000000000000 reductor_coefficient
     /tmp/ccPBDNly.s:26     .rodata.reductor_coefficient:0000000000000000 $d
     /tmp/ccPBDNly.s:36     .data.step_num:0000000000000000 step_num
     /tmp/ccPBDNly.s:33     .data.step_num:0000000000000000 $d
     /tmp/ccPBDNly.s:43     .bss.counter:0000000000000000 counter
     /tmp/ccPBDNly.s:40     .bss.counter:0000000000000000 $d
     /tmp/ccPBDNly.s:46     .text.motorInit:0000000000000000 $t
     /tmp/ccPBDNly.s:53     .text.motorInit:0000000000000000 motorInit
     /tmp/ccPBDNly.s:77     .text.motorInit:0000000000000010 $d
     /tmp/ccPBDNly.s:82     .text.motor1Drive:0000000000000000 $t
     /tmp/ccPBDNly.s:89     .text.motor1Drive:0000000000000000 motor1Drive
     /tmp/ccPBDNly.s:426    .text.motor1Drive:0000000000000288 $d
     /tmp/ccPBDNly.s:788    .data.phase.9717:0000000000000000 phase.9717
     /tmp/ccPBDNly.s:434    .text.motor2Drive:0000000000000000 $t
     /tmp/ccPBDNly.s:441    .text.motor2Drive:0000000000000000 motor2Drive
     /tmp/ccPBDNly.s:778    .text.motor2Drive:0000000000000288 $d
     /tmp/ccPBDNly.s:794    .data.phase.9721:0000000000000000 phase.9721
     /tmp/ccPBDNly.s:785    .data.phase.9717:0000000000000000 $d
     /tmp/ccPBDNly.s:791    .data.phase.9721:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Start_IT
htim2
HAL_GPIO_WritePin
