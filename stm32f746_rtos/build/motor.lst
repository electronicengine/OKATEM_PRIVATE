ARM GAS  /tmp/ccDtiSc2.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	motor1,8,4
  18              		.comm	motor2,8,4
  19              		.comm	motor3,8,4
  20              		.comm	motor4,8,4
  21              		.global	reductor_coefficient
  22              		.section	.rodata.reductor_coefficient,"a",%progbits
  23              		.align	2
  26              	reductor_coefficient:
  27 0000 2C010000 		.word	300
  28              		.section	.text.motorInit,"ax",%progbits
  29              		.align	1
  30              		.global	motorInit
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv4-sp-d16
  36              	motorInit:
  37              	.LFB136:
  38              		.file 1 "Src/motor.c"
   1:Src/motor.c   **** 
   2:Src/motor.c   **** 
   3:Src/motor.c   **** #include "motor.h"
   4:Src/motor.c   **** #include "main.h"
   5:Src/motor.c   **** #include "gpio.h"
   6:Src/motor.c   **** #include "tim.h"
   7:Src/motor.c   **** 
   8:Src/motor.c   **** const int reductor_coefficient = 300; // 500/1.8 = 355.55555
   9:Src/motor.c   **** 
  10:Src/motor.c   **** 
  11:Src/motor.c   **** void motorInit()
  12:Src/motor.c   **** {
  39              		.loc 1 12 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 0
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 80B5     		push	{r7, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccDtiSc2.s 			page 2


  49              	.LCFI1:
  50              		.cfi_def_cfa_register 7
  13:Src/motor.c   ****     HAL_TIM_Base_Start_IT(&htim2);
  51              		.loc 1 13 0
  52 0004 0248     		ldr	r0, .L2
  53 0006 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  14:Src/motor.c   **** }
  54              		.loc 1 14 0
  55 000a 00BF     		nop
  56 000c 80BD     		pop	{r7, pc}
  57              	.L3:
  58 000e 00BF     		.align	2
  59              	.L2:
  60 0010 00000000 		.word	htim2
  61              		.cfi_endproc
  62              	.LFE136:
  64              		.section	.text.motor1Drive,"ax",%progbits
  65              		.align	1
  66              		.global	motor1Drive
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	motor1Drive:
  73              	.LFB137:
  15:Src/motor.c   **** 
  16:Src/motor.c   **** void  motor1Drive(int Direction)
  17:Src/motor.c   **** {
  74              		.loc 1 17 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 82B0     		sub	sp, sp, #8
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 7
  89 0006 7860     		str	r0, [r7, #4]
  18:Src/motor.c   ****     static volatile int phase = 1;
  19:Src/motor.c   **** 
  20:Src/motor.c   ****         if(Direction == FORWARD)
  90              		.loc 1 20 0
  91 0008 7B68     		ldr	r3, [r7, #4]
  92 000a 012B     		cmp	r3, #1
  93 000c 40F08580 		bne	.L9
  21:Src/motor.c   ****         {
  22:Src/motor.c   **** 
  23:Src/motor.c   **** //            motor2.degree--;
  24:Src/motor.c   **** 
  25:Src/motor.c   ****               if(phase  == 1)
  94              		.loc 1 25 0
ARM GAS  /tmp/ccDtiSc2.s 			page 3


  95 0010 444B     		ldr	r3, .L10
  96 0012 1B68     		ldr	r3, [r3]
  97 0014 012B     		cmp	r3, #1
  98 0016 1DD1     		bne	.L6
  26:Src/motor.c   ****               {
  27:Src/motor.c   **** 
  28:Src/motor.c   **** 
  29:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_SET);
  99              		.loc 1 29 0
 100 0018 0122     		movs	r2, #1
 101 001a 4FF40051 		mov	r1, #8192
 102 001e 4248     		ldr	r0, .L10+4
 103 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
  30:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 104              		.loc 1 30 0
 105 0024 0022     		movs	r2, #0
 106 0026 4FF48041 		mov	r1, #16384
 107 002a 3F48     		ldr	r0, .L10+4
 108 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
  31:Src/motor.c   **** 
  32:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_SET);
 109              		.loc 1 32 0
 110 0030 0122     		movs	r2, #1
 111 0032 4FF48071 		mov	r1, #256
 112 0036 3D48     		ldr	r0, .L10+8
 113 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  33:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 114              		.loc 1 33 0
 115 003c 0022     		movs	r2, #0
 116 003e 4FF40041 		mov	r1, #32768
 117 0042 3948     		ldr	r0, .L10+4
 118 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  34:Src/motor.c   ****                   phase ++;
 119              		.loc 1 34 0
 120 0048 364B     		ldr	r3, .L10
 121 004a 1B68     		ldr	r3, [r3]
 122 004c 0133     		adds	r3, r3, #1
 123 004e 354A     		ldr	r2, .L10
 124 0050 1360     		str	r3, [r2]
  35:Src/motor.c   **** 
  36:Src/motor.c   ****               }
  37:Src/motor.c   ****               else if(phase  == 2)
  38:Src/motor.c   ****               {
  39:Src/motor.c   **** 
  40:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_SET);
  41:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
  42:Src/motor.c   **** 
  43:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_SET);
  44:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
  45:Src/motor.c   ****                   phase ++;
  46:Src/motor.c   **** 
  47:Src/motor.c   ****               }
  48:Src/motor.c   ****               else if(phase  == 3)
  49:Src/motor.c   ****               {
  50:Src/motor.c   **** 
  51:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_SET);
  52:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccDtiSc2.s 			page 4


  53:Src/motor.c   **** 
  54:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_SET);
  55:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
  56:Src/motor.c   ****                   phase ++;
  57:Src/motor.c   **** 
  58:Src/motor.c   ****               }
  59:Src/motor.c   ****               else if(phase  == 4)
  60:Src/motor.c   ****               {
  61:Src/motor.c   **** 
  62:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_SET);
  63:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
  64:Src/motor.c   **** 
  65:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_SET);
  66:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
  67:Src/motor.c   ****                   phase  = 1;
  68:Src/motor.c   **** 
  69:Src/motor.c   ****               }
  70:Src/motor.c   **** 
  71:Src/motor.c   **** 
  72:Src/motor.c   ****         }
  73:Src/motor.c   **** 
  74:Src/motor.c   **** 
  75:Src/motor.c   **** //    if(motor1.degree <= 0)
  76:Src/motor.c   **** //    {
  77:Src/motor.c   **** //        motor1.direction = STOP;
  78:Src/motor.c   **** //        motor1.degree = 0;
  79:Src/motor.c   **** 
  80:Src/motor.c   **** //    }
  81:Src/motor.c   **** }
 125              		.loc 1 81 0
 126 0052 62E0     		b	.L9
 127              	.L6:
  37:Src/motor.c   ****               {
 128              		.loc 1 37 0
 129 0054 334B     		ldr	r3, .L10
 130 0056 1B68     		ldr	r3, [r3]
 131 0058 022B     		cmp	r3, #2
 132 005a 1DD1     		bne	.L7
  40:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI2_GPIO_Port, STEP1_AI2_Pin, GPIO_PIN_RESET);
 133              		.loc 1 40 0
 134 005c 0122     		movs	r2, #1
 135 005e 4FF40051 		mov	r1, #8192
 136 0062 3148     		ldr	r0, .L10+4
 137 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
  41:Src/motor.c   **** 
 138              		.loc 1 41 0
 139 0068 0022     		movs	r2, #0
 140 006a 4FF48041 		mov	r1, #16384
 141 006e 2E48     		ldr	r0, .L10+4
 142 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
  43:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
 143              		.loc 1 43 0
 144 0074 0122     		movs	r2, #1
 145 0076 4FF40041 		mov	r1, #32768
 146 007a 2B48     		ldr	r0, .L10+4
 147 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
  44:Src/motor.c   ****                   phase ++;
ARM GAS  /tmp/ccDtiSc2.s 			page 5


 148              		.loc 1 44 0
 149 0080 0022     		movs	r2, #0
 150 0082 4FF48071 		mov	r1, #256
 151 0086 2948     		ldr	r0, .L10+8
 152 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
  45:Src/motor.c   **** 
 153              		.loc 1 45 0
 154 008c 254B     		ldr	r3, .L10
 155 008e 1B68     		ldr	r3, [r3]
 156 0090 0133     		adds	r3, r3, #1
 157 0092 244A     		ldr	r2, .L10
 158 0094 1360     		str	r3, [r2]
 159              		.loc 1 81 0
 160 0096 40E0     		b	.L9
 161              	.L7:
  48:Src/motor.c   ****               {
 162              		.loc 1 48 0
 163 0098 224B     		ldr	r3, .L10
 164 009a 1B68     		ldr	r3, [r3]
 165 009c 032B     		cmp	r3, #3
 166 009e 1DD1     		bne	.L8
  51:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 167              		.loc 1 51 0
 168 00a0 0122     		movs	r2, #1
 169 00a2 4FF48041 		mov	r1, #16384
 170 00a6 2048     		ldr	r0, .L10+4
 171 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
  52:Src/motor.c   **** 
 172              		.loc 1 52 0
 173 00ac 0022     		movs	r2, #0
 174 00ae 4FF40051 		mov	r1, #8192
 175 00b2 1D48     		ldr	r0, .L10+4
 176 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
  54:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI1_GPIO_Port, STEP1_BI1_Pin, GPIO_PIN_RESET);
 177              		.loc 1 54 0
 178 00b8 0122     		movs	r2, #1
 179 00ba 4FF40041 		mov	r1, #32768
 180 00be 1A48     		ldr	r0, .L10+4
 181 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
  55:Src/motor.c   ****                   phase ++;
 182              		.loc 1 55 0
 183 00c4 0022     		movs	r2, #0
 184 00c6 4FF48071 		mov	r1, #256
 185 00ca 1848     		ldr	r0, .L10+8
 186 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
  56:Src/motor.c   **** 
 187              		.loc 1 56 0
 188 00d0 144B     		ldr	r3, .L10
 189 00d2 1B68     		ldr	r3, [r3]
 190 00d4 0133     		adds	r3, r3, #1
 191 00d6 134A     		ldr	r2, .L10
 192 00d8 1360     		str	r3, [r2]
 193              		.loc 1 81 0
 194 00da 1EE0     		b	.L9
 195              	.L8:
  59:Src/motor.c   ****               {
 196              		.loc 1 59 0
ARM GAS  /tmp/ccDtiSc2.s 			page 6


 197 00dc 114B     		ldr	r3, .L10
 198 00de 1B68     		ldr	r3, [r3]
 199 00e0 042B     		cmp	r3, #4
 200 00e2 1AD1     		bne	.L9
  62:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_AI1_GPIO_Port, STEP1_AI1_Pin, GPIO_PIN_RESET);
 201              		.loc 1 62 0
 202 00e4 0122     		movs	r2, #1
 203 00e6 4FF48041 		mov	r1, #16384
 204 00ea 0F48     		ldr	r0, .L10+4
 205 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
  63:Src/motor.c   **** 
 206              		.loc 1 63 0
 207 00f0 0022     		movs	r2, #0
 208 00f2 4FF40051 		mov	r1, #8192
 209 00f6 0C48     		ldr	r0, .L10+4
 210 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
  65:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP1_BI2_GPIO_Port, STEP1_BI2_Pin, GPIO_PIN_RESET);
 211              		.loc 1 65 0
 212 00fc 0122     		movs	r2, #1
 213 00fe 4FF48071 		mov	r1, #256
 214 0102 0A48     		ldr	r0, .L10+8
 215 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
  66:Src/motor.c   ****                   phase  = 1;
 216              		.loc 1 66 0
 217 0108 0022     		movs	r2, #0
 218 010a 4FF40041 		mov	r1, #32768
 219 010e 0648     		ldr	r0, .L10+4
 220 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
  67:Src/motor.c   **** 
 221              		.loc 1 67 0
 222 0114 034B     		ldr	r3, .L10
 223 0116 0122     		movs	r2, #1
 224 0118 1A60     		str	r2, [r3]
 225              	.L9:
 226              		.loc 1 81 0
 227 011a 00BF     		nop
 228 011c 0837     		adds	r7, r7, #8
 229              	.LCFI5:
 230              		.cfi_def_cfa_offset 8
 231 011e BD46     		mov	sp, r7
 232              	.LCFI6:
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 0120 80BD     		pop	{r7, pc}
 236              	.L11:
 237 0122 00BF     		.align	2
 238              	.L10:
 239 0124 00000000 		.word	phase.9485
 240 0128 00040240 		.word	1073873920
 241 012c 000C0240 		.word	1073875968
 242              		.cfi_endproc
 243              	.LFE137:
 245              		.section	.text.motor2Drive,"ax",%progbits
 246              		.align	1
 247              		.global	motor2Drive
 248              		.syntax unified
 249              		.thumb
ARM GAS  /tmp/ccDtiSc2.s 			page 7


 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	motor2Drive:
 254              	.LFB138:
  82:Src/motor.c   **** 
  83:Src/motor.c   **** void motor2Drive()
  84:Src/motor.c   **** {
 255              		.loc 1 84 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259 0000 80B5     		push	{r7, lr}
 260              	.LCFI7:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 00AF     		add	r7, sp, #0
 265              	.LCFI8:
 266              		.cfi_def_cfa_register 7
  85:Src/motor.c   **** 
  86:Src/motor.c   ****     static volatile int phase = 1;
  87:Src/motor.c   **** 
  88:Src/motor.c   **** //        if(motor2.direction == FORWARD && motor2.degree >= 0)
  89:Src/motor.c   **** //        {
  90:Src/motor.c   **** 
  91:Src/motor.c   **** //            motor2.degree--;
  92:Src/motor.c   **** 
  93:Src/motor.c   ****               if(phase  == 1)
 267              		.loc 1 93 0
 268 0004 434B     		ldr	r3, .L18
 269 0006 1B68     		ldr	r3, [r3]
 270 0008 012B     		cmp	r3, #1
 271 000a 1DD1     		bne	.L13
  94:Src/motor.c   ****               {
  95:Src/motor.c   **** 
  96:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 272              		.loc 1 96 0
 273 000c 0122     		movs	r2, #1
 274 000e 4FF48061 		mov	r1, #1024
 275 0012 4148     		ldr	r0, .L18+4
 276 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  97:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 277              		.loc 1 97 0
 278 0018 0022     		movs	r2, #0
 279 001a 4FF40061 		mov	r1, #2048
 280 001e 3E48     		ldr	r0, .L18+4
 281 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98:Src/motor.c   **** 
  99:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 282              		.loc 1 99 0
 283 0024 0122     		movs	r2, #1
 284 0026 4FF40051 		mov	r1, #8192
 285 002a 3B48     		ldr	r0, .L18+4
 286 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 100:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 287              		.loc 1 100 0
 288 0030 0022     		movs	r2, #0
ARM GAS  /tmp/ccDtiSc2.s 			page 8


 289 0032 4FF48051 		mov	r1, #4096
 290 0036 3848     		ldr	r0, .L18+4
 291 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101:Src/motor.c   ****                   phase ++;
 292              		.loc 1 101 0
 293 003c 354B     		ldr	r3, .L18
 294 003e 1B68     		ldr	r3, [r3]
 295 0040 0133     		adds	r3, r3, #1
 296 0042 344A     		ldr	r2, .L18
 297 0044 1360     		str	r3, [r2]
 102:Src/motor.c   **** 
 103:Src/motor.c   ****               }
 104:Src/motor.c   ****               else if(phase  == 2)
 105:Src/motor.c   ****               {
 106:Src/motor.c   **** 
 107:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_SET);
 108:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 109:Src/motor.c   **** 
 110:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 111:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 112:Src/motor.c   ****                   phase ++;
 113:Src/motor.c   **** 
 114:Src/motor.c   ****               }
 115:Src/motor.c   ****               else if(phase  == 3)
 116:Src/motor.c   ****               {
 117:Src/motor.c   **** 
 118:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 119:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 120:Src/motor.c   **** 
 121:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_SET);
 122:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 123:Src/motor.c   ****                   phase ++;
 124:Src/motor.c   **** 
 125:Src/motor.c   ****               }
 126:Src/motor.c   ****               else if(phase  == 4)
 127:Src/motor.c   ****               {
 128:Src/motor.c   **** 
 129:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_SET);
 130:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 131:Src/motor.c   **** 
 132:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_SET);
 133:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 134:Src/motor.c   ****                   phase  = 1;
 135:Src/motor.c   **** 
 136:Src/motor.c   ****               }
 137:Src/motor.c   **** 
 138:Src/motor.c   **** 
 139:Src/motor.c   **** //        }
 140:Src/motor.c   **** 
 141:Src/motor.c   **** 
 142:Src/motor.c   **** //    if(motor1.degree <= 0)
 143:Src/motor.c   **** //    {
 144:Src/motor.c   **** //        motor1.direction = STOP;
 145:Src/motor.c   **** //        motor1.degree = 0;
 146:Src/motor.c   **** 
 147:Src/motor.c   **** //    }
 148:Src/motor.c   **** 
ARM GAS  /tmp/ccDtiSc2.s 			page 9


 149:Src/motor.c   **** }
 298              		.loc 1 149 0
 299 0046 62E0     		b	.L17
 300              	.L13:
 104:Src/motor.c   ****               {
 301              		.loc 1 104 0
 302 0048 324B     		ldr	r3, .L18
 303 004a 1B68     		ldr	r3, [r3]
 304 004c 022B     		cmp	r3, #2
 305 004e 1DD1     		bne	.L15
 107:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI2_GPIO_Port, STEP2_AI2_Pin, GPIO_PIN_RESET);
 306              		.loc 1 107 0
 307 0050 0122     		movs	r2, #1
 308 0052 4FF48061 		mov	r1, #1024
 309 0056 3048     		ldr	r0, .L18+4
 310 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108:Src/motor.c   **** 
 311              		.loc 1 108 0
 312 005c 0022     		movs	r2, #0
 313 005e 4FF40061 		mov	r1, #2048
 314 0062 2D48     		ldr	r0, .L18+4
 315 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 110:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 316              		.loc 1 110 0
 317 0068 0122     		movs	r2, #1
 318 006a 4FF48051 		mov	r1, #4096
 319 006e 2A48     		ldr	r0, .L18+4
 320 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 111:Src/motor.c   ****                   phase ++;
 321              		.loc 1 111 0
 322 0074 0022     		movs	r2, #0
 323 0076 4FF40051 		mov	r1, #8192
 324 007a 2748     		ldr	r0, .L18+4
 325 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112:Src/motor.c   **** 
 326              		.loc 1 112 0
 327 0080 244B     		ldr	r3, .L18
 328 0082 1B68     		ldr	r3, [r3]
 329 0084 0133     		adds	r3, r3, #1
 330 0086 234A     		ldr	r2, .L18
 331 0088 1360     		str	r3, [r2]
 332              		.loc 1 149 0
 333 008a 40E0     		b	.L17
 334              	.L15:
 115:Src/motor.c   ****               {
 335              		.loc 1 115 0
 336 008c 214B     		ldr	r3, .L18
 337 008e 1B68     		ldr	r3, [r3]
 338 0090 032B     		cmp	r3, #3
 339 0092 1DD1     		bne	.L16
 118:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 340              		.loc 1 118 0
 341 0094 0122     		movs	r2, #1
 342 0096 4FF40061 		mov	r1, #2048
 343 009a 1F48     		ldr	r0, .L18+4
 344 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 119:Src/motor.c   **** 
ARM GAS  /tmp/ccDtiSc2.s 			page 10


 345              		.loc 1 119 0
 346 00a0 0022     		movs	r2, #0
 347 00a2 4FF48061 		mov	r1, #1024
 348 00a6 1C48     		ldr	r0, .L18+4
 349 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI1_GPIO_Port, STEP2_BI1_Pin, GPIO_PIN_RESET);
 350              		.loc 1 121 0
 351 00ac 0122     		movs	r2, #1
 352 00ae 4FF48051 		mov	r1, #4096
 353 00b2 1948     		ldr	r0, .L18+4
 354 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122:Src/motor.c   ****                   phase ++;
 355              		.loc 1 122 0
 356 00b8 0022     		movs	r2, #0
 357 00ba 4FF40051 		mov	r1, #8192
 358 00be 1648     		ldr	r0, .L18+4
 359 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123:Src/motor.c   **** 
 360              		.loc 1 123 0
 361 00c4 134B     		ldr	r3, .L18
 362 00c6 1B68     		ldr	r3, [r3]
 363 00c8 0133     		adds	r3, r3, #1
 364 00ca 124A     		ldr	r2, .L18
 365 00cc 1360     		str	r3, [r2]
 366              		.loc 1 149 0
 367 00ce 1EE0     		b	.L17
 368              	.L16:
 126:Src/motor.c   ****               {
 369              		.loc 1 126 0
 370 00d0 104B     		ldr	r3, .L18
 371 00d2 1B68     		ldr	r3, [r3]
 372 00d4 042B     		cmp	r3, #4
 373 00d6 1AD1     		bne	.L17
 129:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_AI1_GPIO_Port, STEP2_AI1_Pin, GPIO_PIN_RESET);
 374              		.loc 1 129 0
 375 00d8 0122     		movs	r2, #1
 376 00da 4FF40061 		mov	r1, #2048
 377 00de 0E48     		ldr	r0, .L18+4
 378 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 130:Src/motor.c   **** 
 379              		.loc 1 130 0
 380 00e4 0022     		movs	r2, #0
 381 00e6 4FF48061 		mov	r1, #1024
 382 00ea 0B48     		ldr	r0, .L18+4
 383 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 132:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP2_BI2_GPIO_Port, STEP2_BI2_Pin, GPIO_PIN_RESET);
 384              		.loc 1 132 0
 385 00f0 0122     		movs	r2, #1
 386 00f2 4FF40051 		mov	r1, #8192
 387 00f6 0848     		ldr	r0, .L18+4
 388 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 133:Src/motor.c   ****                   phase  = 1;
 389              		.loc 1 133 0
 390 00fc 0022     		movs	r2, #0
 391 00fe 4FF48051 		mov	r1, #4096
 392 0102 0548     		ldr	r0, .L18+4
 393 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccDtiSc2.s 			page 11


 134:Src/motor.c   **** 
 394              		.loc 1 134 0
 395 0108 024B     		ldr	r3, .L18
 396 010a 0122     		movs	r2, #1
 397 010c 1A60     		str	r2, [r3]
 398              	.L17:
 399              		.loc 1 149 0
 400 010e 00BF     		nop
 401 0110 80BD     		pop	{r7, pc}
 402              	.L19:
 403 0112 00BF     		.align	2
 404              	.L18:
 405 0114 00000000 		.word	phase.9488
 406 0118 000C0240 		.word	1073875968
 407              		.cfi_endproc
 408              	.LFE138:
 410              		.section	.text.motor3Drive,"ax",%progbits
 411              		.align	1
 412              		.global	motor3Drive
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	motor3Drive:
 419              	.LFB139:
 150:Src/motor.c   **** 
 151:Src/motor.c   **** 
 152:Src/motor.c   **** void  motor3Drive()
 153:Src/motor.c   **** {
 420              		.loc 1 153 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              	.LCFI9:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 00AF     		add	r7, sp, #0
 430              	.LCFI10:
 431              		.cfi_def_cfa_register 7
 154:Src/motor.c   ****     static volatile int phase = 1;
 155:Src/motor.c   **** 
 156:Src/motor.c   **** //        if(motor2.direction == FORWARD && motor2.degree >= 0)
 157:Src/motor.c   **** //        {
 158:Src/motor.c   **** 
 159:Src/motor.c   **** //            motor2.degree--;
 160:Src/motor.c   **** 
 161:Src/motor.c   ****               if(phase  == 1)
 432              		.loc 1 161 0
 433 0004 3F4B     		ldr	r3, .L26
 434 0006 1B68     		ldr	r3, [r3]
 435 0008 012B     		cmp	r3, #1
 436 000a 1BD1     		bne	.L21
 162:Src/motor.c   ****               {
 163:Src/motor.c   **** 
 164:Src/motor.c   **** 
ARM GAS  /tmp/ccDtiSc2.s 			page 12


 165:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_SET);
 437              		.loc 1 165 0
 438 000c 0122     		movs	r2, #1
 439 000e 0821     		movs	r1, #8
 440 0010 3D48     		ldr	r0, .L26+4
 441 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 442              		.loc 1 166 0
 443 0016 0022     		movs	r2, #0
 444 0018 0421     		movs	r1, #4
 445 001a 3B48     		ldr	r0, .L26+4
 446 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 167:Src/motor.c   **** 
 168:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_SET);
 447              		.loc 1 168 0
 448 0020 0122     		movs	r2, #1
 449 0022 4FF40041 		mov	r1, #32768
 450 0026 3948     		ldr	r0, .L26+8
 451 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 452              		.loc 1 169 0
 453 002c 0022     		movs	r2, #0
 454 002e 4FF48041 		mov	r1, #16384
 455 0032 3648     		ldr	r0, .L26+8
 456 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 170:Src/motor.c   ****                   phase ++;
 457              		.loc 1 170 0
 458 0038 324B     		ldr	r3, .L26
 459 003a 1B68     		ldr	r3, [r3]
 460 003c 0133     		adds	r3, r3, #1
 461 003e 314A     		ldr	r2, .L26
 462 0040 1360     		str	r3, [r2]
 171:Src/motor.c   **** 
 172:Src/motor.c   ****               }
 173:Src/motor.c   ****               else if(phase  == 2)
 174:Src/motor.c   ****               {
 175:Src/motor.c   **** 
 176:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_SET);
 177:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 178:Src/motor.c   **** 
 179:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_SET);
 180:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 181:Src/motor.c   ****                   phase ++;
 182:Src/motor.c   **** 
 183:Src/motor.c   ****               }
 184:Src/motor.c   ****               else if(phase  == 3)
 185:Src/motor.c   ****               {
 186:Src/motor.c   **** 
 187:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_SET);
 188:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 189:Src/motor.c   **** 
 190:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_SET);
 191:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 192:Src/motor.c   ****                   phase ++;
 193:Src/motor.c   **** 
 194:Src/motor.c   ****               }
 195:Src/motor.c   ****               else if(phase  == 4)
ARM GAS  /tmp/ccDtiSc2.s 			page 13


 196:Src/motor.c   ****               {
 197:Src/motor.c   **** 
 198:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_SET);
 199:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 200:Src/motor.c   **** 
 201:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_SET);
 202:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 203:Src/motor.c   ****                   phase  = 1;
 204:Src/motor.c   **** 
 205:Src/motor.c   ****               }
 206:Src/motor.c   **** 
 207:Src/motor.c   **** 
 208:Src/motor.c   **** //        }
 209:Src/motor.c   **** 
 210:Src/motor.c   **** 
 211:Src/motor.c   **** //    if(motor1.degree <= 0)
 212:Src/motor.c   **** //    {
 213:Src/motor.c   **** //        motor1.direction = STOP;
 214:Src/motor.c   **** //        motor1.degree = 0;
 215:Src/motor.c   **** 
 216:Src/motor.c   **** //    }
 217:Src/motor.c   **** }
 463              		.loc 1 217 0
 464 0042 5CE0     		b	.L25
 465              	.L21:
 173:Src/motor.c   ****               {
 466              		.loc 1 173 0
 467 0044 2F4B     		ldr	r3, .L26
 468 0046 1B68     		ldr	r3, [r3]
 469 0048 022B     		cmp	r3, #2
 470 004a 1BD1     		bne	.L23
 176:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI2_GPIO_Port, STEP3_AI2_Pin, GPIO_PIN_RESET);
 471              		.loc 1 176 0
 472 004c 0122     		movs	r2, #1
 473 004e 0821     		movs	r1, #8
 474 0050 2D48     		ldr	r0, .L26+4
 475 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 177:Src/motor.c   **** 
 476              		.loc 1 177 0
 477 0056 0022     		movs	r2, #0
 478 0058 0421     		movs	r1, #4
 479 005a 2B48     		ldr	r0, .L26+4
 480 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 179:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 481              		.loc 1 179 0
 482 0060 0122     		movs	r2, #1
 483 0062 4FF48041 		mov	r1, #16384
 484 0066 2948     		ldr	r0, .L26+8
 485 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 180:Src/motor.c   ****                   phase ++;
 486              		.loc 1 180 0
 487 006c 0022     		movs	r2, #0
 488 006e 4FF40041 		mov	r1, #32768
 489 0072 2648     		ldr	r0, .L26+8
 490 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 181:Src/motor.c   **** 
 491              		.loc 1 181 0
ARM GAS  /tmp/ccDtiSc2.s 			page 14


 492 0078 224B     		ldr	r3, .L26
 493 007a 1B68     		ldr	r3, [r3]
 494 007c 0133     		adds	r3, r3, #1
 495 007e 214A     		ldr	r2, .L26
 496 0080 1360     		str	r3, [r2]
 497              		.loc 1 217 0
 498 0082 3CE0     		b	.L25
 499              	.L23:
 184:Src/motor.c   ****               {
 500              		.loc 1 184 0
 501 0084 1F4B     		ldr	r3, .L26
 502 0086 1B68     		ldr	r3, [r3]
 503 0088 032B     		cmp	r3, #3
 504 008a 1BD1     		bne	.L24
 187:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 505              		.loc 1 187 0
 506 008c 0122     		movs	r2, #1
 507 008e 0421     		movs	r1, #4
 508 0090 1D48     		ldr	r0, .L26+4
 509 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 188:Src/motor.c   **** 
 510              		.loc 1 188 0
 511 0096 0022     		movs	r2, #0
 512 0098 0821     		movs	r1, #8
 513 009a 1B48     		ldr	r0, .L26+4
 514 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 190:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI1_GPIO_Port, STEP3_BI1_Pin, GPIO_PIN_RESET);
 515              		.loc 1 190 0
 516 00a0 0122     		movs	r2, #1
 517 00a2 4FF48041 		mov	r1, #16384
 518 00a6 1948     		ldr	r0, .L26+8
 519 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191:Src/motor.c   ****                   phase ++;
 520              		.loc 1 191 0
 521 00ac 0022     		movs	r2, #0
 522 00ae 4FF40041 		mov	r1, #32768
 523 00b2 1648     		ldr	r0, .L26+8
 524 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 192:Src/motor.c   **** 
 525              		.loc 1 192 0
 526 00b8 124B     		ldr	r3, .L26
 527 00ba 1B68     		ldr	r3, [r3]
 528 00bc 0133     		adds	r3, r3, #1
 529 00be 114A     		ldr	r2, .L26
 530 00c0 1360     		str	r3, [r2]
 531              		.loc 1 217 0
 532 00c2 1CE0     		b	.L25
 533              	.L24:
 195:Src/motor.c   ****               {
 534              		.loc 1 195 0
 535 00c4 0F4B     		ldr	r3, .L26
 536 00c6 1B68     		ldr	r3, [r3]
 537 00c8 042B     		cmp	r3, #4
 538 00ca 18D1     		bne	.L25
 198:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_AI1_GPIO_Port, STEP3_AI1_Pin, GPIO_PIN_RESET);
 539              		.loc 1 198 0
 540 00cc 0122     		movs	r2, #1
ARM GAS  /tmp/ccDtiSc2.s 			page 15


 541 00ce 0421     		movs	r1, #4
 542 00d0 0D48     		ldr	r0, .L26+4
 543 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 199:Src/motor.c   **** 
 544              		.loc 1 199 0
 545 00d6 0022     		movs	r2, #0
 546 00d8 0821     		movs	r1, #8
 547 00da 0B48     		ldr	r0, .L26+4
 548 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 201:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP3_BI2_GPIO_Port, STEP3_BI2_Pin, GPIO_PIN_RESET);
 549              		.loc 1 201 0
 550 00e0 0122     		movs	r2, #1
 551 00e2 4FF40041 		mov	r1, #32768
 552 00e6 0948     		ldr	r0, .L26+8
 553 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202:Src/motor.c   ****                   phase  = 1;
 554              		.loc 1 202 0
 555 00ec 0022     		movs	r2, #0
 556 00ee 4FF48041 		mov	r1, #16384
 557 00f2 0648     		ldr	r0, .L26+8
 558 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 203:Src/motor.c   **** 
 559              		.loc 1 203 0
 560 00f8 024B     		ldr	r3, .L26
 561 00fa 0122     		movs	r2, #1
 562 00fc 1A60     		str	r2, [r3]
 563              	.L25:
 564              		.loc 1 217 0
 565 00fe 00BF     		nop
 566 0100 80BD     		pop	{r7, pc}
 567              	.L27:
 568 0102 00BF     		.align	2
 569              	.L26:
 570 0104 00000000 		.word	phase.9491
 571 0108 00180240 		.word	1073879040
 572 010c 000C0240 		.word	1073875968
 573              		.cfi_endproc
 574              	.LFE139:
 576              		.section	.text.motor4Drive,"ax",%progbits
 577              		.align	1
 578              		.global	motor4Drive
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	motor4Drive:
 585              	.LFB140:
 218:Src/motor.c   **** 
 219:Src/motor.c   **** 
 220:Src/motor.c   **** void motor4Drive()
 221:Src/motor.c   **** {
 586              		.loc 1 221 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590 0000 80B5     		push	{r7, lr}
 591              	.LCFI11:
ARM GAS  /tmp/ccDtiSc2.s 			page 16


 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 00AF     		add	r7, sp, #0
 596              	.LCFI12:
 597              		.cfi_def_cfa_register 7
 222:Src/motor.c   ****     static volatile int phase = 1;
 223:Src/motor.c   **** 
 224:Src/motor.c   **** //        if(motor2.direction == FORWARD && motor2.degree >= 0)
 225:Src/motor.c   **** //        {
 226:Src/motor.c   **** 
 227:Src/motor.c   **** //            motor2.degree--;
 228:Src/motor.c   **** 
 229:Src/motor.c   ****               if(phase  == 1)
 598              		.loc 1 229 0
 599 0004 3D4B     		ldr	r3, .L34
 600 0006 1B68     		ldr	r3, [r3]
 601 0008 012B     		cmp	r3, #1
 602 000a 1AD1     		bne	.L29
 230:Src/motor.c   ****               {
 231:Src/motor.c   **** 
 232:Src/motor.c   **** 
 233:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI1_GPIO_Port, STEP4_AI1_Pin, GPIO_PIN_SET);
 603              		.loc 1 233 0
 604 000c 0122     		movs	r2, #1
 605 000e 2021     		movs	r1, #32
 606 0010 3B48     		ldr	r0, .L34+4
 607 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI2_GPIO_Port, STEP4_AI2_Pin, GPIO_PIN_RESET);
 608              		.loc 1 234 0
 609 0016 0022     		movs	r2, #0
 610 0018 4021     		movs	r1, #64
 611 001a 3948     		ldr	r0, .L34+4
 612 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 235:Src/motor.c   **** 
 236:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI1_GPIO_Port, STEP4_BI1_Pin, GPIO_PIN_SET);
 613              		.loc 1 236 0
 614 0020 0122     		movs	r2, #1
 615 0022 4FF48071 		mov	r1, #256
 616 0026 3648     		ldr	r0, .L34+4
 617 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 237:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI2_GPIO_Port, STEP4_BI2_Pin, GPIO_PIN_RESET);
 618              		.loc 1 237 0
 619 002c 0022     		movs	r2, #0
 620 002e 8021     		movs	r1, #128
 621 0030 3348     		ldr	r0, .L34+4
 622 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238:Src/motor.c   ****                   phase ++;
 623              		.loc 1 238 0
 624 0036 314B     		ldr	r3, .L34
 625 0038 1B68     		ldr	r3, [r3]
 626 003a 0133     		adds	r3, r3, #1
 627 003c 2F4A     		ldr	r2, .L34
 628 003e 1360     		str	r3, [r2]
 239:Src/motor.c   **** 
 240:Src/motor.c   ****               }
 241:Src/motor.c   ****               else if(phase  == 2)
ARM GAS  /tmp/ccDtiSc2.s 			page 17


 242:Src/motor.c   ****               {
 243:Src/motor.c   **** 
 244:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI1_GPIO_Port, STEP4_AI1_Pin, GPIO_PIN_SET);
 245:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI2_GPIO_Port, STEP4_AI2_Pin, GPIO_PIN_RESET);
 246:Src/motor.c   **** 
 247:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI2_GPIO_Port, STEP4_BI2_Pin, GPIO_PIN_SET);
 248:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI1_GPIO_Port, STEP4_BI1_Pin, GPIO_PIN_RESET);
 249:Src/motor.c   ****                   phase ++;
 250:Src/motor.c   **** 
 251:Src/motor.c   ****               }
 252:Src/motor.c   ****               else if(phase  == 3)
 253:Src/motor.c   ****               {
 254:Src/motor.c   **** 
 255:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI2_GPIO_Port, STEP4_AI2_Pin, GPIO_PIN_SET);
 256:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI1_GPIO_Port, STEP4_AI1_Pin, GPIO_PIN_RESET);
 257:Src/motor.c   **** 
 258:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI2_GPIO_Port, STEP4_BI2_Pin, GPIO_PIN_SET);
 259:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI1_GPIO_Port, STEP4_BI1_Pin, GPIO_PIN_RESET);
 260:Src/motor.c   ****                   phase ++;
 261:Src/motor.c   **** 
 262:Src/motor.c   ****               }
 263:Src/motor.c   ****               else if(phase  == 4)
 264:Src/motor.c   ****               {
 265:Src/motor.c   **** 
 266:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI2_GPIO_Port, STEP4_AI2_Pin, GPIO_PIN_SET);
 267:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI1_GPIO_Port, STEP4_AI1_Pin, GPIO_PIN_RESET);
 268:Src/motor.c   **** 
 269:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI1_GPIO_Port, STEP4_BI1_Pin, GPIO_PIN_SET);
 270:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI2_GPIO_Port, STEP4_BI2_Pin, GPIO_PIN_RESET);
 271:Src/motor.c   ****                   phase  = 1;
 272:Src/motor.c   **** 
 273:Src/motor.c   ****               }
 274:Src/motor.c   **** 
 275:Src/motor.c   **** 
 276:Src/motor.c   **** //        }
 277:Src/motor.c   **** 
 278:Src/motor.c   **** 
 279:Src/motor.c   **** //    if(motor1.degree <= 0)
 280:Src/motor.c   **** //    {
 281:Src/motor.c   **** //        motor1.direction = STOP;
 282:Src/motor.c   **** //        motor1.degree = 0;
 283:Src/motor.c   **** 
 284:Src/motor.c   **** //    }
 285:Src/motor.c   **** }
 629              		.loc 1 285 0
 630 0040 59E0     		b	.L33
 631              	.L29:
 241:Src/motor.c   ****               {
 632              		.loc 1 241 0
 633 0042 2E4B     		ldr	r3, .L34
 634 0044 1B68     		ldr	r3, [r3]
 635 0046 022B     		cmp	r3, #2
 636 0048 1AD1     		bne	.L31
 244:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI2_GPIO_Port, STEP4_AI2_Pin, GPIO_PIN_RESET);
 637              		.loc 1 244 0
 638 004a 0122     		movs	r2, #1
 639 004c 2021     		movs	r1, #32
ARM GAS  /tmp/ccDtiSc2.s 			page 18


 640 004e 2C48     		ldr	r0, .L34+4
 641 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 245:Src/motor.c   **** 
 642              		.loc 1 245 0
 643 0054 0022     		movs	r2, #0
 644 0056 4021     		movs	r1, #64
 645 0058 2948     		ldr	r0, .L34+4
 646 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 247:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI1_GPIO_Port, STEP4_BI1_Pin, GPIO_PIN_RESET);
 647              		.loc 1 247 0
 648 005e 0122     		movs	r2, #1
 649 0060 8021     		movs	r1, #128
 650 0062 2748     		ldr	r0, .L34+4
 651 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 248:Src/motor.c   ****                   phase ++;
 652              		.loc 1 248 0
 653 0068 0022     		movs	r2, #0
 654 006a 4FF48071 		mov	r1, #256
 655 006e 2448     		ldr	r0, .L34+4
 656 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 249:Src/motor.c   **** 
 657              		.loc 1 249 0
 658 0074 214B     		ldr	r3, .L34
 659 0076 1B68     		ldr	r3, [r3]
 660 0078 0133     		adds	r3, r3, #1
 661 007a 204A     		ldr	r2, .L34
 662 007c 1360     		str	r3, [r2]
 663              		.loc 1 285 0
 664 007e 3AE0     		b	.L33
 665              	.L31:
 252:Src/motor.c   ****               {
 666              		.loc 1 252 0
 667 0080 1E4B     		ldr	r3, .L34
 668 0082 1B68     		ldr	r3, [r3]
 669 0084 032B     		cmp	r3, #3
 670 0086 1AD1     		bne	.L32
 255:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI1_GPIO_Port, STEP4_AI1_Pin, GPIO_PIN_RESET);
 671              		.loc 1 255 0
 672 0088 0122     		movs	r2, #1
 673 008a 4021     		movs	r1, #64
 674 008c 1C48     		ldr	r0, .L34+4
 675 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 256:Src/motor.c   **** 
 676              		.loc 1 256 0
 677 0092 0022     		movs	r2, #0
 678 0094 2021     		movs	r1, #32
 679 0096 1A48     		ldr	r0, .L34+4
 680 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 258:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI1_GPIO_Port, STEP4_BI1_Pin, GPIO_PIN_RESET);
 681              		.loc 1 258 0
 682 009c 0122     		movs	r2, #1
 683 009e 8021     		movs	r1, #128
 684 00a0 1748     		ldr	r0, .L34+4
 685 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 259:Src/motor.c   ****                   phase ++;
 686              		.loc 1 259 0
 687 00a6 0022     		movs	r2, #0
ARM GAS  /tmp/ccDtiSc2.s 			page 19


 688 00a8 4FF48071 		mov	r1, #256
 689 00ac 1448     		ldr	r0, .L34+4
 690 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 260:Src/motor.c   **** 
 691              		.loc 1 260 0
 692 00b2 124B     		ldr	r3, .L34
 693 00b4 1B68     		ldr	r3, [r3]
 694 00b6 0133     		adds	r3, r3, #1
 695 00b8 104A     		ldr	r2, .L34
 696 00ba 1360     		str	r3, [r2]
 697              		.loc 1 285 0
 698 00bc 1BE0     		b	.L33
 699              	.L32:
 263:Src/motor.c   ****               {
 700              		.loc 1 263 0
 701 00be 0F4B     		ldr	r3, .L34
 702 00c0 1B68     		ldr	r3, [r3]
 703 00c2 042B     		cmp	r3, #4
 704 00c4 17D1     		bne	.L33
 266:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_AI1_GPIO_Port, STEP4_AI1_Pin, GPIO_PIN_RESET);
 705              		.loc 1 266 0
 706 00c6 0122     		movs	r2, #1
 707 00c8 4021     		movs	r1, #64
 708 00ca 0D48     		ldr	r0, .L34+4
 709 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 267:Src/motor.c   **** 
 710              		.loc 1 267 0
 711 00d0 0022     		movs	r2, #0
 712 00d2 2021     		movs	r1, #32
 713 00d4 0A48     		ldr	r0, .L34+4
 714 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 269:Src/motor.c   ****                   HAL_GPIO_WritePin(STEP4_BI2_GPIO_Port, STEP4_BI2_Pin, GPIO_PIN_RESET);
 715              		.loc 1 269 0
 716 00da 0122     		movs	r2, #1
 717 00dc 4FF48071 		mov	r1, #256
 718 00e0 0748     		ldr	r0, .L34+4
 719 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270:Src/motor.c   ****                   phase  = 1;
 720              		.loc 1 270 0
 721 00e6 0022     		movs	r2, #0
 722 00e8 8021     		movs	r1, #128
 723 00ea 0548     		ldr	r0, .L34+4
 724 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 271:Src/motor.c   **** 
 725              		.loc 1 271 0
 726 00f0 024B     		ldr	r3, .L34
 727 00f2 0122     		movs	r2, #1
 728 00f4 1A60     		str	r2, [r3]
 729              	.L33:
 730              		.loc 1 285 0
 731 00f6 00BF     		nop
 732 00f8 80BD     		pop	{r7, pc}
 733              	.L35:
 734 00fa 00BF     		.align	2
 735              	.L34:
 736 00fc 00000000 		.word	phase.9494
 737 0100 00180240 		.word	1073879040
ARM GAS  /tmp/ccDtiSc2.s 			page 20


 738              		.cfi_endproc
 739              	.LFE140:
 741              		.section	.text.driveMotor,"ax",%progbits
 742              		.align	1
 743              		.global	driveMotor
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	driveMotor:
 750              	.LFB141:
 286:Src/motor.c   **** 
 287:Src/motor.c   **** 
 288:Src/motor.c   **** 
 289:Src/motor.c   **** void driveMotor()
 290:Src/motor.c   **** {
 751              		.loc 1 290 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756 0000 80B4     		push	{r7}
 757              	.LCFI13:
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 7, -4
 760 0002 00AF     		add	r7, sp, #0
 761              	.LCFI14:
 762              		.cfi_def_cfa_register 7
 291:Src/motor.c   **** 
 292:Src/motor.c   **** //    if(motor1.direction == FORWARD || motor1.direction == BACKWARD)
 293:Src/motor.c   **** //       motor1Drive();
 294:Src/motor.c   **** 
 295:Src/motor.c   **** //    if(motor2.direction == FORWARD || motor2.direction == BACKWARD)
 296:Src/motor.c   **** //       motor2Drive();
 297:Src/motor.c   **** 
 298:Src/motor.c   **** //    if(motor3.direction == FORWARD || motor3.direction == BACKWARD)
 299:Src/motor.c   **** //       motor3Drive();
 300:Src/motor.c   **** 
 301:Src/motor.c   **** //    if(motor4.direction == FORWARD || motor4.direction == BACKWARD)
 302:Src/motor.c   **** //       motor4Drive();
 303:Src/motor.c   **** 
 304:Src/motor.c   **** 
 305:Src/motor.c   **** }
 763              		.loc 1 305 0
 764 0004 00BF     		nop
 765 0006 BD46     		mov	sp, r7
 766              	.LCFI15:
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 0008 5DF8047B 		ldr	r7, [sp], #4
 770              	.LCFI16:
 771              		.cfi_restore 7
 772              		.cfi_def_cfa_offset 0
 773 000c 7047     		bx	lr
 774              		.cfi_endproc
 775              	.LFE141:
 777              		.section	.text.moveMotor,"ax",%progbits
ARM GAS  /tmp/ccDtiSc2.s 			page 21


 778              		.align	1
 779              		.global	moveMotor
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	moveMotor:
 786              	.LFB142:
 306:Src/motor.c   **** 
 307:Src/motor.c   **** 
 308:Src/motor.c   **** 
 309:Src/motor.c   **** int moveMotor(int Motor, int Degree, short int Direction)
 310:Src/motor.c   **** {
 787              		.loc 1 310 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 16
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792 0000 80B4     		push	{r7}
 793              	.LCFI17:
 794              		.cfi_def_cfa_offset 4
 795              		.cfi_offset 7, -4
 796 0002 85B0     		sub	sp, sp, #20
 797              	.LCFI18:
 798              		.cfi_def_cfa_offset 24
 799 0004 00AF     		add	r7, sp, #0
 800              	.LCFI19:
 801              		.cfi_def_cfa_register 7
 802 0006 F860     		str	r0, [r7, #12]
 803 0008 B960     		str	r1, [r7, #8]
 804 000a 1346     		mov	r3, r2
 805 000c FB80     		strh	r3, [r7, #6]	@ movhi
 311:Src/motor.c   **** 
 312:Src/motor.c   **** 
 313:Src/motor.c   ****     if(motor1.direction == STOP)
 806              		.loc 1 313 0
 807 000e 264B     		ldr	r3, .L46
 808 0010 1B68     		ldr	r3, [r3]
 809 0012 002B     		cmp	r3, #0
 810 0014 40D1     		bne	.L38
 314:Src/motor.c   ****     {
 315:Src/motor.c   ****         switch(Motor)
 811              		.loc 1 315 0
 812 0016 FB68     		ldr	r3, [r7, #12]
 813 0018 013B     		subs	r3, r3, #1
 814 001a 032B     		cmp	r3, #3
 815 001c 3AD8     		bhi	.L39
 816 001e 01A2     		adr	r2, .L41
 817 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 818              		.p2align 2
 819              	.L41:
 820 0024 35000000 		.word	.L40+1
 821 0028 4D000000 		.word	.L42+1
 822 002c 65000000 		.word	.L43+1
 823 0030 7D000000 		.word	.L44+1
 824              		.p2align 1
 825              	.L40:
ARM GAS  /tmp/ccDtiSc2.s 			page 22


 316:Src/motor.c   ****         {
 317:Src/motor.c   **** 
 318:Src/motor.c   ****             case MOTOR1:
 319:Src/motor.c   ****                 motor1.degree = reductor_coefficient * Degree;
 826              		.loc 1 319 0
 827 0034 4FF49672 		mov	r2, #300
 828 0038 BB68     		ldr	r3, [r7, #8]
 829 003a 03FB02F3 		mul	r3, r3, r2
 830 003e 1A4A     		ldr	r2, .L46
 831 0040 5360     		str	r3, [r2, #4]
 320:Src/motor.c   ****                 motor1.direction = Direction;
 832              		.loc 1 320 0
 833 0042 B7F90630 		ldrsh	r3, [r7, #6]
 834 0046 184A     		ldr	r2, .L46
 835 0048 1360     		str	r3, [r2]
 321:Src/motor.c   **** 
 322:Src/motor.c   ****                 break;
 836              		.loc 1 322 0
 837 004a 23E0     		b	.L39
 838              	.L42:
 323:Src/motor.c   **** 
 324:Src/motor.c   ****             case MOTOR2:
 325:Src/motor.c   ****                 motor2.degree = reductor_coefficient * Degree;
 839              		.loc 1 325 0
 840 004c 4FF49672 		mov	r2, #300
 841 0050 BB68     		ldr	r3, [r7, #8]
 842 0052 03FB02F3 		mul	r3, r3, r2
 843 0056 154A     		ldr	r2, .L46+4
 844 0058 5360     		str	r3, [r2, #4]
 326:Src/motor.c   ****                 motor2.direction = Direction;
 845              		.loc 1 326 0
 846 005a B7F90630 		ldrsh	r3, [r7, #6]
 847 005e 134A     		ldr	r2, .L46+4
 848 0060 1360     		str	r3, [r2]
 327:Src/motor.c   **** 
 328:Src/motor.c   ****                 break;
 849              		.loc 1 328 0
 850 0062 17E0     		b	.L39
 851              	.L43:
 329:Src/motor.c   **** 
 330:Src/motor.c   ****             case MOTOR3:
 331:Src/motor.c   ****                 motor3.degree = reductor_coefficient * Degree;
 852              		.loc 1 331 0
 853 0064 4FF49672 		mov	r2, #300
 854 0068 BB68     		ldr	r3, [r7, #8]
 855 006a 03FB02F3 		mul	r3, r3, r2
 856 006e 104A     		ldr	r2, .L46+8
 857 0070 5360     		str	r3, [r2, #4]
 332:Src/motor.c   ****                 motor3.direction = Direction;
 858              		.loc 1 332 0
 859 0072 B7F90630 		ldrsh	r3, [r7, #6]
 860 0076 0E4A     		ldr	r2, .L46+8
 861 0078 1360     		str	r3, [r2]
 333:Src/motor.c   **** 
 334:Src/motor.c   ****                 break;
 862              		.loc 1 334 0
 863 007a 0BE0     		b	.L39
ARM GAS  /tmp/ccDtiSc2.s 			page 23


 864              	.L44:
 335:Src/motor.c   **** 
 336:Src/motor.c   **** 
 337:Src/motor.c   ****             case MOTOR4:
 338:Src/motor.c   ****                 motor4.degree = reductor_coefficient * Degree;
 865              		.loc 1 338 0
 866 007c 4FF49672 		mov	r2, #300
 867 0080 BB68     		ldr	r3, [r7, #8]
 868 0082 03FB02F3 		mul	r3, r3, r2
 869 0086 0B4A     		ldr	r2, .L46+12
 870 0088 5360     		str	r3, [r2, #4]
 339:Src/motor.c   ****                 motor4.direction = Direction;
 871              		.loc 1 339 0
 872 008a B7F90630 		ldrsh	r3, [r7, #6]
 873 008e 094A     		ldr	r2, .L46+12
 874 0090 1360     		str	r3, [r2]
 340:Src/motor.c   **** 
 341:Src/motor.c   ****                 break;
 875              		.loc 1 341 0
 876 0092 00BF     		nop
 877              	.L39:
 342:Src/motor.c   ****         }
 343:Src/motor.c   **** 
 344:Src/motor.c   ****         return SUCCESS;
 878              		.loc 1 344 0
 879 0094 0123     		movs	r3, #1
 880 0096 00E0     		b	.L45
 881              	.L38:
 345:Src/motor.c   ****     }
 346:Src/motor.c   ****     else
 347:Src/motor.c   ****     {
 348:Src/motor.c   **** 
 349:Src/motor.c   ****         return ERROR;
 882              		.loc 1 349 0
 883 0098 0023     		movs	r3, #0
 884              	.L45:
 350:Src/motor.c   ****     }
 351:Src/motor.c   **** 
 352:Src/motor.c   **** }
 885              		.loc 1 352 0
 886 009a 1846     		mov	r0, r3
 887 009c 1437     		adds	r7, r7, #20
 888              	.LCFI20:
 889              		.cfi_def_cfa_offset 4
 890 009e BD46     		mov	sp, r7
 891              	.LCFI21:
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 00a0 5DF8047B 		ldr	r7, [sp], #4
 895              	.LCFI22:
 896              		.cfi_restore 7
 897              		.cfi_def_cfa_offset 0
 898 00a4 7047     		bx	lr
 899              	.L47:
 900 00a6 00BF     		.align	2
 901              	.L46:
 902 00a8 00000000 		.word	motor1
ARM GAS  /tmp/ccDtiSc2.s 			page 24


 903 00ac 00000000 		.word	motor2
 904 00b0 00000000 		.word	motor3
 905 00b4 00000000 		.word	motor4
 906              		.cfi_endproc
 907              	.LFE142:
 909              		.section	.data.phase.9485,"aw",%progbits
 910              		.align	2
 913              	phase.9485:
 914 0000 01000000 		.word	1
 915              		.section	.data.phase.9488,"aw",%progbits
 916              		.align	2
 919              	phase.9488:
 920 0000 01000000 		.word	1
 921              		.section	.data.phase.9491,"aw",%progbits
 922              		.align	2
 925              	phase.9491:
 926 0000 01000000 		.word	1
 927              		.section	.data.phase.9494,"aw",%progbits
 928              		.align	2
 931              	phase.9494:
 932 0000 01000000 		.word	1
 933              		.text
 934              	.Letext0:
 935              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 936              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 937              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 938              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 939              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 940              		.file 7 "/usr/include/newlib/sys/lock.h"
 941              		.file 8 "/usr/include/newlib/sys/_types.h"
 942              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 943              		.file 10 "/usr/include/newlib/sys/reent.h"
 944              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 945              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 946              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 947              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 948              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 949              		.file 16 "Inc/motor.h"
 950              		.file 17 "Inc/tim.h"
ARM GAS  /tmp/ccDtiSc2.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 motor.c
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
     /tmp/ccDtiSc2.s:26     .rodata.reductor_coefficient:0000000000000000 reductor_coefficient
     /tmp/ccDtiSc2.s:23     .rodata.reductor_coefficient:0000000000000000 $d
     /tmp/ccDtiSc2.s:29     .text.motorInit:0000000000000000 $t
     /tmp/ccDtiSc2.s:36     .text.motorInit:0000000000000000 motorInit
     /tmp/ccDtiSc2.s:60     .text.motorInit:0000000000000010 $d
     /tmp/ccDtiSc2.s:65     .text.motor1Drive:0000000000000000 $t
     /tmp/ccDtiSc2.s:72     .text.motor1Drive:0000000000000000 motor1Drive
     /tmp/ccDtiSc2.s:239    .text.motor1Drive:0000000000000124 $d
     /tmp/ccDtiSc2.s:913    .data.phase.9485:0000000000000000 phase.9485
     /tmp/ccDtiSc2.s:246    .text.motor2Drive:0000000000000000 $t
     /tmp/ccDtiSc2.s:253    .text.motor2Drive:0000000000000000 motor2Drive
     /tmp/ccDtiSc2.s:405    .text.motor2Drive:0000000000000114 $d
     /tmp/ccDtiSc2.s:919    .data.phase.9488:0000000000000000 phase.9488
     /tmp/ccDtiSc2.s:411    .text.motor3Drive:0000000000000000 $t
     /tmp/ccDtiSc2.s:418    .text.motor3Drive:0000000000000000 motor3Drive
     /tmp/ccDtiSc2.s:570    .text.motor3Drive:0000000000000104 $d
     /tmp/ccDtiSc2.s:925    .data.phase.9491:0000000000000000 phase.9491
     /tmp/ccDtiSc2.s:577    .text.motor4Drive:0000000000000000 $t
     /tmp/ccDtiSc2.s:584    .text.motor4Drive:0000000000000000 motor4Drive
     /tmp/ccDtiSc2.s:736    .text.motor4Drive:00000000000000fc $d
     /tmp/ccDtiSc2.s:931    .data.phase.9494:0000000000000000 phase.9494
     /tmp/ccDtiSc2.s:742    .text.driveMotor:0000000000000000 $t
     /tmp/ccDtiSc2.s:749    .text.driveMotor:0000000000000000 driveMotor
     /tmp/ccDtiSc2.s:778    .text.moveMotor:0000000000000000 $t
     /tmp/ccDtiSc2.s:785    .text.moveMotor:0000000000000000 moveMotor
     /tmp/ccDtiSc2.s:820    .text.moveMotor:0000000000000024 $d
     /tmp/ccDtiSc2.s:824    .text.moveMotor:0000000000000034 $t
     /tmp/ccDtiSc2.s:902    .text.moveMotor:00000000000000a8 $d
     /tmp/ccDtiSc2.s:910    .data.phase.9485:0000000000000000 $d
     /tmp/ccDtiSc2.s:916    .data.phase.9488:0000000000000000 $d
     /tmp/ccDtiSc2.s:922    .data.phase.9491:0000000000000000 $d
     /tmp/ccDtiSc2.s:928    .data.phase.9494:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Start_IT
htim2
HAL_GPIO_WritePin
