ARM GAS  /tmp/ccnfC67i.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_eth.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ETH_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_ETH_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ETH_Init:
  26              	.LFB138:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @file    stm32f7xx_hal_eth.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief   ETH HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          functionalities of the Ethernet (ETH) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Peripheral Control functions 
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                     ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Declare a ETH_HandleTypeDef handle structure, for example:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          ETH_HandleTypeDef  heth;
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Fill parameters of Init structure in heth handle
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Call HAL_ETH_Init() API to initialize the Ethernet peripheral (MAC, DMA, ...) 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Initialize the ETH low level resources through the HAL_ETH_MspInit() API:
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Enable the Ethernet interface clock using 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMAC_CLK_ENABLE();
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMACTX_CLK_ENABLE();
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMACRX_CLK_ENABLE();
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Initialize the related GPIO clocks
ARM GAS  /tmp/ccnfC67i.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Configure Ethernet pin-out
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Configure Ethernet NVIC interrupt (IT mode)   
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Initialize Ethernet DMA Descriptors in chain mode and point to allocated buffers:
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_DMATxDescListInit(); for Transmission process
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_DMARxDescListInit(); for Reception process
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Enable MAC and DMA transmission and reception:
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_Start();
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Prepare ETH DMA TX Descriptors and give the hand to ETH DMA to transfer 
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          the frame to MAC TX FIFO:
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_TransmitFrame();
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Poll for a received frame in ETH RX DMA Descriptors and get received 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          frame parameters
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_GetReceivedFrame(); (should be called into an infinite loop)
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Get a received frame when an ETH RX interrupt occurs:
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_GetReceivedFrame_IT(); (called in IT mode only)
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Communicate with external PHY device:
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) Read a specific register from the PHY  
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****               HAL_ETH_ReadPHYRegister();
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) Write data to a specific RHY register:
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****               HAL_ETH_WritePHYRegister();
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Configure the Ethernet MAC after ETH peripheral initialization
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigMAC(); all MAC parameters should be filled.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Configure the Ethernet DMA after ETH peripheral initialization
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigDMA(); all DMA parameters should be filled.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @attention
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * Redistribution and use in source and binary forms, with or without modification,
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * are permitted provided that the following conditions are met:
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      this list of conditions and the following disclaimer.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      this list of conditions and the following disclaimer in the documentation
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      and/or other materials provided with the distribution.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      may be used to endorse or promote products derived from this software
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      without specific prior written permission.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccnfC67i.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Includes ------------------------------------------------------------------*/
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #include "stm32f7xx_hal.h"
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @addtogroup STM32F7xx_HAL_Driver
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH ETH 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief ETH HAL module driver
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #ifdef HAL_ETH_MODULE_ENABLED
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if defined (ETH)
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private typedef -----------------------------------------------------------*/
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private define ------------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Private_Constants ETH Private Constants
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_SWRESET                 ((uint32_t)500)  
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_LINKED_STATE          ((uint32_t)5000)  
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_AUTONEGO_COMPLETED    ((uint32_t)5000) 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private macro -------------------------------------------------------------*/
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private variables ---------------------------------------------------------*/
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private function prototypes -----------------------------------------------*/
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Private_Functions ETH Private Functions
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err);
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr);
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth);
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth);
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth);
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth);
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth);
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth);
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth);
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth);
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth);
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private functions ---------------------------------------------------------*/
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
ARM GAS  /tmp/ccnfC67i.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions ETH Exported Functions
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group1 Initialization and de-initialization functions 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Initialization and Configuration functions 
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim    
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             ##### Initialization and de-initialization functions #####
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]  This section provides functions allowing to:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Initialize and configure the Ethernet peripheral
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) De-initialize the Ethernet peripheral
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the Ethernet MAC and DMA according to default
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         parameters.
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Init(ETH_HandleTypeDef *heth)
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
  28              		.loc 1 173 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tempreg = 0, phyreg = 0;
  44              		.loc 1 174 0
  45 0008 0023     		movs	r3, #0
  46 000a FB61     		str	r3, [r7, #28]
  47 000c 0023     		movs	r3, #0
  48 000e FB60     		str	r3, [r7, #12]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t hclk = 60000000;
  49              		.loc 1 175 0
  50 0010 A94B     		ldr	r3, .L28
  51 0012 BB61     		str	r3, [r7, #24]
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
  52              		.loc 1 176 0
  53 0014 0023     		movs	r3, #0
ARM GAS  /tmp/ccnfC67i.s 			page 5


  54 0016 7B61     		str	r3, [r7, #20]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t err = ETH_SUCCESS;
  55              		.loc 1 177 0
  56 0018 0023     		movs	r3, #0
  57 001a 3B61     		str	r3, [r7, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth == NULL)
  58              		.loc 1 180 0
  59 001c 7B68     		ldr	r3, [r7, #4]
  60 001e 002B     		cmp	r3, #0
  61 0020 01D1     		bne	.L2
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
  62              		.loc 1 182 0
  63 0022 0123     		movs	r3, #1
  64 0024 83E1     		b	.L26
  65              	.L2:
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_AUTONEGOTIATION(heth->Init.AutoNegotiation));
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RX_MODE(heth->Init.RxMode));
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_CHECKSUM_MODE(heth->Init.ChecksumMode));
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_MEDIA_INTERFACE(heth->Init.MediaInterface));  
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_RESET)
  66              		.loc 1 191 0
  67 0026 7B68     		ldr	r3, [r7, #4]
  68 0028 93F84430 		ldrb	r3, [r3, #68]
  69 002c DBB2     		uxtb	r3, r3
  70 002e 002B     		cmp	r3, #0
  71 0030 06D1     		bne	.L4
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Allocate lock resource and initialize it */
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->Lock = HAL_UNLOCKED;
  72              		.loc 1 194 0
  73 0032 7B68     		ldr	r3, [r7, #4]
  74 0034 0022     		movs	r2, #0
  75 0036 83F84520 		strb	r2, [r3, #69]
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC. */
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_MspInit(heth);
  76              		.loc 1 196 0
  77 003a 7868     		ldr	r0, [r7, #4]
  78 003c FFF7FEFF 		bl	HAL_ETH_MspInit
  79              	.L4:
  80              	.LBB2:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable SYSCFG Clock */
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  81              		.loc 1 200 0
  82 0040 9E4B     		ldr	r3, .L28+4
  83 0042 5B6C     		ldr	r3, [r3, #68]
  84 0044 9D4A     		ldr	r2, .L28+4
  85 0046 43F48043 		orr	r3, r3, #16384
  86 004a 5364     		str	r3, [r2, #68]
ARM GAS  /tmp/ccnfC67i.s 			page 6


  87 004c 9B4B     		ldr	r3, .L28+4
  88 004e 5B6C     		ldr	r3, [r3, #68]
  89 0050 03F48043 		and	r3, r3, #16384
  90 0054 BB60     		str	r3, [r7, #8]
  91 0056 BB68     		ldr	r3, [r7, #8]
  92              	.LBE2:
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Select MII or RMII Mode*/
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC &= ~(SYSCFG_PMC_MII_RMII_SEL);
  93              		.loc 1 203 0
  94 0058 994B     		ldr	r3, .L28+8
  95 005a 5B68     		ldr	r3, [r3, #4]
  96 005c 984A     		ldr	r2, .L28+8
  97 005e 23F40003 		bic	r3, r3, #8388608
  98 0062 5360     		str	r3, [r2, #4]
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC |= (uint32_t)heth->Init.MediaInterface;
  99              		.loc 1 204 0
 100 0064 964B     		ldr	r3, .L28+8
 101 0066 5A68     		ldr	r2, [r3, #4]
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 1B6A     		ldr	r3, [r3, #32]
 104 006c 9449     		ldr	r1, .L28+8
 105 006e 1343     		orrs	r3, r3, r2
 106 0070 4B60     		str	r3, [r1, #4]
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Ethernet Software reset */
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the SWR bit: resets all MAC subsystem internal registers and logic */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* After reset all the registers holds their respective reset values */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMABMR |= ETH_DMABMR_SR;
 107              		.loc 1 209 0
 108 0072 7B68     		ldr	r3, [r7, #4]
 109 0074 1B68     		ldr	r3, [r3]
 110 0076 03F58053 		add	r3, r3, #4096
 111 007a 1A68     		ldr	r2, [r3]
 112 007c 7B68     		ldr	r3, [r7, #4]
 113 007e 1B68     		ldr	r3, [r3]
 114 0080 42F00102 		orr	r2, r2, #1
 115 0084 03F58053 		add	r3, r3, #4096
 116 0088 1A60     		str	r2, [r3]
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 117              		.loc 1 212 0
 118 008a FFF7FEFF 		bl	HAL_GetTick
 119 008e 7861     		str	r0, [r7, #20]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait for software reset */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while (((heth->Instance)->DMABMR & ETH_DMABMR_SR) != (uint32_t)RESET)
 120              		.loc 1 215 0
 121 0090 11E0     		b	.L5
 122              	.L6:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_SWRESET)
 123              		.loc 1 218 0
 124 0092 FFF7FEFF 		bl	HAL_GetTick
 125 0096 0246     		mov	r2, r0
ARM GAS  /tmp/ccnfC67i.s 			page 7


 126 0098 7B69     		ldr	r3, [r7, #20]
 127 009a D31A     		subs	r3, r2, r3
 128 009c B3F5FA7F 		cmp	r3, #500
 129 00a0 09D9     		bls	.L5
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {     
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_TIMEOUT;
 130              		.loc 1 220 0
 131 00a2 7B68     		ldr	r3, [r7, #4]
 132 00a4 0322     		movs	r2, #3
 133 00a6 83F84420 		strb	r2, [r3, #68]
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 134              		.loc 1 223 0
 135 00aa 7B68     		ldr	r3, [r7, #4]
 136 00ac 0022     		movs	r2, #0
 137 00ae 83F84520 		strb	r2, [r3, #69]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Note: The SWR is not performed if the ETH_RX_CLK or the ETH_TX_CLK are  
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          not available, please check your external PHY or the IO configuration */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 138              		.loc 1 228 0
 139 00b2 0323     		movs	r3, #3
 140 00b4 3BE1     		b	.L26
 141              	.L5:
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 142              		.loc 1 215 0
 143 00b6 7B68     		ldr	r3, [r7, #4]
 144 00b8 1B68     		ldr	r3, [r3]
 145 00ba 03F58053 		add	r3, r3, #4096
 146 00be 1B68     		ldr	r3, [r3]
 147 00c0 03F00103 		and	r3, r3, #1
 148 00c4 002B     		cmp	r3, #0
 149 00c6 E4D1     		bne	.L6
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*-------------------------------- MAC Initialization ----------------------*/
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tempreg = (heth->Instance)->MACMIIAR;
 150              		.loc 1 234 0
 151 00c8 7B68     		ldr	r3, [r7, #4]
 152 00ca 1B68     		ldr	r3, [r3]
 153 00cc 1B69     		ldr	r3, [r3, #16]
 154 00ce FB61     		str	r3, [r7, #28]
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear CSR Clock Range CR[2:0] bits */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tempreg &= ETH_MACMIIAR_CR_MASK;
 155              		.loc 1 236 0
 156 00d0 FB69     		ldr	r3, [r7, #28]
 157 00d2 23F01C03 		bic	r3, r3, #28
 158 00d6 FB61     		str	r3, [r7, #28]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get hclk frequency value */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   hclk = HAL_RCC_GetHCLKFreq();
 159              		.loc 1 239 0
 160 00d8 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/ccnfC67i.s 			page 8


 161 00dc B861     		str	r0, [r7, #24]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set CR bits depending on hclk value */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((hclk >= 20000000)&&(hclk < 35000000))
 162              		.loc 1 242 0
 163 00de BB69     		ldr	r3, [r7, #24]
 164 00e0 784A     		ldr	r2, .L28+12
 165 00e2 9342     		cmp	r3, r2
 166 00e4 08D9     		bls	.L7
 167              		.loc 1 242 0 is_stmt 0 discriminator 1
 168 00e6 BB69     		ldr	r3, [r7, #24]
 169 00e8 774A     		ldr	r2, .L28+16
 170 00ea 9342     		cmp	r3, r2
 171 00ec 04D8     		bhi	.L7
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 20-35 MHz */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div16;
 172              		.loc 1 245 0 is_stmt 1
 173 00ee FB69     		ldr	r3, [r7, #28]
 174 00f0 43F00803 		orr	r3, r3, #8
 175 00f4 FB61     		str	r3, [r7, #28]
 176 00f6 27E0     		b	.L8
 177              	.L7:
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 35000000)&&(hclk < 60000000))
 178              		.loc 1 247 0
 179 00f8 BB69     		ldr	r3, [r7, #24]
 180 00fa 734A     		ldr	r2, .L28+16
 181 00fc 9342     		cmp	r3, r2
 182 00fe 08D9     		bls	.L9
 183              		.loc 1 247 0 is_stmt 0 discriminator 1
 184 0100 BB69     		ldr	r3, [r7, #24]
 185 0102 724A     		ldr	r2, .L28+20
 186 0104 9342     		cmp	r3, r2
 187 0106 04D8     		bhi	.L9
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 35-60 MHz */ 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div26;
 188              		.loc 1 250 0 is_stmt 1
 189 0108 FB69     		ldr	r3, [r7, #28]
 190 010a 43F00C03 		orr	r3, r3, #12
 191 010e FB61     		str	r3, [r7, #28]
 192 0110 1AE0     		b	.L8
 193              	.L9:
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 60000000)&&(hclk < 100000000))
 194              		.loc 1 252 0
 195 0112 BB69     		ldr	r3, [r7, #24]
 196 0114 6D4A     		ldr	r2, .L28+20
 197 0116 9342     		cmp	r3, r2
 198 0118 03D9     		bls	.L10
 199              		.loc 1 252 0 is_stmt 0 discriminator 1
 200 011a BB69     		ldr	r3, [r7, #24]
 201 011c 6C4A     		ldr	r2, .L28+24
 202 011e 9342     		cmp	r3, r2
 203 0120 11D9     		bls	.L27
 204              	.L10:
ARM GAS  /tmp/ccnfC67i.s 			page 9


 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 60-100 MHz */ 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div42;
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 100000000)&&(hclk < 150000000))
 205              		.loc 1 257 0 is_stmt 1
 206 0122 BB69     		ldr	r3, [r7, #24]
 207 0124 6A4A     		ldr	r2, .L28+24
 208 0126 9342     		cmp	r3, r2
 209 0128 08D9     		bls	.L11
 210              		.loc 1 257 0 is_stmt 0 discriminator 1
 211 012a BB69     		ldr	r3, [r7, #24]
 212 012c 694A     		ldr	r2, .L28+28
 213 012e 9342     		cmp	r3, r2
 214 0130 04D8     		bhi	.L11
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 100-150 MHz */ 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div62;
 215              		.loc 1 260 0 is_stmt 1
 216 0132 FB69     		ldr	r3, [r7, #28]
 217 0134 43F00403 		orr	r3, r3, #4
 218 0138 FB61     		str	r3, [r7, #28]
 219 013a 05E0     		b	.L8
 220              	.L11:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* ((hclk >= 150000000)&&(hclk <= 216000000)) */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 150-216 MHz */ 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div102;    
 221              		.loc 1 265 0
 222 013c FB69     		ldr	r3, [r7, #28]
 223 013e 43F01003 		orr	r3, r3, #16
 224 0142 FB61     		str	r3, [r7, #28]
 225 0144 00E0     		b	.L8
 226              	.L27:
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 227              		.loc 1 255 0
 228 0146 00BF     		nop
 229              	.L8:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MAC MIIAR: Configure the ETHERNET CSR Clock Range */
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACMIIAR = (uint32_t)tempreg;
 230              		.loc 1 269 0
 231 0148 7B68     		ldr	r3, [r7, #4]
 232 014a 1B68     		ldr	r3, [r3]
 233 014c FA69     		ldr	r2, [r7, #28]
 234 014e 1A61     		str	r2, [r3, #16]
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*-------------------- PHY initialization and configuration ----------------*/
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Put the PHY in reset mode */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((HAL_ETH_WritePHYRegister(heth, PHY_BCR, PHY_RESET)) != HAL_OK)
 235              		.loc 1 273 0
 236 0150 4FF40042 		mov	r2, #32768
 237 0154 0021     		movs	r1, #0
 238 0156 7868     		ldr	r0, [r7, #4]
 239 0158 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
ARM GAS  /tmp/ccnfC67i.s 			page 10


 240 015c 0346     		mov	r3, r0
 241 015e 002B     		cmp	r3, #0
 242 0160 0BD0     		beq	.L12
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* In case of write timeout */
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     err = ETH_ERROR;
 243              		.loc 1 276 0
 244 0162 0123     		movs	r3, #1
 245 0164 3B61     		str	r3, [r7, #16]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Config MAC and DMA */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     ETH_MACDMAConfig(heth, err);
 246              		.loc 1 279 0
 247 0166 3969     		ldr	r1, [r7, #16]
 248 0168 7868     		ldr	r0, [r7, #4]
 249 016a FFF7FEFF 		bl	ETH_MACDMAConfig
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the ETH peripheral state to READY */
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 250              		.loc 1 282 0
 251 016e 7B68     		ldr	r3, [r7, #4]
 252 0170 0122     		movs	r2, #1
 253 0172 83F84420 		strb	r2, [r3, #68]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Return HAL_ERROR */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 254              		.loc 1 285 0
 255 0176 0123     		movs	r3, #1
 256 0178 D9E0     		b	.L26
 257              	.L12:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Delay to assure PHY reset */
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(PHY_RESET_DELAY);
 258              		.loc 1 289 0
 259 017a FF20     		movs	r0, #255
 260 017c FFF7FEFF 		bl	HAL_Delay
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((heth->Init).AutoNegotiation != ETH_AUTONEGOTIATION_DISABLE)
 261              		.loc 1 291 0
 262 0180 7B68     		ldr	r3, [r7, #4]
 263 0182 5B68     		ldr	r3, [r3, #4]
 264 0184 002B     		cmp	r3, #0
 265 0186 00F0A780 		beq	.L13
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get tick */
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 266              		.loc 1 294 0
 267 018a FFF7FEFF 		bl	HAL_GetTick
 268 018e 7861     		str	r0, [r7, #20]
 269              	.L15:
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* We wait for linked status */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     do
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_ETH_ReadPHYRegister(heth, PHY_BSR, &phyreg);
 270              		.loc 1 299 0
ARM GAS  /tmp/ccnfC67i.s 			page 11


 271 0190 07F10C03 		add	r3, r7, #12
 272 0194 1A46     		mov	r2, r3
 273 0196 0121     		movs	r1, #1
 274 0198 7868     		ldr	r0, [r7, #4]
 275 019a FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check for the Timeout */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_LINKED_STATE)
 276              		.loc 1 302 0
 277 019e FFF7FEFF 		bl	HAL_GetTick
 278 01a2 0246     		mov	r2, r0
 279 01a4 7B69     		ldr	r3, [r7, #20]
 280 01a6 D31A     		subs	r3, r2, r3
 281 01a8 41F28832 		movw	r2, #5000
 282 01ac 9342     		cmp	r3, r2
 283 01ae 0FD9     		bls	.L14
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* In case of write timeout */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         err = ETH_ERROR;
 284              		.loc 1 305 0
 285 01b0 0123     		movs	r3, #1
 286 01b2 3B61     		str	r3, [r7, #16]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Config MAC and DMA */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         ETH_MACDMAConfig(heth, err);
 287              		.loc 1 308 0
 288 01b4 3969     		ldr	r1, [r7, #16]
 289 01b6 7868     		ldr	r0, [r7, #4]
 290 01b8 FFF7FEFF 		bl	ETH_MACDMAConfig
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->State= HAL_ETH_STATE_READY;
 291              		.loc 1 310 0
 292 01bc 7B68     		ldr	r3, [r7, #4]
 293 01be 0122     		movs	r2, #1
 294 01c0 83F84420 		strb	r2, [r3, #68]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Process Unlocked */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         __HAL_UNLOCK(heth);
 295              		.loc 1 313 0
 296 01c4 7B68     		ldr	r3, [r7, #4]
 297 01c6 0022     		movs	r2, #0
 298 01c8 83F84520 		strb	r2, [r3, #69]
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         return HAL_TIMEOUT;
 299              		.loc 1 315 0
 300 01cc 0323     		movs	r3, #3
 301 01ce AEE0     		b	.L26
 302              	.L14:
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } while (((phyreg & PHY_LINKED_STATUS) != PHY_LINKED_STATUS));
 303              		.loc 1 317 0
 304 01d0 FB68     		ldr	r3, [r7, #12]
 305 01d2 03F00403 		and	r3, r3, #4
 306 01d6 002B     		cmp	r3, #0
 307 01d8 DAD0     		beq	.L15
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
ARM GAS  /tmp/ccnfC67i.s 			page 12


 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Enable Auto-Negotiation */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_ETH_WritePHYRegister(heth, PHY_BCR, PHY_AUTONEGOTIATION)) != HAL_OK)
 308              		.loc 1 321 0
 309 01da 4FF48052 		mov	r2, #4096
 310 01de 0021     		movs	r1, #0
 311 01e0 7868     		ldr	r0, [r7, #4]
 312 01e2 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 313 01e6 0346     		mov	r3, r0
 314 01e8 002B     		cmp	r3, #0
 315 01ea 0BD0     		beq	.L16
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 316              		.loc 1 324 0
 317 01ec 0123     		movs	r3, #1
 318 01ee 3B61     		str	r3, [r7, #16]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 319              		.loc 1 327 0
 320 01f0 3969     		ldr	r1, [r7, #16]
 321 01f2 7868     		ldr	r0, [r7, #4]
 322 01f4 FFF7FEFF 		bl	ETH_MACDMAConfig
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 323              		.loc 1 330 0
 324 01f8 7B68     		ldr	r3, [r7, #4]
 325 01fa 0122     		movs	r2, #1
 326 01fc 83F84420 		strb	r2, [r3, #68]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;   
 327              		.loc 1 333 0
 328 0200 0123     		movs	r3, #1
 329 0202 94E0     		b	.L26
 330              	.L16:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get tick */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 331              		.loc 1 337 0
 332 0204 FFF7FEFF 		bl	HAL_GetTick
 333 0208 7861     		str	r0, [r7, #20]
 334              	.L18:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the auto-negotiation will be completed */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     do
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_ETH_ReadPHYRegister(heth, PHY_BSR, &phyreg);
 335              		.loc 1 342 0
 336 020a 07F10C03 		add	r3, r7, #12
 337 020e 1A46     		mov	r2, r3
 338 0210 0121     		movs	r1, #1
 339 0212 7868     		ldr	r0, [r7, #4]
 340 0214 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
ARM GAS  /tmp/ccnfC67i.s 			page 13


 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check for the Timeout */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_AUTONEGO_COMPLETED)
 341              		.loc 1 345 0
 342 0218 FFF7FEFF 		bl	HAL_GetTick
 343 021c 0246     		mov	r2, r0
 344 021e 7B69     		ldr	r3, [r7, #20]
 345 0220 D31A     		subs	r3, r2, r3
 346 0222 41F28832 		movw	r2, #5000
 347 0226 9342     		cmp	r3, r2
 348 0228 0FD9     		bls	.L17
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* In case of write timeout */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         err = ETH_ERROR;
 349              		.loc 1 348 0
 350 022a 0123     		movs	r3, #1
 351 022c 3B61     		str	r3, [r7, #16]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Config MAC and DMA */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         ETH_MACDMAConfig(heth, err);
 352              		.loc 1 351 0
 353 022e 3969     		ldr	r1, [r7, #16]
 354 0230 7868     		ldr	r0, [r7, #4]
 355 0232 FFF7FEFF 		bl	ETH_MACDMAConfig
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->State= HAL_ETH_STATE_READY;
 356              		.loc 1 353 0
 357 0236 7B68     		ldr	r3, [r7, #4]
 358 0238 0122     		movs	r2, #1
 359 023a 83F84420 		strb	r2, [r3, #68]
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Process Unlocked */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         __HAL_UNLOCK(heth);
 360              		.loc 1 356 0
 361 023e 7B68     		ldr	r3, [r7, #4]
 362 0240 0022     		movs	r2, #0
 363 0242 83F84520 		strb	r2, [r3, #69]
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         return HAL_TIMEOUT;
 364              		.loc 1 358 0
 365 0246 0323     		movs	r3, #3
 366 0248 71E0     		b	.L26
 367              	.L17:
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } while (((phyreg & PHY_AUTONEGO_COMPLETE) != PHY_AUTONEGO_COMPLETE));
 368              		.loc 1 361 0
 369 024a FB68     		ldr	r3, [r7, #12]
 370 024c 03F02003 		and	r3, r3, #32
 371 0250 002B     		cmp	r3, #0
 372 0252 DAD0     		beq	.L18
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Read the result of the auto-negotiation */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_ETH_ReadPHYRegister(heth, PHY_SR, &phyreg)) != HAL_OK)
 373              		.loc 1 364 0
 374 0254 07F10C03 		add	r3, r7, #12
 375 0258 1A46     		mov	r2, r3
 376 025a 1021     		movs	r1, #16
ARM GAS  /tmp/ccnfC67i.s 			page 14


 377 025c 7868     		ldr	r0, [r7, #4]
 378 025e FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 379 0262 0346     		mov	r3, r0
 380 0264 002B     		cmp	r3, #0
 381 0266 0BD0     		beq	.L19
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 382              		.loc 1 367 0
 383 0268 0123     		movs	r3, #1
 384 026a 3B61     		str	r3, [r7, #16]
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 385              		.loc 1 370 0
 386 026c 3969     		ldr	r1, [r7, #16]
 387 026e 7868     		ldr	r0, [r7, #4]
 388 0270 FFF7FEFF 		bl	ETH_MACDMAConfig
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 389              		.loc 1 373 0
 390 0274 7B68     		ldr	r3, [r7, #4]
 391 0276 0122     		movs	r2, #1
 392 0278 83F84420 		strb	r2, [r3, #68]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;   
 393              		.loc 1 376 0
 394 027c 0123     		movs	r3, #1
 395 027e 56E0     		b	.L26
 396              	.L19:
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Configure the MAC with the Duplex Mode fixed by the auto-negotiation process */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((phyreg & PHY_DUPLEX_STATUS) != (uint32_t)RESET)
 397              		.loc 1 380 0
 398 0280 FB68     		ldr	r3, [r7, #12]
 399 0282 03F00403 		and	r3, r3, #4
 400 0286 002B     		cmp	r3, #0
 401 0288 04D0     		beq	.L20
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet duplex mode to Full-duplex following the auto-negotiation */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).DuplexMode = ETH_MODE_FULLDUPLEX;  
 402              		.loc 1 383 0
 403 028a 7B68     		ldr	r3, [r7, #4]
 404 028c 4FF40062 		mov	r2, #2048
 405 0290 DA60     		str	r2, [r3, #12]
 406 0292 02E0     		b	.L21
 407              	.L20:
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet duplex mode to Half-duplex following the auto-negotiation */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).DuplexMode = ETH_MODE_HALFDUPLEX;           
 408              		.loc 1 388 0
 409 0294 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccnfC67i.s 			page 15


 410 0296 0022     		movs	r2, #0
 411 0298 DA60     		str	r2, [r3, #12]
 412              	.L21:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Configure the MAC with the speed fixed by the auto-negotiation process */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((phyreg & PHY_SPEED_STATUS) == PHY_SPEED_STATUS)
 413              		.loc 1 391 0
 414 029a FB68     		ldr	r3, [r7, #12]
 415 029c 03F00203 		and	r3, r3, #2
 416 02a0 002B     		cmp	r3, #0
 417 02a2 03D0     		beq	.L22
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {  
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet speed to 10M following the auto-negotiation */
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).Speed = ETH_SPEED_10M; 
 418              		.loc 1 394 0
 419 02a4 7B68     		ldr	r3, [r7, #4]
 420 02a6 0022     		movs	r2, #0
 421 02a8 9A60     		str	r2, [r3, #8]
 422 02aa 37E0     		b	.L24
 423              	.L22:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {   
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet speed to 100M following the auto-negotiation */ 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).Speed = ETH_SPEED_100M;
 424              		.loc 1 399 0
 425 02ac 7B68     		ldr	r3, [r7, #4]
 426 02ae 4FF48042 		mov	r2, #16384
 427 02b2 9A60     		str	r2, [r3, #8]
 428 02b4 32E0     		b	.L24
 429              	.L29:
 430 02b6 00BF     		.align	2
 431              	.L28:
 432 02b8 00879303 		.word	60000000
 433 02bc 00380240 		.word	1073887232
 434 02c0 00380140 		.word	1073821696
 435 02c4 FF2C3101 		.word	19999999
 436 02c8 BF0E1602 		.word	34999999
 437 02cc FF869303 		.word	59999999
 438 02d0 FFE0F505 		.word	99999999
 439 02d4 7FD1F008 		.word	149999999
 440              	.L13:
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* AutoNegotiation Disable */
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check parameters */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_SPEED(heth->Init.Speed));
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode));
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set MAC Speed and Duplex Mode */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(HAL_ETH_WritePHYRegister(heth, PHY_BCR, ((uint16_t)((heth->Init).DuplexMode >> 3) |
 441              		.loc 1 409 0
 442 02d8 7B68     		ldr	r3, [r7, #4]
 443 02da DB68     		ldr	r3, [r3, #12]
 444 02dc DB08     		lsrs	r3, r3, #3
 445 02de 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccnfC67i.s 			page 16


 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 446              		.loc 1 410 0
 447 02e0 7B68     		ldr	r3, [r7, #4]
 448 02e2 9B68     		ldr	r3, [r3, #8]
 449 02e4 5B08     		lsrs	r3, r3, #1
 450 02e6 9BB2     		uxth	r3, r3
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 451              		.loc 1 409 0
 452 02e8 1343     		orrs	r3, r3, r2
 453 02ea 9BB2     		uxth	r3, r3
 454 02ec 1A46     		mov	r2, r3
 455 02ee 0021     		movs	r1, #0
 456 02f0 7868     		ldr	r0, [r7, #4]
 457 02f2 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 458 02f6 0346     		mov	r3, r0
 459 02f8 002B     		cmp	r3, #0
 460 02fa 0BD0     		beq	.L25
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 461              		.loc 1 413 0
 462 02fc 0123     		movs	r3, #1
 463 02fe 3B61     		str	r3, [r7, #16]
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 464              		.loc 1 416 0
 465 0300 3969     		ldr	r1, [r7, #16]
 466 0302 7868     		ldr	r0, [r7, #4]
 467 0304 FFF7FEFF 		bl	ETH_MACDMAConfig
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 468              		.loc 1 419 0
 469 0308 7B68     		ldr	r3, [r7, #4]
 470 030a 0122     		movs	r2, #1
 471 030c 83F84420 		strb	r2, [r3, #68]
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;
 472              		.loc 1 422 0
 473 0310 0123     		movs	r3, #1
 474 0312 0CE0     		b	.L26
 475              	.L25:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }  
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Delay to assure PHY configuration */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(PHY_CONFIG_DELAY);
 476              		.loc 1 426 0
 477 0314 40F6FF70 		movw	r0, #4095
 478 0318 FFF7FEFF 		bl	HAL_Delay
 479              	.L24:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Config MAC and DMA */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACDMAConfig(heth, err);
 480              		.loc 1 430 0
ARM GAS  /tmp/ccnfC67i.s 			page 17


 481 031c 3969     		ldr	r1, [r7, #16]
 482 031e 7868     		ldr	r0, [r7, #4]
 483 0320 FFF7FEFF 		bl	ETH_MACDMAConfig
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 484              		.loc 1 433 0
 485 0324 7B68     		ldr	r3, [r7, #4]
 486 0326 0122     		movs	r2, #1
 487 0328 83F84420 		strb	r2, [r3, #68]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 488              		.loc 1 436 0
 489 032c 0023     		movs	r3, #0
 490              	.L26:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 491              		.loc 1 437 0 discriminator 1
 492 032e 1846     		mov	r0, r3
 493 0330 2037     		adds	r7, r7, #32
 494              	.LCFI3:
 495              		.cfi_def_cfa_offset 8
 496 0332 BD46     		mov	sp, r7
 497              	.LCFI4:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0334 80BD     		pop	{r7, pc}
 501              		.cfi_endproc
 502              	.LFE138:
 504 0336 00BF     		.section	.text.HAL_ETH_DeInit,"ax",%progbits
 505              		.align	1
 506              		.global	HAL_ETH_DeInit
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu fpv4-sp-d16
 512              	HAL_ETH_DeInit:
 513              	.LFB139:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  De-Initializes the ETH peripheral. 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DeInit(ETH_HandleTypeDef *heth)
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 514              		.loc 1 446 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              	.LCFI5:
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccnfC67i.s 			page 18


 524              	.LCFI6:
 525              		.cfi_def_cfa_offset 16
 526 0004 00AF     		add	r7, sp, #0
 527              	.LCFI7:
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 530              		.loc 1 448 0
 531 0008 7B68     		ldr	r3, [r7, #4]
 532 000a 0222     		movs	r2, #2
 533 000c 83F84420 		strb	r2, [r3, #68]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* De-Init the low level hardware : GPIO, CLOCK, NVIC. */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_ETH_MspDeInit(heth);
 534              		.loc 1 451 0
 535 0010 7868     		ldr	r0, [r7, #4]
 536 0012 FFF7FEFF 		bl	HAL_ETH_MspDeInit
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL state to Disabled */
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_RESET;
 537              		.loc 1 454 0
 538 0016 7B68     		ldr	r3, [r7, #4]
 539 0018 0022     		movs	r2, #0
 540 001a 83F84420 		strb	r2, [r3, #68]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Release Lock */
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 541              		.loc 1 457 0
 542 001e 7B68     		ldr	r3, [r7, #4]
 543 0020 0022     		movs	r2, #0
 544 0022 83F84520 		strb	r2, [r3, #69]
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 545              		.loc 1 460 0
 546 0026 0023     		movs	r3, #0
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 547              		.loc 1 461 0
 548 0028 1846     		mov	r0, r3
 549 002a 0837     		adds	r7, r7, #8
 550              	.LCFI8:
 551              		.cfi_def_cfa_offset 8
 552 002c BD46     		mov	sp, r7
 553              	.LCFI9:
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed
 556 002e 80BD     		pop	{r7, pc}
 557              		.cfi_endproc
 558              	.LFE139:
 560              		.section	.text.HAL_ETH_DMATxDescListInit,"ax",%progbits
 561              		.align	1
 562              		.global	HAL_ETH_DMATxDescListInit
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccnfC67i.s 			page 19


 568              	HAL_ETH_DMATxDescListInit:
 569              	.LFB140:
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the DMA Tx descriptors in chain mode.
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  DMATxDescTab Pointer to the first Tx desc list 
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  TxBuff Pointer to the first TxBuffer list
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  TxBuffCount Number of the used Tx desc in the list
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DMATxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *DMATxDescT
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 570              		.loc 1 473 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 24
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575 0000 80B4     		push	{r7}
 576              	.LCFI10:
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 7, -4
 579 0002 87B0     		sub	sp, sp, #28
 580              	.LCFI11:
 581              		.cfi_def_cfa_offset 32
 582 0004 00AF     		add	r7, sp, #0
 583              	.LCFI12:
 584              		.cfi_def_cfa_register 7
 585 0006 F860     		str	r0, [r7, #12]
 586 0008 B960     		str	r1, [r7, #8]
 587 000a 7A60     		str	r2, [r7, #4]
 588 000c 3B60     		str	r3, [r7]
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 589              		.loc 1 474 0
 590 000e 0023     		movs	r3, #0
 591 0010 7B61     		str	r3, [r7, #20]
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmatxdesc;
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 592              		.loc 1 478 0
 593 0012 FB68     		ldr	r3, [r7, #12]
 594 0014 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 595 0018 012B     		cmp	r3, #1
 596 001a 01D1     		bne	.L33
 597              		.loc 1 478 0 is_stmt 0 discriminator 1
 598 001c 0223     		movs	r3, #2
 599 001e 52E0     		b	.L34
 600              	.L33:
 601              		.loc 1 478 0 discriminator 2
 602 0020 FB68     		ldr	r3, [r7, #12]
 603 0022 0122     		movs	r2, #1
 604 0024 83F84520 		strb	r2, [r3, #69]
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
ARM GAS  /tmp/ccnfC67i.s 			page 20


 605              		.loc 1 481 0 is_stmt 1 discriminator 2
 606 0028 FB68     		ldr	r3, [r7, #12]
 607 002a 0222     		movs	r2, #2
 608 002c 83F84420 		strb	r2, [r3, #68]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DMATxDescToSet pointer with the first one of the DMATxDescTab list */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->TxDesc = DMATxDescTab;
 609              		.loc 1 484 0 discriminator 2
 610 0030 FB68     		ldr	r3, [r7, #12]
 611 0032 BA68     		ldr	r2, [r7, #8]
 612 0034 DA62     		str	r2, [r3, #44]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Fill each DMATxDesc descriptor with the right values */   
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   for(i=0; i < TxBuffCount; i++)
 613              		.loc 1 487 0 discriminator 2
 614 0036 0023     		movs	r3, #0
 615 0038 7B61     		str	r3, [r7, #20]
 616 003a 30E0     		b	.L35
 617              	.L39:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the pointer on the ith member of the Tx Desc list */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc = DMATxDescTab + i;
 618              		.loc 1 490 0
 619 003c 7B69     		ldr	r3, [r7, #20]
 620 003e 5B01     		lsls	r3, r3, #5
 621 0040 BA68     		ldr	r2, [r7, #8]
 622 0042 1344     		add	r3, r3, r2
 623 0044 3B61     		str	r3, [r7, #16]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Second Address Chained bit */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc->Status = ETH_DMATXDESC_TCH;  
 624              		.loc 1 493 0
 625 0046 3B69     		ldr	r3, [r7, #16]
 626 0048 4FF48012 		mov	r2, #1048576
 627 004c 1A60     		str	r2, [r3]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 address pointer */
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc->Buffer1Addr = (uint32_t)(&TxBuff[i*ETH_TX_BUF_SIZE]);
 628              		.loc 1 496 0
 629 004e 7B69     		ldr	r3, [r7, #20]
 630 0050 40F2F452 		movw	r2, #1524
 631 0054 02FB03F3 		mul	r3, r2, r3
 632 0058 7A68     		ldr	r2, [r7, #4]
 633 005a 1344     		add	r3, r3, r2
 634 005c 1A46     		mov	r2, r3
 635 005e 3B69     		ldr	r3, [r7, #16]
 636 0060 9A60     		str	r2, [r3, #8]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if ((heth->Init).ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 637              		.loc 1 498 0
 638 0062 FB68     		ldr	r3, [r7, #12]
 639 0064 DB69     		ldr	r3, [r3, #28]
 640 0066 002B     		cmp	r3, #0
 641 0068 05D1     		bne	.L36
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the DMA Tx descriptors checksum insertion */
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Status |= ETH_DMATXDESC_CHECKSUMTCPUDPICMPFULL;
ARM GAS  /tmp/ccnfC67i.s 			page 21


 642              		.loc 1 501 0
 643 006a 3B69     		ldr	r3, [r7, #16]
 644 006c 1B68     		ldr	r3, [r3]
 645 006e 43F44002 		orr	r2, r3, #12582912
 646 0072 3B69     		ldr	r3, [r7, #16]
 647 0074 1A60     		str	r2, [r3]
 648              	.L36:
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Initialize the next descriptor with the Next Descriptor Polling Enable */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(i < (TxBuffCount-1))
 649              		.loc 1 505 0
 650 0076 3B68     		ldr	r3, [r7]
 651 0078 013B     		subs	r3, r3, #1
 652 007a 7A69     		ldr	r2, [r7, #20]
 653 007c 9A42     		cmp	r2, r3
 654 007e 08D2     		bcs	.L37
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set next descriptor address register with next descriptor base address */
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Buffer2NextDescAddr = (uint32_t)(DMATxDescTab+i+1);
 655              		.loc 1 508 0
 656 0080 7B69     		ldr	r3, [r7, #20]
 657 0082 0133     		adds	r3, r3, #1
 658 0084 5B01     		lsls	r3, r3, #5
 659 0086 BA68     		ldr	r2, [r7, #8]
 660 0088 1344     		add	r3, r3, r2
 661 008a 1A46     		mov	r2, r3
 662 008c 3B69     		ldr	r3, [r7, #16]
 663 008e DA60     		str	r2, [r3, #12]
 664 0090 02E0     		b	.L38
 665              	.L37:
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* For last descriptor, set next descriptor address register equal to the first descriptor ba
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Buffer2NextDescAddr = (uint32_t) DMATxDescTab;  
 666              		.loc 1 513 0
 667 0092 BA68     		ldr	r2, [r7, #8]
 668 0094 3B69     		ldr	r3, [r7, #16]
 669 0096 DA60     		str	r2, [r3, #12]
 670              	.L38:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 671              		.loc 1 487 0 discriminator 2
 672 0098 7B69     		ldr	r3, [r7, #20]
 673 009a 0133     		adds	r3, r3, #1
 674 009c 7B61     		str	r3, [r7, #20]
 675              	.L35:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 676              		.loc 1 487 0 is_stmt 0 discriminator 1
 677 009e 7A69     		ldr	r2, [r7, #20]
 678 00a0 3B68     		ldr	r3, [r7]
 679 00a2 9A42     		cmp	r2, r3
 680 00a4 CAD3     		bcc	.L39
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set Transmit Descriptor List Address Register */
ARM GAS  /tmp/ccnfC67i.s 			page 22


 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMATDLAR = (uint32_t) DMATxDescTab;
 681              		.loc 1 518 0 is_stmt 1
 682 00a6 FB68     		ldr	r3, [r7, #12]
 683 00a8 1968     		ldr	r1, [r3]
 684 00aa BA68     		ldr	r2, [r7, #8]
 685 00ac 41F21003 		movw	r3, #4112
 686 00b0 0B44     		add	r3, r3, r1
 687 00b2 1A60     		str	r2, [r3]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 688              		.loc 1 521 0
 689 00b4 FB68     		ldr	r3, [r7, #12]
 690 00b6 0122     		movs	r2, #1
 691 00b8 83F84420 		strb	r2, [r3, #68]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 692              		.loc 1 524 0
 693 00bc FB68     		ldr	r3, [r7, #12]
 694 00be 0022     		movs	r2, #0
 695 00c0 83F84520 		strb	r2, [r3, #69]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 696              		.loc 1 527 0
 697 00c4 0023     		movs	r3, #0
 698              	.L34:
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 699              		.loc 1 528 0
 700 00c6 1846     		mov	r0, r3
 701 00c8 1C37     		adds	r7, r7, #28
 702              	.LCFI13:
 703              		.cfi_def_cfa_offset 4
 704 00ca BD46     		mov	sp, r7
 705              	.LCFI14:
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
 708 00cc 5DF8047B 		ldr	r7, [sp], #4
 709              	.LCFI15:
 710              		.cfi_restore 7
 711              		.cfi_def_cfa_offset 0
 712 00d0 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE140:
 716              		.section	.text.HAL_ETH_DMARxDescListInit,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_ETH_DMARxDescListInit
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu fpv4-sp-d16
 724              	HAL_ETH_DMARxDescListInit:
 725              	.LFB141:
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the DMA Rx descriptors in chain mode.
ARM GAS  /tmp/ccnfC67i.s 			page 23


 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  DMARxDescTab Pointer to the first Rx desc list 
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RxBuff Pointer to the first RxBuffer list
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RxBuffCount Number of the used Rx desc in the list
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DMARxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *DMARxDescT
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 726              		.loc 1 540 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 0000 80B4     		push	{r7}
 732              	.LCFI16:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 0002 87B0     		sub	sp, sp, #28
 736              	.LCFI17:
 737              		.cfi_def_cfa_offset 32
 738 0004 00AF     		add	r7, sp, #0
 739              	.LCFI18:
 740              		.cfi_def_cfa_register 7
 741 0006 F860     		str	r0, [r7, #12]
 742 0008 B960     		str	r1, [r7, #8]
 743 000a 7A60     		str	r2, [r7, #4]
 744 000c 3B60     		str	r3, [r7]
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 745              		.loc 1 541 0
 746 000e 0023     		movs	r3, #0
 747 0010 7B61     		str	r3, [r7, #20]
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMADescTypeDef *DMARxDesc;
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 748              		.loc 1 545 0
 749 0012 FB68     		ldr	r3, [r7, #12]
 750 0014 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 751 0018 012B     		cmp	r3, #1
 752 001a 01D1     		bne	.L41
 753              		.loc 1 545 0 is_stmt 0 discriminator 1
 754 001c 0223     		movs	r3, #2
 755 001e 56E0     		b	.L42
 756              	.L41:
 757              		.loc 1 545 0 discriminator 2
 758 0020 FB68     		ldr	r3, [r7, #12]
 759 0022 0122     		movs	r2, #1
 760 0024 83F84520 		strb	r2, [r3, #69]
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 761              		.loc 1 548 0 is_stmt 1 discriminator 2
 762 0028 FB68     		ldr	r3, [r7, #12]
 763 002a 0222     		movs	r2, #2
 764 002c 83F84420 		strb	r2, [r3, #68]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccnfC67i.s 			page 24


 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the Ethernet RxDesc pointer with the first one of the DMARxDescTab list */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->RxDesc = DMARxDescTab; 
 765              		.loc 1 551 0 discriminator 2
 766 0030 FB68     		ldr	r3, [r7, #12]
 767 0032 BA68     		ldr	r2, [r7, #8]
 768 0034 9A62     		str	r2, [r3, #40]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Fill each DMARxDesc descriptor with the right values */
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   for(i=0; i < RxBuffCount; i++)
 769              		.loc 1 554 0 discriminator 2
 770 0036 0023     		movs	r3, #0
 771 0038 7B61     		str	r3, [r7, #20]
 772 003a 34E0     		b	.L43
 773              	.L47:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the pointer on the ith member of the Rx Desc list */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc = DMARxDescTab+i;
 774              		.loc 1 557 0
 775 003c 7B69     		ldr	r3, [r7, #20]
 776 003e 5B01     		lsls	r3, r3, #5
 777 0040 BA68     		ldr	r2, [r7, #8]
 778 0042 1344     		add	r3, r3, r2
 779 0044 3B61     		str	r3, [r7, #16]
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Rx descriptor Status */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->Status = ETH_DMARXDESC_OWN;
 780              		.loc 1 560 0
 781 0046 3B69     		ldr	r3, [r7, #16]
 782 0048 4FF00042 		mov	r2, #-2147483648
 783 004c 1A60     		str	r2, [r3]
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 size and Second Address Chained bit */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->ControlBufferSize = ETH_DMARXDESC_RCH | ETH_RX_BUF_SIZE;  
 784              		.loc 1 563 0
 785 004e 3B69     		ldr	r3, [r7, #16]
 786 0050 44F2F452 		movw	r2, #17908
 787 0054 5A60     		str	r2, [r3, #4]
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 address pointer */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->Buffer1Addr = (uint32_t)(&RxBuff[i*ETH_RX_BUF_SIZE]);
 788              		.loc 1 566 0
 789 0056 7B69     		ldr	r3, [r7, #20]
 790 0058 40F2F452 		movw	r2, #1524
 791 005c 02FB03F3 		mul	r3, r2, r3
 792 0060 7A68     		ldr	r2, [r7, #4]
 793 0062 1344     		add	r3, r3, r2
 794 0064 1A46     		mov	r2, r3
 795 0066 3B69     		ldr	r3, [r7, #16]
 796 0068 9A60     		str	r2, [r3, #8]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((heth->Init).RxMode == ETH_RXINTERRUPT_MODE)
 797              		.loc 1 568 0
 798 006a FB68     		ldr	r3, [r7, #12]
 799 006c 9B69     		ldr	r3, [r3, #24]
 800 006e 012B     		cmp	r3, #1
 801 0070 05D1     		bne	.L44
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
ARM GAS  /tmp/ccnfC67i.s 			page 25


 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Enable Ethernet DMA Rx Descriptor interrupt */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->ControlBufferSize &= ~ETH_DMARXDESC_DIC;
 802              		.loc 1 571 0
 803 0072 3B69     		ldr	r3, [r7, #16]
 804 0074 5B68     		ldr	r3, [r3, #4]
 805 0076 23F00042 		bic	r2, r3, #-2147483648
 806 007a 3B69     		ldr	r3, [r7, #16]
 807 007c 5A60     		str	r2, [r3, #4]
 808              	.L44:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Initialize the next descriptor with the Next Descriptor Polling Enable */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(i < (RxBuffCount-1))
 809              		.loc 1 575 0
 810 007e 3B68     		ldr	r3, [r7]
 811 0080 013B     		subs	r3, r3, #1
 812 0082 7A69     		ldr	r2, [r7, #20]
 813 0084 9A42     		cmp	r2, r3
 814 0086 08D2     		bcs	.L45
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set next descriptor address register with next descriptor base address */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->Buffer2NextDescAddr = (uint32_t)(DMARxDescTab+i+1); 
 815              		.loc 1 578 0
 816 0088 7B69     		ldr	r3, [r7, #20]
 817 008a 0133     		adds	r3, r3, #1
 818 008c 5B01     		lsls	r3, r3, #5
 819 008e BA68     		ldr	r2, [r7, #8]
 820 0090 1344     		add	r3, r3, r2
 821 0092 1A46     		mov	r2, r3
 822 0094 3B69     		ldr	r3, [r7, #16]
 823 0096 DA60     		str	r2, [r3, #12]
 824 0098 02E0     		b	.L46
 825              	.L45:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* For last descriptor, set next descriptor address register equal to the first descriptor ba
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->Buffer2NextDescAddr = (uint32_t)(DMARxDescTab); 
 826              		.loc 1 583 0
 827 009a BA68     		ldr	r2, [r7, #8]
 828 009c 3B69     		ldr	r3, [r7, #16]
 829 009e DA60     		str	r2, [r3, #12]
 830              	.L46:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 831              		.loc 1 554 0 discriminator 2
 832 00a0 7B69     		ldr	r3, [r7, #20]
 833 00a2 0133     		adds	r3, r3, #1
 834 00a4 7B61     		str	r3, [r7, #20]
 835              	.L43:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 836              		.loc 1 554 0 is_stmt 0 discriminator 1
 837 00a6 7A69     		ldr	r2, [r7, #20]
 838 00a8 3B68     		ldr	r3, [r7]
 839 00aa 9A42     		cmp	r2, r3
 840 00ac C6D3     		bcc	.L47
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
ARM GAS  /tmp/ccnfC67i.s 			page 26


 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set Receive Descriptor List Address Register */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMARDLAR = (uint32_t) DMARxDescTab;
 841              		.loc 1 588 0 is_stmt 1
 842 00ae FB68     		ldr	r3, [r7, #12]
 843 00b0 1968     		ldr	r1, [r3]
 844 00b2 BA68     		ldr	r2, [r7, #8]
 845 00b4 41F20C03 		movw	r3, #4108
 846 00b8 0B44     		add	r3, r3, r1
 847 00ba 1A60     		str	r2, [r3]
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 848              		.loc 1 591 0
 849 00bc FB68     		ldr	r3, [r7, #12]
 850 00be 0122     		movs	r2, #1
 851 00c0 83F84420 		strb	r2, [r3, #68]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 852              		.loc 1 594 0
 853 00c4 FB68     		ldr	r3, [r7, #12]
 854 00c6 0022     		movs	r2, #0
 855 00c8 83F84520 		strb	r2, [r3, #69]
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 856              		.loc 1 597 0
 857 00cc 0023     		movs	r3, #0
 858              	.L42:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 859              		.loc 1 598 0
 860 00ce 1846     		mov	r0, r3
 861 00d0 1C37     		adds	r7, r7, #28
 862              	.LCFI19:
 863              		.cfi_def_cfa_offset 4
 864 00d2 BD46     		mov	sp, r7
 865              	.LCFI20:
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 00d4 5DF8047B 		ldr	r7, [sp], #4
 869              	.LCFI21:
 870              		.cfi_restore 7
 871              		.cfi_def_cfa_offset 0
 872 00d8 7047     		bx	lr
 873              		.cfi_endproc
 874              	.LFE141:
 876              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 877              		.align	1
 878              		.weak	HAL_ETH_MspInit
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	HAL_ETH_MspInit:
 885              	.LFB142:
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
ARM GAS  /tmp/ccnfC67i.s 			page 27


 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the ETH MSP.
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_MspInit(ETH_HandleTypeDef *heth)
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 886              		.loc 1 607 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 8
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 80B4     		push	{r7}
 892              	.LCFI22:
 893              		.cfi_def_cfa_offset 4
 894              		.cfi_offset 7, -4
 895 0002 83B0     		sub	sp, sp, #12
 896              	.LCFI23:
 897              		.cfi_def_cfa_offset 16
 898 0004 00AF     		add	r7, sp, #0
 899              	.LCFI24:
 900              		.cfi_def_cfa_register 7
 901 0006 7860     		str	r0, [r7, #4]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_MspInit could be implemented in the user file
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 902              		.loc 1 614 0
 903 0008 00BF     		nop
 904 000a 0C37     		adds	r7, r7, #12
 905              	.LCFI25:
 906              		.cfi_def_cfa_offset 4
 907 000c BD46     		mov	sp, r7
 908              	.LCFI26:
 909              		.cfi_def_cfa_register 13
 910              		@ sp needed
 911 000e 5DF8047B 		ldr	r7, [sp], #4
 912              	.LCFI27:
 913              		.cfi_restore 7
 914              		.cfi_def_cfa_offset 0
 915 0012 7047     		bx	lr
 916              		.cfi_endproc
 917              	.LFE142:
 919              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 920              		.align	1
 921              		.weak	HAL_ETH_MspDeInit
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv4-sp-d16
 927              	HAL_ETH_MspDeInit:
 928              	.LFB143:
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
ARM GAS  /tmp/ccnfC67i.s 			page 28


 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  DeInitializes ETH MSP.
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_MspDeInit(ETH_HandleTypeDef *heth)
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 929              		.loc 1 623 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934 0000 80B4     		push	{r7}
 935              	.LCFI28:
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 0002 83B0     		sub	sp, sp, #12
 939              	.LCFI29:
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              	.LCFI30:
 943              		.cfi_def_cfa_register 7
 944 0006 7860     		str	r0, [r7, #4]
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_MspDeInit could be implemented in the user file
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 945              		.loc 1 630 0
 946 0008 00BF     		nop
 947 000a 0C37     		adds	r7, r7, #12
 948              	.LCFI31:
 949              		.cfi_def_cfa_offset 4
 950 000c BD46     		mov	sp, r7
 951              	.LCFI32:
 952              		.cfi_def_cfa_register 13
 953              		@ sp needed
 954 000e 5DF8047B 		ldr	r7, [sp], #4
 955              	.LCFI33:
 956              		.cfi_restore 7
 957              		.cfi_def_cfa_offset 0
 958 0012 7047     		bx	lr
 959              		.cfi_endproc
 960              	.LFE143:
 962              		.section	.text.HAL_ETH_TransmitFrame,"ax",%progbits
 963              		.align	1
 964              		.global	HAL_ETH_TransmitFrame
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 968              		.fpu fpv4-sp-d16
 970              	HAL_ETH_TransmitFrame:
 971              	.LFB144:
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
ARM GAS  /tmp/ccnfC67i.s 			page 29


 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group2 IO operation functions 
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Data transfers functions 
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim   
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           ##### IO operation functions #####
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================  
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]  This section provides functions allowing to:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Transmit a frame
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_TransmitFrame();
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Receive a frame
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_GetReceivedFrame();
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_GetReceivedFrame_IT();
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Read from an External PHY register
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_ReadPHYRegister();
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Write to an External PHY register
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_WritePHYRegister();
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Sends an Ethernet frame. 
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  FrameLength Amount of data to be sent
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_TransmitFrame(ETH_HandleTypeDef *heth, uint32_t FrameLength)
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 972              		.loc 1 667 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 24
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 977 0000 80B4     		push	{r7}
 978              	.LCFI34:
 979              		.cfi_def_cfa_offset 4
 980              		.cfi_offset 7, -4
 981 0002 87B0     		sub	sp, sp, #28
 982              	.LCFI35:
 983              		.cfi_def_cfa_offset 32
 984 0004 00AF     		add	r7, sp, #0
 985              	.LCFI36:
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]
 988 0008 3960     		str	r1, [r7]
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t bufcount = 0, size = 0, i = 0;
 989              		.loc 1 668 0
 990 000a 0023     		movs	r3, #0
 991 000c 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccnfC67i.s 			page 30


 992 000e 0023     		movs	r3, #0
 993 0010 FB60     		str	r3, [r7, #12]
 994 0012 0023     		movs	r3, #0
 995 0014 3B61     		str	r3, [r7, #16]
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 996              		.loc 1 671 0
 997 0016 7B68     		ldr	r3, [r7, #4]
 998 0018 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 999 001c 012B     		cmp	r3, #1
 1000 001e 01D1     		bne	.L51
 1001              		.loc 1 671 0 is_stmt 0 discriminator 1
 1002 0020 0223     		movs	r3, #2
 1003 0022 CDE0     		b	.L52
 1004              	.L51:
 1005              		.loc 1 671 0 discriminator 2
 1006 0024 7B68     		ldr	r3, [r7, #4]
 1007 0026 0122     		movs	r2, #1
 1008 0028 83F84520 		strb	r2, [r3, #69]
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1009              		.loc 1 674 0 is_stmt 1 discriminator 2
 1010 002c 7B68     		ldr	r3, [r7, #4]
 1011 002e 0222     		movs	r2, #2
 1012 0030 83F84420 		strb	r2, [r3, #68]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (FrameLength == 0) 
 1013              		.loc 1 676 0 discriminator 2
 1014 0034 3B68     		ldr	r3, [r7]
 1015 0036 002B     		cmp	r3, #0
 1016 0038 09D1     		bne	.L53
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set ETH HAL state to READY */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1017              		.loc 1 679 0
 1018 003a 7B68     		ldr	r3, [r7, #4]
 1019 003c 0122     		movs	r2, #1
 1020 003e 83F84420 		strb	r2, [r3, #68]
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1021              		.loc 1 682 0
 1022 0042 7B68     		ldr	r3, [r7, #4]
 1023 0044 0022     		movs	r2, #0
 1024 0046 83F84520 		strb	r2, [r3, #69]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return  HAL_ERROR;                                    
 1025              		.loc 1 684 0
 1026 004a 0123     		movs	r3, #1
 1027 004c B8E0     		b	.L52
 1028              	.L53:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check if the descriptor is owned by the ETHERNET DMA (when set) or CPU (when reset) */
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(((heth->TxDesc)->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
ARM GAS  /tmp/ccnfC67i.s 			page 31


 1029              		.loc 1 688 0
 1030 004e 7B68     		ldr	r3, [r7, #4]
 1031 0050 DB6A     		ldr	r3, [r3, #44]
 1032 0052 1B68     		ldr	r3, [r3]
 1033 0054 002B     		cmp	r3, #0
 1034 0056 09DA     		bge	.L54
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* OWN bit set */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_BUSY_TX;
 1035              		.loc 1 691 0
 1036 0058 7B68     		ldr	r3, [r7, #4]
 1037 005a 1222     		movs	r2, #18
 1038 005c 83F84420 		strb	r2, [r3, #68]
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1039              		.loc 1 694 0
 1040 0060 7B68     		ldr	r3, [r7, #4]
 1041 0062 0022     		movs	r2, #0
 1042 0064 83F84520 		strb	r2, [r3, #69]
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 1043              		.loc 1 696 0
 1044 0068 0123     		movs	r3, #1
 1045 006a A9E0     		b	.L52
 1046              	.L54:
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the number of needed Tx buffers for the current frame */
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (FrameLength > ETH_TX_BUF_SIZE)
 1047              		.loc 1 700 0
 1048 006c 3B68     		ldr	r3, [r7]
 1049 006e 40F2F452 		movw	r2, #1524
 1050 0072 9342     		cmp	r3, r2
 1051 0074 15D9     		bls	.L55
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     bufcount = FrameLength/ETH_TX_BUF_SIZE;
 1052              		.loc 1 702 0
 1053 0076 3B68     		ldr	r3, [r7]
 1054 0078 544A     		ldr	r2, .L65
 1055 007a A2FB0323 		umull	r2, r3, r2, r3
 1056 007e 9B0A     		lsrs	r3, r3, #10
 1057 0080 7B61     		str	r3, [r7, #20]
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if (FrameLength % ETH_TX_BUF_SIZE) 
 1058              		.loc 1 703 0
 1059 0082 3A68     		ldr	r2, [r7]
 1060 0084 514B     		ldr	r3, .L65
 1061 0086 A3FB0213 		umull	r1, r3, r3, r2
 1062 008a 9B0A     		lsrs	r3, r3, #10
 1063 008c 40F2F451 		movw	r1, #1524
 1064 0090 01FB03F3 		mul	r3, r1, r3
 1065 0094 D31A     		subs	r3, r2, r3
 1066 0096 002B     		cmp	r3, #0
 1067 0098 05D0     		beq	.L57
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       bufcount++;
 1068              		.loc 1 705 0
ARM GAS  /tmp/ccnfC67i.s 			page 32


 1069 009a 7B69     		ldr	r3, [r7, #20]
 1070 009c 0133     		adds	r3, r3, #1
 1071 009e 7B61     		str	r3, [r7, #20]
 1072 00a0 01E0     		b	.L57
 1073              	.L55:
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else 
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     bufcount = 1;
 1074              		.loc 1 710 0
 1075 00a2 0123     		movs	r3, #1
 1076 00a4 7B61     		str	r3, [r7, #20]
 1077              	.L57:
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (bufcount == 1)
 1078              		.loc 1 712 0
 1079 00a6 7B69     		ldr	r3, [r7, #20]
 1080 00a8 012B     		cmp	r3, #1
 1081 00aa 1CD1     		bne	.L58
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set LAST and FIRST segment */
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->Status |=ETH_DMATXDESC_FS|ETH_DMATXDESC_LS;
 1082              		.loc 1 715 0
 1083 00ac 7B68     		ldr	r3, [r7, #4]
 1084 00ae DB6A     		ldr	r3, [r3, #44]
 1085 00b0 1A68     		ldr	r2, [r3]
 1086 00b2 7B68     		ldr	r3, [r7, #4]
 1087 00b4 DB6A     		ldr	r3, [r3, #44]
 1088 00b6 42F04052 		orr	r2, r2, #805306368
 1089 00ba 1A60     		str	r2, [r3]
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set frame size */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->ControlBufferSize = (FrameLength & ETH_DMATXDESC_TBS1);
 1090              		.loc 1 717 0
 1091 00bc 7B68     		ldr	r3, [r7, #4]
 1092 00be DB6A     		ldr	r3, [r3, #44]
 1093 00c0 3A68     		ldr	r2, [r7]
 1094 00c2 C2F30C02 		ubfx	r2, r2, #0, #13
 1095 00c6 5A60     		str	r2, [r3, #4]
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 1096              		.loc 1 719 0
 1097 00c8 7B68     		ldr	r3, [r7, #4]
 1098 00ca DB6A     		ldr	r3, [r3, #44]
 1099 00cc 1A68     		ldr	r2, [r3]
 1100 00ce 7B68     		ldr	r3, [r7, #4]
 1101 00d0 DB6A     		ldr	r3, [r3, #44]
 1102 00d2 42F00042 		orr	r2, r2, #-2147483648
 1103 00d6 1A60     		str	r2, [r3]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Point to next descriptor */
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc= (ETH_DMADescTypeDef *)(heth->TxDesc->Buffer2NextDescAddr);
 1104              		.loc 1 721 0
 1105 00d8 7B68     		ldr	r3, [r7, #4]
 1106 00da DB6A     		ldr	r3, [r3, #44]
 1107 00dc DB68     		ldr	r3, [r3, #12]
 1108 00de 1A46     		mov	r2, r3
 1109 00e0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccnfC67i.s 			page 33


 1110 00e2 DA62     		str	r2, [r3, #44]
 1111 00e4 4BE0     		b	.L59
 1112              	.L58:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     for (i=0; i< bufcount; i++)
 1113              		.loc 1 725 0
 1114 00e6 0023     		movs	r3, #0
 1115 00e8 3B61     		str	r3, [r7, #16]
 1116 00ea 44E0     		b	.L60
 1117              	.L63:
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Clear FIRST and LAST segment bits */
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->Status &= ~(ETH_DMATXDESC_FS | ETH_DMATXDESC_LS);
 1118              		.loc 1 728 0
 1119 00ec 7B68     		ldr	r3, [r7, #4]
 1120 00ee DB6A     		ldr	r3, [r3, #44]
 1121 00f0 1A68     		ldr	r2, [r3]
 1122 00f2 7B68     		ldr	r3, [r7, #4]
 1123 00f4 DB6A     		ldr	r3, [r3, #44]
 1124 00f6 22F04052 		bic	r2, r2, #805306368
 1125 00fa 1A60     		str	r2, [r3]
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if (i == 0) 
 1126              		.loc 1 730 0
 1127 00fc 3B69     		ldr	r3, [r7, #16]
 1128 00fe 002B     		cmp	r3, #0
 1129 0100 07D1     		bne	.L61
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Setting the first segment bit */
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->Status |= ETH_DMATXDESC_FS;  
 1130              		.loc 1 733 0
 1131 0102 7B68     		ldr	r3, [r7, #4]
 1132 0104 DB6A     		ldr	r3, [r3, #44]
 1133 0106 1A68     		ldr	r2, [r3]
 1134 0108 7B68     		ldr	r3, [r7, #4]
 1135 010a DB6A     		ldr	r3, [r3, #44]
 1136 010c 42F08052 		orr	r2, r2, #268435456
 1137 0110 1A60     		str	r2, [r3]
 1138              	.L61:
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Program size */
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->ControlBufferSize = (ETH_TX_BUF_SIZE & ETH_DMATXDESC_TBS1);
 1139              		.loc 1 737 0
 1140 0112 7B68     		ldr	r3, [r7, #4]
 1141 0114 DB6A     		ldr	r3, [r3, #44]
 1142 0116 40F2F452 		movw	r2, #1524
 1143 011a 5A60     		str	r2, [r3, #4]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if (i == (bufcount-1))
 1144              		.loc 1 739 0
 1145 011c 7B69     		ldr	r3, [r7, #20]
 1146 011e 013B     		subs	r3, r3, #1
 1147 0120 3A69     		ldr	r2, [r7, #16]
 1148 0122 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccnfC67i.s 			page 34


 1149 0124 16D1     		bne	.L62
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Setting the last segment bit */
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->Status |= ETH_DMATXDESC_LS;
 1150              		.loc 1 742 0
 1151 0126 7B68     		ldr	r3, [r7, #4]
 1152 0128 DB6A     		ldr	r3, [r3, #44]
 1153 012a 1A68     		ldr	r2, [r3]
 1154 012c 7B68     		ldr	r3, [r7, #4]
 1155 012e DB6A     		ldr	r3, [r3, #44]
 1156 0130 42F00052 		orr	r2, r2, #536870912
 1157 0134 1A60     		str	r2, [r3]
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         size = FrameLength - (bufcount-1)*ETH_TX_BUF_SIZE;
 1158              		.loc 1 743 0
 1159 0136 7B69     		ldr	r3, [r7, #20]
 1160 0138 254A     		ldr	r2, .L65+4
 1161 013a 02FB03F2 		mul	r2, r2, r3
 1162 013e 3B68     		ldr	r3, [r7]
 1163 0140 1344     		add	r3, r3, r2
 1164 0142 03F2F453 		addw	r3, r3, #1524
 1165 0146 FB60     		str	r3, [r7, #12]
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->ControlBufferSize = (size & ETH_DMATXDESC_TBS1);
 1166              		.loc 1 744 0
 1167 0148 7B68     		ldr	r3, [r7, #4]
 1168 014a DB6A     		ldr	r3, [r3, #44]
 1169 014c FA68     		ldr	r2, [r7, #12]
 1170 014e C2F30C02 		ubfx	r2, r2, #0, #13
 1171 0152 5A60     		str	r2, [r3, #4]
 1172              	.L62:
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 1173              		.loc 1 748 0 discriminator 2
 1174 0154 7B68     		ldr	r3, [r7, #4]
 1175 0156 DB6A     		ldr	r3, [r3, #44]
 1176 0158 1A68     		ldr	r2, [r3]
 1177 015a 7B68     		ldr	r3, [r7, #4]
 1178 015c DB6A     		ldr	r3, [r3, #44]
 1179 015e 42F00042 		orr	r2, r2, #-2147483648
 1180 0162 1A60     		str	r2, [r3]
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc = (ETH_DMADescTypeDef *)(heth->TxDesc->Buffer2NextDescAddr);
 1181              		.loc 1 750 0 discriminator 2
 1182 0164 7B68     		ldr	r3, [r7, #4]
 1183 0166 DB6A     		ldr	r3, [r3, #44]
 1184 0168 DB68     		ldr	r3, [r3, #12]
 1185 016a 1A46     		mov	r2, r3
 1186 016c 7B68     		ldr	r3, [r7, #4]
 1187 016e DA62     		str	r2, [r3, #44]
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1188              		.loc 1 725 0 discriminator 2
 1189 0170 3B69     		ldr	r3, [r7, #16]
 1190 0172 0133     		adds	r3, r3, #1
 1191 0174 3B61     		str	r3, [r7, #16]
 1192              	.L60:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
ARM GAS  /tmp/ccnfC67i.s 			page 35


 1193              		.loc 1 725 0 is_stmt 0 discriminator 1
 1194 0176 3A69     		ldr	r2, [r7, #16]
 1195 0178 7B69     		ldr	r3, [r7, #20]
 1196 017a 9A42     		cmp	r2, r3
 1197 017c B6D3     		bcc	.L63
 1198              	.L59:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* When Tx Buffer unavailable flag is set: clear it and resume transmission */
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (((heth->Instance)->DMASR & ETH_DMASR_TBUS) != (uint32_t)RESET)
 1199              		.loc 1 755 0 is_stmt 1
 1200 017e 7B68     		ldr	r3, [r7, #4]
 1201 0180 1A68     		ldr	r2, [r3]
 1202 0182 41F21403 		movw	r3, #4116
 1203 0186 1344     		add	r3, r3, r2
 1204 0188 1B68     		ldr	r3, [r3]
 1205 018a 03F00403 		and	r3, r3, #4
 1206 018e 002B     		cmp	r3, #0
 1207 0190 0DD0     		beq	.L64
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear TBUS ETHERNET DMA flag */
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMASR = ETH_DMASR_TBUS;
 1208              		.loc 1 758 0
 1209 0192 7B68     		ldr	r3, [r7, #4]
 1210 0194 1A68     		ldr	r2, [r3]
 1211 0196 41F21403 		movw	r3, #4116
 1212 019a 1344     		add	r3, r3, r2
 1213 019c 0422     		movs	r2, #4
 1214 019e 1A60     		str	r2, [r3]
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Resume DMA transmission*/
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMATPDR = 0;
 1215              		.loc 1 760 0
 1216 01a0 7B68     		ldr	r3, [r7, #4]
 1217 01a2 1A68     		ldr	r2, [r3]
 1218 01a4 41F20403 		movw	r3, #4100
 1219 01a8 1344     		add	r3, r3, r2
 1220 01aa 0022     		movs	r2, #0
 1221 01ac 1A60     		str	r2, [r3]
 1222              	.L64:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 1223              		.loc 1 764 0
 1224 01ae 7B68     		ldr	r3, [r7, #4]
 1225 01b0 0122     		movs	r2, #1
 1226 01b2 83F84420 		strb	r2, [r3, #68]
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 1227              		.loc 1 767 0
 1228 01b6 7B68     		ldr	r3, [r7, #4]
 1229 01b8 0022     		movs	r2, #0
 1230 01ba 83F84520 		strb	r2, [r3, #69]
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
ARM GAS  /tmp/ccnfC67i.s 			page 36


 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 1231              		.loc 1 770 0
 1232 01be 0023     		movs	r3, #0
 1233              	.L52:
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1234              		.loc 1 771 0
 1235 01c0 1846     		mov	r0, r3
 1236 01c2 1C37     		adds	r7, r7, #28
 1237              	.LCFI37:
 1238              		.cfi_def_cfa_offset 4
 1239 01c4 BD46     		mov	sp, r7
 1240              	.LCFI38:
 1241              		.cfi_def_cfa_register 13
 1242              		@ sp needed
 1243 01c6 5DF8047B 		ldr	r7, [sp], #4
 1244              	.LCFI39:
 1245              		.cfi_restore 7
 1246              		.cfi_def_cfa_offset 0
 1247 01ca 7047     		bx	lr
 1248              	.L66:
 1249              		.align	2
 1250              	.L65:
 1251 01cc 0BB002AC 		.word	-1409110005
 1252 01d0 0CFAFFFF 		.word	-1524
 1253              		.cfi_endproc
 1254              	.LFE144:
 1256              		.section	.text.HAL_ETH_GetReceivedFrame,"ax",%progbits
 1257              		.align	1
 1258              		.global	HAL_ETH_GetReceivedFrame
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1262              		.fpu fpv4-sp-d16
 1264              	HAL_ETH_GetReceivedFrame:
 1265              	.LFB145:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Checks for received frames. 
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame(ETH_HandleTypeDef *heth)
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1266              		.loc 1 780 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
 1271 0000 80B4     		push	{r7}
 1272              	.LCFI40:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 7, -4
 1275 0002 85B0     		sub	sp, sp, #20
 1276              	.LCFI41:
 1277              		.cfi_def_cfa_offset 24
 1278 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccnfC67i.s 			page 37


 1279              	.LCFI42:
 1280              		.cfi_def_cfa_register 7
 1281 0006 7860     		str	r0, [r7, #4]
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t framelength = 0;
 1282              		.loc 1 781 0
 1283 0008 0023     		movs	r3, #0
 1284 000a FB60     		str	r3, [r7, #12]
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 1285              		.loc 1 784 0
 1286 000c 7B68     		ldr	r3, [r7, #4]
 1287 000e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1288 0012 012B     		cmp	r3, #1
 1289 0014 01D1     		bne	.L68
 1290              		.loc 1 784 0 is_stmt 0 discriminator 1
 1291 0016 0223     		movs	r3, #2
 1292 0018 70E0     		b	.L69
 1293              	.L68:
 1294              		.loc 1 784 0 discriminator 2
 1295 001a 7B68     		ldr	r3, [r7, #4]
 1296 001c 0122     		movs	r2, #1
 1297 001e 83F84520 		strb	r2, [r3, #69]
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH state to BUSY */
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1298              		.loc 1 787 0 is_stmt 1 discriminator 2
 1299 0022 7B68     		ldr	r3, [r7, #4]
 1300 0024 0222     		movs	r2, #2
 1301 0026 83F84420 		strb	r2, [r3, #68]
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check if segment is not owned by DMA */
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* (((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET) && ((heth->RxDesc->Status & E
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET))
 1302              		.loc 1 791 0 discriminator 2
 1303 002a 7B68     		ldr	r3, [r7, #4]
 1304 002c 9B6A     		ldr	r3, [r3, #40]
 1305 002e 1B68     		ldr	r3, [r3]
 1306 0030 002B     		cmp	r3, #0
 1307 0032 5ADB     		blt	.L70
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if last segment */
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(((heth->RxDesc->Status & ETH_DMARXDESC_LS) != (uint32_t)RESET)) 
 1308              		.loc 1 794 0
 1309 0034 7B68     		ldr	r3, [r7, #4]
 1310 0036 9B6A     		ldr	r3, [r3, #40]
 1311 0038 1B68     		ldr	r3, [r3]
 1312 003a 03F48073 		and	r3, r3, #256
 1313 003e 002B     		cmp	r3, #0
 1314 0040 30D0     		beq	.L71
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* increment segment count */
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount++;
 1315              		.loc 1 797 0
 1316 0042 7B68     		ldr	r3, [r7, #4]
 1317 0044 9B6B     		ldr	r3, [r3, #56]
 1318 0046 5A1C     		adds	r2, r3, #1
ARM GAS  /tmp/ccnfC67i.s 			page 38


 1319 0048 7B68     		ldr	r3, [r7, #4]
 1320 004a 9A63     		str	r2, [r3, #56]
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check if last segment is first segment: one segment contains the frame */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if ((heth->RxFrameInfos).SegCount == 1)
 1321              		.loc 1 800 0
 1322 004c 7B68     		ldr	r3, [r7, #4]
 1323 004e 9B6B     		ldr	r3, [r3, #56]
 1324 0050 012B     		cmp	r3, #1
 1325 0052 03D1     		bne	.L72
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (heth->RxFrameInfos).FSRxDesc =heth->RxDesc;
 1326              		.loc 1 802 0
 1327 0054 7B68     		ldr	r3, [r7, #4]
 1328 0056 9A6A     		ldr	r2, [r3, #40]
 1329 0058 7B68     		ldr	r3, [r7, #4]
 1330 005a 1A63     		str	r2, [r3, #48]
 1331              	.L72:
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.LSRxDesc = heth->RxDesc;
 1332              		.loc 1 805 0
 1333 005c 7B68     		ldr	r3, [r7, #4]
 1334 005e 9A6A     		ldr	r2, [r3, #40]
 1335 0060 7B68     		ldr	r3, [r7, #4]
 1336 0062 5A63     		str	r2, [r3, #52]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       framelength = (((heth->RxDesc)->Status & ETH_DMARXDESC_FL) >> ETH_DMARXDESC_FRAMELENGTHSHIFT)
 1337              		.loc 1 808 0
 1338 0064 7B68     		ldr	r3, [r7, #4]
 1339 0066 9B6A     		ldr	r3, [r3, #40]
 1340 0068 1B68     		ldr	r3, [r3]
 1341 006a 1B0C     		lsrs	r3, r3, #16
 1342 006c C3F30D03 		ubfx	r3, r3, #0, #14
 1343 0070 043B     		subs	r3, r3, #4
 1344 0072 FB60     		str	r3, [r7, #12]
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = framelength;
 1345              		.loc 1 809 0
 1346 0074 7B68     		ldr	r3, [r7, #4]
 1347 0076 FA68     		ldr	r2, [r7, #12]
 1348 0078 DA63     		str	r2, [r3, #60]
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the address of the buffer start address */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.buffer = ((heth->RxFrameInfos).FSRxDesc)->Buffer1Addr;
 1349              		.loc 1 812 0
 1350 007a 7B68     		ldr	r3, [r7, #4]
 1351 007c 1B6B     		ldr	r3, [r3, #48]
 1352 007e 9A68     		ldr	r2, [r3, #8]
 1353 0080 7B68     		ldr	r3, [r7, #4]
 1354 0082 1A64     		str	r2, [r3, #64]
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) ((heth->RxDesc)->Buffer2NextDescAddr);
 1355              		.loc 1 814 0
 1356 0084 7B68     		ldr	r3, [r7, #4]
 1357 0086 9B6A     		ldr	r3, [r3, #40]
 1358 0088 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccnfC67i.s 			page 39


 1359 008a 1A46     		mov	r2, r3
 1360 008c 7B68     		ldr	r3, [r7, #4]
 1361 008e 9A62     		str	r2, [r3, #40]
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set HAL State to Ready */
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 1362              		.loc 1 817 0
 1363 0090 7B68     		ldr	r3, [r7, #4]
 1364 0092 0122     		movs	r2, #1
 1365 0094 83F84420 		strb	r2, [r3, #68]
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 1366              		.loc 1 820 0
 1367 0098 7B68     		ldr	r3, [r7, #4]
 1368 009a 0022     		movs	r2, #0
 1369 009c 83F84520 		strb	r2, [r3, #69]
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return function status */
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_OK;
 1370              		.loc 1 823 0
 1371 00a0 0023     		movs	r3, #0
 1372 00a2 2BE0     		b	.L69
 1373              	.L71:
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if first segment */
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else if((heth->RxDesc->Status & ETH_DMARXDESC_FS) != (uint32_t)RESET)
 1374              		.loc 1 826 0
 1375 00a4 7B68     		ldr	r3, [r7, #4]
 1376 00a6 9B6A     		ldr	r3, [r3, #40]
 1377 00a8 1B68     		ldr	r3, [r3]
 1378 00aa 03F40073 		and	r3, r3, #512
 1379 00ae 002B     		cmp	r3, #0
 1380 00b0 10D0     		beq	.L73
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).FSRxDesc = heth->RxDesc;
 1381              		.loc 1 828 0
 1382 00b2 7B68     		ldr	r3, [r7, #4]
 1383 00b4 9A6A     		ldr	r2, [r3, #40]
 1384 00b6 7B68     		ldr	r3, [r7, #4]
 1385 00b8 1A63     		str	r2, [r3, #48]
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).LSRxDesc = NULL;
 1386              		.loc 1 829 0
 1387 00ba 7B68     		ldr	r3, [r7, #4]
 1388 00bc 0022     		movs	r2, #0
 1389 00be 5A63     		str	r2, [r3, #52]
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount = 1;
 1390              		.loc 1 830 0
 1391 00c0 7B68     		ldr	r3, [r7, #4]
 1392 00c2 0122     		movs	r2, #1
 1393 00c4 9A63     		str	r2, [r3, #56]
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1394              		.loc 1 832 0
 1395 00c6 7B68     		ldr	r3, [r7, #4]
 1396 00c8 9B6A     		ldr	r3, [r3, #40]
 1397 00ca DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccnfC67i.s 			page 40


 1398 00cc 1A46     		mov	r2, r3
 1399 00ce 7B68     		ldr	r3, [r7, #4]
 1400 00d0 9A62     		str	r2, [r3, #40]
 1401 00d2 0AE0     		b	.L70
 1402              	.L73:
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if intermediate segment */ 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount++;
 1403              		.loc 1 837 0
 1404 00d4 7B68     		ldr	r3, [r7, #4]
 1405 00d6 9B6B     		ldr	r3, [r3, #56]
 1406 00d8 5A1C     		adds	r2, r3, #1
 1407 00da 7B68     		ldr	r3, [r7, #4]
 1408 00dc 9A63     		str	r2, [r3, #56]
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1409              		.loc 1 839 0
 1410 00de 7B68     		ldr	r3, [r7, #4]
 1411 00e0 9B6A     		ldr	r3, [r3, #40]
 1412 00e2 DB68     		ldr	r3, [r3, #12]
 1413 00e4 1A46     		mov	r2, r3
 1414 00e6 7B68     		ldr	r3, [r7, #4]
 1415 00e8 9A62     		str	r2, [r3, #40]
 1416              	.L70:
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 1417              		.loc 1 844 0
 1418 00ea 7B68     		ldr	r3, [r7, #4]
 1419 00ec 0122     		movs	r2, #1
 1420 00ee 83F84420 		strb	r2, [r3, #68]
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 1421              		.loc 1 847 0
 1422 00f2 7B68     		ldr	r3, [r7, #4]
 1423 00f4 0022     		movs	r2, #0
 1424 00f6 83F84520 		strb	r2, [r3, #69]
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_ERROR;
 1425              		.loc 1 850 0
 1426 00fa 0123     		movs	r3, #1
 1427              	.L69:
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1428              		.loc 1 851 0
 1429 00fc 1846     		mov	r0, r3
 1430 00fe 1437     		adds	r7, r7, #20
 1431              	.LCFI43:
 1432              		.cfi_def_cfa_offset 4
 1433 0100 BD46     		mov	sp, r7
 1434              	.LCFI44:
 1435              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccnfC67i.s 			page 41


 1436              		@ sp needed
 1437 0102 5DF8047B 		ldr	r7, [sp], #4
 1438              	.LCFI45:
 1439              		.cfi_restore 7
 1440              		.cfi_def_cfa_offset 0
 1441 0106 7047     		bx	lr
 1442              		.cfi_endproc
 1443              	.LFE145:
 1445              		.section	.text.HAL_ETH_GetReceivedFrame_IT,"ax",%progbits
 1446              		.align	1
 1447              		.global	HAL_ETH_GetReceivedFrame_IT
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	HAL_ETH_GetReceivedFrame_IT:
 1454              	.LFB146:
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Gets the Received frame in interrupt mode. 
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame_IT(ETH_HandleTypeDef *heth)
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1455              		.loc 1 860 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 16
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460 0000 80B4     		push	{r7}
 1461              	.LCFI46:
 1462              		.cfi_def_cfa_offset 4
 1463              		.cfi_offset 7, -4
 1464 0002 85B0     		sub	sp, sp, #20
 1465              	.LCFI47:
 1466              		.cfi_def_cfa_offset 24
 1467 0004 00AF     		add	r7, sp, #0
 1468              	.LCFI48:
 1469              		.cfi_def_cfa_register 7
 1470 0006 7860     		str	r0, [r7, #4]
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t descriptorscancounter = 0;
 1471              		.loc 1 861 0
 1472 0008 0023     		movs	r3, #0
 1473 000a FB60     		str	r3, [r7, #12]
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 1474              		.loc 1 864 0
 1475 000c 7B68     		ldr	r3, [r7, #4]
 1476 000e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1477 0012 012B     		cmp	r3, #1
 1478 0014 01D1     		bne	.L75
 1479              		.loc 1 864 0 is_stmt 0 discriminator 1
 1480 0016 0223     		movs	r3, #2
 1481 0018 74E0     		b	.L76
ARM GAS  /tmp/ccnfC67i.s 			page 42


 1482              	.L75:
 1483              		.loc 1 864 0 discriminator 2
 1484 001a 7B68     		ldr	r3, [r7, #4]
 1485 001c 0122     		movs	r2, #1
 1486 001e 83F84520 		strb	r2, [r3, #69]
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1487              		.loc 1 867 0 is_stmt 1 discriminator 2
 1488 0022 7B68     		ldr	r3, [r7, #4]
 1489 0024 0222     		movs	r2, #2
 1490 0026 83F84420 		strb	r2, [r3, #68]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Scan descriptors owned by CPU */
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while (((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET) && (descriptorscancounter 
 1491              		.loc 1 870 0 discriminator 2
 1492 002a 5AE0     		b	.L77
 1493              	.L82:
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Just for security */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     descriptorscancounter++;
 1494              		.loc 1 873 0
 1495 002c FB68     		ldr	r3, [r7, #12]
 1496 002e 0133     		adds	r3, r3, #1
 1497 0030 FB60     		str	r3, [r7, #12]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if first segment in frame */
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* ((heth->RxDesc->Status & ETH_DMARXDESC_FS) != (uint32_t)RESET) && ((heth->RxDesc->Status & E
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((heth->RxDesc->Status & (ETH_DMARXDESC_FS | ETH_DMARXDESC_LS)) == (uint32_t)ETH_DMARXDESC_FS
 1498              		.loc 1 877 0
 1499 0032 7B68     		ldr	r3, [r7, #4]
 1500 0034 9B6A     		ldr	r3, [r3, #40]
 1501 0036 1B68     		ldr	r3, [r3]
 1502 0038 03F44073 		and	r3, r3, #768
 1503 003c B3F5007F 		cmp	r3, #512
 1504 0040 0DD1     		bne	.L78
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.FSRxDesc = heth->RxDesc;
 1505              		.loc 1 879 0
 1506 0042 7B68     		ldr	r3, [r7, #4]
 1507 0044 9A6A     		ldr	r2, [r3, #40]
 1508 0046 7B68     		ldr	r3, [r7, #4]
 1509 0048 1A63     		str	r2, [r3, #48]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.SegCount = 1;   
 1510              		.loc 1 880 0
 1511 004a 7B68     		ldr	r3, [r7, #4]
 1512 004c 0122     		movs	r2, #1
 1513 004e 9A63     		str	r2, [r3, #56]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1514              		.loc 1 882 0
 1515 0050 7B68     		ldr	r3, [r7, #4]
 1516 0052 9B6A     		ldr	r3, [r3, #40]
 1517 0054 DB68     		ldr	r3, [r3, #12]
 1518 0056 1A46     		mov	r2, r3
 1519 0058 7B68     		ldr	r3, [r7, #4]
 1520 005a 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccnfC67i.s 			page 43


 1521 005c 41E0     		b	.L77
 1522              	.L78:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if intermediate segment */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* ((heth->RxDesc->Status & ETH_DMARXDESC_LS) == (uint32_t)RESET)&& ((heth->RxDesc->Status & ET
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else if ((heth->RxDesc->Status & (ETH_DMARXDESC_LS | ETH_DMARXDESC_FS)) == (uint32_t)RESET)
 1523              		.loc 1 886 0
 1524 005e 7B68     		ldr	r3, [r7, #4]
 1525 0060 9B6A     		ldr	r3, [r3, #40]
 1526 0062 1B68     		ldr	r3, [r3]
 1527 0064 03F44073 		and	r3, r3, #768
 1528 0068 002B     		cmp	r3, #0
 1529 006a 0BD1     		bne	.L79
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Increment segment count */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos.SegCount)++;
 1530              		.loc 1 889 0
 1531 006c 7B68     		ldr	r3, [r7, #4]
 1532 006e 9B6B     		ldr	r3, [r3, #56]
 1533 0070 5A1C     		adds	r2, r3, #1
 1534 0072 7B68     		ldr	r3, [r7, #4]
 1535 0074 9A63     		str	r2, [r3, #56]
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*)(heth->RxDesc->Buffer2NextDescAddr);
 1536              		.loc 1 891 0
 1537 0076 7B68     		ldr	r3, [r7, #4]
 1538 0078 9B6A     		ldr	r3, [r3, #40]
 1539 007a DB68     		ldr	r3, [r3, #12]
 1540 007c 1A46     		mov	r2, r3
 1541 007e 7B68     		ldr	r3, [r7, #4]
 1542 0080 9A62     		str	r2, [r3, #40]
 1543 0082 2EE0     		b	.L77
 1544              	.L79:
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Should be last segment */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Last segment */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.LSRxDesc = heth->RxDesc;
 1545              		.loc 1 897 0
 1546 0084 7B68     		ldr	r3, [r7, #4]
 1547 0086 9A6A     		ldr	r2, [r3, #40]
 1548 0088 7B68     		ldr	r3, [r7, #4]
 1549 008a 5A63     		str	r2, [r3, #52]
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Increment segment count */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos.SegCount)++;
 1550              		.loc 1 900 0
 1551 008c 7B68     		ldr	r3, [r7, #4]
 1552 008e 9B6B     		ldr	r3, [r3, #56]
 1553 0090 5A1C     		adds	r2, r3, #1
 1554 0092 7B68     		ldr	r3, [r7, #4]
 1555 0094 9A63     		str	r2, [r3, #56]
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check if last segment is first segment: one segment contains the frame */
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if ((heth->RxFrameInfos.SegCount) == 1)
 1556              		.loc 1 903 0
ARM GAS  /tmp/ccnfC67i.s 			page 44


 1557 0096 7B68     		ldr	r3, [r7, #4]
 1558 0098 9B6B     		ldr	r3, [r3, #56]
 1559 009a 012B     		cmp	r3, #1
 1560 009c 03D1     		bne	.L80
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->RxFrameInfos.FSRxDesc = heth->RxDesc;
 1561              		.loc 1 905 0
 1562 009e 7B68     		ldr	r3, [r7, #4]
 1563 00a0 9A6A     		ldr	r2, [r3, #40]
 1564 00a2 7B68     		ldr	r3, [r7, #4]
 1565 00a4 1A63     		str	r2, [r3, #48]
 1566              	.L80:
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = (((heth->RxDesc)->Status & ETH_DMARXDESC_FL) >> ETH_DMARXDESC_FRA
 1567              		.loc 1 909 0
 1568 00a6 7B68     		ldr	r3, [r7, #4]
 1569 00a8 9B6A     		ldr	r3, [r3, #40]
 1570 00aa 1B68     		ldr	r3, [r3]
 1571 00ac 1B0C     		lsrs	r3, r3, #16
 1572 00ae C3F30D03 		ubfx	r3, r3, #0, #14
 1573 00b2 1A1F     		subs	r2, r3, #4
 1574 00b4 7B68     		ldr	r3, [r7, #4]
 1575 00b6 DA63     		str	r2, [r3, #60]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the address of the buffer start address */ 
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.buffer =((heth->RxFrameInfos).FSRxDesc)->Buffer1Addr;
 1576              		.loc 1 912 0
 1577 00b8 7B68     		ldr	r3, [r7, #4]
 1578 00ba 1B6B     		ldr	r3, [r3, #48]
 1579 00bc 9A68     		ldr	r2, [r3, #8]
 1580 00be 7B68     		ldr	r3, [r7, #4]
 1581 00c0 1A64     		str	r2, [r3, #64]
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */      
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1582              		.loc 1 915 0
 1583 00c2 7B68     		ldr	r3, [r7, #4]
 1584 00c4 9B6A     		ldr	r3, [r3, #40]
 1585 00c6 DB68     		ldr	r3, [r3, #12]
 1586 00c8 1A46     		mov	r2, r3
 1587 00ca 7B68     		ldr	r3, [r7, #4]
 1588 00cc 9A62     		str	r2, [r3, #40]
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set HAL State to Ready */
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 1589              		.loc 1 918 0
 1590 00ce 7B68     		ldr	r3, [r7, #4]
 1591 00d0 0122     		movs	r2, #1
 1592 00d2 83F84420 		strb	r2, [r3, #68]
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 1593              		.loc 1 921 0
 1594 00d6 7B68     		ldr	r3, [r7, #4]
 1595 00d8 0022     		movs	r2, #0
ARM GAS  /tmp/ccnfC67i.s 			page 45


 1596 00da 83F84520 		strb	r2, [r3, #69]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return function status */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_OK;
 1597              		.loc 1 924 0
 1598 00de 0023     		movs	r3, #0
 1599 00e0 10E0     		b	.L76
 1600              	.L77:
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1601              		.loc 1 870 0
 1602 00e2 7B68     		ldr	r3, [r7, #4]
 1603 00e4 9B6A     		ldr	r3, [r3, #40]
 1604 00e6 1B68     		ldr	r3, [r3]
 1605 00e8 002B     		cmp	r3, #0
 1606 00ea 02DB     		blt	.L81
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1607              		.loc 1 870 0 is_stmt 0 discriminator 1
 1608 00ec FB68     		ldr	r3, [r7, #12]
 1609 00ee 032B     		cmp	r3, #3
 1610 00f0 9CD9     		bls	.L82
 1611              	.L81:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set HAL State to Ready */
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 1612              		.loc 1 929 0 is_stmt 1
 1613 00f2 7B68     		ldr	r3, [r7, #4]
 1614 00f4 0122     		movs	r2, #1
 1615 00f6 83F84420 		strb	r2, [r3, #68]
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 1616              		.loc 1 932 0
 1617 00fa 7B68     		ldr	r3, [r7, #4]
 1618 00fc 0022     		movs	r2, #0
 1619 00fe 83F84520 		strb	r2, [r3, #69]
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_ERROR;
 1620              		.loc 1 935 0
 1621 0102 0123     		movs	r3, #1
 1622              	.L76:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1623              		.loc 1 936 0
 1624 0104 1846     		mov	r0, r3
 1625 0106 1437     		adds	r7, r7, #20
 1626              	.LCFI49:
 1627              		.cfi_def_cfa_offset 4
 1628 0108 BD46     		mov	sp, r7
 1629              	.LCFI50:
 1630              		.cfi_def_cfa_register 13
 1631              		@ sp needed
 1632 010a 5DF8047B 		ldr	r7, [sp], #4
 1633              	.LCFI51:
 1634              		.cfi_restore 7
 1635              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccnfC67i.s 			page 46


 1636 010e 7047     		bx	lr
 1637              		.cfi_endproc
 1638              	.LFE146:
 1640              		.section	.text.HAL_ETH_IRQHandler,"ax",%progbits
 1641              		.align	1
 1642              		.global	HAL_ETH_IRQHandler
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu fpv4-sp-d16
 1648              	HAL_ETH_IRQHandler:
 1649              	.LFB147:
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  This function handles ETH interrupt request.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** void HAL_ETH_IRQHandler(ETH_HandleTypeDef *heth)
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1650              		.loc 1 945 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 8
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              	.LCFI52:
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 82B0     		sub	sp, sp, #8
 1660              	.LCFI53:
 1661              		.cfi_def_cfa_offset 16
 1662 0004 00AF     		add	r7, sp, #0
 1663              	.LCFI54:
 1664              		.cfi_def_cfa_register 7
 1665 0006 7860     		str	r0, [r7, #4]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame received */
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_R)) 
 1666              		.loc 1 947 0
 1667 0008 7B68     		ldr	r3, [r7, #4]
 1668 000a 1A68     		ldr	r2, [r3]
 1669 000c 41F21403 		movw	r3, #4116
 1670 0010 1344     		add	r3, r3, r2
 1671 0012 1B68     		ldr	r3, [r3]
 1672 0014 03F04003 		and	r3, r3, #64
 1673 0018 402B     		cmp	r3, #64
 1674 001a 12D1     		bne	.L84
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Receive complete callback */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_RxCpltCallback(heth);
 1675              		.loc 1 950 0
 1676 001c 7868     		ldr	r0, [r7, #4]
 1677 001e FFF7FEFF 		bl	HAL_ETH_RxCpltCallback
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear the Eth DMA Rx IT pending bits */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_R);
ARM GAS  /tmp/ccnfC67i.s 			page 47


 1678              		.loc 1 953 0
 1679 0022 7B68     		ldr	r3, [r7, #4]
 1680 0024 1A68     		ldr	r2, [r3]
 1681 0026 41F21403 		movw	r3, #4116
 1682 002a 1344     		add	r3, r3, r2
 1683 002c 4022     		movs	r2, #64
 1684 002e 1A60     		str	r2, [r3]
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1685              		.loc 1 956 0
 1686 0030 7B68     		ldr	r3, [r7, #4]
 1687 0032 0122     		movs	r2, #1
 1688 0034 83F84420 		strb	r2, [r3, #68]
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1689              		.loc 1 959 0
 1690 0038 7B68     		ldr	r3, [r7, #4]
 1691 003a 0022     		movs	r2, #0
 1692 003c 83F84520 		strb	r2, [r3, #69]
 1693 0040 1BE0     		b	.L85
 1694              	.L84:
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame transmitted */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if (__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_T)) 
 1695              		.loc 1 963 0
 1696 0042 7B68     		ldr	r3, [r7, #4]
 1697 0044 1A68     		ldr	r2, [r3]
 1698 0046 41F21403 		movw	r3, #4116
 1699 004a 1344     		add	r3, r3, r2
 1700 004c 1B68     		ldr	r3, [r3]
 1701 004e 03F00103 		and	r3, r3, #1
 1702 0052 012B     		cmp	r3, #1
 1703 0054 11D1     		bne	.L85
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Transfer complete callback */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_TxCpltCallback(heth);
 1704              		.loc 1 966 0
 1705 0056 7868     		ldr	r0, [r7, #4]
 1706 0058 FFF7FEFF 		bl	HAL_ETH_TxCpltCallback
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear the Eth DMA Tx IT pending bits */
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_T);
 1707              		.loc 1 969 0
 1708 005c 7B68     		ldr	r3, [r7, #4]
 1709 005e 1A68     		ldr	r2, [r3]
 1710 0060 41F21403 		movw	r3, #4116
 1711 0064 1344     		add	r3, r3, r2
 1712 0066 0122     		movs	r2, #1
 1713 0068 1A60     		str	r2, [r3]
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1714              		.loc 1 972 0
 1715 006a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccnfC67i.s 			page 48


 1716 006c 0122     		movs	r2, #1
 1717 006e 83F84420 		strb	r2, [r3, #68]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1718              		.loc 1 975 0
 1719 0072 7B68     		ldr	r3, [r7, #4]
 1720 0074 0022     		movs	r2, #0
 1721 0076 83F84520 		strb	r2, [r3, #69]
 1722              	.L85:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear the interrupt flags */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_NIS);
 1723              		.loc 1 979 0
 1724 007a 7B68     		ldr	r3, [r7, #4]
 1725 007c 1A68     		ldr	r2, [r3]
 1726 007e 41F21403 		movw	r3, #4116
 1727 0082 1344     		add	r3, r3, r2
 1728 0084 4FF48032 		mov	r2, #65536
 1729 0088 1A60     		str	r2, [r3]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* ETH DMA Error */
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_AIS))
 1730              		.loc 1 982 0
 1731 008a 7B68     		ldr	r3, [r7, #4]
 1732 008c 1A68     		ldr	r2, [r3]
 1733 008e 41F21403 		movw	r3, #4116
 1734 0092 1344     		add	r3, r3, r2
 1735 0094 1B68     		ldr	r3, [r3]
 1736 0096 03F40043 		and	r3, r3, #32768
 1737 009a B3F5004F 		cmp	r3, #32768
 1738 009e 12D1     		bne	.L87
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Ethernet Error callback */
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_ErrorCallback(heth);
 1739              		.loc 1 985 0
 1740 00a0 7868     		ldr	r0, [r7, #4]
 1741 00a2 FFF7FEFF 		bl	HAL_ETH_ErrorCallback
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear the interrupt flags */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_FLAG_AIS);
 1742              		.loc 1 988 0
 1743 00a6 7B68     		ldr	r3, [r7, #4]
 1744 00a8 1A68     		ldr	r2, [r3]
 1745 00aa 41F21403 		movw	r3, #4116
 1746 00ae 1344     		add	r3, r3, r2
 1747 00b0 4FF40042 		mov	r2, #32768
 1748 00b4 1A60     		str	r2, [r3]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1749              		.loc 1 991 0
 1750 00b6 7B68     		ldr	r3, [r7, #4]
 1751 00b8 0122     		movs	r2, #1
 1752 00ba 83F84420 		strb	r2, [r3, #68]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
ARM GAS  /tmp/ccnfC67i.s 			page 49


 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1753              		.loc 1 994 0
 1754 00be 7B68     		ldr	r3, [r7, #4]
 1755 00c0 0022     		movs	r2, #0
 1756 00c2 83F84520 		strb	r2, [r3, #69]
 1757              	.L87:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1758              		.loc 1 996 0
 1759 00c6 00BF     		nop
 1760 00c8 0837     		adds	r7, r7, #8
 1761              	.LCFI55:
 1762              		.cfi_def_cfa_offset 8
 1763 00ca BD46     		mov	sp, r7
 1764              	.LCFI56:
 1765              		.cfi_def_cfa_register 13
 1766              		@ sp needed
 1767 00cc 80BD     		pop	{r7, pc}
 1768              		.cfi_endproc
 1769              	.LFE147:
 1771              		.section	.text.HAL_ETH_TxCpltCallback,"ax",%progbits
 1772              		.align	1
 1773              		.weak	HAL_ETH_TxCpltCallback
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1777              		.fpu fpv4-sp-d16
 1779              	HAL_ETH_TxCpltCallback:
 1780              	.LFB148:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Tx Transfer completed callbacks.
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_TxCpltCallback(ETH_HandleTypeDef *heth)
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1781              		.loc 1 1005 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 8
 1784              		@ frame_needed = 1, uses_anonymous_args = 0
 1785              		@ link register save eliminated.
 1786 0000 80B4     		push	{r7}
 1787              	.LCFI57:
 1788              		.cfi_def_cfa_offset 4
 1789              		.cfi_offset 7, -4
 1790 0002 83B0     		sub	sp, sp, #12
 1791              	.LCFI58:
 1792              		.cfi_def_cfa_offset 16
 1793 0004 00AF     		add	r7, sp, #0
 1794              	.LCFI59:
 1795              		.cfi_def_cfa_register 7
 1796 0006 7860     		str	r0, [r7, #4]
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
ARM GAS  /tmp/ccnfC67i.s 			page 50


1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1797              		.loc 1 1012 0
 1798 0008 00BF     		nop
 1799 000a 0C37     		adds	r7, r7, #12
 1800              	.LCFI60:
 1801              		.cfi_def_cfa_offset 4
 1802 000c BD46     		mov	sp, r7
 1803              	.LCFI61:
 1804              		.cfi_def_cfa_register 13
 1805              		@ sp needed
 1806 000e 5DF8047B 		ldr	r7, [sp], #4
 1807              	.LCFI62:
 1808              		.cfi_restore 7
 1809              		.cfi_def_cfa_offset 0
 1810 0012 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE148:
 1814              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 1815              		.align	1
 1816              		.weak	HAL_ETH_RxCpltCallback
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv4-sp-d16
 1822              	HAL_ETH_RxCpltCallback:
 1823              	.LFB149:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Rx Transfer completed callbacks.
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1824              		.loc 1 1021 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 8
 1827              		@ frame_needed = 1, uses_anonymous_args = 0
 1828              		@ link register save eliminated.
 1829 0000 80B4     		push	{r7}
 1830              	.LCFI63:
 1831              		.cfi_def_cfa_offset 4
 1832              		.cfi_offset 7, -4
 1833 0002 83B0     		sub	sp, sp, #12
 1834              	.LCFI64:
 1835              		.cfi_def_cfa_offset 16
 1836 0004 00AF     		add	r7, sp, #0
 1837              	.LCFI65:
 1838              		.cfi_def_cfa_register 7
 1839 0006 7860     		str	r0, [r7, #4]
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
ARM GAS  /tmp/ccnfC67i.s 			page 51


1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1840              		.loc 1 1028 0
 1841 0008 00BF     		nop
 1842 000a 0C37     		adds	r7, r7, #12
 1843              	.LCFI66:
 1844              		.cfi_def_cfa_offset 4
 1845 000c BD46     		mov	sp, r7
 1846              	.LCFI67:
 1847              		.cfi_def_cfa_register 13
 1848              		@ sp needed
 1849 000e 5DF8047B 		ldr	r7, [sp], #4
 1850              	.LCFI68:
 1851              		.cfi_restore 7
 1852              		.cfi_def_cfa_offset 0
 1853 0012 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE149:
 1857              		.section	.text.HAL_ETH_ErrorCallback,"ax",%progbits
 1858              		.align	1
 1859              		.weak	HAL_ETH_ErrorCallback
 1860              		.syntax unified
 1861              		.thumb
 1862              		.thumb_func
 1863              		.fpu fpv4-sp-d16
 1865              	HAL_ETH_ErrorCallback:
 1866              	.LFB150:
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Ethernet transfer error callbacks
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_ErrorCallback(ETH_HandleTypeDef *heth)
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1867              		.loc 1 1037 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 8
 1870              		@ frame_needed = 1, uses_anonymous_args = 0
 1871              		@ link register save eliminated.
 1872 0000 80B4     		push	{r7}
 1873              	.LCFI69:
 1874              		.cfi_def_cfa_offset 4
 1875              		.cfi_offset 7, -4
 1876 0002 83B0     		sub	sp, sp, #12
 1877              	.LCFI70:
 1878              		.cfi_def_cfa_offset 16
 1879 0004 00AF     		add	r7, sp, #0
 1880              	.LCFI71:
 1881              		.cfi_def_cfa_register 7
 1882 0006 7860     		str	r0, [r7, #4]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
ARM GAS  /tmp/ccnfC67i.s 			page 52


1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1883              		.loc 1 1044 0
 1884 0008 00BF     		nop
 1885 000a 0C37     		adds	r7, r7, #12
 1886              	.LCFI72:
 1887              		.cfi_def_cfa_offset 4
 1888 000c BD46     		mov	sp, r7
 1889              	.LCFI73:
 1890              		.cfi_def_cfa_register 13
 1891              		@ sp needed
 1892 000e 5DF8047B 		ldr	r7, [sp], #4
 1893              	.LCFI74:
 1894              		.cfi_restore 7
 1895              		.cfi_def_cfa_offset 0
 1896 0012 7047     		bx	lr
 1897              		.cfi_endproc
 1898              	.LFE150:
 1900              		.section	.text.HAL_ETH_ReadPHYRegister,"ax",%progbits
 1901              		.align	1
 1902              		.global	HAL_ETH_ReadPHYRegister
 1903              		.syntax unified
 1904              		.thumb
 1905              		.thumb_func
 1906              		.fpu fpv4-sp-d16
 1908              	HAL_ETH_ReadPHYRegister:
 1909              	.LFB151:
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Reads a PHY register
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module                  
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param PHYReg PHY register address, is the index of one of the 32 PHY register. 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                This parameter can be one of the following values: 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   PHY_BCR: Transceiver Basic Control Register, 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   PHY_BSR: Transceiver Basic Status Register.   
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   More PHY register could be read depending on the used PHY
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param RegValue PHY register value                  
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ReadPHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t *RegVa
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1910              		.loc 1 1059 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 24
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
 1914 0000 80B5     		push	{r7, lr}
 1915              	.LCFI75:
 1916              		.cfi_def_cfa_offset 8
 1917              		.cfi_offset 7, -8
 1918              		.cfi_offset 14, -4
 1919 0002 86B0     		sub	sp, sp, #24
 1920              	.LCFI76:
 1921              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccnfC67i.s 			page 53


 1922 0004 00AF     		add	r7, sp, #0
 1923              	.LCFI77:
 1924              		.cfi_def_cfa_register 7
 1925 0006 F860     		str	r0, [r7, #12]
 1926 0008 0B46     		mov	r3, r1
 1927 000a 7A60     		str	r2, [r7, #4]
 1928 000c 7B81     		strh	r3, [r7, #10]	@ movhi
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;     
 1929              		.loc 1 1060 0
 1930 000e 0023     		movs	r3, #0
 1931 0010 7B61     		str	r3, [r7, #20]
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
 1932              		.loc 1 1061 0
 1933 0012 0023     		movs	r3, #0
 1934 0014 3B61     		str	r3, [r7, #16]
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_BUSY_RD)
 1935              		.loc 1 1067 0
 1936 0016 FB68     		ldr	r3, [r7, #12]
 1937 0018 93F84430 		ldrb	r3, [r3, #68]
 1938 001c DBB2     		uxtb	r3, r3
 1939 001e 822B     		cmp	r3, #130
 1940 0020 01D1     		bne	.L92
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_BUSY;
 1941              		.loc 1 1069 0
 1942 0022 0223     		movs	r3, #2
 1943 0024 50E0     		b	.L93
 1944              	.L92:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY_RD */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY_RD;
 1945              		.loc 1 1072 0
 1946 0026 FB68     		ldr	r3, [r7, #12]
 1947 0028 8222     		movs	r2, #130
 1948 002a 83F84420 		strb	r2, [r3, #68]
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = heth->Instance->MACMIIAR;
 1949              		.loc 1 1075 0
 1950 002e FB68     		ldr	r3, [r7, #12]
 1951 0030 1B68     		ldr	r3, [r3]
 1952 0032 1B69     		ldr	r3, [r3, #16]
 1953 0034 7B61     		str	r3, [r7, #20]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Keep only the CSR Clock Range CR[2:0] bits value */
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_CR_MASK;
 1954              		.loc 1 1078 0
 1955 0036 7B69     		ldr	r3, [r7, #20]
 1956 0038 03F01C03 		and	r3, r3, #28
 1957 003c 7B61     		str	r3, [r7, #20]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prepare the MII address register value */
ARM GAS  /tmp/ccnfC67i.s 			page 54


1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)heth->Init.PhyAddress << 11) & ETH_MACMIIAR_PA); /* Set the PHY device addre
 1958              		.loc 1 1081 0
 1959 003e FB68     		ldr	r3, [r7, #12]
 1960 0040 1B8A     		ldrh	r3, [r3, #16]
 1961 0042 DB02     		lsls	r3, r3, #11
 1962 0044 9BB2     		uxth	r3, r3
 1963 0046 7A69     		ldr	r2, [r7, #20]
 1964 0048 1343     		orrs	r3, r3, r2
 1965 004a 7B61     		str	r3, [r7, #20]
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                   /* Set the PHY register add
 1966              		.loc 1 1082 0
 1967 004c 7B89     		ldrh	r3, [r7, #10]
 1968 004e 9B01     		lsls	r3, r3, #6
 1969 0050 03F4F863 		and	r3, r3, #1984
 1970 0054 7A69     		ldr	r2, [r7, #20]
 1971 0056 1343     		orrs	r3, r3, r2
 1972 0058 7B61     		str	r3, [r7, #20]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_MW;                                           /* Set the read mode       
 1973              		.loc 1 1083 0
 1974 005a 7B69     		ldr	r3, [r7, #20]
 1975 005c 23F00203 		bic	r3, r3, #2
 1976 0060 7B61     		str	r3, [r7, #20]
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                            /* Set the MII Busy bit    
 1977              		.loc 1 1084 0
 1978 0062 7B69     		ldr	r3, [r7, #20]
 1979 0064 43F00103 		orr	r3, r3, #1
 1980 0068 7B61     		str	r3, [r7, #20]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIAR = tmpreg;
 1981              		.loc 1 1087 0
 1982 006a FB68     		ldr	r3, [r7, #12]
 1983 006c 1B68     		ldr	r3, [r3]
 1984 006e 7A69     		ldr	r2, [r7, #20]
 1985 0070 1A61     		str	r2, [r3, #16]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 1986              		.loc 1 1090 0
 1987 0072 FFF7FEFF 		bl	HAL_GetTick
 1988 0076 3861     		str	r0, [r7, #16]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check for the Busy flag */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while((tmpreg & ETH_MACMIIAR_MB) == ETH_MACMIIAR_MB)
 1989              		.loc 1 1093 0
 1990 0078 15E0     		b	.L94
 1991              	.L96:
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > PHY_READ_TO)
 1992              		.loc 1 1096 0
 1993 007a FFF7FEFF 		bl	HAL_GetTick
 1994 007e 0246     		mov	r2, r0
 1995 0080 3B69     		ldr	r3, [r7, #16]
 1996 0082 D31A     		subs	r3, r2, r3
 1997 0084 B3F5803F 		cmp	r3, #65536
 1998 0088 09D3     		bcc	.L95
ARM GAS  /tmp/ccnfC67i.s 			page 55


1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_READY;
 1999              		.loc 1 1098 0
 2000 008a FB68     		ldr	r3, [r7, #12]
 2001 008c 0122     		movs	r2, #1
 2002 008e 83F84420 		strb	r2, [r3, #68]
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 2003              		.loc 1 1101 0
 2004 0092 FB68     		ldr	r3, [r7, #12]
 2005 0094 0022     		movs	r2, #0
 2006 0096 83F84520 		strb	r2, [r3, #69]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 2007              		.loc 1 1103 0
 2008 009a 0323     		movs	r3, #3
 2009 009c 14E0     		b	.L93
 2010              	.L95:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = heth->Instance->MACMIIAR;
 2011              		.loc 1 1106 0
 2012 009e FB68     		ldr	r3, [r7, #12]
 2013 00a0 1B68     		ldr	r3, [r3]
 2014 00a2 1B69     		ldr	r3, [r3, #16]
 2015 00a4 7B61     		str	r3, [r7, #20]
 2016              	.L94:
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2017              		.loc 1 1093 0
 2018 00a6 7B69     		ldr	r3, [r7, #20]
 2019 00a8 03F00103 		and	r3, r3, #1
 2020 00ac 002B     		cmp	r3, #0
 2021 00ae E4D1     		bne	.L96
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get MACMIIDR value */
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *RegValue = (uint16_t)(heth->Instance->MACMIIDR);
 2022              		.loc 1 1110 0
 2023 00b0 FB68     		ldr	r3, [r7, #12]
 2024 00b2 1B68     		ldr	r3, [r3]
 2025 00b4 5B69     		ldr	r3, [r3, #20]
 2026 00b6 9BB2     		uxth	r3, r3
 2027 00b8 1A46     		mov	r2, r3
 2028 00ba 7B68     		ldr	r3, [r7, #4]
 2029 00bc 1A60     		str	r2, [r3]
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to READY */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 2030              		.loc 1 1113 0
 2031 00be FB68     		ldr	r3, [r7, #12]
 2032 00c0 0122     		movs	r2, #1
 2033 00c2 83F84420 		strb	r2, [r3, #68]
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 2034              		.loc 1 1116 0
ARM GAS  /tmp/ccnfC67i.s 			page 56


 2035 00c6 0023     		movs	r3, #0
 2036              	.L93:
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2037              		.loc 1 1117 0
 2038 00c8 1846     		mov	r0, r3
 2039 00ca 1837     		adds	r7, r7, #24
 2040              	.LCFI78:
 2041              		.cfi_def_cfa_offset 8
 2042 00cc BD46     		mov	sp, r7
 2043              	.LCFI79:
 2044              		.cfi_def_cfa_register 13
 2045              		@ sp needed
 2046 00ce 80BD     		pop	{r7, pc}
 2047              		.cfi_endproc
 2048              	.LFE151:
 2050              		.section	.text.HAL_ETH_WritePHYRegister,"ax",%progbits
 2051              		.align	1
 2052              		.global	HAL_ETH_WritePHYRegister
 2053              		.syntax unified
 2054              		.thumb
 2055              		.thumb_func
 2056              		.fpu fpv4-sp-d16
 2058              	HAL_ETH_WritePHYRegister:
 2059              	.LFB152:
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Writes to a PHY register.
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  PHYReg PHY register address, is the index of one of the 32 PHY register. 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This parameter can be one of the following values: 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             PHY_BCR: Transceiver Control Register.  
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             More PHY register could be written depending on the used PHY
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RegValue the value to write
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_WritePHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t RegVa
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2060              		.loc 1 1131 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 24
 2063              		@ frame_needed = 1, uses_anonymous_args = 0
 2064 0000 80B5     		push	{r7, lr}
 2065              	.LCFI80:
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 7, -8
 2068              		.cfi_offset 14, -4
 2069 0002 86B0     		sub	sp, sp, #24
 2070              	.LCFI81:
 2071              		.cfi_def_cfa_offset 32
 2072 0004 00AF     		add	r7, sp, #0
 2073              	.LCFI82:
 2074              		.cfi_def_cfa_register 7
 2075 0006 F860     		str	r0, [r7, #12]
 2076 0008 0B46     		mov	r3, r1
 2077 000a 7A60     		str	r2, [r7, #4]
 2078 000c 7B81     		strh	r3, [r7, #10]	@ movhi
ARM GAS  /tmp/ccnfC67i.s 			page 57


1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2079              		.loc 1 1132 0
 2080 000e 0023     		movs	r3, #0
 2081 0010 7B61     		str	r3, [r7, #20]
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
 2082              		.loc 1 1133 0
 2083 0012 0023     		movs	r3, #0
 2084 0014 3B61     		str	r3, [r7, #16]
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_BUSY_WR)
 2085              		.loc 1 1139 0
 2086 0016 FB68     		ldr	r3, [r7, #12]
 2087 0018 93F84430 		ldrb	r3, [r3, #68]
 2088 001c DBB2     		uxtb	r3, r3
 2089 001e 422B     		cmp	r3, #66
 2090 0020 01D1     		bne	.L98
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_BUSY;
 2091              		.loc 1 1141 0
 2092 0022 0223     		movs	r3, #2
 2093 0024 4EE0     		b	.L99
 2094              	.L98:
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY_WR */
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY_WR;
 2095              		.loc 1 1144 0
 2096 0026 FB68     		ldr	r3, [r7, #12]
 2097 0028 4222     		movs	r2, #66
 2098 002a 83F84420 		strb	r2, [r3, #68]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = heth->Instance->MACMIIAR;
 2099              		.loc 1 1147 0
 2100 002e FB68     		ldr	r3, [r7, #12]
 2101 0030 1B68     		ldr	r3, [r3]
 2102 0032 1B69     		ldr	r3, [r3, #16]
 2103 0034 7B61     		str	r3, [r7, #20]
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Keep only the CSR Clock Range CR[2:0] bits value */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_CR_MASK;
 2104              		.loc 1 1150 0
 2105 0036 7B69     		ldr	r3, [r7, #20]
 2106 0038 03F01C03 		and	r3, r3, #28
 2107 003c 7B61     		str	r3, [r7, #20]
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prepare the MII register address value */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)heth->Init.PhyAddress<<11) & ETH_MACMIIAR_PA); /* Set the PHY device address
 2108              		.loc 1 1153 0
 2109 003e FB68     		ldr	r3, [r7, #12]
 2110 0040 1B8A     		ldrh	r3, [r3, #16]
 2111 0042 DB02     		lsls	r3, r3, #11
 2112 0044 9BB2     		uxth	r3, r3
 2113 0046 7A69     		ldr	r2, [r7, #20]
ARM GAS  /tmp/ccnfC67i.s 			page 58


 2114 0048 1343     		orrs	r3, r3, r2
 2115 004a 7B61     		str	r3, [r7, #20]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                 /* Set the PHY register addre
 2116              		.loc 1 1154 0
 2117 004c 7B89     		ldrh	r3, [r7, #10]
 2118 004e 9B01     		lsls	r3, r3, #6
 2119 0050 03F4F863 		and	r3, r3, #1984
 2120 0054 7A69     		ldr	r2, [r7, #20]
 2121 0056 1343     		orrs	r3, r3, r2
 2122 0058 7B61     		str	r3, [r7, #20]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MW;                                          /* Set the write mode */
 2123              		.loc 1 1155 0
 2124 005a 7B69     		ldr	r3, [r7, #20]
 2125 005c 43F00203 		orr	r3, r3, #2
 2126 0060 7B61     		str	r3, [r7, #20]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                          /* Set the MII Busy bit */
 2127              		.loc 1 1156 0
 2128 0062 7B69     		ldr	r3, [r7, #20]
 2129 0064 43F00103 		orr	r3, r3, #1
 2130 0068 7B61     		str	r3, [r7, #20]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Give the value to the MII data register */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIDR = (uint16_t)RegValue;
 2131              		.loc 1 1159 0
 2132 006a 7B68     		ldr	r3, [r7, #4]
 2133 006c 9AB2     		uxth	r2, r3
 2134 006e FB68     		ldr	r3, [r7, #12]
 2135 0070 1B68     		ldr	r3, [r3]
 2136 0072 5A61     		str	r2, [r3, #20]
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIAR = tmpreg;
 2137              		.loc 1 1162 0
 2138 0074 FB68     		ldr	r3, [r7, #12]
 2139 0076 1B68     		ldr	r3, [r3]
 2140 0078 7A69     		ldr	r2, [r7, #20]
 2141 007a 1A61     		str	r2, [r3, #16]
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 2142              		.loc 1 1165 0
 2143 007c FFF7FEFF 		bl	HAL_GetTick
 2144 0080 3861     		str	r0, [r7, #16]
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check for the Busy flag */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while((tmpreg & ETH_MACMIIAR_MB) == ETH_MACMIIAR_MB)
 2145              		.loc 1 1168 0
 2146 0082 15E0     		b	.L100
 2147              	.L102:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > PHY_WRITE_TO)
 2148              		.loc 1 1171 0
 2149 0084 FFF7FEFF 		bl	HAL_GetTick
 2150 0088 0246     		mov	r2, r0
 2151 008a 3B69     		ldr	r3, [r7, #16]
 2152 008c D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccnfC67i.s 			page 59


 2153 008e B3F5803F 		cmp	r3, #65536
 2154 0092 09D3     		bcc	.L101
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_READY;
 2155              		.loc 1 1173 0
 2156 0094 FB68     		ldr	r3, [r7, #12]
 2157 0096 0122     		movs	r2, #1
 2158 0098 83F84420 		strb	r2, [r3, #68]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 2159              		.loc 1 1176 0
 2160 009c FB68     		ldr	r3, [r7, #12]
 2161 009e 0022     		movs	r2, #0
 2162 00a0 83F84520 		strb	r2, [r3, #69]
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 2163              		.loc 1 1178 0
 2164 00a4 0323     		movs	r3, #3
 2165 00a6 0DE0     		b	.L99
 2166              	.L101:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = heth->Instance->MACMIIAR;
 2167              		.loc 1 1181 0
 2168 00a8 FB68     		ldr	r3, [r7, #12]
 2169 00aa 1B68     		ldr	r3, [r3]
 2170 00ac 1B69     		ldr	r3, [r3, #16]
 2171 00ae 7B61     		str	r3, [r7, #20]
 2172              	.L100:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2173              		.loc 1 1168 0
 2174 00b0 7B69     		ldr	r3, [r7, #20]
 2175 00b2 03F00103 		and	r3, r3, #1
 2176 00b6 002B     		cmp	r3, #0
 2177 00b8 E4D1     		bne	.L102
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to READY */
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 2178              		.loc 1 1185 0
 2179 00ba FB68     		ldr	r3, [r7, #12]
 2180 00bc 0122     		movs	r2, #1
 2181 00be 83F84420 		strb	r2, [r3, #68]
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK; 
 2182              		.loc 1 1188 0
 2183 00c2 0023     		movs	r3, #0
 2184              	.L99:
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2185              		.loc 1 1189 0
 2186 00c4 1846     		mov	r0, r3
 2187 00c6 1837     		adds	r7, r7, #24
 2188              	.LCFI83:
 2189              		.cfi_def_cfa_offset 8
 2190 00c8 BD46     		mov	sp, r7
ARM GAS  /tmp/ccnfC67i.s 			page 60


 2191              	.LCFI84:
 2192              		.cfi_def_cfa_register 13
 2193              		@ sp needed
 2194 00ca 80BD     		pop	{r7, pc}
 2195              		.cfi_endproc
 2196              	.LFE152:
 2198              		.section	.text.HAL_ETH_Start,"ax",%progbits
 2199              		.align	1
 2200              		.global	HAL_ETH_Start
 2201              		.syntax unified
 2202              		.thumb
 2203              		.thumb_func
 2204              		.fpu fpv4-sp-d16
 2206              	HAL_ETH_Start:
 2207              	.LFB153:
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group3 Peripheral Control functions
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  *  @brief    Peripheral Control functions 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  *
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** @verbatim   
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  ===============================================================================
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                   ##### Peripheral Control functions #####
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  ===============================================================================  
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     [..]  This section provides functions allowing to:
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Enable MAC and DMA transmission and reception.
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_Start();
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Disable MAC and DMA transmission and reception. 
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_Stop();
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Set the MAC configuration in runtime mode
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigMAC();
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Set the DMA configuration in runtime mode
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigDMA();
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** @endverbatim
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  /**
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables Ethernet MAC and DMA reception/transmission 
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Start(ETH_HandleTypeDef *heth)
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 2208              		.loc 1 1223 0
 2209              		.cfi_startproc
 2210              		@ args = 0, pretend = 0, frame = 8
 2211              		@ frame_needed = 1, uses_anonymous_args = 0
 2212 0000 80B5     		push	{r7, lr}
 2213              	.LCFI85:
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 7, -8
ARM GAS  /tmp/ccnfC67i.s 			page 61


 2216              		.cfi_offset 14, -4
 2217 0002 82B0     		sub	sp, sp, #8
 2218              	.LCFI86:
 2219              		.cfi_def_cfa_offset 16
 2220 0004 00AF     		add	r7, sp, #0
 2221              	.LCFI87:
 2222              		.cfi_def_cfa_register 7
 2223 0006 7860     		str	r0, [r7, #4]
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2224              		.loc 1 1225 0
 2225 0008 7B68     		ldr	r3, [r7, #4]
 2226 000a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2227 000e 012B     		cmp	r3, #1
 2228 0010 01D1     		bne	.L104
 2229              		.loc 1 1225 0 is_stmt 0 discriminator 1
 2230 0012 0223     		movs	r3, #2
 2231 0014 1FE0     		b	.L105
 2232              	.L104:
 2233              		.loc 1 1225 0 discriminator 2
 2234 0016 7B68     		ldr	r3, [r7, #4]
 2235 0018 0122     		movs	r2, #1
 2236 001a 83F84520 		strb	r2, [r3, #69]
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 2237              		.loc 1 1228 0 is_stmt 1 discriminator 2
 2238 001e 7B68     		ldr	r3, [r7, #4]
 2239 0020 0222     		movs	r2, #2
 2240 0022 83F84420 		strb	r2, [r3, #68]
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable transmit state machine of the MAC for transmission on the MII */
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACTransmissionEnable(heth);
 2241              		.loc 1 1231 0 discriminator 2
 2242 0026 7868     		ldr	r0, [r7, #4]
 2243 0028 FFF7FEFF 		bl	ETH_MACTransmissionEnable
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable receive state machine of the MAC for reception from the MII */
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACReceptionEnable(heth);
 2244              		.loc 1 1234 0 discriminator 2
 2245 002c 7868     		ldr	r0, [r7, #4]
 2246 002e FFF7FEFF 		bl	ETH_MACReceptionEnable
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Flush Transmit FIFO */
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_FlushTransmitFIFO(heth);
 2247              		.loc 1 1237 0 discriminator 2
 2248 0032 7868     		ldr	r0, [r7, #4]
 2249 0034 FFF7FEFF 		bl	ETH_FlushTransmitFIFO
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Start DMA transmission */
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMATransmissionEnable(heth);
 2250              		.loc 1 1240 0 discriminator 2
 2251 0038 7868     		ldr	r0, [r7, #4]
 2252 003a FFF7FEFF 		bl	ETH_DMATransmissionEnable
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Start DMA reception */
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAReceptionEnable(heth);
ARM GAS  /tmp/ccnfC67i.s 			page 62


 2253              		.loc 1 1243 0 discriminator 2
 2254 003e 7868     		ldr	r0, [r7, #4]
 2255 0040 FFF7FEFF 		bl	ETH_DMAReceptionEnable
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state to READY*/
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 2256              		.loc 1 1246 0 discriminator 2
 2257 0044 7B68     		ldr	r3, [r7, #4]
 2258 0046 0122     		movs	r2, #1
 2259 0048 83F84420 		strb	r2, [r3, #68]
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 2260              		.loc 1 1249 0 discriminator 2
 2261 004c 7B68     		ldr	r3, [r7, #4]
 2262 004e 0022     		movs	r2, #0
 2263 0050 83F84520 		strb	r2, [r3, #69]
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 2264              		.loc 1 1252 0 discriminator 2
 2265 0054 0023     		movs	r3, #0
 2266              	.L105:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2267              		.loc 1 1253 0
 2268 0056 1846     		mov	r0, r3
 2269 0058 0837     		adds	r7, r7, #8
 2270              	.LCFI88:
 2271              		.cfi_def_cfa_offset 8
 2272 005a BD46     		mov	sp, r7
 2273              	.LCFI89:
 2274              		.cfi_def_cfa_register 13
 2275              		@ sp needed
 2276 005c 80BD     		pop	{r7, pc}
 2277              		.cfi_endproc
 2278              	.LFE153:
 2280              		.section	.text.HAL_ETH_Stop,"ax",%progbits
 2281              		.align	1
 2282              		.global	HAL_ETH_Stop
 2283              		.syntax unified
 2284              		.thumb
 2285              		.thumb_func
 2286              		.fpu fpv4-sp-d16
 2288              	HAL_ETH_Stop:
 2289              	.LFB154:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Stop Ethernet MAC and DMA reception/transmission 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Stop(ETH_HandleTypeDef *heth)
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 2290              		.loc 1 1262 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccnfC67i.s 			page 63


 2293              		@ frame_needed = 1, uses_anonymous_args = 0
 2294 0000 80B5     		push	{r7, lr}
 2295              	.LCFI90:
 2296              		.cfi_def_cfa_offset 8
 2297              		.cfi_offset 7, -8
 2298              		.cfi_offset 14, -4
 2299 0002 82B0     		sub	sp, sp, #8
 2300              	.LCFI91:
 2301              		.cfi_def_cfa_offset 16
 2302 0004 00AF     		add	r7, sp, #0
 2303              	.LCFI92:
 2304              		.cfi_def_cfa_register 7
 2305 0006 7860     		str	r0, [r7, #4]
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2306              		.loc 1 1264 0
 2307 0008 7B68     		ldr	r3, [r7, #4]
 2308 000a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2309 000e 012B     		cmp	r3, #1
 2310 0010 01D1     		bne	.L107
 2311              		.loc 1 1264 0 is_stmt 0 discriminator 1
 2312 0012 0223     		movs	r3, #2
 2313 0014 1FE0     		b	.L108
 2314              	.L107:
 2315              		.loc 1 1264 0 discriminator 2
 2316 0016 7B68     		ldr	r3, [r7, #4]
 2317 0018 0122     		movs	r2, #1
 2318 001a 83F84520 		strb	r2, [r3, #69]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 2319              		.loc 1 1267 0 is_stmt 1 discriminator 2
 2320 001e 7B68     		ldr	r3, [r7, #4]
 2321 0020 0222     		movs	r2, #2
 2322 0022 83F84420 		strb	r2, [r3, #68]
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Stop DMA transmission */
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMATransmissionDisable(heth);
 2323              		.loc 1 1270 0 discriminator 2
 2324 0026 7868     		ldr	r0, [r7, #4]
 2325 0028 FFF7FEFF 		bl	ETH_DMATransmissionDisable
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Stop DMA reception */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAReceptionDisable(heth);
 2326              		.loc 1 1273 0 discriminator 2
 2327 002c 7868     		ldr	r0, [r7, #4]
 2328 002e FFF7FEFF 		bl	ETH_DMAReceptionDisable
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable receive state machine of the MAC for reception from the MII */
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACReceptionDisable(heth);
 2329              		.loc 1 1276 0 discriminator 2
 2330 0032 7868     		ldr	r0, [r7, #4]
 2331 0034 FFF7FEFF 		bl	ETH_MACReceptionDisable
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Flush Transmit FIFO */
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_FlushTransmitFIFO(heth);
 2332              		.loc 1 1279 0 discriminator 2
ARM GAS  /tmp/ccnfC67i.s 			page 64


 2333 0038 7868     		ldr	r0, [r7, #4]
 2334 003a FFF7FEFF 		bl	ETH_FlushTransmitFIFO
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable transmit state machine of the MAC for transmission on the MII */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACTransmissionDisable(heth);
 2335              		.loc 1 1282 0 discriminator 2
 2336 003e 7868     		ldr	r0, [r7, #4]
 2337 0040 FFF7FEFF 		bl	ETH_MACTransmissionDisable
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state*/
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 2338              		.loc 1 1285 0 discriminator 2
 2339 0044 7B68     		ldr	r3, [r7, #4]
 2340 0046 0122     		movs	r2, #1
 2341 0048 83F84420 		strb	r2, [r3, #68]
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 2342              		.loc 1 1288 0 discriminator 2
 2343 004c 7B68     		ldr	r3, [r7, #4]
 2344 004e 0022     		movs	r2, #0
 2345 0050 83F84520 		strb	r2, [r3, #69]
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 2346              		.loc 1 1291 0 discriminator 2
 2347 0054 0023     		movs	r3, #0
 2348              	.L108:
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2349              		.loc 1 1292 0
 2350 0056 1846     		mov	r0, r3
 2351 0058 0837     		adds	r7, r7, #8
 2352              	.LCFI93:
 2353              		.cfi_def_cfa_offset 8
 2354 005a BD46     		mov	sp, r7
 2355              	.LCFI94:
 2356              		.cfi_def_cfa_register 13
 2357              		@ sp needed
 2358 005c 80BD     		pop	{r7, pc}
 2359              		.cfi_endproc
 2360              	.LFE154:
 2362              		.section	.text.HAL_ETH_ConfigMAC,"ax",%progbits
 2363              		.align	1
 2364              		.global	HAL_ETH_ConfigMAC
 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu fpv4-sp-d16
 2370              	HAL_ETH_ConfigMAC:
 2371              	.LFB155:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Set ETH MAC Configuration.
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  macconf MAC Configuration structure  
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
ARM GAS  /tmp/ccnfC67i.s 			page 65


1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ConfigMAC(ETH_HandleTypeDef *heth, ETH_MACInitTypeDef *macconf)
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2372              		.loc 1 1302 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 16
 2375              		@ frame_needed = 1, uses_anonymous_args = 0
 2376 0000 80B5     		push	{r7, lr}
 2377              	.LCFI95:
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 7, -8
 2380              		.cfi_offset 14, -4
 2381 0002 84B0     		sub	sp, sp, #16
 2382              	.LCFI96:
 2383              		.cfi_def_cfa_offset 24
 2384 0004 00AF     		add	r7, sp, #0
 2385              	.LCFI97:
 2386              		.cfi_def_cfa_register 7
 2387 0006 7860     		str	r0, [r7, #4]
 2388 0008 3960     		str	r1, [r7]
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2389              		.loc 1 1303 0
 2390 000a 0023     		movs	r3, #0
 2391 000c FB60     		str	r3, [r7, #12]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2392              		.loc 1 1306 0
 2393 000e 7B68     		ldr	r3, [r7, #4]
 2394 0010 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2395 0014 012B     		cmp	r3, #1
 2396 0016 01D1     		bne	.L110
 2397              		.loc 1 1306 0 is_stmt 0 discriminator 1
 2398 0018 0223     		movs	r3, #2
 2399 001a E4E0     		b	.L111
 2400              	.L110:
 2401              		.loc 1 1306 0 discriminator 2
 2402 001c 7B68     		ldr	r3, [r7, #4]
 2403 001e 0122     		movs	r2, #1
 2404 0020 83F84520 		strb	r2, [r3, #69]
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_BUSY;
 2405              		.loc 1 1309 0 is_stmt 1 discriminator 2
 2406 0024 7B68     		ldr	r3, [r7, #4]
 2407 0026 0222     		movs	r2, #2
 2408 0028 83F84420 		strb	r2, [r3, #68]
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_SPEED(heth->Init.Speed));
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode)); 
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (macconf != NULL)
 2409              		.loc 1 1314 0 discriminator 2
 2410 002c 3B68     		ldr	r3, [r7]
 2411 002e 002B     		cmp	r3, #0
 2412 0030 00F0B180 		beq	.L112
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
ARM GAS  /tmp/ccnfC67i.s 			page 66


1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check the parameters */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_WATCHDOG(macconf->Watchdog));
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_JABBER(macconf->Jabber));
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_INTER_FRAME_GAP(macconf->InterFrameGap));
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CARRIER_SENSE(macconf->CarrierSense));
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_OWN(macconf->ReceiveOwn));
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_LOOPBACK_MODE(macconf->LoopbackMode));
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CHECKSUM_OFFLOAD(macconf->ChecksumOffload));
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RETRY_TRANSMISSION(macconf->RetryTransmission));
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_AUTOMATIC_PADCRC_STRIP(macconf->AutomaticPadCRCStrip));
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_BACKOFF_LIMIT(macconf->BackOffLimit));
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DEFERRAL_CHECK(macconf->DeferralCheck));
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_ALL(macconf->ReceiveAll));
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_SOURCE_ADDR_FILTER(macconf->SourceAddrFilter));
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CONTROL_FRAMES(macconf->PassControlFrames));
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_BROADCAST_FRAMES_RECEPTION(macconf->BroadcastFramesReception));
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DESTINATION_ADDR_FILTER(macconf->DestinationAddrFilter));
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PROMISCUOUS_MODE(macconf->PromiscuousMode));
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_MULTICAST_FRAMES_FILTER(macconf->MulticastFramesFilter));
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_UNICAST_FRAMES_FILTER(macconf->UnicastFramesFilter));
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PAUSE_TIME(macconf->PauseTime));
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_ZEROQUANTA_PAUSE(macconf->ZeroQuantaPause));
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PAUSE_LOW_THRESHOLD(macconf->PauseLowThreshold));
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_UNICAST_PAUSE_FRAME_DETECT(macconf->UnicastPauseFrameDetect));
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_FLOWCONTROL(macconf->ReceiveFlowControl));
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_TRANSMIT_FLOWCONTROL(macconf->TransmitFlowControl));
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_VLAN_TAG_COMPARISON(macconf->VLANTagComparison));
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_VLAN_TAG_IDENTIFIER(macconf->VLANTagIdentifier));
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*------------------------ ETHERNET MACCR Configuration --------------------*/
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET MACCR value */
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2413              		.loc 1 1347 0
 2414 0034 7B68     		ldr	r3, [r7, #4]
 2415 0036 1B68     		ldr	r3, [r3]
 2416 0038 1B68     		ldr	r3, [r3]
 2417 003a FB60     		str	r3, [r7, #12]
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear WD, PCE, PS, TE and RE bits */
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ETH_MACCR_CLEAR_MASK;
 2418              		.loc 1 1349 0
 2419 003c FA68     		ldr	r2, [r7, #12]
 2420 003e 6C4B     		ldr	r3, .L114
 2421 0040 1340     		ands	r3, r3, r2
 2422 0042 FB60     		str	r3, [r7, #12]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(macconf->Watchdog | 
 2423              		.loc 1 1351 0
 2424 0044 3B68     		ldr	r3, [r7]
 2425 0046 1A68     		ldr	r2, [r3]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2426              		.loc 1 1352 0
 2427 0048 3B68     		ldr	r3, [r7]
 2428 004a 5B68     		ldr	r3, [r3, #4]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2429              		.loc 1 1351 0
 2430 004c 1A43     		orrs	r2, r2, r3
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
ARM GAS  /tmp/ccnfC67i.s 			page 67


 2431              		.loc 1 1353 0
 2432 004e 3B68     		ldr	r3, [r7]
 2433 0050 9B68     		ldr	r3, [r3, #8]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2434              		.loc 1 1352 0
 2435 0052 1A43     		orrs	r2, r2, r3
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
 2436              		.loc 1 1354 0
 2437 0054 3B68     		ldr	r3, [r7]
 2438 0056 DB68     		ldr	r3, [r3, #12]
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
 2439              		.loc 1 1353 0
 2440 0058 1A43     		orrs	r2, r2, r3
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
 2441              		.loc 1 1355 0
 2442 005a 7B68     		ldr	r3, [r7, #4]
 2443 005c 9B68     		ldr	r3, [r3, #8]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
 2444              		.loc 1 1354 0
 2445 005e 1A43     		orrs	r2, r2, r3
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
 2446              		.loc 1 1356 0
 2447 0060 3B68     		ldr	r3, [r7]
 2448 0062 1B69     		ldr	r3, [r3, #16]
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
 2449              		.loc 1 1355 0
 2450 0064 1A43     		orrs	r2, r2, r3
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
 2451              		.loc 1 1357 0
 2452 0066 3B68     		ldr	r3, [r7]
 2453 0068 5B69     		ldr	r3, [r3, #20]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
 2454              		.loc 1 1356 0
 2455 006a 1A43     		orrs	r2, r2, r3
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
 2456              		.loc 1 1358 0
 2457 006c 7B68     		ldr	r3, [r7, #4]
 2458 006e DB68     		ldr	r3, [r3, #12]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
 2459              		.loc 1 1357 0
 2460 0070 1A43     		orrs	r2, r2, r3
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
 2461              		.loc 1 1359 0
 2462 0072 3B68     		ldr	r3, [r7]
 2463 0074 9B69     		ldr	r3, [r3, #24]
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
 2464              		.loc 1 1358 0
 2465 0076 1A43     		orrs	r2, r2, r3
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
 2466              		.loc 1 1360 0
 2467 0078 3B68     		ldr	r3, [r7]
 2468 007a DB69     		ldr	r3, [r3, #28]
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
 2469              		.loc 1 1359 0
 2470 007c 1A43     		orrs	r2, r2, r3
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
 2471              		.loc 1 1361 0
ARM GAS  /tmp/ccnfC67i.s 			page 68


 2472 007e 3B68     		ldr	r3, [r7]
 2473 0080 1B6A     		ldr	r3, [r3, #32]
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
 2474              		.loc 1 1360 0
 2475 0082 1A43     		orrs	r2, r2, r3
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
 2476              		.loc 1 1362 0
 2477 0084 3B68     		ldr	r3, [r7]
 2478 0086 5B6A     		ldr	r3, [r3, #36]
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
 2479              		.loc 1 1361 0
 2480 0088 1A43     		orrs	r2, r2, r3
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->DeferralCheck);
 2481              		.loc 1 1363 0
 2482 008a 3B68     		ldr	r3, [r7]
 2483 008c 9B6A     		ldr	r3, [r3, #40]
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
 2484              		.loc 1 1362 0
 2485 008e 1343     		orrs	r3, r3, r2
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2486              		.loc 1 1351 0
 2487 0090 FA68     		ldr	r2, [r7, #12]
 2488 0092 1343     		orrs	r3, r3, r2
 2489 0094 FB60     		str	r3, [r7, #12]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACCR */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = (uint32_t)tmpreg;
 2490              		.loc 1 1366 0
 2491 0096 7B68     		ldr	r3, [r7, #4]
 2492 0098 1B68     		ldr	r3, [r3]
 2493 009a FA68     		ldr	r2, [r7, #12]
 2494 009c 1A60     		str	r2, [r3]
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account :
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     at least four TX_CLK/RX_CLK clock cycles */
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2495              		.loc 1 1370 0
 2496 009e 7B68     		ldr	r3, [r7, #4]
 2497 00a0 1B68     		ldr	r3, [r3]
 2498 00a2 1B68     		ldr	r3, [r3]
 2499 00a4 FB60     		str	r3, [r7, #12]
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 2500              		.loc 1 1371 0
 2501 00a6 0120     		movs	r0, #1
 2502 00a8 FFF7FEFF 		bl	HAL_Delay
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg; 
 2503              		.loc 1 1372 0
 2504 00ac 7B68     		ldr	r3, [r7, #4]
 2505 00ae 1B68     		ldr	r3, [r3]
 2506 00b0 FA68     		ldr	r2, [r7, #12]
 2507 00b2 1A60     		str	r2, [r3]
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*----------------------- ETHERNET MACFFR Configuration --------------------*/ 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACFFR */  
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACFFR = (uint32_t)(macconf->ReceiveAll | 
 2508              		.loc 1 1376 0
 2509 00b4 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccnfC67i.s 			page 69


 2510 00b6 DA6A     		ldr	r2, [r3, #44]
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2511              		.loc 1 1377 0
 2512 00b8 3B68     		ldr	r3, [r7]
 2513 00ba 1B6B     		ldr	r3, [r3, #48]
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2514              		.loc 1 1376 0
 2515 00bc 1A43     		orrs	r2, r2, r3
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
 2516              		.loc 1 1378 0
 2517 00be 3B68     		ldr	r3, [r7]
 2518 00c0 5B6B     		ldr	r3, [r3, #52]
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2519              		.loc 1 1377 0
 2520 00c2 1A43     		orrs	r2, r2, r3
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
 2521              		.loc 1 1379 0
 2522 00c4 3B68     		ldr	r3, [r7]
 2523 00c6 9B6B     		ldr	r3, [r3, #56]
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
 2524              		.loc 1 1378 0
 2525 00c8 1A43     		orrs	r2, r2, r3
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
 2526              		.loc 1 1380 0
 2527 00ca 3B68     		ldr	r3, [r7]
 2528 00cc DB6B     		ldr	r3, [r3, #60]
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
 2529              		.loc 1 1379 0
 2530 00ce 1A43     		orrs	r2, r2, r3
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
 2531              		.loc 1 1381 0
 2532 00d0 3B68     		ldr	r3, [r7]
 2533 00d2 1B6C     		ldr	r3, [r3, #64]
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
 2534              		.loc 1 1380 0
 2535 00d4 1A43     		orrs	r2, r2, r3
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
 2536              		.loc 1 1382 0
 2537 00d6 3B68     		ldr	r3, [r7]
 2538 00d8 5B6C     		ldr	r3, [r3, #68]
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
 2539              		.loc 1 1381 0
 2540 00da 42EA0301 		orr	r1, r2, r3
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->UnicastFramesFilter);
 2541              		.loc 1 1383 0
 2542 00de 3B68     		ldr	r3, [r7]
 2543 00e0 9A6C     		ldr	r2, [r3, #72]
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2544              		.loc 1 1376 0
 2545 00e2 7B68     		ldr	r3, [r7, #4]
 2546 00e4 1B68     		ldr	r3, [r3]
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
 2547              		.loc 1 1382 0
 2548 00e6 0A43     		orrs	r2, r2, r1
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2549              		.loc 1 1376 0
 2550 00e8 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccnfC67i.s 			page 70


1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account :
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFFR;
 2551              		.loc 1 1387 0
 2552 00ea 7B68     		ldr	r3, [r7, #4]
 2553 00ec 1B68     		ldr	r3, [r3]
 2554 00ee 5B68     		ldr	r3, [r3, #4]
 2555 00f0 FB60     		str	r3, [r7, #12]
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 2556              		.loc 1 1388 0
 2557 00f2 0120     		movs	r0, #1
 2558 00f4 FFF7FEFF 		bl	HAL_Delay
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFFR = tmpreg;
 2559              		.loc 1 1389 0
 2560 00f8 7B68     		ldr	r3, [r7, #4]
 2561 00fa 1B68     		ldr	r3, [r3]
 2562 00fc FA68     		ldr	r2, [r7, #12]
 2563 00fe 5A60     		str	r2, [r3, #4]
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*--------------- ETHERNET MACHTHR and MACHTLR Configuration ---------------*/
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACHTHR */
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACHTHR = (uint32_t)macconf->HashTableHigh;
 2564              		.loc 1 1393 0
 2565 0100 7B68     		ldr	r3, [r7, #4]
 2566 0102 1B68     		ldr	r3, [r3]
 2567 0104 3A68     		ldr	r2, [r7]
 2568 0106 D26C     		ldr	r2, [r2, #76]
 2569 0108 9A60     		str	r2, [r3, #8]
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACHTLR */
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACHTLR = (uint32_t)macconf->HashTableLow;
 2570              		.loc 1 1396 0
 2571 010a 7B68     		ldr	r3, [r7, #4]
 2572 010c 1B68     		ldr	r3, [r3]
 2573 010e 3A68     		ldr	r2, [r7]
 2574 0110 126D     		ldr	r2, [r2, #80]
 2575 0112 DA60     		str	r2, [r3, #12]
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACFCR Configuration --------------------*/
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Get the ETHERNET MACFCR value */  
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFCR;
 2576              		.loc 1 1400 0
 2577 0114 7B68     		ldr	r3, [r7, #4]
 2578 0116 1B68     		ldr	r3, [r3]
 2579 0118 9B69     		ldr	r3, [r3, #24]
 2580 011a FB60     		str	r3, [r7, #12]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear xx bits */
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg &= ETH_MACFCR_CLEAR_MASK;
 2581              		.loc 1 1402 0
 2582 011c FA68     		ldr	r2, [r7, #12]
 2583 011e 4FF64173 		movw	r3, #65345
 2584 0122 1340     		ands	r3, r3, r2
 2585 0124 FB60     		str	r3, [r7, #12]
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg |= (uint32_t)((macconf->PauseTime << 16) | 
 2586              		.loc 1 1404 0
ARM GAS  /tmp/ccnfC67i.s 			page 71


 2587 0126 3B68     		ldr	r3, [r7]
 2588 0128 5B6D     		ldr	r3, [r3, #84]
 2589 012a 1A04     		lsls	r2, r3, #16
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2590              		.loc 1 1405 0
 2591 012c 3B68     		ldr	r3, [r7]
 2592 012e 9B6D     		ldr	r3, [r3, #88]
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2593              		.loc 1 1404 0
 2594 0130 1A43     		orrs	r2, r2, r3
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
 2595              		.loc 1 1406 0
 2596 0132 3B68     		ldr	r3, [r7]
 2597 0134 DB6D     		ldr	r3, [r3, #92]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2598              		.loc 1 1405 0
 2599 0136 1A43     		orrs	r2, r2, r3
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
 2600              		.loc 1 1407 0
 2601 0138 3B68     		ldr	r3, [r7]
 2602 013a 1B6E     		ldr	r3, [r3, #96]
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
 2603              		.loc 1 1406 0
 2604 013c 1A43     		orrs	r2, r2, r3
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
 2605              		.loc 1 1408 0
 2606 013e 3B68     		ldr	r3, [r7]
 2607 0140 5B6E     		ldr	r3, [r3, #100]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
 2608              		.loc 1 1407 0
 2609 0142 1A43     		orrs	r2, r2, r3
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->TransmitFlowControl); 
 2610              		.loc 1 1409 0
 2611 0144 3B68     		ldr	r3, [r7]
 2612 0146 9B6E     		ldr	r3, [r3, #104]
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
 2613              		.loc 1 1408 0
 2614 0148 1343     		orrs	r3, r3, r2
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2615              		.loc 1 1404 0
 2616 014a FA68     		ldr	r2, [r7, #12]
 2617 014c 1343     		orrs	r3, r3, r2
 2618 014e FB60     		str	r3, [r7, #12]
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACFCR */
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = (uint32_t)tmpreg;
 2619              		.loc 1 1412 0
 2620 0150 7B68     		ldr	r3, [r7, #4]
 2621 0152 1B68     		ldr	r3, [r3]
 2622 0154 FA68     		ldr	r2, [r7, #12]
 2623 0156 9A61     		str	r2, [r3, #24]
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account :
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFCR;
 2624              		.loc 1 1416 0
 2625 0158 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccnfC67i.s 			page 72


 2626 015a 1B68     		ldr	r3, [r3]
 2627 015c 9B69     		ldr	r3, [r3, #24]
 2628 015e FB60     		str	r3, [r7, #12]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 2629              		.loc 1 1417 0
 2630 0160 0120     		movs	r0, #1
 2631 0162 FFF7FEFF 		bl	HAL_Delay
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = tmpreg;
 2632              		.loc 1 1418 0
 2633 0166 7B68     		ldr	r3, [r7, #4]
 2634 0168 1B68     		ldr	r3, [r3]
 2635 016a FA68     		ldr	r2, [r7, #12]
 2636 016c 9A61     		str	r2, [r3, #24]
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACVLANTR Configuration -----------------*/
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACVLANTR = (uint32_t)(macconf->VLANTagComparison | 
 2637              		.loc 1 1421 0
 2638 016e 3B68     		ldr	r3, [r7]
 2639 0170 D96E     		ldr	r1, [r3, #108]
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
 2640              		.loc 1 1422 0
 2641 0172 3B68     		ldr	r3, [r7]
 2642 0174 1A6F     		ldr	r2, [r3, #112]
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
 2643              		.loc 1 1421 0
 2644 0176 7B68     		ldr	r3, [r7, #4]
 2645 0178 1B68     		ldr	r3, [r3]
 2646 017a 0A43     		orrs	r2, r2, r1
 2647 017c DA61     		str	r2, [r3, #28]
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Wait until the write operation will be taken into account :
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       tmpreg = (heth->Instance)->MACVLANTR;
 2648              		.loc 1 1426 0
 2649 017e 7B68     		ldr	r3, [r7, #4]
 2650 0180 1B68     		ldr	r3, [r3]
 2651 0182 DB69     		ldr	r3, [r3, #28]
 2652 0184 FB60     		str	r3, [r7, #12]
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_Delay(ETH_REG_WRITE_DELAY);
 2653              		.loc 1 1427 0
 2654 0186 0120     		movs	r0, #1
 2655 0188 FFF7FEFF 		bl	HAL_Delay
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Instance)->MACVLANTR = tmpreg;
 2656              		.loc 1 1428 0
 2657 018c 7B68     		ldr	r3, [r7, #4]
 2658 018e 1B68     		ldr	r3, [r3]
 2659 0190 FA68     		ldr	r2, [r7, #12]
 2660 0192 DA61     		str	r2, [r3, #28]
 2661 0194 1EE0     		b	.L113
 2662              	.L112:
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* macconf == NULL : here we just configure Speed and Duplex mode */
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*------------------------ ETHERNET MACCR Configuration --------------------*/
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET MACCR value */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2663              		.loc 1 1434 0
ARM GAS  /tmp/ccnfC67i.s 			page 73


 2664 0196 7B68     		ldr	r3, [r7, #4]
 2665 0198 1B68     		ldr	r3, [r3]
 2666 019a 1B68     		ldr	r3, [r3]
 2667 019c FB60     		str	r3, [r7, #12]
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear FES and DM bits */
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ~((uint32_t)0x00004800);
 2668              		.loc 1 1437 0
 2669 019e FB68     		ldr	r3, [r7, #12]
 2670 01a0 23F49043 		bic	r3, r3, #18432
 2671 01a4 FB60     		str	r3, [r7, #12]
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(heth->Init.Speed | heth->Init.DuplexMode);
 2672              		.loc 1 1439 0
 2673 01a6 7B68     		ldr	r3, [r7, #4]
 2674 01a8 9A68     		ldr	r2, [r3, #8]
 2675 01aa 7B68     		ldr	r3, [r7, #4]
 2676 01ac DB68     		ldr	r3, [r3, #12]
 2677 01ae 1343     		orrs	r3, r3, r2
 2678 01b0 FA68     		ldr	r2, [r7, #12]
 2679 01b2 1343     		orrs	r3, r3, r2
 2680 01b4 FB60     		str	r3, [r7, #12]
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACCR */
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = (uint32_t)tmpreg;
 2681              		.loc 1 1442 0
 2682 01b6 7B68     		ldr	r3, [r7, #4]
 2683 01b8 1B68     		ldr	r3, [r3]
 2684 01ba FA68     		ldr	r2, [r7, #12]
 2685 01bc 1A60     		str	r2, [r3]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     at least four TX_CLK/RX_CLK clock cycles */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2686              		.loc 1 1446 0
 2687 01be 7B68     		ldr	r3, [r7, #4]
 2688 01c0 1B68     		ldr	r3, [r3]
 2689 01c2 1B68     		ldr	r3, [r3]
 2690 01c4 FB60     		str	r3, [r7, #12]
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 2691              		.loc 1 1447 0
 2692 01c6 0120     		movs	r0, #1
 2693 01c8 FFF7FEFF 		bl	HAL_Delay
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg;
 2694              		.loc 1 1448 0
 2695 01cc 7B68     		ldr	r3, [r7, #4]
 2696 01ce 1B68     		ldr	r3, [r3]
 2697 01d0 FA68     		ldr	r2, [r7, #12]
 2698 01d2 1A60     		str	r2, [r3]
 2699              	.L113:
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state to Ready */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 2700              		.loc 1 1452 0
 2701 01d4 7B68     		ldr	r3, [r7, #4]
 2702 01d6 0122     		movs	r2, #1
ARM GAS  /tmp/ccnfC67i.s 			page 74


 2703 01d8 83F84420 		strb	r2, [r3, #68]
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 2704              		.loc 1 1455 0
 2705 01dc 7B68     		ldr	r3, [r7, #4]
 2706 01de 0022     		movs	r2, #0
 2707 01e0 83F84520 		strb	r2, [r3, #69]
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;  
 2708              		.loc 1 1458 0
 2709 01e4 0023     		movs	r3, #0
 2710              	.L111:
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2711              		.loc 1 1459 0
 2712 01e6 1846     		mov	r0, r3
 2713 01e8 1037     		adds	r7, r7, #16
 2714              	.LCFI98:
 2715              		.cfi_def_cfa_offset 8
 2716 01ea BD46     		mov	sp, r7
 2717              	.LCFI99:
 2718              		.cfi_def_cfa_register 13
 2719              		@ sp needed
 2720 01ec 80BD     		pop	{r7, pc}
 2721              	.L115:
 2722 01ee 00BF     		.align	2
 2723              	.L114:
 2724 01f0 0F8120FF 		.word	-14647025
 2725              		.cfi_endproc
 2726              	.LFE155:
 2728              		.section	.text.HAL_ETH_ConfigDMA,"ax",%progbits
 2729              		.align	1
 2730              		.global	HAL_ETH_ConfigDMA
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2734              		.fpu fpv4-sp-d16
 2736              	HAL_ETH_ConfigDMA:
 2737              	.LFB156:
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Sets ETH DMA Configuration.
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  dmaconf DMA Configuration structure  
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ConfigDMA(ETH_HandleTypeDef *heth, ETH_DMAInitTypeDef *dmaconf)
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2738              		.loc 1 1469 0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 16
 2741              		@ frame_needed = 1, uses_anonymous_args = 0
 2742 0000 80B5     		push	{r7, lr}
 2743              	.LCFI100:
 2744              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccnfC67i.s 			page 75


 2745              		.cfi_offset 7, -8
 2746              		.cfi_offset 14, -4
 2747 0002 84B0     		sub	sp, sp, #16
 2748              	.LCFI101:
 2749              		.cfi_def_cfa_offset 24
 2750 0004 00AF     		add	r7, sp, #0
 2751              	.LCFI102:
 2752              		.cfi_def_cfa_register 7
 2753 0006 7860     		str	r0, [r7, #4]
 2754 0008 3960     		str	r1, [r7]
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2755              		.loc 1 1470 0
 2756 000a 0023     		movs	r3, #0
 2757 000c FB60     		str	r3, [r7, #12]
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2758              		.loc 1 1473 0
 2759 000e 7B68     		ldr	r3, [r7, #4]
 2760 0010 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2761 0014 012B     		cmp	r3, #1
 2762 0016 01D1     		bne	.L117
 2763              		.loc 1 1473 0 is_stmt 0 discriminator 1
 2764 0018 0223     		movs	r3, #2
 2765 001a 7BE0     		b	.L118
 2766              	.L117:
 2767              		.loc 1 1473 0 discriminator 2
 2768 001c 7B68     		ldr	r3, [r7, #4]
 2769 001e 0122     		movs	r2, #1
 2770 0020 83F84520 		strb	r2, [r3, #69]
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_BUSY;
 2771              		.loc 1 1476 0 is_stmt 1 discriminator 2
 2772 0024 7B68     		ldr	r3, [r7, #4]
 2773 0026 0222     		movs	r2, #2
 2774 0028 83F84420 		strb	r2, [r3, #68]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DROP_TCPIP_CHECKSUM_FRAME(dmaconf->DropTCPIPChecksumErrorFrame));
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RECEIVE_STORE_FORWARD(dmaconf->ReceiveStoreForward));
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FLUSH_RECEIVE_FRAME(dmaconf->FlushReceivedFrame));
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TRANSMIT_STORE_FORWARD(dmaconf->TransmitStoreForward));
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TRANSMIT_THRESHOLD_CONTROL(dmaconf->TransmitThresholdControl));
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FORWARD_ERROR_FRAMES(dmaconf->ForwardErrorFrames));
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FORWARD_UNDERSIZED_GOOD_FRAMES(dmaconf->ForwardUndersizedGoodFrames));
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RECEIVE_THRESHOLD_CONTROL(dmaconf->ReceiveThresholdControl));
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_SECOND_FRAME_OPERATE(dmaconf->SecondFrameOperate));
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_ADDRESS_ALIGNED_BEATS(dmaconf->AddressAlignedBeats));
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FIXED_BURST(dmaconf->FixedBurst));
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RXDMA_BURST_LENGTH(dmaconf->RxDMABurstLength));
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TXDMA_BURST_LENGTH(dmaconf->TxDMABurstLength));
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_ENHANCED_DESCRIPTOR_FORMAT(dmaconf->EnhancedDescriptorFormat));
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DMA_DESC_SKIP_LENGTH(dmaconf->DescriptorSkipLength));
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DMA_ARBITRATION_ROUNDROBIN_RXTX(dmaconf->DMAArbitration));
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET DMAOMR Configuration --------------------*/
ARM GAS  /tmp/ccnfC67i.s 			page 76


1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET DMAOMR value */
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 2775              		.loc 1 1498 0 discriminator 2
 2776 002c 7B68     		ldr	r3, [r7, #4]
 2777 002e 1A68     		ldr	r2, [r3]
 2778 0030 41F21803 		movw	r3, #4120
 2779 0034 1344     		add	r3, r3, r2
 2780 0036 1B68     		ldr	r3, [r3]
 2781 0038 FB60     		str	r3, [r7, #12]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear xx bits */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ETH_DMAOMR_CLEAR_MASK;
 2782              		.loc 1 1500 0 discriminator 2
 2783 003a FA68     		ldr	r2, [r7, #12]
 2784 003c 374B     		ldr	r3, .L119
 2785 003e 1340     		ands	r3, r3, r2
 2786 0040 FB60     		str	r3, [r7, #12]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= (uint32_t)(dmaconf->DropTCPIPChecksumErrorFrame | 
 2787              		.loc 1 1502 0 discriminator 2
 2788 0042 3B68     		ldr	r3, [r7]
 2789 0044 1A68     		ldr	r2, [r3]
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2790              		.loc 1 1503 0 discriminator 2
 2791 0046 3B68     		ldr	r3, [r7]
 2792 0048 5B68     		ldr	r3, [r3, #4]
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2793              		.loc 1 1502 0 discriminator 2
 2794 004a 1A43     		orrs	r2, r2, r3
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
 2795              		.loc 1 1504 0 discriminator 2
 2796 004c 3B68     		ldr	r3, [r7]
 2797 004e 9B68     		ldr	r3, [r3, #8]
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2798              		.loc 1 1503 0 discriminator 2
 2799 0050 1A43     		orrs	r2, r2, r3
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
 2800              		.loc 1 1505 0 discriminator 2
 2801 0052 3B68     		ldr	r3, [r7]
 2802 0054 DB68     		ldr	r3, [r3, #12]
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
 2803              		.loc 1 1504 0 discriminator 2
 2804 0056 1A43     		orrs	r2, r2, r3
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
 2805              		.loc 1 1506 0 discriminator 2
 2806 0058 3B68     		ldr	r3, [r7]
 2807 005a 1B69     		ldr	r3, [r3, #16]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
 2808              		.loc 1 1505 0 discriminator 2
 2809 005c 1A43     		orrs	r2, r2, r3
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
 2810              		.loc 1 1507 0 discriminator 2
 2811 005e 3B68     		ldr	r3, [r7]
 2812 0060 5B69     		ldr	r3, [r3, #20]
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
 2813              		.loc 1 1506 0 discriminator 2
 2814 0062 1A43     		orrs	r2, r2, r3
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
ARM GAS  /tmp/ccnfC67i.s 			page 77


 2815              		.loc 1 1508 0 discriminator 2
 2816 0064 3B68     		ldr	r3, [r7]
 2817 0066 9B69     		ldr	r3, [r3, #24]
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
 2818              		.loc 1 1507 0 discriminator 2
 2819 0068 1A43     		orrs	r2, r2, r3
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
 2820              		.loc 1 1509 0 discriminator 2
 2821 006a 3B68     		ldr	r3, [r7]
 2822 006c DB69     		ldr	r3, [r3, #28]
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
 2823              		.loc 1 1508 0 discriminator 2
 2824 006e 1A43     		orrs	r2, r2, r3
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->SecondFrameOperate);
 2825              		.loc 1 1510 0 discriminator 2
 2826 0070 3B68     		ldr	r3, [r7]
 2827 0072 1B6A     		ldr	r3, [r3, #32]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
 2828              		.loc 1 1509 0 discriminator 2
 2829 0074 1343     		orrs	r3, r3, r2
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2830              		.loc 1 1502 0 discriminator 2
 2831 0076 FA68     		ldr	r2, [r7, #12]
 2832 0078 1343     		orrs	r3, r3, r2
 2833 007a FB60     		str	r3, [r7, #12]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET DMAOMR */
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = (uint32_t)tmpreg;
 2834              		.loc 1 1513 0 discriminator 2
 2835 007c 7B68     		ldr	r3, [r7, #4]
 2836 007e 1A68     		ldr	r2, [r3]
 2837 0080 41F21803 		movw	r3, #4120
 2838 0084 1344     		add	r3, r3, r2
 2839 0086 FA68     		ldr	r2, [r7, #12]
 2840 0088 1A60     		str	r2, [r3]
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   at least four TX_CLK/RX_CLK clock cycles */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 2841              		.loc 1 1517 0 discriminator 2
 2842 008a 7B68     		ldr	r3, [r7, #4]
 2843 008c 1A68     		ldr	r2, [r3]
 2844 008e 41F21803 		movw	r3, #4120
 2845 0092 1344     		add	r3, r3, r2
 2846 0094 1B68     		ldr	r3, [r3]
 2847 0096 FB60     		str	r3, [r7, #12]
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 2848              		.loc 1 1518 0 discriminator 2
 2849 0098 0120     		movs	r0, #1
 2850 009a FFF7FEFF 		bl	HAL_Delay
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
 2851              		.loc 1 1519 0 discriminator 2
 2852 009e 7B68     		ldr	r3, [r7, #4]
 2853 00a0 1A68     		ldr	r2, [r3]
 2854 00a2 41F21803 		movw	r3, #4120
 2855 00a6 1344     		add	r3, r3, r2
 2856 00a8 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccnfC67i.s 			page 78


 2857 00aa 1A60     		str	r2, [r3]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET DMABMR Configuration --------------------*/
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMABMR = (uint32_t)(dmaconf->AddressAlignedBeats | 
 2858              		.loc 1 1522 0 discriminator 2
 2859 00ac 3B68     		ldr	r3, [r7]
 2860 00ae 5A6A     		ldr	r2, [r3, #36]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2861              		.loc 1 1523 0 discriminator 2
 2862 00b0 3B68     		ldr	r3, [r7]
 2863 00b2 9B6A     		ldr	r3, [r3, #40]
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2864              		.loc 1 1522 0 discriminator 2
 2865 00b4 1A43     		orrs	r2, r2, r3
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
 2866              		.loc 1 1524 0 discriminator 2
 2867 00b6 3B68     		ldr	r3, [r7]
 2868 00b8 DB6A     		ldr	r3, [r3, #44]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2869              		.loc 1 1523 0 discriminator 2
 2870 00ba 1A43     		orrs	r2, r2, r3
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
 2871              		.loc 1 1525 0 discriminator 2
 2872 00bc 3B68     		ldr	r3, [r7]
 2873 00be 1B6B     		ldr	r3, [r3, #48]
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
 2874              		.loc 1 1524 0 discriminator 2
 2875 00c0 1A43     		orrs	r2, r2, r3
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
 2876              		.loc 1 1526 0 discriminator 2
 2877 00c2 3B68     		ldr	r3, [r7]
 2878 00c4 5B6B     		ldr	r3, [r3, #52]
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
 2879              		.loc 1 1525 0 discriminator 2
 2880 00c6 1A43     		orrs	r2, r2, r3
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
 2881              		.loc 1 1527 0 discriminator 2
 2882 00c8 3B68     		ldr	r3, [r7]
 2883 00ca 9B6B     		ldr	r3, [r3, #56]
 2884 00cc 9B00     		lsls	r3, r3, #2
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
 2885              		.loc 1 1526 0 discriminator 2
 2886 00ce 1A43     		orrs	r2, r2, r3
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->DMAArbitration | 
 2887              		.loc 1 1528 0 discriminator 2
 2888 00d0 3B68     		ldr	r3, [r7]
 2889 00d2 DB6B     		ldr	r3, [r3, #60]
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
 2890              		.loc 1 1527 0 discriminator 2
 2891 00d4 1A43     		orrs	r2, r2, r3
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2892              		.loc 1 1522 0 discriminator 2
 2893 00d6 7B68     		ldr	r3, [r7, #4]
 2894 00d8 1B68     		ldr	r3, [r3]
 2895 00da 42F40002 		orr	r2, r2, #8388608
 2896 00de 03F58053 		add	r3, r3, #4096
 2897 00e2 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccnfC67i.s 			page 79


1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and 
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->DMABMR;
 2898              		.loc 1 1533 0 discriminator 2
 2899 00e4 7B68     		ldr	r3, [r7, #4]
 2900 00e6 1B68     		ldr	r3, [r3]
 2901 00e8 03F58053 		add	r3, r3, #4096
 2902 00ec 1B68     		ldr	r3, [r3]
 2903 00ee FB60     		str	r3, [r7, #12]
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 2904              		.loc 1 1534 0 discriminator 2
 2905 00f0 0120     		movs	r0, #1
 2906 00f2 FFF7FEFF 		bl	HAL_Delay
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->DMABMR = tmpreg;
 2907              		.loc 1 1535 0 discriminator 2
 2908 00f6 7B68     		ldr	r3, [r7, #4]
 2909 00f8 1B68     		ldr	r3, [r3]
 2910 00fa 03F58053 		add	r3, r3, #4096
 2911 00fe FA68     		ldr	r2, [r7, #12]
 2912 0100 1A60     		str	r2, [r3]
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the ETH state to Ready */
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    heth->State= HAL_ETH_STATE_READY;
 2913              		.loc 1 1538 0 discriminator 2
 2914 0102 7B68     		ldr	r3, [r7, #4]
 2915 0104 0122     		movs	r2, #1
 2916 0106 83F84420 		strb	r2, [r3, #68]
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Process Unlocked */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    __HAL_UNLOCK(heth);
 2917              		.loc 1 1541 0 discriminator 2
 2918 010a 7B68     		ldr	r3, [r7, #4]
 2919 010c 0022     		movs	r2, #0
 2920 010e 83F84520 		strb	r2, [r3, #69]
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Return function status */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    return HAL_OK; 
 2921              		.loc 1 1544 0 discriminator 2
 2922 0112 0023     		movs	r3, #0
 2923              	.L118:
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2924              		.loc 1 1545 0
 2925 0114 1846     		mov	r0, r3
 2926 0116 1037     		adds	r7, r7, #16
 2927              	.LCFI103:
 2928              		.cfi_def_cfa_offset 8
 2929 0118 BD46     		mov	sp, r7
 2930              	.LCFI104:
 2931              		.cfi_def_cfa_register 13
 2932              		@ sp needed
 2933 011a 80BD     		pop	{r7, pc}
 2934              	.L120:
 2935              		.align	2
 2936              	.L119:
 2937 011c 233FDEF8 		.word	-119652573
ARM GAS  /tmp/ccnfC67i.s 			page 80


 2938              		.cfi_endproc
 2939              	.LFE156:
 2941              		.section	.text.HAL_ETH_GetState,"ax",%progbits
 2942              		.align	1
 2943              		.global	HAL_ETH_GetState
 2944              		.syntax unified
 2945              		.thumb
 2946              		.thumb_func
 2947              		.fpu fpv4-sp-d16
 2949              	HAL_ETH_GetState:
 2950              	.LFB157:
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group4 Peripheral State functions 
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Peripheral State functions 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim   
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          ##### Peripheral State functions #####
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================  
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   This subsection permits to get in run-time the status of the peripheral 
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   and the data flow.
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        (+) Get the ETH handle state:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            HAL_ETH_GetState();
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Return the ETH HAL state
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL state
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_ETH_StateTypeDef HAL_ETH_GetState(ETH_HandleTypeDef *heth)
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 2951              		.loc 1 1576 0
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 8
 2954              		@ frame_needed = 1, uses_anonymous_args = 0
 2955              		@ link register save eliminated.
 2956 0000 80B4     		push	{r7}
 2957              	.LCFI105:
 2958              		.cfi_def_cfa_offset 4
 2959              		.cfi_offset 7, -4
 2960 0002 83B0     		sub	sp, sp, #12
 2961              	.LCFI106:
 2962              		.cfi_def_cfa_offset 16
 2963 0004 00AF     		add	r7, sp, #0
 2964              	.LCFI107:
 2965              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccnfC67i.s 			page 81


 2966 0006 7860     		str	r0, [r7, #4]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return ETH state */
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return heth->State;
 2967              		.loc 1 1578 0
 2968 0008 7B68     		ldr	r3, [r7, #4]
 2969 000a 93F84430 		ldrb	r3, [r3, #68]
 2970 000e DBB2     		uxtb	r3, r3
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2971              		.loc 1 1579 0
 2972 0010 1846     		mov	r0, r3
 2973 0012 0C37     		adds	r7, r7, #12
 2974              	.LCFI108:
 2975              		.cfi_def_cfa_offset 4
 2976 0014 BD46     		mov	sp, r7
 2977              	.LCFI109:
 2978              		.cfi_def_cfa_register 13
 2979              		@ sp needed
 2980 0016 5DF8047B 		ldr	r7, [sp], #4
 2981              	.LCFI110:
 2982              		.cfi_restore 7
 2983              		.cfi_def_cfa_offset 0
 2984 001a 7047     		bx	lr
 2985              		.cfi_endproc
 2986              	.LFE157:
 2988              		.section	.text.ETH_MACDMAConfig,"ax",%progbits
 2989              		.align	1
 2990              		.syntax unified
 2991              		.thumb
 2992              		.thumb_func
 2993              		.fpu fpv4-sp-d16
 2995              	ETH_MACDMAConfig:
 2996              	.LFB158:
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @addtogroup ETH_Private_Functions
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Configures Ethernet MAC and DMA with default parameters.
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  err Ethernet Init error
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err)
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2997              		.loc 1 1601 0
 2998              		.cfi_startproc
 2999              		@ args = 0, pretend = 0, frame = 192
ARM GAS  /tmp/ccnfC67i.s 			page 82


 3000              		@ frame_needed = 1, uses_anonymous_args = 0
 3001 0000 80B5     		push	{r7, lr}
 3002              	.LCFI111:
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 7, -8
 3005              		.cfi_offset 14, -4
 3006 0002 B0B0     		sub	sp, sp, #192
 3007              	.LCFI112:
 3008              		.cfi_def_cfa_offset 200
 3009 0004 00AF     		add	r7, sp, #0
 3010              	.LCFI113:
 3011              		.cfi_def_cfa_register 7
 3012 0006 7860     		str	r0, [r7, #4]
 3013 0008 3960     		str	r1, [r7]
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACInitTypeDef macinit;
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAInitTypeDef dmainit;
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 3014              		.loc 1 1604 0
 3015 000a 0023     		movs	r3, #0
 3016 000c C7F8BC30 		str	r3, [r7, #188]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (err != ETH_SUCCESS) /* Auto-negotiation failed */
 3017              		.loc 1 1606 0
 3018 0010 3B68     		ldr	r3, [r7]
 3019 0012 002B     		cmp	r3, #0
 3020 0014 07D0     		beq	.L124
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Ethernet duplex mode to Full-duplex */
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Init).DuplexMode = ETH_MODE_FULLDUPLEX;
 3021              		.loc 1 1609 0
 3022 0016 7B68     		ldr	r3, [r7, #4]
 3023 0018 4FF40062 		mov	r2, #2048
 3024 001c DA60     		str	r2, [r3, #12]
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Ethernet speed to 100M */
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Init).Speed = ETH_SPEED_100M;
 3025              		.loc 1 1612 0
 3026 001e 7B68     		ldr	r3, [r7, #4]
 3027 0020 4FF48042 		mov	r2, #16384
 3028 0024 9A60     		str	r2, [r3, #8]
 3029              	.L124:
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Ethernet MAC default initialization **************************************/
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.Watchdog = ETH_WATCHDOG_ENABLE;
 3030              		.loc 1 1616 0
 3031 0026 0023     		movs	r3, #0
 3032 0028 BB64     		str	r3, [r7, #72]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.Jabber = ETH_JABBER_ENABLE;
 3033              		.loc 1 1617 0
 3034 002a 0023     		movs	r3, #0
 3035 002c FB64     		str	r3, [r7, #76]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.InterFrameGap = ETH_INTERFRAMEGAP_96BIT;
 3036              		.loc 1 1618 0
 3037 002e 0023     		movs	r3, #0
 3038 0030 3B65     		str	r3, [r7, #80]
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.CarrierSense = ETH_CARRIERSENCE_ENABLE;
ARM GAS  /tmp/ccnfC67i.s 			page 83


 3039              		.loc 1 1619 0
 3040 0032 0023     		movs	r3, #0
 3041 0034 7B65     		str	r3, [r7, #84]
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveOwn = ETH_RECEIVEOWN_ENABLE;
 3042              		.loc 1 1620 0
 3043 0036 0023     		movs	r3, #0
 3044 0038 BB65     		str	r3, [r7, #88]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.LoopbackMode = ETH_LOOPBACKMODE_DISABLE;
 3045              		.loc 1 1621 0
 3046 003a 0023     		movs	r3, #0
 3047 003c FB65     		str	r3, [r7, #92]
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->Init.ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 3048              		.loc 1 1622 0
 3049 003e 7B68     		ldr	r3, [r7, #4]
 3050 0040 DB69     		ldr	r3, [r3, #28]
 3051 0042 002B     		cmp	r3, #0
 3052 0044 03D1     		bne	.L125
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_ENABLE;
 3053              		.loc 1 1624 0
 3054 0046 4FF48063 		mov	r3, #1024
 3055 004a 3B66     		str	r3, [r7, #96]
 3056 004c 01E0     		b	.L126
 3057              	.L125:
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_DISABLE;
 3058              		.loc 1 1628 0
 3059 004e 0023     		movs	r3, #0
 3060 0050 3B66     		str	r3, [r7, #96]
 3061              	.L126:
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.RetryTransmission = ETH_RETRYTRANSMISSION_DISABLE;
 3062              		.loc 1 1630 0
 3063 0052 4FF40073 		mov	r3, #512
 3064 0056 7B66     		str	r3, [r7, #100]
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.AutomaticPadCRCStrip = ETH_AUTOMATICPADCRCSTRIP_DISABLE;
 3065              		.loc 1 1631 0
 3066 0058 0023     		movs	r3, #0
 3067 005a BB66     		str	r3, [r7, #104]
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.BackOffLimit = ETH_BACKOFFLIMIT_10;
 3068              		.loc 1 1632 0
 3069 005c 0023     		movs	r3, #0
 3070 005e FB66     		str	r3, [r7, #108]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.DeferralCheck = ETH_DEFFERRALCHECK_DISABLE;
 3071              		.loc 1 1633 0
 3072 0060 0023     		movs	r3, #0
 3073 0062 3B67     		str	r3, [r7, #112]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveAll = ETH_RECEIVEAll_DISABLE;
 3074              		.loc 1 1634 0
 3075 0064 0023     		movs	r3, #0
 3076 0066 7B67     		str	r3, [r7, #116]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.SourceAddrFilter = ETH_SOURCEADDRFILTER_DISABLE;
 3077              		.loc 1 1635 0
 3078 0068 0023     		movs	r3, #0
 3079 006a BB67     		str	r3, [r7, #120]
ARM GAS  /tmp/ccnfC67i.s 			page 84


1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PassControlFrames = ETH_PASSCONTROLFRAMES_BLOCKALL;
 3080              		.loc 1 1636 0
 3081 006c 4023     		movs	r3, #64
 3082 006e FB67     		str	r3, [r7, #124]
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.BroadcastFramesReception = ETH_BROADCASTFRAMESRECEPTION_ENABLE;
 3083              		.loc 1 1637 0
 3084 0070 0023     		movs	r3, #0
 3085 0072 C7F88030 		str	r3, [r7, #128]
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.DestinationAddrFilter = ETH_DESTINATIONADDRFILTER_NORMAL;
 3086              		.loc 1 1638 0
 3087 0076 0023     		movs	r3, #0
 3088 0078 C7F88430 		str	r3, [r7, #132]
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PromiscuousMode = ETH_PROMISCUOUS_MODE_DISABLE;
 3089              		.loc 1 1639 0
 3090 007c 0023     		movs	r3, #0
 3091 007e C7F88830 		str	r3, [r7, #136]
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.MulticastFramesFilter = ETH_MULTICASTFRAMESFILTER_PERFECT;
 3092              		.loc 1 1640 0
 3093 0082 0023     		movs	r3, #0
 3094 0084 C7F88C30 		str	r3, [r7, #140]
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.UnicastFramesFilter = ETH_UNICASTFRAMESFILTER_PERFECT;
 3095              		.loc 1 1641 0
 3096 0088 0023     		movs	r3, #0
 3097 008a C7F89030 		str	r3, [r7, #144]
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.HashTableHigh = 0x0;
 3098              		.loc 1 1642 0
 3099 008e 0023     		movs	r3, #0
 3100 0090 C7F89430 		str	r3, [r7, #148]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.HashTableLow = 0x0;
 3101              		.loc 1 1643 0
 3102 0094 0023     		movs	r3, #0
 3103 0096 C7F89830 		str	r3, [r7, #152]
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PauseTime = 0x0;
 3104              		.loc 1 1644 0
 3105 009a 0023     		movs	r3, #0
 3106 009c C7F89C30 		str	r3, [r7, #156]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ZeroQuantaPause = ETH_ZEROQUANTAPAUSE_DISABLE;
 3107              		.loc 1 1645 0
 3108 00a0 8023     		movs	r3, #128
 3109 00a2 C7F8A030 		str	r3, [r7, #160]
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PauseLowThreshold = ETH_PAUSELOWTHRESHOLD_MINUS4;
 3110              		.loc 1 1646 0
 3111 00a6 0023     		movs	r3, #0
 3112 00a8 C7F8A430 		str	r3, [r7, #164]
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.UnicastPauseFrameDetect = ETH_UNICASTPAUSEFRAMEDETECT_DISABLE;
 3113              		.loc 1 1647 0
 3114 00ac 0023     		movs	r3, #0
 3115 00ae C7F8A830 		str	r3, [r7, #168]
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveFlowControl = ETH_RECEIVEFLOWCONTROL_DISABLE;
 3116              		.loc 1 1648 0
 3117 00b2 0023     		movs	r3, #0
 3118 00b4 C7F8AC30 		str	r3, [r7, #172]
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.TransmitFlowControl = ETH_TRANSMITFLOWCONTROL_DISABLE;
 3119              		.loc 1 1649 0
 3120 00b8 0023     		movs	r3, #0
 3121 00ba C7F8B030 		str	r3, [r7, #176]
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.VLANTagComparison = ETH_VLANTAGCOMPARISON_16BIT;
ARM GAS  /tmp/ccnfC67i.s 			page 85


 3122              		.loc 1 1650 0
 3123 00be 0023     		movs	r3, #0
 3124 00c0 C7F8B430 		str	r3, [r7, #180]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.VLANTagIdentifier = 0x0;
 3125              		.loc 1 1651 0
 3126 00c4 0023     		movs	r3, #0
 3127 00c6 C7F8B830 		str	r3, [r7, #184]
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*------------------------ ETHERNET MACCR Configuration --------------------*/
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACCR value */
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3128              		.loc 1 1655 0
 3129 00ca 7B68     		ldr	r3, [r7, #4]
 3130 00cc 1B68     		ldr	r3, [r3]
 3131 00ce 1B68     		ldr	r3, [r3]
 3132 00d0 C7F8BC30 		str	r3, [r7, #188]
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear WD, PCE, PS, TE and RE bits */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ETH_MACCR_CLEAR_MASK;
 3133              		.loc 1 1657 0
 3134 00d4 D7F8BC20 		ldr	r2, [r7, #188]
 3135 00d8 AB4B     		ldr	r3, .L128
 3136 00da 1340     		ands	r3, r3, r2
 3137 00dc C7F8BC30 		str	r3, [r7, #188]
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the WD bit according to ETH Watchdog value */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the JD: bit according to ETH Jabber value */
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the IFG bit according to ETH InterFrameGap value */
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DCRS bit according to ETH CarrierSense value */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the FES bit according to ETH Speed value */ 
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DO bit according to ETH ReceiveOwn value */ 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the LM bit according to ETH LoopbackMode value */
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DM bit according to ETH Mode value */ 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the IPCO bit according to ETH ChecksumOffload value */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DR bit according to ETH RetryTransmission value */
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ACS bit according to ETH AutomaticPadCRCStrip value */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the BL bit according to ETH BackOffLimit value */
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DC bit according to ETH DeferralCheck value */
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= (uint32_t)(macinit.Watchdog | 
 3138              		.loc 1 1671 0
 3139 00e0 BA6C     		ldr	r2, [r7, #72]
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3140              		.loc 1 1672 0
 3141 00e2 FB6C     		ldr	r3, [r7, #76]
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3142              		.loc 1 1671 0
 3143 00e4 1A43     		orrs	r2, r2, r3
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.InterFrameGap |
 3144              		.loc 1 1673 0
 3145 00e6 3B6D     		ldr	r3, [r7, #80]
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3146              		.loc 1 1672 0
 3147 00e8 1A43     		orrs	r2, r2, r3
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.CarrierSense |
 3148              		.loc 1 1674 0
 3149 00ea 7B6D     		ldr	r3, [r7, #84]
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.InterFrameGap |
 3150              		.loc 1 1673 0
 3151 00ec 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccnfC67i.s 			page 86


1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).Speed | 
 3152              		.loc 1 1675 0
 3153 00ee 7B68     		ldr	r3, [r7, #4]
 3154 00f0 9B68     		ldr	r3, [r3, #8]
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.CarrierSense |
 3155              		.loc 1 1674 0
 3156 00f2 1A43     		orrs	r2, r2, r3
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ReceiveOwn |
 3157              		.loc 1 1676 0
 3158 00f4 BB6D     		ldr	r3, [r7, #88]
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).Speed | 
 3159              		.loc 1 1675 0
 3160 00f6 1A43     		orrs	r2, r2, r3
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.LoopbackMode |
 3161              		.loc 1 1677 0
 3162 00f8 FB6D     		ldr	r3, [r7, #92]
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ReceiveOwn |
 3163              		.loc 1 1676 0
 3164 00fa 1A43     		orrs	r2, r2, r3
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).DuplexMode | 
 3165              		.loc 1 1678 0
 3166 00fc 7B68     		ldr	r3, [r7, #4]
 3167 00fe DB68     		ldr	r3, [r3, #12]
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.LoopbackMode |
 3168              		.loc 1 1677 0
 3169 0100 1A43     		orrs	r2, r2, r3
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
 3170              		.loc 1 1679 0
 3171 0102 3B6E     		ldr	r3, [r7, #96]
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).DuplexMode | 
 3172              		.loc 1 1678 0
 3173 0104 1A43     		orrs	r2, r2, r3
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
 3174              		.loc 1 1680 0
 3175 0106 7B6E     		ldr	r3, [r7, #100]
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
 3176              		.loc 1 1679 0
 3177 0108 1A43     		orrs	r2, r2, r3
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.AutomaticPadCRCStrip | 
 3178              		.loc 1 1681 0
 3179 010a BB6E     		ldr	r3, [r7, #104]
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
 3180              		.loc 1 1680 0
 3181 010c 1A43     		orrs	r2, r2, r3
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.BackOffLimit | 
 3182              		.loc 1 1682 0
 3183 010e FB6E     		ldr	r3, [r7, #108]
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.AutomaticPadCRCStrip | 
 3184              		.loc 1 1681 0
 3185 0110 1A43     		orrs	r2, r2, r3
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.DeferralCheck);
 3186              		.loc 1 1683 0
 3187 0112 3B6F     		ldr	r3, [r7, #112]
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.BackOffLimit | 
 3188              		.loc 1 1682 0
 3189 0114 1343     		orrs	r3, r3, r2
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
ARM GAS  /tmp/ccnfC67i.s 			page 87


 3190              		.loc 1 1671 0
 3191 0116 D7F8BC20 		ldr	r2, [r7, #188]
 3192 011a 1343     		orrs	r3, r3, r2
 3193 011c C7F8BC30 		str	r3, [r7, #188]
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MACCR */
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = (uint32_t)tmpreg;
 3194              		.loc 1 1686 0
 3195 0120 7B68     		ldr	r3, [r7, #4]
 3196 0122 1B68     		ldr	r3, [r3]
 3197 0124 D7F8BC20 		ldr	r2, [r7, #188]
 3198 0128 1A60     		str	r2, [r3]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3199              		.loc 1 1690 0
 3200 012a 7B68     		ldr	r3, [r7, #4]
 3201 012c 1B68     		ldr	r3, [r3]
 3202 012e 1B68     		ldr	r3, [r3]
 3203 0130 C7F8BC30 		str	r3, [r7, #188]
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3204              		.loc 1 1691 0
 3205 0134 0120     		movs	r0, #1
 3206 0136 FFF7FEFF 		bl	HAL_Delay
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg; 
 3207              		.loc 1 1692 0
 3208 013a 7B68     		ldr	r3, [r7, #4]
 3209 013c 1B68     		ldr	r3, [r3]
 3210 013e D7F8BC20 		ldr	r2, [r7, #188]
 3211 0142 1A60     		str	r2, [r3]
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET MACFFR Configuration --------------------*/ 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the RA bit according to ETH ReceiveAll value */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the SAF and SAIF bits according to ETH SourceAddrFilter value */
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PCF bit according to ETH PassControlFrames value */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DBF bit according to ETH BroadcastFramesReception value */
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DAIF bit according to ETH DestinationAddrFilter value */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PR bit according to ETH PromiscuousMode value */
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PM, HMC and HPF bits according to ETH MulticastFramesFilter value */
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the HUC and HPF bits according to ETH UnicastFramesFilter value */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MACFFR */  
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACFFR = (uint32_t)(macinit.ReceiveAll | 
 3212              		.loc 1 1704 0
 3213 0144 7A6F     		ldr	r2, [r7, #116]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3214              		.loc 1 1705 0
 3215 0146 BB6F     		ldr	r3, [r7, #120]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3216              		.loc 1 1704 0
 3217 0148 1A43     		orrs	r2, r2, r3
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PassControlFrames |
 3218              		.loc 1 1706 0
 3219 014a FB6F     		ldr	r3, [r7, #124]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3220              		.loc 1 1705 0
 3221 014c 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccnfC67i.s 			page 88


1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.BroadcastFramesReception | 
 3222              		.loc 1 1707 0
 3223 014e D7F88030 		ldr	r3, [r7, #128]
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PassControlFrames |
 3224              		.loc 1 1706 0
 3225 0152 1A43     		orrs	r2, r2, r3
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.DestinationAddrFilter |
 3226              		.loc 1 1708 0
 3227 0154 D7F88430 		ldr	r3, [r7, #132]
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.BroadcastFramesReception | 
 3228              		.loc 1 1707 0
 3229 0158 1A43     		orrs	r2, r2, r3
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PromiscuousMode |
 3230              		.loc 1 1709 0
 3231 015a D7F88830 		ldr	r3, [r7, #136]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.DestinationAddrFilter |
 3232              		.loc 1 1708 0
 3233 015e 1A43     		orrs	r2, r2, r3
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.MulticastFramesFilter |
 3234              		.loc 1 1710 0
 3235 0160 D7F88C30 		ldr	r3, [r7, #140]
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PromiscuousMode |
 3236              		.loc 1 1709 0
 3237 0164 42EA0301 		orr	r1, r2, r3
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.UnicastFramesFilter);
 3238              		.loc 1 1711 0
 3239 0168 D7F89020 		ldr	r2, [r7, #144]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3240              		.loc 1 1704 0
 3241 016c 7B68     		ldr	r3, [r7, #4]
 3242 016e 1B68     		ldr	r3, [r3]
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.MulticastFramesFilter |
 3243              		.loc 1 1710 0
 3244 0170 0A43     		orrs	r2, r2, r1
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3245              		.loc 1 1704 0
 3246 0172 5A60     		str	r2, [r3, #4]
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFFR;
 3247              		.loc 1 1715 0
 3248 0174 7B68     		ldr	r3, [r7, #4]
 3249 0176 1B68     		ldr	r3, [r3]
 3250 0178 5B68     		ldr	r3, [r3, #4]
 3251 017a C7F8BC30 		str	r3, [r7, #188]
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 3252              		.loc 1 1716 0
 3253 017e 0120     		movs	r0, #1
 3254 0180 FFF7FEFF 		bl	HAL_Delay
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFFR = tmpreg;
 3255              		.loc 1 1717 0
 3256 0184 7B68     		ldr	r3, [r7, #4]
 3257 0186 1B68     		ldr	r3, [r3]
 3258 0188 D7F8BC20 		ldr	r2, [r7, #188]
 3259 018c 5A60     		str	r2, [r3, #4]
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
ARM GAS  /tmp/ccnfC67i.s 			page 89


1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*--------------- ETHERNET MACHTHR and MACHTLR Configuration --------------*/
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACHTHR */
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACHTHR = (uint32_t)macinit.HashTableHigh;
 3260              		.loc 1 1721 0
 3261 018e 7B68     		ldr	r3, [r7, #4]
 3262 0190 1B68     		ldr	r3, [r3]
 3263 0192 D7F89420 		ldr	r2, [r7, #148]
 3264 0196 9A60     		str	r2, [r3, #8]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACHTLR */
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACHTLR = (uint32_t)macinit.HashTableLow;
 3265              		.loc 1 1724 0
 3266 0198 7B68     		ldr	r3, [r7, #4]
 3267 019a 1B68     		ldr	r3, [r3]
 3268 019c D7F89820 		ldr	r2, [r7, #152]
 3269 01a0 DA60     		str	r2, [r3, #12]
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACFCR Configuration -------------------*/
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Get the ETHERNET MACFCR value */  
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFCR;
 3270              		.loc 1 1728 0
 3271 01a2 7B68     		ldr	r3, [r7, #4]
 3272 01a4 1B68     		ldr	r3, [r3]
 3273 01a6 9B69     		ldr	r3, [r3, #24]
 3274 01a8 C7F8BC30 		str	r3, [r7, #188]
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Clear xx bits */
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg &= ETH_MACFCR_CLEAR_MASK;
 3275              		.loc 1 1730 0
 3276 01ac D7F8BC20 		ldr	r2, [r7, #188]
 3277 01b0 4FF64173 		movw	r3, #65345
 3278 01b4 1340     		ands	r3, r3, r2
 3279 01b6 C7F8BC30 		str	r3, [r7, #188]
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the PT bit according to ETH PauseTime value */
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the DZPQ bit according to ETH ZeroQuantaPause value */
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the PLT bit according to ETH PauseLowThreshold value */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the UP bit according to ETH UnicastPauseFrameDetect value */
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the RFE bit according to ETH ReceiveFlowControl value */
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the TFE bit according to ETH TransmitFlowControl value */ 
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg |= (uint32_t)((macinit.PauseTime << 16) | 
 3280              		.loc 1 1738 0
 3281 01ba D7F89C30 		ldr	r3, [r7, #156]
 3282 01be 1A04     		lsls	r2, r3, #16
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3283              		.loc 1 1739 0
 3284 01c0 D7F8A030 		ldr	r3, [r7, #160]
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3285              		.loc 1 1738 0
 3286 01c4 1A43     		orrs	r2, r2, r3
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.PauseLowThreshold |
 3287              		.loc 1 1740 0
 3288 01c6 D7F8A430 		ldr	r3, [r7, #164]
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3289              		.loc 1 1739 0
 3290 01ca 1A43     		orrs	r2, r2, r3
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.UnicastPauseFrameDetect | 
 3291              		.loc 1 1741 0
ARM GAS  /tmp/ccnfC67i.s 			page 90


 3292 01cc D7F8A830 		ldr	r3, [r7, #168]
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.PauseLowThreshold |
 3293              		.loc 1 1740 0
 3294 01d0 1A43     		orrs	r2, r2, r3
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ReceiveFlowControl |
 3295              		.loc 1 1742 0
 3296 01d2 D7F8AC30 		ldr	r3, [r7, #172]
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.UnicastPauseFrameDetect | 
 3297              		.loc 1 1741 0
 3298 01d6 1A43     		orrs	r2, r2, r3
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.TransmitFlowControl); 
 3299              		.loc 1 1743 0
 3300 01d8 D7F8B030 		ldr	r3, [r7, #176]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ReceiveFlowControl |
 3301              		.loc 1 1742 0
 3302 01dc 1343     		orrs	r3, r3, r2
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3303              		.loc 1 1738 0
 3304 01de D7F8BC20 		ldr	r2, [r7, #188]
 3305 01e2 1343     		orrs	r3, r3, r2
 3306 01e4 C7F8BC30 		str	r3, [r7, #188]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACFCR */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = (uint32_t)tmpreg;
 3307              		.loc 1 1746 0
 3308 01e8 7B68     		ldr	r3, [r7, #4]
 3309 01ea 1B68     		ldr	r3, [r3]
 3310 01ec D7F8BC20 		ldr	r2, [r7, #188]
 3311 01f0 9A61     		str	r2, [r3, #24]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    at least four TX_CLK/RX_CLK clock cycles */
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFCR;
 3312              		.loc 1 1750 0
 3313 01f2 7B68     		ldr	r3, [r7, #4]
 3314 01f4 1B68     		ldr	r3, [r3]
 3315 01f6 9B69     		ldr	r3, [r3, #24]
 3316 01f8 C7F8BC30 		str	r3, [r7, #188]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 3317              		.loc 1 1751 0
 3318 01fc 0120     		movs	r0, #1
 3319 01fe FFF7FEFF 		bl	HAL_Delay
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = tmpreg;
 3320              		.loc 1 1752 0
 3321 0202 7B68     		ldr	r3, [r7, #4]
 3322 0204 1B68     		ldr	r3, [r3]
 3323 0206 D7F8BC20 		ldr	r2, [r7, #188]
 3324 020a 9A61     		str	r2, [r3, #24]
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACVLANTR Configuration ----------------*/
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the ETV bit according to ETH VLANTagComparison value */
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the VL bit according to ETH VLANTagIdentifier value */  
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACVLANTR = (uint32_t)(macinit.VLANTagComparison | 
 3325              		.loc 1 1757 0
 3326 020c D7F8B410 		ldr	r1, [r7, #180]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                             macinit.VLANTagIdentifier);
 3327              		.loc 1 1758 0
ARM GAS  /tmp/ccnfC67i.s 			page 91


 3328 0210 D7F8B820 		ldr	r2, [r7, #184]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                             macinit.VLANTagIdentifier);
 3329              		.loc 1 1757 0
 3330 0214 7B68     		ldr	r3, [r7, #4]
 3331 0216 1B68     		ldr	r3, [r3]
 3332 0218 0A43     		orrs	r2, r2, r1
 3333 021a DA61     		str	r2, [r3, #28]
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        at least four TX_CLK/RX_CLK clock cycles */
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACVLANTR;
 3334              		.loc 1 1762 0
 3335 021c 7B68     		ldr	r3, [r7, #4]
 3336 021e 1B68     		ldr	r3, [r3]
 3337 0220 DB69     		ldr	r3, [r3, #28]
 3338 0222 C7F8BC30 		str	r3, [r7, #188]
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 3339              		.loc 1 1763 0
 3340 0226 0120     		movs	r0, #1
 3341 0228 FFF7FEFF 		bl	HAL_Delay
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACVLANTR = tmpreg;
 3342              		.loc 1 1764 0
 3343 022c 7B68     		ldr	r3, [r7, #4]
 3344 022e 1B68     		ldr	r3, [r3]
 3345 0230 D7F8BC20 		ldr	r2, [r7, #188]
 3346 0234 DA61     		str	r2, [r3, #28]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Ethernet DMA default initialization ************************************/
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DropTCPIPChecksumErrorFrame = ETH_DROPTCPIPCHECKSUMERRORFRAME_ENABLE;
 3347              		.loc 1 1767 0
 3348 0236 0023     		movs	r3, #0
 3349 0238 BB60     		str	r3, [r7, #8]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ReceiveStoreForward = ETH_RECEIVESTOREFORWARD_ENABLE;
 3350              		.loc 1 1768 0
 3351 023a 4FF00073 		mov	r3, #33554432
 3352 023e FB60     		str	r3, [r7, #12]
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.FlushReceivedFrame = ETH_FLUSHRECEIVEDFRAME_ENABLE;
 3353              		.loc 1 1769 0
 3354 0240 0023     		movs	r3, #0
 3355 0242 3B61     		str	r3, [r7, #16]
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TransmitStoreForward = ETH_TRANSMITSTOREFORWARD_ENABLE;  
 3356              		.loc 1 1770 0
 3357 0244 4FF40013 		mov	r3, #2097152
 3358 0248 7B61     		str	r3, [r7, #20]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TransmitThresholdControl = ETH_TRANSMITTHRESHOLDCONTROL_64BYTES;
 3359              		.loc 1 1771 0
 3360 024a 0023     		movs	r3, #0
 3361 024c BB61     		str	r3, [r7, #24]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ForwardErrorFrames = ETH_FORWARDERRORFRAMES_DISABLE;
 3362              		.loc 1 1772 0
 3363 024e 0023     		movs	r3, #0
 3364 0250 FB61     		str	r3, [r7, #28]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ForwardUndersizedGoodFrames = ETH_FORWARDUNDERSIZEDGOODFRAMES_DISABLE;
 3365              		.loc 1 1773 0
 3366 0252 0023     		movs	r3, #0
 3367 0254 3B62     		str	r3, [r7, #32]
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ReceiveThresholdControl = ETH_RECEIVEDTHRESHOLDCONTROL_64BYTES;
ARM GAS  /tmp/ccnfC67i.s 			page 92


 3368              		.loc 1 1774 0
 3369 0256 0023     		movs	r3, #0
 3370 0258 7B62     		str	r3, [r7, #36]
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.SecondFrameOperate = ETH_SECONDFRAMEOPERARTE_ENABLE;
 3371              		.loc 1 1775 0
 3372 025a 0423     		movs	r3, #4
 3373 025c BB62     		str	r3, [r7, #40]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.AddressAlignedBeats = ETH_ADDRESSALIGNEDBEATS_ENABLE;
 3374              		.loc 1 1776 0
 3375 025e 4FF00073 		mov	r3, #33554432
 3376 0262 FB62     		str	r3, [r7, #44]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.FixedBurst = ETH_FIXEDBURST_ENABLE;
 3377              		.loc 1 1777 0
 3378 0264 4FF48033 		mov	r3, #65536
 3379 0268 3B63     		str	r3, [r7, #48]
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.RxDMABurstLength = ETH_RXDMABURSTLENGTH_32BEAT;
 3380              		.loc 1 1778 0
 3381 026a 4FF48003 		mov	r3, #4194304
 3382 026e 7B63     		str	r3, [r7, #52]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TxDMABurstLength = ETH_TXDMABURSTLENGTH_32BEAT;
 3383              		.loc 1 1779 0
 3384 0270 4FF40053 		mov	r3, #8192
 3385 0274 BB63     		str	r3, [r7, #56]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.EnhancedDescriptorFormat = ETH_DMAENHANCEDDESCRIPTOR_ENABLE;
 3386              		.loc 1 1780 0
 3387 0276 8023     		movs	r3, #128
 3388 0278 FB63     		str	r3, [r7, #60]
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DescriptorSkipLength = 0x0;
 3389              		.loc 1 1781 0
 3390 027a 0023     		movs	r3, #0
 3391 027c 3B64     		str	r3, [r7, #64]
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DMAArbitration = ETH_DMAARBITRATION_ROUNDROBIN_RXTX_1_1;
 3392              		.loc 1 1782 0
 3393 027e 0023     		movs	r3, #0
 3394 0280 7B64     		str	r3, [r7, #68]
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET DMAOMR value */
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->DMAOMR;
 3395              		.loc 1 1785 0
 3396 0282 7B68     		ldr	r3, [r7, #4]
 3397 0284 1A68     		ldr	r2, [r3]
 3398 0286 41F21803 		movw	r3, #4120
 3399 028a 1344     		add	r3, r3, r2
 3400 028c 1B68     		ldr	r3, [r3]
 3401 028e C7F8BC30 		str	r3, [r7, #188]
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear xx bits */
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ETH_DMAOMR_CLEAR_MASK;
 3402              		.loc 1 1787 0
 3403 0292 D7F8BC20 		ldr	r2, [r7, #188]
 3404 0296 3D4B     		ldr	r3, .L128+4
 3405 0298 1340     		ands	r3, r3, r2
 3406 029a C7F8BC30 		str	r3, [r7, #188]
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DT bit according to ETH DropTCPIPChecksumErrorFrame value */
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RSF bit according to ETH ReceiveStoreForward value */
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DFF bit according to ETH FlushReceivedFrame value */
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the TSF bit according to ETH TransmitStoreForward value */
ARM GAS  /tmp/ccnfC67i.s 			page 93


1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the TTC bit according to ETH TransmitThresholdControl value */
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FEF bit according to ETH ForwardErrorFrames value */
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FUF bit according to ETH ForwardUndersizedGoodFrames value */
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RTC bit according to ETH ReceiveThresholdControl value */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the OSF bit according to ETH SecondFrameOperate value */
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(dmainit.DropTCPIPChecksumErrorFrame | 
 3407              		.loc 1 1798 0
 3408 029e BA68     		ldr	r2, [r7, #8]
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3409              		.loc 1 1799 0
 3410 02a0 FB68     		ldr	r3, [r7, #12]
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3411              		.loc 1 1798 0
 3412 02a2 1A43     		orrs	r2, r2, r3
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.FlushReceivedFrame |
 3413              		.loc 1 1800 0
 3414 02a4 3B69     		ldr	r3, [r7, #16]
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3415              		.loc 1 1799 0
 3416 02a6 1A43     		orrs	r2, r2, r3
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitStoreForward | 
 3417              		.loc 1 1801 0
 3418 02a8 7B69     		ldr	r3, [r7, #20]
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.FlushReceivedFrame |
 3419              		.loc 1 1800 0
 3420 02aa 1A43     		orrs	r2, r2, r3
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitThresholdControl |
 3421              		.loc 1 1802 0
 3422 02ac BB69     		ldr	r3, [r7, #24]
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitStoreForward | 
 3423              		.loc 1 1801 0
 3424 02ae 1A43     		orrs	r2, r2, r3
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardErrorFrames |
 3425              		.loc 1 1803 0
 3426 02b0 FB69     		ldr	r3, [r7, #28]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitThresholdControl |
 3427              		.loc 1 1802 0
 3428 02b2 1A43     		orrs	r2, r2, r3
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardUndersizedGoodFrames |
 3429              		.loc 1 1804 0
 3430 02b4 3B6A     		ldr	r3, [r7, #32]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardErrorFrames |
 3431              		.loc 1 1803 0
 3432 02b6 1A43     		orrs	r2, r2, r3
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveThresholdControl |
 3433              		.loc 1 1805 0
 3434 02b8 7B6A     		ldr	r3, [r7, #36]
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardUndersizedGoodFrames |
 3435              		.loc 1 1804 0
 3436 02ba 1A43     		orrs	r2, r2, r3
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.SecondFrameOperate);
 3437              		.loc 1 1806 0
 3438 02bc BB6A     		ldr	r3, [r7, #40]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveThresholdControl |
 3439              		.loc 1 1805 0
 3440 02be 1343     		orrs	r3, r3, r2
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
ARM GAS  /tmp/ccnfC67i.s 			page 94


 3441              		.loc 1 1798 0
 3442 02c0 D7F8BC20 		ldr	r2, [r7, #188]
 3443 02c4 1343     		orrs	r3, r3, r2
 3444 02c6 C7F8BC30 		str	r3, [r7, #188]
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET DMAOMR */
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = (uint32_t)tmpreg;
 3445              		.loc 1 1809 0
 3446 02ca 7B68     		ldr	r3, [r7, #4]
 3447 02cc 1A68     		ldr	r2, [r3]
 3448 02ce 41F21803 		movw	r3, #4120
 3449 02d2 1344     		add	r3, r3, r2
 3450 02d4 D7F8BC20 		ldr	r2, [r7, #188]
 3451 02d8 1A60     		str	r2, [r3]
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        at least four TX_CLK/RX_CLK clock cycles */
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->DMAOMR;
 3452              		.loc 1 1813 0
 3453 02da 7B68     		ldr	r3, [r7, #4]
 3454 02dc 1A68     		ldr	r2, [r3]
 3455 02de 41F21803 		movw	r3, #4120
 3456 02e2 1344     		add	r3, r3, r2
 3457 02e4 1B68     		ldr	r3, [r3]
 3458 02e6 C7F8BC30 		str	r3, [r7, #188]
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 3459              		.loc 1 1814 0
 3460 02ea 0120     		movs	r0, #1
 3461 02ec FFF7FEFF 		bl	HAL_Delay
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = tmpreg;
 3462              		.loc 1 1815 0
 3463 02f0 7B68     		ldr	r3, [r7, #4]
 3464 02f2 1A68     		ldr	r2, [r3]
 3465 02f4 41F21803 		movw	r3, #4120
 3466 02f8 1344     		add	r3, r3, r2
 3467 02fa D7F8BC20 		ldr	r2, [r7, #188]
 3468 02fe 1A60     		str	r2, [r3]
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*----------------------- ETHERNET DMABMR Configuration ------------------*/
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the AAL bit according to ETH AddressAlignedBeats value */
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FB bit according to ETH FixedBurst value */
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RPBL and 4*PBL bits according to ETH RxDMABurstLength value */
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the PBL and 4*PBL bits according to ETH TxDMABurstLength value */
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the Enhanced DMA descriptors bit according to ETH EnhancedDescriptorFormat value*/
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DSL bit according to ETH DesciptorSkipLength value */
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the PR and DA bits according to ETH DMAArbitration value */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMABMR = (uint32_t)(dmainit.AddressAlignedBeats | 
 3469              		.loc 1 1825 0
 3470 0300 FA6A     		ldr	r2, [r7, #44]
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3471              		.loc 1 1826 0
 3472 0302 3B6B     		ldr	r3, [r7, #48]
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3473              		.loc 1 1825 0
 3474 0304 1A43     		orrs	r2, r2, r3
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
 3475              		.loc 1 1827 0
ARM GAS  /tmp/ccnfC67i.s 			page 95


 3476 0306 7B6B     		ldr	r3, [r7, #52]
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3477              		.loc 1 1826 0
 3478 0308 1A43     		orrs	r2, r2, r3
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.TxDMABurstLength |
 3479              		.loc 1 1828 0
 3480 030a BB6B     		ldr	r3, [r7, #56]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
 3481              		.loc 1 1827 0
 3482 030c 1A43     		orrs	r2, r2, r3
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.EnhancedDescriptorFormat |
 3483              		.loc 1 1829 0
 3484 030e FB6B     		ldr	r3, [r7, #60]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.TxDMABurstLength |
 3485              		.loc 1 1828 0
 3486 0310 1A43     		orrs	r2, r2, r3
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           (dmainit.DescriptorSkipLength << 2) |
 3487              		.loc 1 1830 0
 3488 0312 3B6C     		ldr	r3, [r7, #64]
 3489 0314 9B00     		lsls	r3, r3, #2
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.EnhancedDescriptorFormat |
 3490              		.loc 1 1829 0
 3491 0316 1A43     		orrs	r2, r2, r3
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.DMAArbitration |
 3492              		.loc 1 1831 0
 3493 0318 7B6C     		ldr	r3, [r7, #68]
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           (dmainit.DescriptorSkipLength << 2) |
 3494              		.loc 1 1830 0
 3495 031a 1A43     		orrs	r2, r2, r3
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3496              		.loc 1 1825 0
 3497 031c 7B68     		ldr	r3, [r7, #4]
 3498 031e 1B68     		ldr	r3, [r3]
 3499 0320 42F40002 		orr	r2, r2, #8388608
 3500 0324 03F58053 		add	r3, r3, #4096
 3501 0328 1A60     		str	r2, [r3]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account:
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         at least four TX_CLK/RX_CLK clock cycles */
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->DMABMR;
 3502              		.loc 1 1836 0
 3503 032a 7B68     		ldr	r3, [r7, #4]
 3504 032c 1B68     		ldr	r3, [r3]
 3505 032e 03F58053 		add	r3, r3, #4096
 3506 0332 1B68     		ldr	r3, [r3]
 3507 0334 C7F8BC30 		str	r3, [r7, #188]
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 3508              		.loc 1 1837 0
 3509 0338 0120     		movs	r0, #1
 3510 033a FFF7FEFF 		bl	HAL_Delay
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->DMABMR = tmpreg;
 3511              		.loc 1 1838 0
 3512 033e 7B68     		ldr	r3, [r7, #4]
 3513 0340 1B68     		ldr	r3, [r3]
 3514 0342 03F58053 		add	r3, r3, #4096
 3515 0346 D7F8BC20 		ldr	r2, [r7, #188]
ARM GAS  /tmp/ccnfC67i.s 			page 96


 3516 034a 1A60     		str	r2, [r3]
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      if((heth->Init).RxMode == ETH_RXINTERRUPT_MODE)
 3517              		.loc 1 1840 0
 3518 034c 7B68     		ldr	r3, [r7, #4]
 3519 034e 9B69     		ldr	r3, [r3, #24]
 3520 0350 012B     		cmp	r3, #1
 3521 0352 0DD1     		bne	.L127
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      {
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        /* Enable the Ethernet Rx Interrupt */
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        __HAL_ETH_DMA_ENABLE_IT((heth), ETH_DMA_IT_NIS | ETH_DMA_IT_R);
 3522              		.loc 1 1843 0
 3523 0354 7B68     		ldr	r3, [r7, #4]
 3524 0356 1A68     		ldr	r2, [r3]
 3525 0358 41F21C03 		movw	r3, #4124
 3526 035c 1344     		add	r3, r3, r2
 3527 035e 1B68     		ldr	r3, [r3]
 3528 0360 7A68     		ldr	r2, [r7, #4]
 3529 0362 1168     		ldr	r1, [r2]
 3530 0364 0A4A     		ldr	r2, .L128+8
 3531 0366 1A43     		orrs	r2, r2, r3
 3532 0368 41F21C03 		movw	r3, #4124
 3533 036c 0B44     		add	r3, r3, r1
 3534 036e 1A60     		str	r2, [r3]
 3535              	.L127:
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      }
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Initialize MAC address in ethernet MAC */ 
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      ETH_MACAddressConfig(heth, ETH_MAC_ADDRESS0, heth->Init.MACAddr);
 3536              		.loc 1 1847 0
 3537 0370 7B68     		ldr	r3, [r7, #4]
 3538 0372 5B69     		ldr	r3, [r3, #20]
 3539 0374 1A46     		mov	r2, r3
 3540 0376 0021     		movs	r1, #0
 3541 0378 7868     		ldr	r0, [r7, #4]
 3542 037a FFF7FEFF 		bl	ETH_MACAddressConfig
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3543              		.loc 1 1848 0
 3544 037e 00BF     		nop
 3545 0380 C037     		adds	r7, r7, #192
 3546              	.LCFI114:
 3547              		.cfi_def_cfa_offset 8
 3548 0382 BD46     		mov	sp, r7
 3549              	.LCFI115:
 3550              		.cfi_def_cfa_register 13
 3551              		@ sp needed
 3552 0384 80BD     		pop	{r7, pc}
 3553              	.L129:
 3554 0386 00BF     		.align	2
 3555              	.L128:
 3556 0388 0F8120FF 		.word	-14647025
 3557 038c 233FDEF8 		.word	-119652573
 3558 0390 40000100 		.word	65600
 3559              		.cfi_endproc
 3560              	.LFE158:
 3562              		.section	.text.ETH_MACAddressConfig,"ax",%progbits
 3563              		.align	1
ARM GAS  /tmp/ccnfC67i.s 			page 97


 3564              		.syntax unified
 3565              		.thumb
 3566              		.thumb_func
 3567              		.fpu fpv4-sp-d16
 3569              	ETH_MACAddressConfig:
 3570              	.LFB159:
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Configures the selected MAC address.
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  MacAddr The MAC address to configure
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This parameter can be one of the following values:
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address0: MAC Address0 
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address1: MAC Address1 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address2: MAC Address2
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address3: MAC Address3
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  Addr Pointer to MAC address buffer data (6 bytes)
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr)
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 3571              		.loc 1 1864 0
 3572              		.cfi_startproc
 3573              		@ args = 0, pretend = 0, frame = 24
 3574              		@ frame_needed = 1, uses_anonymous_args = 0
 3575              		@ link register save eliminated.
 3576 0000 80B4     		push	{r7}
 3577              	.LCFI116:
 3578              		.cfi_def_cfa_offset 4
 3579              		.cfi_offset 7, -4
 3580 0002 87B0     		sub	sp, sp, #28
 3581              	.LCFI117:
 3582              		.cfi_def_cfa_offset 32
 3583 0004 00AF     		add	r7, sp, #0
 3584              	.LCFI118:
 3585              		.cfi_def_cfa_register 7
 3586 0006 F860     		str	r0, [r7, #12]
 3587 0008 B960     		str	r1, [r7, #8]
 3588 000a 7A60     		str	r2, [r7, #4]
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg;
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the parameters */
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_MAC_ADDRESS0123(MacAddr));
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Calculate the selected MAC address high register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = ((uint32_t)Addr[5] << 8) | (uint32_t)Addr[4];
 3589              		.loc 1 1871 0
 3590 000c 7B68     		ldr	r3, [r7, #4]
 3591 000e 0533     		adds	r3, r3, #5
 3592 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3593 0012 1B02     		lsls	r3, r3, #8
 3594 0014 7A68     		ldr	r2, [r7, #4]
 3595 0016 0432     		adds	r2, r2, #4
 3596 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3597 001a 1343     		orrs	r3, r3, r2
 3598 001c 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccnfC67i.s 			page 98


1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Load the selected MAC address high register */
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (*(__IO uint32_t *)((uint32_t)(ETH_MAC_ADDR_HBASE + MacAddr))) = tmpreg;
 3599              		.loc 1 1873 0
 3600 001e BA68     		ldr	r2, [r7, #8]
 3601 0020 114B     		ldr	r3, .L131
 3602 0022 1344     		add	r3, r3, r2
 3603 0024 1A46     		mov	r2, r3
 3604 0026 7B69     		ldr	r3, [r7, #20]
 3605 0028 1360     		str	r3, [r2]
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Calculate the selected MAC address low register */
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = ((uint32_t)Addr[3] << 24) | ((uint32_t)Addr[2] << 16) | ((uint32_t)Addr[1] << 8) | Addr[
 3606              		.loc 1 1875 0
 3607 002a 7B68     		ldr	r3, [r7, #4]
 3608 002c 0333     		adds	r3, r3, #3
 3609 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3610 0030 1A06     		lsls	r2, r3, #24
 3611 0032 7B68     		ldr	r3, [r7, #4]
 3612 0034 0233     		adds	r3, r3, #2
 3613 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3614 0038 1B04     		lsls	r3, r3, #16
 3615 003a 1A43     		orrs	r2, r2, r3
 3616 003c 7B68     		ldr	r3, [r7, #4]
 3617 003e 0133     		adds	r3, r3, #1
 3618 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3619 0042 1B02     		lsls	r3, r3, #8
 3620 0044 1343     		orrs	r3, r3, r2
 3621 0046 7A68     		ldr	r2, [r7, #4]
 3622 0048 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3623 004a 1343     		orrs	r3, r3, r2
 3624 004c 7B61     		str	r3, [r7, #20]
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Load the selected MAC address low register */
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (*(__IO uint32_t *)((uint32_t)(ETH_MAC_ADDR_LBASE + MacAddr))) = tmpreg;
 3625              		.loc 1 1878 0
 3626 004e BA68     		ldr	r2, [r7, #8]
 3627 0050 064B     		ldr	r3, .L131+4
 3628 0052 1344     		add	r3, r3, r2
 3629 0054 1A46     		mov	r2, r3
 3630 0056 7B69     		ldr	r3, [r7, #20]
 3631 0058 1360     		str	r3, [r2]
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3632              		.loc 1 1879 0
 3633 005a 00BF     		nop
 3634 005c 1C37     		adds	r7, r7, #28
 3635              	.LCFI119:
 3636              		.cfi_def_cfa_offset 4
 3637 005e BD46     		mov	sp, r7
 3638              	.LCFI120:
 3639              		.cfi_def_cfa_register 13
 3640              		@ sp needed
 3641 0060 5DF8047B 		ldr	r7, [sp], #4
 3642              	.LCFI121:
 3643              		.cfi_restore 7
 3644              		.cfi_def_cfa_offset 0
 3645 0064 7047     		bx	lr
 3646              	.L132:
 3647 0066 00BF     		.align	2
ARM GAS  /tmp/ccnfC67i.s 			page 99


 3648              	.L131:
 3649 0068 40800240 		.word	1073905728
 3650 006c 44800240 		.word	1073905732
 3651              		.cfi_endproc
 3652              	.LFE159:
 3654              		.section	.text.ETH_MACTransmissionEnable,"ax",%progbits
 3655              		.align	1
 3656              		.syntax unified
 3657              		.thumb
 3658              		.thumb_func
 3659              		.fpu fpv4-sp-d16
 3661              	ETH_MACTransmissionEnable:
 3662              	.LFB160:
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the MAC transmission.
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth)
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3663              		.loc 1 1888 0
 3664              		.cfi_startproc
 3665              		@ args = 0, pretend = 0, frame = 16
 3666              		@ frame_needed = 1, uses_anonymous_args = 0
 3667 0000 80B5     		push	{r7, lr}
 3668              	.LCFI122:
 3669              		.cfi_def_cfa_offset 8
 3670              		.cfi_offset 7, -8
 3671              		.cfi_offset 14, -4
 3672 0002 84B0     		sub	sp, sp, #16
 3673              	.LCFI123:
 3674              		.cfi_def_cfa_offset 24
 3675 0004 00AF     		add	r7, sp, #0
 3676              	.LCFI124:
 3677              		.cfi_def_cfa_register 7
 3678 0006 7860     		str	r0, [r7, #4]
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3679              		.loc 1 1889 0
 3680 0008 0023     		movs	r3, #0
 3681 000a FB60     		str	r3, [r7, #12]
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the MAC transmission */
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR |= ETH_MACCR_TE;
 3682              		.loc 1 1892 0
 3683 000c 7B68     		ldr	r3, [r7, #4]
 3684 000e 1B68     		ldr	r3, [r3]
 3685 0010 1A68     		ldr	r2, [r3]
 3686 0012 7B68     		ldr	r3, [r7, #4]
 3687 0014 1B68     		ldr	r3, [r3]
 3688 0016 42F00802 		orr	r2, r2, #8
 3689 001a 1A60     		str	r2, [r3]
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
ARM GAS  /tmp/ccnfC67i.s 			page 100


 3690              		.loc 1 1896 0
 3691 001c 7B68     		ldr	r3, [r7, #4]
 3692 001e 1B68     		ldr	r3, [r3]
 3693 0020 1B68     		ldr	r3, [r3]
 3694 0022 FB60     		str	r3, [r7, #12]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3695              		.loc 1 1897 0
 3696 0024 0120     		movs	r0, #1
 3697 0026 FFF7FEFF 		bl	HAL_Delay
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3698              		.loc 1 1898 0
 3699 002a 7B68     		ldr	r3, [r7, #4]
 3700 002c 1B68     		ldr	r3, [r3]
 3701 002e FA68     		ldr	r2, [r7, #12]
 3702 0030 1A60     		str	r2, [r3]
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3703              		.loc 1 1899 0
 3704 0032 00BF     		nop
 3705 0034 1037     		adds	r7, r7, #16
 3706              	.LCFI125:
 3707              		.cfi_def_cfa_offset 8
 3708 0036 BD46     		mov	sp, r7
 3709              	.LCFI126:
 3710              		.cfi_def_cfa_register 13
 3711              		@ sp needed
 3712 0038 80BD     		pop	{r7, pc}
 3713              		.cfi_endproc
 3714              	.LFE160:
 3716              		.section	.text.ETH_MACTransmissionDisable,"ax",%progbits
 3717              		.align	1
 3718              		.syntax unified
 3719              		.thumb
 3720              		.thumb_func
 3721              		.fpu fpv4-sp-d16
 3723              	ETH_MACTransmissionDisable:
 3724              	.LFB161:
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the MAC transmission.
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth)
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3725              		.loc 1 1908 0
 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 16
 3728              		@ frame_needed = 1, uses_anonymous_args = 0
 3729 0000 80B5     		push	{r7, lr}
 3730              	.LCFI127:
 3731              		.cfi_def_cfa_offset 8
 3732              		.cfi_offset 7, -8
 3733              		.cfi_offset 14, -4
 3734 0002 84B0     		sub	sp, sp, #16
 3735              	.LCFI128:
 3736              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccnfC67i.s 			page 101


 3737 0004 00AF     		add	r7, sp, #0
 3738              	.LCFI129:
 3739              		.cfi_def_cfa_register 7
 3740 0006 7860     		str	r0, [r7, #4]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3741              		.loc 1 1909 0
 3742 0008 0023     		movs	r3, #0
 3743 000a FB60     		str	r3, [r7, #12]
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the MAC transmission */
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR &= ~ETH_MACCR_TE;
 3744              		.loc 1 1912 0
 3745 000c 7B68     		ldr	r3, [r7, #4]
 3746 000e 1B68     		ldr	r3, [r3]
 3747 0010 1A68     		ldr	r2, [r3]
 3748 0012 7B68     		ldr	r3, [r7, #4]
 3749 0014 1B68     		ldr	r3, [r3]
 3750 0016 22F00802 		bic	r2, r2, #8
 3751 001a 1A60     		str	r2, [r3]
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3752              		.loc 1 1916 0
 3753 001c 7B68     		ldr	r3, [r7, #4]
 3754 001e 1B68     		ldr	r3, [r3]
 3755 0020 1B68     		ldr	r3, [r3]
 3756 0022 FB60     		str	r3, [r7, #12]
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3757              		.loc 1 1917 0
 3758 0024 0120     		movs	r0, #1
 3759 0026 FFF7FEFF 		bl	HAL_Delay
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3760              		.loc 1 1918 0
 3761 002a 7B68     		ldr	r3, [r7, #4]
 3762 002c 1B68     		ldr	r3, [r3]
 3763 002e FA68     		ldr	r2, [r7, #12]
 3764 0030 1A60     		str	r2, [r3]
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3765              		.loc 1 1919 0
 3766 0032 00BF     		nop
 3767 0034 1037     		adds	r7, r7, #16
 3768              	.LCFI130:
 3769              		.cfi_def_cfa_offset 8
 3770 0036 BD46     		mov	sp, r7
 3771              	.LCFI131:
 3772              		.cfi_def_cfa_register 13
 3773              		@ sp needed
 3774 0038 80BD     		pop	{r7, pc}
 3775              		.cfi_endproc
 3776              	.LFE161:
 3778              		.section	.text.ETH_MACReceptionEnable,"ax",%progbits
 3779              		.align	1
 3780              		.syntax unified
 3781              		.thumb
 3782              		.thumb_func
 3783              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccnfC67i.s 			page 102


 3785              	ETH_MACReceptionEnable:
 3786              	.LFB162:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the MAC reception.
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth)
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3787              		.loc 1 1928 0
 3788              		.cfi_startproc
 3789              		@ args = 0, pretend = 0, frame = 16
 3790              		@ frame_needed = 1, uses_anonymous_args = 0
 3791 0000 80B5     		push	{r7, lr}
 3792              	.LCFI132:
 3793              		.cfi_def_cfa_offset 8
 3794              		.cfi_offset 7, -8
 3795              		.cfi_offset 14, -4
 3796 0002 84B0     		sub	sp, sp, #16
 3797              	.LCFI133:
 3798              		.cfi_def_cfa_offset 24
 3799 0004 00AF     		add	r7, sp, #0
 3800              	.LCFI134:
 3801              		.cfi_def_cfa_register 7
 3802 0006 7860     		str	r0, [r7, #4]
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3803              		.loc 1 1929 0
 3804 0008 0023     		movs	r3, #0
 3805 000a FB60     		str	r3, [r7, #12]
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the MAC reception */
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR |= ETH_MACCR_RE;
 3806              		.loc 1 1932 0
 3807 000c 7B68     		ldr	r3, [r7, #4]
 3808 000e 1B68     		ldr	r3, [r3]
 3809 0010 1A68     		ldr	r2, [r3]
 3810 0012 7B68     		ldr	r3, [r7, #4]
 3811 0014 1B68     		ldr	r3, [r3]
 3812 0016 42F00402 		orr	r2, r2, #4
 3813 001a 1A60     		str	r2, [r3]
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3814              		.loc 1 1936 0
 3815 001c 7B68     		ldr	r3, [r7, #4]
 3816 001e 1B68     		ldr	r3, [r3]
 3817 0020 1B68     		ldr	r3, [r3]
 3818 0022 FB60     		str	r3, [r7, #12]
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3819              		.loc 1 1937 0
 3820 0024 0120     		movs	r0, #1
 3821 0026 FFF7FEFF 		bl	HAL_Delay
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3822              		.loc 1 1938 0
ARM GAS  /tmp/ccnfC67i.s 			page 103


 3823 002a 7B68     		ldr	r3, [r7, #4]
 3824 002c 1B68     		ldr	r3, [r3]
 3825 002e FA68     		ldr	r2, [r7, #12]
 3826 0030 1A60     		str	r2, [r3]
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3827              		.loc 1 1939 0
 3828 0032 00BF     		nop
 3829 0034 1037     		adds	r7, r7, #16
 3830              	.LCFI135:
 3831              		.cfi_def_cfa_offset 8
 3832 0036 BD46     		mov	sp, r7
 3833              	.LCFI136:
 3834              		.cfi_def_cfa_register 13
 3835              		@ sp needed
 3836 0038 80BD     		pop	{r7, pc}
 3837              		.cfi_endproc
 3838              	.LFE162:
 3840              		.section	.text.ETH_MACReceptionDisable,"ax",%progbits
 3841              		.align	1
 3842              		.syntax unified
 3843              		.thumb
 3844              		.thumb_func
 3845              		.fpu fpv4-sp-d16
 3847              	ETH_MACReceptionDisable:
 3848              	.LFB163:
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the MAC reception.
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth)
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3849              		.loc 1 1948 0
 3850              		.cfi_startproc
 3851              		@ args = 0, pretend = 0, frame = 16
 3852              		@ frame_needed = 1, uses_anonymous_args = 0
 3853 0000 80B5     		push	{r7, lr}
 3854              	.LCFI137:
 3855              		.cfi_def_cfa_offset 8
 3856              		.cfi_offset 7, -8
 3857              		.cfi_offset 14, -4
 3858 0002 84B0     		sub	sp, sp, #16
 3859              	.LCFI138:
 3860              		.cfi_def_cfa_offset 24
 3861 0004 00AF     		add	r7, sp, #0
 3862              	.LCFI139:
 3863              		.cfi_def_cfa_register 7
 3864 0006 7860     		str	r0, [r7, #4]
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3865              		.loc 1 1949 0
 3866 0008 0023     		movs	r3, #0
 3867 000a FB60     		str	r3, [r7, #12]
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the MAC reception */
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR &= ~ETH_MACCR_RE; 
ARM GAS  /tmp/ccnfC67i.s 			page 104


 3868              		.loc 1 1952 0
 3869 000c 7B68     		ldr	r3, [r7, #4]
 3870 000e 1B68     		ldr	r3, [r3]
 3871 0010 1A68     		ldr	r2, [r3]
 3872 0012 7B68     		ldr	r3, [r7, #4]
 3873 0014 1B68     		ldr	r3, [r3]
 3874 0016 22F00402 		bic	r2, r2, #4
 3875 001a 1A60     		str	r2, [r3]
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3876              		.loc 1 1956 0
 3877 001c 7B68     		ldr	r3, [r7, #4]
 3878 001e 1B68     		ldr	r3, [r3]
 3879 0020 1B68     		ldr	r3, [r3]
 3880 0022 FB60     		str	r3, [r7, #12]
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3881              		.loc 1 1957 0
 3882 0024 0120     		movs	r0, #1
 3883 0026 FFF7FEFF 		bl	HAL_Delay
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3884              		.loc 1 1958 0
 3885 002a 7B68     		ldr	r3, [r7, #4]
 3886 002c 1B68     		ldr	r3, [r3]
 3887 002e FA68     		ldr	r2, [r7, #12]
 3888 0030 1A60     		str	r2, [r3]
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3889              		.loc 1 1959 0
 3890 0032 00BF     		nop
 3891 0034 1037     		adds	r7, r7, #16
 3892              	.LCFI140:
 3893              		.cfi_def_cfa_offset 8
 3894 0036 BD46     		mov	sp, r7
 3895              	.LCFI141:
 3896              		.cfi_def_cfa_register 13
 3897              		@ sp needed
 3898 0038 80BD     		pop	{r7, pc}
 3899              		.cfi_endproc
 3900              	.LFE163:
 3902              		.section	.text.ETH_DMATransmissionEnable,"ax",%progbits
 3903              		.align	1
 3904              		.syntax unified
 3905              		.thumb
 3906              		.thumb_func
 3907              		.fpu fpv4-sp-d16
 3909              	ETH_DMATransmissionEnable:
 3910              	.LFB164:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the DMA transmission.
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth)
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
ARM GAS  /tmp/ccnfC67i.s 			page 105


 3911              		.loc 1 1968 0
 3912              		.cfi_startproc
 3913              		@ args = 0, pretend = 0, frame = 8
 3914              		@ frame_needed = 1, uses_anonymous_args = 0
 3915              		@ link register save eliminated.
 3916 0000 80B4     		push	{r7}
 3917              	.LCFI142:
 3918              		.cfi_def_cfa_offset 4
 3919              		.cfi_offset 7, -4
 3920 0002 83B0     		sub	sp, sp, #12
 3921              	.LCFI143:
 3922              		.cfi_def_cfa_offset 16
 3923 0004 00AF     		add	r7, sp, #0
 3924              	.LCFI144:
 3925              		.cfi_def_cfa_register 7
 3926 0006 7860     		str	r0, [r7, #4]
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the DMA transmission */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_ST;  
 3927              		.loc 1 1970 0
 3928 0008 7B68     		ldr	r3, [r7, #4]
 3929 000a 1A68     		ldr	r2, [r3]
 3930 000c 41F21803 		movw	r3, #4120
 3931 0010 1344     		add	r3, r3, r2
 3932 0012 1B68     		ldr	r3, [r3]
 3933 0014 7A68     		ldr	r2, [r7, #4]
 3934 0016 1168     		ldr	r1, [r2]
 3935 0018 43F40052 		orr	r2, r3, #8192
 3936 001c 41F21803 		movw	r3, #4120
 3937 0020 0B44     		add	r3, r3, r1
 3938 0022 1A60     		str	r2, [r3]
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3939              		.loc 1 1971 0
 3940 0024 00BF     		nop
 3941 0026 0C37     		adds	r7, r7, #12
 3942              	.LCFI145:
 3943              		.cfi_def_cfa_offset 4
 3944 0028 BD46     		mov	sp, r7
 3945              	.LCFI146:
 3946              		.cfi_def_cfa_register 13
 3947              		@ sp needed
 3948 002a 5DF8047B 		ldr	r7, [sp], #4
 3949              	.LCFI147:
 3950              		.cfi_restore 7
 3951              		.cfi_def_cfa_offset 0
 3952 002e 7047     		bx	lr
 3953              		.cfi_endproc
 3954              	.LFE164:
 3956              		.section	.text.ETH_DMATransmissionDisable,"ax",%progbits
 3957              		.align	1
 3958              		.syntax unified
 3959              		.thumb
 3960              		.thumb_func
 3961              		.fpu fpv4-sp-d16
 3963              	ETH_DMATransmissionDisable:
 3964              	.LFB165:
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
ARM GAS  /tmp/ccnfC67i.s 			page 106


1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the DMA transmission.
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth)
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3965              		.loc 1 1980 0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 8
 3968              		@ frame_needed = 1, uses_anonymous_args = 0
 3969              		@ link register save eliminated.
 3970 0000 80B4     		push	{r7}
 3971              	.LCFI148:
 3972              		.cfi_def_cfa_offset 4
 3973              		.cfi_offset 7, -4
 3974 0002 83B0     		sub	sp, sp, #12
 3975              	.LCFI149:
 3976              		.cfi_def_cfa_offset 16
 3977 0004 00AF     		add	r7, sp, #0
 3978              	.LCFI150:
 3979              		.cfi_def_cfa_register 7
 3980 0006 7860     		str	r0, [r7, #4]
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the DMA transmission */
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR &= ~ETH_DMAOMR_ST;
 3981              		.loc 1 1982 0
 3982 0008 7B68     		ldr	r3, [r7, #4]
 3983 000a 1A68     		ldr	r2, [r3]
 3984 000c 41F21803 		movw	r3, #4120
 3985 0010 1344     		add	r3, r3, r2
 3986 0012 1B68     		ldr	r3, [r3]
 3987 0014 7A68     		ldr	r2, [r7, #4]
 3988 0016 1168     		ldr	r1, [r2]
 3989 0018 23F40052 		bic	r2, r3, #8192
 3990 001c 41F21803 		movw	r3, #4120
 3991 0020 0B44     		add	r3, r3, r1
 3992 0022 1A60     		str	r2, [r3]
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3993              		.loc 1 1983 0
 3994 0024 00BF     		nop
 3995 0026 0C37     		adds	r7, r7, #12
 3996              	.LCFI151:
 3997              		.cfi_def_cfa_offset 4
 3998 0028 BD46     		mov	sp, r7
 3999              	.LCFI152:
 4000              		.cfi_def_cfa_register 13
 4001              		@ sp needed
 4002 002a 5DF8047B 		ldr	r7, [sp], #4
 4003              	.LCFI153:
 4004              		.cfi_restore 7
 4005              		.cfi_def_cfa_offset 0
 4006 002e 7047     		bx	lr
 4007              		.cfi_endproc
 4008              	.LFE165:
 4010              		.section	.text.ETH_DMAReceptionEnable,"ax",%progbits
 4011              		.align	1
 4012              		.syntax unified
ARM GAS  /tmp/ccnfC67i.s 			page 107


 4013              		.thumb
 4014              		.thumb_func
 4015              		.fpu fpv4-sp-d16
 4017              	ETH_DMAReceptionEnable:
 4018              	.LFB166:
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the DMA reception.
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module 
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth)
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 4019              		.loc 1 1992 0
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 8
 4022              		@ frame_needed = 1, uses_anonymous_args = 0
 4023              		@ link register save eliminated.
 4024 0000 80B4     		push	{r7}
 4025              	.LCFI154:
 4026              		.cfi_def_cfa_offset 4
 4027              		.cfi_offset 7, -4
 4028 0002 83B0     		sub	sp, sp, #12
 4029              	.LCFI155:
 4030              		.cfi_def_cfa_offset 16
 4031 0004 00AF     		add	r7, sp, #0
 4032              	.LCFI156:
 4033              		.cfi_def_cfa_register 7
 4034 0006 7860     		str	r0, [r7, #4]
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the DMA reception */
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_SR;  
 4035              		.loc 1 1994 0
 4036 0008 7B68     		ldr	r3, [r7, #4]
 4037 000a 1A68     		ldr	r2, [r3]
 4038 000c 41F21803 		movw	r3, #4120
 4039 0010 1344     		add	r3, r3, r2
 4040 0012 1B68     		ldr	r3, [r3]
 4041 0014 7A68     		ldr	r2, [r7, #4]
 4042 0016 1168     		ldr	r1, [r2]
 4043 0018 43F00202 		orr	r2, r3, #2
 4044 001c 41F21803 		movw	r3, #4120
 4045 0020 0B44     		add	r3, r3, r1
 4046 0022 1A60     		str	r2, [r3]
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 4047              		.loc 1 1995 0
 4048 0024 00BF     		nop
 4049 0026 0C37     		adds	r7, r7, #12
 4050              	.LCFI157:
 4051              		.cfi_def_cfa_offset 4
 4052 0028 BD46     		mov	sp, r7
 4053              	.LCFI158:
 4054              		.cfi_def_cfa_register 13
 4055              		@ sp needed
 4056 002a 5DF8047B 		ldr	r7, [sp], #4
 4057              	.LCFI159:
 4058              		.cfi_restore 7
ARM GAS  /tmp/ccnfC67i.s 			page 108


 4059              		.cfi_def_cfa_offset 0
 4060 002e 7047     		bx	lr
 4061              		.cfi_endproc
 4062              	.LFE166:
 4064              		.section	.text.ETH_DMAReceptionDisable,"ax",%progbits
 4065              		.align	1
 4066              		.syntax unified
 4067              		.thumb
 4068              		.thumb_func
 4069              		.fpu fpv4-sp-d16
 4071              	ETH_DMAReceptionDisable:
 4072              	.LFB167:
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the DMA reception.
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module 
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth)
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 4073              		.loc 1 2004 0
 4074              		.cfi_startproc
 4075              		@ args = 0, pretend = 0, frame = 8
 4076              		@ frame_needed = 1, uses_anonymous_args = 0
 4077              		@ link register save eliminated.
 4078 0000 80B4     		push	{r7}
 4079              	.LCFI160:
 4080              		.cfi_def_cfa_offset 4
 4081              		.cfi_offset 7, -4
 4082 0002 83B0     		sub	sp, sp, #12
 4083              	.LCFI161:
 4084              		.cfi_def_cfa_offset 16
 4085 0004 00AF     		add	r7, sp, #0
 4086              	.LCFI162:
 4087              		.cfi_def_cfa_register 7
 4088 0006 7860     		str	r0, [r7, #4]
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the DMA reception */
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR &= ~ETH_DMAOMR_SR;
 4089              		.loc 1 2006 0
 4090 0008 7B68     		ldr	r3, [r7, #4]
 4091 000a 1A68     		ldr	r2, [r3]
 4092 000c 41F21803 		movw	r3, #4120
 4093 0010 1344     		add	r3, r3, r2
 4094 0012 1B68     		ldr	r3, [r3]
 4095 0014 7A68     		ldr	r2, [r7, #4]
 4096 0016 1168     		ldr	r1, [r2]
 4097 0018 23F00202 		bic	r2, r3, #2
 4098 001c 41F21803 		movw	r3, #4120
 4099 0020 0B44     		add	r3, r3, r1
 4100 0022 1A60     		str	r2, [r3]
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 4101              		.loc 1 2007 0
 4102 0024 00BF     		nop
 4103 0026 0C37     		adds	r7, r7, #12
 4104              	.LCFI163:
 4105              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccnfC67i.s 			page 109


 4106 0028 BD46     		mov	sp, r7
 4107              	.LCFI164:
 4108              		.cfi_def_cfa_register 13
 4109              		@ sp needed
 4110 002a 5DF8047B 		ldr	r7, [sp], #4
 4111              	.LCFI165:
 4112              		.cfi_restore 7
 4113              		.cfi_def_cfa_offset 0
 4114 002e 7047     		bx	lr
 4115              		.cfi_endproc
 4116              	.LFE167:
 4118              		.section	.text.ETH_FlushTransmitFIFO,"ax",%progbits
 4119              		.align	1
 4120              		.syntax unified
 4121              		.thumb
 4122              		.thumb_func
 4123              		.fpu fpv4-sp-d16
 4125              	ETH_FlushTransmitFIFO:
 4126              	.LFB168:
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Clears the ETHERNET transmit FIFO.
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth)
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 4127              		.loc 1 2016 0
 4128              		.cfi_startproc
 4129              		@ args = 0, pretend = 0, frame = 16
 4130              		@ frame_needed = 1, uses_anonymous_args = 0
 4131 0000 80B5     		push	{r7, lr}
 4132              	.LCFI166:
 4133              		.cfi_def_cfa_offset 8
 4134              		.cfi_offset 7, -8
 4135              		.cfi_offset 14, -4
 4136 0002 84B0     		sub	sp, sp, #16
 4137              	.LCFI167:
 4138              		.cfi_def_cfa_offset 24
 4139 0004 00AF     		add	r7, sp, #0
 4140              	.LCFI168:
 4141              		.cfi_def_cfa_register 7
 4142 0006 7860     		str	r0, [r7, #4]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 4143              		.loc 1 2017 0
 4144 0008 0023     		movs	r3, #0
 4145 000a FB60     		str	r3, [r7, #12]
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the Flush Transmit FIFO bit */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_FTF;
 4146              		.loc 1 2020 0
 4147 000c 7B68     		ldr	r3, [r7, #4]
 4148 000e 1A68     		ldr	r2, [r3]
 4149 0010 41F21803 		movw	r3, #4120
 4150 0014 1344     		add	r3, r3, r2
 4151 0016 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccnfC67i.s 			page 110


 4152 0018 7A68     		ldr	r2, [r7, #4]
 4153 001a 1168     		ldr	r1, [r2]
 4154 001c 43F48012 		orr	r2, r3, #1048576
 4155 0020 41F21803 		movw	r3, #4120
 4156 0024 0B44     		add	r3, r3, r1
 4157 0026 1A60     		str	r2, [r3]
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 4158              		.loc 1 2024 0
 4159 0028 7B68     		ldr	r3, [r7, #4]
 4160 002a 1A68     		ldr	r2, [r3]
 4161 002c 41F21803 		movw	r3, #4120
 4162 0030 1344     		add	r3, r3, r2
 4163 0032 1B68     		ldr	r3, [r3]
 4164 0034 FB60     		str	r3, [r7, #12]
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 4165              		.loc 1 2025 0
 4166 0036 0120     		movs	r0, #1
 4167 0038 FFF7FEFF 		bl	HAL_Delay
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
 4168              		.loc 1 2026 0
 4169 003c 7B68     		ldr	r3, [r7, #4]
 4170 003e 1968     		ldr	r1, [r3]
 4171 0040 FA68     		ldr	r2, [r7, #12]
 4172 0042 41F21803 		movw	r3, #4120
 4173 0046 0B44     		add	r3, r3, r1
 4174 0048 1A60     		str	r2, [r3]
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 4175              		.loc 1 2027 0
 4176 004a 00BF     		nop
 4177 004c 1037     		adds	r7, r7, #16
 4178              	.LCFI169:
 4179              		.cfi_def_cfa_offset 8
 4180 004e BD46     		mov	sp, r7
 4181              	.LCFI170:
 4182              		.cfi_def_cfa_register 13
 4183              		@ sp needed
 4184 0050 80BD     		pop	{r7, pc}
 4185              		.cfi_endproc
 4186              	.LFE168:
 4188              		.text
 4189              	.Letext0:
 4190              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdint-gcc.h"
 4191              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 4192              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4193              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 4194              		.file 6 "/usr/include/newlib/sys/lock.h"
 4195              		.file 7 "/usr/include/newlib/sys/_types.h"
 4196              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 4197              		.file 9 "/usr/include/newlib/sys/reent.h"
 4198              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4199              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4200              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
ARM GAS  /tmp/ccnfC67i.s 			page 111


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_eth.c
     /tmp/ccnfC67i.s:18     .text.HAL_ETH_Init:0000000000000000 $t
     /tmp/ccnfC67i.s:25     .text.HAL_ETH_Init:0000000000000000 HAL_ETH_Init
     /tmp/ccnfC67i.s:884    .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/ccnfC67i.s:2058   .text.HAL_ETH_WritePHYRegister:0000000000000000 HAL_ETH_WritePHYRegister
     /tmp/ccnfC67i.s:2995   .text.ETH_MACDMAConfig:0000000000000000 ETH_MACDMAConfig
     /tmp/ccnfC67i.s:1908   .text.HAL_ETH_ReadPHYRegister:0000000000000000 HAL_ETH_ReadPHYRegister
     /tmp/ccnfC67i.s:432    .text.HAL_ETH_Init:00000000000002b8 $d
     /tmp/ccnfC67i.s:442    .text.HAL_ETH_Init:00000000000002d8 $t
     /tmp/ccnfC67i.s:505    .text.HAL_ETH_DeInit:0000000000000000 $t
     /tmp/ccnfC67i.s:512    .text.HAL_ETH_DeInit:0000000000000000 HAL_ETH_DeInit
     /tmp/ccnfC67i.s:927    .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
     /tmp/ccnfC67i.s:561    .text.HAL_ETH_DMATxDescListInit:0000000000000000 $t
     /tmp/ccnfC67i.s:568    .text.HAL_ETH_DMATxDescListInit:0000000000000000 HAL_ETH_DMATxDescListInit
     /tmp/ccnfC67i.s:717    .text.HAL_ETH_DMARxDescListInit:0000000000000000 $t
     /tmp/ccnfC67i.s:724    .text.HAL_ETH_DMARxDescListInit:0000000000000000 HAL_ETH_DMARxDescListInit
     /tmp/ccnfC67i.s:877    .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/ccnfC67i.s:920    .text.HAL_ETH_MspDeInit:0000000000000000 $t
     /tmp/ccnfC67i.s:963    .text.HAL_ETH_TransmitFrame:0000000000000000 $t
     /tmp/ccnfC67i.s:970    .text.HAL_ETH_TransmitFrame:0000000000000000 HAL_ETH_TransmitFrame
     /tmp/ccnfC67i.s:1251   .text.HAL_ETH_TransmitFrame:00000000000001cc $d
     /tmp/ccnfC67i.s:1257   .text.HAL_ETH_GetReceivedFrame:0000000000000000 $t
     /tmp/ccnfC67i.s:1264   .text.HAL_ETH_GetReceivedFrame:0000000000000000 HAL_ETH_GetReceivedFrame
     /tmp/ccnfC67i.s:1446   .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 $t
     /tmp/ccnfC67i.s:1453   .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 HAL_ETH_GetReceivedFrame_IT
     /tmp/ccnfC67i.s:1641   .text.HAL_ETH_IRQHandler:0000000000000000 $t
     /tmp/ccnfC67i.s:1648   .text.HAL_ETH_IRQHandler:0000000000000000 HAL_ETH_IRQHandler
     /tmp/ccnfC67i.s:1822   .text.HAL_ETH_RxCpltCallback:0000000000000000 HAL_ETH_RxCpltCallback
     /tmp/ccnfC67i.s:1779   .text.HAL_ETH_TxCpltCallback:0000000000000000 HAL_ETH_TxCpltCallback
     /tmp/ccnfC67i.s:1865   .text.HAL_ETH_ErrorCallback:0000000000000000 HAL_ETH_ErrorCallback
     /tmp/ccnfC67i.s:1772   .text.HAL_ETH_TxCpltCallback:0000000000000000 $t
     /tmp/ccnfC67i.s:1815   .text.HAL_ETH_RxCpltCallback:0000000000000000 $t
     /tmp/ccnfC67i.s:1858   .text.HAL_ETH_ErrorCallback:0000000000000000 $t
     /tmp/ccnfC67i.s:1901   .text.HAL_ETH_ReadPHYRegister:0000000000000000 $t
     /tmp/ccnfC67i.s:2051   .text.HAL_ETH_WritePHYRegister:0000000000000000 $t
     /tmp/ccnfC67i.s:2199   .text.HAL_ETH_Start:0000000000000000 $t
     /tmp/ccnfC67i.s:2206   .text.HAL_ETH_Start:0000000000000000 HAL_ETH_Start
     /tmp/ccnfC67i.s:3661   .text.ETH_MACTransmissionEnable:0000000000000000 ETH_MACTransmissionEnable
     /tmp/ccnfC67i.s:3785   .text.ETH_MACReceptionEnable:0000000000000000 ETH_MACReceptionEnable
     /tmp/ccnfC67i.s:4125   .text.ETH_FlushTransmitFIFO:0000000000000000 ETH_FlushTransmitFIFO
     /tmp/ccnfC67i.s:3909   .text.ETH_DMATransmissionEnable:0000000000000000 ETH_DMATransmissionEnable
     /tmp/ccnfC67i.s:4017   .text.ETH_DMAReceptionEnable:0000000000000000 ETH_DMAReceptionEnable
     /tmp/ccnfC67i.s:2281   .text.HAL_ETH_Stop:0000000000000000 $t
     /tmp/ccnfC67i.s:2288   .text.HAL_ETH_Stop:0000000000000000 HAL_ETH_Stop
     /tmp/ccnfC67i.s:3963   .text.ETH_DMATransmissionDisable:0000000000000000 ETH_DMATransmissionDisable
     /tmp/ccnfC67i.s:4071   .text.ETH_DMAReceptionDisable:0000000000000000 ETH_DMAReceptionDisable
     /tmp/ccnfC67i.s:3847   .text.ETH_MACReceptionDisable:0000000000000000 ETH_MACReceptionDisable
     /tmp/ccnfC67i.s:3723   .text.ETH_MACTransmissionDisable:0000000000000000 ETH_MACTransmissionDisable
     /tmp/ccnfC67i.s:2363   .text.HAL_ETH_ConfigMAC:0000000000000000 $t
     /tmp/ccnfC67i.s:2370   .text.HAL_ETH_ConfigMAC:0000000000000000 HAL_ETH_ConfigMAC
     /tmp/ccnfC67i.s:2724   .text.HAL_ETH_ConfigMAC:00000000000001f0 $d
     /tmp/ccnfC67i.s:2729   .text.HAL_ETH_ConfigDMA:0000000000000000 $t
     /tmp/ccnfC67i.s:2736   .text.HAL_ETH_ConfigDMA:0000000000000000 HAL_ETH_ConfigDMA
     /tmp/ccnfC67i.s:2937   .text.HAL_ETH_ConfigDMA:000000000000011c $d
     /tmp/ccnfC67i.s:2942   .text.HAL_ETH_GetState:0000000000000000 $t
     /tmp/ccnfC67i.s:2949   .text.HAL_ETH_GetState:0000000000000000 HAL_ETH_GetState
ARM GAS  /tmp/ccnfC67i.s 			page 112


     /tmp/ccnfC67i.s:2989   .text.ETH_MACDMAConfig:0000000000000000 $t
     /tmp/ccnfC67i.s:3569   .text.ETH_MACAddressConfig:0000000000000000 ETH_MACAddressConfig
     /tmp/ccnfC67i.s:3556   .text.ETH_MACDMAConfig:0000000000000388 $d
     /tmp/ccnfC67i.s:3563   .text.ETH_MACAddressConfig:0000000000000000 $t
     /tmp/ccnfC67i.s:3649   .text.ETH_MACAddressConfig:0000000000000068 $d
     /tmp/ccnfC67i.s:3655   .text.ETH_MACTransmissionEnable:0000000000000000 $t
     /tmp/ccnfC67i.s:3717   .text.ETH_MACTransmissionDisable:0000000000000000 $t
     /tmp/ccnfC67i.s:3779   .text.ETH_MACReceptionEnable:0000000000000000 $t
     /tmp/ccnfC67i.s:3841   .text.ETH_MACReceptionDisable:0000000000000000 $t
     /tmp/ccnfC67i.s:3903   .text.ETH_DMATransmissionEnable:0000000000000000 $t
     /tmp/ccnfC67i.s:3957   .text.ETH_DMATransmissionDisable:0000000000000000 $t
     /tmp/ccnfC67i.s:4011   .text.ETH_DMAReceptionEnable:0000000000000000 $t
     /tmp/ccnfC67i.s:4065   .text.ETH_DMAReceptionDisable:0000000000000000 $t
     /tmp/ccnfC67i.s:4119   .text.ETH_FlushTransmitFIFO:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCC_GetHCLKFreq
HAL_Delay
