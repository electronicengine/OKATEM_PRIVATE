ARM GAS  /tmp/cc4JMtpC.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_timebase_TIM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	htim4,64,4
  18              		.global	uwIncrementState
  19              		.section	.bss.uwIncrementState,"aw",%nobits
  20              		.align	2
  23              	uwIncrementState:
  24 0000 00000000 		.space	4
  25              		.section	.text.HAL_InitTick,"ax",%progbits
  26              		.align	1
  27              		.global	HAL_InitTick
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	HAL_InitTick:
  34              	.LFB136:
  35              		.file 1 "Src/stm32f7xx_hal_timebase_TIM.c"
   1:Src/stm32f7xx_hal_timebase_TIM.c **** /**
   2:Src/stm32f7xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Src/stm32f7xx_hal_timebase_TIM.c ****   * @file    stm32f7xx_hal_timebase_TIM.c 
   4:Src/stm32f7xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Src/stm32f7xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Src/stm32f7xx_hal_timebase_TIM.c ****   * This notice applies to any and all portions of this file
   7:Src/stm32f7xx_hal_timebase_TIM.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/stm32f7xx_hal_timebase_TIM.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/stm32f7xx_hal_timebase_TIM.c ****   * inserted by the user or by software development tools
  10:Src/stm32f7xx_hal_timebase_TIM.c ****   * are owned by their respective copyright owners.
  11:Src/stm32f7xx_hal_timebase_TIM.c ****   *
  12:Src/stm32f7xx_hal_timebase_TIM.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/stm32f7xx_hal_timebase_TIM.c ****   * All rights reserved.
  14:Src/stm32f7xx_hal_timebase_TIM.c ****   *
  15:Src/stm32f7xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/stm32f7xx_hal_timebase_TIM.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/stm32f7xx_hal_timebase_TIM.c ****   *
  18:Src/stm32f7xx_hal_timebase_TIM.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/stm32f7xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer.
  20:Src/stm32f7xx_hal_timebase_TIM.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f7xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f7xx_hal_timebase_TIM.c ****   *    and/or other materials provided with the distribution.
  23:Src/stm32f7xx_hal_timebase_TIM.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/stm32f7xx_hal_timebase_TIM.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/stm32f7xx_hal_timebase_TIM.c ****   *    derived from this software without specific written permission.
ARM GAS  /tmp/cc4JMtpC.s 			page 2


  26:Src/stm32f7xx_hal_timebase_TIM.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/stm32f7xx_hal_timebase_TIM.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/stm32f7xx_hal_timebase_TIM.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/stm32f7xx_hal_timebase_TIM.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/stm32f7xx_hal_timebase_TIM.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/stm32f7xx_hal_timebase_TIM.c ****   *    this license. 
  32:Src/stm32f7xx_hal_timebase_TIM.c ****   *
  33:Src/stm32f7xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/stm32f7xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/stm32f7xx_hal_timebase_TIM.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/stm32f7xx_hal_timebase_TIM.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/stm32f7xx_hal_timebase_TIM.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/stm32f7xx_hal_timebase_TIM.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/stm32f7xx_hal_timebase_TIM.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/stm32f7xx_hal_timebase_TIM.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/stm32f7xx_hal_timebase_TIM.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/stm32f7xx_hal_timebase_TIM.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/stm32f7xx_hal_timebase_TIM.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/stm32f7xx_hal_timebase_TIM.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/stm32f7xx_hal_timebase_TIM.c ****   *
  46:Src/stm32f7xx_hal_timebase_TIM.c ****   ******************************************************************************
  47:Src/stm32f7xx_hal_timebase_TIM.c ****   */
  48:Src/stm32f7xx_hal_timebase_TIM.c **** 
  49:Src/stm32f7xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/stm32f7xx_hal_timebase_TIM.c **** #include "stm32f7xx_hal.h"
  51:Src/stm32f7xx_hal_timebase_TIM.c **** #include "stm32f7xx_hal_tim.h"
  52:Src/stm32f7xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  53:Src/stm32f7xx_hal_timebase_TIM.c ****   * @{
  54:Src/stm32f7xx_hal_timebase_TIM.c ****   */
  55:Src/stm32f7xx_hal_timebase_TIM.c **** 
  56:Src/stm32f7xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  57:Src/stm32f7xx_hal_timebase_TIM.c ****   * @{
  58:Src/stm32f7xx_hal_timebase_TIM.c ****   */ 
  59:Src/stm32f7xx_hal_timebase_TIM.c **** 
  60:Src/stm32f7xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  61:Src/stm32f7xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  62:Src/stm32f7xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  63:Src/stm32f7xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f7xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim4; 
  65:Src/stm32f7xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  66:Src/stm32f7xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  67:Src/stm32f7xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  68:Src/stm32f7xx_hal_timebase_TIM.c **** 
  69:Src/stm32f7xx_hal_timebase_TIM.c **** /**
  70:Src/stm32f7xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM4 as a time base source. 
  71:Src/stm32f7xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  72:Src/stm32f7xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  73:Src/stm32f7xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  74:Src/stm32f7xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  75:Src/stm32f7xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  76:Src/stm32f7xx_hal_timebase_TIM.c ****   * @retval HAL status
  77:Src/stm32f7xx_hal_timebase_TIM.c ****   */
  78:Src/stm32f7xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  79:Src/stm32f7xx_hal_timebase_TIM.c **** {
  36              		.loc 1 79 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 48
ARM GAS  /tmp/cc4JMtpC.s 			page 3


  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 8CB0     		sub	sp, sp, #48
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 56
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  80:Src/stm32f7xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  81:Src/stm32f7xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
  52              		.loc 1 81 0
  53 0008 0023     		movs	r3, #0
  54 000a FB62     		str	r3, [r7, #44]
  82:Src/stm32f7xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  55              		.loc 1 82 0
  56 000c 0023     		movs	r3, #0
  57 000e BB62     		str	r3, [r7, #40]
  83:Src/stm32f7xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  84:Src/stm32f7xx_hal_timebase_TIM.c ****   
  85:Src/stm32f7xx_hal_timebase_TIM.c ****   /*Configure the TIM4 IRQ priority */
  86:Src/stm32f7xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM4_IRQn, TickPriority ,0); 
  58              		.loc 1 86 0
  59 0010 0022     		movs	r2, #0
  60 0012 7968     		ldr	r1, [r7, #4]
  61 0014 1E20     		movs	r0, #30
  62 0016 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  87:Src/stm32f7xx_hal_timebase_TIM.c ****   
  88:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Enable the TIM4 global Interrupt */
  89:Src/stm32f7xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM4_IRQn); 
  63              		.loc 1 89 0
  64 001a 1E20     		movs	r0, #30
  65 001c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  66              	.LBB2:
  90:Src/stm32f7xx_hal_timebase_TIM.c ****   
  91:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Enable TIM4 clock */
  92:Src/stm32f7xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM4_CLK_ENABLE();
  67              		.loc 1 92 0
  68 0020 1F4A     		ldr	r2, .L5
  69 0022 1F4B     		ldr	r3, .L5
  70 0024 1B6C     		ldr	r3, [r3, #64]
  71 0026 43F00403 		orr	r3, r3, #4
  72 002a 1364     		str	r3, [r2, #64]
  73 002c 1C4B     		ldr	r3, .L5
  74 002e 1B6C     		ldr	r3, [r3, #64]
  75 0030 03F00403 		and	r3, r3, #4
  76 0034 FB60     		str	r3, [r7, #12]
  77 0036 FB68     		ldr	r3, [r7, #12]
  78              	.LBE2:
  93:Src/stm32f7xx_hal_timebase_TIM.c ****   
  94:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Get clock configuration */
  95:Src/stm32f7xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  79              		.loc 1 95 0
ARM GAS  /tmp/cc4JMtpC.s 			page 4


  80 0038 07F11002 		add	r2, r7, #16
  81 003c 07F11403 		add	r3, r7, #20
  82 0040 1146     		mov	r1, r2
  83 0042 1846     		mov	r0, r3
  84 0044 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  96:Src/stm32f7xx_hal_timebase_TIM.c ****   
  97:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Compute TIM4 clock */
  98:Src/stm32f7xx_hal_timebase_TIM.c ****   uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  85              		.loc 1 98 0
  86 0048 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  87 004c 0346     		mov	r3, r0
  88 004e 5B00     		lsls	r3, r3, #1
  89 0050 FB62     		str	r3, [r7, #44]
  99:Src/stm32f7xx_hal_timebase_TIM.c ****    
 100:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM4 counter clock equal to 1MHz */
 101:Src/stm32f7xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  90              		.loc 1 101 0
  91 0052 FB6A     		ldr	r3, [r7, #44]
  92 0054 134A     		ldr	r2, .L5+4
  93 0056 A2FB0323 		umull	r2, r3, r2, r3
  94 005a 9B0C     		lsrs	r3, r3, #18
  95 005c 013B     		subs	r3, r3, #1
  96 005e BB62     		str	r3, [r7, #40]
 102:Src/stm32f7xx_hal_timebase_TIM.c ****   
 103:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Initialize TIM4 */
 104:Src/stm32f7xx_hal_timebase_TIM.c ****   htim4.Instance = TIM4;
  97              		.loc 1 104 0
  98 0060 114B     		ldr	r3, .L5+8
  99 0062 124A     		ldr	r2, .L5+12
 100 0064 1A60     		str	r2, [r3]
 105:Src/stm32f7xx_hal_timebase_TIM.c ****   
 106:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
 107:Src/stm32f7xx_hal_timebase_TIM.c ****   + Period = [(TIM4CLK/1000) - 1]. to have a (1/1000) s time base.
 108:Src/stm32f7xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 109:Src/stm32f7xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 110:Src/stm32f7xx_hal_timebase_TIM.c ****   + Counter direction = Up
 111:Src/stm32f7xx_hal_timebase_TIM.c ****   */
 112:Src/stm32f7xx_hal_timebase_TIM.c ****   htim4.Init.Period = (1000000 / 1000) - 1;
 101              		.loc 1 112 0
 102 0066 104B     		ldr	r3, .L5+8
 103 0068 40F2E732 		movw	r2, #999
 104 006c DA60     		str	r2, [r3, #12]
 113:Src/stm32f7xx_hal_timebase_TIM.c ****   htim4.Init.Prescaler = uwPrescalerValue;
 105              		.loc 1 113 0
 106 006e 0E4A     		ldr	r2, .L5+8
 107 0070 BB6A     		ldr	r3, [r7, #40]
 108 0072 5360     		str	r3, [r2, #4]
 114:Src/stm32f7xx_hal_timebase_TIM.c ****   htim4.Init.ClockDivision = 0;
 109              		.loc 1 114 0
 110 0074 0C4B     		ldr	r3, .L5+8
 111 0076 0022     		movs	r2, #0
 112 0078 1A61     		str	r2, [r3, #16]
 115:Src/stm32f7xx_hal_timebase_TIM.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 113              		.loc 1 115 0
 114 007a 0B4B     		ldr	r3, .L5+8
 115 007c 0022     		movs	r2, #0
 116 007e 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc4JMtpC.s 			page 5


 116:Src/stm32f7xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim4) == HAL_OK)
 117              		.loc 1 116 0
 118 0080 0948     		ldr	r0, .L5+8
 119 0082 FFF7FEFF 		bl	HAL_TIM_Base_Init
 120 0086 0346     		mov	r3, r0
 121 0088 002B     		cmp	r3, #0
 122 008a 04D1     		bne	.L2
 117:Src/stm32f7xx_hal_timebase_TIM.c ****   {
 118:Src/stm32f7xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 119:Src/stm32f7xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim4);
 123              		.loc 1 119 0
 124 008c 0648     		ldr	r0, .L5+8
 125 008e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 126 0092 0346     		mov	r3, r0
 127 0094 00E0     		b	.L4
 128              	.L2:
 120:Src/stm32f7xx_hal_timebase_TIM.c ****   }
 121:Src/stm32f7xx_hal_timebase_TIM.c ****   
 122:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Return function status */
 123:Src/stm32f7xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 129              		.loc 1 123 0
 130 0096 0123     		movs	r3, #1
 131              	.L4:
 124:Src/stm32f7xx_hal_timebase_TIM.c **** }
 132              		.loc 1 124 0 discriminator 1
 133 0098 1846     		mov	r0, r3
 134 009a 3037     		adds	r7, r7, #48
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 8
 137 009c BD46     		mov	sp, r7
 138              	.LCFI4:
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 009e 80BD     		pop	{r7, pc}
 142              	.L6:
 143              		.align	2
 144              	.L5:
 145 00a0 00380240 		.word	1073887232
 146 00a4 83DE1B43 		.word	1125899907
 147 00a8 00000000 		.word	htim4
 148 00ac 00080040 		.word	1073743872
 149              		.cfi_endproc
 150              	.LFE136:
 152              		.section	.text.HAL_SuspendTick,"ax",%progbits
 153              		.align	1
 154              		.global	HAL_SuspendTick
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	HAL_SuspendTick:
 161              	.LFB137:
 125:Src/stm32f7xx_hal_timebase_TIM.c **** 
 126:Src/stm32f7xx_hal_timebase_TIM.c **** /**
 127:Src/stm32f7xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
 128:Src/stm32f7xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM4 update interrupt.
 129:Src/stm32f7xx_hal_timebase_TIM.c ****   * @param  None
ARM GAS  /tmp/cc4JMtpC.s 			page 6


 130:Src/stm32f7xx_hal_timebase_TIM.c ****   * @retval None
 131:Src/stm32f7xx_hal_timebase_TIM.c ****   */
 132:Src/stm32f7xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 133:Src/stm32f7xx_hal_timebase_TIM.c **** {
 162              		.loc 1 133 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              	.LCFI5:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 7, -4
 171 0002 00AF     		add	r7, sp, #0
 172              	.LCFI6:
 173              		.cfi_def_cfa_register 7
 134:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Disable TIM4 update Interrupt */
 135:Src/stm32f7xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim4, TIM_IT_UPDATE);                                                  
 174              		.loc 1 135 0
 175 0004 064B     		ldr	r3, .L8
 176 0006 1B68     		ldr	r3, [r3]
 177 0008 054A     		ldr	r2, .L8
 178 000a 1268     		ldr	r2, [r2]
 179 000c D268     		ldr	r2, [r2, #12]
 180 000e 22F00102 		bic	r2, r2, #1
 181 0012 DA60     		str	r2, [r3, #12]
 136:Src/stm32f7xx_hal_timebase_TIM.c **** }
 182              		.loc 1 136 0
 183 0014 00BF     		nop
 184 0016 BD46     		mov	sp, r7
 185              	.LCFI7:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 0018 5DF8047B 		ldr	r7, [sp], #4
 189              	.LCFI8:
 190              		.cfi_restore 7
 191              		.cfi_def_cfa_offset 0
 192 001c 7047     		bx	lr
 193              	.L9:
 194 001e 00BF     		.align	2
 195              	.L8:
 196 0020 00000000 		.word	htim4
 197              		.cfi_endproc
 198              	.LFE137:
 200              		.section	.text.HAL_ResumeTick,"ax",%progbits
 201              		.align	1
 202              		.global	HAL_ResumeTick
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	HAL_ResumeTick:
 209              	.LFB138:
 137:Src/stm32f7xx_hal_timebase_TIM.c **** 
 138:Src/stm32f7xx_hal_timebase_TIM.c **** /**
 139:Src/stm32f7xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 140:Src/stm32f7xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM4 update interrupt.
ARM GAS  /tmp/cc4JMtpC.s 			page 7


 141:Src/stm32f7xx_hal_timebase_TIM.c ****   * @param  None
 142:Src/stm32f7xx_hal_timebase_TIM.c ****   * @retval None
 143:Src/stm32f7xx_hal_timebase_TIM.c ****   */
 144:Src/stm32f7xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 145:Src/stm32f7xx_hal_timebase_TIM.c **** {
 210              		.loc 1 145 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              	.LCFI9:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 0002 00AF     		add	r7, sp, #0
 220              	.LCFI10:
 221              		.cfi_def_cfa_register 7
 146:Src/stm32f7xx_hal_timebase_TIM.c ****   /* Enable TIM4 Update interrupt */
 147:Src/stm32f7xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim4, TIM_IT_UPDATE);
 222              		.loc 1 147 0
 223 0004 064B     		ldr	r3, .L11
 224 0006 1B68     		ldr	r3, [r3]
 225 0008 054A     		ldr	r2, .L11
 226 000a 1268     		ldr	r2, [r2]
 227 000c D268     		ldr	r2, [r2, #12]
 228 000e 42F00102 		orr	r2, r2, #1
 229 0012 DA60     		str	r2, [r3, #12]
 148:Src/stm32f7xx_hal_timebase_TIM.c **** }
 230              		.loc 1 148 0
 231 0014 00BF     		nop
 232 0016 BD46     		mov	sp, r7
 233              	.LCFI11:
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 0018 5DF8047B 		ldr	r7, [sp], #4
 237              	.LCFI12:
 238              		.cfi_restore 7
 239              		.cfi_def_cfa_offset 0
 240 001c 7047     		bx	lr
 241              	.L12:
 242 001e 00BF     		.align	2
 243              	.L11:
 244 0020 00000000 		.word	htim4
 245              		.cfi_endproc
 246              	.LFE138:
 248              		.text
 249              	.Letext0:
 250              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 251              		.file 3 "/usr/include/newlib/sys/lock.h"
 252              		.file 4 "/usr/include/newlib/sys/_types.h"
 253              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 254              		.file 6 "/usr/include/newlib/sys/reent.h"
 255              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 256              		.file 8 "Drivers/CMSIS/Include/core_cm7.h"
 257              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 258              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 259              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
ARM GAS  /tmp/cc4JMtpC.s 			page 8


 260              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 261              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 262              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
ARM GAS  /tmp/cc4JMtpC.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_timebase_TIM.c
                            *COM*:0000000000000040 htim4
     /tmp/cc4JMtpC.s:23     .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/cc4JMtpC.s:20     .bss.uwIncrementState:0000000000000000 $d
     /tmp/cc4JMtpC.s:26     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc4JMtpC.s:33     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc4JMtpC.s:145    .text.HAL_InitTick:00000000000000a0 $d
     /tmp/cc4JMtpC.s:153    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc4JMtpC.s:160    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc4JMtpC.s:196    .text.HAL_SuspendTick:0000000000000020 $d
     /tmp/cc4JMtpC.s:201    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc4JMtpC.s:208    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc4JMtpC.s:244    .text.HAL_ResumeTick:0000000000000020 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
