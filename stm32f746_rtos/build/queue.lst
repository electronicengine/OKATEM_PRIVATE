ARM GAS  /tmp/ccwLwC1u.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	xQueueRegistry,64,4
  18              		.section	.text.xQueueGenericReset,"ax",%progbits
  19              		.align	1
  20              		.global	xQueueGenericReset
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	xQueueGenericReset:
  27              	.LFB143:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    is the industry's de facto standard.                               *
ARM GAS  /tmp/ccwLwC1u.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
ARM GAS  /tmp/ccwLwC1u.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
ARM GAS  /tmp/ccwLwC1u.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvUnlockQueue( Queue_t * const pxQueue );
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue );
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvIsQueueFull( const Queue_t *pxQueue );
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvIt
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffe
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_FUNCTION static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, c
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBase
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_FUNCTION static void prvInitialiseMutex( Queue_t *pxNewQueue );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccwLwC1u.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  29              		.loc 1 280 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 3960     		str	r1, [r7]
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
  46              		.loc 1 281 0
  47 000a 7B68     		ldr	r3, [r7, #4]
  48 000c FB60     		str	r3, [r7, #12]
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
  49              		.loc 1 283 0
  50 000e FB68     		ldr	r3, [r7, #12]
  51 0010 002B     		cmp	r3, #0
  52 0012 0BD1     		bne	.L2
  53              	.LBB76:
  54              	.LBB77:
  55              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
ARM GAS  /tmp/ccwLwC1u.s 			page 7


   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 8


  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 9


 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
ARM GAS  /tmp/ccwLwC1u.s 			page 10


 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
ARM GAS  /tmp/ccwLwC1u.s 			page 11


 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
  56              		.loc 2 237 0 discriminator 1
  57              		.syntax unified
  58              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
  59 0014 4FF05003 			mov r3, #80												
  60 0018 72B6     		cpsid i													
  61 001a 83F31188 		msr basepri, r3											
  62 001e BFF36F8F 		isb														
  63 0022 BFF34F8F 		dsb														
  64 0026 62B6     		cpsie i													
  65              	
  66              	@ 0 "" 2
  67              		.thumb
  68              		.syntax unified
  69 0028 BB60     		str	r3, [r7, #8]
  70              	.L3:
  71              	.LBE77:
  72              	.LBE76:
  73              		.loc 1 283 0 discriminator 1
  74 002a FEE7     		b	.L3
  75              	.L2:
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  76              		.loc 1 285 0
  77 002c FFF7FEFF 		bl	vPortEnterCritical
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  78              		.loc 1 287 0
  79 0030 FB68     		ldr	r3, [r7, #12]
  80 0032 1A68     		ldr	r2, [r3]
  81 0034 FB68     		ldr	r3, [r7, #12]
  82 0036 DB6B     		ldr	r3, [r3, #60]
  83 0038 F968     		ldr	r1, [r7, #12]
  84 003a 096C     		ldr	r1, [r1, #64]
  85 003c 01FB03F3 		mul	r3, r1, r3
  86 0040 1A44     		add	r2, r2, r3
  87 0042 FB68     		ldr	r3, [r7, #12]
  88 0044 5A60     		str	r2, [r3, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  89              		.loc 1 288 0
  90 0046 FB68     		ldr	r3, [r7, #12]
  91 0048 0022     		movs	r2, #0
  92 004a 9A63     		str	r2, [r3, #56]
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
  93              		.loc 1 289 0
  94 004c FB68     		ldr	r3, [r7, #12]
  95 004e 1A68     		ldr	r2, [r3]
  96 0050 FB68     		ldr	r3, [r7, #12]
  97 0052 9A60     		str	r2, [r3, #8]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
  98              		.loc 1 290 0
  99 0054 FB68     		ldr	r3, [r7, #12]
 100 0056 1A68     		ldr	r2, [r3]
 101 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwLwC1u.s 			page 12


 102 005a DB6B     		ldr	r3, [r3, #60]
 103 005c 013B     		subs	r3, r3, #1
 104 005e F968     		ldr	r1, [r7, #12]
 105 0060 096C     		ldr	r1, [r1, #64]
 106 0062 01FB03F3 		mul	r3, r1, r3
 107 0066 1A44     		add	r2, r2, r3
 108 0068 FB68     		ldr	r3, [r7, #12]
 109 006a DA60     		str	r2, [r3, #12]
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 110              		.loc 1 291 0
 111 006c FB68     		ldr	r3, [r7, #12]
 112 006e FF22     		movs	r2, #255
 113 0070 83F84420 		strb	r2, [r3, #68]
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 114              		.loc 1 292 0
 115 0074 FB68     		ldr	r3, [r7, #12]
 116 0076 FF22     		movs	r2, #255
 117 0078 83F84520 		strb	r2, [r3, #69]
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 118              		.loc 1 294 0
 119 007c 3B68     		ldr	r3, [r7]
 120 007e 002B     		cmp	r3, #0
 121 0080 14D1     		bne	.L4
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 122              		.loc 1 301 0
 123 0082 FB68     		ldr	r3, [r7, #12]
 124 0084 1B69     		ldr	r3, [r3, #16]
 125 0086 002B     		cmp	r3, #0
 126 0088 1AD0     		beq	.L5
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 127              		.loc 1 303 0
 128 008a FB68     		ldr	r3, [r7, #12]
 129 008c 1033     		adds	r3, r3, #16
 130 008e 1846     		mov	r0, r3
 131 0090 FFF7FEFF 		bl	xTaskRemoveFromEventList
 132 0094 0346     		mov	r3, r0
 133 0096 002B     		cmp	r3, #0
 134 0098 12D0     		beq	.L5
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 135              		.loc 1 305 0
 136 009a 0D4B     		ldr	r3, .L7
 137 009c 4FF08052 		mov	r2, #268435456
 138 00a0 1A60     		str	r2, [r3]
 139              		.syntax unified
 140              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 141 00a2 BFF34F8F 		dsb
 142              	@ 0 "" 2
 143              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
ARM GAS  /tmp/ccwLwC1u.s 			page 13


 144 00a6 BFF36F8F 		isb
 145              	@ 0 "" 2
 146              		.thumb
 147              		.syntax unified
 148 00aa 09E0     		b	.L5
 149              	.L4:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 150              		.loc 1 320 0
 151 00ac FB68     		ldr	r3, [r7, #12]
 152 00ae 1033     		adds	r3, r3, #16
 153 00b0 1846     		mov	r0, r3
 154 00b2 FFF7FEFF 		bl	vListInitialise
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 155              		.loc 1 321 0
 156 00b6 FB68     		ldr	r3, [r7, #12]
 157 00b8 2433     		adds	r3, r3, #36
 158 00ba 1846     		mov	r0, r3
 159 00bc FFF7FEFF 		bl	vListInitialise
 160              	.L5:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 161              		.loc 1 324 0
 162 00c0 FFF7FEFF 		bl	vPortExitCritical
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 163              		.loc 1 328 0
 164 00c4 0123     		movs	r3, #1
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 165              		.loc 1 329 0
 166 00c6 1846     		mov	r0, r3
 167 00c8 1037     		adds	r7, r7, #16
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170 00ca BD46     		mov	sp, r7
 171              	.LCFI4:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 00cc 80BD     		pop	{r7, pc}
 175              	.L8:
 176 00ce 00BF     		.align	2
ARM GAS  /tmp/ccwLwC1u.s 			page 14


 177              	.L7:
 178 00d0 04ED00E0 		.word	-536810236
 179              		.cfi_endproc
 180              	.LFE143:
 182              		.section	.text.xQueueGenericCreate,"ax",%progbits
 183              		.align	1
 184              		.global	xQueueGenericCreate
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	xQueueGenericCreate:
 191              	.LFB144:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
ARM GAS  /tmp/ccwLwC1u.s 			page 15


 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 192              		.loc 1 387 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 32
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              	.LCFI5:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 8AB0     		sub	sp, sp, #40
 202              	.LCFI6:
 203              		.cfi_def_cfa_offset 48
 204 0004 02AF     		add	r7, sp, #8
 205              	.LCFI7:
 206              		.cfi_def_cfa 7, 40
 207 0006 F860     		str	r0, [r7, #12]
 208 0008 B960     		str	r1, [r7, #8]
 209 000a 1346     		mov	r3, r2
 210 000c FB71     		strb	r3, [r7, #7]
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 211              		.loc 1 392 0
 212 000e FB68     		ldr	r3, [r7, #12]
 213 0010 002B     		cmp	r3, #0
 214 0012 0BD1     		bne	.L10
 215              	.LBB78:
 216              	.LBB79:
 217              		.loc 2 237 0 discriminator 1
 218              		.syntax unified
 219              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 220 0014 4FF05003 			mov r3, #80												
 221 0018 72B6     		cpsid i													
 222 001a 83F31188 		msr basepri, r3											
 223 001e BFF36F8F 		isb														
 224 0022 BFF34F8F 		dsb														
 225 0026 62B6     		cpsie i													
 226              	
 227              	@ 0 "" 2
 228              		.thumb
 229              		.syntax unified
ARM GAS  /tmp/ccwLwC1u.s 			page 16


 230 0028 3B61     		str	r3, [r7, #16]
 231              	.L11:
 232              	.LBE79:
 233              	.LBE78:
 234              		.loc 1 392 0 discriminator 1
 235 002a FEE7     		b	.L11
 236              	.L10:
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 237              		.loc 1 394 0
 238 002c BB68     		ldr	r3, [r7, #8]
 239 002e 002B     		cmp	r3, #0
 240 0030 02D1     		bne	.L12
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 241              		.loc 1 397 0
 242 0032 0023     		movs	r3, #0
 243 0034 FB61     		str	r3, [r7, #28]
 244 0036 04E0     		b	.L13
 245              	.L12:
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 246              		.loc 1 403 0
 247 0038 FB68     		ldr	r3, [r7, #12]
 248 003a BA68     		ldr	r2, [r7, #8]
 249 003c 02FB03F3 		mul	r3, r2, r3
 250 0040 FB61     		str	r3, [r7, #28]
 251              	.L13:
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 252              		.loc 1 406 0
 253 0042 FB69     		ldr	r3, [r7, #28]
 254 0044 4833     		adds	r3, r3, #72
 255 0046 1846     		mov	r0, r3
 256 0048 FFF7FEFF 		bl	pvPortMalloc
 257 004c B861     		str	r0, [r7, #24]
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 258              		.loc 1 408 0
 259 004e BB69     		ldr	r3, [r7, #24]
 260 0050 002B     		cmp	r3, #0
 261 0052 0BD0     		beq	.L14
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 262              		.loc 1 412 0
 263 0054 BB69     		ldr	r3, [r7, #24]
 264 0056 4833     		adds	r3, r3, #72
 265 0058 7B61     		str	r3, [r7, #20]
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 17


 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 266              		.loc 1 423 0
 267 005a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 268 005c BB69     		ldr	r3, [r7, #24]
 269 005e 0093     		str	r3, [sp]
 270 0060 1346     		mov	r3, r2
 271 0062 7A69     		ldr	r2, [r7, #20]
 272 0064 B968     		ldr	r1, [r7, #8]
 273 0066 F868     		ldr	r0, [r7, #12]
 274 0068 FFF7FEFF 		bl	prvInitialiseNewQueue
 275              	.L14:
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 276              		.loc 1 426 0
 277 006c BB69     		ldr	r3, [r7, #24]
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 278              		.loc 1 427 0
 279 006e 1846     		mov	r0, r3
 280 0070 2037     		adds	r7, r7, #32
 281              	.LCFI8:
 282              		.cfi_def_cfa_offset 8
 283 0072 BD46     		mov	sp, r7
 284              	.LCFI9:
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 0074 80BD     		pop	{r7, pc}
 288              		.cfi_endproc
 289              	.LFE144:
 291              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	prvInitialiseNewQueue:
 299              	.LFB145:
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 300              		.loc 1 433 0
 301              		.cfi_startproc
 302              		@ args = 4, pretend = 0, frame = 16
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccwLwC1u.s 			page 18


 305              	.LCFI10:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 84B0     		sub	sp, sp, #16
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 24
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI12:
 314              		.cfi_def_cfa_register 7
 315 0006 F860     		str	r0, [r7, #12]
 316 0008 B960     		str	r1, [r7, #8]
 317 000a 7A60     		str	r2, [r7, #4]
 318 000c FB70     		strb	r3, [r7, #3]
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 319              		.loc 1 438 0
 320 000e BB68     		ldr	r3, [r7, #8]
 321 0010 002B     		cmp	r3, #0
 322 0012 03D1     		bne	.L17
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 323              		.loc 1 444 0
 324 0014 BB69     		ldr	r3, [r7, #24]
 325 0016 BA69     		ldr	r2, [r7, #24]
 326 0018 1A60     		str	r2, [r3]
 327 001a 02E0     		b	.L18
 328              	.L17:
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 329              		.loc 1 449 0
 330 001c BB69     		ldr	r3, [r7, #24]
 331 001e 7A68     		ldr	r2, [r7, #4]
 332 0020 1A60     		str	r2, [r3]
 333              	.L18:
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 334              		.loc 1 454 0
 335 0022 BB69     		ldr	r3, [r7, #24]
 336 0024 FA68     		ldr	r2, [r7, #12]
 337 0026 DA63     		str	r2, [r3, #60]
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 338              		.loc 1 455 0
 339 0028 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccwLwC1u.s 			page 19


 340 002a BA68     		ldr	r2, [r7, #8]
 341 002c 1A64     		str	r2, [r3, #64]
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 342              		.loc 1 456 0
 343 002e 0121     		movs	r1, #1
 344 0030 B869     		ldr	r0, [r7, #24]
 345 0032 FFF7FEFF 		bl	xQueueGenericReset
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 346              		.loc 1 471 0
 347 0036 00BF     		nop
 348 0038 1037     		adds	r7, r7, #16
 349              	.LCFI13:
 350              		.cfi_def_cfa_offset 8
 351 003a BD46     		mov	sp, r7
 352              	.LCFI14:
 353              		.cfi_def_cfa_register 13
 354              		@ sp needed
 355 003c 80BD     		pop	{r7, pc}
 356              		.cfi_endproc
 357              	.LFE145:
 359              		.section	.text.prvInitialiseMutex,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	prvInitialiseMutex:
 367              	.LFB146:
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 368              		.loc 1 477 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              	.LCFI15:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwLwC1u.s 			page 20


 377 0002 82B0     		sub	sp, sp, #8
 378              	.LCFI16:
 379              		.cfi_def_cfa_offset 16
 380 0004 00AF     		add	r7, sp, #0
 381              	.LCFI17:
 382              		.cfi_def_cfa_register 7
 383 0006 7860     		str	r0, [r7, #4]
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 384              		.loc 1 478 0
 385 0008 7B68     		ldr	r3, [r7, #4]
 386 000a 002B     		cmp	r3, #0
 387 000c 0ED0     		beq	.L21
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 388              		.loc 1 484 0
 389 000e 7B68     		ldr	r3, [r7, #4]
 390 0010 0022     		movs	r2, #0
 391 0012 5A60     		str	r2, [r3, #4]
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 392              		.loc 1 485 0
 393 0014 7B68     		ldr	r3, [r7, #4]
 394 0016 0022     		movs	r2, #0
 395 0018 1A60     		str	r2, [r3]
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 396              		.loc 1 488 0
 397 001a 7B68     		ldr	r3, [r7, #4]
 398 001c 0022     		movs	r2, #0
 399 001e DA60     		str	r2, [r3, #12]
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 400              		.loc 1 493 0
 401 0020 0023     		movs	r3, #0
 402 0022 0022     		movs	r2, #0
 403 0024 0021     		movs	r1, #0
 404 0026 7868     		ldr	r0, [r7, #4]
 405 0028 FFF7FEFF 		bl	xQueueGenericSend
 406              	.L21:
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 407              		.loc 1 499 0
 408 002c 00BF     		nop
 409 002e 0837     		adds	r7, r7, #8
 410              	.LCFI18:
 411              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwLwC1u.s 			page 21


 412 0030 BD46     		mov	sp, r7
 413              	.LCFI19:
 414              		.cfi_def_cfa_register 13
 415              		@ sp needed
 416 0032 80BD     		pop	{r7, pc}
 417              		.cfi_endproc
 418              	.LFE146:
 420              		.section	.text.xQueueCreateMutex,"ax",%progbits
 421              		.align	1
 422              		.global	xQueueCreateMutex
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	xQueueCreateMutex:
 429              	.LFB147:
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 430              		.loc 1 507 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 24
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              	.LCFI20:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 86B0     		sub	sp, sp, #24
 440              	.LCFI21:
 441              		.cfi_def_cfa_offset 32
 442 0004 00AF     		add	r7, sp, #0
 443              	.LCFI22:
 444              		.cfi_def_cfa_register 7
 445 0006 0346     		mov	r3, r0
 446 0008 FB71     		strb	r3, [r7, #7]
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 447              		.loc 1 509 0
 448 000a 0123     		movs	r3, #1
 449 000c 7B61     		str	r3, [r7, #20]
 450 000e 0023     		movs	r3, #0
 451 0010 3B61     		str	r3, [r7, #16]
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 452              		.loc 1 511 0
 453 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454 0014 1A46     		mov	r2, r3
 455 0016 3969     		ldr	r1, [r7, #16]
 456 0018 7869     		ldr	r0, [r7, #20]
 457 001a FFF7FEFF 		bl	xQueueGenericCreate
 458 001e F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccwLwC1u.s 			page 22


 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 459              		.loc 1 512 0
 460 0020 F868     		ldr	r0, [r7, #12]
 461 0022 FFF7FEFF 		bl	prvInitialiseMutex
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 462              		.loc 1 514 0
 463 0026 FB68     		ldr	r3, [r7, #12]
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 464              		.loc 1 515 0
 465 0028 1846     		mov	r0, r3
 466 002a 1837     		adds	r7, r7, #24
 467              	.LCFI23:
 468              		.cfi_def_cfa_offset 8
 469 002c BD46     		mov	sp, r7
 470              	.LCFI24:
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 002e 80BD     		pop	{r7, pc}
 474              		.cfi_endproc
 475              	.LFE147:
 477              		.section	.text.xQueueGenericSend,"ax",%progbits
 478              		.align	1
 479              		.global	xQueueGenericSend
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	xQueueGenericSend:
 486              	.LFB148:
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
ARM GAS  /tmp/ccwLwC1u.s 			page 23


 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
ARM GAS  /tmp/ccwLwC1u.s 			page 24


 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccwLwC1u.s 			page 25


 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccwLwC1u.s 			page 26


 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 487              		.loc 1 724 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 56
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491 0000 80B5     		push	{r7, lr}
 492              	.LCFI25:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 8EB0     		sub	sp, sp, #56
 497              	.LCFI26:
 498              		.cfi_def_cfa_offset 64
 499 0004 00AF     		add	r7, sp, #0
 500              	.LCFI27:
 501              		.cfi_def_cfa_register 7
 502 0006 F860     		str	r0, [r7, #12]
 503 0008 B960     		str	r1, [r7, #8]
 504 000a 7A60     		str	r2, [r7, #4]
 505 000c 3B60     		str	r3, [r7]
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 506              		.loc 1 725 0
 507 000e 0023     		movs	r3, #0
 508 0010 7B63     		str	r3, [r7, #52]
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 509              		.loc 1 727 0
 510 0012 FB68     		ldr	r3, [r7, #12]
 511 0014 3B63     		str	r3, [r7, #48]
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 512              		.loc 1 729 0
 513 0016 3B6B     		ldr	r3, [r7, #48]
 514 0018 002B     		cmp	r3, #0
 515 001a 0BD1     		bne	.L25
 516              	.LBB80:
 517              	.LBB81:
 518              		.loc 2 237 0 discriminator 1
 519              		.syntax unified
 520              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 521 001c 4FF05003 			mov r3, #80												
 522 0020 72B6     		cpsid i													
 523 0022 83F31188 		msr basepri, r3											
 524 0026 BFF36F8F 		isb														
 525 002a BFF34F8F 		dsb														
 526 002e 62B6     		cpsie i													
 527              	
ARM GAS  /tmp/ccwLwC1u.s 			page 27


 528              	@ 0 "" 2
 529              		.thumb
 530              		.syntax unified
 531 0030 BB62     		str	r3, [r7, #40]
 532              	.L26:
 533              	.LBE81:
 534              	.LBE80:
 535              		.loc 1 729 0 discriminator 1
 536 0032 FEE7     		b	.L26
 537              	.L25:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 538              		.loc 1 730 0
 539 0034 BB68     		ldr	r3, [r7, #8]
 540 0036 002B     		cmp	r3, #0
 541 0038 03D1     		bne	.L27
 542              		.loc 1 730 0 is_stmt 0 discriminator 2
 543 003a 3B6B     		ldr	r3, [r7, #48]
 544 003c 1B6C     		ldr	r3, [r3, #64]
 545 003e 002B     		cmp	r3, #0
 546 0040 01D1     		bne	.L28
 547              	.L27:
 548              		.loc 1 730 0 discriminator 3
 549 0042 0123     		movs	r3, #1
 550 0044 00E0     		b	.L29
 551              	.L28:
 552              		.loc 1 730 0 discriminator 4
 553 0046 0023     		movs	r3, #0
 554              	.L29:
 555              		.loc 1 730 0 discriminator 6
 556 0048 002B     		cmp	r3, #0
 557 004a 0BD1     		bne	.L30
 558              	.LBB82:
 559              	.LBB83:
 560              		.loc 2 237 0 is_stmt 1 discriminator 7
 561              		.syntax unified
 562              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 563 004c 4FF05003 			mov r3, #80												
 564 0050 72B6     		cpsid i													
 565 0052 83F31188 		msr basepri, r3											
 566 0056 BFF36F8F 		isb														
 567 005a BFF34F8F 		dsb														
 568 005e 62B6     		cpsie i													
 569              	
 570              	@ 0 "" 2
 571              		.thumb
 572              		.syntax unified
 573 0060 7B62     		str	r3, [r7, #36]
 574              	.L31:
 575              	.LBE83:
 576              	.LBE82:
 577              		.loc 1 730 0 discriminator 2
 578 0062 FEE7     		b	.L31
 579              	.L30:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 580              		.loc 1 731 0
 581 0064 3B68     		ldr	r3, [r7]
 582 0066 022B     		cmp	r3, #2
ARM GAS  /tmp/ccwLwC1u.s 			page 28


 583 0068 03D1     		bne	.L32
 584              		.loc 1 731 0 is_stmt 0 discriminator 2
 585 006a 3B6B     		ldr	r3, [r7, #48]
 586 006c DB6B     		ldr	r3, [r3, #60]
 587 006e 012B     		cmp	r3, #1
 588 0070 01D1     		bne	.L33
 589              	.L32:
 590              		.loc 1 731 0 discriminator 3
 591 0072 0123     		movs	r3, #1
 592 0074 00E0     		b	.L34
 593              	.L33:
 594              		.loc 1 731 0 discriminator 4
 595 0076 0023     		movs	r3, #0
 596              	.L34:
 597              		.loc 1 731 0 discriminator 6
 598 0078 002B     		cmp	r3, #0
 599 007a 0BD1     		bne	.L35
 600              	.LBB84:
 601              	.LBB85:
 602              		.loc 2 237 0 is_stmt 1 discriminator 7
 603              		.syntax unified
 604              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 605 007c 4FF05003 			mov r3, #80												
 606 0080 72B6     		cpsid i													
 607 0082 83F31188 		msr basepri, r3											
 608 0086 BFF36F8F 		isb														
 609 008a BFF34F8F 		dsb														
 610 008e 62B6     		cpsie i													
 611              	
 612              	@ 0 "" 2
 613              		.thumb
 614              		.syntax unified
 615 0090 3B62     		str	r3, [r7, #32]
 616              	.L36:
 617              	.LBE85:
 618              	.LBE84:
 619              		.loc 1 731 0 discriminator 3
 620 0092 FEE7     		b	.L36
 621              	.L35:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 622              		.loc 1 734 0
 623 0094 FFF7FEFF 		bl	xTaskGetSchedulerState
 624 0098 0346     		mov	r3, r0
 625 009a 002B     		cmp	r3, #0
 626 009c 02D1     		bne	.L37
 627              		.loc 1 734 0 is_stmt 0 discriminator 2
 628 009e 7B68     		ldr	r3, [r7, #4]
 629 00a0 002B     		cmp	r3, #0
 630 00a2 01D1     		bne	.L38
 631              	.L37:
 632              		.loc 1 734 0 discriminator 3
 633 00a4 0123     		movs	r3, #1
 634 00a6 00E0     		b	.L39
 635              	.L38:
 636              		.loc 1 734 0 discriminator 4
ARM GAS  /tmp/ccwLwC1u.s 			page 29


 637 00a8 0023     		movs	r3, #0
 638              	.L39:
 639              		.loc 1 734 0 discriminator 6
 640 00aa 002B     		cmp	r3, #0
 641 00ac 0BD1     		bne	.L40
 642              	.LBB86:
 643              	.LBB87:
 644              		.loc 2 237 0 is_stmt 1 discriminator 7
 645              		.syntax unified
 646              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 647 00ae 4FF05003 			mov r3, #80												
 648 00b2 72B6     		cpsid i													
 649 00b4 83F31188 		msr basepri, r3											
 650 00b8 BFF36F8F 		isb														
 651 00bc BFF34F8F 		dsb														
 652 00c0 62B6     		cpsie i													
 653              	
 654              	@ 0 "" 2
 655              		.thumb
 656              		.syntax unified
 657 00c2 FB61     		str	r3, [r7, #28]
 658              	.L41:
 659              	.LBE87:
 660              	.LBE86:
 661              		.loc 1 734 0 discriminator 4
 662 00c4 FEE7     		b	.L41
 663              	.L40:
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 664              		.loc 1 744 0
 665 00c6 FFF7FEFF 		bl	vPortEnterCritical
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 666              		.loc 1 750 0
 667 00ca 3B6B     		ldr	r3, [r7, #48]
 668 00cc 9A6B     		ldr	r2, [r3, #56]
 669 00ce 3B6B     		ldr	r3, [r7, #48]
 670 00d0 DB6B     		ldr	r3, [r3, #60]
 671 00d2 9A42     		cmp	r2, r3
 672 00d4 02D3     		bcc	.L42
 673              		.loc 1 750 0 is_stmt 0 discriminator 1
 674 00d6 3B68     		ldr	r3, [r7]
 675 00d8 022B     		cmp	r3, #2
 676 00da 29D1     		bne	.L43
 677              	.L42:
ARM GAS  /tmp/ccwLwC1u.s 			page 30


 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 678              		.loc 1 753 0 is_stmt 1
 679 00dc 3A68     		ldr	r2, [r7]
 680 00de B968     		ldr	r1, [r7, #8]
 681 00e0 386B     		ldr	r0, [r7, #48]
 682 00e2 FFF7FEFF 		bl	prvCopyDataToQueue
 683 00e6 F862     		str	r0, [r7, #44]
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  /tmp/ccwLwC1u.s 			page 31


 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 684              		.loc 1 808 0
 685 00e8 3B6B     		ldr	r3, [r7, #48]
 686 00ea 5B6A     		ldr	r3, [r3, #36]
 687 00ec 002B     		cmp	r3, #0
 688 00ee 10D0     		beq	.L44
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 689              		.loc 1 810 0
 690 00f0 3B6B     		ldr	r3, [r7, #48]
 691 00f2 2433     		adds	r3, r3, #36
 692 00f4 1846     		mov	r0, r3
 693 00f6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 694 00fa 0346     		mov	r3, r0
 695 00fc 002B     		cmp	r3, #0
 696 00fe 13D0     		beq	.L45
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 697              		.loc 1 816 0
 698 0100 3F4B     		ldr	r3, .L57
 699 0102 4FF08052 		mov	r2, #268435456
 700 0106 1A60     		str	r2, [r3]
 701              		.syntax unified
 702              	@ 816 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 703 0108 BFF34F8F 		dsb
 704              	@ 0 "" 2
 705              	@ 816 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 706 010c BFF36F8F 		isb
 707              	@ 0 "" 2
 708              		.thumb
 709              		.syntax unified
 710 0110 0AE0     		b	.L45
 711              	.L44:
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 712              		.loc 1 823 0
 713 0112 FB6A     		ldr	r3, [r7, #44]
 714 0114 002B     		cmp	r3, #0
 715 0116 07D0     		beq	.L45
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
ARM GAS  /tmp/ccwLwC1u.s 			page 32


 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 716              		.loc 1 829 0
 717 0118 394B     		ldr	r3, .L57
 718 011a 4FF08052 		mov	r2, #268435456
 719 011e 1A60     		str	r2, [r3]
 720              		.syntax unified
 721              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 722 0120 BFF34F8F 		dsb
 723              	@ 0 "" 2
 724              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 725 0124 BFF36F8F 		isb
 726              	@ 0 "" 2
 727              		.thumb
 728              		.syntax unified
 729              	.L45:
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 730              		.loc 1 838 0
 731 0128 FFF7FEFF 		bl	vPortExitCritical
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 732              		.loc 1 839 0
 733 012c 0123     		movs	r3, #1
 734 012e 63E0     		b	.L56
 735              	.L43:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 736              		.loc 1 843 0
 737 0130 7B68     		ldr	r3, [r7, #4]
 738 0132 002B     		cmp	r3, #0
 739 0134 03D1     		bne	.L47
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 740              		.loc 1 847 0
 741 0136 FFF7FEFF 		bl	vPortExitCritical
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 742              		.loc 1 852 0
 743 013a 0023     		movs	r3, #0
 744 013c 5CE0     		b	.L56
 745              	.L47:
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccwLwC1u.s 			page 33


 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 746              		.loc 1 854 0
 747 013e 7B6B     		ldr	r3, [r7, #52]
 748 0140 002B     		cmp	r3, #0
 749 0142 06D1     		bne	.L48
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 750              		.loc 1 858 0
 751 0144 07F11403 		add	r3, r7, #20
 752 0148 1846     		mov	r0, r3
 753 014a FFF7FEFF 		bl	vTaskSetTimeOutState
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 754              		.loc 1 859 0
 755 014e 0123     		movs	r3, #1
 756 0150 7B63     		str	r3, [r7, #52]
 757              	.L48:
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 758              		.loc 1 868 0
 759 0152 FFF7FEFF 		bl	vPortExitCritical
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 760              		.loc 1 873 0
 761 0156 FFF7FEFF 		bl	vTaskSuspendAll
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 762              		.loc 1 874 0
 763 015a FFF7FEFF 		bl	vPortEnterCritical
 764 015e 3B6B     		ldr	r3, [r7, #48]
 765 0160 93F84430 		ldrb	r3, [r3, #68]
 766 0164 5BB2     		sxtb	r3, r3
 767 0166 B3F1FF3F 		cmp	r3, #-1
 768 016a 03D1     		bne	.L49
 769              		.loc 1 874 0 is_stmt 0 discriminator 1
 770 016c 3B6B     		ldr	r3, [r7, #48]
 771 016e 0022     		movs	r2, #0
 772 0170 83F84420 		strb	r2, [r3, #68]
 773              	.L49:
 774              		.loc 1 874 0 discriminator 3
 775 0174 3B6B     		ldr	r3, [r7, #48]
 776 0176 93F84530 		ldrb	r3, [r3, #69]
 777 017a 5BB2     		sxtb	r3, r3
 778 017c B3F1FF3F 		cmp	r3, #-1
 779 0180 03D1     		bne	.L50
 780              		.loc 1 874 0 discriminator 4
 781 0182 3B6B     		ldr	r3, [r7, #48]
ARM GAS  /tmp/ccwLwC1u.s 			page 34


 782 0184 0022     		movs	r2, #0
 783 0186 83F84520 		strb	r2, [r3, #69]
 784              	.L50:
 785              		.loc 1 874 0 discriminator 6
 786 018a FFF7FEFF 		bl	vPortExitCritical
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 787              		.loc 1 877 0 is_stmt 1 discriminator 6
 788 018e 3A1D     		adds	r2, r7, #4
 789 0190 07F11403 		add	r3, r7, #20
 790 0194 1146     		mov	r1, r2
 791 0196 1846     		mov	r0, r3
 792 0198 FFF7FEFF 		bl	xTaskCheckForTimeOut
 793 019c 0346     		mov	r3, r0
 794 019e 002B     		cmp	r3, #0
 795 01a0 24D1     		bne	.L51
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 796              		.loc 1 879 0
 797 01a2 386B     		ldr	r0, [r7, #48]
 798 01a4 FFF7FEFF 		bl	prvIsQueueFull
 799 01a8 0346     		mov	r3, r0
 800 01aa 002B     		cmp	r3, #0
 801 01ac 18D0     		beq	.L52
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 802              		.loc 1 882 0
 803 01ae 3B6B     		ldr	r3, [r7, #48]
 804 01b0 1033     		adds	r3, r3, #16
 805 01b2 7A68     		ldr	r2, [r7, #4]
 806 01b4 1146     		mov	r1, r2
 807 01b6 1846     		mov	r0, r3
 808 01b8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event	list again - but as the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 809              		.loc 1 889 0
 810 01bc 386B     		ldr	r0, [r7, #48]
 811 01be FFF7FEFF 		bl	prvUnlockQueue
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 812              		.loc 1 896 0
 813 01c2 FFF7FEFF 		bl	xTaskResumeAll
 814 01c6 0346     		mov	r3, r0
 815 01c8 002B     		cmp	r3, #0
 816 01ca 7FF47CAF 		bne	.L40
ARM GAS  /tmp/ccwLwC1u.s 			page 35


 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 817              		.loc 1 898 0
 818 01ce 0C4B     		ldr	r3, .L57
 819 01d0 4FF08052 		mov	r2, #268435456
 820 01d4 1A60     		str	r2, [r3]
 821              		.syntax unified
 822              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 823 01d6 BFF34F8F 		dsb
 824              	@ 0 "" 2
 825              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 826 01da BFF36F8F 		isb
 827              	@ 0 "" 2
 828              		.thumb
 829              		.syntax unified
 830 01de 72E7     		b	.L40
 831              	.L52:
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 832              		.loc 1 904 0
 833 01e0 386B     		ldr	r0, [r7, #48]
 834 01e2 FFF7FEFF 		bl	prvUnlockQueue
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 835              		.loc 1 905 0
 836 01e6 FFF7FEFF 		bl	xTaskResumeAll
 837 01ea 6CE7     		b	.L40
 838              	.L51:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 839              		.loc 1 911 0
 840 01ec 386B     		ldr	r0, [r7, #48]
 841 01ee FFF7FEFF 		bl	prvUnlockQueue
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 842              		.loc 1 912 0
 843 01f2 FFF7FEFF 		bl	xTaskResumeAll
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 844              		.loc 1 915 0
 845 01f6 0023     		movs	r3, #0
 846              	.L56:
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 847              		.loc 1 918 0 discriminator 7
 848 01f8 1846     		mov	r0, r3
 849 01fa 3837     		adds	r7, r7, #56
 850              	.LCFI28:
 851              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwLwC1u.s 			page 36


 852 01fc BD46     		mov	sp, r7
 853              	.LCFI29:
 854              		.cfi_def_cfa_register 13
 855              		@ sp needed
 856 01fe 80BD     		pop	{r7, pc}
 857              	.L58:
 858              		.align	2
 859              	.L57:
 860 0200 04ED00E0 		.word	-536810236
 861              		.cfi_endproc
 862              	.LFE148:
 864              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 865              		.align	1
 866              		.global	xQueueGenericSendFromISR
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	xQueueGenericSendFromISR:
 873              	.LFB149:
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 874              		.loc 1 922 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 56
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              	.LCFI30:
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 8EB0     		sub	sp, sp, #56
 884              	.LCFI31:
 885              		.cfi_def_cfa_offset 64
 886 0004 00AF     		add	r7, sp, #0
 887              	.LCFI32:
 888              		.cfi_def_cfa_register 7
 889 0006 F860     		str	r0, [r7, #12]
 890 0008 B960     		str	r1, [r7, #8]
 891 000a 7A60     		str	r2, [r7, #4]
 892 000c 3B60     		str	r3, [r7]
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 893              		.loc 1 925 0
 894 000e FB68     		ldr	r3, [r7, #12]
 895 0010 3B63     		str	r3, [r7, #48]
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 896              		.loc 1 927 0
 897 0012 3B6B     		ldr	r3, [r7, #48]
 898 0014 002B     		cmp	r3, #0
 899 0016 0BD1     		bne	.L60
 900              	.LBB88:
 901              	.LBB89:
ARM GAS  /tmp/ccwLwC1u.s 			page 37


 902              		.loc 2 237 0 discriminator 1
 903              		.syntax unified
 904              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 905 0018 4FF05003 			mov r3, #80												
 906 001c 72B6     		cpsid i													
 907 001e 83F31188 		msr basepri, r3											
 908 0022 BFF36F8F 		isb														
 909 0026 BFF34F8F 		dsb														
 910 002a 62B6     		cpsie i													
 911              	
 912              	@ 0 "" 2
 913              		.thumb
 914              		.syntax unified
 915 002c 7B62     		str	r3, [r7, #36]
 916              	.L61:
 917              	.LBE89:
 918              	.LBE88:
 919              		.loc 1 927 0 discriminator 1
 920 002e FEE7     		b	.L61
 921              	.L60:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 922              		.loc 1 928 0
 923 0030 BB68     		ldr	r3, [r7, #8]
 924 0032 002B     		cmp	r3, #0
 925 0034 03D1     		bne	.L62
 926              		.loc 1 928 0 is_stmt 0 discriminator 2
 927 0036 3B6B     		ldr	r3, [r7, #48]
 928 0038 1B6C     		ldr	r3, [r3, #64]
 929 003a 002B     		cmp	r3, #0
 930 003c 01D1     		bne	.L63
 931              	.L62:
 932              		.loc 1 928 0 discriminator 3
 933 003e 0123     		movs	r3, #1
 934 0040 00E0     		b	.L64
 935              	.L63:
 936              		.loc 1 928 0 discriminator 4
 937 0042 0023     		movs	r3, #0
 938              	.L64:
 939              		.loc 1 928 0 discriminator 6
 940 0044 002B     		cmp	r3, #0
 941 0046 0BD1     		bne	.L65
 942              	.LBB90:
 943              	.LBB91:
 944              		.loc 2 237 0 is_stmt 1 discriminator 7
 945              		.syntax unified
 946              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 947 0048 4FF05003 			mov r3, #80												
 948 004c 72B6     		cpsid i													
 949 004e 83F31188 		msr basepri, r3											
 950 0052 BFF36F8F 		isb														
 951 0056 BFF34F8F 		dsb														
 952 005a 62B6     		cpsie i													
 953              	
 954              	@ 0 "" 2
 955              		.thumb
 956              		.syntax unified
 957 005c 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/ccwLwC1u.s 			page 38


 958              	.L66:
 959              	.LBE91:
 960              	.LBE90:
 961              		.loc 1 928 0 discriminator 2
 962 005e FEE7     		b	.L66
 963              	.L65:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 964              		.loc 1 929 0
 965 0060 3B68     		ldr	r3, [r7]
 966 0062 022B     		cmp	r3, #2
 967 0064 03D1     		bne	.L67
 968              		.loc 1 929 0 is_stmt 0 discriminator 2
 969 0066 3B6B     		ldr	r3, [r7, #48]
 970 0068 DB6B     		ldr	r3, [r3, #60]
 971 006a 012B     		cmp	r3, #1
 972 006c 01D1     		bne	.L68
 973              	.L67:
 974              		.loc 1 929 0 discriminator 3
 975 006e 0123     		movs	r3, #1
 976 0070 00E0     		b	.L69
 977              	.L68:
 978              		.loc 1 929 0 discriminator 4
 979 0072 0023     		movs	r3, #0
 980              	.L69:
 981              		.loc 1 929 0 discriminator 6
 982 0074 002B     		cmp	r3, #0
 983 0076 0BD1     		bne	.L70
 984              	.LBB92:
 985              	.LBB93:
 986              		.loc 2 237 0 is_stmt 1 discriminator 7
 987              		.syntax unified
 988              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 989 0078 4FF05003 			mov r3, #80												
 990 007c 72B6     		cpsid i													
 991 007e 83F31188 		msr basepri, r3											
 992 0082 BFF36F8F 		isb														
 993 0086 BFF34F8F 		dsb														
 994 008a 62B6     		cpsie i													
 995              	
 996              	@ 0 "" 2
 997              		.thumb
 998              		.syntax unified
 999 008c FB61     		str	r3, [r7, #28]
 1000              	.L71:
 1001              	.LBE93:
 1002              	.LBE92:
 1003              		.loc 1 929 0 discriminator 3
 1004 008e FEE7     		b	.L71
 1005              	.L70:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
ARM GAS  /tmp/ccwLwC1u.s 			page 39


 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1006              		.loc 1 945 0
 1007 0090 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1008              	.LBB94:
 1009              	.LBB95:
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1010              		.loc 2 255 0
 1011              		.syntax unified
 1012              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1013 0094 EFF31182 			mrs r2, basepri											
 1014 0098 4FF05003 		mov r3, #80												
 1015 009c 72B6     		cpsid i													
 1016 009e 83F31188 		msr basepri, r3											
 1017 00a2 BFF36F8F 		isb														
 1018 00a6 BFF34F8F 		dsb														
 1019 00aa 62B6     		cpsie i													
 1020              	
 1021              	@ 0 "" 2
 1022              		.thumb
 1023              		.syntax unified
 1024 00ac BA61     		str	r2, [r7, #24]
 1025 00ae 7B61     		str	r3, [r7, #20]
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mrs %0, basepri											\n" \
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %1, %2												\n"	\
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %1											\n" \
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 40


 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	warnings. */
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return ulOriginalBASEPRI;
 1026              		.loc 2 269 0
 1027 00b0 BB69     		ldr	r3, [r7, #24]
 1028              	.LBE95:
 1029              	.LBE94:
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1030              		.loc 1 952 0
 1031 00b2 FB62     		str	r3, [r7, #44]
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 1032              		.loc 1 954 0
 1033 00b4 3B6B     		ldr	r3, [r7, #48]
 1034 00b6 9A6B     		ldr	r2, [r3, #56]
 1035 00b8 3B6B     		ldr	r3, [r7, #48]
 1036 00ba DB6B     		ldr	r3, [r3, #60]
 1037 00bc 9A42     		cmp	r2, r3
 1038 00be 02D3     		bcc	.L73
 1039              		.loc 1 954 0 is_stmt 0 discriminator 1
 1040 00c0 3B68     		ldr	r3, [r7]
 1041 00c2 022B     		cmp	r3, #2
 1042 00c4 2CD1     		bne	.L74
 1043              	.L73:
 1044              	.LBB96:
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1045              		.loc 1 956 0 is_stmt 1
 1046 00c6 3B6B     		ldr	r3, [r7, #48]
 1047 00c8 93F84530 		ldrb	r3, [r3, #69]
 1048 00cc 87F82B30 		strb	r3, [r7, #43]
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1049              		.loc 1 965 0
 1050 00d0 3A68     		ldr	r2, [r7]
 1051 00d2 B968     		ldr	r1, [r7, #8]
 1052 00d4 386B     		ldr	r0, [r7, #48]
 1053 00d6 FFF7FEFF 		bl	prvCopyDataToQueue
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1054              		.loc 1 969 0
 1055 00da 97F92B30 		ldrsb	r3, [r7, #43]
ARM GAS  /tmp/ccwLwC1u.s 			page 41


 1056 00de B3F1FF3F 		cmp	r3, #-1
 1057 00e2 12D1     		bne	.L75
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  /tmp/ccwLwC1u.s 			page 42


 1058              		.loc 1 1024 0
 1059 00e4 3B6B     		ldr	r3, [r7, #48]
 1060 00e6 5B6A     		ldr	r3, [r3, #36]
 1061 00e8 002B     		cmp	r3, #0
 1062 00ea 16D0     		beq	.L76
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1063              		.loc 1 1026 0
 1064 00ec 3B6B     		ldr	r3, [r7, #48]
 1065 00ee 2433     		adds	r3, r3, #36
 1066 00f0 1846     		mov	r0, r3
 1067 00f2 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1068 00f6 0346     		mov	r3, r0
 1069 00f8 002B     		cmp	r3, #0
 1070 00fa 0ED0     		beq	.L76
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1071              		.loc 1 1030 0
 1072 00fc 7B68     		ldr	r3, [r7, #4]
 1073 00fe 002B     		cmp	r3, #0
 1074 0100 0BD0     		beq	.L76
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1075              		.loc 1 1032 0
 1076 0102 7B68     		ldr	r3, [r7, #4]
 1077 0104 0122     		movs	r2, #1
 1078 0106 1A60     		str	r2, [r3]
 1079 0108 07E0     		b	.L76
 1080              	.L75:
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1081              		.loc 1 1055 0
 1082 010a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1083 010e 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccwLwC1u.s 			page 43


 1084 0110 DBB2     		uxtb	r3, r3
 1085 0112 5AB2     		sxtb	r2, r3
 1086 0114 3B6B     		ldr	r3, [r7, #48]
 1087 0116 83F84520 		strb	r2, [r3, #69]
 1088              	.L76:
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1089              		.loc 1 1058 0
 1090 011a 0123     		movs	r3, #1
 1091 011c 7B63     		str	r3, [r7, #52]
 1092              	.LBE96:
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1093              		.loc 1 955 0
 1094 011e 01E0     		b	.L77
 1095              	.L74:
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1096              		.loc 1 1063 0
 1097 0120 0023     		movs	r3, #0
 1098 0122 7B63     		str	r3, [r7, #52]
 1099              	.L77:
 1100 0124 FB6A     		ldr	r3, [r7, #44]
 1101 0126 3B61     		str	r3, [r7, #16]
 1102              	.LBB97:
 1103              	.LBB98:
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1104              		.loc 2 275 0
 1105 0128 3B69     		ldr	r3, [r7, #16]
 1106              		.syntax unified
 1107              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1108 012a 83F31188 			msr basepri, r3	
 1109              	@ 0 "" 2
 1110              		.thumb
 1111              		.syntax unified
 1112              	.LBE98:
 1113              	.LBE97:
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1114              		.loc 1 1068 0
 1115 012e 7B6B     		ldr	r3, [r7, #52]
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1116              		.loc 1 1069 0
 1117 0130 1846     		mov	r0, r3
 1118 0132 3837     		adds	r7, r7, #56
 1119              	.LCFI33:
ARM GAS  /tmp/ccwLwC1u.s 			page 44


 1120              		.cfi_def_cfa_offset 8
 1121 0134 BD46     		mov	sp, r7
 1122              	.LCFI34:
 1123              		.cfi_def_cfa_register 13
 1124              		@ sp needed
 1125 0136 80BD     		pop	{r7, pc}
 1126              		.cfi_endproc
 1127              	.LFE149:
 1129              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1130              		.align	1
 1131              		.global	xQueueGiveFromISR
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv4-sp-d16
 1137              	xQueueGiveFromISR:
 1138              	.LFB150:
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1139              		.loc 1 1073 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 56
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              	.LCFI35:
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
 1148 0002 8EB0     		sub	sp, sp, #56
 1149              	.LCFI36:
 1150              		.cfi_def_cfa_offset 64
 1151 0004 00AF     		add	r7, sp, #0
 1152              	.LCFI37:
 1153              		.cfi_def_cfa_register 7
 1154 0006 7860     		str	r0, [r7, #4]
 1155 0008 3960     		str	r1, [r7]
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1156              		.loc 1 1076 0
 1157 000a 7B68     		ldr	r3, [r7, #4]
 1158 000c 3B63     		str	r3, [r7, #48]
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 1159              		.loc 1 1084 0
 1160 000e 3B6B     		ldr	r3, [r7, #48]
 1161 0010 002B     		cmp	r3, #0
 1162 0012 0BD1     		bne	.L80
 1163              	.LBB99:
ARM GAS  /tmp/ccwLwC1u.s 			page 45


 1164              	.LBB100:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1165              		.loc 2 237 0 discriminator 1
 1166              		.syntax unified
 1167              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1168 0014 4FF05003 			mov r3, #80												
 1169 0018 72B6     		cpsid i													
 1170 001a 83F31188 		msr basepri, r3											
 1171 001e BFF36F8F 		isb														
 1172 0022 BFF34F8F 		dsb														
 1173 0026 62B6     		cpsie i													
 1174              	
 1175              	@ 0 "" 2
 1176              		.thumb
 1177              		.syntax unified
 1178 0028 3B62     		str	r3, [r7, #32]
 1179              	.L81:
 1180              	.LBE100:
 1181              	.LBE99:
 1182              		.loc 1 1084 0 discriminator 1
 1183 002a FEE7     		b	.L81
 1184              	.L80:
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 1185              		.loc 1 1088 0
 1186 002c 3B6B     		ldr	r3, [r7, #48]
 1187 002e 1B6C     		ldr	r3, [r3, #64]
 1188 0030 002B     		cmp	r3, #0
 1189 0032 0BD0     		beq	.L82
 1190              	.LBB101:
 1191              	.LBB102:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1192              		.loc 2 237 0 discriminator 1
 1193              		.syntax unified
 1194              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1195 0034 4FF05003 			mov r3, #80												
 1196 0038 72B6     		cpsid i													
 1197 003a 83F31188 		msr basepri, r3											
 1198 003e BFF36F8F 		isb														
 1199 0042 BFF34F8F 		dsb														
 1200 0046 62B6     		cpsie i													
 1201              	
 1202              	@ 0 "" 2
 1203              		.thumb
 1204              		.syntax unified
 1205 0048 FB61     		str	r3, [r7, #28]
 1206              	.L83:
 1207              	.LBE102:
 1208              	.LBE101:
 1209              		.loc 1 1088 0 discriminator 2
 1210 004a FEE7     		b	.L83
 1211              	.L82:
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
ARM GAS  /tmp/ccwLwC1u.s 			page 46


1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
 1212              		.loc 1 1093 0
 1213 004c 3B6B     		ldr	r3, [r7, #48]
 1214 004e 1B68     		ldr	r3, [r3]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 03D1     		bne	.L84
 1217              		.loc 1 1093 0 is_stmt 0 discriminator 2
 1218 0054 3B6B     		ldr	r3, [r7, #48]
 1219 0056 5B68     		ldr	r3, [r3, #4]
 1220 0058 002B     		cmp	r3, #0
 1221 005a 01D1     		bne	.L85
 1222              	.L84:
 1223              		.loc 1 1093 0 discriminator 3
 1224 005c 0123     		movs	r3, #1
 1225 005e 00E0     		b	.L86
 1226              	.L85:
 1227              		.loc 1 1093 0 discriminator 4
 1228 0060 0023     		movs	r3, #0
 1229              	.L86:
 1230              		.loc 1 1093 0 discriminator 6
 1231 0062 002B     		cmp	r3, #0
 1232 0064 0BD1     		bne	.L87
 1233              	.LBB103:
 1234              	.LBB104:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1235              		.loc 2 237 0 is_stmt 1 discriminator 7
 1236              		.syntax unified
 1237              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1238 0066 4FF05003 			mov r3, #80												
 1239 006a 72B6     		cpsid i													
 1240 006c 83F31188 		msr basepri, r3											
 1241 0070 BFF36F8F 		isb														
 1242 0074 BFF34F8F 		dsb														
 1243 0078 62B6     		cpsie i													
 1244              	
 1245              	@ 0 "" 2
 1246              		.thumb
 1247              		.syntax unified
 1248 007a BB61     		str	r3, [r7, #24]
 1249              	.L88:
 1250              	.LBE104:
 1251              	.LBE103:
 1252              		.loc 1 1093 0 discriminator 3
 1253 007c FEE7     		b	.L88
 1254              	.L87:
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  /tmp/ccwLwC1u.s 			page 47


1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1255              		.loc 1 1109 0
 1256 007e FFF7FEFF 		bl	vPortValidateInterruptPriority
 1257              	.LBB105:
 1258              	.LBB106:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1259              		.loc 2 255 0
 1260              		.syntax unified
 1261              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1262 0082 EFF31182 			mrs r2, basepri											
 1263 0086 4FF05003 		mov r3, #80												
 1264 008a 72B6     		cpsid i													
 1265 008c 83F31188 		msr basepri, r3											
 1266 0090 BFF36F8F 		isb														
 1267 0094 BFF34F8F 		dsb														
 1268 0098 62B6     		cpsie i													
 1269              	
 1270              	@ 0 "" 2
 1271              		.thumb
 1272              		.syntax unified
 1273 009a 7A61     		str	r2, [r7, #20]
 1274 009c 3B61     		str	r3, [r7, #16]
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 1275              		.loc 2 269 0
 1276 009e 7B69     		ldr	r3, [r7, #20]
 1277              	.LBE106:
 1278              	.LBE105:
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1279              		.loc 1 1111 0
 1280 00a0 FB62     		str	r3, [r7, #44]
 1281              	.LBB107:
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1282              		.loc 1 1113 0
 1283 00a2 3B6B     		ldr	r3, [r7, #48]
 1284 00a4 9B6B     		ldr	r3, [r3, #56]
 1285 00a6 BB62     		str	r3, [r7, #40]
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
 1286              		.loc 1 1118 0
 1287 00a8 3B6B     		ldr	r3, [r7, #48]
 1288 00aa DB6B     		ldr	r3, [r3, #60]
 1289 00ac BA6A     		ldr	r2, [r7, #40]
 1290 00ae 9A42     		cmp	r2, r3
 1291 00b0 2BD2     		bcs	.L90
 1292              	.LBB108:
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1293              		.loc 1 1120 0
ARM GAS  /tmp/ccwLwC1u.s 			page 48


 1294 00b2 3B6B     		ldr	r3, [r7, #48]
 1295 00b4 93F84530 		ldrb	r3, [r3, #69]
 1296 00b8 87F82730 		strb	r3, [r7, #39]
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
 1297              		.loc 1 1130 0
 1298 00bc BB6A     		ldr	r3, [r7, #40]
 1299 00be 5A1C     		adds	r2, r3, #1
 1300 00c0 3B6B     		ldr	r3, [r7, #48]
 1301 00c2 9A63     		str	r2, [r3, #56]
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1302              		.loc 1 1134 0
 1303 00c4 97F92730 		ldrsb	r3, [r7, #39]
 1304 00c8 B3F1FF3F 		cmp	r3, #-1
 1305 00cc 12D1     		bne	.L91
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
ARM GAS  /tmp/ccwLwC1u.s 			page 49


1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1306              		.loc 1 1189 0
 1307 00ce 3B6B     		ldr	r3, [r7, #48]
 1308 00d0 5B6A     		ldr	r3, [r3, #36]
 1309 00d2 002B     		cmp	r3, #0
 1310 00d4 16D0     		beq	.L92
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1311              		.loc 1 1191 0
 1312 00d6 3B6B     		ldr	r3, [r7, #48]
 1313 00d8 2433     		adds	r3, r3, #36
 1314 00da 1846     		mov	r0, r3
 1315 00dc FFF7FEFF 		bl	xTaskRemoveFromEventList
 1316 00e0 0346     		mov	r3, r0
 1317 00e2 002B     		cmp	r3, #0
 1318 00e4 0ED0     		beq	.L92
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1319              		.loc 1 1195 0
 1320 00e6 3B68     		ldr	r3, [r7]
 1321 00e8 002B     		cmp	r3, #0
 1322 00ea 0BD0     		beq	.L92
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1323              		.loc 1 1197 0
 1324 00ec 3B68     		ldr	r3, [r7]
 1325 00ee 0122     		movs	r2, #1
 1326 00f0 1A60     		str	r2, [r3]
 1327 00f2 07E0     		b	.L92
 1328              	.L91:
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
ARM GAS  /tmp/ccwLwC1u.s 			page 50


1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1329              		.loc 1 1220 0
 1330 00f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1331 00f8 0133     		adds	r3, r3, #1
 1332 00fa DBB2     		uxtb	r3, r3
 1333 00fc 5AB2     		sxtb	r2, r3
 1334 00fe 3B6B     		ldr	r3, [r7, #48]
 1335 0100 83F84520 		strb	r2, [r3, #69]
 1336              	.L92:
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1337              		.loc 1 1223 0
 1338 0104 0123     		movs	r3, #1
 1339 0106 7B63     		str	r3, [r7, #52]
 1340              	.LBE108:
 1341 0108 01E0     		b	.L93
 1342              	.L90:
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1343              		.loc 1 1228 0
 1344 010a 0023     		movs	r3, #0
 1345 010c 7B63     		str	r3, [r7, #52]
 1346              	.L93:
 1347 010e FB6A     		ldr	r3, [r7, #44]
 1348 0110 FB60     		str	r3, [r7, #12]
 1349              	.LBE107:
 1350              	.LBB109:
 1351              	.LBB110:
 1352              		.loc 2 275 0
 1353 0112 FB68     		ldr	r3, [r7, #12]
 1354              		.syntax unified
 1355              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1356 0114 83F31188 			msr basepri, r3	
ARM GAS  /tmp/ccwLwC1u.s 			page 51


 1357              	@ 0 "" 2
 1358              		.thumb
 1359              		.syntax unified
 1360              	.LBE110:
 1361              	.LBE109:
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1362              		.loc 1 1233 0
 1363 0118 7B6B     		ldr	r3, [r7, #52]
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1364              		.loc 1 1234 0
 1365 011a 1846     		mov	r0, r3
 1366 011c 3837     		adds	r7, r7, #56
 1367              	.LCFI38:
 1368              		.cfi_def_cfa_offset 8
 1369 011e BD46     		mov	sp, r7
 1370              	.LCFI39:
 1371              		.cfi_def_cfa_register 13
 1372              		@ sp needed
 1373 0120 80BD     		pop	{r7, pc}
 1374              		.cfi_endproc
 1375              	.LFE150:
 1377              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1378              		.align	1
 1379              		.global	xQueueGenericReceive
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv4-sp-d16
 1385              	xQueueGenericReceive:
 1386              	.LFB151:
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1387              		.loc 1 1238 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 56
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 80B5     		push	{r7, lr}
 1392              	.LCFI40:
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 8EB0     		sub	sp, sp, #56
 1397              	.LCFI41:
 1398              		.cfi_def_cfa_offset 64
 1399 0004 00AF     		add	r7, sp, #0
 1400              	.LCFI42:
 1401              		.cfi_def_cfa_register 7
 1402 0006 F860     		str	r0, [r7, #12]
 1403 0008 B960     		str	r1, [r7, #8]
 1404 000a 7A60     		str	r2, [r7, #4]
 1405 000c 3B60     		str	r3, [r7]
ARM GAS  /tmp/ccwLwC1u.s 			page 52


1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1406              		.loc 1 1239 0
 1407 000e 0023     		movs	r3, #0
 1408 0010 7B63     		str	r3, [r7, #52]
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1409              		.loc 1 1242 0
 1410 0012 FB68     		ldr	r3, [r7, #12]
 1411 0014 3B63     		str	r3, [r7, #48]
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 1412              		.loc 1 1244 0
 1413 0016 3B6B     		ldr	r3, [r7, #48]
 1414 0018 002B     		cmp	r3, #0
 1415 001a 0BD1     		bne	.L96
 1416              	.LBB111:
 1417              	.LBB112:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1418              		.loc 2 237 0 discriminator 1
 1419              		.syntax unified
 1420              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1421 001c 4FF05003 			mov r3, #80												
 1422 0020 72B6     		cpsid i													
 1423 0022 83F31188 		msr basepri, r3											
 1424 0026 BFF36F8F 		isb														
 1425 002a BFF34F8F 		dsb														
 1426 002e 62B6     		cpsie i													
 1427              	
 1428              	@ 0 "" 2
 1429              		.thumb
 1430              		.syntax unified
 1431 0030 7B62     		str	r3, [r7, #36]
 1432              	.L97:
 1433              	.LBE112:
 1434              	.LBE111:
 1435              		.loc 1 1244 0 discriminator 1
 1436 0032 FEE7     		b	.L97
 1437              	.L96:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1438              		.loc 1 1245 0
 1439 0034 BB68     		ldr	r3, [r7, #8]
 1440 0036 002B     		cmp	r3, #0
 1441 0038 03D1     		bne	.L98
 1442              		.loc 1 1245 0 is_stmt 0 discriminator 2
 1443 003a 3B6B     		ldr	r3, [r7, #48]
 1444 003c 1B6C     		ldr	r3, [r3, #64]
 1445 003e 002B     		cmp	r3, #0
 1446 0040 01D1     		bne	.L99
 1447              	.L98:
 1448              		.loc 1 1245 0 discriminator 3
 1449 0042 0123     		movs	r3, #1
 1450 0044 00E0     		b	.L100
 1451              	.L99:
 1452              		.loc 1 1245 0 discriminator 4
 1453 0046 0023     		movs	r3, #0
 1454              	.L100:
ARM GAS  /tmp/ccwLwC1u.s 			page 53


 1455              		.loc 1 1245 0 discriminator 6
 1456 0048 002B     		cmp	r3, #0
 1457 004a 0BD1     		bne	.L101
 1458              	.LBB113:
 1459              	.LBB114:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1460              		.loc 2 237 0 is_stmt 1 discriminator 7
 1461              		.syntax unified
 1462              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1463 004c 4FF05003 			mov r3, #80												
 1464 0050 72B6     		cpsid i													
 1465 0052 83F31188 		msr basepri, r3											
 1466 0056 BFF36F8F 		isb														
 1467 005a BFF34F8F 		dsb														
 1468 005e 62B6     		cpsie i													
 1469              	
 1470              	@ 0 "" 2
 1471              		.thumb
 1472              		.syntax unified
 1473 0060 3B62     		str	r3, [r7, #32]
 1474              	.L102:
 1475              	.LBE114:
 1476              	.LBE113:
 1477              		.loc 1 1245 0 discriminator 2
 1478 0062 FEE7     		b	.L102
 1479              	.L101:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 1480              		.loc 1 1248 0
 1481 0064 FFF7FEFF 		bl	xTaskGetSchedulerState
 1482 0068 0346     		mov	r3, r0
 1483 006a 002B     		cmp	r3, #0
 1484 006c 02D1     		bne	.L103
 1485              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1486 006e 7B68     		ldr	r3, [r7, #4]
 1487 0070 002B     		cmp	r3, #0
 1488 0072 01D1     		bne	.L104
 1489              	.L103:
 1490              		.loc 1 1248 0 discriminator 3
 1491 0074 0123     		movs	r3, #1
 1492 0076 00E0     		b	.L105
 1493              	.L104:
 1494              		.loc 1 1248 0 discriminator 4
 1495 0078 0023     		movs	r3, #0
 1496              	.L105:
 1497              		.loc 1 1248 0 discriminator 6
 1498 007a 002B     		cmp	r3, #0
 1499 007c 0BD1     		bne	.L106
 1500              	.LBB115:
 1501              	.LBB116:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1502              		.loc 2 237 0 is_stmt 1 discriminator 7
 1503              		.syntax unified
 1504              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1505 007e 4FF05003 			mov r3, #80												
 1506 0082 72B6     		cpsid i													
ARM GAS  /tmp/ccwLwC1u.s 			page 54


 1507 0084 83F31188 		msr basepri, r3											
 1508 0088 BFF36F8F 		isb														
 1509 008c BFF34F8F 		dsb														
 1510 0090 62B6     		cpsie i													
 1511              	
 1512              	@ 0 "" 2
 1513              		.thumb
 1514              		.syntax unified
 1515 0092 FB61     		str	r3, [r7, #28]
 1516              	.L107:
 1517              	.LBE116:
 1518              	.LBE115:
 1519              		.loc 1 1248 0 discriminator 3
 1520 0094 FEE7     		b	.L107
 1521              	.L106:
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 1522              		.loc 1 1258 0
 1523 0096 FFF7FEFF 		bl	vPortEnterCritical
 1524              	.LBB117:
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1525              		.loc 1 1260 0
 1526 009a 3B6B     		ldr	r3, [r7, #48]
 1527 009c 9B6B     		ldr	r3, [r3, #56]
 1528 009e FB62     		str	r3, [r7, #44]
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 1529              		.loc 1 1264 0
 1530 00a0 FB6A     		ldr	r3, [r7, #44]
 1531 00a2 002B     		cmp	r3, #0
 1532 00a4 46D0     		beq	.L108
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position in case the queue is only being
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				peeked. */
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1533              		.loc 1 1268 0
 1534 00a6 3B6B     		ldr	r3, [r7, #48]
 1535 00a8 DB68     		ldr	r3, [r3, #12]
 1536 00aa BB62     		str	r3, [r7, #40]
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1537              		.loc 1 1270 0
 1538 00ac B968     		ldr	r1, [r7, #8]
 1539 00ae 386B     		ldr	r0, [r7, #48]
 1540 00b0 FFF7FEFF 		bl	prvCopyDataFromQueue
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 55


1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xJustPeeking == pdFALSE )
 1541              		.loc 1 1272 0
 1542 00b4 3B68     		ldr	r3, [r7]
 1543 00b6 002B     		cmp	r3, #0
 1544 00b8 21D1     		bne	.L109
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Actually removing data, not just peeking. */
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 1545              		.loc 1 1277 0
 1546 00ba FB6A     		ldr	r3, [r7, #44]
 1547 00bc 5A1E     		subs	r2, r3, #1
 1548 00be 3B6B     		ldr	r3, [r7, #48]
 1549 00c0 9A63     		str	r2, [r3, #56]
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1550              		.loc 1 1281 0
 1551 00c2 3B6B     		ldr	r3, [r7, #48]
 1552 00c4 1B68     		ldr	r3, [r3]
 1553 00c6 002B     		cmp	r3, #0
 1554 00c8 04D1     		bne	.L110
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Record the information required to implement
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							priority inheritance should it become necessary. */
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
 1555              		.loc 1 1285 0
 1556 00ca FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1557 00ce 0246     		mov	r2, r0
 1558 00d0 3B6B     		ldr	r3, [r7, #48]
 1559 00d2 5A60     		str	r2, [r3, #4]
 1560              	.L110:
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1561              		.loc 1 1294 0
 1562 00d4 3B6B     		ldr	r3, [r7, #48]
 1563 00d6 1B69     		ldr	r3, [r3, #16]
 1564 00d8 002B     		cmp	r3, #0
 1565 00da 27D0     		beq	.L111
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1566              		.loc 1 1296 0
 1567 00dc 3B6B     		ldr	r3, [r7, #48]
 1568 00de 1033     		adds	r3, r3, #16
 1569 00e0 1846     		mov	r0, r3
 1570 00e2 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1571 00e6 0346     		mov	r3, r0
 1572 00e8 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwLwC1u.s 			page 56


 1573 00ea 1FD0     		beq	.L111
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1574              		.loc 1 1298 0
 1575 00ec 4F4B     		ldr	r3, .L123
 1576 00ee 4FF08052 		mov	r2, #268435456
 1577 00f2 1A60     		str	r2, [r3]
 1578              		.syntax unified
 1579              	@ 1298 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1580 00f4 BFF34F8F 		dsb
 1581              	@ 0 "" 2
 1582              	@ 1298 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1583 00f8 BFF36F8F 		isb
 1584              	@ 0 "" 2
 1585              		.thumb
 1586              		.syntax unified
 1587 00fc 16E0     		b	.L111
 1588              	.L109:
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is not being removed, so reset the read
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pointer. */
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1589              		.loc 1 1316 0
 1590 00fe 3B6B     		ldr	r3, [r7, #48]
 1591 0100 BA6A     		ldr	r2, [r7, #40]
 1592 0102 DA60     		str	r2, [r3, #12]
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					any other tasks waiting for the data. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1593              		.loc 1 1320 0
 1594 0104 3B6B     		ldr	r3, [r7, #48]
 1595 0106 5B6A     		ldr	r3, [r3, #36]
 1596 0108 002B     		cmp	r3, #0
 1597 010a 0FD0     		beq	.L111
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1598              		.loc 1 1322 0
 1599 010c 3B6B     		ldr	r3, [r7, #48]
 1600 010e 2433     		adds	r3, r3, #36
 1601 0110 1846     		mov	r0, r3
 1602 0112 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1603 0116 0346     		mov	r3, r0
ARM GAS  /tmp/ccwLwC1u.s 			page 57


 1604 0118 002B     		cmp	r3, #0
 1605 011a 07D0     		beq	.L111
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1606              		.loc 1 1325 0
 1607 011c 434B     		ldr	r3, .L123
 1608 011e 4FF08052 		mov	r2, #268435456
 1609 0122 1A60     		str	r2, [r3]
 1610              		.syntax unified
 1611              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1612 0124 BFF34F8F 		dsb
 1613              	@ 0 "" 2
 1614              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1615 0128 BFF36F8F 		isb
 1616              	@ 0 "" 2
 1617              		.thumb
 1618              		.syntax unified
 1619              	.L111:
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 1620              		.loc 1 1338 0
 1621 012c FFF7FEFF 		bl	vPortExitCritical
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1622              		.loc 1 1339 0
 1623 0130 0123     		movs	r3, #1
 1624 0132 77E0     		b	.L122
 1625              	.L108:
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 1626              		.loc 1 1343 0
 1627 0134 7B68     		ldr	r3, [r7, #4]
 1628 0136 002B     		cmp	r3, #0
 1629 0138 03D1     		bne	.L113
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 1630              		.loc 1 1347 0
 1631 013a FFF7FEFF 		bl	vPortExitCritical
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 1632              		.loc 1 1349 0
 1633 013e 0023     		movs	r3, #0
ARM GAS  /tmp/ccwLwC1u.s 			page 58


 1634 0140 70E0     		b	.L122
 1635              	.L113:
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1636              		.loc 1 1351 0
 1637 0142 7B6B     		ldr	r3, [r7, #52]
 1638 0144 002B     		cmp	r3, #0
 1639 0146 06D1     		bne	.L114
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1640              		.loc 1 1355 0
 1641 0148 07F11403 		add	r3, r7, #20
 1642 014c 1846     		mov	r0, r3
 1643 014e FFF7FEFF 		bl	vTaskSetTimeOutState
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1644              		.loc 1 1356 0
 1645 0152 0123     		movs	r3, #1
 1646 0154 7B63     		str	r3, [r7, #52]
 1647              	.L114:
 1648              	.LBE117:
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 1649              		.loc 1 1365 0
 1650 0156 FFF7FEFF 		bl	vPortExitCritical
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 1651              		.loc 1 1370 0
 1652 015a FFF7FEFF 		bl	vTaskSuspendAll
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1653              		.loc 1 1371 0
 1654 015e FFF7FEFF 		bl	vPortEnterCritical
 1655 0162 3B6B     		ldr	r3, [r7, #48]
 1656 0164 93F84430 		ldrb	r3, [r3, #68]
 1657 0168 5BB2     		sxtb	r3, r3
 1658 016a B3F1FF3F 		cmp	r3, #-1
 1659 016e 03D1     		bne	.L115
 1660              		.loc 1 1371 0 is_stmt 0 discriminator 1
 1661 0170 3B6B     		ldr	r3, [r7, #48]
 1662 0172 0022     		movs	r2, #0
 1663 0174 83F84420 		strb	r2, [r3, #68]
 1664              	.L115:
 1665              		.loc 1 1371 0 discriminator 3
 1666 0178 3B6B     		ldr	r3, [r7, #48]
 1667 017a 93F84530 		ldrb	r3, [r3, #69]
 1668 017e 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/ccwLwC1u.s 			page 59


 1669 0180 B3F1FF3F 		cmp	r3, #-1
 1670 0184 03D1     		bne	.L116
 1671              		.loc 1 1371 0 discriminator 4
 1672 0186 3B6B     		ldr	r3, [r7, #48]
 1673 0188 0022     		movs	r2, #0
 1674 018a 83F84520 		strb	r2, [r3, #69]
 1675              	.L116:
 1676              		.loc 1 1371 0 discriminator 6
 1677 018e FFF7FEFF 		bl	vPortExitCritical
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1678              		.loc 1 1374 0 is_stmt 1 discriminator 6
 1679 0192 3A1D     		adds	r2, r7, #4
 1680 0194 07F11403 		add	r3, r7, #20
 1681 0198 1146     		mov	r1, r2
 1682 019a 1846     		mov	r0, r3
 1683 019c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1684 01a0 0346     		mov	r3, r0
 1685 01a2 002B     		cmp	r3, #0
 1686 01a4 31D1     		bne	.L117
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1687              		.loc 1 1376 0
 1688 01a6 386B     		ldr	r0, [r7, #48]
 1689 01a8 FFF7FEFF 		bl	prvIsQueueEmpty
 1690 01ac 0346     		mov	r3, r0
 1691 01ae 002B     		cmp	r3, #0
 1692 01b0 25D0     		beq	.L118
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1693              		.loc 1 1382 0
 1694 01b2 3B6B     		ldr	r3, [r7, #48]
 1695 01b4 1B68     		ldr	r3, [r3]
 1696 01b6 002B     		cmp	r3, #0
 1697 01b8 08D1     		bne	.L119
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
 1698              		.loc 1 1384 0
 1699 01ba FFF7FEFF 		bl	vPortEnterCritical
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 1700              		.loc 1 1386 0
 1701 01be 3B6B     		ldr	r3, [r7, #48]
 1702 01c0 5B68     		ldr	r3, [r3, #4]
 1703 01c2 1846     		mov	r0, r3
 1704 01c4 FFF7FEFF 		bl	vTaskPriorityInherit
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
 1705              		.loc 1 1388 0
 1706 01c8 FFF7FEFF 		bl	vPortExitCritical
 1707              	.L119:
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccwLwC1u.s 			page 60


1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1708              		.loc 1 1397 0
 1709 01cc 3B6B     		ldr	r3, [r7, #48]
 1710 01ce 2433     		adds	r3, r3, #36
 1711 01d0 7A68     		ldr	r2, [r7, #4]
 1712 01d2 1146     		mov	r1, r2
 1713 01d4 1846     		mov	r0, r3
 1714 01d6 FFF7FEFF 		bl	vTaskPlaceOnEventList
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1715              		.loc 1 1398 0
 1716 01da 386B     		ldr	r0, [r7, #48]
 1717 01dc FFF7FEFF 		bl	prvUnlockQueue
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1718              		.loc 1 1399 0
 1719 01e0 FFF7FEFF 		bl	xTaskResumeAll
 1720 01e4 0346     		mov	r3, r0
 1721 01e6 002B     		cmp	r3, #0
 1722 01e8 7FF455AF 		bne	.L106
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 1723              		.loc 1 1401 0
 1724 01ec 0F4B     		ldr	r3, .L123
 1725 01ee 4FF08052 		mov	r2, #268435456
 1726 01f2 1A60     		str	r2, [r3]
 1727              		.syntax unified
 1728              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1729 01f4 BFF34F8F 		dsb
 1730              	@ 0 "" 2
 1731              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1732 01f8 BFF36F8F 		isb
 1733              	@ 0 "" 2
 1734              		.thumb
 1735              		.syntax unified
 1736 01fc 4BE7     		b	.L106
 1737              	.L118:
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1738              		.loc 1 1411 0
 1739 01fe 386B     		ldr	r0, [r7, #48]
 1740 0200 FFF7FEFF 		bl	prvUnlockQueue
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1741              		.loc 1 1412 0
ARM GAS  /tmp/ccwLwC1u.s 			page 61


 1742 0204 FFF7FEFF 		bl	xTaskResumeAll
 1743 0208 45E7     		b	.L106
 1744              	.L117:
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 1745              		.loc 1 1417 0
 1746 020a 386B     		ldr	r0, [r7, #48]
 1747 020c FFF7FEFF 		bl	prvUnlockQueue
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1748              		.loc 1 1418 0
 1749 0210 FFF7FEFF 		bl	xTaskResumeAll
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1750              		.loc 1 1420 0
 1751 0214 386B     		ldr	r0, [r7, #48]
 1752 0216 FFF7FEFF 		bl	prvIsQueueEmpty
 1753 021a 0346     		mov	r3, r0
 1754 021c 002B     		cmp	r3, #0
 1755 021e 3FF43AAF 		beq	.L106
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 1756              		.loc 1 1423 0
 1757 0222 0023     		movs	r3, #0
 1758              	.L122:
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1759              		.loc 1 1431 0 discriminator 7
 1760 0224 1846     		mov	r0, r3
 1761 0226 3837     		adds	r7, r7, #56
 1762              	.LCFI43:
 1763              		.cfi_def_cfa_offset 8
 1764 0228 BD46     		mov	sp, r7
 1765              	.LCFI44:
 1766              		.cfi_def_cfa_register 13
 1767              		@ sp needed
 1768 022a 80BD     		pop	{r7, pc}
 1769              	.L124:
 1770              		.align	2
 1771              	.L123:
 1772 022c 04ED00E0 		.word	-536810236
 1773              		.cfi_endproc
 1774              	.LFE151:
 1776              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1777              		.align	1
 1778              		.global	xQueueReceiveFromISR
 1779              		.syntax unified
 1780              		.thumb
ARM GAS  /tmp/ccwLwC1u.s 			page 62


 1781              		.thumb_func
 1782              		.fpu fpv4-sp-d16
 1784              	xQueueReceiveFromISR:
 1785              	.LFB152:
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1786              		.loc 1 1435 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 56
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790 0000 80B5     		push	{r7, lr}
 1791              	.LCFI45:
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 8EB0     		sub	sp, sp, #56
 1796              	.LCFI46:
 1797              		.cfi_def_cfa_offset 64
 1798 0004 00AF     		add	r7, sp, #0
 1799              	.LCFI47:
 1800              		.cfi_def_cfa_register 7
 1801 0006 F860     		str	r0, [r7, #12]
 1802 0008 B960     		str	r1, [r7, #8]
 1803 000a 7A60     		str	r2, [r7, #4]
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1804              		.loc 1 1438 0
 1805 000c FB68     		ldr	r3, [r7, #12]
 1806 000e 3B63     		str	r3, [r7, #48]
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 1807              		.loc 1 1440 0
 1808 0010 3B6B     		ldr	r3, [r7, #48]
 1809 0012 002B     		cmp	r3, #0
 1810 0014 0BD1     		bne	.L126
 1811              	.LBB118:
 1812              	.LBB119:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1813              		.loc 2 237 0 discriminator 1
 1814              		.syntax unified
 1815              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1816 0016 4FF05003 			mov r3, #80												
 1817 001a 72B6     		cpsid i													
 1818 001c 83F31188 		msr basepri, r3											
 1819 0020 BFF36F8F 		isb														
 1820 0024 BFF34F8F 		dsb														
 1821 0028 62B6     		cpsie i													
 1822              	
 1823              	@ 0 "" 2
 1824              		.thumb
 1825              		.syntax unified
 1826 002a 3B62     		str	r3, [r7, #32]
 1827              	.L127:
 1828              	.LBE119:
ARM GAS  /tmp/ccwLwC1u.s 			page 63


 1829              	.LBE118:
 1830              		.loc 1 1440 0 discriminator 1
 1831 002c FEE7     		b	.L127
 1832              	.L126:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1833              		.loc 1 1441 0
 1834 002e BB68     		ldr	r3, [r7, #8]
 1835 0030 002B     		cmp	r3, #0
 1836 0032 03D1     		bne	.L128
 1837              		.loc 1 1441 0 is_stmt 0 discriminator 2
 1838 0034 3B6B     		ldr	r3, [r7, #48]
 1839 0036 1B6C     		ldr	r3, [r3, #64]
 1840 0038 002B     		cmp	r3, #0
 1841 003a 01D1     		bne	.L129
 1842              	.L128:
 1843              		.loc 1 1441 0 discriminator 3
 1844 003c 0123     		movs	r3, #1
 1845 003e 00E0     		b	.L130
 1846              	.L129:
 1847              		.loc 1 1441 0 discriminator 4
 1848 0040 0023     		movs	r3, #0
 1849              	.L130:
 1850              		.loc 1 1441 0 discriminator 6
 1851 0042 002B     		cmp	r3, #0
 1852 0044 0BD1     		bne	.L131
 1853              	.LBB120:
 1854              	.LBB121:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1855              		.loc 2 237 0 is_stmt 1 discriminator 7
 1856              		.syntax unified
 1857              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1858 0046 4FF05003 			mov r3, #80												
 1859 004a 72B6     		cpsid i													
 1860 004c 83F31188 		msr basepri, r3											
 1861 0050 BFF36F8F 		isb														
 1862 0054 BFF34F8F 		dsb														
 1863 0058 62B6     		cpsie i													
 1864              	
 1865              	@ 0 "" 2
 1866              		.thumb
 1867              		.syntax unified
 1868 005a FB61     		str	r3, [r7, #28]
 1869              	.L132:
 1870              	.LBE121:
 1871              	.LBE120:
 1872              		.loc 1 1441 0 discriminator 2
 1873 005c FEE7     		b	.L132
 1874              	.L131:
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
ARM GAS  /tmp/ccwLwC1u.s 			page 64


1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1875              		.loc 1 1457 0
 1876 005e FFF7FEFF 		bl	vPortValidateInterruptPriority
 1877              	.LBB122:
 1878              	.LBB123:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1879              		.loc 2 255 0
 1880              		.syntax unified
 1881              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1882 0062 EFF31182 			mrs r2, basepri											
 1883 0066 4FF05003 		mov r3, #80												
 1884 006a 72B6     		cpsid i													
 1885 006c 83F31188 		msr basepri, r3											
 1886 0070 BFF36F8F 		isb														
 1887 0074 BFF34F8F 		dsb														
 1888 0078 62B6     		cpsie i													
 1889              	
 1890              	@ 0 "" 2
 1891              		.thumb
 1892              		.syntax unified
 1893 007a BA61     		str	r2, [r7, #24]
 1894 007c 7B61     		str	r3, [r7, #20]
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 1895              		.loc 2 269 0
 1896 007e BB69     		ldr	r3, [r7, #24]
 1897              	.LBE123:
 1898              	.LBE122:
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1899              		.loc 1 1459 0
 1900 0080 FB62     		str	r3, [r7, #44]
 1901              	.LBB124:
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1902              		.loc 1 1461 0
 1903 0082 3B6B     		ldr	r3, [r7, #48]
 1904 0084 9B6B     		ldr	r3, [r3, #56]
 1905 0086 BB62     		str	r3, [r7, #40]
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 1906              		.loc 1 1464 0
 1907 0088 BB6A     		ldr	r3, [r7, #40]
 1908 008a 002B     		cmp	r3, #0
 1909 008c 2FD0     		beq	.L134
 1910              	.LBB125:
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
 1911              		.loc 1 1466 0
 1912 008e 3B6B     		ldr	r3, [r7, #48]
 1913 0090 93F84430 		ldrb	r3, [r3, #68]
ARM GAS  /tmp/ccwLwC1u.s 			page 65


 1914 0094 87F82730 		strb	r3, [r7, #39]
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1915              		.loc 1 1470 0
 1916 0098 B968     		ldr	r1, [r7, #8]
 1917 009a 386B     		ldr	r0, [r7, #48]
 1918 009c FFF7FEFF 		bl	prvCopyDataFromQueue
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 1919              		.loc 1 1471 0
 1920 00a0 BB6A     		ldr	r3, [r7, #40]
 1921 00a2 5A1E     		subs	r2, r3, #1
 1922 00a4 3B6B     		ldr	r3, [r7, #48]
 1923 00a6 9A63     		str	r2, [r3, #56]
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
 1924              		.loc 1 1477 0
 1925 00a8 97F92730 		ldrsb	r3, [r7, #39]
 1926 00ac B3F1FF3F 		cmp	r3, #-1
 1927 00b0 12D1     		bne	.L135
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1928              		.loc 1 1479 0
 1929 00b2 3B6B     		ldr	r3, [r7, #48]
 1930 00b4 1B69     		ldr	r3, [r3, #16]
 1931 00b6 002B     		cmp	r3, #0
 1932 00b8 16D0     		beq	.L136
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1933              		.loc 1 1481 0
 1934 00ba 3B6B     		ldr	r3, [r7, #48]
 1935 00bc 1033     		adds	r3, r3, #16
 1936 00be 1846     		mov	r0, r3
 1937 00c0 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1938 00c4 0346     		mov	r3, r0
 1939 00c6 002B     		cmp	r3, #0
 1940 00c8 0ED0     		beq	.L136
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 1941              		.loc 1 1485 0
 1942 00ca 7B68     		ldr	r3, [r7, #4]
 1943 00cc 002B     		cmp	r3, #0
 1944 00ce 0BD0     		beq	.L136
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 1945              		.loc 1 1487 0
 1946 00d0 7B68     		ldr	r3, [r7, #4]
 1947 00d2 0122     		movs	r2, #1
 1948 00d4 1A60     		str	r2, [r3]
 1949 00d6 07E0     		b	.L136
ARM GAS  /tmp/ccwLwC1u.s 			page 66


 1950              	.L135:
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 1951              		.loc 1 1508 0
 1952 00d8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1953 00dc 0133     		adds	r3, r3, #1
 1954 00de DBB2     		uxtb	r3, r3
 1955 00e0 5AB2     		sxtb	r2, r3
 1956 00e2 3B6B     		ldr	r3, [r7, #48]
 1957 00e4 83F84420 		strb	r2, [r3, #68]
 1958              	.L136:
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1959              		.loc 1 1511 0
 1960 00e8 0123     		movs	r3, #1
 1961 00ea 7B63     		str	r3, [r7, #52]
 1962              	.LBE125:
 1963 00ec 01E0     		b	.L137
 1964              	.L134:
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 1965              		.loc 1 1515 0
 1966 00ee 0023     		movs	r3, #0
 1967 00f0 7B63     		str	r3, [r7, #52]
 1968              	.L137:
 1969 00f2 FB6A     		ldr	r3, [r7, #44]
 1970 00f4 3B61     		str	r3, [r7, #16]
 1971              	.LBE124:
 1972              	.LBB126:
 1973              	.LBB127:
 1974              		.loc 2 275 0
 1975 00f6 3B69     		ldr	r3, [r7, #16]
 1976              		.syntax unified
 1977              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1978 00f8 83F31188 			msr basepri, r3	
ARM GAS  /tmp/ccwLwC1u.s 			page 67


 1979              	@ 0 "" 2
 1980              		.thumb
 1981              		.syntax unified
 1982              	.LBE127:
 1983              	.LBE126:
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1984              		.loc 1 1521 0
 1985 00fc 7B6B     		ldr	r3, [r7, #52]
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1986              		.loc 1 1522 0
 1987 00fe 1846     		mov	r0, r3
 1988 0100 3837     		adds	r7, r7, #56
 1989              	.LCFI48:
 1990              		.cfi_def_cfa_offset 8
 1991 0102 BD46     		mov	sp, r7
 1992              	.LCFI49:
 1993              		.cfi_def_cfa_register 13
 1994              		@ sp needed
 1995 0104 80BD     		pop	{r7, pc}
 1996              		.cfi_endproc
 1997              	.LFE152:
 1999              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2000              		.align	1
 2001              		.global	xQueuePeekFromISR
 2002              		.syntax unified
 2003              		.thumb
 2004              		.thumb_func
 2005              		.fpu fpv4-sp-d16
 2007              	xQueuePeekFromISR:
 2008              	.LFB153:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2009              		.loc 1 1526 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 48
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 80B5     		push	{r7, lr}
 2014              	.LCFI50:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 7, -8
 2017              		.cfi_offset 14, -4
 2018 0002 8CB0     		sub	sp, sp, #48
 2019              	.LCFI51:
 2020              		.cfi_def_cfa_offset 56
 2021 0004 00AF     		add	r7, sp, #0
 2022              	.LCFI52:
 2023              		.cfi_def_cfa_register 7
 2024 0006 7860     		str	r0, [r7, #4]
 2025 0008 3960     		str	r1, [r7]
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  /tmp/ccwLwC1u.s 			page 68


1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2026              		.loc 1 1530 0
 2027 000a 7B68     		ldr	r3, [r7, #4]
 2028 000c BB62     		str	r3, [r7, #40]
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 2029              		.loc 1 1532 0
 2030 000e BB6A     		ldr	r3, [r7, #40]
 2031 0010 002B     		cmp	r3, #0
 2032 0012 0BD1     		bne	.L140
 2033              	.LBB128:
 2034              	.LBB129:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2035              		.loc 2 237 0 discriminator 1
 2036              		.syntax unified
 2037              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2038 0014 4FF05003 			mov r3, #80												
 2039 0018 72B6     		cpsid i													
 2040 001a 83F31188 		msr basepri, r3											
 2041 001e BFF36F8F 		isb														
 2042 0022 BFF34F8F 		dsb														
 2043 0026 62B6     		cpsie i													
 2044              	
 2045              	@ 0 "" 2
 2046              		.thumb
 2047              		.syntax unified
 2048 0028 FB61     		str	r3, [r7, #28]
 2049              	.L141:
 2050              	.LBE129:
 2051              	.LBE128:
 2052              		.loc 1 1532 0 discriminator 1
 2053 002a FEE7     		b	.L141
 2054              	.L140:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2055              		.loc 1 1533 0
 2056 002c 3B68     		ldr	r3, [r7]
 2057 002e 002B     		cmp	r3, #0
 2058 0030 03D1     		bne	.L142
 2059              		.loc 1 1533 0 is_stmt 0 discriminator 2
 2060 0032 BB6A     		ldr	r3, [r7, #40]
 2061 0034 1B6C     		ldr	r3, [r3, #64]
 2062 0036 002B     		cmp	r3, #0
 2063 0038 01D1     		bne	.L143
 2064              	.L142:
 2065              		.loc 1 1533 0 discriminator 3
 2066 003a 0123     		movs	r3, #1
 2067 003c 00E0     		b	.L144
 2068              	.L143:
 2069              		.loc 1 1533 0 discriminator 4
 2070 003e 0023     		movs	r3, #0
 2071              	.L144:
 2072              		.loc 1 1533 0 discriminator 6
 2073 0040 002B     		cmp	r3, #0
 2074 0042 0BD1     		bne	.L145
 2075              	.LBB130:
ARM GAS  /tmp/ccwLwC1u.s 			page 69


 2076              	.LBB131:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2077              		.loc 2 237 0 is_stmt 1 discriminator 7
 2078              		.syntax unified
 2079              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2080 0044 4FF05003 			mov r3, #80												
 2081 0048 72B6     		cpsid i													
 2082 004a 83F31188 		msr basepri, r3											
 2083 004e BFF36F8F 		isb														
 2084 0052 BFF34F8F 		dsb														
 2085 0056 62B6     		cpsie i													
 2086              	
 2087              	@ 0 "" 2
 2088              		.thumb
 2089              		.syntax unified
 2090 0058 BB61     		str	r3, [r7, #24]
 2091              	.L146:
 2092              	.LBE131:
 2093              	.LBE130:
 2094              		.loc 1 1533 0 discriminator 2
 2095 005a FEE7     		b	.L146
 2096              	.L145:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2097              		.loc 1 1534 0
 2098 005c BB6A     		ldr	r3, [r7, #40]
 2099 005e 1B6C     		ldr	r3, [r3, #64]
 2100 0060 002B     		cmp	r3, #0
 2101 0062 0BD1     		bne	.L147
 2102              	.LBB132:
 2103              	.LBB133:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2104              		.loc 2 237 0 discriminator 1
 2105              		.syntax unified
 2106              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2107 0064 4FF05003 			mov r3, #80												
 2108 0068 72B6     		cpsid i													
 2109 006a 83F31188 		msr basepri, r3											
 2110 006e BFF36F8F 		isb														
 2111 0072 BFF34F8F 		dsb														
 2112 0076 62B6     		cpsie i													
 2113              	
 2114              	@ 0 "" 2
 2115              		.thumb
 2116              		.syntax unified
 2117 0078 7B61     		str	r3, [r7, #20]
 2118              	.L148:
 2119              	.LBE133:
 2120              	.LBE132:
 2121              		.loc 1 1534 0 discriminator 3
 2122 007a FEE7     		b	.L148
 2123              	.L147:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
ARM GAS  /tmp/ccwLwC1u.s 			page 70


1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2124              		.loc 1 1550 0
 2125 007c FFF7FEFF 		bl	vPortValidateInterruptPriority
 2126              	.LBB134:
 2127              	.LBB135:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2128              		.loc 2 255 0
 2129              		.syntax unified
 2130              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2131 0080 EFF31182 			mrs r2, basepri											
 2132 0084 4FF05003 		mov r3, #80												
 2133 0088 72B6     		cpsid i													
 2134 008a 83F31188 		msr basepri, r3											
 2135 008e BFF36F8F 		isb														
 2136 0092 BFF34F8F 		dsb														
 2137 0096 62B6     		cpsie i													
 2138              	
 2139              	@ 0 "" 2
 2140              		.thumb
 2141              		.syntax unified
 2142 0098 3A61     		str	r2, [r7, #16]
 2143 009a FB60     		str	r3, [r7, #12]
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 2144              		.loc 2 269 0
 2145 009c 3B69     		ldr	r3, [r7, #16]
 2146              	.LBE135:
 2147              	.LBE134:
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2148              		.loc 1 1552 0
 2149 009e 7B62     		str	r3, [r7, #36]
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 2150              		.loc 1 1555 0
 2151 00a0 BB6A     		ldr	r3, [r7, #40]
 2152 00a2 9B6B     		ldr	r3, [r3, #56]
 2153 00a4 002B     		cmp	r3, #0
 2154 00a6 0CD0     		beq	.L150
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 2155              		.loc 1 1561 0
 2156 00a8 BB6A     		ldr	r3, [r7, #40]
 2157 00aa DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccwLwC1u.s 			page 71


 2158 00ac 3B62     		str	r3, [r7, #32]
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2159              		.loc 1 1562 0
 2160 00ae 3968     		ldr	r1, [r7]
 2161 00b0 B86A     		ldr	r0, [r7, #40]
 2162 00b2 FFF7FEFF 		bl	prvCopyDataFromQueue
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2163              		.loc 1 1563 0
 2164 00b6 BB6A     		ldr	r3, [r7, #40]
 2165 00b8 3A6A     		ldr	r2, [r7, #32]
 2166 00ba DA60     		str	r2, [r3, #12]
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2167              		.loc 1 1565 0
 2168 00bc 0123     		movs	r3, #1
 2169 00be FB62     		str	r3, [r7, #44]
 2170 00c0 01E0     		b	.L151
 2171              	.L150:
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 2172              		.loc 1 1569 0
 2173 00c2 0023     		movs	r3, #0
 2174 00c4 FB62     		str	r3, [r7, #44]
 2175              	.L151:
 2176 00c6 7B6A     		ldr	r3, [r7, #36]
 2177 00c8 BB60     		str	r3, [r7, #8]
 2178              	.LBB136:
 2179              	.LBB137:
 2180              		.loc 2 275 0
 2181 00ca BB68     		ldr	r3, [r7, #8]
 2182              		.syntax unified
 2183              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2184 00cc 83F31188 			msr basepri, r3	
 2185              	@ 0 "" 2
 2186              		.thumb
 2187              		.syntax unified
 2188              	.LBE137:
 2189              	.LBE136:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 2190              		.loc 1 1575 0
 2191 00d0 FB6A     		ldr	r3, [r7, #44]
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2192              		.loc 1 1576 0
 2193 00d2 1846     		mov	r0, r3
 2194 00d4 3037     		adds	r7, r7, #48
 2195              	.LCFI53:
 2196              		.cfi_def_cfa_offset 8
 2197 00d6 BD46     		mov	sp, r7
 2198              	.LCFI54:
 2199              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwLwC1u.s 			page 72


 2200              		@ sp needed
 2201 00d8 80BD     		pop	{r7, pc}
 2202              		.cfi_endproc
 2203              	.LFE153:
 2205              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2206              		.align	1
 2207              		.global	uxQueueMessagesWaiting
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2211              		.fpu fpv4-sp-d16
 2213              	uxQueueMessagesWaiting:
 2214              	.LFB154:
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2215              		.loc 1 1580 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 16
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              	.LCFI55:
 2221              		.cfi_def_cfa_offset 8
 2222              		.cfi_offset 7, -8
 2223              		.cfi_offset 14, -4
 2224 0002 84B0     		sub	sp, sp, #16
 2225              	.LCFI56:
 2226              		.cfi_def_cfa_offset 24
 2227 0004 00AF     		add	r7, sp, #0
 2228              	.LCFI57:
 2229              		.cfi_def_cfa_register 7
 2230 0006 7860     		str	r0, [r7, #4]
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2231              		.loc 1 1583 0
 2232 0008 7B68     		ldr	r3, [r7, #4]
 2233 000a 002B     		cmp	r3, #0
 2234 000c 0BD1     		bne	.L154
 2235              	.LBB138:
 2236              	.LBB139:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2237              		.loc 2 237 0 discriminator 1
 2238              		.syntax unified
 2239              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2240 000e 4FF05003 			mov r3, #80												
 2241 0012 72B6     		cpsid i													
 2242 0014 83F31188 		msr basepri, r3											
 2243 0018 BFF36F8F 		isb														
 2244 001c BFF34F8F 		dsb														
 2245 0020 62B6     		cpsie i													
 2246              	
 2247              	@ 0 "" 2
 2248              		.thumb
 2249              		.syntax unified
 2250 0022 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccwLwC1u.s 			page 73


 2251              	.L155:
 2252              	.LBE139:
 2253              	.LBE138:
 2254              		.loc 1 1583 0 discriminator 1
 2255 0024 FEE7     		b	.L155
 2256              	.L154:
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 2257              		.loc 1 1585 0
 2258 0026 FFF7FEFF 		bl	vPortEnterCritical
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 2259              		.loc 1 1587 0
 2260 002a 7B68     		ldr	r3, [r7, #4]
 2261 002c 9B6B     		ldr	r3, [r3, #56]
 2262 002e FB60     		str	r3, [r7, #12]
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 2263              		.loc 1 1589 0
 2264 0030 FFF7FEFF 		bl	vPortExitCritical
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 2265              		.loc 1 1591 0
 2266 0034 FB68     		ldr	r3, [r7, #12]
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 2267              		.loc 1 1592 0
 2268 0036 1846     		mov	r0, r3
 2269 0038 1037     		adds	r7, r7, #16
 2270              	.LCFI58:
 2271              		.cfi_def_cfa_offset 8
 2272 003a BD46     		mov	sp, r7
 2273              	.LCFI59:
 2274              		.cfi_def_cfa_register 13
 2275              		@ sp needed
 2276 003c 80BD     		pop	{r7, pc}
 2277              		.cfi_endproc
 2278              	.LFE154:
 2280              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2281              		.align	1
 2282              		.global	uxQueueSpacesAvailable
 2283              		.syntax unified
 2284              		.thumb
 2285              		.thumb_func
 2286              		.fpu fpv4-sp-d16
 2288              	uxQueueSpacesAvailable:
 2289              	.LFB155:
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2290              		.loc 1 1596 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 24
 2293              		@ frame_needed = 1, uses_anonymous_args = 0
 2294 0000 80B5     		push	{r7, lr}
 2295              	.LCFI60:
 2296              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwLwC1u.s 			page 74


 2297              		.cfi_offset 7, -8
 2298              		.cfi_offset 14, -4
 2299 0002 86B0     		sub	sp, sp, #24
 2300              	.LCFI61:
 2301              		.cfi_def_cfa_offset 32
 2302 0004 00AF     		add	r7, sp, #0
 2303              	.LCFI62:
 2304              		.cfi_def_cfa_register 7
 2305 0006 7860     		str	r0, [r7, #4]
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
 2306              		.loc 1 1600 0
 2307 0008 7B68     		ldr	r3, [r7, #4]
 2308 000a 7B61     		str	r3, [r7, #20]
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 2309              		.loc 1 1601 0
 2310 000c 7B69     		ldr	r3, [r7, #20]
 2311 000e 002B     		cmp	r3, #0
 2312 0010 0BD1     		bne	.L158
 2313              	.LBB140:
 2314              	.LBB141:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2315              		.loc 2 237 0 discriminator 1
 2316              		.syntax unified
 2317              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2318 0012 4FF05003 			mov r3, #80												
 2319 0016 72B6     		cpsid i													
 2320 0018 83F31188 		msr basepri, r3											
 2321 001c BFF36F8F 		isb														
 2322 0020 BFF34F8F 		dsb														
 2323 0024 62B6     		cpsie i													
 2324              	
 2325              	@ 0 "" 2
 2326              		.thumb
 2327              		.syntax unified
 2328 0026 FB60     		str	r3, [r7, #12]
 2329              	.L159:
 2330              	.LBE141:
 2331              	.LBE140:
 2332              		.loc 1 1601 0 discriminator 1
 2333 0028 FEE7     		b	.L159
 2334              	.L158:
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 2335              		.loc 1 1603 0
 2336 002a FFF7FEFF 		bl	vPortEnterCritical
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 2337              		.loc 1 1605 0
 2338 002e 7B69     		ldr	r3, [r7, #20]
 2339 0030 DA6B     		ldr	r2, [r3, #60]
 2340 0032 7B69     		ldr	r3, [r7, #20]
 2341 0034 9B6B     		ldr	r3, [r3, #56]
 2342 0036 D31A     		subs	r3, r2, r3
 2343 0038 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccwLwC1u.s 			page 75


1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 2344              		.loc 1 1607 0
 2345 003a FFF7FEFF 		bl	vPortExitCritical
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 2346              		.loc 1 1609 0
 2347 003e 3B69     		ldr	r3, [r7, #16]
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 2348              		.loc 1 1610 0
 2349 0040 1846     		mov	r0, r3
 2350 0042 1837     		adds	r7, r7, #24
 2351              	.LCFI63:
 2352              		.cfi_def_cfa_offset 8
 2353 0044 BD46     		mov	sp, r7
 2354              	.LCFI64:
 2355              		.cfi_def_cfa_register 13
 2356              		@ sp needed
 2357 0046 80BD     		pop	{r7, pc}
 2358              		.cfi_endproc
 2359              	.LFE155:
 2361              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2362              		.align	1
 2363              		.global	uxQueueMessagesWaitingFromISR
 2364              		.syntax unified
 2365              		.thumb
 2366              		.thumb_func
 2367              		.fpu fpv4-sp-d16
 2369              	uxQueueMessagesWaitingFromISR:
 2370              	.LFB156:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2371              		.loc 1 1614 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 16
 2374              		@ frame_needed = 1, uses_anonymous_args = 0
 2375              		@ link register save eliminated.
 2376 0000 80B4     		push	{r7}
 2377              	.LCFI65:
 2378              		.cfi_def_cfa_offset 4
 2379              		.cfi_offset 7, -4
 2380 0002 85B0     		sub	sp, sp, #20
 2381              	.LCFI66:
 2382              		.cfi_def_cfa_offset 24
 2383 0004 00AF     		add	r7, sp, #0
 2384              	.LCFI67:
 2385              		.cfi_def_cfa_register 7
 2386 0006 7860     		str	r0, [r7, #4]
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2387              		.loc 1 1617 0
 2388 0008 7B68     		ldr	r3, [r7, #4]
 2389 000a 002B     		cmp	r3, #0
 2390 000c 0BD1     		bne	.L162
ARM GAS  /tmp/ccwLwC1u.s 			page 76


 2391              	.LBB142:
 2392              	.LBB143:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2393              		.loc 2 237 0 discriminator 1
 2394              		.syntax unified
 2395              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2396 000e 4FF05003 			mov r3, #80												
 2397 0012 72B6     		cpsid i													
 2398 0014 83F31188 		msr basepri, r3											
 2399 0018 BFF36F8F 		isb														
 2400 001c BFF34F8F 		dsb														
 2401 0020 62B6     		cpsie i													
 2402              	
 2403              	@ 0 "" 2
 2404              		.thumb
 2405              		.syntax unified
 2406 0022 BB60     		str	r3, [r7, #8]
 2407              	.L163:
 2408              	.LBE143:
 2409              	.LBE142:
 2410              		.loc 1 1617 0 discriminator 1
 2411 0024 FEE7     		b	.L163
 2412              	.L162:
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 2413              		.loc 1 1619 0
 2414 0026 7B68     		ldr	r3, [r7, #4]
 2415 0028 9B6B     		ldr	r3, [r3, #56]
 2416 002a FB60     		str	r3, [r7, #12]
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 2417              		.loc 1 1621 0
 2418 002c FB68     		ldr	r3, [r7, #12]
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 2419              		.loc 1 1622 0
 2420 002e 1846     		mov	r0, r3
 2421 0030 1437     		adds	r7, r7, #20
 2422              	.LCFI68:
 2423              		.cfi_def_cfa_offset 4
 2424 0032 BD46     		mov	sp, r7
 2425              	.LCFI69:
 2426              		.cfi_def_cfa_register 13
 2427              		@ sp needed
 2428 0034 5DF8047B 		ldr	r7, [sp], #4
 2429              	.LCFI70:
 2430              		.cfi_restore 7
 2431              		.cfi_def_cfa_offset 0
 2432 0038 7047     		bx	lr
 2433              		.cfi_endproc
 2434              	.LFE156:
 2436              		.section	.text.vQueueDelete,"ax",%progbits
 2437              		.align	1
 2438              		.global	vQueueDelete
 2439              		.syntax unified
 2440              		.thumb
 2441              		.thumb_func
 2442              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccwLwC1u.s 			page 77


 2444              	vQueueDelete:
 2445              	.LFB157:
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2446              		.loc 1 1626 0
 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 16
 2449              		@ frame_needed = 1, uses_anonymous_args = 0
 2450 0000 80B5     		push	{r7, lr}
 2451              	.LCFI71:
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 84B0     		sub	sp, sp, #16
 2456              	.LCFI72:
 2457              		.cfi_def_cfa_offset 24
 2458 0004 00AF     		add	r7, sp, #0
 2459              	.LCFI73:
 2460              		.cfi_def_cfa_register 7
 2461 0006 7860     		str	r0, [r7, #4]
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2462              		.loc 1 1627 0
 2463 0008 7B68     		ldr	r3, [r7, #4]
 2464 000a FB60     		str	r3, [r7, #12]
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 2465              		.loc 1 1629 0
 2466 000c FB68     		ldr	r3, [r7, #12]
 2467 000e 002B     		cmp	r3, #0
 2468 0010 0BD1     		bne	.L166
 2469              	.LBB144:
 2470              	.LBB145:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2471              		.loc 2 237 0 discriminator 1
 2472              		.syntax unified
 2473              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2474 0012 4FF05003 			mov r3, #80												
 2475 0016 72B6     		cpsid i													
 2476 0018 83F31188 		msr basepri, r3											
 2477 001c BFF36F8F 		isb														
 2478 0020 BFF34F8F 		dsb														
 2479 0024 62B6     		cpsie i													
 2480              	
 2481              	@ 0 "" 2
 2482              		.thumb
 2483              		.syntax unified
 2484 0026 BB60     		str	r3, [r7, #8]
 2485              	.L167:
 2486              	.LBE145:
 2487              	.LBE144:
 2488              		.loc 1 1629 0 discriminator 1
 2489 0028 FEE7     		b	.L167
 2490              	.L166:
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 78


1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 2491              		.loc 1 1634 0
 2492 002a F868     		ldr	r0, [r7, #12]
 2493 002c FFF7FEFF 		bl	vQueueUnregisterQueue
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
 2494              		.loc 1 1642 0
 2495 0030 F868     		ldr	r0, [r7, #12]
 2496 0032 FFF7FEFF 		bl	vPortFree
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2497              		.loc 1 1664 0
 2498 0036 00BF     		nop
 2499 0038 1037     		adds	r7, r7, #16
 2500              	.LCFI74:
 2501              		.cfi_def_cfa_offset 8
 2502 003a BD46     		mov	sp, r7
 2503              	.LCFI75:
 2504              		.cfi_def_cfa_register 13
 2505              		@ sp needed
 2506 003c 80BD     		pop	{r7, pc}
 2507              		.cfi_endproc
 2508              	.LFE157:
 2510              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 2511              		.align	1
 2512              		.syntax unified
 2513              		.thumb
 2514              		.thumb_func
 2515              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccwLwC1u.s 			page 79


 2517              	prvCopyDataToQueue:
 2518              	.LFB158:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2519              		.loc 1 1698 0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 24
 2522              		@ frame_needed = 1, uses_anonymous_args = 0
 2523 0000 80B5     		push	{r7, lr}
 2524              	.LCFI76:
 2525              		.cfi_def_cfa_offset 8
 2526              		.cfi_offset 7, -8
 2527              		.cfi_offset 14, -4
 2528 0002 86B0     		sub	sp, sp, #24
 2529              	.LCFI77:
 2530              		.cfi_def_cfa_offset 32
 2531 0004 00AF     		add	r7, sp, #0
 2532              	.LCFI78:
 2533              		.cfi_def_cfa_register 7
 2534 0006 F860     		str	r0, [r7, #12]
 2535 0008 B960     		str	r1, [r7, #8]
 2536 000a 7A60     		str	r2, [r7, #4]
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 2537              		.loc 1 1699 0
 2538 000c 0023     		movs	r3, #0
ARM GAS  /tmp/ccwLwC1u.s 			page 80


 2539 000e 7B61     		str	r3, [r7, #20]
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 2540              		.loc 1 1704 0
 2541 0010 FB68     		ldr	r3, [r7, #12]
 2542 0012 9B6B     		ldr	r3, [r3, #56]
 2543 0014 3B61     		str	r3, [r7, #16]
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 2544              		.loc 1 1706 0
 2545 0016 FB68     		ldr	r3, [r7, #12]
 2546 0018 1B6C     		ldr	r3, [r3, #64]
 2547 001a 002B     		cmp	r3, #0
 2548 001c 0DD1     		bne	.L169
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2549              		.loc 1 1710 0
 2550 001e FB68     		ldr	r3, [r7, #12]
 2551 0020 1B68     		ldr	r3, [r3]
 2552 0022 002B     		cmp	r3, #0
 2553 0024 4DD1     		bne	.L170
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 2554              		.loc 1 1713 0
 2555 0026 FB68     		ldr	r3, [r7, #12]
 2556 0028 5B68     		ldr	r3, [r3, #4]
 2557 002a 1846     		mov	r0, r3
 2558 002c FFF7FEFF 		bl	xTaskPriorityDisinherit
 2559 0030 7861     		str	r0, [r7, #20]
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 2560              		.loc 1 1714 0
 2561 0032 FB68     		ldr	r3, [r7, #12]
 2562 0034 0022     		movs	r2, #0
 2563 0036 5A60     		str	r2, [r3, #4]
 2564 0038 43E0     		b	.L170
 2565              	.L169:
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 2566              		.loc 1 1723 0
 2567 003a 7B68     		ldr	r3, [r7, #4]
 2568 003c 002B     		cmp	r3, #0
 2569 003e 19D1     		bne	.L171
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
ARM GAS  /tmp/ccwLwC1u.s 			page 81


 2570              		.loc 1 1725 0
 2571 0040 FB68     		ldr	r3, [r7, #12]
 2572 0042 9868     		ldr	r0, [r3, #8]
 2573 0044 FB68     		ldr	r3, [r7, #12]
 2574 0046 1B6C     		ldr	r3, [r3, #64]
 2575 0048 1A46     		mov	r2, r3
 2576 004a B968     		ldr	r1, [r7, #8]
 2577 004c FFF7FEFF 		bl	memcpy
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 2578              		.loc 1 1726 0
 2579 0050 FB68     		ldr	r3, [r7, #12]
 2580 0052 9A68     		ldr	r2, [r3, #8]
 2581 0054 FB68     		ldr	r3, [r7, #12]
 2582 0056 1B6C     		ldr	r3, [r3, #64]
 2583 0058 1A44     		add	r2, r2, r3
 2584 005a FB68     		ldr	r3, [r7, #12]
 2585 005c 9A60     		str	r2, [r3, #8]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 2586              		.loc 1 1727 0
 2587 005e FB68     		ldr	r3, [r7, #12]
 2588 0060 9A68     		ldr	r2, [r3, #8]
 2589 0062 FB68     		ldr	r3, [r7, #12]
 2590 0064 5B68     		ldr	r3, [r3, #4]
 2591 0066 9A42     		cmp	r2, r3
 2592 0068 2BD3     		bcc	.L170
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 2593              		.loc 1 1729 0
 2594 006a FB68     		ldr	r3, [r7, #12]
 2595 006c 1A68     		ldr	r2, [r3]
 2596 006e FB68     		ldr	r3, [r7, #12]
 2597 0070 9A60     		str	r2, [r3, #8]
 2598 0072 26E0     		b	.L170
 2599              	.L171:
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
 2600              		.loc 1 1738 0
 2601 0074 FB68     		ldr	r3, [r7, #12]
 2602 0076 D868     		ldr	r0, [r3, #12]
 2603 0078 FB68     		ldr	r3, [r7, #12]
 2604 007a 1B6C     		ldr	r3, [r3, #64]
 2605 007c 1A46     		mov	r2, r3
 2606 007e B968     		ldr	r1, [r7, #8]
 2607 0080 FFF7FEFF 		bl	memcpy
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 2608              		.loc 1 1739 0
 2609 0084 FB68     		ldr	r3, [r7, #12]
 2610 0086 DA68     		ldr	r2, [r3, #12]
 2611 0088 FB68     		ldr	r3, [r7, #12]
 2612 008a 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccwLwC1u.s 			page 82


 2613 008c 5B42     		negs	r3, r3
 2614 008e 1A44     		add	r2, r2, r3
 2615 0090 FB68     		ldr	r3, [r7, #12]
 2616 0092 DA60     		str	r2, [r3, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 2617              		.loc 1 1740 0
 2618 0094 FB68     		ldr	r3, [r7, #12]
 2619 0096 DA68     		ldr	r2, [r3, #12]
 2620 0098 FB68     		ldr	r3, [r7, #12]
 2621 009a 1B68     		ldr	r3, [r3]
 2622 009c 9A42     		cmp	r2, r3
 2623 009e 07D2     		bcs	.L172
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 2624              		.loc 1 1742 0
 2625 00a0 FB68     		ldr	r3, [r7, #12]
 2626 00a2 5A68     		ldr	r2, [r3, #4]
 2627 00a4 FB68     		ldr	r3, [r7, #12]
 2628 00a6 1B6C     		ldr	r3, [r3, #64]
 2629 00a8 5B42     		negs	r3, r3
 2630 00aa 1A44     		add	r2, r2, r3
 2631 00ac FB68     		ldr	r3, [r7, #12]
 2632 00ae DA60     		str	r2, [r3, #12]
 2633              	.L172:
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
 2634              		.loc 1 1749 0
 2635 00b0 7B68     		ldr	r3, [r7, #4]
 2636 00b2 022B     		cmp	r3, #2
 2637 00b4 05D1     		bne	.L170
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 2638              		.loc 1 1751 0
 2639 00b6 3B69     		ldr	r3, [r7, #16]
 2640 00b8 002B     		cmp	r3, #0
 2641 00ba 02D0     		beq	.L170
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
 2642              		.loc 1 1757 0
 2643 00bc 3B69     		ldr	r3, [r7, #16]
 2644 00be 013B     		subs	r3, r3, #1
 2645 00c0 3B61     		str	r3, [r7, #16]
 2646              	.L170:
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccwLwC1u.s 			page 83


1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
 2647              		.loc 1 1770 0
 2648 00c2 3B69     		ldr	r3, [r7, #16]
 2649 00c4 5A1C     		adds	r2, r3, #1
 2650 00c6 FB68     		ldr	r3, [r7, #12]
 2651 00c8 9A63     		str	r2, [r3, #56]
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 2652              		.loc 1 1772 0
 2653 00ca 7B69     		ldr	r3, [r7, #20]
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2654              		.loc 1 1773 0
 2655 00cc 1846     		mov	r0, r3
 2656 00ce 1837     		adds	r7, r7, #24
 2657              	.LCFI79:
 2658              		.cfi_def_cfa_offset 8
 2659 00d0 BD46     		mov	sp, r7
 2660              	.LCFI80:
 2661              		.cfi_def_cfa_register 13
 2662              		@ sp needed
 2663 00d2 80BD     		pop	{r7, pc}
 2664              		.cfi_endproc
 2665              	.LFE158:
 2667              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 2668              		.align	1
 2669              		.syntax unified
 2670              		.thumb
 2671              		.thumb_func
 2672              		.fpu fpv4-sp-d16
 2674              	prvCopyDataFromQueue:
 2675              	.LFB159:
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2676              		.loc 1 1777 0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 8
 2679              		@ frame_needed = 1, uses_anonymous_args = 0
 2680 0000 80B5     		push	{r7, lr}
 2681              	.LCFI81:
 2682              		.cfi_def_cfa_offset 8
 2683              		.cfi_offset 7, -8
 2684              		.cfi_offset 14, -4
 2685 0002 82B0     		sub	sp, sp, #8
 2686              	.LCFI82:
 2687              		.cfi_def_cfa_offset 16
 2688 0004 00AF     		add	r7, sp, #0
 2689              	.LCFI83:
 2690              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccwLwC1u.s 			page 84


 2691 0006 7860     		str	r0, [r7, #4]
 2692 0008 3960     		str	r1, [r7]
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 2693              		.loc 1 1778 0
 2694 000a 7B68     		ldr	r3, [r7, #4]
 2695 000c 1B6C     		ldr	r3, [r3, #64]
 2696 000e 002B     		cmp	r3, #0
 2697 0010 18D0     		beq	.L177
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 2698              		.loc 1 1780 0
 2699 0012 7B68     		ldr	r3, [r7, #4]
 2700 0014 DA68     		ldr	r2, [r3, #12]
 2701 0016 7B68     		ldr	r3, [r7, #4]
 2702 0018 1B6C     		ldr	r3, [r3, #64]
 2703 001a 1A44     		add	r2, r2, r3
 2704 001c 7B68     		ldr	r3, [r7, #4]
 2705 001e DA60     		str	r2, [r3, #12]
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2706              		.loc 1 1781 0
 2707 0020 7B68     		ldr	r3, [r7, #4]
 2708 0022 DA68     		ldr	r2, [r3, #12]
 2709 0024 7B68     		ldr	r3, [r7, #4]
 2710 0026 5B68     		ldr	r3, [r3, #4]
 2711 0028 9A42     		cmp	r2, r3
 2712 002a 03D3     		bcc	.L176
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 2713              		.loc 1 1783 0
 2714 002c 7B68     		ldr	r3, [r7, #4]
 2715 002e 1A68     		ldr	r2, [r3]
 2716 0030 7B68     		ldr	r3, [r7, #4]
 2717 0032 DA60     		str	r2, [r3, #12]
 2718              	.L176:
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 2719              		.loc 1 1789 0
 2720 0034 7B68     		ldr	r3, [r7, #4]
 2721 0036 D968     		ldr	r1, [r3, #12]
 2722 0038 7B68     		ldr	r3, [r7, #4]
 2723 003a 1B6C     		ldr	r3, [r3, #64]
 2724 003c 1A46     		mov	r2, r3
 2725 003e 3868     		ldr	r0, [r7]
 2726 0040 FFF7FEFF 		bl	memcpy
 2727              	.L177:
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2728              		.loc 1 1791 0
 2729 0044 00BF     		nop
 2730 0046 0837     		adds	r7, r7, #8
 2731              	.LCFI84:
 2732              		.cfi_def_cfa_offset 8
 2733 0048 BD46     		mov	sp, r7
ARM GAS  /tmp/ccwLwC1u.s 			page 85


 2734              	.LCFI85:
 2735              		.cfi_def_cfa_register 13
 2736              		@ sp needed
 2737 004a 80BD     		pop	{r7, pc}
 2738              		.cfi_endproc
 2739              	.LFE159:
 2741              		.section	.text.prvUnlockQueue,"ax",%progbits
 2742              		.align	1
 2743              		.syntax unified
 2744              		.thumb
 2745              		.thumb_func
 2746              		.fpu fpv4-sp-d16
 2748              	prvUnlockQueue:
 2749              	.LFB160:
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2750              		.loc 1 1795 0
 2751              		.cfi_startproc
 2752              		@ args = 0, pretend = 0, frame = 16
 2753              		@ frame_needed = 1, uses_anonymous_args = 0
 2754 0000 80B5     		push	{r7, lr}
 2755              	.LCFI86:
 2756              		.cfi_def_cfa_offset 8
 2757              		.cfi_offset 7, -8
 2758              		.cfi_offset 14, -4
 2759 0002 84B0     		sub	sp, sp, #16
 2760              	.LCFI87:
 2761              		.cfi_def_cfa_offset 24
 2762 0004 00AF     		add	r7, sp, #0
 2763              	.LCFI88:
 2764              		.cfi_def_cfa_register 7
 2765 0006 7860     		str	r0, [r7, #4]
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 2766              		.loc 1 1802 0
 2767 0008 FFF7FEFF 		bl	vPortEnterCritical
 2768              	.LBB146:
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
 2769              		.loc 1 1804 0
 2770 000c 7B68     		ldr	r3, [r7, #4]
 2771 000e 93F84530 		ldrb	r3, [r3, #69]
 2772 0012 FB73     		strb	r3, [r7, #15]
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
 2773              		.loc 1 1807 0
 2774 0014 11E0     		b	.L179
 2775              	.L183:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccwLwC1u.s 			page 86


1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2776              		.loc 1 1855 0
 2777 0016 7B68     		ldr	r3, [r7, #4]
 2778 0018 5B6A     		ldr	r3, [r3, #36]
 2779 001a 002B     		cmp	r3, #0
 2780 001c 12D0     		beq	.L189
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2781              		.loc 1 1857 0
 2782 001e 7B68     		ldr	r3, [r7, #4]
 2783 0020 2433     		adds	r3, r3, #36
ARM GAS  /tmp/ccwLwC1u.s 			page 87


 2784 0022 1846     		mov	r0, r3
 2785 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2786 0028 0346     		mov	r3, r0
 2787 002a 002B     		cmp	r3, #0
 2788 002c 01D0     		beq	.L181
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
 2789              		.loc 1 1861 0
 2790 002e FFF7FEFF 		bl	vTaskMissedYield
 2791              	.L181:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
 2792              		.loc 1 1875 0
 2793 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2794 0034 013B     		subs	r3, r3, #1
 2795 0036 DBB2     		uxtb	r3, r3
 2796 0038 FB73     		strb	r3, [r7, #15]
 2797              	.L179:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2798              		.loc 1 1807 0
 2799 003a 97F90F30 		ldrsb	r3, [r7, #15]
 2800 003e 002B     		cmp	r3, #0
 2801 0040 E9DC     		bgt	.L183
 2802 0042 00E0     		b	.L182
 2803              	.L189:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2804              		.loc 1 1870 0
 2805 0044 00BF     		nop
 2806              	.L182:
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 2807              		.loc 1 1878 0
 2808 0046 7B68     		ldr	r3, [r7, #4]
 2809 0048 FF22     		movs	r2, #255
 2810 004a 83F84520 		strb	r2, [r3, #69]
 2811              	.LBE146:
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 2812              		.loc 1 1880 0
 2813 004e FFF7FEFF 		bl	vPortExitCritical
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
ARM GAS  /tmp/ccwLwC1u.s 			page 88


1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 2814              		.loc 1 1883 0
 2815 0052 FFF7FEFF 		bl	vPortEnterCritical
 2816              	.LBB147:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
 2817              		.loc 1 1885 0
 2818 0056 7B68     		ldr	r3, [r7, #4]
 2819 0058 93F84430 		ldrb	r3, [r3, #68]
 2820 005c BB73     		strb	r3, [r7, #14]
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
 2821              		.loc 1 1887 0
 2822 005e 11E0     		b	.L184
 2823              	.L188:
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2824              		.loc 1 1889 0
 2825 0060 7B68     		ldr	r3, [r7, #4]
 2826 0062 1B69     		ldr	r3, [r3, #16]
 2827 0064 002B     		cmp	r3, #0
 2828 0066 12D0     		beq	.L190
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2829              		.loc 1 1891 0
 2830 0068 7B68     		ldr	r3, [r7, #4]
 2831 006a 1033     		adds	r3, r3, #16
 2832 006c 1846     		mov	r0, r3
 2833 006e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2834 0072 0346     		mov	r3, r0
 2835 0074 002B     		cmp	r3, #0
 2836 0076 01D0     		beq	.L186
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
 2837              		.loc 1 1893 0
 2838 0078 FFF7FEFF 		bl	vTaskMissedYield
 2839              	.L186:
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
 2840              		.loc 1 1900 0
 2841 007c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2842 007e 013B     		subs	r3, r3, #1
 2843 0080 DBB2     		uxtb	r3, r3
 2844 0082 BB73     		strb	r3, [r7, #14]
 2845              	.L184:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2846              		.loc 1 1887 0
 2847 0084 97F90E30 		ldrsb	r3, [r7, #14]
 2848 0088 002B     		cmp	r3, #0
 2849 008a E9DC     		bgt	.L188
 2850 008c 00E0     		b	.L187
 2851              	.L190:
ARM GAS  /tmp/ccwLwC1u.s 			page 89


1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2852              		.loc 1 1904 0
 2853 008e 00BF     		nop
 2854              	.L187:
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 2855              		.loc 1 1908 0
 2856 0090 7B68     		ldr	r3, [r7, #4]
 2857 0092 FF22     		movs	r2, #255
 2858 0094 83F84420 		strb	r2, [r3, #68]
 2859              	.LBE147:
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 2860              		.loc 1 1910 0
 2861 0098 FFF7FEFF 		bl	vPortExitCritical
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2862              		.loc 1 1911 0
 2863 009c 00BF     		nop
 2864 009e 1037     		adds	r7, r7, #16
 2865              	.LCFI89:
 2866              		.cfi_def_cfa_offset 8
 2867 00a0 BD46     		mov	sp, r7
 2868              	.LCFI90:
 2869              		.cfi_def_cfa_register 13
 2870              		@ sp needed
 2871 00a2 80BD     		pop	{r7, pc}
 2872              		.cfi_endproc
 2873              	.LFE160:
 2875              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 2876              		.align	1
 2877              		.syntax unified
 2878              		.thumb
 2879              		.thumb_func
 2880              		.fpu fpv4-sp-d16
 2882              	prvIsQueueEmpty:
 2883              	.LFB161:
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2884              		.loc 1 1915 0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 16
 2887              		@ frame_needed = 1, uses_anonymous_args = 0
 2888 0000 80B5     		push	{r7, lr}
 2889              	.LCFI91:
 2890              		.cfi_def_cfa_offset 8
 2891              		.cfi_offset 7, -8
 2892              		.cfi_offset 14, -4
 2893 0002 84B0     		sub	sp, sp, #16
 2894              	.LCFI92:
 2895              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccwLwC1u.s 			page 90


 2896 0004 00AF     		add	r7, sp, #0
 2897              	.LCFI93:
 2898              		.cfi_def_cfa_register 7
 2899 0006 7860     		str	r0, [r7, #4]
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 2900              		.loc 1 1918 0
 2901 0008 FFF7FEFF 		bl	vPortEnterCritical
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 2902              		.loc 1 1920 0
 2903 000c 7B68     		ldr	r3, [r7, #4]
 2904 000e 9B6B     		ldr	r3, [r3, #56]
 2905 0010 002B     		cmp	r3, #0
 2906 0012 02D1     		bne	.L192
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
 2907              		.loc 1 1922 0
 2908 0014 0123     		movs	r3, #1
 2909 0016 FB60     		str	r3, [r7, #12]
 2910 0018 01E0     		b	.L193
 2911              	.L192:
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
 2912              		.loc 1 1926 0
 2913 001a 0023     		movs	r3, #0
 2914 001c FB60     		str	r3, [r7, #12]
 2915              	.L193:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 2916              		.loc 1 1929 0
 2917 001e FFF7FEFF 		bl	vPortExitCritical
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 2918              		.loc 1 1931 0
 2919 0022 FB68     		ldr	r3, [r7, #12]
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2920              		.loc 1 1932 0
 2921 0024 1846     		mov	r0, r3
 2922 0026 1037     		adds	r7, r7, #16
 2923              	.LCFI94:
 2924              		.cfi_def_cfa_offset 8
 2925 0028 BD46     		mov	sp, r7
 2926              	.LCFI95:
 2927              		.cfi_def_cfa_register 13
 2928              		@ sp needed
 2929 002a 80BD     		pop	{r7, pc}
 2930              		.cfi_endproc
 2931              	.LFE161:
 2933              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2934              		.align	1
 2935              		.global	xQueueIsQueueEmptyFromISR
 2936              		.syntax unified
ARM GAS  /tmp/ccwLwC1u.s 			page 91


 2937              		.thumb
 2938              		.thumb_func
 2939              		.fpu fpv4-sp-d16
 2941              	xQueueIsQueueEmptyFromISR:
 2942              	.LFB162:
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2943              		.loc 1 1936 0
 2944              		.cfi_startproc
 2945              		@ args = 0, pretend = 0, frame = 16
 2946              		@ frame_needed = 1, uses_anonymous_args = 0
 2947              		@ link register save eliminated.
 2948 0000 80B4     		push	{r7}
 2949              	.LCFI96:
 2950              		.cfi_def_cfa_offset 4
 2951              		.cfi_offset 7, -4
 2952 0002 85B0     		sub	sp, sp, #20
 2953              	.LCFI97:
 2954              		.cfi_def_cfa_offset 24
 2955 0004 00AF     		add	r7, sp, #0
 2956              	.LCFI98:
 2957              		.cfi_def_cfa_register 7
 2958 0006 7860     		str	r0, [r7, #4]
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2959              		.loc 1 1939 0
 2960 0008 7B68     		ldr	r3, [r7, #4]
 2961 000a 002B     		cmp	r3, #0
 2962 000c 0BD1     		bne	.L196
 2963              	.LBB148:
 2964              	.LBB149:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2965              		.loc 2 237 0 discriminator 1
 2966              		.syntax unified
 2967              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2968 000e 4FF05003 			mov r3, #80												
 2969 0012 72B6     		cpsid i													
 2970 0014 83F31188 		msr basepri, r3											
 2971 0018 BFF36F8F 		isb														
 2972 001c BFF34F8F 		dsb														
 2973 0020 62B6     		cpsie i													
 2974              	
 2975              	@ 0 "" 2
 2976              		.thumb
 2977              		.syntax unified
 2978 0022 BB60     		str	r3, [r7, #8]
 2979              	.L197:
 2980              	.LBE149:
 2981              	.LBE148:
 2982              		.loc 1 1939 0 discriminator 1
 2983 0024 FEE7     		b	.L197
 2984              	.L196:
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2985              		.loc 1 1940 0
ARM GAS  /tmp/ccwLwC1u.s 			page 92


 2986 0026 7B68     		ldr	r3, [r7, #4]
 2987 0028 9B6B     		ldr	r3, [r3, #56]
 2988 002a 002B     		cmp	r3, #0
 2989 002c 02D1     		bne	.L198
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 2990              		.loc 1 1942 0
 2991 002e 0123     		movs	r3, #1
 2992 0030 FB60     		str	r3, [r7, #12]
 2993 0032 01E0     		b	.L199
 2994              	.L198:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 2995              		.loc 1 1946 0
 2996 0034 0023     		movs	r3, #0
 2997 0036 FB60     		str	r3, [r7, #12]
 2998              	.L199:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 2999              		.loc 1 1949 0
 3000 0038 FB68     		ldr	r3, [r7, #12]
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3001              		.loc 1 1950 0
 3002 003a 1846     		mov	r0, r3
 3003 003c 1437     		adds	r7, r7, #20
 3004              	.LCFI99:
 3005              		.cfi_def_cfa_offset 4
 3006 003e BD46     		mov	sp, r7
 3007              	.LCFI100:
 3008              		.cfi_def_cfa_register 13
 3009              		@ sp needed
 3010 0040 5DF8047B 		ldr	r7, [sp], #4
 3011              	.LCFI101:
 3012              		.cfi_restore 7
 3013              		.cfi_def_cfa_offset 0
 3014 0044 7047     		bx	lr
 3015              		.cfi_endproc
 3016              	.LFE162:
 3018              		.section	.text.prvIsQueueFull,"ax",%progbits
 3019              		.align	1
 3020              		.syntax unified
 3021              		.thumb
 3022              		.thumb_func
 3023              		.fpu fpv4-sp-d16
 3025              	prvIsQueueFull:
 3026              	.LFB163:
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3027              		.loc 1 1954 0
 3028              		.cfi_startproc
 3029              		@ args = 0, pretend = 0, frame = 16
 3030              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccwLwC1u.s 			page 93


 3031 0000 80B5     		push	{r7, lr}
 3032              	.LCFI102:
 3033              		.cfi_def_cfa_offset 8
 3034              		.cfi_offset 7, -8
 3035              		.cfi_offset 14, -4
 3036 0002 84B0     		sub	sp, sp, #16
 3037              	.LCFI103:
 3038              		.cfi_def_cfa_offset 24
 3039 0004 00AF     		add	r7, sp, #0
 3040              	.LCFI104:
 3041              		.cfi_def_cfa_register 7
 3042 0006 7860     		str	r0, [r7, #4]
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3043              		.loc 1 1957 0
 3044 0008 FFF7FEFF 		bl	vPortEnterCritical
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3045              		.loc 1 1959 0
 3046 000c 7B68     		ldr	r3, [r7, #4]
 3047 000e 9A6B     		ldr	r2, [r3, #56]
 3048 0010 7B68     		ldr	r3, [r7, #4]
 3049 0012 DB6B     		ldr	r3, [r3, #60]
 3050 0014 9A42     		cmp	r2, r3
 3051 0016 02D1     		bne	.L202
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
 3052              		.loc 1 1961 0
 3053 0018 0123     		movs	r3, #1
 3054 001a FB60     		str	r3, [r7, #12]
 3055 001c 01E0     		b	.L203
 3056              	.L202:
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
 3057              		.loc 1 1965 0
 3058 001e 0023     		movs	r3, #0
 3059 0020 FB60     		str	r3, [r7, #12]
 3060              	.L203:
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3061              		.loc 1 1968 0
 3062 0022 FFF7FEFF 		bl	vPortExitCritical
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3063              		.loc 1 1970 0
 3064 0026 FB68     		ldr	r3, [r7, #12]
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3065              		.loc 1 1971 0
 3066 0028 1846     		mov	r0, r3
 3067 002a 1037     		adds	r7, r7, #16
 3068              	.LCFI105:
 3069              		.cfi_def_cfa_offset 8
 3070 002c BD46     		mov	sp, r7
ARM GAS  /tmp/ccwLwC1u.s 			page 94


 3071              	.LCFI106:
 3072              		.cfi_def_cfa_register 13
 3073              		@ sp needed
 3074 002e 80BD     		pop	{r7, pc}
 3075              		.cfi_endproc
 3076              	.LFE163:
 3078              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3079              		.align	1
 3080              		.global	xQueueIsQueueFullFromISR
 3081              		.syntax unified
 3082              		.thumb
 3083              		.thumb_func
 3084              		.fpu fpv4-sp-d16
 3086              	xQueueIsQueueFullFromISR:
 3087              	.LFB164:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3088              		.loc 1 1975 0
 3089              		.cfi_startproc
 3090              		@ args = 0, pretend = 0, frame = 16
 3091              		@ frame_needed = 1, uses_anonymous_args = 0
 3092              		@ link register save eliminated.
 3093 0000 80B4     		push	{r7}
 3094              	.LCFI107:
 3095              		.cfi_def_cfa_offset 4
 3096              		.cfi_offset 7, -4
 3097 0002 85B0     		sub	sp, sp, #20
 3098              	.LCFI108:
 3099              		.cfi_def_cfa_offset 24
 3100 0004 00AF     		add	r7, sp, #0
 3101              	.LCFI109:
 3102              		.cfi_def_cfa_register 7
 3103 0006 7860     		str	r0, [r7, #4]
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 3104              		.loc 1 1978 0
 3105 0008 7B68     		ldr	r3, [r7, #4]
 3106 000a 002B     		cmp	r3, #0
 3107 000c 0BD1     		bne	.L206
 3108              	.LBB150:
 3109              	.LBB151:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3110              		.loc 2 237 0 discriminator 1
 3111              		.syntax unified
 3112              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3113 000e 4FF05003 			mov r3, #80												
 3114 0012 72B6     		cpsid i													
 3115 0014 83F31188 		msr basepri, r3											
 3116 0018 BFF36F8F 		isb														
 3117 001c BFF34F8F 		dsb														
 3118 0020 62B6     		cpsie i													
 3119              	
 3120              	@ 0 "" 2
 3121              		.thumb
ARM GAS  /tmp/ccwLwC1u.s 			page 95


 3122              		.syntax unified
 3123 0022 BB60     		str	r3, [r7, #8]
 3124              	.L207:
 3125              	.LBE151:
 3126              	.LBE150:
 3127              		.loc 1 1978 0 discriminator 1
 3128 0024 FEE7     		b	.L207
 3129              	.L206:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3130              		.loc 1 1979 0
 3131 0026 7B68     		ldr	r3, [r7, #4]
 3132 0028 9A6B     		ldr	r2, [r3, #56]
 3133 002a 7B68     		ldr	r3, [r7, #4]
 3134 002c DB6B     		ldr	r3, [r3, #60]
 3135 002e 9A42     		cmp	r2, r3
 3136 0030 02D1     		bne	.L208
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3137              		.loc 1 1981 0
 3138 0032 0123     		movs	r3, #1
 3139 0034 FB60     		str	r3, [r7, #12]
 3140 0036 01E0     		b	.L209
 3141              	.L208:
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3142              		.loc 1 1985 0
 3143 0038 0023     		movs	r3, #0
 3144 003a FB60     		str	r3, [r7, #12]
 3145              	.L209:
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3146              		.loc 1 1988 0
 3147 003c FB68     		ldr	r3, [r7, #12]
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3148              		.loc 1 1989 0
 3149 003e 1846     		mov	r0, r3
 3150 0040 1437     		adds	r7, r7, #20
 3151              	.LCFI110:
 3152              		.cfi_def_cfa_offset 4
 3153 0042 BD46     		mov	sp, r7
 3154              	.LCFI111:
 3155              		.cfi_def_cfa_register 13
 3156              		@ sp needed
 3157 0044 5DF8047B 		ldr	r7, [sp], #4
 3158              	.LCFI112:
 3159              		.cfi_restore 7
 3160              		.cfi_def_cfa_offset 0
 3161 0048 7047     		bx	lr
 3162              		.cfi_endproc
 3163              	.LFE164:
 3165              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3166              		.align	1
 3167              		.global	vQueueAddToRegistry
 3168              		.syntax unified
ARM GAS  /tmp/ccwLwC1u.s 			page 96


 3169              		.thumb
 3170              		.thumb_func
 3171              		.fpu fpv4-sp-d16
 3173              	vQueueAddToRegistry:
 3174              	.LFB165:
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccwLwC1u.s 			page 97


2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccwLwC1u.s 			page 98


2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccwLwC1u.s 			page 99


2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
ARM GAS  /tmp/ccwLwC1u.s 			page 100


2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
ARM GAS  /tmp/ccwLwC1u.s 			page 101


2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3175              		.loc 1 2270 0
 3176              		.cfi_startproc
 3177              		@ args = 0, pretend = 0, frame = 16
 3178              		@ frame_needed = 1, uses_anonymous_args = 0
 3179              		@ link register save eliminated.
 3180 0000 80B4     		push	{r7}
 3181              	.LCFI113:
 3182              		.cfi_def_cfa_offset 4
 3183              		.cfi_offset 7, -4
 3184 0002 85B0     		sub	sp, sp, #20
 3185              	.LCFI114:
 3186              		.cfi_def_cfa_offset 24
 3187 0004 00AF     		add	r7, sp, #0
 3188              	.LCFI115:
 3189              		.cfi_def_cfa_register 7
 3190 0006 7860     		str	r0, [r7, #4]
 3191 0008 3960     		str	r1, [r7]
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3192              		.loc 1 2275 0
 3193 000a 0023     		movs	r3, #0
 3194 000c FB60     		str	r3, [r7, #12]
 3195 000e 14E0     		b	.L212
 3196              	.L215:
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3197              		.loc 1 2277 0
 3198 0010 0E4A     		ldr	r2, .L216
 3199 0012 FB68     		ldr	r3, [r7, #12]
 3200 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]
 3201 0018 002B     		cmp	r3, #0
 3202 001a 0BD1     		bne	.L213
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3203              		.loc 1 2280 0
 3204 001c 0B49     		ldr	r1, .L216
 3205 001e FB68     		ldr	r3, [r7, #12]
 3206 0020 3A68     		ldr	r2, [r7]
 3207 0022 41F83320 		str	r2, [r1, r3, lsl #3]
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3208              		.loc 1 2281 0
 3209 0026 094A     		ldr	r2, .L216
 3210 0028 FB68     		ldr	r3, [r7, #12]
 3211 002a DB00     		lsls	r3, r3, #3
 3212 002c 1344     		add	r3, r3, r2
 3213 002e 7A68     		ldr	r2, [r7, #4]
 3214 0030 5A60     		str	r2, [r3, #4]
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3215              		.loc 1 2284 0
 3216 0032 05E0     		b	.L214
ARM GAS  /tmp/ccwLwC1u.s 			page 102


 3217              	.L213:
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3218              		.loc 1 2275 0 discriminator 2
 3219 0034 FB68     		ldr	r3, [r7, #12]
 3220 0036 0133     		adds	r3, r3, #1
 3221 0038 FB60     		str	r3, [r7, #12]
 3222              	.L212:
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3223              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3224 003a FB68     		ldr	r3, [r7, #12]
 3225 003c 072B     		cmp	r3, #7
 3226 003e E7D9     		bls	.L215
 3227              	.L214:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3228              		.loc 1 2291 0 is_stmt 1
 3229 0040 00BF     		nop
 3230 0042 1437     		adds	r7, r7, #20
 3231              	.LCFI116:
 3232              		.cfi_def_cfa_offset 4
 3233 0044 BD46     		mov	sp, r7
 3234              	.LCFI117:
 3235              		.cfi_def_cfa_register 13
 3236              		@ sp needed
 3237 0046 5DF8047B 		ldr	r7, [sp], #4
 3238              	.LCFI118:
 3239              		.cfi_restore 7
 3240              		.cfi_def_cfa_offset 0
 3241 004a 7047     		bx	lr
 3242              	.L217:
 3243              		.align	2
 3244              	.L216:
 3245 004c 00000000 		.word	xQueueRegistry
 3246              		.cfi_endproc
 3247              	.LFE165:
 3249              		.section	.text.pcQueueGetName,"ax",%progbits
 3250              		.align	1
 3251              		.global	pcQueueGetName
 3252              		.syntax unified
 3253              		.thumb
 3254              		.thumb_func
 3255              		.fpu fpv4-sp-d16
 3257              	pcQueueGetName:
 3258              	.LFB166:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/ccwLwC1u.s 			page 103


 3259              		.loc 1 2299 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 16
 3262              		@ frame_needed = 1, uses_anonymous_args = 0
 3263              		@ link register save eliminated.
 3264 0000 80B4     		push	{r7}
 3265              	.LCFI119:
 3266              		.cfi_def_cfa_offset 4
 3267              		.cfi_offset 7, -4
 3268 0002 85B0     		sub	sp, sp, #20
 3269              	.LCFI120:
 3270              		.cfi_def_cfa_offset 24
 3271 0004 00AF     		add	r7, sp, #0
 3272              	.LCFI121:
 3273              		.cfi_def_cfa_register 7
 3274 0006 7860     		str	r0, [r7, #4]
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 3275              		.loc 1 2301 0
 3276 0008 0023     		movs	r3, #0
 3277 000a BB60     		str	r3, [r7, #8]
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3278              		.loc 1 2305 0
 3279 000c 0023     		movs	r3, #0
 3280 000e FB60     		str	r3, [r7, #12]
 3281 0010 10E0     		b	.L219
 3282              	.L222:
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3283              		.loc 1 2307 0
 3284 0012 0D4A     		ldr	r2, .L224
 3285 0014 FB68     		ldr	r3, [r7, #12]
 3286 0016 DB00     		lsls	r3, r3, #3
 3287 0018 1344     		add	r3, r3, r2
 3288 001a 5B68     		ldr	r3, [r3, #4]
 3289 001c 7A68     		ldr	r2, [r7, #4]
 3290 001e 9A42     		cmp	r2, r3
 3291 0020 05D1     		bne	.L220
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3292              		.loc 1 2309 0
 3293 0022 094A     		ldr	r2, .L224
 3294 0024 FB68     		ldr	r3, [r7, #12]
 3295 0026 52F83330 		ldr	r3, [r2, r3, lsl #3]
 3296 002a BB60     		str	r3, [r7, #8]
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3297              		.loc 1 2310 0
 3298 002c 05E0     		b	.L221
 3299              	.L220:
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3300              		.loc 1 2305 0 discriminator 2
 3301 002e FB68     		ldr	r3, [r7, #12]
 3302 0030 0133     		adds	r3, r3, #1
 3303 0032 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccwLwC1u.s 			page 104


 3304              	.L219:
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3305              		.loc 1 2305 0 is_stmt 0 discriminator 1
 3306 0034 FB68     		ldr	r3, [r7, #12]
 3307 0036 072B     		cmp	r3, #7
 3308 0038 EBD9     		bls	.L222
 3309              	.L221:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
 3310              		.loc 1 2318 0 is_stmt 1
 3311 003a BB68     		ldr	r3, [r7, #8]
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3312              		.loc 1 2319 0
 3313 003c 1846     		mov	r0, r3
 3314 003e 1437     		adds	r7, r7, #20
 3315              	.LCFI122:
 3316              		.cfi_def_cfa_offset 4
 3317 0040 BD46     		mov	sp, r7
 3318              	.LCFI123:
 3319              		.cfi_def_cfa_register 13
 3320              		@ sp needed
 3321 0042 5DF8047B 		ldr	r7, [sp], #4
 3322              	.LCFI124:
 3323              		.cfi_restore 7
 3324              		.cfi_def_cfa_offset 0
 3325 0046 7047     		bx	lr
 3326              	.L225:
 3327              		.align	2
 3328              	.L224:
 3329 0048 00000000 		.word	xQueueRegistry
 3330              		.cfi_endproc
 3331              	.LFE166:
 3333              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3334              		.align	1
 3335              		.global	vQueueUnregisterQueue
 3336              		.syntax unified
 3337              		.thumb
 3338              		.thumb_func
 3339              		.fpu fpv4-sp-d16
 3341              	vQueueUnregisterQueue:
 3342              	.LFB167:
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3343              		.loc 1 2327 0
 3344              		.cfi_startproc
ARM GAS  /tmp/ccwLwC1u.s 			page 105


 3345              		@ args = 0, pretend = 0, frame = 16
 3346              		@ frame_needed = 1, uses_anonymous_args = 0
 3347              		@ link register save eliminated.
 3348 0000 80B4     		push	{r7}
 3349              	.LCFI125:
 3350              		.cfi_def_cfa_offset 4
 3351              		.cfi_offset 7, -4
 3352 0002 85B0     		sub	sp, sp, #20
 3353              	.LCFI126:
 3354              		.cfi_def_cfa_offset 24
 3355 0004 00AF     		add	r7, sp, #0
 3356              	.LCFI127:
 3357              		.cfi_def_cfa_register 7
 3358 0006 7860     		str	r0, [r7, #4]
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3359              		.loc 1 2332 0
 3360 0008 0023     		movs	r3, #0
 3361 000a FB60     		str	r3, [r7, #12]
 3362 000c 16E0     		b	.L227
 3363              	.L230:
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3364              		.loc 1 2334 0
 3365 000e 104A     		ldr	r2, .L231
 3366 0010 FB68     		ldr	r3, [r7, #12]
 3367 0012 DB00     		lsls	r3, r3, #3
 3368 0014 1344     		add	r3, r3, r2
 3369 0016 5B68     		ldr	r3, [r3, #4]
 3370 0018 7A68     		ldr	r2, [r7, #4]
 3371 001a 9A42     		cmp	r2, r3
 3372 001c 0BD1     		bne	.L228
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3373              		.loc 1 2337 0
 3374 001e 0C4A     		ldr	r2, .L231
 3375 0020 FB68     		ldr	r3, [r7, #12]
 3376 0022 0021     		movs	r1, #0
 3377 0024 42F83310 		str	r1, [r2, r3, lsl #3]
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3378              		.loc 1 2342 0
 3379 0028 094A     		ldr	r2, .L231
 3380 002a FB68     		ldr	r3, [r7, #12]
 3381 002c DB00     		lsls	r3, r3, #3
 3382 002e 1344     		add	r3, r3, r2
 3383 0030 0022     		movs	r2, #0
 3384 0032 5A60     		str	r2, [r3, #4]
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3385              		.loc 1 2343 0
ARM GAS  /tmp/ccwLwC1u.s 			page 106


 3386 0034 05E0     		b	.L229
 3387              	.L228:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3388              		.loc 1 2332 0 discriminator 2
 3389 0036 FB68     		ldr	r3, [r7, #12]
 3390 0038 0133     		adds	r3, r3, #1
 3391 003a FB60     		str	r3, [r7, #12]
 3392              	.L227:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3393              		.loc 1 2332 0 is_stmt 0 discriminator 1
 3394 003c FB68     		ldr	r3, [r7, #12]
 3395 003e 072B     		cmp	r3, #7
 3396 0040 E5D9     		bls	.L230
 3397              	.L229:
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3398              		.loc 1 2351 0 is_stmt 1
 3399 0042 00BF     		nop
 3400 0044 1437     		adds	r7, r7, #20
 3401              	.LCFI128:
 3402              		.cfi_def_cfa_offset 4
 3403 0046 BD46     		mov	sp, r7
 3404              	.LCFI129:
 3405              		.cfi_def_cfa_register 13
 3406              		@ sp needed
 3407 0048 5DF8047B 		ldr	r7, [sp], #4
 3408              	.LCFI130:
 3409              		.cfi_restore 7
 3410              		.cfi_def_cfa_offset 0
 3411 004c 7047     		bx	lr
 3412              	.L232:
 3413 004e 00BF     		.align	2
 3414              	.L231:
 3415 0050 00000000 		.word	xQueueRegistry
 3416              		.cfi_endproc
 3417              	.LFE167:
 3419              		.text
 3420              	.Letext0:
 3421              		.file 3 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 3422              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 3423              		.file 5 "/usr/include/newlib/sys/lock.h"
 3424              		.file 6 "/usr/include/newlib/sys/_types.h"
 3425              		.file 7 "/usr/include/newlib/sys/reent.h"
 3426              		.file 8 "/usr/include/newlib/sys/_stdint.h"
 3427              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 3428              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3429              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3430              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3431              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
ARM GAS  /tmp/ccwLwC1u.s 			page 107


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/ccwLwC1u.s:19     .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccwLwC1u.s:26     .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccwLwC1u.s:178    .text.xQueueGenericReset:00000000000000d0 $d
     /tmp/ccwLwC1u.s:183    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccwLwC1u.s:190    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccwLwC1u.s:298    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccwLwC1u.s:292    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccwLwC1u.s:360    .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccwLwC1u.s:366    .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccwLwC1u.s:485    .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccwLwC1u.s:421    .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccwLwC1u.s:428    .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccwLwC1u.s:478    .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccwLwC1u.s:2517   .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccwLwC1u.s:3025   .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccwLwC1u.s:2748   .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccwLwC1u.s:860    .text.xQueueGenericSend:0000000000000200 $d
     /tmp/ccwLwC1u.s:865    .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:872    .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccwLwC1u.s:1130   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:1137   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccwLwC1u.s:1378   .text.xQueueGenericReceive:0000000000000000 $t
     /tmp/ccwLwC1u.s:1385   .text.xQueueGenericReceive:0000000000000000 xQueueGenericReceive
     /tmp/ccwLwC1u.s:2674   .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccwLwC1u.s:2882   .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccwLwC1u.s:1772   .text.xQueueGenericReceive:000000000000022c $d
     /tmp/ccwLwC1u.s:1777   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:1784   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccwLwC1u.s:2000   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:2007   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccwLwC1u.s:2206   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccwLwC1u.s:2213   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccwLwC1u.s:2281   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccwLwC1u.s:2288   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccwLwC1u.s:2362   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:2369   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccwLwC1u.s:2437   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccwLwC1u.s:2444   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccwLwC1u.s:3341   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccwLwC1u.s:2511   .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccwLwC1u.s:2668   .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccwLwC1u.s:2742   .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccwLwC1u.s:2876   .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccwLwC1u.s:2934   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:2941   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccwLwC1u.s:3019   .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccwLwC1u.s:3079   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccwLwC1u.s:3086   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccwLwC1u.s:3166   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccwLwC1u.s:3173   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccwLwC1u.s:3245   .text.vQueueAddToRegistry:000000000000004c $d
     /tmp/ccwLwC1u.s:3250   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccwLwC1u.s:3257   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccwLwC1u.s:3329   .text.pcQueueGetName:0000000000000048 $d
ARM GAS  /tmp/ccwLwC1u.s 			page 108


     /tmp/ccwLwC1u.s:3334   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccwLwC1u.s:3415   .text.vQueueUnregisterQueue:0000000000000050 $d

UNDEFINED SYMBOLS
vPortEnterCritical
xTaskRemoveFromEventList
vListInitialise
vPortExitCritical
pvPortMalloc
xTaskGetSchedulerState
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
vPortFree
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
