ARM GAS  /tmp/ccmShkBJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_UART_Init:
  26              	.LFB136:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/ccmShkBJ.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   Tx/Rx parameters.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Three operation modes are available within this driver :
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =================================
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** DMA mode IO operation ***
ARM GAS  /tmp/ccmShkBJ.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ==============================
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_IT : Clears the specified UART ISR flag
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccmShkBJ.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
ARM GAS  /tmp/ccmShkBJ.s 			page 5


 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  28              		.loc 1 242 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccmShkBJ.s 			page 6


 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
  44              		.loc 1 244 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  48              		.loc 1 246 0
  49 000e 0123     		movs	r3, #1
  50 0010 43E0     		b	.L3
  51              	.L2:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  52              		.loc 1 260 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F86930 		ldrb	r3, [r3, #105]
  55 0018 DBB2     		uxtb	r3, r3
  56 001a 002B     		cmp	r3, #0
  57 001c 06D1     		bne	.L4
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  58              		.loc 1 263 0
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 83F86820 		strb	r2, [r3, #104]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 266 0
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  65              	.L4:
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  66              		.loc 1 269 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 2422     		movs	r2, #36
  69 0030 83F86920 		strb	r2, [r3, #105]
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  70              		.loc 1 272 0
  71 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 7


  72 0036 1B68     		ldr	r3, [r3]
  73 0038 7A68     		ldr	r2, [r7, #4]
  74 003a 1268     		ldr	r2, [r2]
  75 003c 1268     		ldr	r2, [r2]
  76 003e 22F00102 		bic	r2, r2, #1
  77 0042 1A60     		str	r2, [r3]
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  78              		.loc 1 275 0
  79 0044 7868     		ldr	r0, [r7, #4]
  80 0046 FFF7FEFF 		bl	UART_SetConfig
  81 004a 0346     		mov	r3, r0
  82 004c 012B     		cmp	r3, #1
  83 004e 01D1     		bne	.L5
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  84              		.loc 1 277 0
  85 0050 0123     		movs	r3, #1
  86 0052 22E0     		b	.L3
  87              	.L5:
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  88              		.loc 1 280 0
  89 0054 7B68     		ldr	r3, [r7, #4]
  90 0056 5B6A     		ldr	r3, [r3, #36]
  91 0058 002B     		cmp	r3, #0
  92 005a 02D0     		beq	.L6
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  93              		.loc 1 282 0
  94 005c 7868     		ldr	r0, [r7, #4]
  95 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
  96              	.L6:
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  97              		.loc 1 288 0
  98 0062 7B68     		ldr	r3, [r7, #4]
  99 0064 1B68     		ldr	r3, [r3]
 100 0066 7A68     		ldr	r2, [r7, #4]
 101 0068 1268     		ldr	r2, [r2]
 102 006a 5268     		ldr	r2, [r2, #4]
 103 006c 22F49042 		bic	r2, r2, #18432
 104 0070 5A60     		str	r2, [r3, #4]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 105              		.loc 1 289 0
 106 0072 7B68     		ldr	r3, [r7, #4]
 107 0074 1B68     		ldr	r3, [r3]
 108 0076 7A68     		ldr	r2, [r7, #4]
 109 0078 1268     		ldr	r2, [r2]
 110 007a 9268     		ldr	r2, [r2, #8]
 111 007c 22F02A02 		bic	r2, r2, #42
ARM GAS  /tmp/ccmShkBJ.s 			page 8


 112 0080 9A60     		str	r2, [r3, #8]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 113              		.loc 1 292 0
 114 0082 7B68     		ldr	r3, [r7, #4]
 115 0084 1B68     		ldr	r3, [r3]
 116 0086 7A68     		ldr	r2, [r7, #4]
 117 0088 1268     		ldr	r2, [r2]
 118 008a 1268     		ldr	r2, [r2]
 119 008c 42F00102 		orr	r2, r2, #1
 120 0090 1A60     		str	r2, [r3]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 121              		.loc 1 295 0
 122 0092 7868     		ldr	r0, [r7, #4]
 123 0094 FFF7FEFF 		bl	UART_CheckIdleState
 124 0098 0346     		mov	r3, r0
 125              	.L3:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 126              		.loc 1 296 0
 127 009a 1846     		mov	r0, r3
 128 009c 0837     		adds	r7, r7, #8
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 009e BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 00a0 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE136:
 139              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_HalfDuplex_Init
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	HAL_HalfDuplex_Init:
 148              	.LFB137:
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 149              		.loc 1 305 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI5:
ARM GAS  /tmp/ccmShkBJ.s 			page 9


 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI6:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              	.LCFI7:
 163              		.cfi_def_cfa_register 7
 164 0006 7860     		str	r0, [r7, #4]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 165              		.loc 1 307 0
 166 0008 7B68     		ldr	r3, [r7, #4]
 167 000a 002B     		cmp	r3, #0
 168 000c 01D1     		bne	.L8
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 169              		.loc 1 309 0
 170 000e 0123     		movs	r3, #1
 171 0010 4BE0     		b	.L9
 172              	.L8:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 173              		.loc 1 312 0
 174 0012 7B68     		ldr	r3, [r7, #4]
 175 0014 93F86930 		ldrb	r3, [r3, #105]
 176 0018 DBB2     		uxtb	r3, r3
 177 001a 002B     		cmp	r3, #0
 178 001c 06D1     		bne	.L10
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 179              		.loc 1 315 0
 180 001e 7B68     		ldr	r3, [r7, #4]
 181 0020 0022     		movs	r2, #0
 182 0022 83F86820 		strb	r2, [r3, #104]
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 183              		.loc 1 318 0
 184 0026 7868     		ldr	r0, [r7, #4]
 185 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 186              	.L10:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 187              		.loc 1 321 0
 188 002c 7B68     		ldr	r3, [r7, #4]
 189 002e 2422     		movs	r2, #36
 190 0030 83F86920 		strb	r2, [r3, #105]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 191              		.loc 1 324 0
 192 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 10


 193 0036 1B68     		ldr	r3, [r3]
 194 0038 7A68     		ldr	r2, [r7, #4]
 195 003a 1268     		ldr	r2, [r2]
 196 003c 1268     		ldr	r2, [r2]
 197 003e 22F00102 		bic	r2, r2, #1
 198 0042 1A60     		str	r2, [r3]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 199              		.loc 1 327 0
 200 0044 7868     		ldr	r0, [r7, #4]
 201 0046 FFF7FEFF 		bl	UART_SetConfig
 202 004a 0346     		mov	r3, r0
 203 004c 012B     		cmp	r3, #1
 204 004e 01D1     		bne	.L11
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 205              		.loc 1 329 0
 206 0050 0123     		movs	r3, #1
 207 0052 2AE0     		b	.L9
 208              	.L11:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 209              		.loc 1 332 0
 210 0054 7B68     		ldr	r3, [r7, #4]
 211 0056 5B6A     		ldr	r3, [r3, #36]
 212 0058 002B     		cmp	r3, #0
 213 005a 02D0     		beq	.L12
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 214              		.loc 1 334 0
 215 005c 7868     		ldr	r0, [r7, #4]
 216 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 217              	.L12:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 218              		.loc 1 340 0
 219 0062 7B68     		ldr	r3, [r7, #4]
 220 0064 1B68     		ldr	r3, [r3]
 221 0066 7A68     		ldr	r2, [r7, #4]
 222 0068 1268     		ldr	r2, [r2]
 223 006a 5268     		ldr	r2, [r2, #4]
 224 006c 22F49042 		bic	r2, r2, #18432
 225 0070 5A60     		str	r2, [r3, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 226              		.loc 1 341 0
 227 0072 7B68     		ldr	r3, [r7, #4]
 228 0074 1B68     		ldr	r3, [r3]
 229 0076 7A68     		ldr	r2, [r7, #4]
 230 0078 1268     		ldr	r2, [r2]
 231 007a 9268     		ldr	r2, [r2, #8]
 232 007c 22F02202 		bic	r2, r2, #34
ARM GAS  /tmp/ccmShkBJ.s 			page 11


 233 0080 9A60     		str	r2, [r3, #8]
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 234              		.loc 1 344 0
 235 0082 7B68     		ldr	r3, [r7, #4]
 236 0084 1B68     		ldr	r3, [r3]
 237 0086 7A68     		ldr	r2, [r7, #4]
 238 0088 1268     		ldr	r2, [r2]
 239 008a 9268     		ldr	r2, [r2, #8]
 240 008c 42F00802 		orr	r2, r2, #8
 241 0090 9A60     		str	r2, [r3, #8]
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 242              		.loc 1 347 0
 243 0092 7B68     		ldr	r3, [r7, #4]
 244 0094 1B68     		ldr	r3, [r3]
 245 0096 7A68     		ldr	r2, [r7, #4]
 246 0098 1268     		ldr	r2, [r2]
 247 009a 1268     		ldr	r2, [r2]
 248 009c 42F00102 		orr	r2, r2, #1
 249 00a0 1A60     		str	r2, [r3]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 250              		.loc 1 350 0
 251 00a2 7868     		ldr	r0, [r7, #4]
 252 00a4 FFF7FEFF 		bl	UART_CheckIdleState
 253 00a8 0346     		mov	r3, r0
 254              	.L9:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 255              		.loc 1 351 0
 256 00aa 1846     		mov	r0, r3
 257 00ac 0837     		adds	r7, r7, #8
 258              	.LCFI8:
 259              		.cfi_def_cfa_offset 8
 260 00ae BD46     		mov	sp, r7
 261              	.LCFI9:
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 00b0 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE137:
 268              		.section	.text.HAL_LIN_Init,"ax",%progbits
 269              		.align	1
 270              		.global	HAL_LIN_Init
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv4-sp-d16
 276              	HAL_LIN_Init:
 277              	.LFB138:
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
ARM GAS  /tmp/ccmShkBJ.s 			page 12


 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 278              		.loc 1 365 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI10:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              	.LCFI11:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI12:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 294 0008 3960     		str	r1, [r7]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 295              		.loc 1 367 0
 296 000a 7B68     		ldr	r3, [r7, #4]
 297 000c 002B     		cmp	r3, #0
 298 000e 01D1     		bne	.L14
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 299              		.loc 1 369 0
 300 0010 0123     		movs	r3, #1
 301 0012 55E0     		b	.L15
 302              	.L14:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_LIN_WORD_LENGTH(huart->Init.WordLength));
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 303              		.loc 1 377 0
 304 0014 7B68     		ldr	r3, [r7, #4]
 305 0016 93F86930 		ldrb	r3, [r3, #105]
 306 001a DBB2     		uxtb	r3, r3
 307 001c 002B     		cmp	r3, #0
 308 001e 06D1     		bne	.L16
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 309              		.loc 1 380 0
ARM GAS  /tmp/ccmShkBJ.s 			page 13


 310 0020 7B68     		ldr	r3, [r7, #4]
 311 0022 0022     		movs	r2, #0
 312 0024 83F86820 		strb	r2, [r3, #104]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 313              		.loc 1 383 0
 314 0028 7868     		ldr	r0, [r7, #4]
 315 002a FFF7FEFF 		bl	HAL_UART_MspInit
 316              	.L16:
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 317              		.loc 1 386 0
 318 002e 7B68     		ldr	r3, [r7, #4]
 319 0030 2422     		movs	r2, #36
 320 0032 83F86920 		strb	r2, [r3, #105]
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 321              		.loc 1 389 0
 322 0036 7B68     		ldr	r3, [r7, #4]
 323 0038 1B68     		ldr	r3, [r3]
 324 003a 7A68     		ldr	r2, [r7, #4]
 325 003c 1268     		ldr	r2, [r2]
 326 003e 1268     		ldr	r2, [r2]
 327 0040 22F00102 		bic	r2, r2, #1
 328 0044 1A60     		str	r2, [r3]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329              		.loc 1 392 0
 330 0046 7868     		ldr	r0, [r7, #4]
 331 0048 FFF7FEFF 		bl	UART_SetConfig
 332 004c 0346     		mov	r3, r0
 333 004e 012B     		cmp	r3, #1
 334 0050 01D1     		bne	.L17
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 335              		.loc 1 394 0
 336 0052 0123     		movs	r3, #1
 337 0054 34E0     		b	.L15
 338              	.L17:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 339              		.loc 1 397 0
 340 0056 7B68     		ldr	r3, [r7, #4]
 341 0058 5B6A     		ldr	r3, [r3, #36]
 342 005a 002B     		cmp	r3, #0
 343 005c 02D0     		beq	.L18
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 344              		.loc 1 399 0
 345 005e 7868     		ldr	r0, [r7, #4]
 346 0060 FFF7FEFF 		bl	UART_AdvFeatureConfig
 347              	.L18:
ARM GAS  /tmp/ccmShkBJ.s 			page 14


 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 348              		.loc 1 405 0
 349 0064 7B68     		ldr	r3, [r7, #4]
 350 0066 1B68     		ldr	r3, [r3]
 351 0068 7A68     		ldr	r2, [r7, #4]
 352 006a 1268     		ldr	r2, [r2]
 353 006c 5268     		ldr	r2, [r2, #4]
 354 006e 22F40062 		bic	r2, r2, #2048
 355 0072 5A60     		str	r2, [r3, #4]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 356              		.loc 1 406 0
 357 0074 7B68     		ldr	r3, [r7, #4]
 358 0076 1B68     		ldr	r3, [r3]
 359 0078 7A68     		ldr	r2, [r7, #4]
 360 007a 1268     		ldr	r2, [r2]
 361 007c 9268     		ldr	r2, [r2, #8]
 362 007e 22F02A02 		bic	r2, r2, #42
 363 0082 9A60     		str	r2, [r3, #8]
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 364              		.loc 1 409 0
 365 0084 7B68     		ldr	r3, [r7, #4]
 366 0086 1B68     		ldr	r3, [r3]
 367 0088 7A68     		ldr	r2, [r7, #4]
 368 008a 1268     		ldr	r2, [r2]
 369 008c 5268     		ldr	r2, [r2, #4]
 370 008e 42F48042 		orr	r2, r2, #16384
 371 0092 5A60     		str	r2, [r3, #4]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 372              		.loc 1 412 0
 373 0094 7B68     		ldr	r3, [r7, #4]
 374 0096 1B68     		ldr	r3, [r3]
 375 0098 7A68     		ldr	r2, [r7, #4]
 376 009a 1268     		ldr	r2, [r2]
 377 009c 5268     		ldr	r2, [r2, #4]
 378 009e 22F02001 		bic	r1, r2, #32
 379 00a2 3A68     		ldr	r2, [r7]
 380 00a4 0A43     		orrs	r2, r2, r1
 381 00a6 5A60     		str	r2, [r3, #4]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 382              		.loc 1 415 0
 383 00a8 7B68     		ldr	r3, [r7, #4]
 384 00aa 1B68     		ldr	r3, [r3]
 385 00ac 7A68     		ldr	r2, [r7, #4]
 386 00ae 1268     		ldr	r2, [r2]
 387 00b0 1268     		ldr	r2, [r2]
 388 00b2 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccmShkBJ.s 			page 15


 389 00b6 1A60     		str	r2, [r3]
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 390              		.loc 1 418 0
 391 00b8 7868     		ldr	r0, [r7, #4]
 392 00ba FFF7FEFF 		bl	UART_CheckIdleState
 393 00be 0346     		mov	r3, r0
 394              	.L15:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 395              		.loc 1 419 0
 396 00c0 1846     		mov	r0, r3
 397 00c2 0837     		adds	r7, r7, #8
 398              	.LCFI13:
 399              		.cfi_def_cfa_offset 8
 400 00c4 BD46     		mov	sp, r7
 401              	.LCFI14:
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 00c6 80BD     		pop	{r7, pc}
 405              		.cfi_endproc
 406              	.LFE138:
 408              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 409              		.align	1
 410              		.global	HAL_MultiProcessor_Init
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv4-sp-d16
 416              	HAL_MultiProcessor_Init:
 417              	.LFB139:
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 418              		.loc 1 439 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 16
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              	.LCFI15:
ARM GAS  /tmp/ccmShkBJ.s 			page 16


 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 84B0     		sub	sp, sp, #16
 428              	.LCFI16:
 429              		.cfi_def_cfa_offset 24
 430 0004 00AF     		add	r7, sp, #0
 431              	.LCFI17:
 432              		.cfi_def_cfa_register 7
 433 0006 F860     		str	r0, [r7, #12]
 434 0008 0B46     		mov	r3, r1
 435 000a 7A60     		str	r2, [r7, #4]
 436 000c FB72     		strb	r3, [r7, #11]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 437              		.loc 1 441 0
 438 000e FB68     		ldr	r3, [r7, #12]
 439 0010 002B     		cmp	r3, #0
 440 0012 01D1     		bne	.L20
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 441              		.loc 1 443 0
 442 0014 0123     		movs	r3, #1
 443 0016 5CE0     		b	.L21
 444              	.L20:
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445              		.loc 1 449 0
 446 0018 FB68     		ldr	r3, [r7, #12]
 447 001a 93F86930 		ldrb	r3, [r3, #105]
 448 001e DBB2     		uxtb	r3, r3
 449 0020 002B     		cmp	r3, #0
 450 0022 06D1     		bne	.L22
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451              		.loc 1 452 0
 452 0024 FB68     		ldr	r3, [r7, #12]
 453 0026 0022     		movs	r2, #0
 454 0028 83F86820 		strb	r2, [r3, #104]
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 455              		.loc 1 455 0
 456 002c F868     		ldr	r0, [r7, #12]
 457 002e FFF7FEFF 		bl	HAL_UART_MspInit
 458              	.L22:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 459              		.loc 1 458 0
 460 0032 FB68     		ldr	r3, [r7, #12]
 461 0034 2422     		movs	r2, #36
ARM GAS  /tmp/ccmShkBJ.s 			page 17


 462 0036 83F86920 		strb	r2, [r3, #105]
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 463              		.loc 1 461 0
 464 003a FB68     		ldr	r3, [r7, #12]
 465 003c 1B68     		ldr	r3, [r3]
 466 003e FA68     		ldr	r2, [r7, #12]
 467 0040 1268     		ldr	r2, [r2]
 468 0042 1268     		ldr	r2, [r2]
 469 0044 22F00102 		bic	r2, r2, #1
 470 0048 1A60     		str	r2, [r3]
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 471              		.loc 1 464 0
 472 004a F868     		ldr	r0, [r7, #12]
 473 004c FFF7FEFF 		bl	UART_SetConfig
 474 0050 0346     		mov	r3, r0
 475 0052 012B     		cmp	r3, #1
 476 0054 01D1     		bne	.L23
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 477              		.loc 1 466 0
 478 0056 0123     		movs	r3, #1
 479 0058 3BE0     		b	.L21
 480              	.L23:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 481              		.loc 1 469 0
 482 005a FB68     		ldr	r3, [r7, #12]
 483 005c 5B6A     		ldr	r3, [r3, #36]
 484 005e 002B     		cmp	r3, #0
 485 0060 02D0     		beq	.L24
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 486              		.loc 1 471 0
 487 0062 F868     		ldr	r0, [r7, #12]
 488 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 489              	.L24:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 490              		.loc 1 477 0
 491 0068 FB68     		ldr	r3, [r7, #12]
 492 006a 1B68     		ldr	r3, [r3]
 493 006c FA68     		ldr	r2, [r7, #12]
 494 006e 1268     		ldr	r2, [r2]
 495 0070 5268     		ldr	r2, [r2, #4]
 496 0072 22F49042 		bic	r2, r2, #18432
 497 0076 5A60     		str	r2, [r3, #4]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 498              		.loc 1 478 0
ARM GAS  /tmp/ccmShkBJ.s 			page 18


 499 0078 FB68     		ldr	r3, [r7, #12]
 500 007a 1B68     		ldr	r3, [r3]
 501 007c FA68     		ldr	r2, [r7, #12]
 502 007e 1268     		ldr	r2, [r2]
 503 0080 9268     		ldr	r2, [r2, #8]
 504 0082 22F02A02 		bic	r2, r2, #42
 505 0086 9A60     		str	r2, [r3, #8]
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 506              		.loc 1 480 0
 507 0088 7B68     		ldr	r3, [r7, #4]
 508 008a B3F5006F 		cmp	r3, #2048
 509 008e 0AD1     		bne	.L25
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 510              		.loc 1 483 0
 511 0090 FB68     		ldr	r3, [r7, #12]
 512 0092 1B68     		ldr	r3, [r3]
 513 0094 FA68     		ldr	r2, [r7, #12]
 514 0096 1268     		ldr	r2, [r2]
 515 0098 5268     		ldr	r2, [r2, #4]
 516 009a 22F07F41 		bic	r1, r2, #-16777216
 517 009e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 518 00a0 1206     		lsls	r2, r2, #24
 519 00a2 0A43     		orrs	r2, r2, r1
 520 00a4 5A60     		str	r2, [r3, #4]
 521              	.L25:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 522              		.loc 1 487 0
 523 00a6 FB68     		ldr	r3, [r7, #12]
 524 00a8 1B68     		ldr	r3, [r3]
 525 00aa FA68     		ldr	r2, [r7, #12]
 526 00ac 1268     		ldr	r2, [r2]
 527 00ae 1268     		ldr	r2, [r2]
 528 00b0 22F40061 		bic	r1, r2, #2048
 529 00b4 7A68     		ldr	r2, [r7, #4]
 530 00b6 0A43     		orrs	r2, r2, r1
 531 00b8 1A60     		str	r2, [r3]
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 532              		.loc 1 490 0
 533 00ba FB68     		ldr	r3, [r7, #12]
 534 00bc 1B68     		ldr	r3, [r3]
 535 00be FA68     		ldr	r2, [r7, #12]
 536 00c0 1268     		ldr	r2, [r2]
 537 00c2 1268     		ldr	r2, [r2]
 538 00c4 42F00102 		orr	r2, r2, #1
 539 00c8 1A60     		str	r2, [r3]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 540              		.loc 1 493 0
ARM GAS  /tmp/ccmShkBJ.s 			page 19


 541 00ca F868     		ldr	r0, [r7, #12]
 542 00cc FFF7FEFF 		bl	UART_CheckIdleState
 543 00d0 0346     		mov	r3, r0
 544              	.L21:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 545              		.loc 1 494 0
 546 00d2 1846     		mov	r0, r3
 547 00d4 1037     		adds	r7, r7, #16
 548              	.LCFI18:
 549              		.cfi_def_cfa_offset 8
 550 00d6 BD46     		mov	sp, r7
 551              	.LCFI19:
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 00d8 80BD     		pop	{r7, pc}
 555              		.cfi_endproc
 556              	.LFE139:
 558              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 559              		.align	1
 560              		.global	HAL_RS485Ex_Init
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv4-sp-d16
 566              	HAL_RS485Ex_Init:
 567              	.LFB140:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Polarity select the driver enable polarity.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AssertionTime Driver Enable assertion time:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the activation of the DE (Driver 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         signal and the beginning of the start bit. It is expressed in sample ti
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         units (1/8 or 1/16 bit time, depending on the oversampling rate)
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param DeassertionTime Driver Enable deassertion time:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the end of the last stop bit, in 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         transmitted message, and the de-activation of the DE (Driver Enable) si
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         It is expressed in sample time units (1/8 or 1/16 bit time, depending o
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         oversampling rate).
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 568              		.loc 1 517 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 24
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572 0000 80B5     		push	{r7, lr}
 573              	.LCFI20:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
ARM GAS  /tmp/ccmShkBJ.s 			page 20


 576              		.cfi_offset 14, -4
 577 0002 86B0     		sub	sp, sp, #24
 578              	.LCFI21:
 579              		.cfi_def_cfa_offset 32
 580 0004 00AF     		add	r7, sp, #0
 581              	.LCFI22:
 582              		.cfi_def_cfa_register 7
 583 0006 F860     		str	r0, [r7, #12]
 584 0008 B960     		str	r1, [r7, #8]
 585 000a 7A60     		str	r2, [r7, #4]
 586 000c 3B60     		str	r3, [r7]
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 587              		.loc 1 518 0
 588 000e 0023     		movs	r3, #0
 589 0010 7B61     		str	r3, [r7, #20]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 590              		.loc 1 521 0
 591 0012 FB68     		ldr	r3, [r7, #12]
 592 0014 002B     		cmp	r3, #0
 593 0016 01D1     		bne	.L27
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 594              		.loc 1 523 0
 595 0018 0123     		movs	r3, #1
 596 001a 57E0     		b	.L28
 597              	.L27:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable UART instance */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable polarity */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable assertion time */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable deassertion time */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 598              		.loc 1 537 0
 599 001c FB68     		ldr	r3, [r7, #12]
 600 001e 93F86930 		ldrb	r3, [r3, #105]
 601 0022 DBB2     		uxtb	r3, r3
 602 0024 002B     		cmp	r3, #0
 603 0026 06D1     		bne	.L29
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 604              		.loc 1 540 0
 605 0028 FB68     		ldr	r3, [r7, #12]
 606 002a 0022     		movs	r2, #0
 607 002c 83F86820 		strb	r2, [r3, #104]
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
ARM GAS  /tmp/ccmShkBJ.s 			page 21


 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 608              		.loc 1 543 0
 609 0030 F868     		ldr	r0, [r7, #12]
 610 0032 FFF7FEFF 		bl	HAL_UART_MspInit
 611              	.L29:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 612              		.loc 1 546 0
 613 0036 FB68     		ldr	r3, [r7, #12]
 614 0038 2422     		movs	r2, #36
 615 003a 83F86920 		strb	r2, [r3, #105]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 616              		.loc 1 549 0
 617 003e FB68     		ldr	r3, [r7, #12]
 618 0040 1B68     		ldr	r3, [r3]
 619 0042 FA68     		ldr	r2, [r7, #12]
 620 0044 1268     		ldr	r2, [r2]
 621 0046 1268     		ldr	r2, [r2]
 622 0048 22F00102 		bic	r2, r2, #1
 623 004c 1A60     		str	r2, [r3]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 624              		.loc 1 552 0
 625 004e F868     		ldr	r0, [r7, #12]
 626 0050 FFF7FEFF 		bl	UART_SetConfig
 627 0054 0346     		mov	r3, r0
 628 0056 012B     		cmp	r3, #1
 629 0058 01D1     		bne	.L30
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 630              		.loc 1 554 0
 631 005a 0123     		movs	r3, #1
 632 005c 36E0     		b	.L28
 633              	.L30:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 634              		.loc 1 557 0
 635 005e FB68     		ldr	r3, [r7, #12]
 636 0060 5B6A     		ldr	r3, [r3, #36]
 637 0062 002B     		cmp	r3, #0
 638 0064 02D0     		beq	.L31
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 639              		.loc 1 559 0
 640 0066 F868     		ldr	r0, [r7, #12]
 641 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 642              	.L31:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 643              		.loc 1 563 0
ARM GAS  /tmp/ccmShkBJ.s 			page 22


 644 006c FB68     		ldr	r3, [r7, #12]
 645 006e 1B68     		ldr	r3, [r3]
 646 0070 FA68     		ldr	r2, [r7, #12]
 647 0072 1268     		ldr	r2, [r2]
 648 0074 9268     		ldr	r2, [r2, #8]
 649 0076 42F48042 		orr	r2, r2, #16384
 650 007a 9A60     		str	r2, [r3, #8]
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable polarity */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 651              		.loc 1 566 0
 652 007c FB68     		ldr	r3, [r7, #12]
 653 007e 1B68     		ldr	r3, [r3]
 654 0080 FA68     		ldr	r2, [r7, #12]
 655 0082 1268     		ldr	r2, [r2]
 656 0084 9268     		ldr	r2, [r2, #8]
 657 0086 22F40041 		bic	r1, r2, #32768
 658 008a BA68     		ldr	r2, [r7, #8]
 659 008c 0A43     		orrs	r2, r2, r1
 660 008e 9A60     		str	r2, [r3, #8]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable assertion and deassertion times */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 661              		.loc 1 569 0
 662 0090 7B68     		ldr	r3, [r7, #4]
 663 0092 5B05     		lsls	r3, r3, #21
 664 0094 7B61     		str	r3, [r7, #20]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 665              		.loc 1 570 0
 666 0096 3B68     		ldr	r3, [r7]
 667 0098 1B04     		lsls	r3, r3, #16
 668 009a 7A69     		ldr	r2, [r7, #20]
 669 009c 1343     		orrs	r3, r3, r2
 670 009e 7B61     		str	r3, [r7, #20]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 671              		.loc 1 571 0
 672 00a0 FB68     		ldr	r3, [r7, #12]
 673 00a2 1A68     		ldr	r2, [r3]
 674 00a4 FB68     		ldr	r3, [r7, #12]
 675 00a6 1B68     		ldr	r3, [r3]
 676 00a8 1968     		ldr	r1, [r3]
 677 00aa 0A4B     		ldr	r3, .L32
 678 00ac 0B40     		ands	r3, r3, r1
 679 00ae 7969     		ldr	r1, [r7, #20]
 680 00b0 0B43     		orrs	r3, r3, r1
 681 00b2 1360     		str	r3, [r2]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 682              		.loc 1 574 0
 683 00b4 FB68     		ldr	r3, [r7, #12]
 684 00b6 1B68     		ldr	r3, [r3]
 685 00b8 FA68     		ldr	r2, [r7, #12]
 686 00ba 1268     		ldr	r2, [r2]
 687 00bc 1268     		ldr	r2, [r2]
 688 00be 42F00102 		orr	r2, r2, #1
 689 00c2 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccmShkBJ.s 			page 23


 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 690              		.loc 1 577 0
 691 00c4 F868     		ldr	r0, [r7, #12]
 692 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 693 00ca 0346     		mov	r3, r0
 694              	.L28:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 695              		.loc 1 578 0
 696 00cc 1846     		mov	r0, r3
 697 00ce 1837     		adds	r7, r7, #24
 698              	.LCFI23:
 699              		.cfi_def_cfa_offset 8
 700 00d0 BD46     		mov	sp, r7
 701              	.LCFI24:
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 00d2 80BD     		pop	{r7, pc}
 705              	.L33:
 706              		.align	2
 707              	.L32:
 708 00d4 FFFF00FC 		.word	-67043329
 709              		.cfi_endproc
 710              	.LFE140:
 712              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 713              		.align	1
 714              		.global	HAL_UART_DeInit
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv4-sp-d16
 720              	HAL_UART_DeInit:
 721              	.LFB141:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 722              		.loc 1 586 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              	.LCFI25:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 82B0     		sub	sp, sp, #8
 732              	.LCFI26:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI27:
 736              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccmShkBJ.s 			page 24


 737 0006 7860     		str	r0, [r7, #4]
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 738              		.loc 1 588 0
 739 0008 7B68     		ldr	r3, [r7, #4]
 740 000a 002B     		cmp	r3, #0
 741 000c 01D1     		bne	.L35
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 742              		.loc 1 590 0
 743 000e 0123     		movs	r3, #1
 744 0010 2AE0     		b	.L36
 745              	.L35:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 746              		.loc 1 596 0
 747 0012 7B68     		ldr	r3, [r7, #4]
 748 0014 2422     		movs	r2, #36
 749 0016 83F86920 		strb	r2, [r3, #105]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 750              		.loc 1 599 0
 751 001a 7B68     		ldr	r3, [r7, #4]
 752 001c 1B68     		ldr	r3, [r3]
 753 001e 7A68     		ldr	r2, [r7, #4]
 754 0020 1268     		ldr	r2, [r2]
 755 0022 1268     		ldr	r2, [r2]
 756 0024 22F00102 		bic	r2, r2, #1
 757 0028 1A60     		str	r2, [r3]
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 758              		.loc 1 601 0
 759 002a 7B68     		ldr	r3, [r7, #4]
 760 002c 1B68     		ldr	r3, [r3]
 761 002e 0022     		movs	r2, #0
 762 0030 1A60     		str	r2, [r3]
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 763              		.loc 1 602 0
 764 0032 7B68     		ldr	r3, [r7, #4]
 765 0034 1B68     		ldr	r3, [r3]
 766 0036 0022     		movs	r2, #0
 767 0038 5A60     		str	r2, [r3, #4]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 768              		.loc 1 603 0
 769 003a 7B68     		ldr	r3, [r7, #4]
 770 003c 1B68     		ldr	r3, [r3]
 771 003e 0022     		movs	r2, #0
 772 0040 9A60     		str	r2, [r3, #8]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 773              		.loc 1 606 0
ARM GAS  /tmp/ccmShkBJ.s 			page 25


 774 0042 7868     		ldr	r0, [r7, #4]
 775 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 776              		.loc 1 608 0
 777 0048 7B68     		ldr	r3, [r7, #4]
 778 004a 0022     		movs	r2, #0
 779 004c DA66     		str	r2, [r3, #108]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 780              		.loc 1 609 0
 781 004e 7B68     		ldr	r3, [r7, #4]
 782 0050 0022     		movs	r2, #0
 783 0052 83F86920 		strb	r2, [r3, #105]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 784              		.loc 1 610 0
 785 0056 7B68     		ldr	r3, [r7, #4]
 786 0058 0022     		movs	r2, #0
 787 005a 83F86A20 		strb	r2, [r3, #106]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 788              		.loc 1 613 0
 789 005e 7B68     		ldr	r3, [r7, #4]
 790 0060 0022     		movs	r2, #0
 791 0062 83F86820 		strb	r2, [r3, #104]
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 792              		.loc 1 615 0
 793 0066 0023     		movs	r3, #0
 794              	.L36:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 795              		.loc 1 616 0
 796 0068 1846     		mov	r0, r3
 797 006a 0837     		adds	r7, r7, #8
 798              	.LCFI28:
 799              		.cfi_def_cfa_offset 8
 800 006c BD46     		mov	sp, r7
 801              	.LCFI29:
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 006e 80BD     		pop	{r7, pc}
 805              		.cfi_endproc
 806              	.LFE141:
 808              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 809              		.align	1
 810              		.weak	HAL_UART_MspInit
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv4-sp-d16
 816              	HAL_UART_MspInit:
 817              	.LFB142:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP Init
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccmShkBJ.s 			page 26


 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 818              		.loc 1 624 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              	.LCFI30:
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 83B0     		sub	sp, sp, #12
 828              	.LCFI31:
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              	.LCFI32:
 832              		.cfi_def_cfa_register 7
 833 0006 7860     		str	r0, [r7, #4]
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 834              		.loc 1 631 0
 835 0008 00BF     		nop
 836 000a 0C37     		adds	r7, r7, #12
 837              	.LCFI33:
 838              		.cfi_def_cfa_offset 4
 839 000c BD46     		mov	sp, r7
 840              	.LCFI34:
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 000e 5DF8047B 		ldr	r7, [sp], #4
 844              	.LCFI35:
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 0012 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE142:
 851              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 852              		.align	1
 853              		.weak	HAL_UART_MspDeInit
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 857              		.fpu fpv4-sp-d16
 859              	HAL_UART_MspDeInit:
 860              	.LFB143:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP DeInit
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
ARM GAS  /tmp/ccmShkBJ.s 			page 27


 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 861              		.loc 1 639 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 8
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866 0000 80B4     		push	{r7}
 867              	.LCFI36:
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 7, -4
 870 0002 83B0     		sub	sp, sp, #12
 871              	.LCFI37:
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI38:
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 877              		.loc 1 646 0
 878 0008 00BF     		nop
 879 000a 0C37     		adds	r7, r7, #12
 880              	.LCFI39:
 881              		.cfi_def_cfa_offset 4
 882 000c BD46     		mov	sp, r7
 883              	.LCFI40:
 884              		.cfi_def_cfa_register 13
 885              		@ sp needed
 886 000e 5DF8047B 		ldr	r7, [sp], #4
 887              	.LCFI41:
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 0012 7047     		bx	lr
 891              		.cfi_endproc
 892              	.LFE143:
 894              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 895              		.align	1
 896              		.global	HAL_UART_Transmit
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	HAL_UART_Transmit:
 903              	.LFB144:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
ARM GAS  /tmp/ccmShkBJ.s 			page 28


 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Transmit_IT()
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Receive_IT()
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccmShkBJ.s 			page 29


 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 904              		.loc 1 717 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 24
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908 0000 80B5     		push	{r7, lr}
 909              	.LCFI42:
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 88B0     		sub	sp, sp, #32
 914              	.LCFI43:
 915              		.cfi_def_cfa_offset 40
 916 0004 02AF     		add	r7, sp, #8
 917              	.LCFI44:
 918              		.cfi_def_cfa 7, 32
 919 0006 F860     		str	r0, [r7, #12]
 920 0008 B960     		str	r1, [r7, #8]
 921 000a 3B60     		str	r3, [r7]
 922 000c 1346     		mov	r3, r2	@ movhi
 923 000e FB80     		strh	r3, [r7, #6]	@ movhi
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 924              		.loc 1 719 0
 925 0010 0023     		movs	r3, #0
 926 0012 7B61     		str	r3, [r7, #20]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 927              		.loc 1 722 0
 928 0014 FB68     		ldr	r3, [r7, #12]
 929 0016 93F86930 		ldrb	r3, [r3, #105]
 930 001a DBB2     		uxtb	r3, r3
 931 001c 202B     		cmp	r3, #32
 932 001e 75D1     		bne	.L40
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 933              		.loc 1 724 0
 934 0020 BB68     		ldr	r3, [r7, #8]
 935 0022 002B     		cmp	r3, #0
 936 0024 02D0     		beq	.L41
 937              		.loc 1 724 0 is_stmt 0 discriminator 1
 938 0026 FB88     		ldrh	r3, [r7, #6]
 939 0028 002B     		cmp	r3, #0
 940 002a 01D1     		bne	.L42
 941              	.L41:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 942              		.loc 1 726 0 is_stmt 1
 943 002c 0123     		movs	r3, #1
 944 002e 6EE0     		b	.L43
ARM GAS  /tmp/ccmShkBJ.s 			page 30


 945              	.L42:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 946              		.loc 1 730 0
 947 0030 FB68     		ldr	r3, [r7, #12]
 948 0032 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 949 0036 012B     		cmp	r3, #1
 950 0038 01D1     		bne	.L44
 951              		.loc 1 730 0 is_stmt 0 discriminator 1
 952 003a 0223     		movs	r3, #2
 953 003c 67E0     		b	.L43
 954              	.L44:
 955              		.loc 1 730 0 discriminator 2
 956 003e FB68     		ldr	r3, [r7, #12]
 957 0040 0122     		movs	r2, #1
 958 0042 83F86820 		strb	r2, [r3, #104]
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 959              		.loc 1 732 0 is_stmt 1 discriminator 2
 960 0046 FB68     		ldr	r3, [r7, #12]
 961 0048 0022     		movs	r2, #0
 962 004a DA66     		str	r2, [r3, #108]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 963              		.loc 1 733 0 discriminator 2
 964 004c FB68     		ldr	r3, [r7, #12]
 965 004e 2122     		movs	r2, #33
 966 0050 83F86920 		strb	r2, [r3, #105]
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 967              		.loc 1 736 0 discriminator 2
 968 0054 FFF7FEFF 		bl	HAL_GetTick
 969 0058 7861     		str	r0, [r7, #20]
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 970              		.loc 1 738 0 discriminator 2
 971 005a FB68     		ldr	r3, [r7, #12]
 972 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 973 005e A3F85020 		strh	r2, [r3, #80]	@ movhi
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 974              		.loc 1 739 0 discriminator 2
 975 0062 FB68     		ldr	r3, [r7, #12]
 976 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 977 0066 A3F85220 		strh	r2, [r3, #82]	@ movhi
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 978              		.loc 1 740 0 discriminator 2
 979 006a 32E0     		b	.L45
 980              	.L48:
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 981              		.loc 1 742 0
 982 006c FB68     		ldr	r3, [r7, #12]
 983 006e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 984 0072 9BB2     		uxth	r3, r3
 985 0074 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccmShkBJ.s 			page 31


 986 0076 9AB2     		uxth	r2, r3
 987 0078 FB68     		ldr	r3, [r7, #12]
 988 007a A3F85220 		strh	r2, [r3, #82]	@ movhi
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 989              		.loc 1 743 0
 990 007e 3B68     		ldr	r3, [r7]
 991 0080 0093     		str	r3, [sp]
 992 0082 7B69     		ldr	r3, [r7, #20]
 993 0084 0022     		movs	r2, #0
 994 0086 8021     		movs	r1, #128
 995 0088 F868     		ldr	r0, [r7, #12]
 996 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 997 008e 0346     		mov	r3, r0
 998 0090 002B     		cmp	r3, #0
 999 0092 01D0     		beq	.L46
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1000              		.loc 1 745 0
 1001 0094 0323     		movs	r3, #3
 1002 0096 3AE0     		b	.L43
 1003              	.L46:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1004              		.loc 1 747 0
 1005 0098 FB68     		ldr	r3, [r7, #12]
 1006 009a 9B68     		ldr	r3, [r3, #8]
 1007 009c B3F5805F 		cmp	r3, #4096
 1008 00a0 10D1     		bne	.L47
 1009              		.loc 1 747 0 is_stmt 0 discriminator 1
 1010 00a2 FB68     		ldr	r3, [r7, #12]
 1011 00a4 1B69     		ldr	r3, [r3, #16]
 1012 00a6 002B     		cmp	r3, #0
 1013 00a8 0CD1     		bne	.L47
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 1014              		.loc 1 749 0 is_stmt 1
 1015 00aa BB68     		ldr	r3, [r7, #8]
 1016 00ac 3B61     		str	r3, [r7, #16]
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 1017              		.loc 1 750 0
 1018 00ae FB68     		ldr	r3, [r7, #12]
 1019 00b0 1B68     		ldr	r3, [r3]
 1020 00b2 3A69     		ldr	r2, [r7, #16]
 1021 00b4 1288     		ldrh	r2, [r2]
 1022 00b6 C2F30802 		ubfx	r2, r2, #0, #9
 1023 00ba 9A62     		str	r2, [r3, #40]
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 1024              		.loc 1 751 0
 1025 00bc BB68     		ldr	r3, [r7, #8]
 1026 00be 0233     		adds	r3, r3, #2
 1027 00c0 BB60     		str	r3, [r7, #8]
 1028 00c2 06E0     		b	.L45
 1029              	.L47:
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
ARM GAS  /tmp/ccmShkBJ.s 			page 32


 1030              		.loc 1 755 0
 1031 00c4 FB68     		ldr	r3, [r7, #12]
 1032 00c6 1A68     		ldr	r2, [r3]
 1033 00c8 BB68     		ldr	r3, [r7, #8]
 1034 00ca 591C     		adds	r1, r3, #1
 1035 00cc B960     		str	r1, [r7, #8]
 1036 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 00d0 9362     		str	r3, [r2, #40]
 1038              	.L45:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1039              		.loc 1 740 0
 1040 00d2 FB68     		ldr	r3, [r7, #12]
 1041 00d4 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 1042 00d8 9BB2     		uxth	r3, r3
 1043 00da 002B     		cmp	r3, #0
 1044 00dc C6D1     		bne	.L48
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1045              		.loc 1 758 0
 1046 00de 3B68     		ldr	r3, [r7]
 1047 00e0 0093     		str	r3, [sp]
 1048 00e2 7B69     		ldr	r3, [r7, #20]
 1049 00e4 0022     		movs	r2, #0
 1050 00e6 4021     		movs	r1, #64
 1051 00e8 F868     		ldr	r0, [r7, #12]
 1052 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1053 00ee 0346     		mov	r3, r0
 1054 00f0 002B     		cmp	r3, #0
 1055 00f2 01D0     		beq	.L49
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 1056              		.loc 1 760 0
 1057 00f4 0323     		movs	r3, #3
 1058 00f6 0AE0     		b	.L43
 1059              	.L49:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1060              		.loc 1 764 0
 1061 00f8 FB68     		ldr	r3, [r7, #12]
 1062 00fa 2022     		movs	r2, #32
 1063 00fc 83F86920 		strb	r2, [r3, #105]
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1064              		.loc 1 767 0
 1065 0100 FB68     		ldr	r3, [r7, #12]
 1066 0102 0022     		movs	r2, #0
 1067 0104 83F86820 		strb	r2, [r3, #104]
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1068              		.loc 1 769 0
 1069 0108 0023     		movs	r3, #0
 1070 010a 00E0     		b	.L43
 1071              	.L40:
ARM GAS  /tmp/ccmShkBJ.s 			page 33


 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1072              		.loc 1 773 0
 1073 010c 0223     		movs	r3, #2
 1074              	.L43:
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1075              		.loc 1 775 0
 1076 010e 1846     		mov	r0, r3
 1077 0110 1837     		adds	r7, r7, #24
 1078              	.LCFI45:
 1079              		.cfi_def_cfa_offset 8
 1080 0112 BD46     		mov	sp, r7
 1081              	.LCFI46:
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 0114 80BD     		pop	{r7, pc}
 1085              		.cfi_endproc
 1086              	.LFE144:
 1088              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1089              		.align	1
 1090              		.global	HAL_UART_Receive
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1094              		.fpu fpv4-sp-d16
 1096              	HAL_UART_Receive:
 1097              	.LFB145:
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1098              		.loc 1 786 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 32
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102 0000 80B5     		push	{r7, lr}
 1103              	.LCFI47:
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 8AB0     		sub	sp, sp, #40
 1108              	.LCFI48:
 1109              		.cfi_def_cfa_offset 48
 1110 0004 02AF     		add	r7, sp, #8
 1111              	.LCFI49:
 1112              		.cfi_def_cfa 7, 40
 1113 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccmShkBJ.s 			page 34


 1114 0008 B960     		str	r1, [r7, #8]
 1115 000a 3B60     		str	r3, [r7]
 1116 000c 1346     		mov	r3, r2	@ movhi
 1117 000e FB80     		strh	r3, [r7, #6]	@ movhi
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1118              		.loc 1 789 0
 1119 0010 0023     		movs	r3, #0
 1120 0012 FB61     		str	r3, [r7, #28]
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1121              		.loc 1 792 0
 1122 0014 FB68     		ldr	r3, [r7, #12]
 1123 0016 93F86A30 		ldrb	r3, [r3, #106]
 1124 001a DBB2     		uxtb	r3, r3
 1125 001c 202B     		cmp	r3, #32
 1126 001e 40F0AC80 		bne	.L51
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1127              		.loc 1 794 0
 1128 0022 BB68     		ldr	r3, [r7, #8]
 1129 0024 002B     		cmp	r3, #0
 1130 0026 02D0     		beq	.L52
 1131              		.loc 1 794 0 is_stmt 0 discriminator 1
 1132 0028 FB88     		ldrh	r3, [r7, #6]
 1133 002a 002B     		cmp	r3, #0
 1134 002c 01D1     		bne	.L53
 1135              	.L52:
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 1136              		.loc 1 796 0 is_stmt 1
 1137 002e 0123     		movs	r3, #1
 1138 0030 A4E0     		b	.L54
 1139              	.L53:
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1140              		.loc 1 800 0
 1141 0032 FB68     		ldr	r3, [r7, #12]
 1142 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1143 0038 012B     		cmp	r3, #1
 1144 003a 01D1     		bne	.L55
 1145              		.loc 1 800 0 is_stmt 0 discriminator 1
 1146 003c 0223     		movs	r3, #2
 1147 003e 9DE0     		b	.L54
 1148              	.L55:
 1149              		.loc 1 800 0 discriminator 2
 1150 0040 FB68     		ldr	r3, [r7, #12]
 1151 0042 0122     		movs	r2, #1
 1152 0044 83F86820 		strb	r2, [r3, #104]
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1153              		.loc 1 802 0 is_stmt 1 discriminator 2
 1154 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccmShkBJ.s 			page 35


 1155 004a 0022     		movs	r2, #0
 1156 004c DA66     		str	r2, [r3, #108]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1157              		.loc 1 803 0 discriminator 2
 1158 004e FB68     		ldr	r3, [r7, #12]
 1159 0050 2222     		movs	r2, #34
 1160 0052 83F86A20 		strb	r2, [r3, #106]
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1161              		.loc 1 806 0 discriminator 2
 1162 0056 FFF7FEFF 		bl	HAL_GetTick
 1163 005a F861     		str	r0, [r7, #28]
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1164              		.loc 1 808 0 discriminator 2
 1165 005c FB68     		ldr	r3, [r7, #12]
 1166 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1167 0060 A3F85820 		strh	r2, [r3, #88]	@ movhi
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1168              		.loc 1 809 0 discriminator 2
 1169 0064 FB68     		ldr	r3, [r7, #12]
 1170 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1171 0068 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1172              		.loc 1 812 0 discriminator 2
 1173 006c FB68     		ldr	r3, [r7, #12]
 1174 006e 9B68     		ldr	r3, [r3, #8]
 1175 0070 B3F5805F 		cmp	r3, #4096
 1176 0074 0ED1     		bne	.L56
 1177              		.loc 1 812 0 is_stmt 0 discriminator 1
 1178 0076 FB68     		ldr	r3, [r7, #12]
 1179 0078 1B69     		ldr	r3, [r3, #16]
 1180 007a 002B     		cmp	r3, #0
 1181 007c 05D1     		bne	.L57
 1182              		.loc 1 812 0 discriminator 3
 1183 007e FB68     		ldr	r3, [r7, #12]
 1184 0080 40F2FF12 		movw	r2, #511
 1185 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1186 0088 28E0     		b	.L59
 1187              	.L57:
 1188              		.loc 1 812 0 discriminator 4
 1189 008a FB68     		ldr	r3, [r7, #12]
 1190 008c FF22     		movs	r2, #255
 1191 008e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1192 0092 23E0     		b	.L59
 1193              	.L56:
 1194              		.loc 1 812 0 discriminator 2
 1195 0094 FB68     		ldr	r3, [r7, #12]
 1196 0096 9B68     		ldr	r3, [r3, #8]
 1197 0098 002B     		cmp	r3, #0
 1198 009a 0DD1     		bne	.L60
 1199              		.loc 1 812 0 discriminator 5
 1200 009c FB68     		ldr	r3, [r7, #12]
 1201 009e 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccmShkBJ.s 			page 36


 1202 00a0 002B     		cmp	r3, #0
 1203 00a2 04D1     		bne	.L61
 1204              		.loc 1 812 0 discriminator 7
 1205 00a4 FB68     		ldr	r3, [r7, #12]
 1206 00a6 FF22     		movs	r2, #255
 1207 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1208 00ac 16E0     		b	.L59
 1209              	.L61:
 1210              		.loc 1 812 0 discriminator 8
 1211 00ae FB68     		ldr	r3, [r7, #12]
 1212 00b0 7F22     		movs	r2, #127
 1213 00b2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1214 00b6 11E0     		b	.L59
 1215              	.L60:
 1216              		.loc 1 812 0 discriminator 6
 1217 00b8 FB68     		ldr	r3, [r7, #12]
 1218 00ba 9B68     		ldr	r3, [r3, #8]
 1219 00bc B3F1805F 		cmp	r3, #268435456
 1220 00c0 0CD1     		bne	.L59
 1221              		.loc 1 812 0 discriminator 9
 1222 00c2 FB68     		ldr	r3, [r7, #12]
 1223 00c4 1B69     		ldr	r3, [r3, #16]
 1224 00c6 002B     		cmp	r3, #0
 1225 00c8 04D1     		bne	.L63
 1226              		.loc 1 812 0 discriminator 10
 1227 00ca FB68     		ldr	r3, [r7, #12]
 1228 00cc 7F22     		movs	r2, #127
 1229 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1230 00d2 03E0     		b	.L59
 1231              	.L63:
 1232              		.loc 1 812 0 discriminator 11
 1233 00d4 FB68     		ldr	r3, [r7, #12]
 1234 00d6 3F22     		movs	r2, #63
 1235 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1236              	.L59:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1237              		.loc 1 813 0 is_stmt 1
 1238 00dc FB68     		ldr	r3, [r7, #12]
 1239 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1240 00e2 7B83     		strh	r3, [r7, #26]	@ movhi
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 1241              		.loc 1 816 0
 1242 00e4 39E0     		b	.L64
 1243              	.L67:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 1244              		.loc 1 818 0
 1245 00e6 FB68     		ldr	r3, [r7, #12]
 1246 00e8 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1247 00ec 9BB2     		uxth	r3, r3
 1248 00ee 013B     		subs	r3, r3, #1
 1249 00f0 9AB2     		uxth	r2, r3
 1250 00f2 FB68     		ldr	r3, [r7, #12]
 1251 00f4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
ARM GAS  /tmp/ccmShkBJ.s 			page 37


 1252              		.loc 1 819 0
 1253 00f8 3B68     		ldr	r3, [r7]
 1254 00fa 0093     		str	r3, [sp]
 1255 00fc FB69     		ldr	r3, [r7, #28]
 1256 00fe 0022     		movs	r2, #0
 1257 0100 2021     		movs	r1, #32
 1258 0102 F868     		ldr	r0, [r7, #12]
 1259 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1260 0108 0346     		mov	r3, r0
 1261 010a 002B     		cmp	r3, #0
 1262 010c 01D0     		beq	.L65
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1263              		.loc 1 821 0
 1264 010e 0323     		movs	r3, #3
 1265 0110 34E0     		b	.L54
 1266              	.L65:
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1267              		.loc 1 823 0
 1268 0112 FB68     		ldr	r3, [r7, #12]
 1269 0114 9B68     		ldr	r3, [r3, #8]
 1270 0116 B3F5805F 		cmp	r3, #4096
 1271 011a 12D1     		bne	.L66
 1272              		.loc 1 823 0 is_stmt 0 discriminator 1
 1273 011c FB68     		ldr	r3, [r7, #12]
 1274 011e 1B69     		ldr	r3, [r3, #16]
 1275 0120 002B     		cmp	r3, #0
 1276 0122 0ED1     		bne	.L66
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1277              		.loc 1 825 0 is_stmt 1
 1278 0124 BB68     		ldr	r3, [r7, #8]
 1279 0126 7B61     		str	r3, [r7, #20]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1280              		.loc 1 826 0
 1281 0128 FB68     		ldr	r3, [r7, #12]
 1282 012a 1B68     		ldr	r3, [r3]
 1283 012c 5B6A     		ldr	r3, [r3, #36]
 1284 012e 9AB2     		uxth	r2, r3
 1285 0130 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1286 0132 1340     		ands	r3, r3, r2
 1287 0134 9AB2     		uxth	r2, r3
 1288 0136 7B69     		ldr	r3, [r7, #20]
 1289 0138 1A80     		strh	r2, [r3]	@ movhi
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 1290              		.loc 1 827 0
 1291 013a BB68     		ldr	r3, [r7, #8]
 1292 013c 0233     		adds	r3, r3, #2
 1293 013e BB60     		str	r3, [r7, #8]
 1294 0140 0BE0     		b	.L64
 1295              	.L66:
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1296              		.loc 1 831 0
ARM GAS  /tmp/ccmShkBJ.s 			page 38


 1297 0142 BB68     		ldr	r3, [r7, #8]
 1298 0144 5A1C     		adds	r2, r3, #1
 1299 0146 BA60     		str	r2, [r7, #8]
 1300 0148 FA68     		ldr	r2, [r7, #12]
 1301 014a 1268     		ldr	r2, [r2]
 1302 014c 526A     		ldr	r2, [r2, #36]
 1303 014e D1B2     		uxtb	r1, r2
 1304 0150 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 1305 0152 D2B2     		uxtb	r2, r2
 1306 0154 0A40     		ands	r2, r2, r1
 1307 0156 D2B2     		uxtb	r2, r2
 1308 0158 1A70     		strb	r2, [r3]
 1309              	.L64:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1310              		.loc 1 816 0
 1311 015a FB68     		ldr	r3, [r7, #12]
 1312 015c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1313 0160 9BB2     		uxth	r3, r3
 1314 0162 002B     		cmp	r3, #0
 1315 0164 BFD1     		bne	.L67
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1316              		.loc 1 836 0
 1317 0166 FB68     		ldr	r3, [r7, #12]
 1318 0168 2022     		movs	r2, #32
 1319 016a 83F86A20 		strb	r2, [r3, #106]
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1320              		.loc 1 839 0
 1321 016e FB68     		ldr	r3, [r7, #12]
 1322 0170 0022     		movs	r2, #0
 1323 0172 83F86820 		strb	r2, [r3, #104]
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1324              		.loc 1 841 0
 1325 0176 0023     		movs	r3, #0
 1326 0178 00E0     		b	.L54
 1327              	.L51:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1328              		.loc 1 845 0
 1329 017a 0223     		movs	r3, #2
 1330              	.L54:
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1331              		.loc 1 847 0
 1332 017c 1846     		mov	r0, r3
 1333 017e 2037     		adds	r7, r7, #32
 1334              	.LCFI50:
 1335              		.cfi_def_cfa_offset 8
 1336 0180 BD46     		mov	sp, r7
ARM GAS  /tmp/ccmShkBJ.s 			page 39


 1337              	.LCFI51:
 1338              		.cfi_def_cfa_register 13
 1339              		@ sp needed
 1340 0182 80BD     		pop	{r7, pc}
 1341              		.cfi_endproc
 1342              	.LFE145:
 1344              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1345              		.align	1
 1346              		.global	HAL_UART_Transmit_IT
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1350              		.fpu fpv4-sp-d16
 1352              	HAL_UART_Transmit_IT:
 1353              	.LFB146:
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1354              		.loc 1 857 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 16
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 1359 0000 80B4     		push	{r7}
 1360              	.LCFI52:
 1361              		.cfi_def_cfa_offset 4
 1362              		.cfi_offset 7, -4
 1363 0002 85B0     		sub	sp, sp, #20
 1364              	.LCFI53:
 1365              		.cfi_def_cfa_offset 24
 1366 0004 00AF     		add	r7, sp, #0
 1367              	.LCFI54:
 1368              		.cfi_def_cfa_register 7
 1369 0006 F860     		str	r0, [r7, #12]
 1370 0008 B960     		str	r1, [r7, #8]
 1371 000a 1346     		mov	r3, r2
 1372 000c FB80     		strh	r3, [r7, #6]	@ movhi
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1373              		.loc 1 859 0
 1374 000e FB68     		ldr	r3, [r7, #12]
 1375 0010 93F86930 		ldrb	r3, [r3, #105]
 1376 0014 DBB2     		uxtb	r3, r3
 1377 0016 202B     		cmp	r3, #32
 1378 0018 32D1     		bne	.L69
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1379              		.loc 1 861 0
 1380 001a BB68     		ldr	r3, [r7, #8]
 1381 001c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccmShkBJ.s 			page 40


 1382 001e 02D0     		beq	.L70
 1383              		.loc 1 861 0 is_stmt 0 discriminator 1
 1384 0020 FB88     		ldrh	r3, [r7, #6]
 1385 0022 002B     		cmp	r3, #0
 1386 0024 01D1     		bne	.L71
 1387              	.L70:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1388              		.loc 1 863 0 is_stmt 1
 1389 0026 0123     		movs	r3, #1
 1390 0028 2BE0     		b	.L72
 1391              	.L71:
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1392              		.loc 1 867 0
 1393 002a FB68     		ldr	r3, [r7, #12]
 1394 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1395 0030 012B     		cmp	r3, #1
 1396 0032 01D1     		bne	.L73
 1397              		.loc 1 867 0 is_stmt 0 discriminator 1
 1398 0034 0223     		movs	r3, #2
 1399 0036 24E0     		b	.L72
 1400              	.L73:
 1401              		.loc 1 867 0 discriminator 2
 1402 0038 FB68     		ldr	r3, [r7, #12]
 1403 003a 0122     		movs	r2, #1
 1404 003c 83F86820 		strb	r2, [r3, #104]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1405              		.loc 1 869 0 is_stmt 1 discriminator 2
 1406 0040 FB68     		ldr	r3, [r7, #12]
 1407 0042 BA68     		ldr	r2, [r7, #8]
 1408 0044 DA64     		str	r2, [r3, #76]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 1409              		.loc 1 870 0 discriminator 2
 1410 0046 FB68     		ldr	r3, [r7, #12]
 1411 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1412 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1413              		.loc 1 871 0 discriminator 2
 1414 004e FB68     		ldr	r3, [r7, #12]
 1415 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1416 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1417              		.loc 1 873 0 discriminator 2
 1418 0056 FB68     		ldr	r3, [r7, #12]
 1419 0058 0022     		movs	r2, #0
 1420 005a DA66     		str	r2, [r3, #108]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1421              		.loc 1 874 0 discriminator 2
 1422 005c FB68     		ldr	r3, [r7, #12]
 1423 005e 2122     		movs	r2, #33
 1424 0060 83F86920 		strb	r2, [r3, #105]
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccmShkBJ.s 			page 41


 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1425              		.loc 1 877 0 discriminator 2
 1426 0064 FB68     		ldr	r3, [r7, #12]
 1427 0066 0022     		movs	r2, #0
 1428 0068 83F86820 		strb	r2, [r3, #104]
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1429              		.loc 1 880 0 discriminator 2
 1430 006c FB68     		ldr	r3, [r7, #12]
 1431 006e 1B68     		ldr	r3, [r3]
 1432 0070 FA68     		ldr	r2, [r7, #12]
 1433 0072 1268     		ldr	r2, [r2]
 1434 0074 1268     		ldr	r2, [r2]
 1435 0076 42F08002 		orr	r2, r2, #128
 1436 007a 1A60     		str	r2, [r3]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1437              		.loc 1 882 0 discriminator 2
 1438 007c 0023     		movs	r3, #0
 1439 007e 00E0     		b	.L72
 1440              	.L69:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1441              		.loc 1 886 0
 1442 0080 0223     		movs	r3, #2
 1443              	.L72:
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1444              		.loc 1 888 0
 1445 0082 1846     		mov	r0, r3
 1446 0084 1437     		adds	r7, r7, #20
 1447              	.LCFI55:
 1448              		.cfi_def_cfa_offset 4
 1449 0086 BD46     		mov	sp, r7
 1450              	.LCFI56:
 1451              		.cfi_def_cfa_register 13
 1452              		@ sp needed
 1453 0088 5DF8047B 		ldr	r7, [sp], #4
 1454              	.LCFI57:
 1455              		.cfi_restore 7
 1456              		.cfi_def_cfa_offset 0
 1457 008c 7047     		bx	lr
 1458              		.cfi_endproc
 1459              	.LFE146:
 1461              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1462              		.align	1
 1463              		.global	HAL_UART_Receive_IT
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu fpv4-sp-d16
 1469              	HAL_UART_Receive_IT:
 1470              	.LFB147:
ARM GAS  /tmp/ccmShkBJ.s 			page 42


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1471              		.loc 1 898 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 16
 1474              		@ frame_needed = 1, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476 0000 80B4     		push	{r7}
 1477              	.LCFI58:
 1478              		.cfi_def_cfa_offset 4
 1479              		.cfi_offset 7, -4
 1480 0002 85B0     		sub	sp, sp, #20
 1481              	.LCFI59:
 1482              		.cfi_def_cfa_offset 24
 1483 0004 00AF     		add	r7, sp, #0
 1484              	.LCFI60:
 1485              		.cfi_def_cfa_register 7
 1486 0006 F860     		str	r0, [r7, #12]
 1487 0008 B960     		str	r1, [r7, #8]
 1488 000a 1346     		mov	r3, r2
 1489 000c FB80     		strh	r3, [r7, #6]	@ movhi
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1490              		.loc 1 900 0
 1491 000e FB68     		ldr	r3, [r7, #12]
 1492 0010 93F86A30 		ldrb	r3, [r3, #106]
 1493 0014 DBB2     		uxtb	r3, r3
 1494 0016 202B     		cmp	r3, #32
 1495 0018 72D1     		bne	.L75
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1496              		.loc 1 902 0
 1497 001a BB68     		ldr	r3, [r7, #8]
 1498 001c 002B     		cmp	r3, #0
 1499 001e 02D0     		beq	.L76
 1500              		.loc 1 902 0 is_stmt 0 discriminator 1
 1501 0020 FB88     		ldrh	r3, [r7, #6]
 1502 0022 002B     		cmp	r3, #0
 1503 0024 01D1     		bne	.L77
 1504              	.L76:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1505              		.loc 1 904 0 is_stmt 1
 1506 0026 0123     		movs	r3, #1
 1507 0028 6BE0     		b	.L78
 1508              	.L77:
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
ARM GAS  /tmp/ccmShkBJ.s 			page 43


 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1509              		.loc 1 908 0
 1510 002a FB68     		ldr	r3, [r7, #12]
 1511 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1512 0030 012B     		cmp	r3, #1
 1513 0032 01D1     		bne	.L79
 1514              		.loc 1 908 0 is_stmt 0 discriminator 1
 1515 0034 0223     		movs	r3, #2
 1516 0036 64E0     		b	.L78
 1517              	.L79:
 1518              		.loc 1 908 0 discriminator 2
 1519 0038 FB68     		ldr	r3, [r7, #12]
 1520 003a 0122     		movs	r2, #1
 1521 003c 83F86820 		strb	r2, [r3, #104]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1522              		.loc 1 910 0 is_stmt 1 discriminator 2
 1523 0040 FB68     		ldr	r3, [r7, #12]
 1524 0042 BA68     		ldr	r2, [r7, #8]
 1525 0044 5A65     		str	r2, [r3, #84]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1526              		.loc 1 911 0 discriminator 2
 1527 0046 FB68     		ldr	r3, [r7, #12]
 1528 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1529 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1530              		.loc 1 912 0 discriminator 2
 1531 004e FB68     		ldr	r3, [r7, #12]
 1532 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1533 0052 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1534              		.loc 1 915 0 discriminator 2
 1535 0056 FB68     		ldr	r3, [r7, #12]
 1536 0058 9B68     		ldr	r3, [r3, #8]
 1537 005a B3F5805F 		cmp	r3, #4096
 1538 005e 0ED1     		bne	.L80
 1539              		.loc 1 915 0 is_stmt 0 discriminator 1
 1540 0060 FB68     		ldr	r3, [r7, #12]
 1541 0062 1B69     		ldr	r3, [r3, #16]
 1542 0064 002B     		cmp	r3, #0
 1543 0066 05D1     		bne	.L81
 1544              		.loc 1 915 0 discriminator 3
 1545 0068 FB68     		ldr	r3, [r7, #12]
 1546 006a 40F2FF12 		movw	r2, #511
 1547 006e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1548 0072 28E0     		b	.L83
 1549              	.L81:
 1550              		.loc 1 915 0 discriminator 4
 1551 0074 FB68     		ldr	r3, [r7, #12]
 1552 0076 FF22     		movs	r2, #255
 1553 0078 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1554 007c 23E0     		b	.L83
 1555              	.L80:
 1556              		.loc 1 915 0 discriminator 2
 1557 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccmShkBJ.s 			page 44


 1558 0080 9B68     		ldr	r3, [r3, #8]
 1559 0082 002B     		cmp	r3, #0
 1560 0084 0DD1     		bne	.L84
 1561              		.loc 1 915 0 discriminator 5
 1562 0086 FB68     		ldr	r3, [r7, #12]
 1563 0088 1B69     		ldr	r3, [r3, #16]
 1564 008a 002B     		cmp	r3, #0
 1565 008c 04D1     		bne	.L85
 1566              		.loc 1 915 0 discriminator 7
 1567 008e FB68     		ldr	r3, [r7, #12]
 1568 0090 FF22     		movs	r2, #255
 1569 0092 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1570 0096 16E0     		b	.L83
 1571              	.L85:
 1572              		.loc 1 915 0 discriminator 8
 1573 0098 FB68     		ldr	r3, [r7, #12]
 1574 009a 7F22     		movs	r2, #127
 1575 009c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1576 00a0 11E0     		b	.L83
 1577              	.L84:
 1578              		.loc 1 915 0 discriminator 6
 1579 00a2 FB68     		ldr	r3, [r7, #12]
 1580 00a4 9B68     		ldr	r3, [r3, #8]
 1581 00a6 B3F1805F 		cmp	r3, #268435456
 1582 00aa 0CD1     		bne	.L83
 1583              		.loc 1 915 0 discriminator 9
 1584 00ac FB68     		ldr	r3, [r7, #12]
 1585 00ae 1B69     		ldr	r3, [r3, #16]
 1586 00b0 002B     		cmp	r3, #0
 1587 00b2 04D1     		bne	.L87
 1588              		.loc 1 915 0 discriminator 10
 1589 00b4 FB68     		ldr	r3, [r7, #12]
 1590 00b6 7F22     		movs	r2, #127
 1591 00b8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1592 00bc 03E0     		b	.L83
 1593              	.L87:
 1594              		.loc 1 915 0 discriminator 11
 1595 00be FB68     		ldr	r3, [r7, #12]
 1596 00c0 3F22     		movs	r2, #63
 1597 00c2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1598              	.L83:
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1599              		.loc 1 917 0 is_stmt 1
 1600 00c6 FB68     		ldr	r3, [r7, #12]
 1601 00c8 0022     		movs	r2, #0
 1602 00ca DA66     		str	r2, [r3, #108]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1603              		.loc 1 918 0
 1604 00cc FB68     		ldr	r3, [r7, #12]
 1605 00ce 2222     		movs	r2, #34
 1606 00d0 83F86A20 		strb	r2, [r3, #106]
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1607              		.loc 1 921 0
 1608 00d4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccmShkBJ.s 			page 45


 1609 00d6 0022     		movs	r2, #0
 1610 00d8 83F86820 		strb	r2, [r3, #104]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1611              		.loc 1 924 0
 1612 00dc FB68     		ldr	r3, [r7, #12]
 1613 00de 1B68     		ldr	r3, [r3]
 1614 00e0 FA68     		ldr	r2, [r7, #12]
 1615 00e2 1268     		ldr	r2, [r2]
 1616 00e4 9268     		ldr	r2, [r2, #8]
 1617 00e6 42F00102 		orr	r2, r2, #1
 1618 00ea 9A60     		str	r2, [r3, #8]
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1619              		.loc 1 927 0
 1620 00ec FB68     		ldr	r3, [r7, #12]
 1621 00ee 1B68     		ldr	r3, [r3]
 1622 00f0 FA68     		ldr	r2, [r7, #12]
 1623 00f2 1268     		ldr	r2, [r2]
 1624 00f4 1268     		ldr	r2, [r2]
 1625 00f6 42F49072 		orr	r2, r2, #288
 1626 00fa 1A60     		str	r2, [r3]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1627              		.loc 1 929 0
 1628 00fc 0023     		movs	r3, #0
 1629 00fe 00E0     		b	.L78
 1630              	.L75:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1631              		.loc 1 933 0
 1632 0100 0223     		movs	r3, #2
 1633              	.L78:
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1634              		.loc 1 935 0
 1635 0102 1846     		mov	r0, r3
 1636 0104 1437     		adds	r7, r7, #20
 1637              	.LCFI61:
 1638              		.cfi_def_cfa_offset 4
 1639 0106 BD46     		mov	sp, r7
 1640              	.LCFI62:
 1641              		.cfi_def_cfa_register 13
 1642              		@ sp needed
 1643 0108 5DF8047B 		ldr	r7, [sp], #4
 1644              	.LCFI63:
 1645              		.cfi_restore 7
 1646              		.cfi_def_cfa_offset 0
 1647 010c 7047     		bx	lr
 1648              		.cfi_endproc
 1649              	.LFE147:
 1651              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1652              		.align	1
ARM GAS  /tmp/ccmShkBJ.s 			page 46


 1653              		.global	HAL_UART_Transmit_DMA
 1654              		.syntax unified
 1655              		.thumb
 1656              		.thumb_func
 1657              		.fpu fpv4-sp-d16
 1659              	HAL_UART_Transmit_DMA:
 1660              	.LFB148:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1661              		.loc 1 945 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 24
 1664              		@ frame_needed = 1, uses_anonymous_args = 0
 1665 0000 80B5     		push	{r7, lr}
 1666              	.LCFI64:
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 7, -8
 1669              		.cfi_offset 14, -4
 1670 0002 86B0     		sub	sp, sp, #24
 1671              	.LCFI65:
 1672              		.cfi_def_cfa_offset 32
 1673 0004 00AF     		add	r7, sp, #0
 1674              	.LCFI66:
 1675              		.cfi_def_cfa_register 7
 1676 0006 F860     		str	r0, [r7, #12]
 1677 0008 B960     		str	r1, [r7, #8]
 1678 000a 1346     		mov	r3, r2
 1679 000c FB80     		strh	r3, [r7, #6]	@ movhi
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1680              		.loc 1 949 0
 1681 000e FB68     		ldr	r3, [r7, #12]
 1682 0010 93F86930 		ldrb	r3, [r3, #105]
 1683 0014 DBB2     		uxtb	r3, r3
 1684 0016 202B     		cmp	r3, #32
 1685 0018 54D1     		bne	.L89
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1686              		.loc 1 951 0
 1687 001a BB68     		ldr	r3, [r7, #8]
 1688 001c 002B     		cmp	r3, #0
 1689 001e 02D0     		beq	.L90
 1690              		.loc 1 951 0 is_stmt 0 discriminator 1
 1691 0020 FB88     		ldrh	r3, [r7, #6]
 1692 0022 002B     		cmp	r3, #0
 1693 0024 01D1     		bne	.L91
 1694              	.L90:
ARM GAS  /tmp/ccmShkBJ.s 			page 47


 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1695              		.loc 1 953 0 is_stmt 1
 1696 0026 0123     		movs	r3, #1
 1697 0028 4DE0     		b	.L92
 1698              	.L91:
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1699              		.loc 1 957 0
 1700 002a FB68     		ldr	r3, [r7, #12]
 1701 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1702 0030 012B     		cmp	r3, #1
 1703 0032 01D1     		bne	.L93
 1704              		.loc 1 957 0 is_stmt 0 discriminator 1
 1705 0034 0223     		movs	r3, #2
 1706 0036 46E0     		b	.L92
 1707              	.L93:
 1708              		.loc 1 957 0 discriminator 2
 1709 0038 FB68     		ldr	r3, [r7, #12]
 1710 003a 0122     		movs	r2, #1
 1711 003c 83F86820 		strb	r2, [r3, #104]
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1712              		.loc 1 959 0 is_stmt 1 discriminator 2
 1713 0040 BA68     		ldr	r2, [r7, #8]
 1714 0042 FB68     		ldr	r3, [r7, #12]
 1715 0044 DA64     		str	r2, [r3, #76]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 1716              		.loc 1 960 0 discriminator 2
 1717 0046 FB68     		ldr	r3, [r7, #12]
 1718 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1719 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1720              		.loc 1 961 0 discriminator 2
 1721 004e FB68     		ldr	r3, [r7, #12]
 1722 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1723 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1724              		.loc 1 963 0 discriminator 2
 1725 0056 FB68     		ldr	r3, [r7, #12]
 1726 0058 0022     		movs	r2, #0
 1727 005a DA66     		str	r2, [r3, #108]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1728              		.loc 1 964 0 discriminator 2
 1729 005c FB68     		ldr	r3, [r7, #12]
 1730 005e 2122     		movs	r2, #33
 1731 0060 83F86920 		strb	r2, [r3, #105]
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1732              		.loc 1 967 0 discriminator 2
 1733 0064 FB68     		ldr	r3, [r7, #12]
 1734 0066 1B6E     		ldr	r3, [r3, #96]
 1735 0068 194A     		ldr	r2, .L94
ARM GAS  /tmp/ccmShkBJ.s 			page 48


 1736 006a DA63     		str	r2, [r3, #60]
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1737              		.loc 1 970 0 discriminator 2
 1738 006c FB68     		ldr	r3, [r7, #12]
 1739 006e 1B6E     		ldr	r3, [r3, #96]
 1740 0070 184A     		ldr	r2, .L94+4
 1741 0072 1A64     		str	r2, [r3, #64]
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1742              		.loc 1 973 0 discriminator 2
 1743 0074 FB68     		ldr	r3, [r7, #12]
 1744 0076 1B6E     		ldr	r3, [r3, #96]
 1745 0078 174A     		ldr	r2, .L94+8
 1746 007a DA64     		str	r2, [r3, #76]
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1747              		.loc 1 976 0 discriminator 2
 1748 007c FB68     		ldr	r3, [r7, #12]
 1749 007e 1B6E     		ldr	r3, [r3, #96]
 1750 0080 0022     		movs	r2, #0
 1751 0082 1A65     		str	r2, [r3, #80]
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1752              		.loc 1 979 0 discriminator 2
 1753 0084 07F10803 		add	r3, r7, #8
 1754 0088 7B61     		str	r3, [r7, #20]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 1755              		.loc 1 980 0 discriminator 2
 1756 008a FB68     		ldr	r3, [r7, #12]
 1757 008c 186E     		ldr	r0, [r3, #96]
 1758 008e 7B69     		ldr	r3, [r7, #20]
 1759 0090 1968     		ldr	r1, [r3]
 1760 0092 FB68     		ldr	r3, [r7, #12]
 1761 0094 1B68     		ldr	r3, [r3]
 1762 0096 2833     		adds	r3, r3, #40
 1763 0098 1A46     		mov	r2, r3
 1764 009a FB88     		ldrh	r3, [r7, #6]
 1765 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_FLAG_TC);
 1766              		.loc 1 983 0 discriminator 2
 1767 00a0 FB68     		ldr	r3, [r7, #12]
 1768 00a2 1B68     		ldr	r3, [r3]
 1769 00a4 4022     		movs	r2, #64
 1770 00a6 1A62     		str	r2, [r3, #32]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1771              		.loc 1 986 0 discriminator 2
 1772 00a8 FB68     		ldr	r3, [r7, #12]
 1773 00aa 0022     		movs	r2, #0
ARM GAS  /tmp/ccmShkBJ.s 			page 49


 1774 00ac 83F86820 		strb	r2, [r3, #104]
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1775              		.loc 1 990 0 discriminator 2
 1776 00b0 FB68     		ldr	r3, [r7, #12]
 1777 00b2 1B68     		ldr	r3, [r3]
 1778 00b4 FA68     		ldr	r2, [r7, #12]
 1779 00b6 1268     		ldr	r2, [r2]
 1780 00b8 9268     		ldr	r2, [r2, #8]
 1781 00ba 42F08002 		orr	r2, r2, #128
 1782 00be 9A60     		str	r2, [r3, #8]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1783              		.loc 1 992 0 discriminator 2
 1784 00c0 0023     		movs	r3, #0
 1785 00c2 00E0     		b	.L92
 1786              	.L89:
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1787              		.loc 1 996 0
 1788 00c4 0223     		movs	r3, #2
 1789              	.L92:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1790              		.loc 1 998 0
 1791 00c6 1846     		mov	r0, r3
 1792 00c8 1837     		adds	r7, r7, #24
 1793              	.LCFI67:
 1794              		.cfi_def_cfa_offset 8
 1795 00ca BD46     		mov	sp, r7
 1796              	.LCFI68:
 1797              		.cfi_def_cfa_register 13
 1798              		@ sp needed
 1799 00cc 80BD     		pop	{r7, pc}
 1800              	.L95:
 1801 00ce 00BF     		.align	2
 1802              	.L94:
 1803 00d0 00000000 		.word	UART_DMATransmitCplt
 1804 00d4 00000000 		.word	UART_DMATxHalfCplt
 1805 00d8 00000000 		.word	UART_DMAError
 1806              		.cfi_endproc
 1807              	.LFE148:
 1809              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1810              		.align	1
 1811              		.global	HAL_UART_Receive_DMA
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1815              		.fpu fpv4-sp-d16
 1817              	HAL_UART_Receive_DMA:
 1818              	.LFB149:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccmShkBJ.s 			page 50


1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1819              		.loc 1 1010 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 24
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823 0000 80B5     		push	{r7, lr}
 1824              	.LCFI69:
 1825              		.cfi_def_cfa_offset 8
 1826              		.cfi_offset 7, -8
 1827              		.cfi_offset 14, -4
 1828 0002 86B0     		sub	sp, sp, #24
 1829              	.LCFI70:
 1830              		.cfi_def_cfa_offset 32
 1831 0004 00AF     		add	r7, sp, #0
 1832              	.LCFI71:
 1833              		.cfi_def_cfa_register 7
 1834 0006 F860     		str	r0, [r7, #12]
 1835 0008 B960     		str	r1, [r7, #8]
 1836 000a 1346     		mov	r3, r2
 1837 000c FB80     		strh	r3, [r7, #6]	@ movhi
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1838              		.loc 1 1014 0
 1839 000e FB68     		ldr	r3, [r7, #12]
 1840 0010 93F86A30 		ldrb	r3, [r3, #106]
 1841 0014 DBB2     		uxtb	r3, r3
 1842 0016 202B     		cmp	r3, #32
 1843 0018 5CD1     		bne	.L97
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1844              		.loc 1 1016 0
 1845 001a BB68     		ldr	r3, [r7, #8]
 1846 001c 002B     		cmp	r3, #0
 1847 001e 02D0     		beq	.L98
 1848              		.loc 1 1016 0 is_stmt 0 discriminator 1
 1849 0020 FB88     		ldrh	r3, [r7, #6]
 1850 0022 002B     		cmp	r3, #0
 1851 0024 01D1     		bne	.L99
 1852              	.L98:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1853              		.loc 1 1018 0 is_stmt 1
 1854 0026 0123     		movs	r3, #1
 1855 0028 55E0     		b	.L100
 1856              	.L99:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
ARM GAS  /tmp/ccmShkBJ.s 			page 51


1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1857              		.loc 1 1022 0
 1858 002a FB68     		ldr	r3, [r7, #12]
 1859 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1860 0030 012B     		cmp	r3, #1
 1861 0032 01D1     		bne	.L101
 1862              		.loc 1 1022 0 is_stmt 0 discriminator 1
 1863 0034 0223     		movs	r3, #2
 1864 0036 4EE0     		b	.L100
 1865              	.L101:
 1866              		.loc 1 1022 0 discriminator 2
 1867 0038 FB68     		ldr	r3, [r7, #12]
 1868 003a 0122     		movs	r2, #1
 1869 003c 83F86820 		strb	r2, [r3, #104]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1870              		.loc 1 1024 0 is_stmt 1 discriminator 2
 1871 0040 BA68     		ldr	r2, [r7, #8]
 1872 0042 FB68     		ldr	r3, [r7, #12]
 1873 0044 5A65     		str	r2, [r3, #84]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1874              		.loc 1 1025 0 discriminator 2
 1875 0046 FB68     		ldr	r3, [r7, #12]
 1876 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1877 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1878              		.loc 1 1027 0 discriminator 2
 1879 004e FB68     		ldr	r3, [r7, #12]
 1880 0050 0022     		movs	r2, #0
 1881 0052 DA66     		str	r2, [r3, #108]
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1882              		.loc 1 1028 0 discriminator 2
 1883 0054 FB68     		ldr	r3, [r7, #12]
 1884 0056 2222     		movs	r2, #34
 1885 0058 83F86A20 		strb	r2, [r3, #106]
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1886              		.loc 1 1031 0 discriminator 2
 1887 005c FB68     		ldr	r3, [r7, #12]
 1888 005e 5B6E     		ldr	r3, [r3, #100]
 1889 0060 1F4A     		ldr	r2, .L102
 1890 0062 DA63     		str	r2, [r3, #60]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1891              		.loc 1 1034 0 discriminator 2
 1892 0064 FB68     		ldr	r3, [r7, #12]
 1893 0066 5B6E     		ldr	r3, [r3, #100]
 1894 0068 1E4A     		ldr	r2, .L102+4
 1895 006a 1A64     		str	r2, [r3, #64]
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
ARM GAS  /tmp/ccmShkBJ.s 			page 52


 1896              		.loc 1 1037 0 discriminator 2
 1897 006c FB68     		ldr	r3, [r7, #12]
 1898 006e 5B6E     		ldr	r3, [r3, #100]
 1899 0070 1D4A     		ldr	r2, .L102+8
 1900 0072 DA64     		str	r2, [r3, #76]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1901              		.loc 1 1040 0 discriminator 2
 1902 0074 FB68     		ldr	r3, [r7, #12]
 1903 0076 5B6E     		ldr	r3, [r3, #100]
 1904 0078 0022     		movs	r2, #0
 1905 007a 1A65     		str	r2, [r3, #80]
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1906              		.loc 1 1043 0 discriminator 2
 1907 007c 07F10803 		add	r3, r7, #8
 1908 0080 7B61     		str	r3, [r7, #20]
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
 1909              		.loc 1 1044 0 discriminator 2
 1910 0082 FB68     		ldr	r3, [r7, #12]
 1911 0084 586E     		ldr	r0, [r3, #100]
 1912 0086 FB68     		ldr	r3, [r7, #12]
 1913 0088 1B68     		ldr	r3, [r3]
 1914 008a 2433     		adds	r3, r3, #36
 1915 008c 1946     		mov	r1, r3
 1916 008e 7B69     		ldr	r3, [r7, #20]
 1917 0090 1A68     		ldr	r2, [r3]
 1918 0092 FB88     		ldrh	r3, [r7, #6]
 1919 0094 FFF7FEFF 		bl	HAL_DMA_Start_IT
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1920              		.loc 1 1047 0 discriminator 2
 1921 0098 FB68     		ldr	r3, [r7, #12]
 1922 009a 0022     		movs	r2, #0
 1923 009c 83F86820 		strb	r2, [r3, #104]
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1924              		.loc 1 1050 0 discriminator 2
 1925 00a0 FB68     		ldr	r3, [r7, #12]
 1926 00a2 1B68     		ldr	r3, [r3]
 1927 00a4 FA68     		ldr	r2, [r7, #12]
 1928 00a6 1268     		ldr	r2, [r2]
 1929 00a8 1268     		ldr	r2, [r2]
 1930 00aa 42F48072 		orr	r2, r2, #256
 1931 00ae 1A60     		str	r2, [r3]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1932              		.loc 1 1053 0 discriminator 2
 1933 00b0 FB68     		ldr	r3, [r7, #12]
 1934 00b2 1B68     		ldr	r3, [r3]
 1935 00b4 FA68     		ldr	r2, [r7, #12]
 1936 00b6 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccmShkBJ.s 			page 53


 1937 00b8 9268     		ldr	r2, [r2, #8]
 1938 00ba 42F00102 		orr	r2, r2, #1
 1939 00be 9A60     		str	r2, [r3, #8]
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1940              		.loc 1 1057 0 discriminator 2
 1941 00c0 FB68     		ldr	r3, [r7, #12]
 1942 00c2 1B68     		ldr	r3, [r3]
 1943 00c4 FA68     		ldr	r2, [r7, #12]
 1944 00c6 1268     		ldr	r2, [r2]
 1945 00c8 9268     		ldr	r2, [r2, #8]
 1946 00ca 42F04002 		orr	r2, r2, #64
 1947 00ce 9A60     		str	r2, [r3, #8]
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1948              		.loc 1 1059 0 discriminator 2
 1949 00d0 0023     		movs	r3, #0
 1950 00d2 00E0     		b	.L100
 1951              	.L97:
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1952              		.loc 1 1063 0
 1953 00d4 0223     		movs	r3, #2
 1954              	.L100:
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1955              		.loc 1 1065 0
 1956 00d6 1846     		mov	r0, r3
 1957 00d8 1837     		adds	r7, r7, #24
 1958              	.LCFI72:
 1959              		.cfi_def_cfa_offset 8
 1960 00da BD46     		mov	sp, r7
 1961              	.LCFI73:
 1962              		.cfi_def_cfa_register 13
 1963              		@ sp needed
 1964 00dc 80BD     		pop	{r7, pc}
 1965              	.L103:
 1966 00de 00BF     		.align	2
 1967              	.L102:
 1968 00e0 00000000 		.word	UART_DMAReceiveCplt
 1969 00e4 00000000 		.word	UART_DMARxHalfCplt
 1970 00e8 00000000 		.word	UART_DMAError
 1971              		.cfi_endproc
 1972              	.LFE149:
 1974              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1975              		.align	1
 1976              		.global	HAL_UART_DMAPause
 1977              		.syntax unified
 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv4-sp-d16
 1982              	HAL_UART_DMAPause:
 1983              	.LFB150:
ARM GAS  /tmp/ccmShkBJ.s 			page 54


1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1984              		.loc 1 1073 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 8
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988              		@ link register save eliminated.
 1989 0000 80B4     		push	{r7}
 1990              	.LCFI74:
 1991              		.cfi_def_cfa_offset 4
 1992              		.cfi_offset 7, -4
 1993 0002 83B0     		sub	sp, sp, #12
 1994              	.LCFI75:
 1995              		.cfi_def_cfa_offset 16
 1996 0004 00AF     		add	r7, sp, #0
 1997              	.LCFI76:
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2000              		.loc 1 1075 0
 2001 0008 7B68     		ldr	r3, [r7, #4]
 2002 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2003 000e 012B     		cmp	r3, #1
 2004 0010 01D1     		bne	.L105
 2005              		.loc 1 1075 0 is_stmt 0 discriminator 1
 2006 0012 0223     		movs	r3, #2
 2007 0014 42E0     		b	.L106
 2008              	.L105:
 2009              		.loc 1 1075 0 discriminator 2
 2010 0016 7B68     		ldr	r3, [r7, #4]
 2011 0018 0122     		movs	r2, #1
 2012 001a 83F86820 		strb	r2, [r3, #104]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2013              		.loc 1 1077 0 is_stmt 1 discriminator 2
 2014 001e 7B68     		ldr	r3, [r7, #4]
 2015 0020 93F86930 		ldrb	r3, [r3, #105]
 2016 0024 DBB2     		uxtb	r3, r3
 2017 0026 212B     		cmp	r3, #33
 2018 0028 0ED1     		bne	.L107
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2019              		.loc 1 1078 0 discriminator 1
 2020 002a 7B68     		ldr	r3, [r7, #4]
 2021 002c 1B68     		ldr	r3, [r3]
 2022 002e 9B68     		ldr	r3, [r3, #8]
 2023 0030 03F08003 		and	r3, r3, #128
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2024              		.loc 1 1077 0 discriminator 1
 2025 0034 002B     		cmp	r3, #0
 2026 0036 07D0     		beq	.L107
ARM GAS  /tmp/ccmShkBJ.s 			page 55


1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2027              		.loc 1 1081 0
 2028 0038 7B68     		ldr	r3, [r7, #4]
 2029 003a 1B68     		ldr	r3, [r3]
 2030 003c 7A68     		ldr	r2, [r7, #4]
 2031 003e 1268     		ldr	r2, [r2]
 2032 0040 9268     		ldr	r2, [r2, #8]
 2033 0042 22F08002 		bic	r2, r2, #128
 2034 0046 9A60     		str	r2, [r3, #8]
 2035              	.L107:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2036              		.loc 1 1083 0
 2037 0048 7B68     		ldr	r3, [r7, #4]
 2038 004a 93F86A30 		ldrb	r3, [r3, #106]
 2039 004e DBB2     		uxtb	r3, r3
 2040 0050 222B     		cmp	r3, #34
 2041 0052 1ED1     		bne	.L108
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2042              		.loc 1 1084 0 discriminator 1
 2043 0054 7B68     		ldr	r3, [r7, #4]
 2044 0056 1B68     		ldr	r3, [r3]
 2045 0058 9B68     		ldr	r3, [r3, #8]
 2046 005a 03F04003 		and	r3, r3, #64
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2047              		.loc 1 1083 0 discriminator 1
 2048 005e 002B     		cmp	r3, #0
 2049 0060 17D0     		beq	.L108
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2050              		.loc 1 1087 0
 2051 0062 7B68     		ldr	r3, [r7, #4]
 2052 0064 1B68     		ldr	r3, [r3]
 2053 0066 7A68     		ldr	r2, [r7, #4]
 2054 0068 1268     		ldr	r2, [r2]
 2055 006a 1268     		ldr	r2, [r2]
 2056 006c 22F48072 		bic	r2, r2, #256
 2057 0070 1A60     		str	r2, [r3]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2058              		.loc 1 1088 0
 2059 0072 7B68     		ldr	r3, [r7, #4]
 2060 0074 1B68     		ldr	r3, [r3]
 2061 0076 7A68     		ldr	r2, [r7, #4]
 2062 0078 1268     		ldr	r2, [r2]
 2063 007a 9268     		ldr	r2, [r2, #8]
 2064 007c 22F00102 		bic	r2, r2, #1
 2065 0080 9A60     		str	r2, [r3, #8]
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2066              		.loc 1 1091 0
 2067 0082 7B68     		ldr	r3, [r7, #4]
 2068 0084 1B68     		ldr	r3, [r3]
 2069 0086 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 56


 2070 0088 1268     		ldr	r2, [r2]
 2071 008a 9268     		ldr	r2, [r2, #8]
 2072 008c 22F04002 		bic	r2, r2, #64
 2073 0090 9A60     		str	r2, [r3, #8]
 2074              	.L108:
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2075              		.loc 1 1095 0
 2076 0092 7B68     		ldr	r3, [r7, #4]
 2077 0094 0022     		movs	r2, #0
 2078 0096 83F86820 		strb	r2, [r3, #104]
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2079              		.loc 1 1097 0
 2080 009a 0023     		movs	r3, #0
 2081              	.L106:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2082              		.loc 1 1098 0
 2083 009c 1846     		mov	r0, r3
 2084 009e 0C37     		adds	r7, r7, #12
 2085              	.LCFI77:
 2086              		.cfi_def_cfa_offset 4
 2087 00a0 BD46     		mov	sp, r7
 2088              	.LCFI78:
 2089              		.cfi_def_cfa_register 13
 2090              		@ sp needed
 2091 00a2 5DF8047B 		ldr	r7, [sp], #4
 2092              	.LCFI79:
 2093              		.cfi_restore 7
 2094              		.cfi_def_cfa_offset 0
 2095 00a6 7047     		bx	lr
 2096              		.cfi_endproc
 2097              	.LFE150:
 2099              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2100              		.align	1
 2101              		.global	HAL_UART_DMAResume
 2102              		.syntax unified
 2103              		.thumb
 2104              		.thumb_func
 2105              		.fpu fpv4-sp-d16
 2107              	HAL_UART_DMAResume:
 2108              	.LFB151:
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2109              		.loc 1 1106 0
 2110              		.cfi_startproc
 2111              		@ args = 0, pretend = 0, frame = 8
 2112              		@ frame_needed = 1, uses_anonymous_args = 0
 2113              		@ link register save eliminated.
ARM GAS  /tmp/ccmShkBJ.s 			page 57


 2114 0000 80B4     		push	{r7}
 2115              	.LCFI80:
 2116              		.cfi_def_cfa_offset 4
 2117              		.cfi_offset 7, -4
 2118 0002 83B0     		sub	sp, sp, #12
 2119              	.LCFI81:
 2120              		.cfi_def_cfa_offset 16
 2121 0004 00AF     		add	r7, sp, #0
 2122              	.LCFI82:
 2123              		.cfi_def_cfa_register 7
 2124 0006 7860     		str	r0, [r7, #4]
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2125              		.loc 1 1108 0
 2126 0008 7B68     		ldr	r3, [r7, #4]
 2127 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2128 000e 012B     		cmp	r3, #1
 2129 0010 01D1     		bne	.L110
 2130              		.loc 1 1108 0 is_stmt 0 discriminator 1
 2131 0012 0223     		movs	r3, #2
 2132 0014 43E0     		b	.L111
 2133              	.L110:
 2134              		.loc 1 1108 0 discriminator 2
 2135 0016 7B68     		ldr	r3, [r7, #4]
 2136 0018 0122     		movs	r2, #1
 2137 001a 83F86820 		strb	r2, [r3, #104]
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 2138              		.loc 1 1110 0 is_stmt 1 discriminator 2
 2139 001e 7B68     		ldr	r3, [r7, #4]
 2140 0020 93F86930 		ldrb	r3, [r3, #105]
 2141 0024 DBB2     		uxtb	r3, r3
 2142 0026 212B     		cmp	r3, #33
 2143 0028 07D1     		bne	.L112
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2144              		.loc 1 1113 0
 2145 002a 7B68     		ldr	r3, [r7, #4]
 2146 002c 1B68     		ldr	r3, [r3]
 2147 002e 7A68     		ldr	r2, [r7, #4]
 2148 0030 1268     		ldr	r2, [r2]
 2149 0032 9268     		ldr	r2, [r2, #8]
 2150 0034 42F08002 		orr	r2, r2, #128
 2151 0038 9A60     		str	r2, [r3, #8]
 2152              	.L112:
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 2153              		.loc 1 1115 0
 2154 003a 7B68     		ldr	r3, [r7, #4]
 2155 003c 93F86A30 		ldrb	r3, [r3, #106]
 2156 0040 DBB2     		uxtb	r3, r3
 2157 0042 222B     		cmp	r3, #34
 2158 0044 1BD1     		bne	.L113
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
ARM GAS  /tmp/ccmShkBJ.s 			page 58


 2159              		.loc 1 1118 0
 2160 0046 7B68     		ldr	r3, [r7, #4]
 2161 0048 1B68     		ldr	r3, [r3]
 2162 004a 0822     		movs	r2, #8
 2163 004c 1A62     		str	r2, [r3, #32]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2164              		.loc 1 1121 0
 2165 004e 7B68     		ldr	r3, [r7, #4]
 2166 0050 1B68     		ldr	r3, [r3]
 2167 0052 7A68     		ldr	r2, [r7, #4]
 2168 0054 1268     		ldr	r2, [r2]
 2169 0056 1268     		ldr	r2, [r2]
 2170 0058 42F48072 		orr	r2, r2, #256
 2171 005c 1A60     		str	r2, [r3]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2172              		.loc 1 1122 0
 2173 005e 7B68     		ldr	r3, [r7, #4]
 2174 0060 1B68     		ldr	r3, [r3]
 2175 0062 7A68     		ldr	r2, [r7, #4]
 2176 0064 1268     		ldr	r2, [r2]
 2177 0066 9268     		ldr	r2, [r2, #8]
 2178 0068 42F00102 		orr	r2, r2, #1
 2179 006c 9A60     		str	r2, [r3, #8]
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2180              		.loc 1 1125 0
 2181 006e 7B68     		ldr	r3, [r7, #4]
 2182 0070 1B68     		ldr	r3, [r3]
 2183 0072 7A68     		ldr	r2, [r7, #4]
 2184 0074 1268     		ldr	r2, [r2]
 2185 0076 9268     		ldr	r2, [r2, #8]
 2186 0078 42F04002 		orr	r2, r2, #64
 2187 007c 9A60     		str	r2, [r3, #8]
 2188              	.L113:
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0U)
 2189              		.loc 1 1129 0
 2190 007e 7B68     		ldr	r3, [r7, #4]
 2191 0080 1B68     		ldr	r3, [r3]
 2192 0082 1B68     		ldr	r3, [r3]
 2193 0084 03F00103 		and	r3, r3, #1
 2194 0088 002B     		cmp	r3, #0
 2195 008a 07D1     		bne	.L114
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable UART peripheral */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
 2196              		.loc 1 1132 0
 2197 008c 7B68     		ldr	r3, [r7, #4]
 2198 008e 1B68     		ldr	r3, [r3]
 2199 0090 7A68     		ldr	r2, [r7, #4]
 2200 0092 1268     		ldr	r2, [r2]
 2201 0094 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccmShkBJ.s 			page 59


 2202 0096 42F00102 		orr	r2, r2, #1
 2203 009a 1A60     		str	r2, [r3]
 2204              	.L114:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2205              		.loc 1 1135 0
 2206 009c 0023     		movs	r3, #0
 2207              	.L111:
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2208              		.loc 1 1136 0
 2209 009e 1846     		mov	r0, r3
 2210 00a0 0C37     		adds	r7, r7, #12
 2211              	.LCFI83:
 2212              		.cfi_def_cfa_offset 4
 2213 00a2 BD46     		mov	sp, r7
 2214              	.LCFI84:
 2215              		.cfi_def_cfa_register 13
 2216              		@ sp needed
 2217 00a4 5DF8047B 		ldr	r7, [sp], #4
 2218              	.LCFI85:
 2219              		.cfi_restore 7
 2220              		.cfi_def_cfa_offset 0
 2221 00a8 7047     		bx	lr
 2222              		.cfi_endproc
 2223              	.LFE151:
 2225              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2226              		.align	1
 2227              		.global	HAL_UART_DMAStop
 2228              		.syntax unified
 2229              		.thumb
 2230              		.thumb_func
 2231              		.fpu fpv4-sp-d16
 2233              	HAL_UART_DMAStop:
 2234              	.LFB152:
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2235              		.loc 1 1144 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 8
 2238              		@ frame_needed = 1, uses_anonymous_args = 0
 2239 0000 80B5     		push	{r7, lr}
 2240              	.LCFI86:
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 7, -8
 2243              		.cfi_offset 14, -4
 2244 0002 82B0     		sub	sp, sp, #8
 2245              	.LCFI87:
 2246              		.cfi_def_cfa_offset 16
 2247 0004 00AF     		add	r7, sp, #0
 2248              	.LCFI88:
ARM GAS  /tmp/ccmShkBJ.s 			page 60


 2249              		.cfi_def_cfa_register 7
 2250 0006 7860     		str	r0, [r7, #4]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2251              		.loc 1 1153 0
 2252 0008 7B68     		ldr	r3, [r7, #4]
 2253 000a 93F86930 		ldrb	r3, [r3, #105]
 2254 000e DBB2     		uxtb	r3, r3
 2255 0010 212B     		cmp	r3, #33
 2256 0012 1AD1     		bne	.L116
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2257              		.loc 1 1154 0 discriminator 1
 2258 0014 7B68     		ldr	r3, [r7, #4]
 2259 0016 1B68     		ldr	r3, [r3]
 2260 0018 9B68     		ldr	r3, [r3, #8]
 2261 001a 03F08003 		and	r3, r3, #128
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2262              		.loc 1 1153 0 discriminator 1
 2263 001e 002B     		cmp	r3, #0
 2264 0020 13D0     		beq	.L116
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2265              		.loc 1 1156 0
 2266 0022 7B68     		ldr	r3, [r7, #4]
 2267 0024 1B68     		ldr	r3, [r3]
 2268 0026 7A68     		ldr	r2, [r7, #4]
 2269 0028 1268     		ldr	r2, [r2]
 2270 002a 9268     		ldr	r2, [r2, #8]
 2271 002c 22F08002 		bic	r2, r2, #128
 2272 0030 9A60     		str	r2, [r3, #8]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2273              		.loc 1 1159 0
 2274 0032 7B68     		ldr	r3, [r7, #4]
 2275 0034 1B6E     		ldr	r3, [r3, #96]
 2276 0036 002B     		cmp	r3, #0
 2277 0038 04D0     		beq	.L117
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2278              		.loc 1 1161 0
 2279 003a 7B68     		ldr	r3, [r7, #4]
 2280 003c 1B6E     		ldr	r3, [r3, #96]
 2281 003e 1846     		mov	r0, r3
 2282 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 2283              	.L117:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2284              		.loc 1 1164 0
ARM GAS  /tmp/ccmShkBJ.s 			page 61


 2285 0044 7868     		ldr	r0, [r7, #4]
 2286 0046 FFF7FEFF 		bl	UART_EndTxTransfer
 2287              	.L116:
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2288              		.loc 1 1168 0
 2289 004a 7B68     		ldr	r3, [r7, #4]
 2290 004c 93F86A30 		ldrb	r3, [r3, #106]
 2291 0050 DBB2     		uxtb	r3, r3
 2292 0052 222B     		cmp	r3, #34
 2293 0054 1AD1     		bne	.L118
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2294              		.loc 1 1169 0 discriminator 1
 2295 0056 7B68     		ldr	r3, [r7, #4]
 2296 0058 1B68     		ldr	r3, [r3]
 2297 005a 9B68     		ldr	r3, [r3, #8]
 2298 005c 03F04003 		and	r3, r3, #64
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2299              		.loc 1 1168 0 discriminator 1
 2300 0060 002B     		cmp	r3, #0
 2301 0062 13D0     		beq	.L118
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2302              		.loc 1 1171 0
 2303 0064 7B68     		ldr	r3, [r7, #4]
 2304 0066 1B68     		ldr	r3, [r3]
 2305 0068 7A68     		ldr	r2, [r7, #4]
 2306 006a 1268     		ldr	r2, [r2]
 2307 006c 9268     		ldr	r2, [r2, #8]
 2308 006e 22F04002 		bic	r2, r2, #64
 2309 0072 9A60     		str	r2, [r3, #8]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2310              		.loc 1 1174 0
 2311 0074 7B68     		ldr	r3, [r7, #4]
 2312 0076 5B6E     		ldr	r3, [r3, #100]
 2313 0078 002B     		cmp	r3, #0
 2314 007a 04D0     		beq	.L119
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2315              		.loc 1 1176 0
 2316 007c 7B68     		ldr	r3, [r7, #4]
 2317 007e 5B6E     		ldr	r3, [r3, #100]
 2318 0080 1846     		mov	r0, r3
 2319 0082 FFF7FEFF 		bl	HAL_DMA_Abort
 2320              	.L119:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2321              		.loc 1 1179 0
 2322 0086 7868     		ldr	r0, [r7, #4]
 2323 0088 FFF7FEFF 		bl	UART_EndRxTransfer
 2324              	.L118:
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  /tmp/ccmShkBJ.s 			page 62


1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2325              		.loc 1 1182 0
 2326 008c 0023     		movs	r3, #0
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2327              		.loc 1 1183 0
 2328 008e 1846     		mov	r0, r3
 2329 0090 0837     		adds	r7, r7, #8
 2330              	.LCFI89:
 2331              		.cfi_def_cfa_offset 8
 2332 0092 BD46     		mov	sp, r7
 2333              	.LCFI90:
 2334              		.cfi_def_cfa_register 13
 2335              		@ sp needed
 2336 0094 80BD     		pop	{r7, pc}
 2337              		.cfi_endproc
 2338              	.LFE152:
 2340              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2341              		.align	1
 2342              		.global	HAL_UART_IRQHandler
 2343              		.syntax unified
 2344              		.thumb
 2345              		.thumb_func
 2346              		.fpu fpv4-sp-d16
 2348              	HAL_UART_IRQHandler:
 2349              	.LFB153:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2350              		.loc 1 1191 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 24
 2353              		@ frame_needed = 1, uses_anonymous_args = 0
 2354 0000 80B5     		push	{r7, lr}
 2355              	.LCFI91:
 2356              		.cfi_def_cfa_offset 8
 2357              		.cfi_offset 7, -8
 2358              		.cfi_offset 14, -4
 2359 0002 86B0     		sub	sp, sp, #24
 2360              	.LCFI92:
 2361              		.cfi_def_cfa_offset 32
 2362 0004 00AF     		add	r7, sp, #0
 2363              	.LCFI93:
 2364              		.cfi_def_cfa_register 7
 2365 0006 7860     		str	r0, [r7, #4]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2366              		.loc 1 1192 0
 2367 0008 7B68     		ldr	r3, [r7, #4]
 2368 000a 1B68     		ldr	r3, [r3]
 2369 000c DB69     		ldr	r3, [r3, #28]
 2370 000e 7B61     		str	r3, [r7, #20]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
ARM GAS  /tmp/ccmShkBJ.s 			page 63


 2371              		.loc 1 1193 0
 2372 0010 7B68     		ldr	r3, [r7, #4]
 2373 0012 1B68     		ldr	r3, [r3]
 2374 0014 1B68     		ldr	r3, [r3]
 2375 0016 3B61     		str	r3, [r7, #16]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2376              		.loc 1 1194 0
 2377 0018 7B68     		ldr	r3, [r7, #4]
 2378 001a 1B68     		ldr	r3, [r3]
 2379 001c 9B68     		ldr	r3, [r3, #8]
 2380 001e FB60     		str	r3, [r7, #12]
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 2381              		.loc 1 1198 0
 2382 0020 7B69     		ldr	r3, [r7, #20]
 2383 0022 03F00F03 		and	r3, r3, #15
 2384 0026 BB60     		str	r3, [r7, #8]
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == RESET)
 2385              		.loc 1 1199 0
 2386 0028 BB68     		ldr	r3, [r7, #8]
 2387 002a 002B     		cmp	r3, #0
 2388 002c 0DD1     		bne	.L122
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2389              		.loc 1 1202 0
 2390 002e 7B69     		ldr	r3, [r7, #20]
 2391 0030 03F02003 		and	r3, r3, #32
 2392 0034 002B     		cmp	r3, #0
 2393 0036 08D0     		beq	.L122
 2394              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2395 0038 3B69     		ldr	r3, [r7, #16]
 2396 003a 03F02003 		and	r3, r3, #32
 2397 003e 002B     		cmp	r3, #0
 2398 0040 03D0     		beq	.L122
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       UART_Receive_IT(huart);
 2399              		.loc 1 1204 0 is_stmt 1
 2400 0042 7868     		ldr	r0, [r7, #4]
 2401 0044 FFF7FEFF 		bl	UART_Receive_IT
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 2402              		.loc 1 1205 0
 2403 0048 DAE0     		b	.L121
 2404              	.L122:
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(   (errorflags != RESET)
 2405              		.loc 1 1210 0
 2406 004a BB68     		ldr	r3, [r7, #8]
 2407 004c 002B     		cmp	r3, #0
 2408 004e 00F0B980 		beq	.L124
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 2409              		.loc 1 1211 0
ARM GAS  /tmp/ccmShkBJ.s 			page 64


 2410 0052 FB68     		ldr	r3, [r7, #12]
 2411 0054 03F00103 		and	r3, r3, #1
 2412 0058 002B     		cmp	r3, #0
 2413 005a 05D1     		bne	.L125
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 2414              		.loc 1 1212 0
 2415 005c 3B69     		ldr	r3, [r7, #16]
 2416 005e 03F49073 		and	r3, r3, #288
 2417 0062 002B     		cmp	r3, #0
 2418 0064 00F0AE80 		beq	.L124
 2419              	.L125:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 2420              		.loc 1 1216 0
 2421 0068 7B69     		ldr	r3, [r7, #20]
 2422 006a 03F00103 		and	r3, r3, #1
 2423 006e 002B     		cmp	r3, #0
 2424 0070 0ED0     		beq	.L126
 2425              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2426 0072 3B69     		ldr	r3, [r7, #16]
 2427 0074 03F48073 		and	r3, r3, #256
 2428 0078 002B     		cmp	r3, #0
 2429 007a 09D0     		beq	.L126
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 2430              		.loc 1 1218 0 is_stmt 1
 2431 007c 7B68     		ldr	r3, [r7, #4]
 2432 007e 1B68     		ldr	r3, [r3]
 2433 0080 0122     		movs	r2, #1
 2434 0082 1A62     		str	r2, [r3, #32]
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 2435              		.loc 1 1220 0
 2436 0084 7B68     		ldr	r3, [r7, #4]
 2437 0086 DB6E     		ldr	r3, [r3, #108]
 2438 0088 43F00102 		orr	r2, r3, #1
 2439 008c 7B68     		ldr	r3, [r7, #4]
 2440 008e DA66     		str	r2, [r3, #108]
 2441              	.L126:
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2442              		.loc 1 1224 0
 2443 0090 7B69     		ldr	r3, [r7, #20]
 2444 0092 03F00203 		and	r3, r3, #2
 2445 0096 002B     		cmp	r3, #0
 2446 0098 0ED0     		beq	.L127
 2447              		.loc 1 1224 0 is_stmt 0 discriminator 1
 2448 009a FB68     		ldr	r3, [r7, #12]
 2449 009c 03F00103 		and	r3, r3, #1
 2450 00a0 002B     		cmp	r3, #0
 2451 00a2 09D0     		beq	.L127
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
ARM GAS  /tmp/ccmShkBJ.s 			page 65


 2452              		.loc 1 1226 0 is_stmt 1
 2453 00a4 7B68     		ldr	r3, [r7, #4]
 2454 00a6 1B68     		ldr	r3, [r3]
 2455 00a8 0222     		movs	r2, #2
 2456 00aa 1A62     		str	r2, [r3, #32]
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 2457              		.loc 1 1228 0
 2458 00ac 7B68     		ldr	r3, [r7, #4]
 2459 00ae DB6E     		ldr	r3, [r3, #108]
 2460 00b0 43F00402 		orr	r2, r3, #4
 2461 00b4 7B68     		ldr	r3, [r7, #4]
 2462 00b6 DA66     		str	r2, [r3, #108]
 2463              	.L127:
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2464              		.loc 1 1232 0
 2465 00b8 7B69     		ldr	r3, [r7, #20]
 2466 00ba 03F00403 		and	r3, r3, #4
 2467 00be 002B     		cmp	r3, #0
 2468 00c0 0ED0     		beq	.L128
 2469              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2470 00c2 FB68     		ldr	r3, [r7, #12]
 2471 00c4 03F00103 		and	r3, r3, #1
 2472 00c8 002B     		cmp	r3, #0
 2473 00ca 09D0     		beq	.L128
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 2474              		.loc 1 1234 0 is_stmt 1
 2475 00cc 7B68     		ldr	r3, [r7, #4]
 2476 00ce 1B68     		ldr	r3, [r3]
 2477 00d0 0422     		movs	r2, #4
 2478 00d2 1A62     		str	r2, [r3, #32]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 2479              		.loc 1 1236 0
 2480 00d4 7B68     		ldr	r3, [r7, #4]
 2481 00d6 DB6E     		ldr	r3, [r3, #108]
 2482 00d8 43F00202 		orr	r2, r3, #2
 2483 00dc 7B68     		ldr	r3, [r7, #4]
 2484 00de DA66     		str	r2, [r3, #108]
 2485              	.L128:
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
 2486              		.loc 1 1240 0
 2487 00e0 7B69     		ldr	r3, [r7, #20]
 2488 00e2 03F00803 		and	r3, r3, #8
 2489 00e6 002B     		cmp	r3, #0
 2490 00e8 13D0     		beq	.L129
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2491              		.loc 1 1241 0 discriminator 1
 2492 00ea 3B69     		ldr	r3, [r7, #16]
 2493 00ec 03F02003 		and	r3, r3, #32
ARM GAS  /tmp/ccmShkBJ.s 			page 66


1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2494              		.loc 1 1240 0 discriminator 1
 2495 00f0 002B     		cmp	r3, #0
 2496 00f2 04D1     		bne	.L130
 2497              		.loc 1 1241 0
 2498 00f4 FB68     		ldr	r3, [r7, #12]
 2499 00f6 03F00103 		and	r3, r3, #1
 2500 00fa 002B     		cmp	r3, #0
 2501 00fc 09D0     		beq	.L129
 2502              	.L130:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 2503              		.loc 1 1243 0
 2504 00fe 7B68     		ldr	r3, [r7, #4]
 2505 0100 1B68     		ldr	r3, [r3]
 2506 0102 0822     		movs	r2, #8
 2507 0104 1A62     		str	r2, [r3, #32]
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 2508              		.loc 1 1245 0
 2509 0106 7B68     		ldr	r3, [r7, #4]
 2510 0108 DB6E     		ldr	r3, [r3, #108]
 2511 010a 43F00802 		orr	r2, r3, #8
 2512 010e 7B68     		ldr	r3, [r7, #4]
 2513 0110 DA66     		str	r2, [r3, #108]
 2514              	.L129:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2515              		.loc 1 1249 0
 2516 0112 7B68     		ldr	r3, [r7, #4]
 2517 0114 DB6E     		ldr	r3, [r3, #108]
 2518 0116 002B     		cmp	r3, #0
 2519 0118 71D0     		beq	.L141
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2520              		.loc 1 1252 0
 2521 011a 7B69     		ldr	r3, [r7, #20]
 2522 011c 03F02003 		and	r3, r3, #32
 2523 0120 002B     		cmp	r3, #0
 2524 0122 07D0     		beq	.L132
 2525              		.loc 1 1252 0 is_stmt 0 discriminator 1
 2526 0124 3B69     		ldr	r3, [r7, #16]
 2527 0126 03F02003 		and	r3, r3, #32
 2528 012a 002B     		cmp	r3, #0
 2529 012c 02D0     		beq	.L132
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_Receive_IT(huart);
 2530              		.loc 1 1254 0 is_stmt 1
 2531 012e 7868     		ldr	r0, [r7, #4]
 2532 0130 FFF7FEFF 		bl	UART_Receive_IT
 2533              	.L132:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
ARM GAS  /tmp/ccmShkBJ.s 			page 67


1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          consider error as blocking */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
 2534              		.loc 1 1259 0
 2535 0134 7B68     		ldr	r3, [r7, #4]
 2536 0136 DB6E     		ldr	r3, [r3, #108]
 2537 0138 03F00803 		and	r3, r3, #8
 2538 013c 002B     		cmp	r3, #0
 2539 013e 06D1     		bne	.L133
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2540              		.loc 1 1260 0 discriminator 1
 2541 0140 7B68     		ldr	r3, [r7, #4]
 2542 0142 1B68     		ldr	r3, [r3]
 2543 0144 9B68     		ldr	r3, [r3, #8]
 2544 0146 03F04003 		and	r3, r3, #64
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2545              		.loc 1 1259 0 discriminator 1
 2546 014a 002B     		cmp	r3, #0
 2547 014c 31D0     		beq	.L134
 2548              	.L133:
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 2549              		.loc 1 1265 0
 2550 014e 7868     		ldr	r0, [r7, #4]
 2551 0150 FFF7FEFF 		bl	UART_EndRxTransfer
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2552              		.loc 1 1268 0
 2553 0154 7B68     		ldr	r3, [r7, #4]
 2554 0156 1B68     		ldr	r3, [r3]
 2555 0158 9B68     		ldr	r3, [r3, #8]
 2556 015a 03F04003 		and	r3, r3, #64
 2557 015e 002B     		cmp	r3, #0
 2558 0160 23D0     		beq	.L135
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2559              		.loc 1 1270 0
 2560 0162 7B68     		ldr	r3, [r7, #4]
 2561 0164 1B68     		ldr	r3, [r3]
 2562 0166 7A68     		ldr	r2, [r7, #4]
 2563 0168 1268     		ldr	r2, [r2]
 2564 016a 9268     		ldr	r2, [r2, #8]
 2565 016c 22F04002 		bic	r2, r2, #64
 2566 0170 9A60     		str	r2, [r3, #8]
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 2567              		.loc 1 1273 0
 2568 0172 7B68     		ldr	r3, [r7, #4]
 2569 0174 5B6E     		ldr	r3, [r3, #100]
 2570 0176 002B     		cmp	r3, #0
 2571 0178 13D0     		beq	.L136
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
ARM GAS  /tmp/ccmShkBJ.s 			page 68


1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 2572              		.loc 1 1277 0
 2573 017a 7B68     		ldr	r3, [r7, #4]
 2574 017c 5B6E     		ldr	r3, [r3, #100]
 2575 017e 224A     		ldr	r2, .L143
 2576 0180 1A65     		str	r2, [r3, #80]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2577              		.loc 1 1280 0
 2578 0182 7B68     		ldr	r3, [r7, #4]
 2579 0184 5B6E     		ldr	r3, [r3, #100]
 2580 0186 1846     		mov	r0, r3
 2581 0188 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2582 018c 0346     		mov	r3, r0
 2583 018e 002B     		cmp	r3, #0
 2584 0190 16D0     		beq	.L142
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2585              		.loc 1 1283 0
 2586 0192 7B68     		ldr	r3, [r7, #4]
 2587 0194 5B6E     		ldr	r3, [r3, #100]
 2588 0196 1B6D     		ldr	r3, [r3, #80]
 2589 0198 7A68     		ldr	r2, [r7, #4]
 2590 019a 526E     		ldr	r2, [r2, #100]
 2591 019c 1046     		mov	r0, r2
 2592 019e 9847     		blx	r3
 2593              	.LVL0:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2594              		.loc 1 1268 0
 2595 01a0 0EE0     		b	.L142
 2596              	.L136:
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 2597              		.loc 1 1289 0
 2598 01a2 7868     		ldr	r0, [r7, #4]
 2599 01a4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2600              		.loc 1 1268 0
 2601 01a8 0AE0     		b	.L142
 2602              	.L135:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 2603              		.loc 1 1295 0
 2604 01aa 7868     		ldr	r0, [r7, #4]
 2605 01ac FFF7FEFF 		bl	HAL_UART_ErrorCallback
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
ARM GAS  /tmp/ccmShkBJ.s 			page 69


 2606              		.loc 1 1268 0
 2607 01b0 06E0     		b	.L142
 2608              	.L134:
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 2609              		.loc 1 1302 0
 2610 01b2 7868     		ldr	r0, [r7, #4]
 2611 01b4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2612              		.loc 1 1303 0
 2613 01b8 7B68     		ldr	r3, [r7, #4]
 2614 01ba 0022     		movs	r2, #0
 2615 01bc DA66     		str	r2, [r3, #108]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2616              		.loc 1 1306 0
 2617 01be 1EE0     		b	.L141
 2618              	.L142:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2619              		.loc 1 1268 0
 2620 01c0 00BF     		nop
 2621              		.loc 1 1306 0
 2622 01c2 1CE0     		b	.L141
 2623              	.L124:
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 2624              		.loc 1 1311 0
 2625 01c4 7B69     		ldr	r3, [r7, #20]
 2626 01c6 03F08003 		and	r3, r3, #128
 2627 01ca 002B     		cmp	r3, #0
 2628 01cc 08D0     		beq	.L140
 2629              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2630 01ce 3B69     		ldr	r3, [r7, #16]
 2631 01d0 03F08003 		and	r3, r3, #128
 2632 01d4 002B     		cmp	r3, #0
 2633 01d6 03D0     		beq	.L140
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2634              		.loc 1 1313 0 is_stmt 1
 2635 01d8 7868     		ldr	r0, [r7, #4]
 2636 01da FFF7FEFF 		bl	UART_Transmit_IT
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2637              		.loc 1 1314 0
 2638 01de 0FE0     		b	.L121
 2639              	.L140:
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
ARM GAS  /tmp/ccmShkBJ.s 			page 70


1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 2640              		.loc 1 1318 0
 2641 01e0 7B69     		ldr	r3, [r7, #20]
 2642 01e2 03F04003 		and	r3, r3, #64
 2643 01e6 002B     		cmp	r3, #0
 2644 01e8 0AD0     		beq	.L121
 2645              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2646 01ea 3B69     		ldr	r3, [r7, #16]
 2647 01ec 03F04003 		and	r3, r3, #64
 2648 01f0 002B     		cmp	r3, #0
 2649 01f2 05D0     		beq	.L121
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2650              		.loc 1 1320 0 is_stmt 1
 2651 01f4 7868     		ldr	r0, [r7, #4]
 2652 01f6 FFF7FEFF 		bl	UART_EndTransmit_IT
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2653              		.loc 1 1321 0
 2654 01fa 00BF     		nop
 2655 01fc 00E0     		b	.L121
 2656              	.L141:
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2657              		.loc 1 1306 0
 2658 01fe 00BF     		nop
 2659              	.L121:
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2660              		.loc 1 1324 0
 2661 0200 1837     		adds	r7, r7, #24
 2662              	.LCFI94:
 2663              		.cfi_def_cfa_offset 8
 2664 0202 BD46     		mov	sp, r7
 2665              	.LCFI95:
 2666              		.cfi_def_cfa_register 13
 2667              		@ sp needed
 2668 0204 80BD     		pop	{r7, pc}
 2669              	.L144:
 2670 0206 00BF     		.align	2
 2671              	.L143:
 2672 0208 00000000 		.word	UART_DMAAbortOnError
 2673              		.cfi_endproc
 2674              	.LFE153:
 2676              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2677              		.align	1
 2678              		.global	UART_WaitOnFlagUntilTimeout
 2679              		.syntax unified
 2680              		.thumb
 2681              		.thumb_func
 2682              		.fpu fpv4-sp-d16
 2684              	UART_WaitOnFlagUntilTimeout:
 2685              	.LFB154:
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
ARM GAS  /tmp/ccmShkBJ.s 			page 71


1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Tickstart Tick start value
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Timeout Timeout duration
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2686              		.loc 1 1336 0
 2687              		.cfi_startproc
 2688              		@ args = 4, pretend = 0, frame = 16
 2689              		@ frame_needed = 1, uses_anonymous_args = 0
 2690 0000 80B5     		push	{r7, lr}
 2691              	.LCFI96:
 2692              		.cfi_def_cfa_offset 8
 2693              		.cfi_offset 7, -8
 2694              		.cfi_offset 14, -4
 2695 0002 84B0     		sub	sp, sp, #16
 2696              	.LCFI97:
 2697              		.cfi_def_cfa_offset 24
 2698 0004 00AF     		add	r7, sp, #0
 2699              	.LCFI98:
 2700              		.cfi_def_cfa_register 7
 2701 0006 F860     		str	r0, [r7, #12]
 2702 0008 B960     		str	r1, [r7, #8]
 2703 000a 3B60     		str	r3, [r7]
 2704 000c 1346     		mov	r3, r2
 2705 000e FB71     		strb	r3, [r7, #7]
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 2706              		.loc 1 1338 0
 2707 0010 2CE0     		b	.L146
 2708              	.L149:
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 2709              		.loc 1 1341 0
 2710 0012 BB69     		ldr	r3, [r7, #24]
 2711 0014 B3F1FF3F 		cmp	r3, #-1
 2712 0018 28D0     		beq	.L146
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 2713              		.loc 1 1343 0
 2714 001a BB69     		ldr	r3, [r7, #24]
 2715 001c 002B     		cmp	r3, #0
 2716 001e 07D0     		beq	.L147
 2717              		.loc 1 1343 0 is_stmt 0 discriminator 1
 2718 0020 FFF7FEFF 		bl	HAL_GetTick
 2719 0024 0246     		mov	r2, r0
 2720 0026 3B68     		ldr	r3, [r7]
 2721 0028 D21A     		subs	r2, r2, r3
 2722 002a BB69     		ldr	r3, [r7, #24]
 2723 002c 9A42     		cmp	r2, r3
 2724 002e 1DD3     		bcc	.L146
 2725              	.L147:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
ARM GAS  /tmp/ccmShkBJ.s 			page 72


 2726              		.loc 1 1346 0 is_stmt 1
 2727 0030 FB68     		ldr	r3, [r7, #12]
 2728 0032 1B68     		ldr	r3, [r3]
 2729 0034 FA68     		ldr	r2, [r7, #12]
 2730 0036 1268     		ldr	r2, [r2]
 2731 0038 1268     		ldr	r2, [r2]
 2732 003a 22F4D072 		bic	r2, r2, #416
 2733 003e 1A60     		str	r2, [r3]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2734              		.loc 1 1347 0
 2735 0040 FB68     		ldr	r3, [r7, #12]
 2736 0042 1B68     		ldr	r3, [r3]
 2737 0044 FA68     		ldr	r2, [r7, #12]
 2738 0046 1268     		ldr	r2, [r2]
 2739 0048 9268     		ldr	r2, [r2, #8]
 2740 004a 22F00102 		bic	r2, r2, #1
 2741 004e 9A60     		str	r2, [r3, #8]
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2742              		.loc 1 1349 0
 2743 0050 FB68     		ldr	r3, [r7, #12]
 2744 0052 2022     		movs	r2, #32
 2745 0054 83F86920 		strb	r2, [r3, #105]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2746              		.loc 1 1350 0
 2747 0058 FB68     		ldr	r3, [r7, #12]
 2748 005a 2022     		movs	r2, #32
 2749 005c 83F86A20 		strb	r2, [r3, #106]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Process Unlocked */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 2750              		.loc 1 1353 0
 2751 0060 FB68     		ldr	r3, [r7, #12]
 2752 0062 0022     		movs	r2, #0
 2753 0064 83F86820 		strb	r2, [r3, #104]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 2754              		.loc 1 1354 0
 2755 0068 0323     		movs	r3, #3
 2756 006a 0FE0     		b	.L148
 2757              	.L146:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2758              		.loc 1 1338 0
 2759 006c FB68     		ldr	r3, [r7, #12]
 2760 006e 1B68     		ldr	r3, [r3]
 2761 0070 DA69     		ldr	r2, [r3, #28]
 2762 0072 BB68     		ldr	r3, [r7, #8]
 2763 0074 1A40     		ands	r2, r2, r3
 2764 0076 BB68     		ldr	r3, [r7, #8]
 2765 0078 9A42     		cmp	r2, r3
 2766 007a 0CBF     		ite	eq
 2767 007c 0123     		moveq	r3, #1
 2768 007e 0023     		movne	r3, #0
 2769 0080 DBB2     		uxtb	r3, r3
 2770 0082 1A46     		mov	r2, r3
 2771 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2772 0086 9A42     		cmp	r2, r3
 2773 0088 C3D0     		beq	.L149
ARM GAS  /tmp/ccmShkBJ.s 			page 73


1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2774              		.loc 1 1358 0
 2775 008a 0023     		movs	r3, #0
 2776              	.L148:
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2777              		.loc 1 1359 0
 2778 008c 1846     		mov	r0, r3
 2779 008e 1037     		adds	r7, r7, #16
 2780              	.LCFI99:
 2781              		.cfi_def_cfa_offset 8
 2782 0090 BD46     		mov	sp, r7
 2783              	.LCFI100:
 2784              		.cfi_def_cfa_register 13
 2785              		@ sp needed
 2786 0092 80BD     		pop	{r7, pc}
 2787              		.cfi_endproc
 2788              	.LFE154:
 2790              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2791              		.align	1
 2792              		.syntax unified
 2793              		.thumb
 2794              		.thumb_func
 2795              		.fpu fpv4-sp-d16
 2797              	UART_DMATransmitCplt:
 2798              	.LFB155:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2799              		.loc 1 1367 0
 2800              		.cfi_startproc
 2801              		@ args = 0, pretend = 0, frame = 16
 2802              		@ frame_needed = 1, uses_anonymous_args = 0
 2803 0000 80B5     		push	{r7, lr}
 2804              	.LCFI101:
 2805              		.cfi_def_cfa_offset 8
 2806              		.cfi_offset 7, -8
 2807              		.cfi_offset 14, -4
 2808 0002 84B0     		sub	sp, sp, #16
 2809              	.LCFI102:
 2810              		.cfi_def_cfa_offset 24
 2811 0004 00AF     		add	r7, sp, #0
 2812              	.LCFI103:
 2813              		.cfi_def_cfa_register 7
 2814 0006 7860     		str	r0, [r7, #4]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2815              		.loc 1 1368 0
 2816 0008 7B68     		ldr	r3, [r7, #4]
 2817 000a 9B6B     		ldr	r3, [r3, #56]
 2818 000c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccmShkBJ.s 			page 74


1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode*/
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 2819              		.loc 1 1371 0
 2820 000e 7B68     		ldr	r3, [r7, #4]
 2821 0010 1B68     		ldr	r3, [r3]
 2822 0012 1B68     		ldr	r3, [r3]
 2823 0014 03F48073 		and	r3, r3, #256
 2824 0018 002B     		cmp	r3, #0
 2825 001a 14D1     		bne	.L151
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 2826              		.loc 1 1373 0
 2827 001c FB68     		ldr	r3, [r7, #12]
 2828 001e 0022     		movs	r2, #0
 2829 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2830              		.loc 1 1377 0
 2831 0024 FB68     		ldr	r3, [r7, #12]
 2832 0026 1B68     		ldr	r3, [r3]
 2833 0028 FA68     		ldr	r2, [r7, #12]
 2834 002a 1268     		ldr	r2, [r2]
 2835 002c 9268     		ldr	r2, [r2, #8]
 2836 002e 22F08002 		bic	r2, r2, #128
 2837 0032 9A60     		str	r2, [r3, #8]
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 2838              		.loc 1 1380 0
 2839 0034 FB68     		ldr	r3, [r7, #12]
 2840 0036 1B68     		ldr	r3, [r3]
 2841 0038 FA68     		ldr	r2, [r7, #12]
 2842 003a 1268     		ldr	r2, [r2]
 2843 003c 1268     		ldr	r2, [r2]
 2844 003e 42F04002 		orr	r2, r2, #64
 2845 0042 1A60     		str	r2, [r3]
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2846              		.loc 1 1387 0
 2847 0044 02E0     		b	.L153
 2848              	.L151:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2849              		.loc 1 1385 0
 2850 0046 F868     		ldr	r0, [r7, #12]
 2851 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2852              	.L153:
 2853              		.loc 1 1387 0
 2854 004c 00BF     		nop
 2855 004e 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccmShkBJ.s 			page 75


 2856              	.LCFI104:
 2857              		.cfi_def_cfa_offset 8
 2858 0050 BD46     		mov	sp, r7
 2859              	.LCFI105:
 2860              		.cfi_def_cfa_register 13
 2861              		@ sp needed
 2862 0052 80BD     		pop	{r7, pc}
 2863              		.cfi_endproc
 2864              	.LFE155:
 2866              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2867              		.align	1
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu fpv4-sp-d16
 2873              	UART_DMATxHalfCplt:
 2874              	.LFB156:
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2875              		.loc 1 1395 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 16
 2878              		@ frame_needed = 1, uses_anonymous_args = 0
 2879 0000 80B5     		push	{r7, lr}
 2880              	.LCFI106:
 2881              		.cfi_def_cfa_offset 8
 2882              		.cfi_offset 7, -8
 2883              		.cfi_offset 14, -4
 2884 0002 84B0     		sub	sp, sp, #16
 2885              	.LCFI107:
 2886              		.cfi_def_cfa_offset 24
 2887 0004 00AF     		add	r7, sp, #0
 2888              	.LCFI108:
 2889              		.cfi_def_cfa_register 7
 2890 0006 7860     		str	r0, [r7, #4]
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2891              		.loc 1 1396 0
 2892 0008 7B68     		ldr	r3, [r7, #4]
 2893 000a 9B6B     		ldr	r3, [r3, #56]
 2894 000c FB60     		str	r3, [r7, #12]
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 2895              		.loc 1 1398 0
 2896 000e F868     		ldr	r0, [r7, #12]
 2897 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2898              		.loc 1 1399 0
 2899 0014 00BF     		nop
 2900 0016 1037     		adds	r7, r7, #16
 2901              	.LCFI109:
 2902              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccmShkBJ.s 			page 76


 2903 0018 BD46     		mov	sp, r7
 2904              	.LCFI110:
 2905              		.cfi_def_cfa_register 13
 2906              		@ sp needed
 2907 001a 80BD     		pop	{r7, pc}
 2908              		.cfi_endproc
 2909              	.LFE156:
 2911              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2912              		.align	1
 2913              		.syntax unified
 2914              		.thumb
 2915              		.thumb_func
 2916              		.fpu fpv4-sp-d16
 2918              	UART_DMAReceiveCplt:
 2919              	.LFB157:
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2920              		.loc 1 1407 0
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 16
 2923              		@ frame_needed = 1, uses_anonymous_args = 0
 2924 0000 80B5     		push	{r7, lr}
 2925              	.LCFI111:
 2926              		.cfi_def_cfa_offset 8
 2927              		.cfi_offset 7, -8
 2928              		.cfi_offset 14, -4
 2929 0002 84B0     		sub	sp, sp, #16
 2930              	.LCFI112:
 2931              		.cfi_def_cfa_offset 24
 2932 0004 00AF     		add	r7, sp, #0
 2933              	.LCFI113:
 2934              		.cfi_def_cfa_register 7
 2935 0006 7860     		str	r0, [r7, #4]
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2936              		.loc 1 1408 0
 2937 0008 7B68     		ldr	r3, [r7, #4]
 2938 000a 9B6B     		ldr	r3, [r3, #56]
 2939 000c FB60     		str	r3, [r7, #12]
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 2940              		.loc 1 1411 0
 2941 000e 7B68     		ldr	r3, [r7, #4]
 2942 0010 1B68     		ldr	r3, [r3]
 2943 0012 1B68     		ldr	r3, [r3]
 2944 0014 03F48073 		and	r3, r3, #256
 2945 0018 002B     		cmp	r3, #0
 2946 001a 1FD1     		bne	.L156
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2947              		.loc 1 1413 0
ARM GAS  /tmp/ccmShkBJ.s 			page 77


 2948 001c FB68     		ldr	r3, [r7, #12]
 2949 001e 0022     		movs	r2, #0
 2950 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2951              		.loc 1 1416 0
 2952 0024 FB68     		ldr	r3, [r7, #12]
 2953 0026 1B68     		ldr	r3, [r3]
 2954 0028 FA68     		ldr	r2, [r7, #12]
 2955 002a 1268     		ldr	r2, [r2]
 2956 002c 1268     		ldr	r2, [r2]
 2957 002e 22F48072 		bic	r2, r2, #256
 2958 0032 1A60     		str	r2, [r3]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2959              		.loc 1 1417 0
 2960 0034 FB68     		ldr	r3, [r7, #12]
 2961 0036 1B68     		ldr	r3, [r3]
 2962 0038 FA68     		ldr	r2, [r7, #12]
 2963 003a 1268     		ldr	r2, [r2]
 2964 003c 9268     		ldr	r2, [r2, #8]
 2965 003e 22F00102 		bic	r2, r2, #1
 2966 0042 9A60     		str	r2, [r3, #8]
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2967              		.loc 1 1421 0
 2968 0044 FB68     		ldr	r3, [r7, #12]
 2969 0046 1B68     		ldr	r3, [r3]
 2970 0048 FA68     		ldr	r2, [r7, #12]
 2971 004a 1268     		ldr	r2, [r2]
 2972 004c 9268     		ldr	r2, [r2, #8]
 2973 004e 22F04002 		bic	r2, r2, #64
 2974 0052 9A60     		str	r2, [r3, #8]
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	/* At end of Rx process, restore huart->RxState to Ready */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2975              		.loc 1 1424 0
 2976 0054 FB68     		ldr	r3, [r7, #12]
 2977 0056 2022     		movs	r2, #32
 2978 0058 83F86A20 		strb	r2, [r3, #106]
 2979              	.L156:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 2980              		.loc 1 1426 0
 2981 005c F868     		ldr	r0, [r7, #12]
 2982 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2983              		.loc 1 1427 0
 2984 0062 00BF     		nop
 2985 0064 1037     		adds	r7, r7, #16
 2986              	.LCFI114:
 2987              		.cfi_def_cfa_offset 8
 2988 0066 BD46     		mov	sp, r7
 2989              	.LCFI115:
 2990              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccmShkBJ.s 			page 78


 2991              		@ sp needed
 2992 0068 80BD     		pop	{r7, pc}
 2993              		.cfi_endproc
 2994              	.LFE157:
 2996              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2997              		.align	1
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	UART_DMARxHalfCplt:
 3004              	.LFB158:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3005              		.loc 1 1435 0
 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 16
 3008              		@ frame_needed = 1, uses_anonymous_args = 0
 3009 0000 80B5     		push	{r7, lr}
 3010              	.LCFI116:
 3011              		.cfi_def_cfa_offset 8
 3012              		.cfi_offset 7, -8
 3013              		.cfi_offset 14, -4
 3014 0002 84B0     		sub	sp, sp, #16
 3015              	.LCFI117:
 3016              		.cfi_def_cfa_offset 24
 3017 0004 00AF     		add	r7, sp, #0
 3018              	.LCFI118:
 3019              		.cfi_def_cfa_register 7
 3020 0006 7860     		str	r0, [r7, #4]
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3021              		.loc 1 1436 0
 3022 0008 7B68     		ldr	r3, [r7, #4]
 3023 000a 9B6B     		ldr	r3, [r3, #56]
 3024 000c FB60     		str	r3, [r7, #12]
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 3025              		.loc 1 1438 0
 3026 000e F868     		ldr	r0, [r7, #12]
 3027 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3028              		.loc 1 1439 0
 3029 0014 00BF     		nop
 3030 0016 1037     		adds	r7, r7, #16
 3031              	.LCFI119:
 3032              		.cfi_def_cfa_offset 8
 3033 0018 BD46     		mov	sp, r7
 3034              	.LCFI120:
 3035              		.cfi_def_cfa_register 13
 3036              		@ sp needed
 3037 001a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccmShkBJ.s 			page 79


 3038              		.cfi_endproc
 3039              	.LFE158:
 3041              		.section	.text.UART_DMAError,"ax",%progbits
 3042              		.align	1
 3043              		.syntax unified
 3044              		.thumb
 3045              		.thumb_func
 3046              		.fpu fpv4-sp-d16
 3048              	UART_DMAError:
 3049              	.LFB159:
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3050              		.loc 1 1447 0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 16
 3053              		@ frame_needed = 1, uses_anonymous_args = 0
 3054 0000 80B5     		push	{r7, lr}
 3055              	.LCFI121:
 3056              		.cfi_def_cfa_offset 8
 3057              		.cfi_offset 7, -8
 3058              		.cfi_offset 14, -4
 3059 0002 84B0     		sub	sp, sp, #16
 3060              	.LCFI122:
 3061              		.cfi_def_cfa_offset 24
 3062 0004 00AF     		add	r7, sp, #0
 3063              	.LCFI123:
 3064              		.cfi_def_cfa_register 7
 3065 0006 7860     		str	r0, [r7, #4]
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3066              		.loc 1 1448 0
 3067 0008 7B68     		ldr	r3, [r7, #4]
 3068 000a 9B6B     		ldr	r3, [r3, #56]
 3069 000c FB60     		str	r3, [r7, #12]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3070              		.loc 1 1449 0
 3071 000e FB68     		ldr	r3, [r7, #12]
 3072 0010 0022     		movs	r2, #0
 3073 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3074              		.loc 1 1450 0
 3075 0016 FB68     		ldr	r3, [r7, #12]
 3076 0018 0022     		movs	r2, #0
 3077 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 3078              		.loc 1 1452 0
 3079 001e FB68     		ldr	r3, [r7, #12]
 3080 0020 93F86930 		ldrb	r3, [r3, #105]
 3081 0024 DBB2     		uxtb	r3, r3
 3082 0026 212B     		cmp	r3, #33
 3083 0028 09D1     		bne	.L159
ARM GAS  /tmp/ccmShkBJ.s 			page 80


1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 3084              		.loc 1 1453 0
 3085 002a FB68     		ldr	r3, [r7, #12]
 3086 002c 1B68     		ldr	r3, [r3]
 3087 002e 9B68     		ldr	r3, [r3, #8]
 3088 0030 03F08003 		and	r3, r3, #128
 3089 0034 002B     		cmp	r3, #0
 3090 0036 02D0     		beq	.L159
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3091              		.loc 1 1455 0
 3092 0038 F868     		ldr	r0, [r7, #12]
 3093 003a FFF7FEFF 		bl	UART_EndTxTransfer
 3094              	.L159:
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 3095              		.loc 1 1459 0
 3096 003e FB68     		ldr	r3, [r7, #12]
 3097 0040 93F86A30 		ldrb	r3, [r3, #106]
 3098 0044 DBB2     		uxtb	r3, r3
 3099 0046 222B     		cmp	r3, #34
 3100 0048 09D1     		bne	.L160
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 3101              		.loc 1 1460 0
 3102 004a FB68     		ldr	r3, [r7, #12]
 3103 004c 1B68     		ldr	r3, [r3]
 3104 004e 9B68     		ldr	r3, [r3, #8]
 3105 0050 03F04003 		and	r3, r3, #64
 3106 0054 002B     		cmp	r3, #0
 3107 0056 02D0     		beq	.L160
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3108              		.loc 1 1462 0
 3109 0058 F868     		ldr	r0, [r7, #12]
 3110 005a FFF7FEFF 		bl	UART_EndRxTransfer
 3111              	.L160:
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->ErrorCode, HAL_UART_ERROR_DMA);
 3112              		.loc 1 1464 0
 3113 005e FB68     		ldr	r3, [r7, #12]
 3114 0060 DB6E     		ldr	r3, [r3, #108]
 3115 0062 43F01002 		orr	r2, r3, #16
 3116 0066 FB68     		ldr	r3, [r7, #12]
 3117 0068 DA66     		str	r2, [r3, #108]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3118              		.loc 1 1465 0
 3119 006a F868     		ldr	r0, [r7, #12]
 3120 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3121              		.loc 1 1466 0
 3122 0070 00BF     		nop
 3123 0072 1037     		adds	r7, r7, #16
 3124              	.LCFI124:
 3125              		.cfi_def_cfa_offset 8
 3126 0074 BD46     		mov	sp, r7
ARM GAS  /tmp/ccmShkBJ.s 			page 81


 3127              	.LCFI125:
 3128              		.cfi_def_cfa_register 13
 3129              		@ sp needed
 3130 0076 80BD     		pop	{r7, pc}
 3131              		.cfi_endproc
 3132              	.LFE159:
 3134              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3135              		.align	1
 3136              		.syntax unified
 3137              		.thumb
 3138              		.thumb_func
 3139              		.fpu fpv4-sp-d16
 3141              	UART_DMAAbortOnError:
 3142              	.LFB160:
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication abort callback, when call by HAL services on Error
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure following error occurrence).
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3143              		.loc 1 1475 0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 16
 3146              		@ frame_needed = 1, uses_anonymous_args = 0
 3147 0000 80B5     		push	{r7, lr}
 3148              	.LCFI126:
 3149              		.cfi_def_cfa_offset 8
 3150              		.cfi_offset 7, -8
 3151              		.cfi_offset 14, -4
 3152 0002 84B0     		sub	sp, sp, #16
 3153              	.LCFI127:
 3154              		.cfi_def_cfa_offset 24
 3155 0004 00AF     		add	r7, sp, #0
 3156              	.LCFI128:
 3157              		.cfi_def_cfa_register 7
 3158 0006 7860     		str	r0, [r7, #4]
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 3159              		.loc 1 1476 0
 3160 0008 7B68     		ldr	r3, [r7, #4]
 3161 000a 9B6B     		ldr	r3, [r3, #56]
 3162 000c FB60     		str	r3, [r7, #12]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3163              		.loc 1 1477 0
 3164 000e FB68     		ldr	r3, [r7, #12]
 3165 0010 0022     		movs	r2, #0
 3166 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3167              		.loc 1 1478 0
 3168 0016 FB68     		ldr	r3, [r7, #12]
 3169 0018 0022     		movs	r2, #0
 3170 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3171              		.loc 1 1480 0
ARM GAS  /tmp/ccmShkBJ.s 			page 82


 3172 001e F868     		ldr	r0, [r7, #12]
 3173 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3174              		.loc 1 1481 0
 3175 0024 00BF     		nop
 3176 0026 1037     		adds	r7, r7, #16
 3177              	.LCFI129:
 3178              		.cfi_def_cfa_offset 8
 3179 0028 BD46     		mov	sp, r7
 3180              	.LCFI130:
 3181              		.cfi_def_cfa_register 13
 3182              		@ sp needed
 3183 002a 80BD     		pop	{r7, pc}
 3184              		.cfi_endproc
 3185              	.LFE160:
 3187              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3188              		.align	1
 3189              		.weak	HAL_UART_TxCpltCallback
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu fpv4-sp-d16
 3195              	HAL_UART_TxCpltCallback:
 3196              	.LFB161:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3197              		.loc 1 1489 0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 8
 3200              		@ frame_needed = 1, uses_anonymous_args = 0
 3201              		@ link register save eliminated.
 3202 0000 80B4     		push	{r7}
 3203              	.LCFI131:
 3204              		.cfi_def_cfa_offset 4
 3205              		.cfi_offset 7, -4
 3206 0002 83B0     		sub	sp, sp, #12
 3207              	.LCFI132:
 3208              		.cfi_def_cfa_offset 16
 3209 0004 00AF     		add	r7, sp, #0
 3210              	.LCFI133:
 3211              		.cfi_def_cfa_register 7
 3212 0006 7860     		str	r0, [r7, #4]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3213              		.loc 1 1496 0
 3214 0008 00BF     		nop
ARM GAS  /tmp/ccmShkBJ.s 			page 83


 3215 000a 0C37     		adds	r7, r7, #12
 3216              	.LCFI134:
 3217              		.cfi_def_cfa_offset 4
 3218 000c BD46     		mov	sp, r7
 3219              	.LCFI135:
 3220              		.cfi_def_cfa_register 13
 3221              		@ sp needed
 3222 000e 5DF8047B 		ldr	r7, [sp], #4
 3223              	.LCFI136:
 3224              		.cfi_restore 7
 3225              		.cfi_def_cfa_offset 0
 3226 0012 7047     		bx	lr
 3227              		.cfi_endproc
 3228              	.LFE161:
 3230              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3231              		.align	1
 3232              		.weak	HAL_UART_TxHalfCpltCallback
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu fpv4-sp-d16
 3238              	HAL_UART_TxHalfCpltCallback:
 3239              	.LFB162:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3240              		.loc 1 1504 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 8
 3243              		@ frame_needed = 1, uses_anonymous_args = 0
 3244              		@ link register save eliminated.
 3245 0000 80B4     		push	{r7}
 3246              	.LCFI137:
 3247              		.cfi_def_cfa_offset 4
 3248              		.cfi_offset 7, -4
 3249 0002 83B0     		sub	sp, sp, #12
 3250              	.LCFI138:
 3251              		.cfi_def_cfa_offset 16
 3252 0004 00AF     		add	r7, sp, #0
 3253              	.LCFI139:
 3254              		.cfi_def_cfa_register 7
 3255 0006 7860     		str	r0, [r7, #4]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3256              		.loc 1 1511 0
 3257 0008 00BF     		nop
 3258 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccmShkBJ.s 			page 84


 3259              	.LCFI140:
 3260              		.cfi_def_cfa_offset 4
 3261 000c BD46     		mov	sp, r7
 3262              	.LCFI141:
 3263              		.cfi_def_cfa_register 13
 3264              		@ sp needed
 3265 000e 5DF8047B 		ldr	r7, [sp], #4
 3266              	.LCFI142:
 3267              		.cfi_restore 7
 3268              		.cfi_def_cfa_offset 0
 3269 0012 7047     		bx	lr
 3270              		.cfi_endproc
 3271              	.LFE162:
 3273              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3274              		.align	1
 3275              		.weak	HAL_UART_RxCpltCallback
 3276              		.syntax unified
 3277              		.thumb
 3278              		.thumb_func
 3279              		.fpu fpv4-sp-d16
 3281              	HAL_UART_RxCpltCallback:
 3282              	.LFB163:
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3283              		.loc 1 1519 0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 8
 3286              		@ frame_needed = 1, uses_anonymous_args = 0
 3287              		@ link register save eliminated.
 3288 0000 80B4     		push	{r7}
 3289              	.LCFI143:
 3290              		.cfi_def_cfa_offset 4
 3291              		.cfi_offset 7, -4
 3292 0002 83B0     		sub	sp, sp, #12
 3293              	.LCFI144:
 3294              		.cfi_def_cfa_offset 16
 3295 0004 00AF     		add	r7, sp, #0
 3296              	.LCFI145:
 3297              		.cfi_def_cfa_register 7
 3298 0006 7860     		str	r0, [r7, #4]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3299              		.loc 1 1526 0
 3300 0008 00BF     		nop
 3301 000a 0C37     		adds	r7, r7, #12
 3302              	.LCFI146:
ARM GAS  /tmp/ccmShkBJ.s 			page 85


 3303              		.cfi_def_cfa_offset 4
 3304 000c BD46     		mov	sp, r7
 3305              	.LCFI147:
 3306              		.cfi_def_cfa_register 13
 3307              		@ sp needed
 3308 000e 5DF8047B 		ldr	r7, [sp], #4
 3309              	.LCFI148:
 3310              		.cfi_restore 7
 3311              		.cfi_def_cfa_offset 0
 3312 0012 7047     		bx	lr
 3313              		.cfi_endproc
 3314              	.LFE163:
 3316              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3317              		.align	1
 3318              		.weak	HAL_UART_RxHalfCpltCallback
 3319              		.syntax unified
 3320              		.thumb
 3321              		.thumb_func
 3322              		.fpu fpv4-sp-d16
 3324              	HAL_UART_RxHalfCpltCallback:
 3325              	.LFB164:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3326              		.loc 1 1534 0
 3327              		.cfi_startproc
 3328              		@ args = 0, pretend = 0, frame = 8
 3329              		@ frame_needed = 1, uses_anonymous_args = 0
 3330              		@ link register save eliminated.
 3331 0000 80B4     		push	{r7}
 3332              	.LCFI149:
 3333              		.cfi_def_cfa_offset 4
 3334              		.cfi_offset 7, -4
 3335 0002 83B0     		sub	sp, sp, #12
 3336              	.LCFI150:
 3337              		.cfi_def_cfa_offset 16
 3338 0004 00AF     		add	r7, sp, #0
 3339              	.LCFI151:
 3340              		.cfi_def_cfa_register 7
 3341 0006 7860     		str	r0, [r7, #4]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3342              		.loc 1 1541 0
 3343 0008 00BF     		nop
 3344 000a 0C37     		adds	r7, r7, #12
 3345              	.LCFI152:
 3346              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccmShkBJ.s 			page 86


 3347 000c BD46     		mov	sp, r7
 3348              	.LCFI153:
 3349              		.cfi_def_cfa_register 13
 3350              		@ sp needed
 3351 000e 5DF8047B 		ldr	r7, [sp], #4
 3352              	.LCFI154:
 3353              		.cfi_restore 7
 3354              		.cfi_def_cfa_offset 0
 3355 0012 7047     		bx	lr
 3356              		.cfi_endproc
 3357              	.LFE164:
 3359              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3360              		.align	1
 3361              		.weak	HAL_UART_ErrorCallback
 3362              		.syntax unified
 3363              		.thumb
 3364              		.thumb_func
 3365              		.fpu fpv4-sp-d16
 3367              	HAL_UART_ErrorCallback:
 3368              	.LFB165:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART error callbacks
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3369              		.loc 1 1549 0
 3370              		.cfi_startproc
 3371              		@ args = 0, pretend = 0, frame = 8
 3372              		@ frame_needed = 1, uses_anonymous_args = 0
 3373              		@ link register save eliminated.
 3374 0000 80B4     		push	{r7}
 3375              	.LCFI155:
 3376              		.cfi_def_cfa_offset 4
 3377              		.cfi_offset 7, -4
 3378 0002 83B0     		sub	sp, sp, #12
 3379              	.LCFI156:
 3380              		.cfi_def_cfa_offset 16
 3381 0004 00AF     		add	r7, sp, #0
 3382              	.LCFI157:
 3383              		.cfi_def_cfa_register 7
 3384 0006 7860     		str	r0, [r7, #4]
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3385              		.loc 1 1556 0
 3386 0008 00BF     		nop
 3387 000a 0C37     		adds	r7, r7, #12
 3388              	.LCFI158:
 3389              		.cfi_def_cfa_offset 4
 3390 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccmShkBJ.s 			page 87


 3391              	.LCFI159:
 3392              		.cfi_def_cfa_register 13
 3393              		@ sp needed
 3394 000e 5DF8047B 		ldr	r7, [sp], #4
 3395              	.LCFI160:
 3396              		.cfi_restore 7
 3397              		.cfi_def_cfa_offset 0
 3398 0012 7047     		bx	lr
 3399              		.cfi_endproc
 3400              	.LFE165:
 3402              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3403              		.align	1
 3404              		.syntax unified
 3405              		.thumb
 3406              		.thumb_func
 3407              		.fpu fpv4-sp-d16
 3409              	UART_Transmit_IT:
 3410              	.LFB166:
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3411              		.loc 1 1566 0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 16
 3414              		@ frame_needed = 1, uses_anonymous_args = 0
 3415              		@ link register save eliminated.
 3416 0000 80B4     		push	{r7}
 3417              	.LCFI161:
 3418              		.cfi_def_cfa_offset 4
 3419              		.cfi_offset 7, -4
 3420 0002 85B0     		sub	sp, sp, #20
 3421              	.LCFI162:
 3422              		.cfi_def_cfa_offset 24
 3423 0004 00AF     		add	r7, sp, #0
 3424              	.LCFI163:
 3425              		.cfi_def_cfa_register 7
 3426 0006 7860     		str	r0, [r7, #4]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3427              		.loc 1 1570 0
 3428 0008 7B68     		ldr	r3, [r7, #4]
 3429 000a 93F86930 		ldrb	r3, [r3, #105]
 3430 000e DBB2     		uxtb	r3, r3
 3431 0010 212B     		cmp	r3, #33
 3432 0012 44D1     		bne	.L168
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
ARM GAS  /tmp/ccmShkBJ.s 			page 88


 3433              		.loc 1 1573 0
 3434 0014 7B68     		ldr	r3, [r7, #4]
 3435 0016 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 3436 001a 9BB2     		uxth	r3, r3
 3437 001c 002B     		cmp	r3, #0
 3438 001e 11D1     		bne	.L169
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 3439              		.loc 1 1576 0
 3440 0020 7B68     		ldr	r3, [r7, #4]
 3441 0022 1B68     		ldr	r3, [r3]
 3442 0024 7A68     		ldr	r2, [r7, #4]
 3443 0026 1268     		ldr	r2, [r2]
 3444 0028 1268     		ldr	r2, [r2]
 3445 002a 22F08002 		bic	r2, r2, #128
 3446 002e 1A60     		str	r2, [r3]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3447              		.loc 1 1579 0
 3448 0030 7B68     		ldr	r3, [r7, #4]
 3449 0032 1B68     		ldr	r3, [r3]
 3450 0034 7A68     		ldr	r2, [r7, #4]
 3451 0036 1268     		ldr	r2, [r2]
 3452 0038 1268     		ldr	r2, [r2]
 3453 003a 42F04002 		orr	r2, r2, #64
 3454 003e 1A60     		str	r2, [r3]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3455              		.loc 1 1581 0
 3456 0040 0023     		movs	r3, #0
 3457 0042 2DE0     		b	.L170
 3458              	.L169:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 3459              		.loc 1 1585 0
 3460 0044 7B68     		ldr	r3, [r7, #4]
 3461 0046 9B68     		ldr	r3, [r3, #8]
 3462 0048 B3F5805F 		cmp	r3, #4096
 3463 004c 13D1     		bne	.L171
 3464              		.loc 1 1585 0 is_stmt 0 discriminator 1
 3465 004e 7B68     		ldr	r3, [r7, #4]
 3466 0050 1B69     		ldr	r3, [r3, #16]
 3467 0052 002B     		cmp	r3, #0
 3468 0054 0FD1     		bne	.L171
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 3469              		.loc 1 1587 0 is_stmt 1
 3470 0056 7B68     		ldr	r3, [r7, #4]
 3471 0058 DB6C     		ldr	r3, [r3, #76]
 3472 005a FB60     		str	r3, [r7, #12]
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3473              		.loc 1 1588 0
 3474 005c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 89


 3475 005e 1B68     		ldr	r3, [r3]
 3476 0060 FA68     		ldr	r2, [r7, #12]
 3477 0062 1288     		ldrh	r2, [r2]
 3478 0064 C2F30802 		ubfx	r2, r2, #0, #9
 3479 0068 9A62     		str	r2, [r3, #40]
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 3480              		.loc 1 1589 0
 3481 006a 7B68     		ldr	r3, [r7, #4]
 3482 006c DB6C     		ldr	r3, [r3, #76]
 3483 006e 9A1C     		adds	r2, r3, #2
 3484 0070 7B68     		ldr	r3, [r7, #4]
 3485 0072 DA64     		str	r2, [r3, #76]
 3486 0074 08E0     		b	.L172
 3487              	.L171:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 3488              		.loc 1 1593 0
 3489 0076 7B68     		ldr	r3, [r7, #4]
 3490 0078 1A68     		ldr	r2, [r3]
 3491 007a 7B68     		ldr	r3, [r7, #4]
 3492 007c DB6C     		ldr	r3, [r3, #76]
 3493 007e 581C     		adds	r0, r3, #1
 3494 0080 7968     		ldr	r1, [r7, #4]
 3495 0082 C864     		str	r0, [r1, #76]
 3496 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3497 0086 9362     		str	r3, [r2, #40]
 3498              	.L172:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 3499              		.loc 1 1596 0
 3500 0088 7B68     		ldr	r3, [r7, #4]
 3501 008a B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 3502 008e 9BB2     		uxth	r3, r3
 3503 0090 013B     		subs	r3, r3, #1
 3504 0092 9AB2     		uxth	r2, r3
 3505 0094 7B68     		ldr	r3, [r7, #4]
 3506 0096 A3F85220 		strh	r2, [r3, #82]	@ movhi
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3507              		.loc 1 1598 0
 3508 009a 0023     		movs	r3, #0
 3509 009c 00E0     		b	.L170
 3510              	.L168:
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 3511              		.loc 1 1603 0
 3512 009e 0223     		movs	r3, #2
 3513              	.L170:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3514              		.loc 1 1605 0
ARM GAS  /tmp/ccmShkBJ.s 			page 90


 3515 00a0 1846     		mov	r0, r3
 3516 00a2 1437     		adds	r7, r7, #20
 3517              	.LCFI164:
 3518              		.cfi_def_cfa_offset 4
 3519 00a4 BD46     		mov	sp, r7
 3520              	.LCFI165:
 3521              		.cfi_def_cfa_register 13
 3522              		@ sp needed
 3523 00a6 5DF8047B 		ldr	r7, [sp], #4
 3524              	.LCFI166:
 3525              		.cfi_restore 7
 3526              		.cfi_def_cfa_offset 0
 3527 00aa 7047     		bx	lr
 3528              		.cfi_endproc
 3529              	.LFE166:
 3531              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3532              		.align	1
 3533              		.syntax unified
 3534              		.thumb
 3535              		.thumb_func
 3536              		.fpu fpv4-sp-d16
 3538              	UART_EndTransmit_IT:
 3539              	.LFB167:
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3540              		.loc 1 1614 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 8
 3543              		@ frame_needed = 1, uses_anonymous_args = 0
 3544 0000 80B5     		push	{r7, lr}
 3545              	.LCFI167:
 3546              		.cfi_def_cfa_offset 8
 3547              		.cfi_offset 7, -8
 3548              		.cfi_offset 14, -4
 3549 0002 82B0     		sub	sp, sp, #8
 3550              	.LCFI168:
 3551              		.cfi_def_cfa_offset 16
 3552 0004 00AF     		add	r7, sp, #0
 3553              	.LCFI169:
 3554              		.cfi_def_cfa_register 7
 3555 0006 7860     		str	r0, [r7, #4]
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3556              		.loc 1 1616 0
 3557 0008 7B68     		ldr	r3, [r7, #4]
 3558 000a 1B68     		ldr	r3, [r3]
 3559 000c 7A68     		ldr	r2, [r7, #4]
 3560 000e 1268     		ldr	r2, [r2]
 3561 0010 1268     		ldr	r2, [r2]
 3562 0012 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccmShkBJ.s 			page 91


 3563 0016 1A60     		str	r2, [r3]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3564              		.loc 1 1619 0
 3565 0018 7B68     		ldr	r3, [r7, #4]
 3566 001a 2022     		movs	r2, #32
 3567 001c 83F86920 		strb	r2, [r3, #105]
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3568              		.loc 1 1621 0
 3569 0020 7868     		ldr	r0, [r7, #4]
 3570 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3571              		.loc 1 1623 0
 3572 0026 0023     		movs	r3, #0
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3573              		.loc 1 1624 0
 3574 0028 1846     		mov	r0, r3
 3575 002a 0837     		adds	r7, r7, #8
 3576              	.LCFI170:
 3577              		.cfi_def_cfa_offset 8
 3578 002c BD46     		mov	sp, r7
 3579              	.LCFI171:
 3580              		.cfi_def_cfa_register 13
 3581              		@ sp needed
 3582 002e 80BD     		pop	{r7, pc}
 3583              		.cfi_endproc
 3584              	.LFE167:
 3586              		.section	.text.UART_Receive_IT,"ax",%progbits
 3587              		.align	1
 3588              		.syntax unified
 3589              		.thumb
 3590              		.thumb_func
 3591              		.fpu fpv4-sp-d16
 3593              	UART_Receive_IT:
 3594              	.LFB168:
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3595              		.loc 1 1634 0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 16
 3598              		@ frame_needed = 1, uses_anonymous_args = 0
 3599 0000 80B5     		push	{r7, lr}
 3600              	.LCFI172:
 3601              		.cfi_def_cfa_offset 8
 3602              		.cfi_offset 7, -8
 3603              		.cfi_offset 14, -4
ARM GAS  /tmp/ccmShkBJ.s 			page 92


 3604 0002 84B0     		sub	sp, sp, #16
 3605              	.LCFI173:
 3606              		.cfi_def_cfa_offset 24
 3607 0004 00AF     		add	r7, sp, #0
 3608              	.LCFI174:
 3609              		.cfi_def_cfa_register 7
 3610 0006 7860     		str	r0, [r7, #4]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 3611              		.loc 1 1636 0
 3612 0008 7B68     		ldr	r3, [r7, #4]
 3613 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 3614 000e FB81     		strh	r3, [r7, #14]	@ movhi
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 3615              		.loc 1 1639 0
 3616 0010 7B68     		ldr	r3, [r7, #4]
 3617 0012 93F86A30 		ldrb	r3, [r3, #106]
 3618 0016 DBB2     		uxtb	r3, r3
 3619 0018 222B     		cmp	r3, #34
 3620 001a 4FD1     		bne	.L176
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 3621              		.loc 1 1642 0
 3622 001c 7B68     		ldr	r3, [r7, #4]
 3623 001e 9B68     		ldr	r3, [r3, #8]
 3624 0020 B3F5805F 		cmp	r3, #4096
 3625 0024 15D1     		bne	.L177
 3626              		.loc 1 1642 0 is_stmt 0 discriminator 1
 3627 0026 7B68     		ldr	r3, [r7, #4]
 3628 0028 1B69     		ldr	r3, [r3, #16]
 3629 002a 002B     		cmp	r3, #0
 3630 002c 11D1     		bne	.L177
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 3631              		.loc 1 1644 0 is_stmt 1
 3632 002e 7B68     		ldr	r3, [r7, #4]
 3633 0030 5B6D     		ldr	r3, [r3, #84]
 3634 0032 BB60     		str	r3, [r7, #8]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 3635              		.loc 1 1645 0
 3636 0034 7B68     		ldr	r3, [r7, #4]
 3637 0036 1B68     		ldr	r3, [r3]
 3638 0038 5B6A     		ldr	r3, [r3, #36]
 3639 003a 9AB2     		uxth	r2, r3
 3640 003c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3641 003e 1340     		ands	r3, r3, r2
 3642 0040 9AB2     		uxth	r2, r3
 3643 0042 BB68     		ldr	r3, [r7, #8]
 3644 0044 1A80     		strh	r2, [r3]	@ movhi
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 3645              		.loc 1 1646 0
 3646 0046 7B68     		ldr	r3, [r7, #4]
 3647 0048 5B6D     		ldr	r3, [r3, #84]
 3648 004a 9A1C     		adds	r2, r3, #2
ARM GAS  /tmp/ccmShkBJ.s 			page 93


 3649 004c 7B68     		ldr	r3, [r7, #4]
 3650 004e 5A65     		str	r2, [r3, #84]
 3651 0050 0DE0     		b	.L178
 3652              	.L177:
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 3653              		.loc 1 1650 0
 3654 0052 7B68     		ldr	r3, [r7, #4]
 3655 0054 5B6D     		ldr	r3, [r3, #84]
 3656 0056 591C     		adds	r1, r3, #1
 3657 0058 7A68     		ldr	r2, [r7, #4]
 3658 005a 5165     		str	r1, [r2, #84]
 3659 005c 7A68     		ldr	r2, [r7, #4]
 3660 005e 1268     		ldr	r2, [r2]
 3661 0060 526A     		ldr	r2, [r2, #36]
 3662 0062 D1B2     		uxtb	r1, r2
 3663 0064 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3664 0066 D2B2     		uxtb	r2, r2
 3665 0068 0A40     		ands	r2, r2, r1
 3666 006a D2B2     		uxtb	r2, r2
 3667 006c 1A70     		strb	r2, [r3]
 3668              	.L178:
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 3669              		.loc 1 1653 0
 3670 006e 7B68     		ldr	r3, [r7, #4]
 3671 0070 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 3672 0074 9BB2     		uxth	r3, r3
 3673 0076 013B     		subs	r3, r3, #1
 3674 0078 9BB2     		uxth	r3, r3
 3675 007a 7A68     		ldr	r2, [r7, #4]
 3676 007c 1946     		mov	r1, r3	@ movhi
 3677 007e A2F85A10 		strh	r1, [r2, #90]	@ movhi
 3678 0082 002B     		cmp	r3, #0
 3679 0084 18D1     		bne	.L179
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3680              		.loc 1 1656 0
 3681 0086 7B68     		ldr	r3, [r7, #4]
 3682 0088 1B68     		ldr	r3, [r3]
 3683 008a 7A68     		ldr	r2, [r7, #4]
 3684 008c 1268     		ldr	r2, [r2]
 3685 008e 1268     		ldr	r2, [r2]
 3686 0090 22F49072 		bic	r2, r2, #288
 3687 0094 1A60     		str	r2, [r3]
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3688              		.loc 1 1659 0
 3689 0096 7B68     		ldr	r3, [r7, #4]
 3690 0098 1B68     		ldr	r3, [r3]
 3691 009a 7A68     		ldr	r2, [r7, #4]
 3692 009c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccmShkBJ.s 			page 94


 3693 009e 9268     		ldr	r2, [r2, #8]
 3694 00a0 22F00102 		bic	r2, r2, #1
 3695 00a4 9A60     		str	r2, [r3, #8]
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3696              		.loc 1 1662 0
 3697 00a6 7B68     		ldr	r3, [r7, #4]
 3698 00a8 2022     		movs	r2, #32
 3699 00aa 83F86A20 		strb	r2, [r3, #106]
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 3700              		.loc 1 1664 0
 3701 00ae 7868     		ldr	r0, [r7, #4]
 3702 00b0 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3703              		.loc 1 1666 0
 3704 00b4 0023     		movs	r3, #0
 3705 00b6 0AE0     		b	.L180
 3706              	.L179:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 3707              		.loc 1 1669 0
 3708 00b8 0023     		movs	r3, #0
 3709 00ba 08E0     		b	.L180
 3710              	.L176:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3711              		.loc 1 1674 0
 3712 00bc 7B68     		ldr	r3, [r7, #4]
 3713 00be 1B68     		ldr	r3, [r3]
 3714 00c0 7A68     		ldr	r2, [r7, #4]
 3715 00c2 1268     		ldr	r2, [r2]
 3716 00c4 9269     		ldr	r2, [r2, #24]
 3717 00c6 42F00802 		orr	r2, r2, #8
 3718 00ca 9A61     		str	r2, [r3, #24]
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 3719              		.loc 1 1676 0
 3720 00cc 0223     		movs	r3, #2
 3721              	.L180:
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3722              		.loc 1 1678 0
 3723 00ce 1846     		mov	r0, r3
 3724 00d0 1037     		adds	r7, r7, #16
 3725              	.LCFI175:
 3726              		.cfi_def_cfa_offset 8
 3727 00d2 BD46     		mov	sp, r7
 3728              	.LCFI176:
 3729              		.cfi_def_cfa_register 13
 3730              		@ sp needed
ARM GAS  /tmp/ccmShkBJ.s 			page 95


 3731 00d4 80BD     		pop	{r7, pc}
 3732              		.cfi_endproc
 3733              	.LFE168:
 3735              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 3736              		.align	1
 3737              		.syntax unified
 3738              		.thumb
 3739              		.thumb_func
 3740              		.fpu fpv4-sp-d16
 3742              	UART_EndTxTransfer:
 3743              	.LFB169:
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3744              		.loc 1 1686 0
 3745              		.cfi_startproc
 3746              		@ args = 0, pretend = 0, frame = 8
 3747              		@ frame_needed = 1, uses_anonymous_args = 0
 3748              		@ link register save eliminated.
 3749 0000 80B4     		push	{r7}
 3750              	.LCFI177:
 3751              		.cfi_def_cfa_offset 4
 3752              		.cfi_offset 7, -4
 3753 0002 83B0     		sub	sp, sp, #12
 3754              	.LCFI178:
 3755              		.cfi_def_cfa_offset 16
 3756 0004 00AF     		add	r7, sp, #0
 3757              	.LCFI179:
 3758              		.cfi_def_cfa_register 7
 3759 0006 7860     		str	r0, [r7, #4]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3760              		.loc 1 1688 0
 3761 0008 7B68     		ldr	r3, [r7, #4]
 3762 000a 1B68     		ldr	r3, [r3]
 3763 000c 7A68     		ldr	r2, [r7, #4]
 3764 000e 1268     		ldr	r2, [r2]
 3765 0010 1268     		ldr	r2, [r2]
 3766 0012 22F0C002 		bic	r2, r2, #192
 3767 0016 1A60     		str	r2, [r3]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3768              		.loc 1 1691 0
 3769 0018 7B68     		ldr	r3, [r7, #4]
 3770 001a 2022     		movs	r2, #32
 3771 001c 83F86920 		strb	r2, [r3, #105]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3772              		.loc 1 1692 0
 3773 0020 00BF     		nop
 3774 0022 0C37     		adds	r7, r7, #12
 3775              	.LCFI180:
ARM GAS  /tmp/ccmShkBJ.s 			page 96


 3776              		.cfi_def_cfa_offset 4
 3777 0024 BD46     		mov	sp, r7
 3778              	.LCFI181:
 3779              		.cfi_def_cfa_register 13
 3780              		@ sp needed
 3781 0026 5DF8047B 		ldr	r7, [sp], #4
 3782              	.LCFI182:
 3783              		.cfi_restore 7
 3784              		.cfi_def_cfa_offset 0
 3785 002a 7047     		bx	lr
 3786              		.cfi_endproc
 3787              	.LFE169:
 3789              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 3790              		.align	1
 3791              		.syntax unified
 3792              		.thumb
 3793              		.thumb_func
 3794              		.fpu fpv4-sp-d16
 3796              	UART_EndRxTransfer:
 3797              	.LFB170:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3798              		.loc 1 1701 0
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 8
 3801              		@ frame_needed = 1, uses_anonymous_args = 0
 3802              		@ link register save eliminated.
 3803 0000 80B4     		push	{r7}
 3804              	.LCFI183:
 3805              		.cfi_def_cfa_offset 4
 3806              		.cfi_offset 7, -4
 3807 0002 83B0     		sub	sp, sp, #12
 3808              	.LCFI184:
 3809              		.cfi_def_cfa_offset 16
 3810 0004 00AF     		add	r7, sp, #0
 3811              	.LCFI185:
 3812              		.cfi_def_cfa_register 7
 3813 0006 7860     		str	r0, [r7, #4]
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3814              		.loc 1 1703 0
 3815 0008 7B68     		ldr	r3, [r7, #4]
 3816 000a 1B68     		ldr	r3, [r3]
 3817 000c 7A68     		ldr	r2, [r7, #4]
 3818 000e 1268     		ldr	r2, [r2]
 3819 0010 1268     		ldr	r2, [r2]
 3820 0012 22F49072 		bic	r2, r2, #288
 3821 0016 1A60     		str	r2, [r3]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3822              		.loc 1 1704 0
ARM GAS  /tmp/ccmShkBJ.s 			page 97


 3823 0018 7B68     		ldr	r3, [r7, #4]
 3824 001a 1B68     		ldr	r3, [r3]
 3825 001c 7A68     		ldr	r2, [r7, #4]
 3826 001e 1268     		ldr	r2, [r2]
 3827 0020 9268     		ldr	r2, [r2, #8]
 3828 0022 22F00102 		bic	r2, r2, #1
 3829 0026 9A60     		str	r2, [r3, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3830              		.loc 1 1707 0
 3831 0028 7B68     		ldr	r3, [r7, #4]
 3832 002a 2022     		movs	r2, #32
 3833 002c 83F86A20 		strb	r2, [r3, #106]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3834              		.loc 1 1708 0
 3835 0030 00BF     		nop
 3836 0032 0C37     		adds	r7, r7, #12
 3837              	.LCFI186:
 3838              		.cfi_def_cfa_offset 4
 3839 0034 BD46     		mov	sp, r7
 3840              	.LCFI187:
 3841              		.cfi_def_cfa_register 13
 3842              		@ sp needed
 3843 0036 5DF8047B 		ldr	r7, [sp], #4
 3844              	.LCFI188:
 3845              		.cfi_restore 7
 3846              		.cfi_def_cfa_offset 0
 3847 003a 7047     		bx	lr
 3848              		.cfi_endproc
 3849              	.LFE170:
 3851              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3852              		.align	1
 3853              		.global	HAL_MultiProcessor_EnableMuteMode
 3854              		.syntax unified
 3855              		.thumb
 3856              		.thumb_func
 3857              		.fpu fpv4-sp-d16
 3859              	HAL_MultiProcessor_EnableMuteMode:
 3860              	.LFB171:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_GetState() API is helpful to check in run-time the state of the UART peripheral.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
ARM GAS  /tmp/ccmShkBJ.s 			page 98


1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	 (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3861              		.loc 1 1747 0
 3862              		.cfi_startproc
 3863              		@ args = 0, pretend = 0, frame = 8
 3864              		@ frame_needed = 1, uses_anonymous_args = 0
 3865 0000 80B5     		push	{r7, lr}
 3866              	.LCFI189:
 3867              		.cfi_def_cfa_offset 8
 3868              		.cfi_offset 7, -8
 3869              		.cfi_offset 14, -4
 3870 0002 82B0     		sub	sp, sp, #8
 3871              	.LCFI190:
 3872              		.cfi_def_cfa_offset 16
 3873 0004 00AF     		add	r7, sp, #0
 3874              	.LCFI191:
 3875              		.cfi_def_cfa_register 7
 3876 0006 7860     		str	r0, [r7, #4]
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3877              		.loc 1 1749 0
 3878 0008 7B68     		ldr	r3, [r7, #4]
 3879 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3880 000e 012B     		cmp	r3, #1
 3881 0010 01D1     		bne	.L184
 3882              		.loc 1 1749 0 is_stmt 0 discriminator 1
 3883 0012 0223     		movs	r3, #2
 3884 0014 17E0     		b	.L185
 3885              	.L184:
 3886              		.loc 1 1749 0 discriminator 2
 3887 0016 7B68     		ldr	r3, [r7, #4]
 3888 0018 0122     		movs	r2, #1
 3889 001a 83F86820 		strb	r2, [r3, #104]
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3890              		.loc 1 1751 0 is_stmt 1 discriminator 2
 3891 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 99


 3892 0020 2422     		movs	r2, #36
 3893 0022 83F86920 		strb	r2, [r3, #105]
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 3894              		.loc 1 1754 0 discriminator 2
 3895 0026 7B68     		ldr	r3, [r7, #4]
 3896 0028 1B68     		ldr	r3, [r3]
 3897 002a 7A68     		ldr	r2, [r7, #4]
 3898 002c 1268     		ldr	r2, [r2]
 3899 002e 1268     		ldr	r2, [r2]
 3900 0030 42F40052 		orr	r2, r2, #8192
 3901 0034 1A60     		str	r2, [r3]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3902              		.loc 1 1756 0 discriminator 2
 3903 0036 7B68     		ldr	r3, [r7, #4]
 3904 0038 2022     		movs	r2, #32
 3905 003a 83F86920 		strb	r2, [r3, #105]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3906              		.loc 1 1758 0 discriminator 2
 3907 003e 7868     		ldr	r0, [r7, #4]
 3908 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3909 0044 0346     		mov	r3, r0
 3910              	.L185:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3911              		.loc 1 1759 0
 3912 0046 1846     		mov	r0, r3
 3913 0048 0837     		adds	r7, r7, #8
 3914              	.LCFI192:
 3915              		.cfi_def_cfa_offset 8
 3916 004a BD46     		mov	sp, r7
 3917              	.LCFI193:
 3918              		.cfi_def_cfa_register 13
 3919              		@ sp needed
 3920 004c 80BD     		pop	{r7, pc}
 3921              		.cfi_endproc
 3922              	.LFE171:
 3924              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3925              		.align	1
 3926              		.global	HAL_MultiProcessor_DisableMuteMode
 3927              		.syntax unified
 3928              		.thumb
 3929              		.thumb_func
 3930              		.fpu fpv4-sp-d16
 3932              	HAL_MultiProcessor_DisableMuteMode:
 3933              	.LFB172:
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  /tmp/ccmShkBJ.s 			page 100


 3934              		.loc 1 1768 0
 3935              		.cfi_startproc
 3936              		@ args = 0, pretend = 0, frame = 8
 3937              		@ frame_needed = 1, uses_anonymous_args = 0
 3938 0000 80B5     		push	{r7, lr}
 3939              	.LCFI194:
 3940              		.cfi_def_cfa_offset 8
 3941              		.cfi_offset 7, -8
 3942              		.cfi_offset 14, -4
 3943 0002 82B0     		sub	sp, sp, #8
 3944              	.LCFI195:
 3945              		.cfi_def_cfa_offset 16
 3946 0004 00AF     		add	r7, sp, #0
 3947              	.LCFI196:
 3948              		.cfi_def_cfa_register 7
 3949 0006 7860     		str	r0, [r7, #4]
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3950              		.loc 1 1770 0
 3951 0008 7B68     		ldr	r3, [r7, #4]
 3952 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3953 000e 012B     		cmp	r3, #1
 3954 0010 01D1     		bne	.L187
 3955              		.loc 1 1770 0 is_stmt 0 discriminator 1
 3956 0012 0223     		movs	r3, #2
 3957 0014 17E0     		b	.L188
 3958              	.L187:
 3959              		.loc 1 1770 0 discriminator 2
 3960 0016 7B68     		ldr	r3, [r7, #4]
 3961 0018 0122     		movs	r2, #1
 3962 001a 83F86820 		strb	r2, [r3, #104]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3963              		.loc 1 1772 0 is_stmt 1 discriminator 2
 3964 001e 7B68     		ldr	r3, [r7, #4]
 3965 0020 2422     		movs	r2, #36
 3966 0022 83F86920 		strb	r2, [r3, #105]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 3967              		.loc 1 1775 0 discriminator 2
 3968 0026 7B68     		ldr	r3, [r7, #4]
 3969 0028 1B68     		ldr	r3, [r3]
 3970 002a 7A68     		ldr	r2, [r7, #4]
 3971 002c 1268     		ldr	r2, [r2]
 3972 002e 1268     		ldr	r2, [r2]
 3973 0030 22F40052 		bic	r2, r2, #8192
 3974 0034 1A60     		str	r2, [r3]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3975              		.loc 1 1777 0 discriminator 2
 3976 0036 7B68     		ldr	r3, [r7, #4]
 3977 0038 2022     		movs	r2, #32
 3978 003a 83F86920 		strb	r2, [r3, #105]
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3979              		.loc 1 1779 0 discriminator 2
ARM GAS  /tmp/ccmShkBJ.s 			page 101


 3980 003e 7868     		ldr	r0, [r7, #4]
 3981 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3982 0044 0346     		mov	r3, r0
 3983              	.L188:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3984              		.loc 1 1780 0
 3985 0046 1846     		mov	r0, r3
 3986 0048 0837     		adds	r7, r7, #8
 3987              	.LCFI197:
 3988              		.cfi_def_cfa_offset 8
 3989 004a BD46     		mov	sp, r7
 3990              	.LCFI198:
 3991              		.cfi_def_cfa_register 13
 3992              		@ sp needed
 3993 004c 80BD     		pop	{r7, pc}
 3994              		.cfi_endproc
 3995              	.LFE172:
 3997              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3998              		.align	1
 3999              		.global	HAL_MultiProcessor_EnterMuteMode
 4000              		.syntax unified
 4001              		.thumb
 4002              		.thumb_func
 4003              		.fpu fpv4-sp-d16
 4005              	HAL_MultiProcessor_EnterMuteMode:
 4006              	.LFB173:
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4007              		.loc 1 1789 0
 4008              		.cfi_startproc
 4009              		@ args = 0, pretend = 0, frame = 8
 4010              		@ frame_needed = 1, uses_anonymous_args = 0
 4011              		@ link register save eliminated.
 4012 0000 80B4     		push	{r7}
 4013              	.LCFI199:
 4014              		.cfi_def_cfa_offset 4
 4015              		.cfi_offset 7, -4
 4016 0002 83B0     		sub	sp, sp, #12
 4017              	.LCFI200:
 4018              		.cfi_def_cfa_offset 16
 4019 0004 00AF     		add	r7, sp, #0
 4020              	.LCFI201:
 4021              		.cfi_def_cfa_register 7
 4022 0006 7860     		str	r0, [r7, #4]
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4023              		.loc 1 1790 0
 4024 0008 7B68     		ldr	r3, [r7, #4]
 4025 000a 1B68     		ldr	r3, [r3]
 4026 000c 7A68     		ldr	r2, [r7, #4]
 4027 000e 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccmShkBJ.s 			page 102


 4028 0010 9269     		ldr	r2, [r2, #24]
 4029 0012 42F00402 		orr	r2, r2, #4
 4030 0016 9A61     		str	r2, [r3, #24]
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4031              		.loc 1 1791 0
 4032 0018 00BF     		nop
 4033 001a 0C37     		adds	r7, r7, #12
 4034              	.LCFI202:
 4035              		.cfi_def_cfa_offset 4
 4036 001c BD46     		mov	sp, r7
 4037              	.LCFI203:
 4038              		.cfi_def_cfa_register 13
 4039              		@ sp needed
 4040 001e 5DF8047B 		ldr	r7, [sp], #4
 4041              	.LCFI204:
 4042              		.cfi_restore 7
 4043              		.cfi_def_cfa_offset 0
 4044 0022 7047     		bx	lr
 4045              		.cfi_endproc
 4046              	.LFE173:
 4048              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4049              		.align	1
 4050              		.global	HAL_UART_GetState
 4051              		.syntax unified
 4052              		.thumb
 4053              		.thumb_func
 4054              		.fpu fpv4-sp-d16
 4056              	HAL_UART_GetState:
 4057              	.LFB174:
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief return the UART state
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4058              		.loc 1 1801 0
 4059              		.cfi_startproc
 4060              		@ args = 0, pretend = 0, frame = 16
 4061              		@ frame_needed = 1, uses_anonymous_args = 0
 4062              		@ link register save eliminated.
 4063 0000 80B4     		push	{r7}
 4064              	.LCFI205:
 4065              		.cfi_def_cfa_offset 4
 4066              		.cfi_offset 7, -4
 4067 0002 85B0     		sub	sp, sp, #20
 4068              	.LCFI206:
 4069              		.cfi_def_cfa_offset 24
 4070 0004 00AF     		add	r7, sp, #0
 4071              	.LCFI207:
 4072              		.cfi_def_cfa_register 7
 4073 0006 7860     		str	r0, [r7, #4]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4074              		.loc 1 1802 0
ARM GAS  /tmp/ccmShkBJ.s 			page 103


 4075 0008 0023     		movs	r3, #0
 4076 000a FB60     		str	r3, [r7, #12]
 4077 000c 0023     		movs	r3, #0
 4078 000e BB60     		str	r3, [r7, #8]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 4079              		.loc 1 1803 0
 4080 0010 7B68     		ldr	r3, [r7, #4]
 4081 0012 93F86930 		ldrb	r3, [r3, #105]
 4082 0016 DBB2     		uxtb	r3, r3
 4083 0018 FB60     		str	r3, [r7, #12]
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 4084              		.loc 1 1804 0
 4085 001a 7B68     		ldr	r3, [r7, #4]
 4086 001c 93F86A30 		ldrb	r3, [r3, #106]
 4087 0020 DBB2     		uxtb	r3, r3
 4088 0022 BB60     		str	r3, [r7, #8]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4089              		.loc 1 1806 0
 4090 0024 FB68     		ldr	r3, [r7, #12]
 4091 0026 DAB2     		uxtb	r2, r3
 4092 0028 BB68     		ldr	r3, [r7, #8]
 4093 002a DBB2     		uxtb	r3, r3
 4094 002c 1343     		orrs	r3, r3, r2
 4095 002e DBB2     		uxtb	r3, r3
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4096              		.loc 1 1807 0
 4097 0030 1846     		mov	r0, r3
 4098 0032 1437     		adds	r7, r7, #20
 4099              	.LCFI208:
 4100              		.cfi_def_cfa_offset 4
 4101 0034 BD46     		mov	sp, r7
 4102              	.LCFI209:
 4103              		.cfi_def_cfa_register 13
 4104              		@ sp needed
 4105 0036 5DF8047B 		ldr	r7, [sp], #4
 4106              	.LCFI210:
 4107              		.cfi_restore 7
 4108              		.cfi_def_cfa_offset 0
 4109 003a 7047     		bx	lr
 4110              		.cfi_endproc
 4111              	.LFE174:
 4113              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4114              		.align	1
 4115              		.global	HAL_UART_GetError
 4116              		.syntax unified
 4117              		.thumb
 4118              		.thumb_func
 4119              		.fpu fpv4-sp-d16
 4121              	HAL_UART_GetError:
 4122              	.LFB175:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @brief  Return the UART error code
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *              the configuration information for the specified UART.
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @retval UART Error Code
ARM GAS  /tmp/ccmShkBJ.s 			page 104


1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4123              		.loc 1 1816 0
 4124              		.cfi_startproc
 4125              		@ args = 0, pretend = 0, frame = 8
 4126              		@ frame_needed = 1, uses_anonymous_args = 0
 4127              		@ link register save eliminated.
 4128 0000 80B4     		push	{r7}
 4129              	.LCFI211:
 4130              		.cfi_def_cfa_offset 4
 4131              		.cfi_offset 7, -4
 4132 0002 83B0     		sub	sp, sp, #12
 4133              	.LCFI212:
 4134              		.cfi_def_cfa_offset 16
 4135 0004 00AF     		add	r7, sp, #0
 4136              	.LCFI213:
 4137              		.cfi_def_cfa_register 7
 4138 0006 7860     		str	r0, [r7, #4]
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 4139              		.loc 1 1817 0
 4140 0008 7B68     		ldr	r3, [r7, #4]
 4141 000a DB6E     		ldr	r3, [r3, #108]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4142              		.loc 1 1818 0
 4143 000c 1846     		mov	r0, r3
 4144 000e 0C37     		adds	r7, r7, #12
 4145              	.LCFI214:
 4146              		.cfi_def_cfa_offset 4
 4147 0010 BD46     		mov	sp, r7
 4148              	.LCFI215:
 4149              		.cfi_def_cfa_register 13
 4150              		@ sp needed
 4151 0012 5DF8047B 		ldr	r7, [sp], #4
 4152              	.LCFI216:
 4153              		.cfi_restore 7
 4154              		.cfi_def_cfa_offset 0
 4155 0016 7047     		bx	lr
 4156              		.cfi_endproc
 4157              	.LFE175:
 4159              		.section	.text.UART_SetConfig,"ax",%progbits
 4160              		.align	1
 4161              		.global	UART_SetConfig
 4162              		.syntax unified
 4163              		.thumb
 4164              		.thumb_func
 4165              		.fpu fpv4-sp-d16
 4167              	UART_SetConfig:
 4168              	.LFB176:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  /tmp/ccmShkBJ.s 			page 105


 4169              		.loc 1 1826 0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 24
 4172              		@ frame_needed = 1, uses_anonymous_args = 0
 4173 0000 90B5     		push	{r4, r7, lr}
 4174              	.LCFI217:
 4175              		.cfi_def_cfa_offset 12
 4176              		.cfi_offset 4, -12
 4177              		.cfi_offset 7, -8
 4178              		.cfi_offset 14, -4
 4179 0002 87B0     		sub	sp, sp, #28
 4180              	.LCFI218:
 4181              		.cfi_def_cfa_offset 40
 4182 0004 00AF     		add	r7, sp, #0
 4183              	.LCFI219:
 4184              		.cfi_def_cfa_register 7
 4185 0006 7860     		str	r0, [r7, #4]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 4186              		.loc 1 1827 0
 4187 0008 0023     		movs	r3, #0
 4188 000a FB60     		str	r3, [r7, #12]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 4189              		.loc 1 1828 0
 4190 000c 1023     		movs	r3, #16
 4191 000e FB75     		strb	r3, [r7, #23]
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 4192              		.loc 1 1829 0
 4193 0010 0023     		movs	r3, #0
 4194 0012 7B81     		strh	r3, [r7, #10]	@ movhi
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
 4195              		.loc 1 1830 0
 4196 0014 0023     		movs	r3, #0
 4197 0016 BB82     		strh	r3, [r7, #20]	@ movhi
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4198              		.loc 1 1831 0
 4199 0018 0023     		movs	r3, #0
 4200 001a FB74     		strb	r3, [r7, #19]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4201              		.loc 1 1850 0
ARM GAS  /tmp/ccmShkBJ.s 			page 106


 4202 001c 7B68     		ldr	r3, [r7, #4]
 4203 001e 9A68     		ldr	r2, [r3, #8]
 4204 0020 7B68     		ldr	r3, [r7, #4]
 4205 0022 1B69     		ldr	r3, [r3, #16]
 4206 0024 1A43     		orrs	r2, r2, r3
 4207 0026 7B68     		ldr	r3, [r7, #4]
 4208 0028 5B69     		ldr	r3, [r3, #20]
 4209 002a 1A43     		orrs	r2, r2, r3
 4210 002c 7B68     		ldr	r3, [r7, #4]
 4211 002e DB69     		ldr	r3, [r3, #28]
 4212 0030 1343     		orrs	r3, r3, r2
 4213 0032 FB60     		str	r3, [r7, #12]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 4214              		.loc 1 1851 0
 4215 0034 7B68     		ldr	r3, [r7, #4]
 4216 0036 1A68     		ldr	r2, [r3]
 4217 0038 7B68     		ldr	r3, [r7, #4]
 4218 003a 1B68     		ldr	r3, [r3]
 4219 003c 1968     		ldr	r1, [r3]
 4220 003e AA4B     		ldr	r3, .L277
 4221 0040 0B40     		ands	r3, r3, r1
 4222 0042 F968     		ldr	r1, [r7, #12]
 4223 0044 0B43     		orrs	r3, r3, r1
 4224 0046 1360     		str	r3, [r2]
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * to huart->Init.StopBits value */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4225              		.loc 1 1856 0
 4226 0048 7B68     		ldr	r3, [r7, #4]
 4227 004a 1B68     		ldr	r3, [r3]
 4228 004c 7A68     		ldr	r2, [r7, #4]
 4229 004e 1268     		ldr	r2, [r2]
 4230 0050 5268     		ldr	r2, [r2, #4]
 4231 0052 22F44051 		bic	r1, r2, #12288
 4232 0056 7A68     		ldr	r2, [r7, #4]
 4233 0058 D268     		ldr	r2, [r2, #12]
 4234 005a 0A43     		orrs	r2, r2, r1
 4235 005c 5A60     		str	r2, [r3, #4]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 4236              		.loc 1 1864 0
 4237 005e 7B68     		ldr	r3, [r7, #4]
 4238 0060 9A69     		ldr	r2, [r3, #24]
 4239 0062 7B68     		ldr	r3, [r7, #4]
 4240 0064 1B6A     		ldr	r3, [r3, #32]
 4241 0066 1343     		orrs	r3, r3, r2
 4242 0068 FB60     		str	r3, [r7, #12]
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 4243              		.loc 1 1865 0
ARM GAS  /tmp/ccmShkBJ.s 			page 107


 4244 006a 7B68     		ldr	r3, [r7, #4]
 4245 006c 1B68     		ldr	r3, [r3]
 4246 006e 7A68     		ldr	r2, [r7, #4]
 4247 0070 1268     		ldr	r2, [r2]
 4248 0072 9268     		ldr	r2, [r2, #8]
 4249 0074 22F43061 		bic	r1, r2, #2816
 4250 0078 FA68     		ldr	r2, [r7, #12]
 4251 007a 0A43     		orrs	r2, r2, r1
 4252 007c 9A60     		str	r2, [r3, #8]
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4253              		.loc 1 1868 0
 4254 007e 7B68     		ldr	r3, [r7, #4]
 4255 0080 1B68     		ldr	r3, [r3]
 4256 0082 9A4A     		ldr	r2, .L277+4
 4257 0084 9342     		cmp	r3, r2
 4258 0086 1FD1     		bne	.L195
 4259              		.loc 1 1868 0 is_stmt 0 discriminator 1
 4260 0088 994B     		ldr	r3, .L277+8
 4261 008a D3F89030 		ldr	r3, [r3, #144]
 4262 008e 03F00303 		and	r3, r3, #3
 4263 0092 032B     		cmp	r3, #3
 4264 0094 00F23E81 		bhi	.L276
 4265 0098 01A2     		adr	r2, .L198
 4266 009a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4267 009e 00BF     		.p2align 2
 4268              	.L198:
 4269 00a0 B1000000 		.word	.L197+1
 4270 00a4 BD000000 		.word	.L199+1
 4271 00a8 B7000000 		.word	.L200+1
 4272 00ac C3000000 		.word	.L201+1
 4273              		.p2align 1
 4274              	.L197:
 4275              		.loc 1 1868 0 discriminator 3
 4276 00b0 0123     		movs	r3, #1
 4277 00b2 FB75     		strb	r3, [r7, #23]
 4278 00b4 2EE1     		b	.L276
 4279              	.L200:
 4280              		.loc 1 1868 0 discriminator 5
 4281 00b6 0223     		movs	r3, #2
 4282 00b8 FB75     		strb	r3, [r7, #23]
 4283 00ba 2BE1     		b	.L276
 4284              	.L199:
 4285              		.loc 1 1868 0 discriminator 4
 4286 00bc 0423     		movs	r3, #4
 4287 00be FB75     		strb	r3, [r7, #23]
 4288 00c0 28E1     		b	.L276
 4289              	.L201:
 4290              		.loc 1 1868 0 discriminator 6
 4291 00c2 0823     		movs	r3, #8
 4292 00c4 FB75     		strb	r3, [r7, #23]
 4293 00c6 25E1     		b	.L276
 4294              	.L195:
 4295              		.loc 1 1868 0 discriminator 2
 4296 00c8 7B68     		ldr	r3, [r7, #4]
 4297 00ca 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccmShkBJ.s 			page 108


 4298 00cc 894A     		ldr	r2, .L277+12
 4299 00ce 9342     		cmp	r3, r2
 4300 00d0 30D1     		bne	.L204
 4301              		.loc 1 1868 0 discriminator 7
 4302 00d2 874B     		ldr	r3, .L277+8
 4303 00d4 D3F89030 		ldr	r3, [r3, #144]
 4304 00d8 03F00C03 		and	r3, r3, #12
 4305 00dc 0C2B     		cmp	r3, #12
 4306 00de 00F21981 		bhi	.L276
 4307 00e2 01A2     		adr	r2, .L207
 4308 00e4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4309              		.p2align 2
 4310              	.L207:
 4311 00e8 1D010000 		.word	.L206+1
 4312 00ec 15030000 		.word	.L276+1
 4313 00f0 15030000 		.word	.L276+1
 4314 00f4 15030000 		.word	.L276+1
 4315 00f8 29010000 		.word	.L208+1
 4316 00fc 15030000 		.word	.L276+1
 4317 0100 15030000 		.word	.L276+1
 4318 0104 15030000 		.word	.L276+1
 4319 0108 23010000 		.word	.L209+1
 4320 010c 15030000 		.word	.L276+1
 4321 0110 15030000 		.word	.L276+1
 4322 0114 15030000 		.word	.L276+1
 4323 0118 2F010000 		.word	.L210+1
 4324              		.p2align 1
 4325              	.L206:
 4326              		.loc 1 1868 0 discriminator 9
 4327 011c 0023     		movs	r3, #0
 4328 011e FB75     		strb	r3, [r7, #23]
 4329 0120 F8E0     		b	.L276
 4330              	.L209:
 4331              		.loc 1 1868 0 discriminator 11
 4332 0122 0223     		movs	r3, #2
 4333 0124 FB75     		strb	r3, [r7, #23]
 4334 0126 F5E0     		b	.L276
 4335              	.L208:
 4336              		.loc 1 1868 0 discriminator 10
 4337 0128 0423     		movs	r3, #4
 4338 012a FB75     		strb	r3, [r7, #23]
 4339 012c F2E0     		b	.L276
 4340              	.L210:
 4341              		.loc 1 1868 0 discriminator 12
 4342 012e 0823     		movs	r3, #8
 4343 0130 FB75     		strb	r3, [r7, #23]
 4344 0132 EFE0     		b	.L276
 4345              	.L204:
 4346              		.loc 1 1868 0 discriminator 8
 4347 0134 7B68     		ldr	r3, [r7, #4]
 4348 0136 1B68     		ldr	r3, [r3]
 4349 0138 6F4A     		ldr	r2, .L277+16
 4350 013a 9342     		cmp	r3, r2
 4351 013c 1CD1     		bne	.L212
 4352              		.loc 1 1868 0 discriminator 13
 4353 013e 6C4B     		ldr	r3, .L277+8
 4354 0140 D3F89030 		ldr	r3, [r3, #144]
ARM GAS  /tmp/ccmShkBJ.s 			page 109


 4355 0144 03F03003 		and	r3, r3, #48
 4356 0148 102B     		cmp	r3, #16
 4357 014a 0FD0     		beq	.L214
 4358 014c 102B     		cmp	r3, #16
 4359 014e 02D8     		bhi	.L215
 4360 0150 002B     		cmp	r3, #0
 4361 0152 05D0     		beq	.L216
 4362 0154 DEE0     		b	.L276
 4363              	.L215:
 4364 0156 202B     		cmp	r3, #32
 4365 0158 05D0     		beq	.L217
 4366 015a 302B     		cmp	r3, #48
 4367 015c 09D0     		beq	.L218
 4368 015e D9E0     		b	.L276
 4369              	.L216:
 4370              		.loc 1 1868 0 discriminator 15
 4371 0160 0023     		movs	r3, #0
 4372 0162 FB75     		strb	r3, [r7, #23]
 4373 0164 D6E0     		b	.L276
 4374              	.L217:
 4375              		.loc 1 1868 0 discriminator 17
 4376 0166 0223     		movs	r3, #2
 4377 0168 FB75     		strb	r3, [r7, #23]
 4378 016a D3E0     		b	.L276
 4379              	.L214:
 4380              		.loc 1 1868 0 discriminator 16
 4381 016c 0423     		movs	r3, #4
 4382 016e FB75     		strb	r3, [r7, #23]
 4383 0170 D0E0     		b	.L276
 4384              	.L218:
 4385              		.loc 1 1868 0 discriminator 18
 4386 0172 0823     		movs	r3, #8
 4387 0174 FB75     		strb	r3, [r7, #23]
 4388 0176 CDE0     		b	.L276
 4389              	.L212:
 4390              		.loc 1 1868 0 discriminator 14
 4391 0178 7B68     		ldr	r3, [r7, #4]
 4392 017a 1B68     		ldr	r3, [r3]
 4393 017c 5F4A     		ldr	r2, .L277+20
 4394 017e 9342     		cmp	r3, r2
 4395 0180 1CD1     		bne	.L220
 4396              		.loc 1 1868 0 discriminator 19
 4397 0182 5B4B     		ldr	r3, .L277+8
 4398 0184 D3F89030 		ldr	r3, [r3, #144]
 4399 0188 03F0C003 		and	r3, r3, #192
 4400 018c 402B     		cmp	r3, #64
 4401 018e 0FD0     		beq	.L222
 4402 0190 402B     		cmp	r3, #64
 4403 0192 02D8     		bhi	.L223
 4404 0194 002B     		cmp	r3, #0
 4405 0196 05D0     		beq	.L224
 4406 0198 BCE0     		b	.L276
 4407              	.L223:
 4408 019a 802B     		cmp	r3, #128
 4409 019c 05D0     		beq	.L225
 4410 019e C02B     		cmp	r3, #192
 4411 01a0 09D0     		beq	.L226
ARM GAS  /tmp/ccmShkBJ.s 			page 110


 4412 01a2 B7E0     		b	.L276
 4413              	.L224:
 4414              		.loc 1 1868 0 discriminator 21
 4415 01a4 0023     		movs	r3, #0
 4416 01a6 FB75     		strb	r3, [r7, #23]
 4417 01a8 B4E0     		b	.L276
 4418              	.L225:
 4419              		.loc 1 1868 0 discriminator 23
 4420 01aa 0223     		movs	r3, #2
 4421 01ac FB75     		strb	r3, [r7, #23]
 4422 01ae B1E0     		b	.L276
 4423              	.L222:
 4424              		.loc 1 1868 0 discriminator 22
 4425 01b0 0423     		movs	r3, #4
 4426 01b2 FB75     		strb	r3, [r7, #23]
 4427 01b4 AEE0     		b	.L276
 4428              	.L226:
 4429              		.loc 1 1868 0 discriminator 24
 4430 01b6 0823     		movs	r3, #8
 4431 01b8 FB75     		strb	r3, [r7, #23]
 4432 01ba ABE0     		b	.L276
 4433              	.L220:
 4434              		.loc 1 1868 0 discriminator 20
 4435 01bc 7B68     		ldr	r3, [r7, #4]
 4436 01be 1B68     		ldr	r3, [r3]
 4437 01c0 4F4A     		ldr	r2, .L277+24
 4438 01c2 9342     		cmp	r3, r2
 4439 01c4 20D1     		bne	.L228
 4440              		.loc 1 1868 0 discriminator 25
 4441 01c6 4A4B     		ldr	r3, .L277+8
 4442 01c8 D3F89030 		ldr	r3, [r3, #144]
 4443 01cc 03F44073 		and	r3, r3, #768
 4444 01d0 B3F5807F 		cmp	r3, #256
 4445 01d4 12D0     		beq	.L230
 4446 01d6 B3F5807F 		cmp	r3, #256
 4447 01da 02D8     		bhi	.L231
 4448 01dc 002B     		cmp	r3, #0
 4449 01de 07D0     		beq	.L232
 4450 01e0 98E0     		b	.L276
 4451              	.L231:
 4452 01e2 B3F5007F 		cmp	r3, #512
 4453 01e6 06D0     		beq	.L233
 4454 01e8 B3F5407F 		cmp	r3, #768
 4455 01ec 09D0     		beq	.L234
 4456 01ee 91E0     		b	.L276
 4457              	.L232:
 4458              		.loc 1 1868 0 discriminator 27
 4459 01f0 0023     		movs	r3, #0
 4460 01f2 FB75     		strb	r3, [r7, #23]
 4461 01f4 8EE0     		b	.L276
 4462              	.L233:
 4463              		.loc 1 1868 0 discriminator 29
 4464 01f6 0223     		movs	r3, #2
 4465 01f8 FB75     		strb	r3, [r7, #23]
 4466 01fa 8BE0     		b	.L276
 4467              	.L230:
 4468              		.loc 1 1868 0 discriminator 28
ARM GAS  /tmp/ccmShkBJ.s 			page 111


 4469 01fc 0423     		movs	r3, #4
 4470 01fe FB75     		strb	r3, [r7, #23]
 4471 0200 88E0     		b	.L276
 4472              	.L234:
 4473              		.loc 1 1868 0 discriminator 30
 4474 0202 0823     		movs	r3, #8
 4475 0204 FB75     		strb	r3, [r7, #23]
 4476 0206 85E0     		b	.L276
 4477              	.L228:
 4478              		.loc 1 1868 0 discriminator 26
 4479 0208 7B68     		ldr	r3, [r7, #4]
 4480 020a 1B68     		ldr	r3, [r3]
 4481 020c 3D4A     		ldr	r2, .L277+28
 4482 020e 9342     		cmp	r3, r2
 4483 0210 20D1     		bne	.L236
 4484              		.loc 1 1868 0 discriminator 31
 4485 0212 374B     		ldr	r3, .L277+8
 4486 0214 D3F89030 		ldr	r3, [r3, #144]
 4487 0218 03F44063 		and	r3, r3, #3072
 4488 021c B3F5806F 		cmp	r3, #1024
 4489 0220 12D0     		beq	.L238
 4490 0222 B3F5806F 		cmp	r3, #1024
 4491 0226 02D8     		bhi	.L239
 4492 0228 002B     		cmp	r3, #0
 4493 022a 07D0     		beq	.L240
 4494 022c 72E0     		b	.L276
 4495              	.L239:
 4496 022e B3F5006F 		cmp	r3, #2048
 4497 0232 06D0     		beq	.L241
 4498 0234 B3F5406F 		cmp	r3, #3072
 4499 0238 09D0     		beq	.L242
 4500 023a 6BE0     		b	.L276
 4501              	.L240:
 4502              		.loc 1 1868 0 discriminator 33
 4503 023c 0123     		movs	r3, #1
 4504 023e FB75     		strb	r3, [r7, #23]
 4505 0240 68E0     		b	.L276
 4506              	.L241:
 4507              		.loc 1 1868 0 discriminator 35
 4508 0242 0223     		movs	r3, #2
 4509 0244 FB75     		strb	r3, [r7, #23]
 4510 0246 65E0     		b	.L276
 4511              	.L238:
 4512              		.loc 1 1868 0 discriminator 34
 4513 0248 0423     		movs	r3, #4
 4514 024a FB75     		strb	r3, [r7, #23]
 4515 024c 62E0     		b	.L276
 4516              	.L242:
 4517              		.loc 1 1868 0 discriminator 36
 4518 024e 0823     		movs	r3, #8
 4519 0250 FB75     		strb	r3, [r7, #23]
 4520 0252 5FE0     		b	.L276
 4521              	.L236:
 4522              		.loc 1 1868 0 discriminator 32
 4523 0254 7B68     		ldr	r3, [r7, #4]
 4524 0256 1B68     		ldr	r3, [r3]
 4525 0258 2B4A     		ldr	r2, .L277+32
ARM GAS  /tmp/ccmShkBJ.s 			page 112


 4526 025a 9342     		cmp	r3, r2
 4527 025c 20D1     		bne	.L244
 4528              		.loc 1 1868 0 discriminator 37
 4529 025e 244B     		ldr	r3, .L277+8
 4530 0260 D3F89030 		ldr	r3, [r3, #144]
 4531 0264 03F44053 		and	r3, r3, #12288
 4532 0268 B3F5805F 		cmp	r3, #4096
 4533 026c 12D0     		beq	.L246
 4534 026e B3F5805F 		cmp	r3, #4096
 4535 0272 02D8     		bhi	.L247
 4536 0274 002B     		cmp	r3, #0
 4537 0276 07D0     		beq	.L248
 4538 0278 4CE0     		b	.L276
 4539              	.L247:
 4540 027a B3F5005F 		cmp	r3, #8192
 4541 027e 06D0     		beq	.L249
 4542 0280 B3F5405F 		cmp	r3, #12288
 4543 0284 09D0     		beq	.L250
 4544 0286 45E0     		b	.L276
 4545              	.L248:
 4546              		.loc 1 1868 0 discriminator 39
 4547 0288 0023     		movs	r3, #0
 4548 028a FB75     		strb	r3, [r7, #23]
 4549 028c 42E0     		b	.L276
 4550              	.L249:
 4551              		.loc 1 1868 0 discriminator 41
 4552 028e 0223     		movs	r3, #2
 4553 0290 FB75     		strb	r3, [r7, #23]
 4554 0292 3FE0     		b	.L276
 4555              	.L246:
 4556              		.loc 1 1868 0 discriminator 40
 4557 0294 0423     		movs	r3, #4
 4558 0296 FB75     		strb	r3, [r7, #23]
 4559 0298 3CE0     		b	.L276
 4560              	.L250:
 4561              		.loc 1 1868 0 discriminator 42
 4562 029a 0823     		movs	r3, #8
 4563 029c FB75     		strb	r3, [r7, #23]
 4564 029e 39E0     		b	.L276
 4565              	.L244:
 4566              		.loc 1 1868 0 discriminator 38
 4567 02a0 7B68     		ldr	r3, [r7, #4]
 4568 02a2 1B68     		ldr	r3, [r3]
 4569 02a4 194A     		ldr	r2, .L277+36
 4570 02a6 9342     		cmp	r3, r2
 4571 02a8 35D1     		bne	.L203
 4572              		.loc 1 1868 0 discriminator 43
 4573 02aa 114B     		ldr	r3, .L277+8
 4574 02ac D3F89030 		ldr	r3, [r3, #144]
 4575 02b0 03F44043 		and	r3, r3, #49152
 4576 02b4 B3F5804F 		cmp	r3, #16384
 4577 02b8 12D0     		beq	.L253
 4578 02ba B3F5804F 		cmp	r3, #16384
 4579 02be 02D8     		bhi	.L254
 4580 02c0 002B     		cmp	r3, #0
 4581 02c2 07D0     		beq	.L255
 4582 02c4 26E0     		b	.L276
ARM GAS  /tmp/ccmShkBJ.s 			page 113


 4583              	.L254:
 4584 02c6 B3F5004F 		cmp	r3, #32768
 4585 02ca 06D0     		beq	.L256
 4586 02cc B3F5404F 		cmp	r3, #49152
 4587 02d0 1ED0     		beq	.L257
 4588 02d2 1FE0     		b	.L276
 4589              	.L255:
 4590              		.loc 1 1868 0 discriminator 44
 4591 02d4 0023     		movs	r3, #0
 4592 02d6 FB75     		strb	r3, [r7, #23]
 4593 02d8 1CE0     		b	.L276
 4594              	.L256:
 4595              		.loc 1 1868 0 discriminator 46
 4596 02da 0223     		movs	r3, #2
 4597 02dc FB75     		strb	r3, [r7, #23]
 4598 02de 19E0     		b	.L276
 4599              	.L253:
 4600              		.loc 1 1868 0 discriminator 45
 4601 02e0 0423     		movs	r3, #4
 4602 02e2 FB75     		strb	r3, [r7, #23]
 4603 02e4 16E0     		b	.L276
 4604              	.L278:
 4605 02e6 00BF     		.align	2
 4606              	.L277:
 4607 02e8 F369FFEF 		.word	-268473869
 4608 02ec 00100140 		.word	1073811456
 4609 02f0 00380240 		.word	1073887232
 4610 02f4 00440040 		.word	1073759232
 4611 02f8 00480040 		.word	1073760256
 4612 02fc 004C0040 		.word	1073761280
 4613 0300 00500040 		.word	1073762304
 4614 0304 00140140 		.word	1073812480
 4615 0308 00780040 		.word	1073772544
 4616 030c 007C0040 		.word	1073773568
 4617              	.L257:
 4618              		.loc 1 1868 0 discriminator 47
 4619 0310 0823     		movs	r3, #8
 4620 0312 FB75     		strb	r3, [r7, #23]
 4621              	.L276:
 4622              		.loc 1 1868 0
 4623 0314 00BF     		nop
 4624              	.L203:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4625              		.loc 1 1871 0 is_stmt 1
 4626 0316 7B68     		ldr	r3, [r7, #4]
 4627 0318 DB69     		ldr	r3, [r3, #28]
 4628 031a B3F5004F 		cmp	r3, #32768
 4629 031e 6CD1     		bne	.L258
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 4630              		.loc 1 1873 0
 4631 0320 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4632 0322 082B     		cmp	r3, #8
 4633 0324 54D8     		bhi	.L259
 4634 0326 01A2     		adr	r2, .L261
ARM GAS  /tmp/ccmShkBJ.s 			page 114


 4635 0328 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4636              		.p2align 2
 4637              	.L261:
 4638 032c 51030000 		.word	.L260+1
 4639 0330 6D030000 		.word	.L262+1
 4640 0334 89030000 		.word	.L263+1
 4641 0338 D1030000 		.word	.L259+1
 4642 033c 9F030000 		.word	.L264+1
 4643 0340 D1030000 		.word	.L259+1
 4644 0344 D1030000 		.word	.L259+1
 4645 0348 D1030000 		.word	.L259+1
 4646 034c BB030000 		.word	.L265+1
 4647              		.p2align 1
 4648              	.L260:
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4649              		.loc 1 1876 0
 4650 0350 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4651 0354 0346     		mov	r3, r0
 4652 0356 5A00     		lsls	r2, r3, #1
 4653 0358 7B68     		ldr	r3, [r7, #4]
 4654 035a 5B68     		ldr	r3, [r3, #4]
 4655 035c 5B08     		lsrs	r3, r3, #1
 4656 035e 1A44     		add	r2, r2, r3
 4657 0360 7B68     		ldr	r3, [r7, #4]
 4658 0362 5B68     		ldr	r3, [r3, #4]
 4659 0364 B2FBF3F3 		udiv	r3, r2, r3
 4660 0368 BB82     		strh	r3, [r7, #20]	@ movhi
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4661              		.loc 1 1877 0
 4662 036a 34E0     		b	.L266
 4663              	.L262:
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 4664              		.loc 1 1879 0
 4665 036c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4666 0370 0346     		mov	r3, r0
 4667 0372 5A00     		lsls	r2, r3, #1
 4668 0374 7B68     		ldr	r3, [r7, #4]
 4669 0376 5B68     		ldr	r3, [r3, #4]
 4670 0378 5B08     		lsrs	r3, r3, #1
 4671 037a 1A44     		add	r2, r2, r3
 4672 037c 7B68     		ldr	r3, [r7, #4]
 4673 037e 5B68     		ldr	r3, [r3, #4]
 4674 0380 B2FBF3F3 		udiv	r3, r2, r3
 4675 0384 BB82     		strh	r3, [r7, #20]	@ movhi
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4676              		.loc 1 1880 0
 4677 0386 26E0     		b	.L266
 4678              	.L263:
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 4679              		.loc 1 1882 0
 4680 0388 7B68     		ldr	r3, [r7, #4]
 4681 038a 5B68     		ldr	r3, [r3, #4]
 4682 038c 5A08     		lsrs	r2, r3, #1
ARM GAS  /tmp/ccmShkBJ.s 			page 115


 4683 038e 514B     		ldr	r3, .L279
 4684 0390 1344     		add	r3, r3, r2
 4685 0392 7A68     		ldr	r2, [r7, #4]
 4686 0394 5268     		ldr	r2, [r2, #4]
 4687 0396 B3FBF2F3 		udiv	r3, r3, r2
 4688 039a BB82     		strh	r3, [r7, #20]	@ movhi
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4689              		.loc 1 1883 0
 4690 039c 1BE0     		b	.L266
 4691              	.L264:
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 4692              		.loc 1 1885 0
 4693 039e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4694 03a2 0346     		mov	r3, r0
 4695 03a4 5A00     		lsls	r2, r3, #1
 4696 03a6 7B68     		ldr	r3, [r7, #4]
 4697 03a8 5B68     		ldr	r3, [r3, #4]
 4698 03aa 5B08     		lsrs	r3, r3, #1
 4699 03ac 1A44     		add	r2, r2, r3
 4700 03ae 7B68     		ldr	r3, [r7, #4]
 4701 03b0 5B68     		ldr	r3, [r3, #4]
 4702 03b2 B2FBF3F3 		udiv	r3, r2, r3
 4703 03b6 BB82     		strh	r3, [r7, #20]	@ movhi
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4704              		.loc 1 1886 0
 4705 03b8 0DE0     		b	.L266
 4706              	.L265:
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 4707              		.loc 1 1888 0
 4708 03ba 7B68     		ldr	r3, [r7, #4]
 4709 03bc 5B68     		ldr	r3, [r3, #4]
 4710 03be 5B08     		lsrs	r3, r3, #1
 4711 03c0 03F58032 		add	r2, r3, #65536
 4712 03c4 7B68     		ldr	r3, [r7, #4]
 4713 03c6 5B68     		ldr	r3, [r3, #4]
 4714 03c8 B2FBF3F3 		udiv	r3, r2, r3
 4715 03cc BB82     		strh	r3, [r7, #20]	@ movhi
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4716              		.loc 1 1889 0
 4717 03ce 02E0     		b	.L266
 4718              	.L259:
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 4719              		.loc 1 1892 0
 4720 03d0 0123     		movs	r3, #1
 4721 03d2 FB74     		strb	r3, [r7, #19]
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4722              		.loc 1 1893 0
 4723 03d4 00BF     		nop
 4724              	.L266:
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
 4725              		.loc 1 1896 0
ARM GAS  /tmp/ccmShkBJ.s 			page 116


 4726 03d6 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 4727 03d8 23F00F03 		bic	r3, r3, #15
 4728 03dc 7B81     		strh	r3, [r7, #10]	@ movhi
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4729              		.loc 1 1897 0
 4730 03de BB8A     		ldrh	r3, [r7, #20]
 4731 03e0 5B10     		asrs	r3, r3, #1
 4732 03e2 9BB2     		uxth	r3, r3
 4733 03e4 03F00703 		and	r3, r3, #7
 4734 03e8 9AB2     		uxth	r2, r3
 4735 03ea 7B89     		ldrh	r3, [r7, #10]	@ movhi
 4736 03ec 1343     		orrs	r3, r3, r2
 4737 03ee 7B81     		strh	r3, [r7, #10]	@ movhi
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 4738              		.loc 1 1898 0
 4739 03f0 7B68     		ldr	r3, [r7, #4]
 4740 03f2 1B68     		ldr	r3, [r3]
 4741 03f4 7A89     		ldrh	r2, [r7, #10]
 4742 03f6 DA60     		str	r2, [r3, #12]
 4743 03f8 67E0     		b	.L267
 4744              	.L258:
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 4745              		.loc 1 1902 0
 4746 03fa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4747 03fc 082B     		cmp	r3, #8
 4748 03fe 61D8     		bhi	.L268
 4749 0400 01A2     		adr	r2, .L270
 4750 0402 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4751 0406 00BF     		.p2align 2
 4752              	.L270:
 4753 0408 2D040000 		.word	.L269+1
 4754 040c 4D040000 		.word	.L271+1
 4755 0410 6D040000 		.word	.L272+1
 4756 0414 C5040000 		.word	.L268+1
 4757 0418 89040000 		.word	.L273+1
 4758 041c C5040000 		.word	.L268+1
 4759 0420 C5040000 		.word	.L268+1
 4760 0424 C5040000 		.word	.L268+1
 4761 0428 A9040000 		.word	.L274+1
 4762              		.p2align 1
 4763              	.L269:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 4764              		.loc 1 1905 0
 4765 042c 7B68     		ldr	r3, [r7, #4]
 4766 042e 1C68     		ldr	r4, [r3]
 4767 0430 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4768 0434 0246     		mov	r2, r0
 4769 0436 7B68     		ldr	r3, [r7, #4]
 4770 0438 5B68     		ldr	r3, [r3, #4]
 4771 043a 5B08     		lsrs	r3, r3, #1
 4772 043c 1A44     		add	r2, r2, r3
 4773 043e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 117


 4774 0440 5B68     		ldr	r3, [r3, #4]
 4775 0442 B2FBF3F3 		udiv	r3, r2, r3
 4776 0446 9BB2     		uxth	r3, r3
 4777 0448 E360     		str	r3, [r4, #12]
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4778              		.loc 1 1906 0
 4779 044a 3EE0     		b	.L267
 4780              	.L271:
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 4781              		.loc 1 1908 0
 4782 044c 7B68     		ldr	r3, [r7, #4]
 4783 044e 1C68     		ldr	r4, [r3]
 4784 0450 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4785 0454 0246     		mov	r2, r0
 4786 0456 7B68     		ldr	r3, [r7, #4]
 4787 0458 5B68     		ldr	r3, [r3, #4]
 4788 045a 5B08     		lsrs	r3, r3, #1
 4789 045c 1A44     		add	r2, r2, r3
 4790 045e 7B68     		ldr	r3, [r7, #4]
 4791 0460 5B68     		ldr	r3, [r3, #4]
 4792 0462 B2FBF3F3 		udiv	r3, r2, r3
 4793 0466 9BB2     		uxth	r3, r3
 4794 0468 E360     		str	r3, [r4, #12]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4795              		.loc 1 1909 0
 4796 046a 2EE0     		b	.L267
 4797              	.L272:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 4798              		.loc 1 1911 0
 4799 046c 7B68     		ldr	r3, [r7, #4]
 4800 046e 1A68     		ldr	r2, [r3]
 4801 0470 7B68     		ldr	r3, [r7, #4]
 4802 0472 5B68     		ldr	r3, [r3, #4]
 4803 0474 5908     		lsrs	r1, r3, #1
 4804 0476 184B     		ldr	r3, .L279+4
 4805 0478 0B44     		add	r3, r3, r1
 4806 047a 7968     		ldr	r1, [r7, #4]
 4807 047c 4968     		ldr	r1, [r1, #4]
 4808 047e B3FBF1F3 		udiv	r3, r3, r1
 4809 0482 9BB2     		uxth	r3, r3
 4810 0484 D360     		str	r3, [r2, #12]
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4811              		.loc 1 1912 0
 4812 0486 20E0     		b	.L267
 4813              	.L273:
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 4814              		.loc 1 1914 0
 4815 0488 7B68     		ldr	r3, [r7, #4]
 4816 048a 1C68     		ldr	r4, [r3]
 4817 048c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4818 0490 0246     		mov	r2, r0
 4819 0492 7B68     		ldr	r3, [r7, #4]
 4820 0494 5B68     		ldr	r3, [r3, #4]
 4821 0496 5B08     		lsrs	r3, r3, #1
ARM GAS  /tmp/ccmShkBJ.s 			page 118


 4822 0498 1A44     		add	r2, r2, r3
 4823 049a 7B68     		ldr	r3, [r7, #4]
 4824 049c 5B68     		ldr	r3, [r3, #4]
 4825 049e B2FBF3F3 		udiv	r3, r2, r3
 4826 04a2 9BB2     		uxth	r3, r3
 4827 04a4 E360     		str	r3, [r4, #12]
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4828              		.loc 1 1915 0
 4829 04a6 10E0     		b	.L267
 4830              	.L274:
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 4831              		.loc 1 1917 0
 4832 04a8 7B68     		ldr	r3, [r7, #4]
 4833 04aa 1B68     		ldr	r3, [r3]
 4834 04ac 7A68     		ldr	r2, [r7, #4]
 4835 04ae 5268     		ldr	r2, [r2, #4]
 4836 04b0 5208     		lsrs	r2, r2, #1
 4837 04b2 02F50041 		add	r1, r2, #32768
 4838 04b6 7A68     		ldr	r2, [r7, #4]
 4839 04b8 5268     		ldr	r2, [r2, #4]
 4840 04ba B1FBF2F2 		udiv	r2, r1, r2
 4841 04be 92B2     		uxth	r2, r2
 4842 04c0 DA60     		str	r2, [r3, #12]
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4843              		.loc 1 1918 0
 4844 04c2 02E0     		b	.L267
 4845              	.L268:
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 4846              		.loc 1 1921 0
 4847 04c4 0123     		movs	r3, #1
 4848 04c6 FB74     		strb	r3, [r7, #19]
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4849              		.loc 1 1922 0
 4850 04c8 00BF     		nop
 4851              	.L267:
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
 4852              		.loc 1 1926 0
 4853 04ca FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4854              		.loc 1 1928 0
 4855 04cc 1846     		mov	r0, r3
 4856 04ce 1C37     		adds	r7, r7, #28
 4857              	.LCFI220:
 4858              		.cfi_def_cfa_offset 12
 4859 04d0 BD46     		mov	sp, r7
 4860              	.LCFI221:
 4861              		.cfi_def_cfa_register 13
 4862              		@ sp needed
 4863 04d2 90BD     		pop	{r4, r7, pc}
 4864              	.L280:
ARM GAS  /tmp/ccmShkBJ.s 			page 119


 4865              		.align	2
 4866              	.L279:
 4867 04d4 0048E801 		.word	32000000
 4868 04d8 0024F400 		.word	16000000
 4869              		.cfi_endproc
 4870              	.LFE176:
 4872              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4873              		.align	1
 4874              		.global	UART_AdvFeatureConfig
 4875              		.syntax unified
 4876              		.thumb
 4877              		.thumb_func
 4878              		.fpu fpv4-sp-d16
 4880              	UART_AdvFeatureConfig:
 4881              	.LFB177:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4882              		.loc 1 1937 0
 4883              		.cfi_startproc
 4884              		@ args = 0, pretend = 0, frame = 8
 4885              		@ frame_needed = 1, uses_anonymous_args = 0
 4886              		@ link register save eliminated.
 4887 0000 80B4     		push	{r7}
 4888              	.LCFI222:
 4889              		.cfi_def_cfa_offset 4
 4890              		.cfi_offset 7, -4
 4891 0002 83B0     		sub	sp, sp, #12
 4892              	.LCFI223:
 4893              		.cfi_def_cfa_offset 16
 4894 0004 00AF     		add	r7, sp, #0
 4895              	.LCFI224:
 4896              		.cfi_def_cfa_register 7
 4897 0006 7860     		str	r0, [r7, #4]
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 4898              		.loc 1 1942 0
 4899 0008 7B68     		ldr	r3, [r7, #4]
 4900 000a 5B6A     		ldr	r3, [r3, #36]
 4901 000c 03F00103 		and	r3, r3, #1
 4902 0010 002B     		cmp	r3, #0
 4903 0012 0AD0     		beq	.L282
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 4904              		.loc 1 1945 0
 4905 0014 7B68     		ldr	r3, [r7, #4]
 4906 0016 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccmShkBJ.s 			page 120


 4907 0018 7A68     		ldr	r2, [r7, #4]
 4908 001a 1268     		ldr	r2, [r2]
 4909 001c 5268     		ldr	r2, [r2, #4]
 4910 001e 22F40031 		bic	r1, r2, #131072
 4911 0022 7A68     		ldr	r2, [r7, #4]
 4912 0024 926A     		ldr	r2, [r2, #40]
 4913 0026 0A43     		orrs	r2, r2, r1
 4914 0028 5A60     		str	r2, [r3, #4]
 4915              	.L282:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 4916              		.loc 1 1949 0
 4917 002a 7B68     		ldr	r3, [r7, #4]
 4918 002c 5B6A     		ldr	r3, [r3, #36]
 4919 002e 03F00203 		and	r3, r3, #2
 4920 0032 002B     		cmp	r3, #0
 4921 0034 0AD0     		beq	.L283
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 4922              		.loc 1 1952 0
 4923 0036 7B68     		ldr	r3, [r7, #4]
 4924 0038 1B68     		ldr	r3, [r3]
 4925 003a 7A68     		ldr	r2, [r7, #4]
 4926 003c 1268     		ldr	r2, [r2]
 4927 003e 5268     		ldr	r2, [r2, #4]
 4928 0040 22F48031 		bic	r1, r2, #65536
 4929 0044 7A68     		ldr	r2, [r7, #4]
 4930 0046 D26A     		ldr	r2, [r2, #44]
 4931 0048 0A43     		orrs	r2, r2, r1
 4932 004a 5A60     		str	r2, [r3, #4]
 4933              	.L283:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 4934              		.loc 1 1956 0
 4935 004c 7B68     		ldr	r3, [r7, #4]
 4936 004e 5B6A     		ldr	r3, [r3, #36]
 4937 0050 03F00403 		and	r3, r3, #4
 4938 0054 002B     		cmp	r3, #0
 4939 0056 0AD0     		beq	.L284
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 4940              		.loc 1 1959 0
 4941 0058 7B68     		ldr	r3, [r7, #4]
 4942 005a 1B68     		ldr	r3, [r3]
 4943 005c 7A68     		ldr	r2, [r7, #4]
 4944 005e 1268     		ldr	r2, [r2]
 4945 0060 5268     		ldr	r2, [r2, #4]
 4946 0062 22F48021 		bic	r1, r2, #262144
 4947 0066 7A68     		ldr	r2, [r7, #4]
 4948 0068 126B     		ldr	r2, [r2, #48]
 4949 006a 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccmShkBJ.s 			page 121


 4950 006c 5A60     		str	r2, [r3, #4]
 4951              	.L284:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 4952              		.loc 1 1963 0
 4953 006e 7B68     		ldr	r3, [r7, #4]
 4954 0070 5B6A     		ldr	r3, [r3, #36]
 4955 0072 03F00803 		and	r3, r3, #8
 4956 0076 002B     		cmp	r3, #0
 4957 0078 0AD0     		beq	.L285
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 4958              		.loc 1 1966 0
 4959 007a 7B68     		ldr	r3, [r7, #4]
 4960 007c 1B68     		ldr	r3, [r3]
 4961 007e 7A68     		ldr	r2, [r7, #4]
 4962 0080 1268     		ldr	r2, [r2]
 4963 0082 5268     		ldr	r2, [r2, #4]
 4964 0084 22F40041 		bic	r1, r2, #32768
 4965 0088 7A68     		ldr	r2, [r7, #4]
 4966 008a 526B     		ldr	r2, [r2, #52]
 4967 008c 0A43     		orrs	r2, r2, r1
 4968 008e 5A60     		str	r2, [r3, #4]
 4969              	.L285:
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 4970              		.loc 1 1970 0
 4971 0090 7B68     		ldr	r3, [r7, #4]
 4972 0092 5B6A     		ldr	r3, [r3, #36]
 4973 0094 03F01003 		and	r3, r3, #16
 4974 0098 002B     		cmp	r3, #0
 4975 009a 0AD0     		beq	.L286
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 4976              		.loc 1 1973 0
 4977 009c 7B68     		ldr	r3, [r7, #4]
 4978 009e 1B68     		ldr	r3, [r3]
 4979 00a0 7A68     		ldr	r2, [r7, #4]
 4980 00a2 1268     		ldr	r2, [r2]
 4981 00a4 9268     		ldr	r2, [r2, #8]
 4982 00a6 22F48051 		bic	r1, r2, #4096
 4983 00aa 7A68     		ldr	r2, [r7, #4]
 4984 00ac 926B     		ldr	r2, [r2, #56]
 4985 00ae 0A43     		orrs	r2, r2, r1
 4986 00b0 9A60     		str	r2, [r3, #8]
 4987              	.L286:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 4988              		.loc 1 1977 0
ARM GAS  /tmp/ccmShkBJ.s 			page 122


 4989 00b2 7B68     		ldr	r3, [r7, #4]
 4990 00b4 5B6A     		ldr	r3, [r3, #36]
 4991 00b6 03F02003 		and	r3, r3, #32
 4992 00ba 002B     		cmp	r3, #0
 4993 00bc 0AD0     		beq	.L287
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 4994              		.loc 1 1980 0
 4995 00be 7B68     		ldr	r3, [r7, #4]
 4996 00c0 1B68     		ldr	r3, [r3]
 4997 00c2 7A68     		ldr	r2, [r7, #4]
 4998 00c4 1268     		ldr	r2, [r2]
 4999 00c6 9268     		ldr	r2, [r2, #8]
 5000 00c8 22F40051 		bic	r1, r2, #8192
 5001 00cc 7A68     		ldr	r2, [r7, #4]
 5002 00ce D26B     		ldr	r2, [r2, #60]
 5003 00d0 0A43     		orrs	r2, r2, r1
 5004 00d2 9A60     		str	r2, [r3, #8]
 5005              	.L287:
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5006              		.loc 1 1984 0
 5007 00d4 7B68     		ldr	r3, [r7, #4]
 5008 00d6 5B6A     		ldr	r3, [r3, #36]
 5009 00d8 03F04003 		and	r3, r3, #64
 5010 00dc 002B     		cmp	r3, #0
 5011 00de 1AD0     		beq	.L288
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5012              		.loc 1 1987 0
 5013 00e0 7B68     		ldr	r3, [r7, #4]
 5014 00e2 1B68     		ldr	r3, [r3]
 5015 00e4 7A68     		ldr	r2, [r7, #4]
 5016 00e6 1268     		ldr	r2, [r2]
 5017 00e8 5268     		ldr	r2, [r2, #4]
 5018 00ea 22F48011 		bic	r1, r2, #1048576
 5019 00ee 7A68     		ldr	r2, [r7, #4]
 5020 00f0 126C     		ldr	r2, [r2, #64]
 5021 00f2 0A43     		orrs	r2, r2, r1
 5022 00f4 5A60     		str	r2, [r3, #4]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5023              		.loc 1 1989 0
 5024 00f6 7B68     		ldr	r3, [r7, #4]
 5025 00f8 1B6C     		ldr	r3, [r3, #64]
 5026 00fa B3F5801F 		cmp	r3, #1048576
 5027 00fe 0AD1     		bne	.L288
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5028              		.loc 1 1992 0
 5029 0100 7B68     		ldr	r3, [r7, #4]
 5030 0102 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccmShkBJ.s 			page 123


 5031 0104 7A68     		ldr	r2, [r7, #4]
 5032 0106 1268     		ldr	r2, [r2]
 5033 0108 5268     		ldr	r2, [r2, #4]
 5034 010a 22F4C001 		bic	r1, r2, #6291456
 5035 010e 7A68     		ldr	r2, [r7, #4]
 5036 0110 526C     		ldr	r2, [r2, #68]
 5037 0112 0A43     		orrs	r2, r2, r1
 5038 0114 5A60     		str	r2, [r3, #4]
 5039              	.L288:
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5040              		.loc 1 1997 0
 5041 0116 7B68     		ldr	r3, [r7, #4]
 5042 0118 5B6A     		ldr	r3, [r3, #36]
 5043 011a 03F08003 		and	r3, r3, #128
 5044 011e 002B     		cmp	r3, #0
 5045 0120 0AD0     		beq	.L290
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5046              		.loc 1 2000 0
 5047 0122 7B68     		ldr	r3, [r7, #4]
 5048 0124 1B68     		ldr	r3, [r3]
 5049 0126 7A68     		ldr	r2, [r7, #4]
 5050 0128 1268     		ldr	r2, [r2]
 5051 012a 5268     		ldr	r2, [r2, #4]
 5052 012c 22F40021 		bic	r1, r2, #524288
 5053 0130 7A68     		ldr	r2, [r7, #4]
 5054 0132 926C     		ldr	r2, [r2, #72]
 5055 0134 0A43     		orrs	r2, r2, r1
 5056 0136 5A60     		str	r2, [r3, #4]
 5057              	.L290:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5058              		.loc 1 2002 0
 5059 0138 00BF     		nop
 5060 013a 0C37     		adds	r7, r7, #12
 5061              	.LCFI225:
 5062              		.cfi_def_cfa_offset 4
 5063 013c BD46     		mov	sp, r7
 5064              	.LCFI226:
 5065              		.cfi_def_cfa_register 13
 5066              		@ sp needed
 5067 013e 5DF8047B 		ldr	r7, [sp], #4
 5068              	.LCFI227:
 5069              		.cfi_restore 7
 5070              		.cfi_def_cfa_offset 0
 5071 0142 7047     		bx	lr
 5072              		.cfi_endproc
 5073              	.LFE177:
 5075              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5076              		.align	1
 5077              		.global	UART_CheckIdleState
 5078              		.syntax unified
ARM GAS  /tmp/ccmShkBJ.s 			page 124


 5079              		.thumb
 5080              		.thumb_func
 5081              		.fpu fpv4-sp-d16
 5083              	UART_CheckIdleState:
 5084              	.LFB178:
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5085              		.loc 1 2012 0
 5086              		.cfi_startproc
 5087              		@ args = 0, pretend = 0, frame = 16
 5088              		@ frame_needed = 1, uses_anonymous_args = 0
 5089 0000 80B5     		push	{r7, lr}
 5090              	.LCFI228:
 5091              		.cfi_def_cfa_offset 8
 5092              		.cfi_offset 7, -8
 5093              		.cfi_offset 14, -4
 5094 0002 86B0     		sub	sp, sp, #24
 5095              	.LCFI229:
 5096              		.cfi_def_cfa_offset 32
 5097 0004 02AF     		add	r7, sp, #8
 5098              	.LCFI230:
 5099              		.cfi_def_cfa 7, 24
 5100 0006 7860     		str	r0, [r7, #4]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 5101              		.loc 1 2013 0
 5102 0008 0023     		movs	r3, #0
 5103 000a FB60     		str	r3, [r7, #12]
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5104              		.loc 1 2016 0
 5105 000c 7B68     		ldr	r3, [r7, #4]
 5106 000e 0022     		movs	r2, #0
 5107 0010 DA66     		str	r2, [r3, #108]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5108              		.loc 1 2019 0
 5109 0012 FFF7FEFF 		bl	HAL_GetTick
 5110 0016 F860     		str	r0, [r7, #12]
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 5111              		.loc 1 2022 0
 5112 0018 7B68     		ldr	r3, [r7, #4]
 5113 001a 1B68     		ldr	r3, [r3]
 5114 001c 1B68     		ldr	r3, [r3]
 5115 001e 03F00803 		and	r3, r3, #8
 5116 0022 082B     		cmp	r3, #8
ARM GAS  /tmp/ccmShkBJ.s 			page 125


 5117 0024 0ED1     		bne	.L292
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 5118              		.loc 1 2025 0
 5119 0026 6FF07E43 		mvn	r3, #-33554432
 5120 002a 0093     		str	r3, [sp]
 5121 002c FB68     		ldr	r3, [r7, #12]
 5122 002e 0022     		movs	r2, #0
 5123 0030 4FF40011 		mov	r1, #2097152
 5124 0034 7868     		ldr	r0, [r7, #4]
 5125 0036 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5126 003a 0346     		mov	r3, r0
 5127 003c 002B     		cmp	r3, #0
 5128 003e 01D0     		beq	.L292
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout Occurred */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 5129              		.loc 1 2028 0
 5130 0040 0323     		movs	r3, #3
 5131 0042 0CE0     		b	.L293
 5132              	.L292:
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 5133              		.loc 1 2033 0
 5134 0044 7B68     		ldr	r3, [r7, #4]
 5135 0046 2022     		movs	r2, #32
 5136 0048 83F86920 		strb	r2, [r3, #105]
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 5137              		.loc 1 2034 0
 5138 004c 7B68     		ldr	r3, [r7, #4]
 5139 004e 2022     		movs	r2, #32
 5140 0050 83F86A20 		strb	r2, [r3, #106]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5141              		.loc 1 2037 0
 5142 0054 7B68     		ldr	r3, [r7, #4]
 5143 0056 0022     		movs	r2, #0
 5144 0058 83F86820 		strb	r2, [r3, #104]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5145              		.loc 1 2039 0
 5146 005c 0023     		movs	r3, #0
 5147              	.L293:
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5148              		.loc 1 2040 0
 5149 005e 1846     		mov	r0, r3
 5150 0060 1037     		adds	r7, r7, #16
 5151              	.LCFI231:
 5152              		.cfi_def_cfa_offset 8
 5153 0062 BD46     		mov	sp, r7
 5154              	.LCFI232:
 5155              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccmShkBJ.s 			page 126


 5156              		@ sp needed
 5157 0064 80BD     		pop	{r7, pc}
 5158              		.cfi_endproc
 5159              	.LFE178:
 5161              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5162              		.align	1
 5163              		.global	HAL_HalfDuplex_EnableTransmitter
 5164              		.syntax unified
 5165              		.thumb
 5166              		.thumb_func
 5167              		.fpu fpv4-sp-d16
 5169              	HAL_HalfDuplex_EnableTransmitter:
 5170              	.LFB179:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5171              		.loc 1 2049 0
 5172              		.cfi_startproc
 5173              		@ args = 0, pretend = 0, frame = 8
 5174              		@ frame_needed = 1, uses_anonymous_args = 0
 5175              		@ link register save eliminated.
 5176 0000 80B4     		push	{r7}
 5177              	.LCFI233:
 5178              		.cfi_def_cfa_offset 4
 5179              		.cfi_offset 7, -4
 5180 0002 83B0     		sub	sp, sp, #12
 5181              	.LCFI234:
 5182              		.cfi_def_cfa_offset 16
 5183 0004 00AF     		add	r7, sp, #0
 5184              	.LCFI235:
 5185              		.cfi_def_cfa_register 7
 5186 0006 7860     		str	r0, [r7, #4]
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5187              		.loc 1 2051 0
 5188 0008 7B68     		ldr	r3, [r7, #4]
 5189 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5190 000e 012B     		cmp	r3, #1
 5191 0010 01D1     		bne	.L295
 5192              		.loc 1 2051 0 is_stmt 0 discriminator 1
 5193 0012 0223     		movs	r3, #2
 5194 0014 20E0     		b	.L296
 5195              	.L295:
 5196              		.loc 1 2051 0 discriminator 2
 5197 0016 7B68     		ldr	r3, [r7, #4]
 5198 0018 0122     		movs	r2, #1
 5199 001a 83F86820 		strb	r2, [r3, #104]
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5200              		.loc 1 2052 0 is_stmt 1 discriminator 2
 5201 001e 7B68     		ldr	r3, [r7, #4]
 5202 0020 2422     		movs	r2, #36
ARM GAS  /tmp/ccmShkBJ.s 			page 127


 5203 0022 83F86920 		strb	r2, [r3, #105]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5204              		.loc 1 2055 0 discriminator 2
 5205 0026 7B68     		ldr	r3, [r7, #4]
 5206 0028 1B68     		ldr	r3, [r3]
 5207 002a 7A68     		ldr	r2, [r7, #4]
 5208 002c 1268     		ldr	r2, [r2]
 5209 002e 1268     		ldr	r2, [r2]
 5210 0030 22F00C02 		bic	r2, r2, #12
 5211 0034 1A60     		str	r2, [r3]
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 5212              		.loc 1 2057 0 discriminator 2
 5213 0036 7B68     		ldr	r3, [r7, #4]
 5214 0038 1B68     		ldr	r3, [r3]
 5215 003a 7A68     		ldr	r2, [r7, #4]
 5216 003c 1268     		ldr	r2, [r2]
 5217 003e 1268     		ldr	r2, [r2]
 5218 0040 42F00802 		orr	r2, r2, #8
 5219 0044 1A60     		str	r2, [r3]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 5220              		.loc 1 2059 0 discriminator 2
 5221 0046 7B68     		ldr	r3, [r7, #4]
 5222 0048 2022     		movs	r2, #32
 5223 004a 83F86920 		strb	r2, [r3, #105]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5224              		.loc 1 2061 0 discriminator 2
 5225 004e 7B68     		ldr	r3, [r7, #4]
 5226 0050 0022     		movs	r2, #0
 5227 0052 83F86820 		strb	r2, [r3, #104]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5228              		.loc 1 2063 0 discriminator 2
 5229 0056 0023     		movs	r3, #0
 5230              	.L296:
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5231              		.loc 1 2064 0
 5232 0058 1846     		mov	r0, r3
 5233 005a 0C37     		adds	r7, r7, #12
 5234              	.LCFI236:
 5235              		.cfi_def_cfa_offset 4
 5236 005c BD46     		mov	sp, r7
 5237              	.LCFI237:
 5238              		.cfi_def_cfa_register 13
 5239              		@ sp needed
 5240 005e 5DF8047B 		ldr	r7, [sp], #4
 5241              	.LCFI238:
 5242              		.cfi_restore 7
 5243              		.cfi_def_cfa_offset 0
 5244 0062 7047     		bx	lr
 5245              		.cfi_endproc
 5246              	.LFE179:
 5248              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
ARM GAS  /tmp/ccmShkBJ.s 			page 128


 5249              		.align	1
 5250              		.global	HAL_HalfDuplex_EnableReceiver
 5251              		.syntax unified
 5252              		.thumb
 5253              		.thumb_func
 5254              		.fpu fpv4-sp-d16
 5256              	HAL_HalfDuplex_EnableReceiver:
 5257              	.LFB180:
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5258              		.loc 1 2072 0
 5259              		.cfi_startproc
 5260              		@ args = 0, pretend = 0, frame = 8
 5261              		@ frame_needed = 1, uses_anonymous_args = 0
 5262              		@ link register save eliminated.
 5263 0000 80B4     		push	{r7}
 5264              	.LCFI239:
 5265              		.cfi_def_cfa_offset 4
 5266              		.cfi_offset 7, -4
 5267 0002 83B0     		sub	sp, sp, #12
 5268              	.LCFI240:
 5269              		.cfi_def_cfa_offset 16
 5270 0004 00AF     		add	r7, sp, #0
 5271              	.LCFI241:
 5272              		.cfi_def_cfa_register 7
 5273 0006 7860     		str	r0, [r7, #4]
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5274              		.loc 1 2074 0
 5275 0008 7B68     		ldr	r3, [r7, #4]
 5276 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5277 000e 012B     		cmp	r3, #1
 5278 0010 01D1     		bne	.L298
 5279              		.loc 1 2074 0 is_stmt 0 discriminator 1
 5280 0012 0223     		movs	r3, #2
 5281 0014 20E0     		b	.L299
 5282              	.L298:
 5283              		.loc 1 2074 0 discriminator 2
 5284 0016 7B68     		ldr	r3, [r7, #4]
 5285 0018 0122     		movs	r2, #1
 5286 001a 83F86820 		strb	r2, [r3, #104]
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5287              		.loc 1 2075 0 is_stmt 1 discriminator 2
 5288 001e 7B68     		ldr	r3, [r7, #4]
 5289 0020 2422     		movs	r2, #36
 5290 0022 83F86920 		strb	r2, [r3, #105]
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5291              		.loc 1 2078 0 discriminator 2
 5292 0026 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmShkBJ.s 			page 129


 5293 0028 1B68     		ldr	r3, [r3]
 5294 002a 7A68     		ldr	r2, [r7, #4]
 5295 002c 1268     		ldr	r2, [r2]
 5296 002e 1268     		ldr	r2, [r2]
 5297 0030 22F00C02 		bic	r2, r2, #12
 5298 0034 1A60     		str	r2, [r3]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 5299              		.loc 1 2080 0 discriminator 2
 5300 0036 7B68     		ldr	r3, [r7, #4]
 5301 0038 1B68     		ldr	r3, [r3]
 5302 003a 7A68     		ldr	r2, [r7, #4]
 5303 003c 1268     		ldr	r2, [r2]
 5304 003e 1268     		ldr	r2, [r2]
 5305 0040 42F00402 		orr	r2, r2, #4
 5306 0044 1A60     		str	r2, [r3]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5307              		.loc 1 2082 0 discriminator 2
 5308 0046 7B68     		ldr	r3, [r7, #4]
 5309 0048 2022     		movs	r2, #32
 5310 004a 83F86920 		strb	r2, [r3, #105]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5311              		.loc 1 2084 0 discriminator 2
 5312 004e 7B68     		ldr	r3, [r7, #4]
 5313 0050 0022     		movs	r2, #0
 5314 0052 83F86820 		strb	r2, [r3, #104]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5315              		.loc 1 2086 0 discriminator 2
 5316 0056 0023     		movs	r3, #0
 5317              	.L299:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5318              		.loc 1 2087 0
 5319 0058 1846     		mov	r0, r3
 5320 005a 0C37     		adds	r7, r7, #12
 5321              	.LCFI242:
 5322              		.cfi_def_cfa_offset 4
 5323 005c BD46     		mov	sp, r7
 5324              	.LCFI243:
 5325              		.cfi_def_cfa_register 13
 5326              		@ sp needed
 5327 005e 5DF8047B 		ldr	r7, [sp], #4
 5328              	.LCFI244:
 5329              		.cfi_restore 7
 5330              		.cfi_def_cfa_offset 0
 5331 0062 7047     		bx	lr
 5332              		.cfi_endproc
 5333              	.LFE180:
 5335              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5336              		.align	1
 5337              		.global	HAL_LIN_SendBreak
 5338              		.syntax unified
 5339              		.thumb
 5340              		.thumb_func
 5341              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccmShkBJ.s 			page 130


 5343              	HAL_LIN_SendBreak:
 5344              	.LFB181:
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmits break characters.
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5345              		.loc 1 2096 0
 5346              		.cfi_startproc
 5347              		@ args = 0, pretend = 0, frame = 8
 5348              		@ frame_needed = 1, uses_anonymous_args = 0
 5349              		@ link register save eliminated.
 5350 0000 80B4     		push	{r7}
 5351              	.LCFI245:
 5352              		.cfi_def_cfa_offset 4
 5353              		.cfi_offset 7, -4
 5354 0002 83B0     		sub	sp, sp, #12
 5355              	.LCFI246:
 5356              		.cfi_def_cfa_offset 16
 5357 0004 00AF     		add	r7, sp, #0
 5358              	.LCFI247:
 5359              		.cfi_def_cfa_register 7
 5360 0006 7860     		str	r0, [r7, #4]
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5361              		.loc 1 2101 0
 5362 0008 7B68     		ldr	r3, [r7, #4]
 5363 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5364 000e 012B     		cmp	r3, #1
 5365 0010 01D1     		bne	.L301
 5366              		.loc 1 2101 0 is_stmt 0 discriminator 1
 5367 0012 0223     		movs	r3, #2
 5368 0014 18E0     		b	.L302
 5369              	.L301:
 5370              		.loc 1 2101 0 discriminator 2
 5371 0016 7B68     		ldr	r3, [r7, #4]
 5372 0018 0122     		movs	r2, #1
 5373 001a 83F86820 		strb	r2, [r3, #104]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5374              		.loc 1 2103 0 is_stmt 1 discriminator 2
 5375 001e 7B68     		ldr	r3, [r7, #4]
 5376 0020 2422     		movs	r2, #36
 5377 0022 83F86920 		strb	r2, [r3, #105]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
 5378              		.loc 1 2106 0 discriminator 2
 5379 0026 7B68     		ldr	r3, [r7, #4]
 5380 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccmShkBJ.s 			page 131


 5381 002a 7A68     		ldr	r2, [r7, #4]
 5382 002c 1268     		ldr	r2, [r2]
 5383 002e 9269     		ldr	r2, [r2, #24]
 5384 0030 42F00202 		orr	r2, r2, #2
 5385 0034 9A61     		str	r2, [r3, #24]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5386              		.loc 1 2108 0 discriminator 2
 5387 0036 7B68     		ldr	r3, [r7, #4]
 5388 0038 2022     		movs	r2, #32
 5389 003a 83F86920 		strb	r2, [r3, #105]
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5390              		.loc 1 2111 0 discriminator 2
 5391 003e 7B68     		ldr	r3, [r7, #4]
 5392 0040 0022     		movs	r2, #0
 5393 0042 83F86820 		strb	r2, [r3, #104]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5394              		.loc 1 2113 0 discriminator 2
 5395 0046 0023     		movs	r3, #0
 5396              	.L302:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5397              		.loc 1 2114 0
 5398 0048 1846     		mov	r0, r3
 5399 004a 0C37     		adds	r7, r7, #12
 5400              	.LCFI248:
 5401              		.cfi_def_cfa_offset 4
 5402 004c BD46     		mov	sp, r7
 5403              	.LCFI249:
 5404              		.cfi_def_cfa_register 13
 5405              		@ sp needed
 5406 004e 5DF8047B 		ldr	r7, [sp], #4
 5407              	.LCFI250:
 5408              		.cfi_restore 7
 5409              		.cfi_def_cfa_offset 0
 5410 0052 7047     		bx	lr
 5411              		.cfi_endproc
 5412              	.LFE181:
 5414              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 5415              		.align	1
 5416              		.global	HAL_MultiProcessorEx_AddressLength_Set
 5417              		.syntax unified
 5418              		.thumb
 5419              		.thumb_func
 5420              		.fpu fpv4-sp-d16
 5422              	HAL_MultiProcessorEx_AddressLength_Set:
 5423              	.LFB182:
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        long).
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
ARM GAS  /tmp/ccmShkBJ.s 			page 132


2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AddressLength this parameter can be one of the following values:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5424              		.loc 1 2130 0
 5425              		.cfi_startproc
 5426              		@ args = 0, pretend = 0, frame = 8
 5427              		@ frame_needed = 1, uses_anonymous_args = 0
 5428 0000 80B5     		push	{r7, lr}
 5429              	.LCFI251:
 5430              		.cfi_def_cfa_offset 8
 5431              		.cfi_offset 7, -8
 5432              		.cfi_offset 14, -4
 5433 0002 82B0     		sub	sp, sp, #8
 5434              	.LCFI252:
 5435              		.cfi_def_cfa_offset 16
 5436 0004 00AF     		add	r7, sp, #0
 5437              	.LCFI253:
 5438              		.cfi_def_cfa_register 7
 5439 0006 7860     		str	r0, [r7, #4]
 5440 0008 3960     		str	r1, [r7]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 5441              		.loc 1 2132 0
 5442 000a 7B68     		ldr	r3, [r7, #4]
 5443 000c 002B     		cmp	r3, #0
 5444 000e 01D1     		bne	.L304
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 5445              		.loc 1 2134 0
 5446 0010 0123     		movs	r3, #1
 5447 0012 21E0     		b	.L305
 5448              	.L304:
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the address length parameter */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5449              		.loc 1 2140 0
 5450 0014 7B68     		ldr	r3, [r7, #4]
 5451 0016 2422     		movs	r2, #36
 5452 0018 83F86920 		strb	r2, [r3, #105]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 5453              		.loc 1 2143 0
 5454 001c 7B68     		ldr	r3, [r7, #4]
 5455 001e 1B68     		ldr	r3, [r3]
 5456 0020 7A68     		ldr	r2, [r7, #4]
 5457 0022 1268     		ldr	r2, [r2]
 5458 0024 1268     		ldr	r2, [r2]
 5459 0026 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/ccmShkBJ.s 			page 133


 5460 002a 1A60     		str	r2, [r3]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the address length */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 5461              		.loc 1 2146 0
 5462 002c 7B68     		ldr	r3, [r7, #4]
 5463 002e 1B68     		ldr	r3, [r3]
 5464 0030 7A68     		ldr	r2, [r7, #4]
 5465 0032 1268     		ldr	r2, [r2]
 5466 0034 5268     		ldr	r2, [r2, #4]
 5467 0036 22F01001 		bic	r1, r2, #16
 5468 003a 3A68     		ldr	r2, [r7]
 5469 003c 0A43     		orrs	r2, r2, r1
 5470 003e 5A60     		str	r2, [r3, #4]
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 5471              		.loc 1 2149 0
 5472 0040 7B68     		ldr	r3, [r7, #4]
 5473 0042 1B68     		ldr	r3, [r3]
 5474 0044 7A68     		ldr	r2, [r7, #4]
 5475 0046 1268     		ldr	r2, [r2]
 5476 0048 1268     		ldr	r2, [r2]
 5477 004a 42F00102 		orr	r2, r2, #1
 5478 004e 1A60     		str	r2, [r3]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 5479              		.loc 1 2152 0
 5480 0050 7868     		ldr	r0, [r7, #4]
 5481 0052 FFF7FEFF 		bl	UART_CheckIdleState
 5482 0056 0346     		mov	r3, r0
 5483              	.L305:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5484              		.loc 1 2153 0
 5485 0058 1846     		mov	r0, r3
 5486 005a 0837     		adds	r7, r7, #8
 5487              	.LCFI254:
 5488              		.cfi_def_cfa_offset 8
 5489 005c BD46     		mov	sp, r7
 5490              	.LCFI255:
 5491              		.cfi_def_cfa_register 13
 5492              		@ sp needed
 5493 005e 80BD     		pop	{r7, pc}
 5494              		.cfi_endproc
 5495              	.LFE182:
 5497              		.text
 5498              	.Letext0:
 5499              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5500              		.file 3 "/usr/include/newlib/sys/lock.h"
 5501              		.file 4 "/usr/include/newlib/sys/_types.h"
 5502              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 5503              		.file 6 "/usr/include/newlib/sys/reent.h"
 5504              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 5505              		.file 8 "Drivers/CMSIS/Include/core_cm7.h"
 5506              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 5507              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
ARM GAS  /tmp/ccmShkBJ.s 			page 134


 5508              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 5509              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 5510              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 5511              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  /tmp/ccmShkBJ.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_uart.c
     /tmp/ccmShkBJ.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccmShkBJ.s:25     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccmShkBJ.s:816    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccmShkBJ.s:4167   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccmShkBJ.s:4880   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccmShkBJ.s:5083   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccmShkBJ.s:140    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccmShkBJ.s:147    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccmShkBJ.s:269    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccmShkBJ.s:276    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccmShkBJ.s:409    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccmShkBJ.s:416    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccmShkBJ.s:559    .text.HAL_RS485Ex_Init:0000000000000000 $t
     /tmp/ccmShkBJ.s:566    .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
     /tmp/ccmShkBJ.s:708    .text.HAL_RS485Ex_Init:00000000000000d4 $d
     /tmp/ccmShkBJ.s:713    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccmShkBJ.s:720    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccmShkBJ.s:859    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccmShkBJ.s:809    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccmShkBJ.s:852    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccmShkBJ.s:895    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccmShkBJ.s:902    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccmShkBJ.s:2684   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccmShkBJ.s:1089   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccmShkBJ.s:1096   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccmShkBJ.s:1345   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccmShkBJ.s:1352   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccmShkBJ.s:1462   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccmShkBJ.s:1469   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccmShkBJ.s:1652   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccmShkBJ.s:1659   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccmShkBJ.s:1803   .text.HAL_UART_Transmit_DMA:00000000000000d0 $d
     /tmp/ccmShkBJ.s:2797   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccmShkBJ.s:2873   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccmShkBJ.s:3048   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccmShkBJ.s:1810   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccmShkBJ.s:1817   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccmShkBJ.s:1968   .text.HAL_UART_Receive_DMA:00000000000000e0 $d
     /tmp/ccmShkBJ.s:2918   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccmShkBJ.s:3003   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccmShkBJ.s:1975   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccmShkBJ.s:1982   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccmShkBJ.s:2100   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccmShkBJ.s:2107   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccmShkBJ.s:2226   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccmShkBJ.s:2233   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccmShkBJ.s:3742   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccmShkBJ.s:3796   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccmShkBJ.s:2341   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccmShkBJ.s:2348   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccmShkBJ.s:3593   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccmShkBJ.s:3367   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccmShkBJ.s:3409   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccmShkBJ.s:3538   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccmShkBJ.s:2672   .text.HAL_UART_IRQHandler:0000000000000208 $d
ARM GAS  /tmp/ccmShkBJ.s 			page 136


     /tmp/ccmShkBJ.s:3141   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccmShkBJ.s:2677   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccmShkBJ.s:2791   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccmShkBJ.s:3195   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccmShkBJ.s:2867   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccmShkBJ.s:3238   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccmShkBJ.s:2912   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccmShkBJ.s:3281   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccmShkBJ.s:2997   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccmShkBJ.s:3324   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccmShkBJ.s:3042   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccmShkBJ.s:3135   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccmShkBJ.s:3188   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccmShkBJ.s:3231   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmShkBJ.s:3274   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccmShkBJ.s:3317   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmShkBJ.s:3360   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccmShkBJ.s:3403   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccmShkBJ.s:3532   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccmShkBJ.s:3587   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccmShkBJ.s:3736   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccmShkBJ.s:3790   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccmShkBJ.s:3852   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccmShkBJ.s:3859   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccmShkBJ.s:3925   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccmShkBJ.s:3932   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccmShkBJ.s:3998   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccmShkBJ.s:4005   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccmShkBJ.s:4049   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccmShkBJ.s:4056   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccmShkBJ.s:4114   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccmShkBJ.s:4121   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccmShkBJ.s:4160   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccmShkBJ.s:4269   .text.UART_SetConfig:00000000000000a0 $d
     /tmp/ccmShkBJ.s:4273   .text.UART_SetConfig:00000000000000b0 $t
     /tmp/ccmShkBJ.s:4311   .text.UART_SetConfig:00000000000000e8 $d
     /tmp/ccmShkBJ.s:4324   .text.UART_SetConfig:000000000000011c $t
     /tmp/ccmShkBJ.s:4607   .text.UART_SetConfig:00000000000002e8 $d
     /tmp/ccmShkBJ.s:4619   .text.UART_SetConfig:0000000000000310 $t
     /tmp/ccmShkBJ.s:4638   .text.UART_SetConfig:000000000000032c $d
     /tmp/ccmShkBJ.s:4647   .text.UART_SetConfig:0000000000000350 $t
     /tmp/ccmShkBJ.s:4753   .text.UART_SetConfig:0000000000000408 $d
     /tmp/ccmShkBJ.s:4762   .text.UART_SetConfig:000000000000042c $t
     /tmp/ccmShkBJ.s:4867   .text.UART_SetConfig:00000000000004d4 $d
     /tmp/ccmShkBJ.s:4873   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccmShkBJ.s:5076   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccmShkBJ.s:5162   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccmShkBJ.s:5169   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccmShkBJ.s:5249   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccmShkBJ.s:5256   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccmShkBJ.s:5336   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccmShkBJ.s:5343   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccmShkBJ.s:5415   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
     /tmp/ccmShkBJ.s:5422   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccmShkBJ.s 			page 137


HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
