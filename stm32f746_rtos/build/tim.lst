ARM GAS  /tmp/ccsswoLZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	htim2,64,4
  18              		.comm	htim3,64,4
  19              		.comm	htim13,64,4
  20              		.comm	htim14,64,4
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 5372632F 		.ascii	"Src/tim.c\000"
  24      74696D2E 
  24      6300
  25              		.section	.text.MX_TIM2_Init,"ax",%progbits
  26              		.align	1
  27              		.global	MX_TIM2_Init
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	MX_TIM2_Init:
  34              	.LFB138:
  35              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/tim.c     ****   * All rights reserved.
  15:Src/tim.c     ****   *
  16:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/tim.c     ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/tim.c     ****   *
  19:Src/tim.c     ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/tim.c     ****   *    this list of conditions and the following disclaimer.
  21:Src/tim.c     ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccsswoLZ.s 			page 2


  22:Src/tim.c     ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/tim.c     ****   *    and/or other materials provided with the distribution.
  24:Src/tim.c     ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/tim.c     ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/tim.c     ****   *    derived from this software without specific written permission.
  27:Src/tim.c     ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/tim.c     ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/tim.c     ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/tim.c     ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/tim.c     ****   *    this license is void and will automatically terminate your rights under 
  32:Src/tim.c     ****   *    this license. 
  33:Src/tim.c     ****   *
  34:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/tim.c     ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/tim.c     ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/tim.c     ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/tim.c     ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/tim.c     ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/tim.c     ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/tim.c     ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/tim.c     ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/tim.c     ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/tim.c     ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/tim.c     ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/tim.c     ****   *
  47:Src/tim.c     ****   ******************************************************************************
  48:Src/tim.c     ****   */
  49:Src/tim.c     **** 
  50:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  51:Src/tim.c     **** #include "tim.h"
  52:Src/tim.c     **** 
  53:Src/tim.c     **** /* USER CODE BEGIN 0 */
  54:Src/tim.c     **** 
  55:Src/tim.c     **** /* USER CODE END 0 */
  56:Src/tim.c     **** 
  57:Src/tim.c     **** TIM_HandleTypeDef htim2;
  58:Src/tim.c     **** TIM_HandleTypeDef htim3;
  59:Src/tim.c     **** TIM_HandleTypeDef htim13;
  60:Src/tim.c     **** TIM_HandleTypeDef htim14;
  61:Src/tim.c     **** 
  62:Src/tim.c     **** /* TIM2 init function */
  63:Src/tim.c     **** void MX_TIM2_Init(void)
  64:Src/tim.c     **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 32
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 88B0     		sub	sp, sp, #32
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 40
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
ARM GAS  /tmp/ccsswoLZ.s 			page 3


  50              		.cfi_def_cfa_register 7
  65:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  66:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  67:Src/tim.c     **** 
  68:Src/tim.c     ****   htim2.Instance = TIM2;
  51              		.loc 1 68 0
  52 0006 214B     		ldr	r3, .L6
  53 0008 4FF08042 		mov	r2, #1073741824
  54 000c 1A60     		str	r2, [r3]
  69:Src/tim.c     ****   htim2.Init.Prescaler = 10;
  55              		.loc 1 69 0
  56 000e 1F4B     		ldr	r3, .L6
  57 0010 0A22     		movs	r2, #10
  58 0012 5A60     		str	r2, [r3, #4]
  70:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  59              		.loc 1 70 0
  60 0014 1D4B     		ldr	r3, .L6
  61 0016 0022     		movs	r2, #0
  62 0018 9A60     		str	r2, [r3, #8]
  71:Src/tim.c     ****   htim2.Init.Period = 500;
  63              		.loc 1 71 0
  64 001a 1C4B     		ldr	r3, .L6
  65 001c 4FF4FA72 		mov	r2, #500
  66 0020 DA60     		str	r2, [r3, #12]
  72:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  67              		.loc 1 72 0
  68 0022 1A4B     		ldr	r3, .L6
  69 0024 0022     		movs	r2, #0
  70 0026 1A61     		str	r2, [r3, #16]
  73:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  71              		.loc 1 73 0
  72 0028 184B     		ldr	r3, .L6
  73 002a 0022     		movs	r2, #0
  74 002c 9A61     		str	r2, [r3, #24]
  74:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  75              		.loc 1 74 0
  76 002e 1748     		ldr	r0, .L6
  77 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
  78 0034 0346     		mov	r3, r0
  79 0036 002B     		cmp	r3, #0
  80 0038 03D0     		beq	.L2
  75:Src/tim.c     ****   {
  76:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  81              		.loc 1 76 0
  82 003a 4C21     		movs	r1, #76
  83 003c 1448     		ldr	r0, .L6+4
  84 003e FFF7FEFF 		bl	_Error_Handler
  85              	.L2:
  77:Src/tim.c     ****   }
  78:Src/tim.c     **** 
  79:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  86              		.loc 1 79 0
  87 0042 4FF48053 		mov	r3, #4096
  88 0046 3B61     		str	r3, [r7, #16]
  80:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  89              		.loc 1 80 0
  90 0048 07F11003 		add	r3, r7, #16
ARM GAS  /tmp/ccsswoLZ.s 			page 4


  91 004c 1946     		mov	r1, r3
  92 004e 0F48     		ldr	r0, .L6
  93 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  94 0054 0346     		mov	r3, r0
  95 0056 002B     		cmp	r3, #0
  96 0058 03D0     		beq	.L3
  81:Src/tim.c     ****   {
  82:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  97              		.loc 1 82 0
  98 005a 5221     		movs	r1, #82
  99 005c 0C48     		ldr	r0, .L6+4
 100 005e FFF7FEFF 		bl	_Error_Handler
 101              	.L3:
  83:Src/tim.c     ****   }
  84:Src/tim.c     **** 
  85:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 102              		.loc 1 85 0
 103 0062 0023     		movs	r3, #0
 104 0064 7B60     		str	r3, [r7, #4]
  86:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 105              		.loc 1 86 0
 106 0066 0023     		movs	r3, #0
 107 0068 FB60     		str	r3, [r7, #12]
  87:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 108              		.loc 1 87 0
 109 006a 3B1D     		adds	r3, r7, #4
 110 006c 1946     		mov	r1, r3
 111 006e 0748     		ldr	r0, .L6
 112 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 113 0074 0346     		mov	r3, r0
 114 0076 002B     		cmp	r3, #0
 115 0078 03D0     		beq	.L5
  88:Src/tim.c     ****   {
  89:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 116              		.loc 1 89 0
 117 007a 5921     		movs	r1, #89
 118 007c 0448     		ldr	r0, .L6+4
 119 007e FFF7FEFF 		bl	_Error_Handler
 120              	.L5:
  90:Src/tim.c     ****   }
  91:Src/tim.c     **** 
  92:Src/tim.c     **** }
 121              		.loc 1 92 0
 122 0082 00BF     		nop
 123 0084 2037     		adds	r7, r7, #32
 124              	.LCFI3:
 125              		.cfi_def_cfa_offset 8
 126 0086 BD46     		mov	sp, r7
 127              	.LCFI4:
 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 0088 80BD     		pop	{r7, pc}
 131              	.L7:
 132 008a 00BF     		.align	2
 133              	.L6:
 134 008c 00000000 		.word	htim2
 135 0090 00000000 		.word	.LC0
ARM GAS  /tmp/ccsswoLZ.s 			page 5


 136              		.cfi_endproc
 137              	.LFE138:
 139              		.section	.text.MX_TIM3_Init,"ax",%progbits
 140              		.align	1
 141              		.global	MX_TIM3_Init
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	MX_TIM3_Init:
 148              	.LFB139:
  93:Src/tim.c     **** /* TIM3 init function */
  94:Src/tim.c     **** void MX_TIM3_Init(void)
  95:Src/tim.c     **** {
 149              		.loc 1 95 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 40
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI5:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 8AB0     		sub	sp, sp, #40
 159              	.LCFI6:
 160              		.cfi_def_cfa_offset 48
 161 0004 00AF     		add	r7, sp, #0
 162              	.LCFI7:
 163              		.cfi_def_cfa_register 7
  96:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  97:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  98:Src/tim.c     **** 
  99:Src/tim.c     ****   htim3.Instance = TIM3;
 164              		.loc 1 99 0
 165 0006 2C4B     		ldr	r3, .L13
 166 0008 2C4A     		ldr	r2, .L13+4
 167 000a 1A60     		str	r2, [r3]
 100:Src/tim.c     ****   htim3.Init.Prescaler = 1150; // 1079
 168              		.loc 1 100 0
 169 000c 2A4B     		ldr	r3, .L13
 170 000e 40F27E42 		movw	r2, #1150
 171 0012 5A60     		str	r2, [r3, #4]
 101:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 172              		.loc 1 101 0
 173 0014 284B     		ldr	r3, .L13
 174 0016 0022     		movs	r2, #0
 175 0018 9A60     		str	r2, [r3, #8]
 102:Src/tim.c     ****   htim3.Init.Period = 1876; // 2000
 176              		.loc 1 102 0
 177 001a 274B     		ldr	r3, .L13
 178 001c 40F25472 		movw	r2, #1876
 179 0020 DA60     		str	r2, [r3, #12]
 103:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 180              		.loc 1 103 0
 181 0022 254B     		ldr	r3, .L13
 182 0024 0022     		movs	r2, #0
 183 0026 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccsswoLZ.s 			page 6


 104:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 184              		.loc 1 104 0
 185 0028 234B     		ldr	r3, .L13
 186 002a 0022     		movs	r2, #0
 187 002c 9A61     		str	r2, [r3, #24]
 105:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 188              		.loc 1 105 0
 189 002e 2248     		ldr	r0, .L13
 190 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 191 0034 0346     		mov	r3, r0
 192 0036 002B     		cmp	r3, #0
 193 0038 03D0     		beq	.L9
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 194              		.loc 1 107 0
 195 003a 6B21     		movs	r1, #107
 196 003c 2048     		ldr	r0, .L13+8
 197 003e FFF7FEFF 		bl	_Error_Handler
 198              	.L9:
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 199              		.loc 1 110 0
 200 0042 0023     		movs	r3, #0
 201 0044 FB61     		str	r3, [r7, #28]
 111:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 202              		.loc 1 111 0
 203 0046 0023     		movs	r3, #0
 204 0048 7B62     		str	r3, [r7, #36]
 112:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 205              		.loc 1 112 0
 206 004a 07F11C03 		add	r3, r7, #28
 207 004e 1946     		mov	r1, r3
 208 0050 1948     		ldr	r0, .L13
 209 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 210 0056 0346     		mov	r3, r0
 211 0058 002B     		cmp	r3, #0
 212 005a 03D0     		beq	.L10
 113:Src/tim.c     ****   {
 114:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 213              		.loc 1 114 0
 214 005c 7221     		movs	r1, #114
 215 005e 1848     		ldr	r0, .L13+8
 216 0060 FFF7FEFF 		bl	_Error_Handler
 217              	.L10:
 115:Src/tim.c     ****   }
 116:Src/tim.c     **** 
 117:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 218              		.loc 1 117 0
 219 0064 6023     		movs	r3, #96
 220 0066 3B60     		str	r3, [r7]
 118:Src/tim.c     ****   sConfigOC.Pulse = 0;
 221              		.loc 1 118 0
 222 0068 0023     		movs	r3, #0
 223 006a 7B60     		str	r3, [r7, #4]
 119:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 224              		.loc 1 119 0
ARM GAS  /tmp/ccsswoLZ.s 			page 7


 225 006c 0023     		movs	r3, #0
 226 006e BB60     		str	r3, [r7, #8]
 120:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 227              		.loc 1 120 0
 228 0070 0023     		movs	r3, #0
 229 0072 3B61     		str	r3, [r7, #16]
 121:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 230              		.loc 1 121 0
 231 0074 3B46     		mov	r3, r7
 232 0076 0022     		movs	r2, #0
 233 0078 1946     		mov	r1, r3
 234 007a 0F48     		ldr	r0, .L13
 235 007c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 236 0080 0346     		mov	r3, r0
 237 0082 002B     		cmp	r3, #0
 238 0084 03D0     		beq	.L11
 122:Src/tim.c     ****   {
 123:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 239              		.loc 1 123 0
 240 0086 7B21     		movs	r1, #123
 241 0088 0D48     		ldr	r0, .L13+8
 242 008a FFF7FEFF 		bl	_Error_Handler
 243              	.L11:
 124:Src/tim.c     ****   }
 125:Src/tim.c     **** 
 126:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 244              		.loc 1 126 0
 245 008e 3B46     		mov	r3, r7
 246 0090 0422     		movs	r2, #4
 247 0092 1946     		mov	r1, r3
 248 0094 0848     		ldr	r0, .L13
 249 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 250 009a 0346     		mov	r3, r0
 251 009c 002B     		cmp	r3, #0
 252 009e 03D0     		beq	.L12
 127:Src/tim.c     ****   {
 128:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 253              		.loc 1 128 0
 254 00a0 8021     		movs	r1, #128
 255 00a2 0748     		ldr	r0, .L13+8
 256 00a4 FFF7FEFF 		bl	_Error_Handler
 257              	.L12:
 129:Src/tim.c     ****   }
 130:Src/tim.c     **** 
 131:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 258              		.loc 1 131 0
 259 00a8 0348     		ldr	r0, .L13
 260 00aa FFF7FEFF 		bl	HAL_TIM_MspPostInit
 132:Src/tim.c     **** 
 133:Src/tim.c     **** }
 261              		.loc 1 133 0
 262 00ae 00BF     		nop
 263 00b0 2837     		adds	r7, r7, #40
 264              	.LCFI8:
 265              		.cfi_def_cfa_offset 8
 266 00b2 BD46     		mov	sp, r7
 267              	.LCFI9:
ARM GAS  /tmp/ccsswoLZ.s 			page 8


 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 00b4 80BD     		pop	{r7, pc}
 271              	.L14:
 272 00b6 00BF     		.align	2
 273              	.L13:
 274 00b8 00000000 		.word	htim3
 275 00bc 00040040 		.word	1073742848
 276 00c0 00000000 		.word	.LC0
 277              		.cfi_endproc
 278              	.LFE139:
 280              		.section	.text.MX_TIM13_Init,"ax",%progbits
 281              		.align	1
 282              		.global	MX_TIM13_Init
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	MX_TIM13_Init:
 289              	.LFB140:
 134:Src/tim.c     **** /* TIM13 init function */
 135:Src/tim.c     **** void MX_TIM13_Init(void)
 136:Src/tim.c     **** {
 290              		.loc 1 136 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 32
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI10:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 88B0     		sub	sp, sp, #32
 300              	.LCFI11:
 301              		.cfi_def_cfa_offset 40
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI12:
 304              		.cfi_def_cfa_register 7
 137:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 138:Src/tim.c     **** 
 139:Src/tim.c     ****   htim13.Instance = TIM13;
 305              		.loc 1 139 0
 306 0006 214B     		ldr	r3, .L19
 307 0008 214A     		ldr	r2, .L19+4
 308 000a 1A60     		str	r2, [r3]
 140:Src/tim.c     ****   htim13.Init.Prescaler = 0;
 309              		.loc 1 140 0
 310 000c 1F4B     		ldr	r3, .L19
 311 000e 0022     		movs	r2, #0
 312 0010 5A60     		str	r2, [r3, #4]
 141:Src/tim.c     ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 313              		.loc 1 141 0
 314 0012 1E4B     		ldr	r3, .L19
 315 0014 0022     		movs	r2, #0
 316 0016 9A60     		str	r2, [r3, #8]
 142:Src/tim.c     ****   htim13.Init.Period = 0;
 317              		.loc 1 142 0
ARM GAS  /tmp/ccsswoLZ.s 			page 9


 318 0018 1C4B     		ldr	r3, .L19
 319 001a 0022     		movs	r2, #0
 320 001c DA60     		str	r2, [r3, #12]
 143:Src/tim.c     ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 321              		.loc 1 143 0
 322 001e 1B4B     		ldr	r3, .L19
 323 0020 0022     		movs	r2, #0
 324 0022 1A61     		str	r2, [r3, #16]
 144:Src/tim.c     ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 325              		.loc 1 144 0
 326 0024 194B     		ldr	r3, .L19
 327 0026 0022     		movs	r2, #0
 328 0028 9A61     		str	r2, [r3, #24]
 145:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 329              		.loc 1 145 0
 330 002a 1848     		ldr	r0, .L19
 331 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 332 0030 0346     		mov	r3, r0
 333 0032 002B     		cmp	r3, #0
 334 0034 03D0     		beq	.L16
 146:Src/tim.c     ****   {
 147:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 335              		.loc 1 147 0
 336 0036 9321     		movs	r1, #147
 337 0038 1648     		ldr	r0, .L19+8
 338 003a FFF7FEFF 		bl	_Error_Handler
 339              	.L16:
 148:Src/tim.c     ****   }
 149:Src/tim.c     **** 
 150:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 340              		.loc 1 150 0
 341 003e 1348     		ldr	r0, .L19
 342 0040 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 343 0044 0346     		mov	r3, r0
 344 0046 002B     		cmp	r3, #0
 345 0048 03D0     		beq	.L17
 151:Src/tim.c     ****   {
 152:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 346              		.loc 1 152 0
 347 004a 9821     		movs	r1, #152
 348 004c 1148     		ldr	r0, .L19+8
 349 004e FFF7FEFF 		bl	_Error_Handler
 350              	.L17:
 153:Src/tim.c     ****   }
 154:Src/tim.c     **** 
 155:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 351              		.loc 1 155 0
 352 0052 6023     		movs	r3, #96
 353 0054 7B60     		str	r3, [r7, #4]
 156:Src/tim.c     ****   sConfigOC.Pulse = 0;
 354              		.loc 1 156 0
 355 0056 0023     		movs	r3, #0
 356 0058 BB60     		str	r3, [r7, #8]
 157:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 357              		.loc 1 157 0
 358 005a 0023     		movs	r3, #0
 359 005c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccsswoLZ.s 			page 10


 158:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 360              		.loc 1 158 0
 361 005e 0023     		movs	r3, #0
 362 0060 7B61     		str	r3, [r7, #20]
 159:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 363              		.loc 1 159 0
 364 0062 3B1D     		adds	r3, r7, #4
 365 0064 0022     		movs	r2, #0
 366 0066 1946     		mov	r1, r3
 367 0068 0848     		ldr	r0, .L19
 368 006a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 369 006e 0346     		mov	r3, r0
 370 0070 002B     		cmp	r3, #0
 371 0072 03D0     		beq	.L18
 160:Src/tim.c     ****   {
 161:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 372              		.loc 1 161 0
 373 0074 A121     		movs	r1, #161
 374 0076 0748     		ldr	r0, .L19+8
 375 0078 FFF7FEFF 		bl	_Error_Handler
 376              	.L18:
 162:Src/tim.c     ****   }
 163:Src/tim.c     **** 
 164:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim13);
 377              		.loc 1 164 0
 378 007c 0348     		ldr	r0, .L19
 379 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 165:Src/tim.c     **** 
 166:Src/tim.c     **** }
 380              		.loc 1 166 0
 381 0082 00BF     		nop
 382 0084 2037     		adds	r7, r7, #32
 383              	.LCFI13:
 384              		.cfi_def_cfa_offset 8
 385 0086 BD46     		mov	sp, r7
 386              	.LCFI14:
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 0088 80BD     		pop	{r7, pc}
 390              	.L20:
 391 008a 00BF     		.align	2
 392              	.L19:
 393 008c 00000000 		.word	htim13
 394 0090 001C0040 		.word	1073748992
 395 0094 00000000 		.word	.LC0
 396              		.cfi_endproc
 397              	.LFE140:
 399              		.section	.text.MX_TIM14_Init,"ax",%progbits
 400              		.align	1
 401              		.global	MX_TIM14_Init
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	MX_TIM14_Init:
 408              	.LFB141:
 167:Src/tim.c     **** /* TIM14 init function */
ARM GAS  /tmp/ccsswoLZ.s 			page 11


 168:Src/tim.c     **** void MX_TIM14_Init(void)
 169:Src/tim.c     **** {
 409              		.loc 1 169 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 32
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              	.LCFI15:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 88B0     		sub	sp, sp, #32
 419              	.LCFI16:
 420              		.cfi_def_cfa_offset 40
 421 0004 00AF     		add	r7, sp, #0
 422              	.LCFI17:
 423              		.cfi_def_cfa_register 7
 170:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 171:Src/tim.c     **** 
 172:Src/tim.c     ****   htim14.Instance = TIM14;
 424              		.loc 1 172 0
 425 0006 214B     		ldr	r3, .L25
 426 0008 214A     		ldr	r2, .L25+4
 427 000a 1A60     		str	r2, [r3]
 173:Src/tim.c     ****   htim14.Init.Prescaler = 0;
 428              		.loc 1 173 0
 429 000c 1F4B     		ldr	r3, .L25
 430 000e 0022     		movs	r2, #0
 431 0010 5A60     		str	r2, [r3, #4]
 174:Src/tim.c     ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 432              		.loc 1 174 0
 433 0012 1E4B     		ldr	r3, .L25
 434 0014 0022     		movs	r2, #0
 435 0016 9A60     		str	r2, [r3, #8]
 175:Src/tim.c     ****   htim14.Init.Period = 0;
 436              		.loc 1 175 0
 437 0018 1C4B     		ldr	r3, .L25
 438 001a 0022     		movs	r2, #0
 439 001c DA60     		str	r2, [r3, #12]
 176:Src/tim.c     ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 440              		.loc 1 176 0
 441 001e 1B4B     		ldr	r3, .L25
 442 0020 0022     		movs	r2, #0
 443 0022 1A61     		str	r2, [r3, #16]
 177:Src/tim.c     ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 444              		.loc 1 177 0
 445 0024 194B     		ldr	r3, .L25
 446 0026 0022     		movs	r2, #0
 447 0028 9A61     		str	r2, [r3, #24]
 178:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 448              		.loc 1 178 0
 449 002a 1848     		ldr	r0, .L25
 450 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 451 0030 0346     		mov	r3, r0
 452 0032 002B     		cmp	r3, #0
 453 0034 03D0     		beq	.L22
 179:Src/tim.c     ****   {
ARM GAS  /tmp/ccsswoLZ.s 			page 12


 180:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 454              		.loc 1 180 0
 455 0036 B421     		movs	r1, #180
 456 0038 1648     		ldr	r0, .L25+8
 457 003a FFF7FEFF 		bl	_Error_Handler
 458              	.L22:
 181:Src/tim.c     ****   }
 182:Src/tim.c     **** 
 183:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 459              		.loc 1 183 0
 460 003e 1348     		ldr	r0, .L25
 461 0040 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 462 0044 0346     		mov	r3, r0
 463 0046 002B     		cmp	r3, #0
 464 0048 03D0     		beq	.L23
 184:Src/tim.c     ****   {
 185:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 465              		.loc 1 185 0
 466 004a B921     		movs	r1, #185
 467 004c 1148     		ldr	r0, .L25+8
 468 004e FFF7FEFF 		bl	_Error_Handler
 469              	.L23:
 186:Src/tim.c     ****   }
 187:Src/tim.c     **** 
 188:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 470              		.loc 1 188 0
 471 0052 6023     		movs	r3, #96
 472 0054 7B60     		str	r3, [r7, #4]
 189:Src/tim.c     ****   sConfigOC.Pulse = 0;
 473              		.loc 1 189 0
 474 0056 0023     		movs	r3, #0
 475 0058 BB60     		str	r3, [r7, #8]
 190:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 476              		.loc 1 190 0
 477 005a 0023     		movs	r3, #0
 478 005c FB60     		str	r3, [r7, #12]
 191:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 479              		.loc 1 191 0
 480 005e 0023     		movs	r3, #0
 481 0060 7B61     		str	r3, [r7, #20]
 192:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 482              		.loc 1 192 0
 483 0062 3B1D     		adds	r3, r7, #4
 484 0064 0022     		movs	r2, #0
 485 0066 1946     		mov	r1, r3
 486 0068 0848     		ldr	r0, .L25
 487 006a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 488 006e 0346     		mov	r3, r0
 489 0070 002B     		cmp	r3, #0
 490 0072 03D0     		beq	.L24
 193:Src/tim.c     ****   {
 194:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 491              		.loc 1 194 0
 492 0074 C221     		movs	r1, #194
 493 0076 0748     		ldr	r0, .L25+8
 494 0078 FFF7FEFF 		bl	_Error_Handler
 495              	.L24:
ARM GAS  /tmp/ccsswoLZ.s 			page 13


 195:Src/tim.c     ****   }
 196:Src/tim.c     **** 
 197:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim14);
 496              		.loc 1 197 0
 497 007c 0348     		ldr	r0, .L25
 498 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 198:Src/tim.c     **** 
 199:Src/tim.c     **** }
 499              		.loc 1 199 0
 500 0082 00BF     		nop
 501 0084 2037     		adds	r7, r7, #32
 502              	.LCFI18:
 503              		.cfi_def_cfa_offset 8
 504 0086 BD46     		mov	sp, r7
 505              	.LCFI19:
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0088 80BD     		pop	{r7, pc}
 509              	.L26:
 510 008a 00BF     		.align	2
 511              	.L25:
 512 008c 00000000 		.word	htim14
 513 0090 00200040 		.word	1073750016
 514 0094 00000000 		.word	.LC0
 515              		.cfi_endproc
 516              	.LFE141:
 518              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 519              		.align	1
 520              		.global	HAL_TIM_Base_MspInit
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv4-sp-d16
 526              	HAL_TIM_Base_MspInit:
 527              	.LFB142:
 200:Src/tim.c     **** 
 201:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 202:Src/tim.c     **** {
 528              		.loc 1 202 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 24
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              	.LCFI20:
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 86B0     		sub	sp, sp, #24
 538              	.LCFI21:
 539              		.cfi_def_cfa_offset 32
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI22:
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 203:Src/tim.c     **** 
 204:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 544              		.loc 1 204 0
ARM GAS  /tmp/ccsswoLZ.s 			page 14


 545 0008 7B68     		ldr	r3, [r7, #4]
 546 000a 1B68     		ldr	r3, [r3]
 547 000c B3F1804F 		cmp	r3, #1073741824
 548 0010 14D1     		bne	.L28
 549              	.LBB2:
 205:Src/tim.c     ****   {
 206:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 207:Src/tim.c     **** 
 208:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 209:Src/tim.c     ****     /* TIM2 clock enable */
 210:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 550              		.loc 1 210 0
 551 0012 1E4B     		ldr	r3, .L32
 552 0014 1B6C     		ldr	r3, [r3, #64]
 553 0016 1D4A     		ldr	r2, .L32
 554 0018 43F00103 		orr	r3, r3, #1
 555 001c 1364     		str	r3, [r2, #64]
 556 001e 1B4B     		ldr	r3, .L32
 557 0020 1B6C     		ldr	r3, [r3, #64]
 558 0022 03F00103 		and	r3, r3, #1
 559 0026 7B61     		str	r3, [r7, #20]
 560 0028 7B69     		ldr	r3, [r7, #20]
 561              	.LBE2:
 211:Src/tim.c     **** 
 212:Src/tim.c     ****     /* TIM2 interrupt Init */
 213:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 562              		.loc 1 213 0
 563 002a 0022     		movs	r2, #0
 564 002c 0521     		movs	r1, #5
 565 002e 1C20     		movs	r0, #28
 566 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 214:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 567              		.loc 1 214 0
 568 0034 1C20     		movs	r0, #28
 569 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 215:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 216:Src/tim.c     **** 
 217:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 218:Src/tim.c     ****   }
 219:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 220:Src/tim.c     ****   {
 221:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 0 */
 222:Src/tim.c     **** 
 223:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 0 */
 224:Src/tim.c     ****     /* TIM13 clock enable */
 225:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_ENABLE();
 226:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 227:Src/tim.c     **** 
 228:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 1 */
 229:Src/tim.c     ****   }
 230:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 231:Src/tim.c     ****   {
 232:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 0 */
 233:Src/tim.c     **** 
 234:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 0 */
 235:Src/tim.c     ****     /* TIM14 clock enable */
 236:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_ENABLE();
ARM GAS  /tmp/ccsswoLZ.s 			page 15


 237:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 238:Src/tim.c     **** 
 239:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 1 */
 240:Src/tim.c     ****   }
 241:Src/tim.c     **** }
 570              		.loc 1 241 0
 571 003a 22E0     		b	.L31
 572              	.L28:
 219:Src/tim.c     ****   {
 573              		.loc 1 219 0
 574 003c 7B68     		ldr	r3, [r7, #4]
 575 003e 1B68     		ldr	r3, [r3]
 576 0040 134A     		ldr	r2, .L32+4
 577 0042 9342     		cmp	r3, r2
 578 0044 0CD1     		bne	.L30
 579              	.LBB3:
 225:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 580              		.loc 1 225 0
 581 0046 114B     		ldr	r3, .L32
 582 0048 1B6C     		ldr	r3, [r3, #64]
 583 004a 104A     		ldr	r2, .L32
 584 004c 43F08003 		orr	r3, r3, #128
 585 0050 1364     		str	r3, [r2, #64]
 586 0052 0E4B     		ldr	r3, .L32
 587 0054 1B6C     		ldr	r3, [r3, #64]
 588 0056 03F08003 		and	r3, r3, #128
 589 005a 3B61     		str	r3, [r7, #16]
 590 005c 3B69     		ldr	r3, [r7, #16]
 591              	.LBE3:
 592              		.loc 1 241 0
 593 005e 10E0     		b	.L31
 594              	.L30:
 230:Src/tim.c     ****   {
 595              		.loc 1 230 0
 596 0060 7B68     		ldr	r3, [r7, #4]
 597 0062 1B68     		ldr	r3, [r3]
 598 0064 0B4A     		ldr	r2, .L32+8
 599 0066 9342     		cmp	r3, r2
 600 0068 0BD1     		bne	.L31
 601              	.LBB4:
 236:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 602              		.loc 1 236 0
 603 006a 084B     		ldr	r3, .L32
 604 006c 1B6C     		ldr	r3, [r3, #64]
 605 006e 074A     		ldr	r2, .L32
 606 0070 43F48073 		orr	r3, r3, #256
 607 0074 1364     		str	r3, [r2, #64]
 608 0076 054B     		ldr	r3, .L32
 609 0078 1B6C     		ldr	r3, [r3, #64]
 610 007a 03F48073 		and	r3, r3, #256
 611 007e FB60     		str	r3, [r7, #12]
 612 0080 FB68     		ldr	r3, [r7, #12]
 613              	.L31:
 614              	.LBE4:
 615              		.loc 1 241 0
 616 0082 00BF     		nop
 617 0084 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccsswoLZ.s 			page 16


 618              	.LCFI23:
 619              		.cfi_def_cfa_offset 8
 620 0086 BD46     		mov	sp, r7
 621              	.LCFI24:
 622              		.cfi_def_cfa_register 13
 623              		@ sp needed
 624 0088 80BD     		pop	{r7, pc}
 625              	.L33:
 626 008a 00BF     		.align	2
 627              	.L32:
 628 008c 00380240 		.word	1073887232
 629 0090 001C0040 		.word	1073748992
 630 0094 00200040 		.word	1073750016
 631              		.cfi_endproc
 632              	.LFE142:
 634              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 635              		.align	1
 636              		.global	HAL_TIM_PWM_MspInit
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv4-sp-d16
 642              	HAL_TIM_PWM_MspInit:
 643              	.LFB143:
 242:Src/tim.c     **** 
 243:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 244:Src/tim.c     **** {
 644              		.loc 1 244 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 16
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
 650              	.LCFI25:
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 85B0     		sub	sp, sp, #20
 654              	.LCFI26:
 655              		.cfi_def_cfa_offset 24
 656 0004 00AF     		add	r7, sp, #0
 657              	.LCFI27:
 658              		.cfi_def_cfa_register 7
 659 0006 7860     		str	r0, [r7, #4]
 245:Src/tim.c     **** 
 246:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 660              		.loc 1 246 0
 661 0008 7B68     		ldr	r3, [r7, #4]
 662 000a 1B68     		ldr	r3, [r3]
 663 000c 0A4A     		ldr	r2, .L37
 664 000e 9342     		cmp	r3, r2
 665 0010 0BD1     		bne	.L36
 666              	.LBB5:
 247:Src/tim.c     ****   {
 248:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 249:Src/tim.c     **** 
 250:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 251:Src/tim.c     ****     /* TIM3 clock enable */
ARM GAS  /tmp/ccsswoLZ.s 			page 17


 252:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 667              		.loc 1 252 0
 668 0012 0A4B     		ldr	r3, .L37+4
 669 0014 1B6C     		ldr	r3, [r3, #64]
 670 0016 094A     		ldr	r2, .L37+4
 671 0018 43F00203 		orr	r3, r3, #2
 672 001c 1364     		str	r3, [r2, #64]
 673 001e 074B     		ldr	r3, .L37+4
 674 0020 1B6C     		ldr	r3, [r3, #64]
 675 0022 03F00203 		and	r3, r3, #2
 676 0026 FB60     		str	r3, [r7, #12]
 677 0028 FB68     		ldr	r3, [r7, #12]
 678              	.L36:
 679              	.LBE5:
 253:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 254:Src/tim.c     **** 
 255:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 256:Src/tim.c     ****   }
 257:Src/tim.c     **** }
 680              		.loc 1 257 0
 681 002a 00BF     		nop
 682 002c 1437     		adds	r7, r7, #20
 683              	.LCFI28:
 684              		.cfi_def_cfa_offset 4
 685 002e BD46     		mov	sp, r7
 686              	.LCFI29:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0030 5DF8047B 		ldr	r7, [sp], #4
 690              	.LCFI30:
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0034 7047     		bx	lr
 694              	.L38:
 695 0036 00BF     		.align	2
 696              	.L37:
 697 0038 00040040 		.word	1073742848
 698 003c 00380240 		.word	1073887232
 699              		.cfi_endproc
 700              	.LFE143:
 702              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 703              		.align	1
 704              		.global	HAL_TIM_MspPostInit
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	HAL_TIM_MspPostInit:
 711              	.LFB144:
 258:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 259:Src/tim.c     **** {
 712              		.loc 1 259 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 32
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716 0000 80B5     		push	{r7, lr}
 717              	.LCFI31:
ARM GAS  /tmp/ccsswoLZ.s 			page 18


 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 88B0     		sub	sp, sp, #32
 722              	.LCFI32:
 723              		.cfi_def_cfa_offset 40
 724 0004 00AF     		add	r7, sp, #0
 725              	.LCFI33:
 726              		.cfi_def_cfa_register 7
 727 0006 7860     		str	r0, [r7, #4]
 260:Src/tim.c     **** 
 261:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 262:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 728              		.loc 1 262 0
 729 0008 7B68     		ldr	r3, [r7, #4]
 730 000a 1B68     		ldr	r3, [r3]
 731 000c 224A     		ldr	r2, .L44
 732 000e 9342     		cmp	r3, r2
 733 0010 10D1     		bne	.L40
 263:Src/tim.c     ****   {
 264:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 265:Src/tim.c     **** 
 266:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 267:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 268:Src/tim.c     ****     PC6     ------> TIM3_CH1
 269:Src/tim.c     ****     PC7     ------> TIM3_CH2 
 270:Src/tim.c     ****     */
 271:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 734              		.loc 1 271 0
 735 0012 C023     		movs	r3, #192
 736 0014 FB60     		str	r3, [r7, #12]
 272:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 737              		.loc 1 272 0
 738 0016 0223     		movs	r3, #2
 739 0018 3B61     		str	r3, [r7, #16]
 273:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 740              		.loc 1 273 0
 741 001a 0023     		movs	r3, #0
 742 001c 7B61     		str	r3, [r7, #20]
 274:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 743              		.loc 1 274 0
 744 001e 0023     		movs	r3, #0
 745 0020 BB61     		str	r3, [r7, #24]
 275:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 746              		.loc 1 275 0
 747 0022 0223     		movs	r3, #2
 748 0024 FB61     		str	r3, [r7, #28]
 276:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 749              		.loc 1 276 0
 750 0026 07F10C03 		add	r3, r7, #12
 751 002a 1946     		mov	r1, r3
 752 002c 1B48     		ldr	r0, .L44+4
 753 002e FFF7FEFF 		bl	HAL_GPIO_Init
 277:Src/tim.c     **** 
 278:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 279:Src/tim.c     **** 
 280:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
ARM GAS  /tmp/ccsswoLZ.s 			page 19


 281:Src/tim.c     ****   }
 282:Src/tim.c     ****   else if(timHandle->Instance==TIM13)
 283:Src/tim.c     ****   {
 284:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 0 */
 285:Src/tim.c     **** 
 286:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 0 */
 287:Src/tim.c     ****   
 288:Src/tim.c     ****     /**TIM13 GPIO Configuration    
 289:Src/tim.c     ****     PF8     ------> TIM13_CH1 
 290:Src/tim.c     ****     */
 291:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 292:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 293:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 294:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 295:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 296:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 297:Src/tim.c     **** 
 298:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 1 */
 299:Src/tim.c     **** 
 300:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 1 */
 301:Src/tim.c     ****   }
 302:Src/tim.c     ****   else if(timHandle->Instance==TIM14)
 303:Src/tim.c     ****   {
 304:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 0 */
 305:Src/tim.c     **** 
 306:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 0 */
 307:Src/tim.c     ****   
 308:Src/tim.c     ****     /**TIM14 GPIO Configuration    
 309:Src/tim.c     ****     PF9     ------> TIM14_CH1 
 310:Src/tim.c     ****     */
 311:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 312:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 313:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 314:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 315:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 316:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 317:Src/tim.c     **** 
 318:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 1 */
 319:Src/tim.c     **** 
 320:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 1 */
 321:Src/tim.c     ****   }
 322:Src/tim.c     **** 
 323:Src/tim.c     **** }
 754              		.loc 1 323 0
 755 0032 2CE0     		b	.L43
 756              	.L40:
 282:Src/tim.c     ****   {
 757              		.loc 1 282 0
 758 0034 7B68     		ldr	r3, [r7, #4]
 759 0036 1B68     		ldr	r3, [r3]
 760 0038 194A     		ldr	r2, .L44+8
 761 003a 9342     		cmp	r3, r2
 762 003c 11D1     		bne	.L42
 291:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 763              		.loc 1 291 0
 764 003e 4FF48073 		mov	r3, #256
 765 0042 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccsswoLZ.s 			page 20


 292:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 766              		.loc 1 292 0
 767 0044 0223     		movs	r3, #2
 768 0046 3B61     		str	r3, [r7, #16]
 293:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 769              		.loc 1 293 0
 770 0048 0023     		movs	r3, #0
 771 004a 7B61     		str	r3, [r7, #20]
 294:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 772              		.loc 1 294 0
 773 004c 0023     		movs	r3, #0
 774 004e BB61     		str	r3, [r7, #24]
 295:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 775              		.loc 1 295 0
 776 0050 0923     		movs	r3, #9
 777 0052 FB61     		str	r3, [r7, #28]
 296:Src/tim.c     **** 
 778              		.loc 1 296 0
 779 0054 07F10C03 		add	r3, r7, #12
 780 0058 1946     		mov	r1, r3
 781 005a 1248     		ldr	r0, .L44+12
 782 005c FFF7FEFF 		bl	HAL_GPIO_Init
 783              		.loc 1 323 0
 784 0060 15E0     		b	.L43
 785              	.L42:
 302:Src/tim.c     ****   {
 786              		.loc 1 302 0
 787 0062 7B68     		ldr	r3, [r7, #4]
 788 0064 1B68     		ldr	r3, [r3]
 789 0066 104A     		ldr	r2, .L44+16
 790 0068 9342     		cmp	r3, r2
 791 006a 10D1     		bne	.L43
 311:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 792              		.loc 1 311 0
 793 006c 4FF40073 		mov	r3, #512
 794 0070 FB60     		str	r3, [r7, #12]
 312:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 795              		.loc 1 312 0
 796 0072 0223     		movs	r3, #2
 797 0074 3B61     		str	r3, [r7, #16]
 313:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 798              		.loc 1 313 0
 799 0076 0023     		movs	r3, #0
 800 0078 7B61     		str	r3, [r7, #20]
 314:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 801              		.loc 1 314 0
 802 007a 0023     		movs	r3, #0
 803 007c BB61     		str	r3, [r7, #24]
 315:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 804              		.loc 1 315 0
 805 007e 0923     		movs	r3, #9
 806 0080 FB61     		str	r3, [r7, #28]
 316:Src/tim.c     **** 
 807              		.loc 1 316 0
 808 0082 07F10C03 		add	r3, r7, #12
 809 0086 1946     		mov	r1, r3
 810 0088 0648     		ldr	r0, .L44+12
ARM GAS  /tmp/ccsswoLZ.s 			page 21


 811 008a FFF7FEFF 		bl	HAL_GPIO_Init
 812              	.L43:
 813              		.loc 1 323 0
 814 008e 00BF     		nop
 815 0090 2037     		adds	r7, r7, #32
 816              	.LCFI34:
 817              		.cfi_def_cfa_offset 8
 818 0092 BD46     		mov	sp, r7
 819              	.LCFI35:
 820              		.cfi_def_cfa_register 13
 821              		@ sp needed
 822 0094 80BD     		pop	{r7, pc}
 823              	.L45:
 824 0096 00BF     		.align	2
 825              	.L44:
 826 0098 00040040 		.word	1073742848
 827 009c 00080240 		.word	1073874944
 828 00a0 001C0040 		.word	1073748992
 829 00a4 00140240 		.word	1073878016
 830 00a8 00200040 		.word	1073750016
 831              		.cfi_endproc
 832              	.LFE144:
 834              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 835              		.align	1
 836              		.global	HAL_TIM_Base_MspDeInit
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv4-sp-d16
 842              	HAL_TIM_Base_MspDeInit:
 843              	.LFB145:
 324:Src/tim.c     **** 
 325:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 326:Src/tim.c     **** {
 844              		.loc 1 326 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 8
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848 0000 80B5     		push	{r7, lr}
 849              	.LCFI36:
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 82B0     		sub	sp, sp, #8
 854              	.LCFI37:
 855              		.cfi_def_cfa_offset 16
 856 0004 00AF     		add	r7, sp, #0
 857              	.LCFI38:
 858              		.cfi_def_cfa_register 7
 859 0006 7860     		str	r0, [r7, #4]
 327:Src/tim.c     **** 
 328:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 860              		.loc 1 328 0
 861 0008 7B68     		ldr	r3, [r7, #4]
 862 000a 1B68     		ldr	r3, [r3]
 863 000c B3F1804F 		cmp	r3, #1073741824
 864 0010 09D1     		bne	.L47
ARM GAS  /tmp/ccsswoLZ.s 			page 22


 329:Src/tim.c     ****   {
 330:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 331:Src/tim.c     **** 
 332:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 333:Src/tim.c     ****     /* Peripheral clock disable */
 334:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 865              		.loc 1 334 0
 866 0012 124B     		ldr	r3, .L51
 867 0014 1B6C     		ldr	r3, [r3, #64]
 868 0016 114A     		ldr	r2, .L51
 869 0018 23F00103 		bic	r3, r3, #1
 870 001c 1364     		str	r3, [r2, #64]
 335:Src/tim.c     **** 
 336:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 337:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 871              		.loc 1 337 0
 872 001e 1C20     		movs	r0, #28
 873 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 338:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 339:Src/tim.c     **** 
 340:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 341:Src/tim.c     ****   }
 342:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 343:Src/tim.c     ****   {
 344:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 0 */
 345:Src/tim.c     **** 
 346:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 0 */
 347:Src/tim.c     ****     /* Peripheral clock disable */
 348:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_DISABLE();
 349:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 350:Src/tim.c     **** 
 351:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 1 */
 352:Src/tim.c     ****   }
 353:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 354:Src/tim.c     ****   {
 355:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 0 */
 356:Src/tim.c     **** 
 357:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 0 */
 358:Src/tim.c     ****     /* Peripheral clock disable */
 359:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_DISABLE();
 360:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 361:Src/tim.c     **** 
 362:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 1 */
 363:Src/tim.c     ****   }
 364:Src/tim.c     **** }
 874              		.loc 1 364 0
 875 0024 16E0     		b	.L50
 876              	.L47:
 342:Src/tim.c     ****   {
 877              		.loc 1 342 0
 878 0026 7B68     		ldr	r3, [r7, #4]
 879 0028 1B68     		ldr	r3, [r3]
 880 002a 0D4A     		ldr	r2, .L51+4
 881 002c 9342     		cmp	r3, r2
 882 002e 06D1     		bne	.L49
 348:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 883              		.loc 1 348 0
ARM GAS  /tmp/ccsswoLZ.s 			page 23


 884 0030 0A4B     		ldr	r3, .L51
 885 0032 1B6C     		ldr	r3, [r3, #64]
 886 0034 094A     		ldr	r2, .L51
 887 0036 23F08003 		bic	r3, r3, #128
 888 003a 1364     		str	r3, [r2, #64]
 889              		.loc 1 364 0
 890 003c 0AE0     		b	.L50
 891              	.L49:
 353:Src/tim.c     ****   {
 892              		.loc 1 353 0
 893 003e 7B68     		ldr	r3, [r7, #4]
 894 0040 1B68     		ldr	r3, [r3]
 895 0042 084A     		ldr	r2, .L51+8
 896 0044 9342     		cmp	r3, r2
 897 0046 05D1     		bne	.L50
 359:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 898              		.loc 1 359 0
 899 0048 044B     		ldr	r3, .L51
 900 004a 1B6C     		ldr	r3, [r3, #64]
 901 004c 034A     		ldr	r2, .L51
 902 004e 23F48073 		bic	r3, r3, #256
 903 0052 1364     		str	r3, [r2, #64]
 904              	.L50:
 905              		.loc 1 364 0
 906 0054 00BF     		nop
 907 0056 0837     		adds	r7, r7, #8
 908              	.LCFI39:
 909              		.cfi_def_cfa_offset 8
 910 0058 BD46     		mov	sp, r7
 911              	.LCFI40:
 912              		.cfi_def_cfa_register 13
 913              		@ sp needed
 914 005a 80BD     		pop	{r7, pc}
 915              	.L52:
 916              		.align	2
 917              	.L51:
 918 005c 00380240 		.word	1073887232
 919 0060 001C0040 		.word	1073748992
 920 0064 00200040 		.word	1073750016
 921              		.cfi_endproc
 922              	.LFE145:
 924              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 925              		.align	1
 926              		.global	HAL_TIM_PWM_MspDeInit
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	HAL_TIM_PWM_MspDeInit:
 933              	.LFB146:
 365:Src/tim.c     **** 
 366:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 367:Src/tim.c     **** {
 934              		.loc 1 367 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 8
 937              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccsswoLZ.s 			page 24


 938              		@ link register save eliminated.
 939 0000 80B4     		push	{r7}
 940              	.LCFI41:
 941              		.cfi_def_cfa_offset 4
 942              		.cfi_offset 7, -4
 943 0002 83B0     		sub	sp, sp, #12
 944              	.LCFI42:
 945              		.cfi_def_cfa_offset 16
 946 0004 00AF     		add	r7, sp, #0
 947              	.LCFI43:
 948              		.cfi_def_cfa_register 7
 949 0006 7860     		str	r0, [r7, #4]
 368:Src/tim.c     **** 
 369:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 950              		.loc 1 369 0
 951 0008 7B68     		ldr	r3, [r7, #4]
 952 000a 1B68     		ldr	r3, [r3]
 953 000c 074A     		ldr	r2, .L56
 954 000e 9342     		cmp	r3, r2
 955 0010 05D1     		bne	.L55
 370:Src/tim.c     ****   {
 371:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 372:Src/tim.c     **** 
 373:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 374:Src/tim.c     ****     /* Peripheral clock disable */
 375:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 956              		.loc 1 375 0
 957 0012 074B     		ldr	r3, .L56+4
 958 0014 1B6C     		ldr	r3, [r3, #64]
 959 0016 064A     		ldr	r2, .L56+4
 960 0018 23F00203 		bic	r3, r3, #2
 961 001c 1364     		str	r3, [r2, #64]
 962              	.L55:
 376:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 377:Src/tim.c     **** 
 378:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 379:Src/tim.c     ****   }
 380:Src/tim.c     **** } 
 963              		.loc 1 380 0
 964 001e 00BF     		nop
 965 0020 0C37     		adds	r7, r7, #12
 966              	.LCFI44:
 967              		.cfi_def_cfa_offset 4
 968 0022 BD46     		mov	sp, r7
 969              	.LCFI45:
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 0024 5DF8047B 		ldr	r7, [sp], #4
 973              	.LCFI46:
 974              		.cfi_restore 7
 975              		.cfi_def_cfa_offset 0
 976 0028 7047     		bx	lr
 977              	.L57:
 978 002a 00BF     		.align	2
 979              	.L56:
 980 002c 00040040 		.word	1073742848
 981 0030 00380240 		.word	1073887232
ARM GAS  /tmp/ccsswoLZ.s 			page 25


 982              		.cfi_endproc
 983              	.LFE146:
 985              		.text
 986              	.Letext0:
 987              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdint-gcc.h"
 988              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 989              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 990              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 991              		.file 6 "/usr/include/newlib/sys/lock.h"
 992              		.file 7 "/usr/include/newlib/sys/_types.h"
 993              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 994              		.file 9 "/usr/include/newlib/sys/reent.h"
 995              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 996              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 997              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 998              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 999              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1000              		.file 15 "Inc/tim.h"
ARM GAS  /tmp/ccsswoLZ.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000040 htim3
                            *COM*:0000000000000040 htim13
                            *COM*:0000000000000040 htim14
     /tmp/ccsswoLZ.s:22     .rodata:0000000000000000 $d
     /tmp/ccsswoLZ.s:26     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccsswoLZ.s:33     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccsswoLZ.s:134    .text.MX_TIM2_Init:000000000000008c $d
     /tmp/ccsswoLZ.s:140    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccsswoLZ.s:147    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccsswoLZ.s:710    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccsswoLZ.s:274    .text.MX_TIM3_Init:00000000000000b8 $d
     /tmp/ccsswoLZ.s:281    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccsswoLZ.s:288    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccsswoLZ.s:393    .text.MX_TIM13_Init:000000000000008c $d
     /tmp/ccsswoLZ.s:400    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccsswoLZ.s:407    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccsswoLZ.s:512    .text.MX_TIM14_Init:000000000000008c $d
     /tmp/ccsswoLZ.s:519    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccsswoLZ.s:526    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccsswoLZ.s:628    .text.HAL_TIM_Base_MspInit:000000000000008c $d
     /tmp/ccsswoLZ.s:635    .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccsswoLZ.s:642    .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccsswoLZ.s:697    .text.HAL_TIM_PWM_MspInit:0000000000000038 $d
     /tmp/ccsswoLZ.s:703    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccsswoLZ.s:826    .text.HAL_TIM_MspPostInit:0000000000000098 $d
     /tmp/ccsswoLZ.s:835    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccsswoLZ.s:842    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccsswoLZ.s:918    .text.HAL_TIM_Base_MspDeInit:000000000000005c $d
     /tmp/ccsswoLZ.s:925    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccsswoLZ.s:932    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccsswoLZ.s:980    .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
_Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
HAL_NVIC_DisableIRQ
