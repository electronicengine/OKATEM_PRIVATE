ARM GAS  /tmp/ccBSRTwb.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	gpsData,416,4
  18              		.comm	sensorValues,20,4
  19              		.comm	calibration,4,4
  20              		.comm	motor1,8,4
  21              		.comm	motor2,8,4
  22              		.comm	motor3,8,4
  23              		.comm	motor4,8,4
  24              		.comm	servo1,8,4
  25              		.comm	servo2,8,4
  26              		.comm	gpsThreadHandle,4,4
  27              		.comm	sensorThreadHandle,4,4
  28              		.comm	spiComThreadHandle,4,4
  29              		.comm	motorThreadHandle,4,4
  30              		.comm	spiMutexHandle,4,4
  31              		.comm	uartMutexHandle,4,4
  32              		.comm	memoryMutexHandle,4,4
  33              		.comm	spiSemaphoreHandle,4,4
  34              		.comm	uartSemaphoreHandle,4,4
  35              		.comm	SpiCheckData,4,4
  36              		.comm	SpiTxData,4,4
  37              		.comm	SpiRxData,4,4
  38              		.comm	EnvironmentData,4,4
  39              		.comm	ControlData,4,4
  40              		.comm	UpdateFile,4,4
  41              		.comm	SensorCalibrationNeeded,4,4
  42              		.comm	rx_buf,1,1
  43              		.section	.text.main,"ax",%progbits
  44              		.align	1
  45              		.global	main
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	main:
  52              	.LFB141:
  53              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file           : main.c
   4:Src/main.c    ****   * @brief          : Main program body
   5:Src/main.c    ****   ******************************************************************************
ARM GAS  /tmp/ccBSRTwb.s 			page 2


   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f7xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "eth.h"
  53:Src/main.c    **** #include "i2c.h"
  54:Src/main.c    **** #include "rtc.h"
  55:Src/main.c    **** #include "spi.h"
  56:Src/main.c    **** #include "tim.h"
  57:Src/main.c    **** #include "usart.h"
  58:Src/main.c    **** #include "gpio.h"
  59:Src/main.c    **** #include <stdarg.h>
  60:Src/main.c    **** #include <stdio.h>
  61:Src/main.c    **** #include "freertos.h"
  62:Src/main.c    **** 
ARM GAS  /tmp/ccBSRTwb.s 			page 3


  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** void MX_FREERTOS_Init(void);
  65:Src/main.c    **** 
  66:Src/main.c    **** #define APPLICATION_ADDRESS        0x08010000
  67:Src/main.c    **** 
  68:Src/main.c    **** typedef void (*pFunction)(void);
  69:Src/main.c    **** 
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  54              		.loc 1 72 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              	.LCFI1:
  65              		.cfi_def_cfa_register 7
  73:Src/main.c    **** 
  74:Src/main.c    **** 
  75:Src/main.c    **** //    /* Reconfigure vector table offset register to match the application location */
  76:Src/main.c    ****   SCB->VTOR = (unsigned long)APPLICATION_ADDRESS;
  66              		.loc 1 76 0
  67 0004 0D4B     		ldr	r3, .L3
  68 0006 0E4A     		ldr	r2, .L3+4
  69 0008 9A60     		str	r2, [r3, #8]
  77:Src/main.c    **** 
  78:Src/main.c    ****   HAL_Init();
  70              		.loc 1 78 0
  71 000a FFF7FEFF 		bl	HAL_Init
  79:Src/main.c    **** 
  80:Src/main.c    **** 
  81:Src/main.c    ****   SystemClock_Config();
  72              		.loc 1 81 0
  73 000e FFF7FEFF 		bl	SystemClock_Config
  82:Src/main.c    **** 
  83:Src/main.c    ****   MX_GPIO_Init();
  74              		.loc 1 83 0
  75 0012 FFF7FEFF 		bl	MX_GPIO_Init
  84:Src/main.c    ****   MX_I2C2_Init();
  76              		.loc 1 84 0
  77 0016 FFF7FEFF 		bl	MX_I2C2_Init
  85:Src/main.c    ****   MX_I2C4_Init();
  78              		.loc 1 85 0
  79 001a FFF7FEFF 		bl	MX_I2C4_Init
  86:Src/main.c    ****   MX_SPI1_Init();
  80              		.loc 1 86 0
  81 001e FFF7FEFF 		bl	MX_SPI1_Init
  87:Src/main.c    ****   MX_TIM3_Init();
  82              		.loc 1 87 0
  83 0022 FFF7FEFF 		bl	MX_TIM3_Init
  88:Src/main.c    ****   MX_UART4_Init();
  84              		.loc 1 88 0
ARM GAS  /tmp/ccBSRTwb.s 			page 4


  85 0026 FFF7FEFF 		bl	MX_UART4_Init
  89:Src/main.c    ****   MX_USART1_UART_Init();
  86              		.loc 1 89 0
  87 002a FFF7FEFF 		bl	MX_USART1_UART_Init
  90:Src/main.c    ****   MX_TIM2_Init();
  88              		.loc 1 90 0
  89 002e FFF7FEFF 		bl	MX_TIM2_Init
  91:Src/main.c    **** 
  92:Src/main.c    **** 
  93:Src/main.c    ****   MX_FREERTOS_Init();
  90              		.loc 1 93 0
  91 0032 FFF7FEFF 		bl	MX_FREERTOS_Init
  94:Src/main.c    **** 
  95:Src/main.c    ****   osKernelStart();
  92              		.loc 1 95 0
  93 0036 FFF7FEFF 		bl	osKernelStart
  94              	.L2:
  96:Src/main.c    **** 
  97:Src/main.c    **** 
  98:Src/main.c    ****   while (1);
  95              		.loc 1 98 0 discriminator 1
  96 003a FEE7     		b	.L2
  97              	.L4:
  98              		.align	2
  99              	.L3:
 100 003c 00ED00E0 		.word	-536810240
 101 0040 00000108 		.word	134283264
 102              		.cfi_endproc
 103              	.LFE141:
 105              		.section	.rodata
 106              		.align	2
 107              	.LC0:
 108 0000 5372632F 		.ascii	"Src/main.c\000"
 108      6D61696E 
 108      2E6300
 109              		.section	.text.SystemClock_Config,"ax",%progbits
 110              		.align	1
 111              		.global	SystemClock_Config
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	SystemClock_Config:
 118              	.LFB142:
  99:Src/main.c    **** 
 100:Src/main.c    **** 
 101:Src/main.c    **** }
 102:Src/main.c    **** 
 103:Src/main.c    **** 
 104:Src/main.c    **** void SystemClock_Config(void)
 105:Src/main.c    **** {
 119              		.loc 1 105 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 208
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0000 80B5     		push	{r7, lr}
 124              	.LCFI2:
ARM GAS  /tmp/ccBSRTwb.s 			page 5


 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 B4B0     		sub	sp, sp, #208
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 216
 131 0004 00AF     		add	r7, sp, #0
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 7
 134              	.LBB2:
 106:Src/main.c    **** 
 107:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 108:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 109:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 110:Src/main.c    **** 
 111:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 112:Src/main.c    ****     */
 113:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 135              		.loc 1 113 0
 136 0006 504A     		ldr	r2, .L10
 137 0008 4F4B     		ldr	r3, .L10
 138 000a 1B6C     		ldr	r3, [r3, #64]
 139 000c 43F08053 		orr	r3, r3, #268435456
 140 0010 1364     		str	r3, [r2, #64]
 141 0012 4D4B     		ldr	r3, .L10
 142 0014 1B6C     		ldr	r3, [r3, #64]
 143 0016 03F08053 		and	r3, r3, #268435456
 144 001a 7B60     		str	r3, [r7, #4]
 145 001c 7B68     		ldr	r3, [r7, #4]
 146              	.LBE2:
 147              	.LBB3:
 114:Src/main.c    **** 
 115:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 148              		.loc 1 115 0
 149 001e 4B4A     		ldr	r2, .L10+4
 150 0020 4A4B     		ldr	r3, .L10+4
 151 0022 1B68     		ldr	r3, [r3]
 152 0024 43F44043 		orr	r3, r3, #49152
 153 0028 1360     		str	r3, [r2]
 154 002a 484B     		ldr	r3, .L10+4
 155 002c 1B68     		ldr	r3, [r3]
 156 002e 03F44043 		and	r3, r3, #49152
 157 0032 3B60     		str	r3, [r7]
 158 0034 3B68     		ldr	r3, [r7]
 159              	.LBE3:
 116:Src/main.c    **** 
 117:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 118:Src/main.c    ****     */
 119:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 160              		.loc 1 119 0
 161 0036 0923     		movs	r3, #9
 162 0038 C7F8A030 		str	r3, [r7, #160]
 120:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 163              		.loc 1 120 0
 164 003c 4FF48033 		mov	r3, #65536
 165 0040 C7F8A430 		str	r3, [r7, #164]
 121:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
ARM GAS  /tmp/ccBSRTwb.s 			page 6


 166              		.loc 1 121 0
 167 0044 0123     		movs	r3, #1
 168 0046 C7F8B430 		str	r3, [r7, #180]
 122:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 169              		.loc 1 122 0
 170 004a 0223     		movs	r3, #2
 171 004c C7F8B830 		str	r3, [r7, #184]
 123:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 172              		.loc 1 123 0
 173 0050 4FF48003 		mov	r3, #4194304
 174 0054 C7F8BC30 		str	r3, [r7, #188]
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 175              		.loc 1 124 0
 176 0058 0823     		movs	r3, #8
 177 005a C7F8C030 		str	r3, [r7, #192]
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 432;
 178              		.loc 1 125 0
 179 005e 4FF4D873 		mov	r3, #432
 180 0062 C7F8C430 		str	r3, [r7, #196]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 181              		.loc 1 126 0
 182 0066 0223     		movs	r3, #2
 183 0068 C7F8C830 		str	r3, [r7, #200]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 184              		.loc 1 127 0
 185 006c 0223     		movs	r3, #2
 186 006e C7F8CC30 		str	r3, [r7, #204]
 128:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187              		.loc 1 128 0
 188 0072 07F1A003 		add	r3, r7, #160
 189 0076 1846     		mov	r0, r3
 190 0078 FFF7FEFF 		bl	HAL_RCC_OscConfig
 191 007c 0346     		mov	r3, r0
 192 007e 002B     		cmp	r3, #0
 193 0080 03D0     		beq	.L6
 129:Src/main.c    ****   {
 130:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 194              		.loc 1 130 0
 195 0082 8221     		movs	r1, #130
 196 0084 3248     		ldr	r0, .L10+8
 197 0086 FFF7FEFF 		bl	_Error_Handler
 198              	.L6:
 131:Src/main.c    ****   }
 132:Src/main.c    **** 
 133:Src/main.c    ****     /**Activate the Over-Drive mode 
 134:Src/main.c    ****     */
 135:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 199              		.loc 1 135 0
 200 008a FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 201 008e 0346     		mov	r3, r0
 202 0090 002B     		cmp	r3, #0
 203 0092 03D0     		beq	.L7
 136:Src/main.c    ****   {
 137:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 204              		.loc 1 137 0
 205 0094 8921     		movs	r1, #137
 206 0096 2E48     		ldr	r0, .L10+8
ARM GAS  /tmp/ccBSRTwb.s 			page 7


 207 0098 FFF7FEFF 		bl	_Error_Handler
 208              	.L7:
 138:Src/main.c    ****   }
 139:Src/main.c    **** 
 140:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 141:Src/main.c    ****     */
 142:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 209              		.loc 1 142 0
 210 009c 0F23     		movs	r3, #15
 211 009e C7F88C30 		str	r3, [r7, #140]
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 212              		.loc 1 144 0
 213 00a2 0223     		movs	r3, #2
 214 00a4 C7F89030 		str	r3, [r7, #144]
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215              		.loc 1 145 0
 216 00a8 0023     		movs	r3, #0
 217 00aa C7F89430 		str	r3, [r7, #148]
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 218              		.loc 1 146 0
 219 00ae 4FF4A053 		mov	r3, #5120
 220 00b2 C7F89830 		str	r3, [r7, #152]
 147:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 221              		.loc 1 147 0
 222 00b6 4FF48053 		mov	r3, #4096
 223 00ba C7F89C30 		str	r3, [r7, #156]
 148:Src/main.c    **** 
 149:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 224              		.loc 1 149 0
 225 00be 07F18C03 		add	r3, r7, #140
 226 00c2 0721     		movs	r1, #7
 227 00c4 1846     		mov	r0, r3
 228 00c6 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 229 00ca 0346     		mov	r3, r0
 230 00cc 002B     		cmp	r3, #0
 231 00ce 03D0     		beq	.L8
 150:Src/main.c    ****   {
 151:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 232              		.loc 1 151 0
 233 00d0 9721     		movs	r1, #151
 234 00d2 1F48     		ldr	r0, .L10+8
 235 00d4 FFF7FEFF 		bl	_Error_Handler
 236              	.L8:
 152:Src/main.c    ****   }
 153:Src/main.c    **** 
 154:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 237              		.loc 1 154 0
 238 00d8 1E4B     		ldr	r3, .L10+12
 239 00da BB60     		str	r3, [r7, #8]
 155:Src/main.c    ****                               |RCC_PERIPHCLK_UART4|RCC_PERIPHCLK_UART7
 156:Src/main.c    ****                               |RCC_PERIPHCLK_UART8|RCC_PERIPHCLK_I2C1
 157:Src/main.c    ****                               |RCC_PERIPHCLK_I2C2|RCC_PERIPHCLK_I2C3
 158:Src/main.c    ****                               |RCC_PERIPHCLK_I2C4;
 159:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 240              		.loc 1 159 0
 241 00dc 4FF40073 		mov	r3, #512
ARM GAS  /tmp/ccBSRTwb.s 			page 8


 242 00e0 BB63     		str	r3, [r7, #56]
 160:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 243              		.loc 1 160 0
 244 00e2 0023     		movs	r3, #0
 245 00e4 FB64     		str	r3, [r7, #76]
 161:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 246              		.loc 1 161 0
 247 00e6 0023     		movs	r3, #0
 248 00e8 BB65     		str	r3, [r7, #88]
 162:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 249              		.loc 1 162 0
 250 00ea 0023     		movs	r3, #0
 251 00ec 7B66     		str	r3, [r7, #100]
 163:Src/main.c    ****   PeriphClkInitStruct.Uart8ClockSelection = RCC_UART8CLKSOURCE_PCLK1;
 252              		.loc 1 163 0
 253 00ee 0023     		movs	r3, #0
 254 00f0 BB66     		str	r3, [r7, #104]
 164:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 255              		.loc 1 164 0
 256 00f2 0023     		movs	r3, #0
 257 00f4 FB66     		str	r3, [r7, #108]
 165:Src/main.c    ****   PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 258              		.loc 1 165 0
 259 00f6 0023     		movs	r3, #0
 260 00f8 3B67     		str	r3, [r7, #112]
 166:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 261              		.loc 1 166 0
 262 00fa 0023     		movs	r3, #0
 263 00fc 7B67     		str	r3, [r7, #116]
 167:Src/main.c    ****   PeriphClkInitStruct.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 264              		.loc 1 167 0
 265 00fe 0023     		movs	r3, #0
 266 0100 BB67     		str	r3, [r7, #120]
 168:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 267              		.loc 1 168 0
 268 0102 07F10803 		add	r3, r7, #8
 269 0106 1846     		mov	r0, r3
 270 0108 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 271 010c 0346     		mov	r3, r0
 272 010e 002B     		cmp	r3, #0
 273 0110 03D0     		beq	.L9
 169:Src/main.c    ****   {
 170:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 274              		.loc 1 170 0
 275 0112 AA21     		movs	r1, #170
 276 0114 0E48     		ldr	r0, .L10+8
 277 0116 FFF7FEFF 		bl	_Error_Handler
 278              	.L9:
 171:Src/main.c    ****   }
 172:Src/main.c    **** 
 173:Src/main.c    ****     /**Configure the Systick interrupt time 
 174:Src/main.c    ****     */
 175:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 279              		.loc 1 175 0
 280 011a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 281 011e 0246     		mov	r2, r0
 282 0120 0D4B     		ldr	r3, .L10+16
ARM GAS  /tmp/ccBSRTwb.s 			page 9


 283 0122 A3FB0223 		umull	r2, r3, r3, r2
 284 0126 9B09     		lsrs	r3, r3, #6
 285 0128 1846     		mov	r0, r3
 286 012a FFF7FEFF 		bl	HAL_SYSTICK_Config
 176:Src/main.c    **** 
 177:Src/main.c    ****     /**Configure the Systick 
 178:Src/main.c    ****     */
 179:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 287              		.loc 1 179 0
 288 012e 0420     		movs	r0, #4
 289 0130 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 182:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 290              		.loc 1 182 0
 291 0134 0022     		movs	r2, #0
 292 0136 0F21     		movs	r1, #15
 293 0138 4FF0FF30 		mov	r0, #-1
 294 013c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183:Src/main.c    **** }
 295              		.loc 1 183 0
 296 0140 00BF     		nop
 297 0142 D037     		adds	r7, r7, #208
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 8
 300 0144 BD46     		mov	sp, r7
 301              	.LCFI6:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 0146 80BD     		pop	{r7, pc}
 305              	.L11:
 306              		.align	2
 307              	.L10:
 308 0148 00380240 		.word	1073887232
 309 014c 00700040 		.word	1073770496
 310 0150 00000000 		.word	.LC0
 311 0154 60F20300 		.word	258656
 312 0158 D34D6210 		.word	274877907
 313              		.cfi_endproc
 314              	.LFE142:
 316              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 317              		.align	1
 318              		.global	HAL_TIM_PeriodElapsedCallback
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 322              		.fpu fpv4-sp-d16
 324              	HAL_TIM_PeriodElapsedCallback:
 325              	.LFB143:
 184:Src/main.c    **** 
 185:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 186:Src/main.c    **** {
 326              		.loc 1 186 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccBSRTwb.s 			page 10


 331              	.LCFI7:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 82B0     		sub	sp, sp, #8
 336              	.LCFI8:
 337              		.cfi_def_cfa_offset 16
 338 0004 00AF     		add	r7, sp, #0
 339              	.LCFI9:
 340              		.cfi_def_cfa_register 7
 341 0006 7860     		str	r0, [r7, #4]
 187:Src/main.c    **** 
 188:Src/main.c    ****   if (htim->Instance == TIM4) {
 342              		.loc 1 188 0
 343 0008 7B68     		ldr	r3, [r7, #4]
 344 000a 1B68     		ldr	r3, [r3]
 345 000c 044A     		ldr	r2, .L15
 346 000e 9342     		cmp	r3, r2
 347 0010 01D1     		bne	.L14
 189:Src/main.c    ****     HAL_IncTick();
 348              		.loc 1 189 0
 349 0012 FFF7FEFF 		bl	HAL_IncTick
 350              	.L14:
 190:Src/main.c    ****   }
 191:Src/main.c    **** 
 192:Src/main.c    **** }
 351              		.loc 1 192 0
 352 0016 00BF     		nop
 353 0018 0837     		adds	r7, r7, #8
 354              	.LCFI10:
 355              		.cfi_def_cfa_offset 8
 356 001a BD46     		mov	sp, r7
 357              	.LCFI11:
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 001c 80BD     		pop	{r7, pc}
 361              	.L16:
 362 001e 00BF     		.align	2
 363              	.L15:
 364 0020 00080040 		.word	1073743872
 365              		.cfi_endproc
 366              	.LFE143:
 368              		.section	.text._Error_Handler,"ax",%progbits
 369              		.align	1
 370              		.global	_Error_Handler
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	_Error_Handler:
 377              	.LFB144:
 193:Src/main.c    **** 
 194:Src/main.c    **** void _Error_Handler(char *file, int line)
 195:Src/main.c    **** {
 378              		.loc 1 195 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccBSRTwb.s 			page 11


 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383 0000 80B4     		push	{r7}
 384              	.LCFI12:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 83B0     		sub	sp, sp, #12
 388              	.LCFI13:
 389              		.cfi_def_cfa_offset 16
 390 0004 00AF     		add	r7, sp, #0
 391              	.LCFI14:
 392              		.cfi_def_cfa_register 7
 393 0006 7860     		str	r0, [r7, #4]
 394 0008 3960     		str	r1, [r7]
 395              	.L18:
 196:Src/main.c    **** 
 197:Src/main.c    ****   while(1)
 396              		.loc 1 197 0 discriminator 1
 397 000a FEE7     		b	.L18
 398              		.cfi_endproc
 399              	.LFE144:
 401              		.text
 402              	.Letext0:
 403              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 404              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 405              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 406              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 407              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 408              		.file 7 "/usr/include/newlib/sys/lock.h"
 409              		.file 8 "/usr/include/newlib/sys/_types.h"
 410              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 411              		.file 10 "/usr/include/newlib/sys/reent.h"
 412              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 413              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 414              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 415              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 416              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 417              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 418              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 419              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 420              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 421              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 422              		.file 21 "Inc/main.h"
 423              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 424              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 425              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 426              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 427              		.file 26 "Inc/eth.h"
 428              		.file 27 "Inc/i2c.h"
 429              		.file 28 "Inc/rtc.h"
 430              		.file 29 "Inc/spi.h"
 431              		.file 30 "Inc/tim.h"
 432              		.file 31 "Inc/usart.h"
 433              		.file 32 "Inc/gps.h"
 434              		.file 33 "Inc/sensor.h"
 435              		.file 34 "Inc/motor.h"
 436              		.file 35 "Inc/freertos.h"
ARM GAS  /tmp/ccBSRTwb.s 			page 12


ARM GAS  /tmp/ccBSRTwb.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:00000000000001a0 gpsData
                            *COM*:0000000000000014 sensorValues
                            *COM*:0000000000000004 calibration
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000008 servo1
                            *COM*:0000000000000008 servo2
                            *COM*:0000000000000004 gpsThreadHandle
                            *COM*:0000000000000004 sensorThreadHandle
                            *COM*:0000000000000004 spiComThreadHandle
                            *COM*:0000000000000004 motorThreadHandle
                            *COM*:0000000000000004 spiMutexHandle
                            *COM*:0000000000000004 uartMutexHandle
                            *COM*:0000000000000004 memoryMutexHandle
                            *COM*:0000000000000004 spiSemaphoreHandle
                            *COM*:0000000000000004 uartSemaphoreHandle
                            *COM*:0000000000000004 SpiCheckData
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 EnvironmentData
                            *COM*:0000000000000004 ControlData
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000004 SensorCalibrationNeeded
                            *COM*:0000000000000001 rx_buf
     /tmp/ccBSRTwb.s:44     .text.main:0000000000000000 $t
     /tmp/ccBSRTwb.s:51     .text.main:0000000000000000 main
     /tmp/ccBSRTwb.s:117    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccBSRTwb.s:100    .text.main:000000000000003c $d
     /tmp/ccBSRTwb.s:106    .rodata:0000000000000000 $d
     /tmp/ccBSRTwb.s:110    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccBSRTwb.s:376    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccBSRTwb.s:308    .text.SystemClock_Config:0000000000000148 $d
     /tmp/ccBSRTwb.s:317    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccBSRTwb.s:324    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccBSRTwb.s:364    .text.HAL_TIM_PeriodElapsedCallback:0000000000000020 $d
     /tmp/ccBSRTwb.s:369    .text._Error_Handler:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_I2C2_Init
MX_I2C4_Init
MX_SPI1_Init
MX_TIM3_Init
MX_UART4_Init
MX_USART1_UART_Init
MX_TIM2_Init
MX_FREERTOS_Init
osKernelStart
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
ARM GAS  /tmp/ccBSRTwb.s 			page 14


HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_IncTick
