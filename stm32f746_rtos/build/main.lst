ARM GAS  /tmp/cckUegrF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	gpsData,416,4
  18              		.comm	sensorValues,20,4
  19              		.comm	motor1,8,4
  20              		.comm	motor2,8,4
  21              		.comm	motor3,8,4
  22              		.comm	motor4,8,4
  23              		.comm	gpsThreadHandle,4,4
  24              		.comm	sensorThreadHandle,4,4
  25              		.comm	spiComThreadHandle,4,4
  26              		.comm	motorThreadHandle,4,4
  27              		.comm	spiMutexHandle,4,4
  28              		.comm	uartMutexHandle,4,4
  29              		.comm	memoryMutexHandle,4,4
  30              		.comm	spiSemaphoreHandle,4,4
  31              		.comm	uartSemaphoreHandle,4,4
  32              		.comm	SpiCheckData,4,4
  33              		.comm	SpiTxData,4,4
  34              		.comm	SpiRxData,4,4
  35              		.comm	EnvironmentData,4,4
  36              		.comm	ControlData,4,4
  37              		.comm	UpdateFile,4,4
  38              		.comm	rx_buf,1,1
  39              		.section	.text.main,"ax",%progbits
  40              		.align	1
  41              		.global	main
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	main:
  48              	.LFB141:
  49              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file           : main.c
   4:Src/main.c    ****   * @brief          : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
ARM GAS  /tmp/cckUegrF.s 			page 2


  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f7xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "eth.h"
  53:Src/main.c    **** #include "i2c.h"
  54:Src/main.c    **** #include "rtc.h"
  55:Src/main.c    **** #include "spi.h"
  56:Src/main.c    **** #include "tim.h"
  57:Src/main.c    **** #include "usart.h"
  58:Src/main.c    **** #include "gpio.h"
  59:Src/main.c    **** #include <stdarg.h>
  60:Src/main.c    **** #include <stdio.h>
  61:Src/main.c    **** #include "freertos.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** void MX_FREERTOS_Init(void);
  65:Src/main.c    **** 
  66:Src/main.c    **** #define APPLICATION_ADDRESS        0x08010000
ARM GAS  /tmp/cckUegrF.s 			page 3


  67:Src/main.c    **** 
  68:Src/main.c    **** typedef void (*pFunction)(void);
  69:Src/main.c    **** 
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  50              		.loc 1 72 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
  73:Src/main.c    **** 
  74:Src/main.c    **** 
  75:Src/main.c    **** //    /* Reconfigure vector table offset register to match the application location */
  76:Src/main.c    ****   SCB->VTOR = (unsigned long)APPLICATION_ADDRESS;
  62              		.loc 1 76 0
  63 0004 0D4B     		ldr	r3, .L3
  64 0006 0E4A     		ldr	r2, .L3+4
  65 0008 9A60     		str	r2, [r3, #8]
  77:Src/main.c    **** 
  78:Src/main.c    ****   HAL_Init();
  66              		.loc 1 78 0
  67 000a FFF7FEFF 		bl	HAL_Init
  79:Src/main.c    **** 
  80:Src/main.c    **** 
  81:Src/main.c    ****   SystemClock_Config();
  68              		.loc 1 81 0
  69 000e FFF7FEFF 		bl	SystemClock_Config
  82:Src/main.c    **** 
  83:Src/main.c    ****   MX_GPIO_Init();
  70              		.loc 1 83 0
  71 0012 FFF7FEFF 		bl	MX_GPIO_Init
  84:Src/main.c    ****   MX_I2C2_Init();
  72              		.loc 1 84 0
  73 0016 FFF7FEFF 		bl	MX_I2C2_Init
  85:Src/main.c    ****   MX_I2C4_Init();
  74              		.loc 1 85 0
  75 001a FFF7FEFF 		bl	MX_I2C4_Init
  86:Src/main.c    ****   MX_SPI1_Init();
  76              		.loc 1 86 0
  77 001e FFF7FEFF 		bl	MX_SPI1_Init
  87:Src/main.c    ****   MX_TIM3_Init();
  78              		.loc 1 87 0
  79 0022 FFF7FEFF 		bl	MX_TIM3_Init
  88:Src/main.c    ****   MX_UART4_Init();
  80              		.loc 1 88 0
  81 0026 FFF7FEFF 		bl	MX_UART4_Init
  89:Src/main.c    ****   MX_USART1_UART_Init();
  82              		.loc 1 89 0
  83 002a FFF7FEFF 		bl	MX_USART1_UART_Init
ARM GAS  /tmp/cckUegrF.s 			page 4


  90:Src/main.c    ****   MX_TIM2_Init();
  84              		.loc 1 90 0
  85 002e FFF7FEFF 		bl	MX_TIM2_Init
  91:Src/main.c    **** 
  92:Src/main.c    **** 
  93:Src/main.c    ****   MX_FREERTOS_Init();
  86              		.loc 1 93 0
  87 0032 FFF7FEFF 		bl	MX_FREERTOS_Init
  94:Src/main.c    **** 
  95:Src/main.c    ****   osKernelStart();
  88              		.loc 1 95 0
  89 0036 FFF7FEFF 		bl	osKernelStart
  90              	.L2:
  96:Src/main.c    **** 
  97:Src/main.c    **** 
  98:Src/main.c    ****   while (1);
  91              		.loc 1 98 0 discriminator 1
  92 003a FEE7     		b	.L2
  93              	.L4:
  94              		.align	2
  95              	.L3:
  96 003c 00ED00E0 		.word	-536810240
  97 0040 00000108 		.word	134283264
  98              		.cfi_endproc
  99              	.LFE141:
 101              		.section	.rodata
 102              		.align	2
 103              	.LC0:
 104 0000 5372632F 		.ascii	"Src/main.c\000"
 104      6D61696E 
 104      2E6300
 105              		.section	.text.SystemClock_Config,"ax",%progbits
 106              		.align	1
 107              		.global	SystemClock_Config
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv4-sp-d16
 113              	SystemClock_Config:
 114              	.LFB142:
  99:Src/main.c    **** 
 100:Src/main.c    **** 
 101:Src/main.c    **** }
 102:Src/main.c    **** 
 103:Src/main.c    **** 
 104:Src/main.c    **** void SystemClock_Config(void)
 105:Src/main.c    **** {
 115              		.loc 1 105 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 208
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 B4B0     		sub	sp, sp, #208
ARM GAS  /tmp/cckUegrF.s 			page 5


 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 216
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 7
 130              	.LBB2:
 106:Src/main.c    **** 
 107:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 108:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 109:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 110:Src/main.c    **** 
 111:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 112:Src/main.c    ****     */
 113:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 131              		.loc 1 113 0
 132 0006 504A     		ldr	r2, .L10
 133 0008 4F4B     		ldr	r3, .L10
 134 000a 1B6C     		ldr	r3, [r3, #64]
 135 000c 43F08053 		orr	r3, r3, #268435456
 136 0010 1364     		str	r3, [r2, #64]
 137 0012 4D4B     		ldr	r3, .L10
 138 0014 1B6C     		ldr	r3, [r3, #64]
 139 0016 03F08053 		and	r3, r3, #268435456
 140 001a 7B60     		str	r3, [r7, #4]
 141 001c 7B68     		ldr	r3, [r7, #4]
 142              	.LBE2:
 143              	.LBB3:
 114:Src/main.c    **** 
 115:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144              		.loc 1 115 0
 145 001e 4B4A     		ldr	r2, .L10+4
 146 0020 4A4B     		ldr	r3, .L10+4
 147 0022 1B68     		ldr	r3, [r3]
 148 0024 43F44043 		orr	r3, r3, #49152
 149 0028 1360     		str	r3, [r2]
 150 002a 484B     		ldr	r3, .L10+4
 151 002c 1B68     		ldr	r3, [r3]
 152 002e 03F44043 		and	r3, r3, #49152
 153 0032 3B60     		str	r3, [r7]
 154 0034 3B68     		ldr	r3, [r7]
 155              	.LBE3:
 116:Src/main.c    **** 
 117:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 118:Src/main.c    ****     */
 119:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 156              		.loc 1 119 0
 157 0036 0923     		movs	r3, #9
 158 0038 C7F8A030 		str	r3, [r7, #160]
 120:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 159              		.loc 1 120 0
 160 003c 4FF48033 		mov	r3, #65536
 161 0040 C7F8A430 		str	r3, [r7, #164]
 121:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 162              		.loc 1 121 0
 163 0044 0123     		movs	r3, #1
 164 0046 C7F8B430 		str	r3, [r7, #180]
 122:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/cckUegrF.s 			page 6


 165              		.loc 1 122 0
 166 004a 0223     		movs	r3, #2
 167 004c C7F8B830 		str	r3, [r7, #184]
 123:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 168              		.loc 1 123 0
 169 0050 4FF48003 		mov	r3, #4194304
 170 0054 C7F8BC30 		str	r3, [r7, #188]
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 171              		.loc 1 124 0
 172 0058 0823     		movs	r3, #8
 173 005a C7F8C030 		str	r3, [r7, #192]
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 432;
 174              		.loc 1 125 0
 175 005e 4FF4D873 		mov	r3, #432
 176 0062 C7F8C430 		str	r3, [r7, #196]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 177              		.loc 1 126 0
 178 0066 0223     		movs	r3, #2
 179 0068 C7F8C830 		str	r3, [r7, #200]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 180              		.loc 1 127 0
 181 006c 0223     		movs	r3, #2
 182 006e C7F8CC30 		str	r3, [r7, #204]
 128:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 183              		.loc 1 128 0
 184 0072 07F1A003 		add	r3, r7, #160
 185 0076 1846     		mov	r0, r3
 186 0078 FFF7FEFF 		bl	HAL_RCC_OscConfig
 187 007c 0346     		mov	r3, r0
 188 007e 002B     		cmp	r3, #0
 189 0080 03D0     		beq	.L6
 129:Src/main.c    ****   {
 130:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 190              		.loc 1 130 0
 191 0082 8221     		movs	r1, #130
 192 0084 3248     		ldr	r0, .L10+8
 193 0086 FFF7FEFF 		bl	_Error_Handler
 194              	.L6:
 131:Src/main.c    ****   }
 132:Src/main.c    **** 
 133:Src/main.c    ****     /**Activate the Over-Drive mode 
 134:Src/main.c    ****     */
 135:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 195              		.loc 1 135 0
 196 008a FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 197 008e 0346     		mov	r3, r0
 198 0090 002B     		cmp	r3, #0
 199 0092 03D0     		beq	.L7
 136:Src/main.c    ****   {
 137:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 200              		.loc 1 137 0
 201 0094 8921     		movs	r1, #137
 202 0096 2E48     		ldr	r0, .L10+8
 203 0098 FFF7FEFF 		bl	_Error_Handler
 204              	.L7:
 138:Src/main.c    ****   }
 139:Src/main.c    **** 
ARM GAS  /tmp/cckUegrF.s 			page 7


 140:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 141:Src/main.c    ****     */
 142:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 205              		.loc 1 142 0
 206 009c 0F23     		movs	r3, #15
 207 009e C7F88C30 		str	r3, [r7, #140]
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 208              		.loc 1 144 0
 209 00a2 0223     		movs	r3, #2
 210 00a4 C7F89030 		str	r3, [r7, #144]
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 211              		.loc 1 145 0
 212 00a8 0023     		movs	r3, #0
 213 00aa C7F89430 		str	r3, [r7, #148]
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 214              		.loc 1 146 0
 215 00ae 4FF4A053 		mov	r3, #5120
 216 00b2 C7F89830 		str	r3, [r7, #152]
 147:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 217              		.loc 1 147 0
 218 00b6 4FF48053 		mov	r3, #4096
 219 00ba C7F89C30 		str	r3, [r7, #156]
 148:Src/main.c    **** 
 149:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 220              		.loc 1 149 0
 221 00be 07F18C03 		add	r3, r7, #140
 222 00c2 0721     		movs	r1, #7
 223 00c4 1846     		mov	r0, r3
 224 00c6 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 225 00ca 0346     		mov	r3, r0
 226 00cc 002B     		cmp	r3, #0
 227 00ce 03D0     		beq	.L8
 150:Src/main.c    ****   {
 151:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 228              		.loc 1 151 0
 229 00d0 9721     		movs	r1, #151
 230 00d2 1F48     		ldr	r0, .L10+8
 231 00d4 FFF7FEFF 		bl	_Error_Handler
 232              	.L8:
 152:Src/main.c    ****   }
 153:Src/main.c    **** 
 154:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 233              		.loc 1 154 0
 234 00d8 1E4B     		ldr	r3, .L10+12
 235 00da BB60     		str	r3, [r7, #8]
 155:Src/main.c    ****                               |RCC_PERIPHCLK_UART4|RCC_PERIPHCLK_UART7
 156:Src/main.c    ****                               |RCC_PERIPHCLK_UART8|RCC_PERIPHCLK_I2C1
 157:Src/main.c    ****                               |RCC_PERIPHCLK_I2C2|RCC_PERIPHCLK_I2C3
 158:Src/main.c    ****                               |RCC_PERIPHCLK_I2C4;
 159:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 236              		.loc 1 159 0
 237 00dc 4FF40073 		mov	r3, #512
 238 00e0 BB63     		str	r3, [r7, #56]
 160:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 239              		.loc 1 160 0
 240 00e2 0023     		movs	r3, #0
ARM GAS  /tmp/cckUegrF.s 			page 8


 241 00e4 FB64     		str	r3, [r7, #76]
 161:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 242              		.loc 1 161 0
 243 00e6 0023     		movs	r3, #0
 244 00e8 BB65     		str	r3, [r7, #88]
 162:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 245              		.loc 1 162 0
 246 00ea 0023     		movs	r3, #0
 247 00ec 7B66     		str	r3, [r7, #100]
 163:Src/main.c    ****   PeriphClkInitStruct.Uart8ClockSelection = RCC_UART8CLKSOURCE_PCLK1;
 248              		.loc 1 163 0
 249 00ee 0023     		movs	r3, #0
 250 00f0 BB66     		str	r3, [r7, #104]
 164:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 251              		.loc 1 164 0
 252 00f2 0023     		movs	r3, #0
 253 00f4 FB66     		str	r3, [r7, #108]
 165:Src/main.c    ****   PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 254              		.loc 1 165 0
 255 00f6 0023     		movs	r3, #0
 256 00f8 3B67     		str	r3, [r7, #112]
 166:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 257              		.loc 1 166 0
 258 00fa 0023     		movs	r3, #0
 259 00fc 7B67     		str	r3, [r7, #116]
 167:Src/main.c    ****   PeriphClkInitStruct.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 260              		.loc 1 167 0
 261 00fe 0023     		movs	r3, #0
 262 0100 BB67     		str	r3, [r7, #120]
 168:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 263              		.loc 1 168 0
 264 0102 07F10803 		add	r3, r7, #8
 265 0106 1846     		mov	r0, r3
 266 0108 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 267 010c 0346     		mov	r3, r0
 268 010e 002B     		cmp	r3, #0
 269 0110 03D0     		beq	.L9
 169:Src/main.c    ****   {
 170:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 270              		.loc 1 170 0
 271 0112 AA21     		movs	r1, #170
 272 0114 0E48     		ldr	r0, .L10+8
 273 0116 FFF7FEFF 		bl	_Error_Handler
 274              	.L9:
 171:Src/main.c    ****   }
 172:Src/main.c    **** 
 173:Src/main.c    ****     /**Configure the Systick interrupt time 
 174:Src/main.c    ****     */
 175:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 275              		.loc 1 175 0
 276 011a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 277 011e 0246     		mov	r2, r0
 278 0120 0D4B     		ldr	r3, .L10+16
 279 0122 A3FB0223 		umull	r2, r3, r3, r2
 280 0126 9B09     		lsrs	r3, r3, #6
 281 0128 1846     		mov	r0, r3
 282 012a FFF7FEFF 		bl	HAL_SYSTICK_Config
ARM GAS  /tmp/cckUegrF.s 			page 9


 176:Src/main.c    **** 
 177:Src/main.c    ****     /**Configure the Systick 
 178:Src/main.c    ****     */
 179:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 283              		.loc 1 179 0
 284 012e 0420     		movs	r0, #4
 285 0130 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 182:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 286              		.loc 1 182 0
 287 0134 0022     		movs	r2, #0
 288 0136 0F21     		movs	r1, #15
 289 0138 4FF0FF30 		mov	r0, #-1
 290 013c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183:Src/main.c    **** }
 291              		.loc 1 183 0
 292 0140 00BF     		nop
 293 0142 D037     		adds	r7, r7, #208
 294              	.LCFI5:
 295              		.cfi_def_cfa_offset 8
 296 0144 BD46     		mov	sp, r7
 297              	.LCFI6:
 298              		.cfi_def_cfa_register 13
 299              		@ sp needed
 300 0146 80BD     		pop	{r7, pc}
 301              	.L11:
 302              		.align	2
 303              	.L10:
 304 0148 00380240 		.word	1073887232
 305 014c 00700040 		.word	1073770496
 306 0150 00000000 		.word	.LC0
 307 0154 60F20300 		.word	258656
 308 0158 D34D6210 		.word	274877907
 309              		.cfi_endproc
 310              	.LFE142:
 312              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 313              		.align	1
 314              		.global	HAL_TIM_PeriodElapsedCallback
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	HAL_TIM_PeriodElapsedCallback:
 321              	.LFB143:
 184:Src/main.c    **** 
 185:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 186:Src/main.c    **** {
 322              		.loc 1 186 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326 0000 80B5     		push	{r7, lr}
 327              	.LCFI7:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
ARM GAS  /tmp/cckUegrF.s 			page 10


 331 0002 82B0     		sub	sp, sp, #8
 332              	.LCFI8:
 333              		.cfi_def_cfa_offset 16
 334 0004 00AF     		add	r7, sp, #0
 335              	.LCFI9:
 336              		.cfi_def_cfa_register 7
 337 0006 7860     		str	r0, [r7, #4]
 187:Src/main.c    **** 
 188:Src/main.c    ****   if (htim->Instance == TIM4) {
 338              		.loc 1 188 0
 339 0008 7B68     		ldr	r3, [r7, #4]
 340 000a 1B68     		ldr	r3, [r3]
 341 000c 044A     		ldr	r2, .L15
 342 000e 9342     		cmp	r3, r2
 343 0010 01D1     		bne	.L14
 189:Src/main.c    ****     HAL_IncTick();
 344              		.loc 1 189 0
 345 0012 FFF7FEFF 		bl	HAL_IncTick
 346              	.L14:
 190:Src/main.c    ****   }
 191:Src/main.c    **** 
 192:Src/main.c    **** }
 347              		.loc 1 192 0
 348 0016 00BF     		nop
 349 0018 0837     		adds	r7, r7, #8
 350              	.LCFI10:
 351              		.cfi_def_cfa_offset 8
 352 001a BD46     		mov	sp, r7
 353              	.LCFI11:
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 001c 80BD     		pop	{r7, pc}
 357              	.L16:
 358 001e 00BF     		.align	2
 359              	.L15:
 360 0020 00080040 		.word	1073743872
 361              		.cfi_endproc
 362              	.LFE143:
 364              		.section	.text._Error_Handler,"ax",%progbits
 365              		.align	1
 366              		.global	_Error_Handler
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	_Error_Handler:
 373              	.LFB144:
 193:Src/main.c    **** 
 194:Src/main.c    **** void _Error_Handler(char *file, int line)
 195:Src/main.c    **** {
 374              		.loc 1 195 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 8
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              	.LCFI12:
ARM GAS  /tmp/cckUegrF.s 			page 11


 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 7, -4
 383 0002 83B0     		sub	sp, sp, #12
 384              	.LCFI13:
 385              		.cfi_def_cfa_offset 16
 386 0004 00AF     		add	r7, sp, #0
 387              	.LCFI14:
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
 390 0008 3960     		str	r1, [r7]
 391              	.L18:
 196:Src/main.c    **** 
 197:Src/main.c    ****   while(1)
 392              		.loc 1 197 0 discriminator 1
 393 000a FEE7     		b	.L18
 394              		.cfi_endproc
 395              	.LFE144:
 397              		.text
 398              	.Letext0:
 399              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 400              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 401              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 402              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 403              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 404              		.file 7 "/usr/include/newlib/sys/lock.h"
 405              		.file 8 "/usr/include/newlib/sys/_types.h"
 406              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 407              		.file 10 "/usr/include/newlib/sys/reent.h"
 408              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 409              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 410              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 411              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 412              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 413              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 414              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 415              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 416              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 417              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 418              		.file 21 "Inc/main.h"
 419              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 420              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 421              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 422              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 423              		.file 26 "Inc/eth.h"
 424              		.file 27 "Inc/i2c.h"
 425              		.file 28 "Inc/rtc.h"
 426              		.file 29 "Inc/spi.h"
 427              		.file 30 "Inc/tim.h"
 428              		.file 31 "Inc/usart.h"
 429              		.file 32 "Inc/gps.h"
 430              		.file 33 "Inc/sensor.h"
 431              		.file 34 "Inc/motor.h"
 432              		.file 35 "Inc/freertos.h"
ARM GAS  /tmp/cckUegrF.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:00000000000001a0 gpsData
                            *COM*:0000000000000014 sensorValues
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000004 gpsThreadHandle
                            *COM*:0000000000000004 sensorThreadHandle
                            *COM*:0000000000000004 spiComThreadHandle
                            *COM*:0000000000000004 motorThreadHandle
                            *COM*:0000000000000004 spiMutexHandle
                            *COM*:0000000000000004 uartMutexHandle
                            *COM*:0000000000000004 memoryMutexHandle
                            *COM*:0000000000000004 spiSemaphoreHandle
                            *COM*:0000000000000004 uartSemaphoreHandle
                            *COM*:0000000000000004 SpiCheckData
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 EnvironmentData
                            *COM*:0000000000000004 ControlData
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000001 rx_buf
     /tmp/cckUegrF.s:40     .text.main:0000000000000000 $t
     /tmp/cckUegrF.s:47     .text.main:0000000000000000 main
     /tmp/cckUegrF.s:113    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cckUegrF.s:96     .text.main:000000000000003c $d
     /tmp/cckUegrF.s:102    .rodata:0000000000000000 $d
     /tmp/cckUegrF.s:106    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cckUegrF.s:372    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cckUegrF.s:304    .text.SystemClock_Config:0000000000000148 $d
     /tmp/cckUegrF.s:313    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cckUegrF.s:320    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cckUegrF.s:360    .text.HAL_TIM_PeriodElapsedCallback:0000000000000020 $d
     /tmp/cckUegrF.s:365    .text._Error_Handler:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_I2C2_Init
MX_I2C4_Init
MX_SPI1_Init
MX_TIM3_Init
MX_UART4_Init
MX_USART1_UART_Init
MX_TIM2_Init
MX_FREERTOS_Init
osKernelStart
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
ARM GAS  /tmp/cckUegrF.s 			page 13


HAL_NVIC_SetPriority
HAL_IncTick
