ARM GAS  /tmp/ccjQqYMG.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	gpsData,416,4
  18              		.comm	sensorValues,20,4
  19              		.comm	motor1,8,4
  20              		.comm	motor2,8,4
  21              		.comm	motor3,8,4
  22              		.comm	motor4,8,4
  23              		.comm	gpsThreadHandle,4,4
  24              		.comm	sensorThreadHandle,4,4
  25              		.comm	spiComThreadHandle,4,4
  26              		.comm	motorThreadHandle,4,4
  27              		.comm	spiMutexHandle,4,4
  28              		.comm	uartMutexHandle,4,4
  29              		.comm	memoryMutexHandle,4,4
  30              		.comm	spiSemaphoreHandle,4,4
  31              		.comm	uartSemaphoreHandle,4,4
  32              		.comm	spi_rx_data,124,4
  33              		.comm	rx_data,124,4
  34              		.comm	spi_tx_data,120,4
  35              		.comm	tx_data,120,4
  36              		.comm	rx_buf,1,1
  37              		.section	.text.vprint,"ax",%progbits
  38              		.align	1
  39              		.global	vprint
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	vprint:
  46              	.LFB141:
  47              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
ARM GAS  /tmp/ccjQqYMG.s 			page 2


  12:Src/freertos.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** #include "cmsis_os.h"
  53:Src/freertos.c **** #include "gps.h"
  54:Src/freertos.c **** #include "sensor.h"
  55:Src/freertos.c **** #include "motor.h"
  56:Src/freertos.c **** #include <stdarg.h>
  57:Src/freertos.c **** #include <stdio.h>
  58:Src/freertos.c **** #include "usart.h"
  59:Src/freertos.c **** #include "spi.h"
  60:Src/freertos.c **** #include "sfp.h"
  61:Src/freertos.c **** #include "tim.h"
  62:Src/freertos.c **** 
  63:Src/freertos.c **** 
  64:Src/freertos.c **** osThreadId gpsThreadHandle;
  65:Src/freertos.c **** osThreadId sensorThreadHandle;
  66:Src/freertos.c **** osThreadId spiComThreadHandle;
  67:Src/freertos.c **** osThreadId motorThreadHandle;
  68:Src/freertos.c **** 
ARM GAS  /tmp/ccjQqYMG.s 			page 3


  69:Src/freertos.c **** 
  70:Src/freertos.c **** osMutexId spiMutexHandle;
  71:Src/freertos.c **** osMutexId uartMutexHandle;
  72:Src/freertos.c **** osMutexId memoryMutexHandle;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** osSemaphoreId spiSemaphoreHandle;
  75:Src/freertos.c **** osSemaphoreId uartSemaphoreHandle;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** struct SPI_RX_FORMAT
  78:Src/freertos.c **** {
  79:Src/freertos.c ****     uint8_t garbage1[47];
  80:Src/freertos.c ****     uint32_t x_position;
  81:Src/freertos.c ****     uint32_t y_position;
  82:Src/freertos.c ****     uint32_t z_position;
  83:Src/freertos.c **** 
  84:Src/freertos.c ****     uint8_t step_motor1_direction;
  85:Src/freertos.c ****     uint8_t step_motor2_direction;
  86:Src/freertos.c ****     uint8_t step_motor3_direction;
  87:Src/freertos.c ****     uint8_t step_motor4_direction;
  88:Src/freertos.c ****     uint8_t servo_motor1_direction;
  89:Src/freertos.c ****     uint8_t servo_motor2_direction;
  90:Src/freertos.c **** 
  91:Src/freertos.c ****     uint8_t step_motor1_speed;
  92:Src/freertos.c ****     uint8_t step_motor2_speed;
  93:Src/freertos.c ****     uint8_t step_motor3_speed;
  94:Src/freertos.c ****     uint8_t step_motor4_speed;
  95:Src/freertos.c ****     uint8_t servo_motor1_degree;
  96:Src/freertos.c ****     uint8_t servo_motor2_degree;
  97:Src/freertos.c **** 
  98:Src/freertos.c ****     uint16_t checksum;
  99:Src/freertos.c **** 
 100:Src/freertos.c ****     uint8_t garbage2[48];
 101:Src/freertos.c **** 
 102:Src/freertos.c **** }spi_rx_data, rx_data;
 103:Src/freertos.c **** 
 104:Src/freertos.c **** volatile struct SPI_TX_FORMAT
 105:Src/freertos.c **** {
 106:Src/freertos.c **** 
 107:Src/freertos.c ****     unsigned char gps_data[100];
 108:Src/freertos.c **** 
 109:Src/freertos.c ****     uint32_t temperature;
 110:Src/freertos.c ****     uint32_t compass_degree;
 111:Src/freertos.c ****     uint32_t pressure;
 112:Src/freertos.c ****     uint32_t altitude;
 113:Src/freertos.c **** 
 114:Src/freertos.c ****     unsigned char wheather_condition;
 115:Src/freertos.c **** 
 116:Src/freertos.c ****     uint16_t checksum;
 117:Src/freertos.c **** 
 118:Src/freertos.c **** }spi_tx_data,  tx_data;
 119:Src/freertos.c **** 
 120:Src/freertos.c **** 
 121:Src/freertos.c **** 
 122:Src/freertos.c **** void gpsOps(void const * argument);
 123:Src/freertos.c **** void sensorOps(void const * argument);
 124:Src/freertos.c **** void spiComOps(void const * argument);
 125:Src/freertos.c **** void motorOps(void const * argument);
ARM GAS  /tmp/ccjQqYMG.s 			page 4


 126:Src/freertos.c **** 
 127:Src/freertos.c **** void MX_FREERTOS_Init(void);
 128:Src/freertos.c **** void mprintf(const char *fmt, ...);
 129:Src/freertos.c **** unsigned char rx_buf;
 130:Src/freertos.c **** 
 131:Src/freertos.c **** 
 132:Src/freertos.c **** void vprint(const char *fmt, va_list argp)
 133:Src/freertos.c **** {
  48              		.loc 1 133 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 160
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 A8B0     		sub	sp, sp, #160
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 168
  60 0004 00AF     		add	r7, sp, #0
  61              	.LCFI2:
  62              		.cfi_def_cfa_register 7
  63 0006 7860     		str	r0, [r7, #4]
  64 0008 3960     		str	r1, [r7]
 134:Src/freertos.c ****     char string[150];
 135:Src/freertos.c **** 
 136:Src/freertos.c ****     if(0 < vsprintf(string,fmt,argp)) // build string
  65              		.loc 1 136 0
  66 000a 07F10803 		add	r3, r7, #8
  67 000e 3A68     		ldr	r2, [r7]
  68 0010 7968     		ldr	r1, [r7, #4]
  69 0012 1846     		mov	r0, r3
  70 0014 FFF7FEFF 		bl	vsprintf
  71 0018 0346     		mov	r3, r0
  72 001a 002B     		cmp	r3, #0
  73 001c 0DDD     		ble	.L3
 137:Src/freertos.c ****        HAL_UART_Transmit(&huart1, (uint8_t*)string, strlen(string), 0xffffff); // send message via 
  74              		.loc 1 137 0
  75 001e 07F10803 		add	r3, r7, #8
  76 0022 1846     		mov	r0, r3
  77 0024 FFF7FEFF 		bl	strlen
  78 0028 0346     		mov	r3, r0
  79 002a 9AB2     		uxth	r2, r3
  80 002c 07F10801 		add	r1, r7, #8
  81 0030 6FF07F43 		mvn	r3, #-16777216
  82 0034 0348     		ldr	r0, .L4
  83 0036 FFF7FEFF 		bl	HAL_UART_Transmit
  84              	.L3:
 138:Src/freertos.c **** 
 139:Src/freertos.c **** }
  85              		.loc 1 139 0
  86 003a 00BF     		nop
  87 003c A037     		adds	r7, r7, #160
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 8
  90 003e BD46     		mov	sp, r7
ARM GAS  /tmp/ccjQqYMG.s 			page 5


  91              	.LCFI4:
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 0040 80BD     		pop	{r7, pc}
  95              	.L5:
  96 0042 00BF     		.align	2
  97              	.L4:
  98 0044 00000000 		.word	huart1
  99              		.cfi_endproc
 100              	.LFE141:
 102              		.section	.text.mprintf,"ax",%progbits
 103              		.align	1
 104              		.global	mprintf
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	mprintf:
 111              	.LFB142:
 140:Src/freertos.c **** 
 141:Src/freertos.c **** 
 142:Src/freertos.c **** 
 143:Src/freertos.c **** void mprintf(const char *fmt, ...) // custom printf() function
 144:Src/freertos.c **** {
 112              		.loc 1 144 0
 113              		.cfi_startproc
 114              		@ args = 4, pretend = 16, frame = 8
 115              		@ frame_needed = 1, uses_anonymous_args = 1
 116 0000 0FB4     		push	{r0, r1, r2, r3}
 117              	.LCFI5:
 118              		.cfi_def_cfa_offset 16
 119              		.cfi_offset 0, -16
 120              		.cfi_offset 1, -12
 121              		.cfi_offset 2, -8
 122              		.cfi_offset 3, -4
 123 0002 80B5     		push	{r7, lr}
 124              	.LCFI6:
 125              		.cfi_def_cfa_offset 24
 126              		.cfi_offset 7, -24
 127              		.cfi_offset 14, -20
 128 0004 82B0     		sub	sp, sp, #8
 129              	.LCFI7:
 130              		.cfi_def_cfa_offset 32
 131 0006 00AF     		add	r7, sp, #0
 132              	.LCFI8:
 133              		.cfi_def_cfa_register 7
 145:Src/freertos.c **** 
 146:Src/freertos.c ****     xSemaphoreTake(uartMutexHandle, 100);
 134              		.loc 1 146 0
 135 0008 0D4B     		ldr	r3, .L7
 136 000a 1868     		ldr	r0, [r3]
 137 000c 0023     		movs	r3, #0
 138 000e 6422     		movs	r2, #100
 139 0010 0021     		movs	r1, #0
 140 0012 FFF7FEFF 		bl	xQueueGenericReceive
 147:Src/freertos.c ****     va_list argp;
 148:Src/freertos.c ****     va_start(argp, fmt);
ARM GAS  /tmp/ccjQqYMG.s 			page 6


 141              		.loc 1 148 0
 142 0016 07F11403 		add	r3, r7, #20
 143 001a 7B60     		str	r3, [r7, #4]
 149:Src/freertos.c ****     vprint(fmt, argp);
 144              		.loc 1 149 0
 145 001c 7968     		ldr	r1, [r7, #4]
 146 001e 3869     		ldr	r0, [r7, #16]
 147 0020 FFF7FEFF 		bl	vprint
 150:Src/freertos.c ****     va_end(argp);
 151:Src/freertos.c ****     xSemaphoreGive(uartMutexHandle);
 148              		.loc 1 151 0
 149 0024 064B     		ldr	r3, .L7
 150 0026 1868     		ldr	r0, [r3]
 151 0028 0023     		movs	r3, #0
 152 002a 0022     		movs	r2, #0
 153 002c 0021     		movs	r1, #0
 154 002e FFF7FEFF 		bl	xQueueGenericSend
 152:Src/freertos.c **** 
 153:Src/freertos.c **** }
 155              		.loc 1 153 0
 156 0032 00BF     		nop
 157 0034 0837     		adds	r7, r7, #8
 158              	.LCFI9:
 159              		.cfi_def_cfa_offset 24
 160 0036 BD46     		mov	sp, r7
 161              	.LCFI10:
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 0038 BDE88040 		pop	{r7, lr}
 165              	.LCFI11:
 166              		.cfi_restore 14
 167              		.cfi_restore 7
 168              		.cfi_def_cfa_offset 16
 169 003c 04B0     		add	sp, sp, #16
 170              	.LCFI12:
 171              		.cfi_restore 3
 172              		.cfi_restore 2
 173              		.cfi_restore 1
 174              		.cfi_restore 0
 175              		.cfi_def_cfa_offset 0
 176 003e 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0040 00000000 		.word	uartMutexHandle
 181              		.cfi_endproc
 182              	.LFE142:
 184              		.section	.rodata
 185              		.align	2
 186              	.LC0:
 187 0000 67707354 		.ascii	"gpsThread\000"
 187      68726561 
 187      6400
 188 000a 0000     		.align	2
 189              	.LC8:
 190 000c 00000000 		.word	.LC0
 191 0010 00000000 		.word	gpsOps
ARM GAS  /tmp/ccjQqYMG.s 			page 7


 192 0014 0100     		.short	1
 193 0016 0000     		.space	2
 194 0018 00000000 		.word	0
 195 001c 00040000 		.word	1024
 196              		.align	2
 197              	.LC2:
 198 0020 73656E73 		.ascii	"sensorThread\000"
 198      6F725468 
 198      72656164 
 198      00
 199 002d 000000   		.align	2
 200              	.LC9:
 201 0030 20000000 		.word	.LC2
 202 0034 00000000 		.word	sensorOps
 203 0038 FFFF     		.short	-1
 204 003a 0000     		.space	2
 205 003c 00000000 		.word	0
 206 0040 00020000 		.word	512
 207              		.align	2
 208              	.LC4:
 209 0044 73706943 		.ascii	"spiComThread\000"
 209      6F6D5468 
 209      72656164 
 209      00
 210 0051 000000   		.align	2
 211              	.LC10:
 212 0054 44000000 		.word	.LC4
 213 0058 00000000 		.word	spiComOps
 214 005c 0000     		.short	0
 215 005e 0000     		.space	2
 216 0060 00000000 		.word	0
 217 0064 00020000 		.word	512
 218              		.align	2
 219              	.LC6:
 220 0068 6D6F746F 		.ascii	"motorThread\000"
 220      72546872 
 220      65616400 
 221              		.align	2
 222              	.LC11:
 223 0074 68000000 		.word	.LC6
 224 0078 00000000 		.word	motorOps
 225 007c 0000     		.short	0
 226 007e 0000     		.space	2
 227 0080 00000000 		.word	0
 228 0084 00020000 		.word	512
 229              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 230              		.align	1
 231              		.global	MX_FREERTOS_Init
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	MX_FREERTOS_Init:
 238              	.LFB143:
 154:Src/freertos.c **** 
 155:Src/freertos.c **** 
 156:Src/freertos.c **** 
ARM GAS  /tmp/ccjQqYMG.s 			page 8


 157:Src/freertos.c **** void MX_FREERTOS_Init(void)
 158:Src/freertos.c **** {
 239              		.loc 1 158 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 104
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 B0B5     		push	{r4, r5, r7, lr}
 244              	.LCFI13:
 245              		.cfi_def_cfa_offset 16
 246              		.cfi_offset 4, -16
 247              		.cfi_offset 5, -12
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 9AB0     		sub	sp, sp, #104
 251              	.LCFI14:
 252              		.cfi_def_cfa_offset 120
 253 0004 00AF     		add	r7, sp, #0
 254              	.LCFI15:
 255              		.cfi_def_cfa_register 7
 159:Src/freertos.c **** 
 160:Src/freertos.c ****   osMutexDef(spiMutex);
 256              		.loc 1 160 0
 257 0006 0023     		movs	r3, #0
 258 0008 7B66     		str	r3, [r7, #100]
 161:Src/freertos.c ****   spiMutexHandle = osMutexCreate(osMutex(spiMutex));
 259              		.loc 1 161 0
 260 000a 07F16403 		add	r3, r7, #100
 261 000e 1846     		mov	r0, r3
 262 0010 FFF7FEFF 		bl	osMutexCreate
 263 0014 0246     		mov	r2, r0
 264 0016 394B     		ldr	r3, .L10
 265 0018 1A60     		str	r2, [r3]
 162:Src/freertos.c **** 
 163:Src/freertos.c ****   osMutexDef(uartMutex);
 266              		.loc 1 163 0
 267 001a 0023     		movs	r3, #0
 268 001c 3B66     		str	r3, [r7, #96]
 164:Src/freertos.c ****   uartMutexHandle = osMutexCreate(osMutex(uartMutex));
 269              		.loc 1 164 0
 270 001e 07F16003 		add	r3, r7, #96
 271 0022 1846     		mov	r0, r3
 272 0024 FFF7FEFF 		bl	osMutexCreate
 273 0028 0246     		mov	r2, r0
 274 002a 354B     		ldr	r3, .L10+4
 275 002c 1A60     		str	r2, [r3]
 165:Src/freertos.c **** 
 166:Src/freertos.c ****   osMutexDef(memoryMutex);
 276              		.loc 1 166 0
 277 002e 0023     		movs	r3, #0
 278 0030 FB65     		str	r3, [r7, #92]
 167:Src/freertos.c ****   memoryMutexHandle = osMutexCreate(osMutex(memoryMutex));
 279              		.loc 1 167 0
 280 0032 07F15C03 		add	r3, r7, #92
 281 0036 1846     		mov	r0, r3
 282 0038 FFF7FEFF 		bl	osMutexCreate
 283 003c 0246     		mov	r2, r0
 284 003e 314B     		ldr	r3, .L10+8
ARM GAS  /tmp/ccjQqYMG.s 			page 9


 285 0040 1A60     		str	r2, [r3]
 168:Src/freertos.c **** 
 169:Src/freertos.c ****   osSemaphoreDef(uartSemaphore);
 286              		.loc 1 169 0
 287 0042 0023     		movs	r3, #0
 288 0044 BB65     		str	r3, [r7, #88]
 170:Src/freertos.c ****   uartSemaphoreHandle = osSemaphoreCreate(osSemaphore(uartSemaphore), 1);
 289              		.loc 1 170 0
 290 0046 07F15803 		add	r3, r7, #88
 291 004a 0121     		movs	r1, #1
 292 004c 1846     		mov	r0, r3
 293 004e FFF7FEFF 		bl	osSemaphoreCreate
 294 0052 0246     		mov	r2, r0
 295 0054 2C4B     		ldr	r3, .L10+12
 296 0056 1A60     		str	r2, [r3]
 171:Src/freertos.c **** 
 172:Src/freertos.c ****   /* definition and creation of spiSemaphore */
 173:Src/freertos.c ****   osSemaphoreDef(spiSemaphore);
 297              		.loc 1 173 0
 298 0058 0023     		movs	r3, #0
 299 005a 7B65     		str	r3, [r7, #84]
 174:Src/freertos.c ****   spiSemaphoreHandle = osSemaphoreCreate(osSemaphore(spiSemaphore), 1);
 300              		.loc 1 174 0
 301 005c 07F15403 		add	r3, r7, #84
 302 0060 0121     		movs	r1, #1
 303 0062 1846     		mov	r0, r3
 304 0064 FFF7FEFF 		bl	osSemaphoreCreate
 305 0068 0246     		mov	r2, r0
 306 006a 284B     		ldr	r3, .L10+16
 307 006c 1A60     		str	r2, [r3]
 175:Src/freertos.c **** 
 176:Src/freertos.c ****   /* definition and creation of gpsThread */
 177:Src/freertos.c ****   osThreadDef(gpsThread, gpsOps, osPriorityAboveNormal, 0, 1024);
 308              		.loc 1 177 0
 309 006e 284B     		ldr	r3, .L10+20
 310 0070 07F14004 		add	r4, r7, #64
 311 0074 1D46     		mov	r5, r3
 312 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 313 0078 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 314 007a 2B68     		ldr	r3, [r5]
 315 007c 2360     		str	r3, [r4]
 178:Src/freertos.c ****   gpsThreadHandle = osThreadCreate(osThread(gpsThread), NULL);
 316              		.loc 1 178 0
 317 007e 07F14003 		add	r3, r7, #64
 318 0082 0021     		movs	r1, #0
 319 0084 1846     		mov	r0, r3
 320 0086 FFF7FEFF 		bl	osThreadCreate
 321 008a 0246     		mov	r2, r0
 322 008c 214B     		ldr	r3, .L10+24
 323 008e 1A60     		str	r2, [r3]
 179:Src/freertos.c **** 
 180:Src/freertos.c ****   /* definition and creation of sensorThread */
 181:Src/freertos.c ****   osThreadDef(sensorThread, sensorOps, osPriorityBelowNormal, 0, 512);
 324              		.loc 1 181 0
 325 0090 214B     		ldr	r3, .L10+28
 326 0092 07F12C04 		add	r4, r7, #44
 327 0096 1D46     		mov	r5, r3
ARM GAS  /tmp/ccjQqYMG.s 			page 10


 328 0098 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 329 009a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 330 009c 2B68     		ldr	r3, [r5]
 331 009e 2360     		str	r3, [r4]
 182:Src/freertos.c ****   sensorThreadHandle = osThreadCreate(osThread(sensorThread), NULL);
 332              		.loc 1 182 0
 333 00a0 07F12C03 		add	r3, r7, #44
 334 00a4 0021     		movs	r1, #0
 335 00a6 1846     		mov	r0, r3
 336 00a8 FFF7FEFF 		bl	osThreadCreate
 337 00ac 0246     		mov	r2, r0
 338 00ae 1B4B     		ldr	r3, .L10+32
 339 00b0 1A60     		str	r2, [r3]
 183:Src/freertos.c **** 
 184:Src/freertos.c ****   /* definition and creation of spiComThread */
 185:Src/freertos.c ****   osThreadDef(spiComThread, spiComOps, osPriorityNormal, 0, 512);
 340              		.loc 1 185 0
 341 00b2 1B4B     		ldr	r3, .L10+36
 342 00b4 07F11804 		add	r4, r7, #24
 343 00b8 1D46     		mov	r5, r3
 344 00ba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 345 00bc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 346 00be 2B68     		ldr	r3, [r5]
 347 00c0 2360     		str	r3, [r4]
 186:Src/freertos.c ****   spiComThreadHandle = osThreadCreate(osThread(spiComThread), NULL);
 348              		.loc 1 186 0
 349 00c2 07F11803 		add	r3, r7, #24
 350 00c6 0021     		movs	r1, #0
 351 00c8 1846     		mov	r0, r3
 352 00ca FFF7FEFF 		bl	osThreadCreate
 353 00ce 0246     		mov	r2, r0
 354 00d0 144B     		ldr	r3, .L10+40
 355 00d2 1A60     		str	r2, [r3]
 187:Src/freertos.c **** 
 188:Src/freertos.c ****   osThreadDef(motorThread, motorOps, osPriorityNormal, 0, 512);
 356              		.loc 1 188 0
 357 00d4 144B     		ldr	r3, .L10+44
 358 00d6 3C1D     		adds	r4, r7, #4
 359 00d8 1D46     		mov	r5, r3
 360 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 361 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 362 00de 2B68     		ldr	r3, [r5]
 363 00e0 2360     		str	r3, [r4]
 189:Src/freertos.c ****   motorThreadHandle = osThreadCreate(osThread(motorThread), NULL);
 364              		.loc 1 189 0
 365 00e2 3B1D     		adds	r3, r7, #4
 366 00e4 0021     		movs	r1, #0
 367 00e6 1846     		mov	r0, r3
 368 00e8 FFF7FEFF 		bl	osThreadCreate
 369 00ec 0246     		mov	r2, r0
 370 00ee 0F4B     		ldr	r3, .L10+48
 371 00f0 1A60     		str	r2, [r3]
 190:Src/freertos.c **** 
 191:Src/freertos.c **** }
 372              		.loc 1 191 0
 373 00f2 00BF     		nop
 374 00f4 6837     		adds	r7, r7, #104
ARM GAS  /tmp/ccjQqYMG.s 			page 11


 375              	.LCFI16:
 376              		.cfi_def_cfa_offset 16
 377 00f6 BD46     		mov	sp, r7
 378              	.LCFI17:
 379              		.cfi_def_cfa_register 13
 380              		@ sp needed
 381 00f8 B0BD     		pop	{r4, r5, r7, pc}
 382              	.L11:
 383 00fa 00BF     		.align	2
 384              	.L10:
 385 00fc 00000000 		.word	spiMutexHandle
 386 0100 00000000 		.word	uartMutexHandle
 387 0104 00000000 		.word	memoryMutexHandle
 388 0108 00000000 		.word	uartSemaphoreHandle
 389 010c 00000000 		.word	spiSemaphoreHandle
 390 0110 0C000000 		.word	.LC8
 391 0114 00000000 		.word	gpsThreadHandle
 392 0118 30000000 		.word	.LC9
 393 011c 00000000 		.word	sensorThreadHandle
 394 0120 54000000 		.word	.LC10
 395 0124 00000000 		.word	spiComThreadHandle
 396 0128 74000000 		.word	.LC11
 397 012c 00000000 		.word	motorThreadHandle
 398              		.cfi_endproc
 399              	.LFE143:
 401              		.section	.text.UART4_IRQHandler,"ax",%progbits
 402              		.align	1
 403              		.global	UART4_IRQHandler
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	UART4_IRQHandler:
 410              	.LFB144:
 192:Src/freertos.c **** 
 193:Src/freertos.c **** 
 194:Src/freertos.c **** void UART4_IRQHandler(void)
 195:Src/freertos.c **** {
 411              		.loc 1 195 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              	.LCFI18:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 82B0     		sub	sp, sp, #8
 421              	.LCFI19:
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI20:
 425              		.cfi_def_cfa_register 7
 196:Src/freertos.c **** 
 197:Src/freertos.c ****     long lSwitchRequired;
 198:Src/freertos.c **** 
 199:Src/freertos.c ****     HAL_UART_IRQHandler(&huart4);
ARM GAS  /tmp/ccjQqYMG.s 			page 12


 426              		.loc 1 199 0
 427 0006 0D48     		ldr	r0, .L15
 428 0008 FFF7FEFF 		bl	HAL_UART_IRQHandler
 200:Src/freertos.c **** 
 201:Src/freertos.c ****     xSemaphoreGiveFromISR(uartSemaphoreHandle, NULL);
 429              		.loc 1 201 0
 430 000c 0C4B     		ldr	r3, .L15+4
 431 000e 1B68     		ldr	r3, [r3]
 432 0010 0021     		movs	r1, #0
 433 0012 1846     		mov	r0, r3
 434 0014 FFF7FEFF 		bl	xQueueGiveFromISR
 202:Src/freertos.c **** 
 203:Src/freertos.c ****     if(lSwitchRequired)
 435              		.loc 1 203 0
 436 0018 7B68     		ldr	r3, [r7, #4]
 437 001a 002B     		cmp	r3, #0
 438 001c 0AD0     		beq	.L14
 204:Src/freertos.c ****         portYIELD_FROM_ISR(lSwitchRequired);
 439              		.loc 1 204 0
 440 001e 7B68     		ldr	r3, [r7, #4]
 441 0020 002B     		cmp	r3, #0
 442 0022 07D0     		beq	.L14
 443              		.loc 1 204 0 is_stmt 0 discriminator 1
 444 0024 074B     		ldr	r3, .L15+8
 445 0026 4FF08052 		mov	r2, #268435456
 446 002a 1A60     		str	r2, [r3]
 447              		.syntax unified
 448              	@ 204 "Src/freertos.c" 1
 449 002c BFF34F8F 		dsb
 450              	@ 0 "" 2
 451              	@ 204 "Src/freertos.c" 1
 452 0030 BFF36F8F 		isb
 453              	@ 0 "" 2
 454              		.thumb
 455              		.syntax unified
 456              	.L14:
 205:Src/freertos.c **** 
 206:Src/freertos.c **** 
 207:Src/freertos.c **** }
 457              		.loc 1 207 0 is_stmt 1
 458 0034 00BF     		nop
 459 0036 0837     		adds	r7, r7, #8
 460              	.LCFI21:
 461              		.cfi_def_cfa_offset 8
 462 0038 BD46     		mov	sp, r7
 463              	.LCFI22:
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 003a 80BD     		pop	{r7, pc}
 467              	.L16:
 468              		.align	2
 469              	.L15:
 470 003c 00000000 		.word	huart4
 471 0040 00000000 		.word	uartSemaphoreHandle
 472 0044 04ED00E0 		.word	-536810236
 473              		.cfi_endproc
 474              	.LFE144:
ARM GAS  /tmp/ccjQqYMG.s 			page 13


 476              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 477              		.align	1
 478              		.global	SPI1_IRQHandler
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu fpv4-sp-d16
 484              	SPI1_IRQHandler:
 485              	.LFB145:
 208:Src/freertos.c **** 
 209:Src/freertos.c **** void SPI1_IRQHandler(void)
 210:Src/freertos.c **** {
 486              		.loc 1 210 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490 0000 80B5     		push	{r7, lr}
 491              	.LCFI23:
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495 0002 00AF     		add	r7, sp, #0
 496              	.LCFI24:
 497              		.cfi_def_cfa_register 7
 211:Src/freertos.c **** 
 212:Src/freertos.c ****   HAL_SPI_IRQHandler(&hspi1);
 498              		.loc 1 212 0
 499 0004 0548     		ldr	r0, .L18
 500 0006 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 213:Src/freertos.c **** 
 214:Src/freertos.c ****   xSemaphoreGiveFromISR(spiSemaphoreHandle, NULL);
 501              		.loc 1 214 0
 502 000a 054B     		ldr	r3, .L18+4
 503 000c 1B68     		ldr	r3, [r3]
 504 000e 0021     		movs	r1, #0
 505 0010 1846     		mov	r0, r3
 506 0012 FFF7FEFF 		bl	xQueueGiveFromISR
 215:Src/freertos.c **** 
 216:Src/freertos.c **** }
 507              		.loc 1 216 0
 508 0016 00BF     		nop
 509 0018 80BD     		pop	{r7, pc}
 510              	.L19:
 511 001a 00BF     		.align	2
 512              	.L18:
 513 001c 00000000 		.word	hspi1
 514 0020 00000000 		.word	spiSemaphoreHandle
 515              		.cfi_endproc
 516              	.LFE145:
 518              		.section	.rodata
 519              		.align	2
 520              	.LC12:
 521 0088 6770734F 		.ascii	"gpsOps\015\012\000"
 521      70730D0A 
 521      00
 522 0091 000000   		.align	2
 523              	.LC13:
ARM GAS  /tmp/ccjQqYMG.s 			page 14


 524 0094 6770734F 		.ascii	"gpsOps Crash \015\012\000"
 524      70732043 
 524      72617368 
 524      200D0A00 
 525              		.section	.text.gpsOps,"ax",%progbits
 526              		.align	1
 527              		.global	gpsOps
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv4-sp-d16
 533              	gpsOps:
 534              	.LFB146:
 217:Src/freertos.c **** 
 218:Src/freertos.c **** 
 219:Src/freertos.c **** 
 220:Src/freertos.c **** 
 221:Src/freertos.c **** 
 222:Src/freertos.c **** 
 223:Src/freertos.c **** void gpsOps(void const * argument)
 224:Src/freertos.c **** {
 535              		.loc 1 224 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 16
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI25:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 84B0     		sub	sp, sp, #16
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 24
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI27:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 225:Src/freertos.c **** 
 226:Src/freertos.c ****     mprintf("gpsOps\r\n");
 551              		.loc 1 226 0
 552 0008 2648     		ldr	r0, .L27
 553 000a FFF7FEFF 		bl	mprintf
 227:Src/freertos.c **** 
 228:Src/freertos.c ****     unsigned char rx_data;
 229:Src/freertos.c **** 
 230:Src/freertos.c ****     gpsInit();
 554              		.loc 1 230 0
 555 000e FFF7FEFF 		bl	gpsInit
 556              	.L26:
 231:Src/freertos.c **** 
 232:Src/freertos.c ****   while(1)
 233:Src/freertos.c ****   {
 234:Src/freertos.c **** 
 235:Src/freertos.c ****       if( xSemaphoreTake(uartSemaphoreHandle, 1000) == pdPASS)
 557              		.loc 1 235 0
 558 0012 254B     		ldr	r3, .L27+4
 559 0014 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccjQqYMG.s 			page 15


 560 0016 0023     		movs	r3, #0
 561 0018 4FF47A72 		mov	r2, #1000
 562 001c 0021     		movs	r1, #0
 563 001e FFF7FEFF 		bl	xQueueGenericReceive
 564 0022 0346     		mov	r3, r0
 565 0024 012B     		cmp	r3, #1
 566 0026 39D1     		bne	.L21
 236:Src/freertos.c ****       {
 237:Src/freertos.c **** 
 238:Src/freertos.c **** 
 239:Src/freertos.c ****         if(checkGpsData() == GPS_READY)
 567              		.loc 1 239 0
 568 0028 FFF7FEFF 		bl	checkGpsData
 569 002c 0346     		mov	r3, r0
 570 002e 012B     		cmp	r3, #1
 571 0030 2AD1     		bne	.L22
 240:Src/freertos.c ****         {
 241:Src/freertos.c **** 
 242:Src/freertos.c ****                xSemaphoreTake(spiMutexHandle, portMAX_DELAY);
 572              		.loc 1 242 0
 573 0032 1E4B     		ldr	r3, .L27+8
 574 0034 1868     		ldr	r0, [r3]
 575 0036 0023     		movs	r3, #0
 576 0038 4FF0FF32 		mov	r2, #-1
 577 003c 0021     		movs	r1, #0
 578 003e FFF7FEFF 		bl	xQueueGenericReceive
 579              	.LBB2:
 243:Src/freertos.c **** 
 244:Src/freertos.c **** 
 245:Src/freertos.c ****                for(int i=0; i<100; i++)
 580              		.loc 1 245 0
 581 0042 0023     		movs	r3, #0
 582 0044 FB60     		str	r3, [r7, #12]
 583 0046 0EE0     		b	.L23
 584              	.L24:
 246:Src/freertos.c ****                    spi_tx_data.gps_data[i] = gpsData.gprmc_body[i];
 585              		.loc 1 246 0 discriminator 3
 586 0048 194A     		ldr	r2, .L27+12
 587 004a FB68     		ldr	r3, [r7, #12]
 588 004c 1344     		add	r3, r3, r2
 589 004e 03F59C73 		add	r3, r3, #312
 590 0052 1B78     		ldrb	r3, [r3]
 591 0054 D9B2     		uxtb	r1, r3
 592 0056 174A     		ldr	r2, .L27+16
 593 0058 FB68     		ldr	r3, [r7, #12]
 594 005a 1344     		add	r3, r3, r2
 595 005c 0A46     		mov	r2, r1
 596 005e 1A70     		strb	r2, [r3]
 245:Src/freertos.c ****                    spi_tx_data.gps_data[i] = gpsData.gprmc_body[i];
 597              		.loc 1 245 0 discriminator 3
 598 0060 FB68     		ldr	r3, [r7, #12]
 599 0062 0133     		adds	r3, r3, #1
 600 0064 FB60     		str	r3, [r7, #12]
 601              	.L23:
 245:Src/freertos.c ****                    spi_tx_data.gps_data[i] = gpsData.gprmc_body[i];
 602              		.loc 1 245 0 is_stmt 0 discriminator 1
 603 0066 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccjQqYMG.s 			page 16


 604 0068 632B     		cmp	r3, #99
 605 006a EDDD     		ble	.L24
 606              	.LBE2:
 247:Src/freertos.c **** 
 248:Src/freertos.c **** 
 249:Src/freertos.c **** 
 250:Src/freertos.c ****                xSemaphoreGive(spiMutexHandle);
 607              		.loc 1 250 0 is_stmt 1
 608 006c 0F4B     		ldr	r3, .L27+8
 609 006e 1868     		ldr	r0, [r3]
 610 0070 0023     		movs	r3, #0
 611 0072 0022     		movs	r2, #0
 612 0074 0021     		movs	r1, #0
 613 0076 FFF7FEFF 		bl	xQueueGenericSend
 251:Src/freertos.c **** 
 252:Src/freertos.c **** 
 253:Src/freertos.c **** 
 254:Src/freertos.c ****            HAL_GPIO_TogglePin(LED3_GPIO_Port, LED3_Pin);
 614              		.loc 1 254 0
 615 007a 4FF48051 		mov	r1, #4096
 616 007e 0E48     		ldr	r0, .L27+20
 617 0080 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 255:Src/freertos.c **** 
 256:Src/freertos.c ****            enableGps();
 618              		.loc 1 256 0
 619 0084 FFF7FEFF 		bl	enableGps
 620              	.L22:
 257:Src/freertos.c **** 
 258:Src/freertos.c ****         }
 259:Src/freertos.c **** 
 260:Src/freertos.c **** 
 261:Src/freertos.c ****           receiveGpsData();
 621              		.loc 1 261 0
 622 0088 FFF7FEFF 		bl	receiveGpsData
 262:Src/freertos.c **** 
 263:Src/freertos.c ****           HAL_UART_Receive_IT(&huart4, (uint8_t *)&rx_data, 1);
 623              		.loc 1 263 0
 624 008c 07F10B03 		add	r3, r7, #11
 625 0090 0122     		movs	r2, #1
 626 0092 1946     		mov	r1, r3
 627 0094 0948     		ldr	r0, .L27+24
 628 0096 FFF7FEFF 		bl	HAL_UART_Receive_IT
 629 009a BAE7     		b	.L26
 630              	.L21:
 264:Src/freertos.c **** 
 265:Src/freertos.c **** 
 266:Src/freertos.c ****       }
 267:Src/freertos.c ****       else
 268:Src/freertos.c ****       {
 269:Src/freertos.c **** 
 270:Src/freertos.c ****           mprintf("gpsOps Crash \r\n");
 631              		.loc 1 270 0
 632 009c 0848     		ldr	r0, .L27+28
 633 009e FFF7FEFF 		bl	mprintf
 235:Src/freertos.c ****       {
 634              		.loc 1 235 0
 635 00a2 B6E7     		b	.L26
ARM GAS  /tmp/ccjQqYMG.s 			page 17


 636              	.L28:
 637              		.align	2
 638              	.L27:
 639 00a4 88000000 		.word	.LC12
 640 00a8 00000000 		.word	uartSemaphoreHandle
 641 00ac 00000000 		.word	spiMutexHandle
 642 00b0 00000000 		.word	gpsData
 643 00b4 00000000 		.word	spi_tx_data
 644 00b8 00040240 		.word	1073873920
 645 00bc 00000000 		.word	huart4
 646 00c0 94000000 		.word	.LC13
 647              		.cfi_endproc
 648              	.LFE146:
 650              		.section	.rodata
 651              		.align	2
 652              	.LC14:
 653 00a4 73656E73 		.ascii	"sensorOps\015\012\000"
 653      6F724F70 
 653      730D0A00 
 654              		.section	.text.sensorOps,"ax",%progbits
 655              		.align	1
 656              		.global	sensorOps
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 660              		.fpu fpv4-sp-d16
 662              	sensorOps:
 663              	.LFB147:
 271:Src/freertos.c **** 
 272:Src/freertos.c ****       }
 273:Src/freertos.c **** 
 274:Src/freertos.c ****   }
 275:Src/freertos.c **** 
 276:Src/freertos.c **** }
 277:Src/freertos.c **** 
 278:Src/freertos.c **** /* sensorOps function */
 279:Src/freertos.c **** void sensorOps(void const * argument)
 280:Src/freertos.c **** {
 664              		.loc 1 280 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 16
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668 0000 80B5     		push	{r7, lr}
 669              	.LCFI28:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 84B0     		sub	sp, sp, #16
 674              	.LCFI29:
 675              		.cfi_def_cfa_offset 24
 676 0004 00AF     		add	r7, sp, #0
 677              	.LCFI30:
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 281:Src/freertos.c **** 
 282:Src/freertos.c **** 
 283:Src/freertos.c ****     int pwm=45;
ARM GAS  /tmp/ccjQqYMG.s 			page 18


 680              		.loc 1 283 0
 681 0008 2D23     		movs	r3, #45
 682 000a FB60     		str	r3, [r7, #12]
 284:Src/freertos.c **** 
 285:Src/freertos.c ****   mprintf("sensorOps\r\n");
 683              		.loc 1 285 0
 684 000c 1B48     		ldr	r0, .L31
 685 000e FFF7FEFF 		bl	mprintf
 286:Src/freertos.c **** 
 287:Src/freertos.c ****   sensorInit();
 686              		.loc 1 287 0
 687 0012 FFF7FEFF 		bl	sensorInit
 288:Src/freertos.c **** 
 289:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 688              		.loc 1 289 0
 689 0016 0021     		movs	r1, #0
 690 0018 1948     		ldr	r0, .L31+4
 691 001a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 692              	.L30:
 290:Src/freertos.c **** 
 291:Src/freertos.c ****   int ret;
 292:Src/freertos.c **** 
 293:Src/freertos.c **** //  calibrateCompass();
 294:Src/freertos.c **** 
 295:Src/freertos.c ****   while(1)
 296:Src/freertos.c ****   {
 297:Src/freertos.c ****       readAllSensors();
 693              		.loc 1 297 0 discriminator 1
 694 001e FFF7FEFF 		bl	readAllSensors
 298:Src/freertos.c **** 
 299:Src/freertos.c **** 
 300:Src/freertos.c ****       xSemaphoreTake(spiMutexHandle, portMAX_DELAY);
 695              		.loc 1 300 0 discriminator 1
 696 0022 184B     		ldr	r3, .L31+8
 697 0024 1868     		ldr	r0, [r3]
 698 0026 0023     		movs	r3, #0
 699 0028 4FF0FF32 		mov	r2, #-1
 700 002c 0021     		movs	r1, #0
 701 002e FFF7FEFF 		bl	xQueueGenericReceive
 301:Src/freertos.c **** 
 302:Src/freertos.c ****       spi_tx_data.temperature = sensorValues.temperature;
 702              		.loc 1 302 0 discriminator 1
 703 0032 154B     		ldr	r3, .L31+12
 704 0034 9B68     		ldr	r3, [r3, #8]
 705 0036 1A46     		mov	r2, r3
 706 0038 144B     		ldr	r3, .L31+16
 707 003a 5A66     		str	r2, [r3, #100]
 303:Src/freertos.c ****       spi_tx_data.pressure = sensorValues.pressure;
 708              		.loc 1 303 0 discriminator 1
 709 003c 124B     		ldr	r3, .L31+12
 710 003e 1B68     		ldr	r3, [r3]
 711 0040 1A46     		mov	r2, r3
 712 0042 124B     		ldr	r3, .L31+16
 713 0044 DA66     		str	r2, [r3, #108]
 304:Src/freertos.c ****       spi_tx_data.altitude = sensorValues.altitude;
 714              		.loc 1 304 0 discriminator 1
 715 0046 104B     		ldr	r3, .L31+12
ARM GAS  /tmp/ccjQqYMG.s 			page 19


 716 0048 5B68     		ldr	r3, [r3, #4]
 717 004a 1A46     		mov	r2, r3
 718 004c 0F4B     		ldr	r3, .L31+16
 719 004e 1A67     		str	r2, [r3, #112]
 305:Src/freertos.c ****       spi_tx_data.wheather_condition = sensorValues.wheather_condition;
 720              		.loc 1 305 0 discriminator 1
 721 0050 0D4B     		ldr	r3, .L31+12
 722 0052 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 723 0054 0D4B     		ldr	r3, .L31+16
 724 0056 83F87420 		strb	r2, [r3, #116]
 306:Src/freertos.c ****       spi_tx_data.compass_degree = sensorValues.compass_degree;
 725              		.loc 1 306 0 discriminator 1
 726 005a 0B4B     		ldr	r3, .L31+12
 727 005c 1B69     		ldr	r3, [r3, #16]
 728 005e 1A46     		mov	r2, r3
 729 0060 0A4B     		ldr	r3, .L31+16
 730 0062 9A66     		str	r2, [r3, #104]
 307:Src/freertos.c **** 
 308:Src/freertos.c ****       spi_tx_data.checksum = 100;
 731              		.loc 1 308 0 discriminator 1
 732 0064 094B     		ldr	r3, .L31+16
 733 0066 6422     		movs	r2, #100
 734 0068 A3F87620 		strh	r2, [r3, #118]	@ movhi
 309:Src/freertos.c **** 
 310:Src/freertos.c ****       xSemaphoreGive(spiMutexHandle);
 735              		.loc 1 310 0 discriminator 1
 736 006c 054B     		ldr	r3, .L31+8
 737 006e 1868     		ldr	r0, [r3]
 738 0070 0023     		movs	r3, #0
 739 0072 0022     		movs	r2, #0
 740 0074 0021     		movs	r1, #0
 741 0076 FFF7FEFF 		bl	xQueueGenericSend
 297:Src/freertos.c **** 
 742              		.loc 1 297 0 discriminator 1
 743 007a D0E7     		b	.L30
 744              	.L32:
 745              		.align	2
 746              	.L31:
 747 007c A4000000 		.word	.LC14
 748 0080 00000000 		.word	htim3
 749 0084 00000000 		.word	spiMutexHandle
 750 0088 00000000 		.word	sensorValues
 751 008c 00000000 		.word	spi_tx_data
 752              		.cfi_endproc
 753              	.LFE147:
 755              		.section	.rodata
 756              		.align	2
 757              	.LC15:
 758 00b0 7370694F 		.ascii	"spiOps\015\012\000"
 758      70730D0A 
 758      00
 759              		.section	.text.spiComOps,"ax",%progbits
 760              		.align	1
 761              		.global	spiComOps
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
ARM GAS  /tmp/ccjQqYMG.s 			page 20


 765              		.fpu fpv4-sp-d16
 767              	spiComOps:
 768              	.LFB148:
 311:Src/freertos.c **** 
 312:Src/freertos.c **** 
 313:Src/freertos.c **** //      ret = getSfpTemperature();
 314:Src/freertos.c **** //          mprintf("%d\r\n", ret);
 315:Src/freertos.c **** 
 316:Src/freertos.c **** //          osDelay(1000);
 317:Src/freertos.c **** 
 318:Src/freertos.c **** //      __HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, pwm);
 319:Src/freertos.c **** //      pwm++;
 320:Src/freertos.c **** //      osDelay(100);
 321:Src/freertos.c **** 
 322:Src/freertos.c **** //      if(pwm == 153)
 323:Src/freertos.c **** //          pwm = 45;
 324:Src/freertos.c **** 
 325:Src/freertos.c **** 
 326:Src/freertos.c **** 
 327:Src/freertos.c ****   }
 328:Src/freertos.c **** 
 329:Src/freertos.c **** }
 330:Src/freertos.c **** 
 331:Src/freertos.c **** /* spiComOps function */
 332:Src/freertos.c **** void spiComOps(void const * argument)
 333:Src/freertos.c **** {
 769              		.loc 1 333 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 24
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773 0000 80B5     		push	{r7, lr}
 774              	.LCFI31:
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 86B0     		sub	sp, sp, #24
 779              	.LCFI32:
 780              		.cfi_def_cfa_offset 32
 781 0004 00AF     		add	r7, sp, #0
 782              	.LCFI33:
 783              		.cfi_def_cfa_register 7
 784 0006 7860     		str	r0, [r7, #4]
 334:Src/freertos.c **** 
 335:Src/freertos.c ****     int count = 0;
 785              		.loc 1 335 0
 786 0008 0023     		movs	r3, #0
 787 000a 7B61     		str	r3, [r7, #20]
 336:Src/freertos.c ****     int speed = 1;
 788              		.loc 1 336 0
 789 000c 0123     		movs	r3, #1
 790 000e 3B61     		str	r3, [r7, #16]
 337:Src/freertos.c **** 
 338:Src/freertos.c ****     HAL_SPI_StateTypeDef status;
 339:Src/freertos.c **** 
 340:Src/freertos.c ****     mprintf("spiOps\r\n");
 791              		.loc 1 340 0
 792 0010 3B48     		ldr	r0, .L41
ARM GAS  /tmp/ccjQqYMG.s 			page 21


 793 0012 FFF7FEFF 		bl	mprintf
 341:Src/freertos.c **** 
 342:Src/freertos.c **** 
 343:Src/freertos.c ****     HAL_SPI_TransmitReceive_IT(&hspi1, (uint8_t *)&spi_tx_data, (uint8_t *)&spi_rx_data,  sizeof(sp
 794              		.loc 1 343 0
 795 0016 7823     		movs	r3, #120
 796 0018 3A4A     		ldr	r2, .L41+4
 797 001a 3B49     		ldr	r1, .L41+8
 798 001c 3B48     		ldr	r0, .L41+12
 799 001e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 800              	.L40:
 344:Src/freertos.c **** 
 345:Src/freertos.c **** 
 346:Src/freertos.c ****   while(1)
 347:Src/freertos.c ****   {
 348:Src/freertos.c **** 
 349:Src/freertos.c ****       if( xSemaphoreTake(spiSemaphoreHandle, 1) == pdPASS)
 801              		.loc 1 349 0
 802 0022 3B4B     		ldr	r3, .L41+16
 803 0024 1868     		ldr	r0, [r3]
 804 0026 0023     		movs	r3, #0
 805 0028 0122     		movs	r2, #1
 806 002a 0021     		movs	r1, #0
 807 002c FFF7FEFF 		bl	xQueueGenericReceive
 808 0030 0346     		mov	r3, r0
 809 0032 012B     		cmp	r3, #1
 810 0034 F5D1     		bne	.L40
 350:Src/freertos.c ****       {
 351:Src/freertos.c **** 
 352:Src/freertos.c ****           status = HAL_SPI_GetState(&hspi1);
 811              		.loc 1 352 0
 812 0036 3548     		ldr	r0, .L41+12
 813 0038 FFF7FEFF 		bl	HAL_SPI_GetState
 814 003c 0346     		mov	r3, r0
 815 003e FB73     		strb	r3, [r7, #15]
 353:Src/freertos.c ****           if(status == HAL_SPI_STATE_READY)
 354:Src/freertos.c ****           {
 355:Src/freertos.c **** 
 356:Src/freertos.c **** 
 357:Src/freertos.c **** 
 358:Src/freertos.c **** 
 359:Src/freertos.c ****           }
 360:Src/freertos.c **** 
 361:Src/freertos.c ****          xSemaphoreTake(spiMutexHandle, portMAX_DELAY);
 816              		.loc 1 361 0
 817 0040 344B     		ldr	r3, .L41+20
 818 0042 1868     		ldr	r0, [r3]
 819 0044 0023     		movs	r3, #0
 820 0046 4FF0FF32 		mov	r2, #-1
 821 004a 0021     		movs	r1, #0
 822 004c FFF7FEFF 		bl	xQueueGenericReceive
 362:Src/freertos.c **** 
 363:Src/freertos.c ****           tx_data = spi_tx_data;
 823              		.loc 1 363 0
 824 0050 314A     		ldr	r2, .L41+24
 825 0052 2D4B     		ldr	r3, .L41+8
 826 0054 1046     		mov	r0, r2
ARM GAS  /tmp/ccjQqYMG.s 			page 22


 827 0056 1946     		mov	r1, r3
 828 0058 7823     		movs	r3, #120
 829 005a 1A46     		mov	r2, r3
 830 005c FFF7FEFF 		bl	memcpy
 364:Src/freertos.c **** 
 365:Src/freertos.c ****          xSemaphoreGive(spiMutexHandle);
 831              		.loc 1 365 0
 832 0060 2C4B     		ldr	r3, .L41+20
 833 0062 1868     		ldr	r0, [r3]
 834 0064 0023     		movs	r3, #0
 835 0066 0022     		movs	r2, #0
 836 0068 0021     		movs	r1, #0
 837 006a FFF7FEFF 		bl	xQueueGenericSend
 366:Src/freertos.c **** 
 367:Src/freertos.c **** 
 368:Src/freertos.c **** 
 369:Src/freertos.c **** 
 370:Src/freertos.c ****         HAL_SPI_TransmitReceive_IT(&hspi1, (uint8_t *)&tx_data, (uint8_t *)&spi_rx_data,  sizeof(sp
 838              		.loc 1 370 0
 839 006e 7823     		movs	r3, #120
 840 0070 244A     		ldr	r2, .L41+4
 841 0072 2949     		ldr	r1, .L41+24
 842 0074 2548     		ldr	r0, .L41+12
 843 0076 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 371:Src/freertos.c **** 
 372:Src/freertos.c **** 
 373:Src/freertos.c ****         if(spi_rx_data.step_motor1_direction == FORWARD)
 844              		.loc 1 373 0
 845 007a 224B     		ldr	r3, .L41+4
 846 007c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 847 0080 012B     		cmp	r3, #1
 848 0082 09D1     		bne	.L35
 374:Src/freertos.c ****         {
 375:Src/freertos.c ****             motor1.direction = FORWARD;
 849              		.loc 1 375 0
 850 0084 254B     		ldr	r3, .L41+28
 851 0086 0122     		movs	r2, #1
 852 0088 1A60     		str	r2, [r3]
 376:Src/freertos.c ****             motor1.speed = spi_rx_data.step_motor1_speed;
 853              		.loc 1 376 0
 854 008a 1E4B     		ldr	r3, .L41+4
 855 008c 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 856 0090 1A46     		mov	r2, r3
 857 0092 224B     		ldr	r3, .L41+28
 858 0094 5A60     		str	r2, [r3, #4]
 859 0096 11E0     		b	.L36
 860              	.L35:
 377:Src/freertos.c ****         }
 378:Src/freertos.c ****         else if(spi_rx_data.step_motor1_direction == BACKWARD)
 861              		.loc 1 378 0
 862 0098 1A4B     		ldr	r3, .L41+4
 863 009a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 864 009e 022B     		cmp	r3, #2
 865 00a0 09D1     		bne	.L37
 379:Src/freertos.c ****         {
 380:Src/freertos.c ****             motor1.direction = BACKWARD;
 866              		.loc 1 380 0
ARM GAS  /tmp/ccjQqYMG.s 			page 23


 867 00a2 1E4B     		ldr	r3, .L41+28
 868 00a4 0222     		movs	r2, #2
 869 00a6 1A60     		str	r2, [r3]
 381:Src/freertos.c ****             motor1.speed = spi_rx_data.step_motor1_speed;
 870              		.loc 1 381 0
 871 00a8 164B     		ldr	r3, .L41+4
 872 00aa 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 873 00ae 1A46     		mov	r2, r3
 874 00b0 1A4B     		ldr	r3, .L41+28
 875 00b2 5A60     		str	r2, [r3, #4]
 876 00b4 02E0     		b	.L36
 877              	.L37:
 382:Src/freertos.c ****         }
 383:Src/freertos.c ****         else
 384:Src/freertos.c ****         {
 385:Src/freertos.c ****             motor1.direction = STOP;
 878              		.loc 1 385 0
 879 00b6 194B     		ldr	r3, .L41+28
 880 00b8 0022     		movs	r2, #0
 881 00ba 1A60     		str	r2, [r3]
 882              	.L36:
 386:Src/freertos.c ****         }
 387:Src/freertos.c **** 
 388:Src/freertos.c ****         if(spi_rx_data.step_motor2_direction == FORWARD)
 883              		.loc 1 388 0
 884 00bc 114B     		ldr	r3, .L41+4
 885 00be 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 886 00c2 012B     		cmp	r3, #1
 887 00c4 09D1     		bne	.L38
 389:Src/freertos.c ****         {
 390:Src/freertos.c ****             motor2.direction = FORWARD;
 888              		.loc 1 390 0
 889 00c6 164B     		ldr	r3, .L41+32
 890 00c8 0122     		movs	r2, #1
 891 00ca 1A60     		str	r2, [r3]
 391:Src/freertos.c ****             motor1.speed = spi_rx_data.step_motor2_speed;
 892              		.loc 1 391 0
 893 00cc 0D4B     		ldr	r3, .L41+4
 894 00ce 93F84330 		ldrb	r3, [r3, #67]	@ zero_extendqisi2
 895 00d2 1A46     		mov	r2, r3
 896 00d4 114B     		ldr	r3, .L41+28
 897 00d6 5A60     		str	r2, [r3, #4]
 898 00d8 A3E7     		b	.L40
 899              	.L38:
 392:Src/freertos.c ****         }
 393:Src/freertos.c ****         else if(spi_rx_data.step_motor2_direction == BACKWARD)
 900              		.loc 1 393 0
 901 00da 0A4B     		ldr	r3, .L41+4
 902 00dc 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 903 00e0 022B     		cmp	r3, #2
 904 00e2 09D1     		bne	.L39
 394:Src/freertos.c ****         {
 395:Src/freertos.c ****             motor2.direction = BACKWARD;
 905              		.loc 1 395 0
 906 00e4 0E4B     		ldr	r3, .L41+32
 907 00e6 0222     		movs	r2, #2
 908 00e8 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjQqYMG.s 			page 24


 396:Src/freertos.c ****             motor1.speed = spi_rx_data.step_motor2_speed;
 909              		.loc 1 396 0
 910 00ea 064B     		ldr	r3, .L41+4
 911 00ec 93F84330 		ldrb	r3, [r3, #67]	@ zero_extendqisi2
 912 00f0 1A46     		mov	r2, r3
 913 00f2 0A4B     		ldr	r3, .L41+28
 914 00f4 5A60     		str	r2, [r3, #4]
 915 00f6 94E7     		b	.L40
 916              	.L39:
 397:Src/freertos.c ****         }
 398:Src/freertos.c ****         else
 399:Src/freertos.c ****         {
 400:Src/freertos.c ****             motor2.direction = STOP;
 917              		.loc 1 400 0
 918 00f8 094B     		ldr	r3, .L41+32
 919 00fa 0022     		movs	r2, #0
 920 00fc 1A60     		str	r2, [r3]
 349:Src/freertos.c ****       {
 921              		.loc 1 349 0
 922 00fe 90E7     		b	.L40
 923              	.L42:
 924              		.align	2
 925              	.L41:
 926 0100 B0000000 		.word	.LC15
 927 0104 00000000 		.word	spi_rx_data
 928 0108 00000000 		.word	spi_tx_data
 929 010c 00000000 		.word	hspi1
 930 0110 00000000 		.word	spiSemaphoreHandle
 931 0114 00000000 		.word	spiMutexHandle
 932 0118 00000000 		.word	tx_data
 933 011c 00000000 		.word	motor1
 934 0120 00000000 		.word	motor2
 935              		.cfi_endproc
 936              	.LFE148:
 938              		.section	.rodata
 939 00b9 000000   		.align	2
 940              	.LC16:
 941 00bc 6D6F746F 		.ascii	"motorOps\015\012\000"
 941      724F7073 
 941      0D0A00
 942              		.section	.text.motorOps,"ax",%progbits
 943              		.align	1
 944              		.global	motorOps
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv4-sp-d16
 950              	motorOps:
 951              	.LFB149:
 401:Src/freertos.c ****         }
 402:Src/freertos.c **** 
 403:Src/freertos.c **** 
 404:Src/freertos.c **** 
 405:Src/freertos.c ****       }
 406:Src/freertos.c **** 
 407:Src/freertos.c **** 
 408:Src/freertos.c ****   }
ARM GAS  /tmp/ccjQqYMG.s 			page 25


 409:Src/freertos.c **** 
 410:Src/freertos.c **** }
 411:Src/freertos.c **** 
 412:Src/freertos.c **** void motorOps(void const * argument)
 413:Src/freertos.c **** {
 952              		.loc 1 413 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 16
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 0000 80B5     		push	{r7, lr}
 957              	.LCFI34:
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 84B0     		sub	sp, sp, #16
 962              	.LCFI35:
 963              		.cfi_def_cfa_offset 24
 964 0004 00AF     		add	r7, sp, #0
 965              	.LCFI36:
 966              		.cfi_def_cfa_register 7
 967 0006 7860     		str	r0, [r7, #4]
 414:Src/freertos.c **** 
 415:Src/freertos.c ****     int count;
 416:Src/freertos.c ****     int speed = 1;
 968              		.loc 1 416 0
 969 0008 0123     		movs	r3, #1
 970 000a FB60     		str	r3, [r7, #12]
 417:Src/freertos.c **** 
 418:Src/freertos.c ****     mprintf("motorOps\r\n");
 971              		.loc 1 418 0
 972 000c 1248     		ldr	r0, .L49
 973 000e FFF7FEFF 		bl	mprintf
 974              	.L48:
 419:Src/freertos.c **** 
 420:Src/freertos.c ****     while(1)
 421:Src/freertos.c ****     {
 422:Src/freertos.c **** 
 423:Src/freertos.c **** 
 424:Src/freertos.c **** 
 425:Src/freertos.c ****       if(motor1.direction == FORWARD)
 975              		.loc 1 425 0
 976 0012 124B     		ldr	r3, .L49+4
 977 0014 1B68     		ldr	r3, [r3]
 978 0016 012B     		cmp	r3, #1
 979 0018 02D1     		bne	.L44
 426:Src/freertos.c ****       {
 427:Src/freertos.c ****         motor1Drive(FORWARD);
 980              		.loc 1 427 0
 981 001a 0120     		movs	r0, #1
 982 001c FFF7FEFF 		bl	motor1Drive
 983              	.L44:
 428:Src/freertos.c ****       }
 429:Src/freertos.c **** 
 430:Src/freertos.c ****       if(motor1.direction == BACKWARD)
 984              		.loc 1 430 0
 985 0020 0E4B     		ldr	r3, .L49+4
 986 0022 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQqYMG.s 			page 26


 987 0024 022B     		cmp	r3, #2
 988 0026 02D1     		bne	.L45
 431:Src/freertos.c ****       {
 432:Src/freertos.c ****         motor1Drive(BACKWARD);
 989              		.loc 1 432 0
 990 0028 0220     		movs	r0, #2
 991 002a FFF7FEFF 		bl	motor1Drive
 992              	.L45:
 433:Src/freertos.c ****       }
 434:Src/freertos.c **** 
 435:Src/freertos.c ****       if(motor2.direction == FORWARD)
 993              		.loc 1 435 0
 994 002e 0C4B     		ldr	r3, .L49+8
 995 0030 1B68     		ldr	r3, [r3]
 996 0032 012B     		cmp	r3, #1
 997 0034 02D1     		bne	.L46
 436:Src/freertos.c ****       {
 437:Src/freertos.c ****         motor2Drive(FORWARD);
 998              		.loc 1 437 0
 999 0036 0120     		movs	r0, #1
 1000 0038 FFF7FEFF 		bl	motor2Drive
 1001              	.L46:
 438:Src/freertos.c ****       }
 439:Src/freertos.c **** 
 440:Src/freertos.c ****       if(motor2.direction == BACKWARD)
 1002              		.loc 1 440 0
 1003 003c 084B     		ldr	r3, .L49+8
 1004 003e 1B68     		ldr	r3, [r3]
 1005 0040 022B     		cmp	r3, #2
 1006 0042 02D1     		bne	.L47
 441:Src/freertos.c ****       {
 442:Src/freertos.c ****         motor2Drive(BACKWARD);
 1007              		.loc 1 442 0
 1008 0044 0220     		movs	r0, #2
 1009 0046 FFF7FEFF 		bl	motor2Drive
 1010              	.L47:
 443:Src/freertos.c ****       }
 444:Src/freertos.c **** 
 445:Src/freertos.c ****             osDelay(2 + motor1.speed);
 1011              		.loc 1 445 0
 1012 004a 044B     		ldr	r3, .L49+4
 1013 004c 5B68     		ldr	r3, [r3, #4]
 1014 004e 0233     		adds	r3, r3, #2
 1015 0050 1846     		mov	r0, r3
 1016 0052 FFF7FEFF 		bl	osDelay
 425:Src/freertos.c ****       {
 1017              		.loc 1 425 0
 1018 0056 DCE7     		b	.L48
 1019              	.L50:
 1020              		.align	2
 1021              	.L49:
 1022 0058 BC000000 		.word	.LC16
 1023 005c 00000000 		.word	motor1
 1024 0060 00000000 		.word	motor2
 1025              		.cfi_endproc
 1026              	.LFE149:
 1028              		.text
ARM GAS  /tmp/ccjQqYMG.s 			page 27


 1029              	.Letext0:
 1030              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1031              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1032              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1033              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1034              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1035              		.file 7 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stdarg.h"
 1036              		.file 8 "/usr/include/newlib/sys/lock.h"
 1037              		.file 9 "/usr/include/newlib/sys/_types.h"
 1038              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1039              		.file 11 "/usr/include/newlib/sys/reent.h"
 1040              		.file 12 "<built-in>"
 1041              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1042              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1043              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 1044              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1045              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1046              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 1047              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1048              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1049              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1050              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1051              		.file 23 "Inc/gps.h"
 1052              		.file 24 "Inc/sensor.h"
 1053              		.file 25 "Inc/motor.h"
 1054              		.file 26 "Inc/usart.h"
 1055              		.file 27 "Inc/spi.h"
 1056              		.file 28 "Inc/tim.h"
ARM GAS  /tmp/ccjQqYMG.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
                            *COM*:00000000000001a0 gpsData
                            *COM*:0000000000000014 sensorValues
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000004 gpsThreadHandle
                            *COM*:0000000000000004 sensorThreadHandle
                            *COM*:0000000000000004 spiComThreadHandle
                            *COM*:0000000000000004 motorThreadHandle
                            *COM*:0000000000000004 spiMutexHandle
                            *COM*:0000000000000004 uartMutexHandle
                            *COM*:0000000000000004 memoryMutexHandle
                            *COM*:0000000000000004 spiSemaphoreHandle
                            *COM*:0000000000000004 uartSemaphoreHandle
                            *COM*:000000000000007c spi_rx_data
                            *COM*:000000000000007c rx_data
                            *COM*:0000000000000078 spi_tx_data
                            *COM*:0000000000000078 tx_data
                            *COM*:0000000000000001 rx_buf
     /tmp/ccjQqYMG.s:38     .text.vprint:0000000000000000 $t
     /tmp/ccjQqYMG.s:45     .text.vprint:0000000000000000 vprint
     /tmp/ccjQqYMG.s:98     .text.vprint:0000000000000044 $d
     /tmp/ccjQqYMG.s:103    .text.mprintf:0000000000000000 $t
     /tmp/ccjQqYMG.s:110    .text.mprintf:0000000000000000 mprintf
     /tmp/ccjQqYMG.s:180    .text.mprintf:0000000000000040 $d
     /tmp/ccjQqYMG.s:185    .rodata:0000000000000000 $d
     /tmp/ccjQqYMG.s:533    .text.gpsOps:0000000000000000 gpsOps
     /tmp/ccjQqYMG.s:662    .text.sensorOps:0000000000000000 sensorOps
     /tmp/ccjQqYMG.s:767    .text.spiComOps:0000000000000000 spiComOps
     /tmp/ccjQqYMG.s:950    .text.motorOps:0000000000000000 motorOps
     /tmp/ccjQqYMG.s:230    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccjQqYMG.s:237    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccjQqYMG.s:385    .text.MX_FREERTOS_Init:00000000000000fc $d
     /tmp/ccjQqYMG.s:402    .text.UART4_IRQHandler:0000000000000000 $t
     /tmp/ccjQqYMG.s:409    .text.UART4_IRQHandler:0000000000000000 UART4_IRQHandler
     /tmp/ccjQqYMG.s:470    .text.UART4_IRQHandler:000000000000003c $d
     /tmp/ccjQqYMG.s:477    .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/ccjQqYMG.s:484    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/ccjQqYMG.s:513    .text.SPI1_IRQHandler:000000000000001c $d
     /tmp/ccjQqYMG.s:526    .text.gpsOps:0000000000000000 $t
     /tmp/ccjQqYMG.s:639    .text.gpsOps:00000000000000a4 $d
     /tmp/ccjQqYMG.s:655    .text.sensorOps:0000000000000000 $t
     /tmp/ccjQqYMG.s:747    .text.sensorOps:000000000000007c $d
     /tmp/ccjQqYMG.s:760    .text.spiComOps:0000000000000000 $t
     /tmp/ccjQqYMG.s:926    .text.spiComOps:0000000000000100 $d
     /tmp/ccjQqYMG.s:943    .text.motorOps:0000000000000000 $t
     /tmp/ccjQqYMG.s:1022   .text.motorOps:0000000000000058 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vsprintf
strlen
HAL_UART_Transmit
huart1
ARM GAS  /tmp/ccjQqYMG.s 			page 29


xQueueGenericReceive
xQueueGenericSend
osMutexCreate
osSemaphoreCreate
osThreadCreate
HAL_UART_IRQHandler
xQueueGiveFromISR
huart4
HAL_SPI_IRQHandler
hspi1
gpsInit
checkGpsData
HAL_GPIO_TogglePin
enableGps
receiveGpsData
HAL_UART_Receive_IT
sensorInit
HAL_TIM_PWM_Start
readAllSensors
htim3
HAL_SPI_TransmitReceive_IT
HAL_SPI_GetState
memcpy
motor1Drive
motor2Drive
osDelay
