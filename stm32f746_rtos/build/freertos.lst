ARM GAS  /tmp/cczzlw37.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	gpsData,416,4
  18              		.comm	sensorValues,20,4
  19              		.comm	gyroscopeValues,12,4
  20              		.comm	calibration,4,4
  21              		.comm	setting_enable,1,1
  22              		.comm	motor1,20,4
  23              		.comm	motor2,20,4
  24              		.comm	servo1,16,4
  25              		.comm	servo2,16,4
  26              		.comm	gpsThreadHandle,4,4
  27              		.comm	sensorThreadHandle,4,4
  28              		.comm	spiComThreadHandle,4,4
  29              		.comm	motorThreadHandle,4,4
  30              		.comm	spiMutexHandle,4,4
  31              		.comm	uartMutexHandle,4,4
  32              		.comm	controlMutexHandle,4,4
  33              		.comm	spiSemaphoreHandle,4,4
  34              		.comm	uartSemaphoreHandle,4,4
  35              		.comm	SpiCheckData,4,4
  36              		.comm	SpiTxData,4,4
  37              		.comm	SpiRxData,4,4
  38              		.comm	EnvironmentData,4,4
  39              		.comm	ControlData,4,4
  40              		.comm	UpdateFile,4,4
  41              		.comm	SensorCalibrationNeeded,4,4
  42              		.comm	rx_buf,1,1
  43              		.section	.text.vprint,"ax",%progbits
  44              		.align	1
  45              		.global	vprint
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	vprint:
  52              	.LFB143:
  53              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
ARM GAS  /tmp/cczzlw37.s 			page 2


   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "freertos.h"
  51:Src/freertos.c **** 
  52:Src/freertos.c **** #include "gpsops.h"
  53:Src/freertos.c **** #include "spiops.h"
  54:Src/freertos.c **** #include "sensorops.h"
  55:Src/freertos.c **** #include "motorops.h"
  56:Src/freertos.c **** 
  57:Src/freertos.c **** #include <stdlib.h>
  58:Src/freertos.c **** 
  59:Src/freertos.c **** 
  60:Src/freertos.c **** 
  61:Src/freertos.c **** void vprint(const char *fmt, va_list argp)
  62:Src/freertos.c **** {
ARM GAS  /tmp/cczzlw37.s 			page 3


  54              		.loc 1 62 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 160
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 A8B0     		sub	sp, sp, #160
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 168
  66 0004 00AF     		add	r7, sp, #0
  67              	.LCFI2:
  68              		.cfi_def_cfa_register 7
  69 0006 7860     		str	r0, [r7, #4]
  70 0008 3960     		str	r1, [r7]
  63:Src/freertos.c ****     char string[150];
  64:Src/freertos.c **** 
  65:Src/freertos.c ****     if(0 < vsprintf(string,fmt,argp)) // build string
  71              		.loc 1 65 0
  72 000a 07F10803 		add	r3, r7, #8
  73 000e 3A68     		ldr	r2, [r7]
  74 0010 7968     		ldr	r1, [r7, #4]
  75 0012 1846     		mov	r0, r3
  76 0014 FFF7FEFF 		bl	vsprintf
  77 0018 0346     		mov	r3, r0
  78 001a 002B     		cmp	r3, #0
  79 001c 0DDD     		ble	.L3
  66:Src/freertos.c ****        HAL_UART_Transmit(&huart1, (uint8_t*)string, strlen(string), 0xffffff); // send message via 
  80              		.loc 1 66 0
  81 001e 07F10803 		add	r3, r7, #8
  82 0022 1846     		mov	r0, r3
  83 0024 FFF7FEFF 		bl	strlen
  84 0028 0346     		mov	r3, r0
  85 002a 9AB2     		uxth	r2, r3
  86 002c 07F10801 		add	r1, r7, #8
  87 0030 6FF07F43 		mvn	r3, #-16777216
  88 0034 0348     		ldr	r0, .L4
  89 0036 FFF7FEFF 		bl	HAL_UART_Transmit
  90              	.L3:
  67:Src/freertos.c **** 
  68:Src/freertos.c **** }
  91              		.loc 1 68 0
  92 003a 00BF     		nop
  93 003c A037     		adds	r7, r7, #160
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 8
  96 003e BD46     		mov	sp, r7
  97              	.LCFI4:
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0040 80BD     		pop	{r7, pc}
 101              	.L5:
 102 0042 00BF     		.align	2
 103              	.L4:
 104 0044 00000000 		.word	huart1
ARM GAS  /tmp/cczzlw37.s 			page 4


 105              		.cfi_endproc
 106              	.LFE143:
 108              		.section	.text.mprintf,"ax",%progbits
 109              		.align	1
 110              		.global	mprintf
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	mprintf:
 117              	.LFB144:
  69:Src/freertos.c **** 
  70:Src/freertos.c **** 
  71:Src/freertos.c **** 
  72:Src/freertos.c **** void mprintf(const char *fmt, ...) // custom printf() function
  73:Src/freertos.c **** {
 118              		.loc 1 73 0
 119              		.cfi_startproc
 120              		@ args = 4, pretend = 16, frame = 8
 121              		@ frame_needed = 1, uses_anonymous_args = 1
 122 0000 0FB4     		push	{r0, r1, r2, r3}
 123              	.LCFI5:
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 0, -16
 126              		.cfi_offset 1, -12
 127              		.cfi_offset 2, -8
 128              		.cfi_offset 3, -4
 129 0002 80B5     		push	{r7, lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 24
 132              		.cfi_offset 7, -24
 133              		.cfi_offset 14, -20
 134 0004 82B0     		sub	sp, sp, #8
 135              	.LCFI7:
 136              		.cfi_def_cfa_offset 32
 137 0006 00AF     		add	r7, sp, #0
 138              	.LCFI8:
 139              		.cfi_def_cfa_register 7
  74:Src/freertos.c **** 
  75:Src/freertos.c ****     xSemaphoreTake(uartMutexHandle, 100);
 140              		.loc 1 75 0
 141 0008 0D4B     		ldr	r3, .L7
 142 000a 1868     		ldr	r0, [r3]
 143 000c 0023     		movs	r3, #0
 144 000e 6422     		movs	r2, #100
 145 0010 0021     		movs	r1, #0
 146 0012 FFF7FEFF 		bl	xQueueGenericReceive
  76:Src/freertos.c ****     va_list argp;
  77:Src/freertos.c ****     va_start(argp, fmt);
 147              		.loc 1 77 0
 148 0016 07F11403 		add	r3, r7, #20
 149 001a 7B60     		str	r3, [r7, #4]
  78:Src/freertos.c ****     vprint(fmt, argp);
 150              		.loc 1 78 0
 151 001c 7968     		ldr	r1, [r7, #4]
 152 001e 3869     		ldr	r0, [r7, #16]
 153 0020 FFF7FEFF 		bl	vprint
ARM GAS  /tmp/cczzlw37.s 			page 5


  79:Src/freertos.c ****     va_end(argp);
  80:Src/freertos.c ****     xSemaphoreGive(uartMutexHandle);
 154              		.loc 1 80 0
 155 0024 064B     		ldr	r3, .L7
 156 0026 1868     		ldr	r0, [r3]
 157 0028 0023     		movs	r3, #0
 158 002a 0022     		movs	r2, #0
 159 002c 0021     		movs	r1, #0
 160 002e FFF7FEFF 		bl	xQueueGenericSend
  81:Src/freertos.c **** 
  82:Src/freertos.c **** }
 161              		.loc 1 82 0
 162 0032 00BF     		nop
 163 0034 0837     		adds	r7, r7, #8
 164              	.LCFI9:
 165              		.cfi_def_cfa_offset 24
 166 0036 BD46     		mov	sp, r7
 167              	.LCFI10:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0038 BDE88040 		pop	{r7, lr}
 171              	.LCFI11:
 172              		.cfi_restore 14
 173              		.cfi_restore 7
 174              		.cfi_def_cfa_offset 16
 175 003c 04B0     		add	sp, sp, #16
 176              	.LCFI12:
 177              		.cfi_restore 3
 178              		.cfi_restore 2
 179              		.cfi_restore 1
 180              		.cfi_restore 0
 181              		.cfi_def_cfa_offset 0
 182 003e 7047     		bx	lr
 183              	.L8:
 184              		.align	2
 185              	.L7:
 186 0040 00000000 		.word	uartMutexHandle
 187              		.cfi_endproc
 188              	.LFE144:
 190              		.section	.rodata
 191              		.align	2
 192              	.LC0:
 193 0000 67707354 		.ascii	"gpsThread\000"
 193      68726561 
 193      6400
 194 000a 0000     		.align	2
 195              	.LC8:
 196 000c 00000000 		.word	.LC0
 197 0010 00000000 		.word	gpsOps
 198 0014 0000     		.short	0
 199 0016 0000     		.space	2
 200 0018 00000000 		.word	0
 201 001c 00040000 		.word	1024
 202              		.align	2
 203              	.LC2:
 204 0020 73656E73 		.ascii	"sensorThread\000"
 204      6F725468 
ARM GAS  /tmp/cczzlw37.s 			page 6


 204      72656164 
 204      00
 205 002d 000000   		.align	2
 206              	.LC9:
 207 0030 20000000 		.word	.LC2
 208 0034 00000000 		.word	sensorOps
 209 0038 FFFF     		.short	-1
 210 003a 0000     		.space	2
 211 003c 00000000 		.word	0
 212 0040 00020000 		.word	512
 213              		.align	2
 214              	.LC4:
 215 0044 73706943 		.ascii	"spiComThread\000"
 215      6F6D5468 
 215      72656164 
 215      00
 216 0051 000000   		.align	2
 217              	.LC10:
 218 0054 44000000 		.word	.LC4
 219 0058 00000000 		.word	spiComOps
 220 005c 0000     		.short	0
 221 005e 0000     		.space	2
 222 0060 00000000 		.word	0
 223 0064 00040000 		.word	1024
 224              		.align	2
 225              	.LC6:
 226 0068 6D6F746F 		.ascii	"motorThread\000"
 226      72546872 
 226      65616400 
 227              		.align	2
 228              	.LC11:
 229 0074 68000000 		.word	.LC6
 230 0078 00000000 		.word	motorOps
 231 007c 0100     		.short	1
 232 007e 0000     		.space	2
 233 0080 00000000 		.word	0
 234 0084 00020000 		.word	512
 235              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 236              		.align	1
 237              		.global	MX_FREERTOS_Init
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	MX_FREERTOS_Init:
 244              	.LFB145:
  83:Src/freertos.c **** 
  84:Src/freertos.c **** 
  85:Src/freertos.c **** 
  86:Src/freertos.c **** void MX_FREERTOS_Init(void)
  87:Src/freertos.c **** {
 245              		.loc 1 87 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 104
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 B0B5     		push	{r4, r5, r7, lr}
 250              	.LCFI13:
ARM GAS  /tmp/cczzlw37.s 			page 7


 251              		.cfi_def_cfa_offset 16
 252              		.cfi_offset 4, -16
 253              		.cfi_offset 5, -12
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 9AB0     		sub	sp, sp, #104
 257              	.LCFI14:
 258              		.cfi_def_cfa_offset 120
 259 0004 00AF     		add	r7, sp, #0
 260              	.LCFI15:
 261              		.cfi_def_cfa_register 7
  88:Src/freertos.c **** 
  89:Src/freertos.c **** 
  90:Src/freertos.c ****   osMutexDef(spiMutex);
 262              		.loc 1 90 0
 263 0006 0023     		movs	r3, #0
 264 0008 7B66     		str	r3, [r7, #100]
  91:Src/freertos.c ****   spiMutexHandle = osMutexCreate(osMutex(spiMutex));
 265              		.loc 1 91 0
 266 000a 07F16403 		add	r3, r7, #100
 267 000e 1846     		mov	r0, r3
 268 0010 FFF7FEFF 		bl	osMutexCreate
 269 0014 0246     		mov	r2, r0
 270 0016 514B     		ldr	r3, .L10
 271 0018 1A60     		str	r2, [r3]
  92:Src/freertos.c **** 
  93:Src/freertos.c ****   osMutexDef(uartMutex);
 272              		.loc 1 93 0
 273 001a 0023     		movs	r3, #0
 274 001c 3B66     		str	r3, [r7, #96]
  94:Src/freertos.c ****   uartMutexHandle = osMutexCreate(osMutex(uartMutex));
 275              		.loc 1 94 0
 276 001e 07F16003 		add	r3, r7, #96
 277 0022 1846     		mov	r0, r3
 278 0024 FFF7FEFF 		bl	osMutexCreate
 279 0028 0246     		mov	r2, r0
 280 002a 4D4B     		ldr	r3, .L10+4
 281 002c 1A60     		str	r2, [r3]
  95:Src/freertos.c **** 
  96:Src/freertos.c ****   osMutexDef(controlMutex);
 282              		.loc 1 96 0
 283 002e 0023     		movs	r3, #0
 284 0030 FB65     		str	r3, [r7, #92]
  97:Src/freertos.c ****   controlMutexHandle = osMutexCreate(osMutex(controlMutex));
 285              		.loc 1 97 0
 286 0032 07F15C03 		add	r3, r7, #92
 287 0036 1846     		mov	r0, r3
 288 0038 FFF7FEFF 		bl	osMutexCreate
 289 003c 0246     		mov	r2, r0
 290 003e 494B     		ldr	r3, .L10+8
 291 0040 1A60     		str	r2, [r3]
  98:Src/freertos.c **** 
  99:Src/freertos.c ****   osSemaphoreDef(uartSemaphore);
 292              		.loc 1 99 0
 293 0042 0023     		movs	r3, #0
 294 0044 BB65     		str	r3, [r7, #88]
 100:Src/freertos.c ****   uartSemaphoreHandle = osSemaphoreCreate(osSemaphore(uartSemaphore), 1);
ARM GAS  /tmp/cczzlw37.s 			page 8


 295              		.loc 1 100 0
 296 0046 07F15803 		add	r3, r7, #88
 297 004a 0121     		movs	r1, #1
 298 004c 1846     		mov	r0, r3
 299 004e FFF7FEFF 		bl	osSemaphoreCreate
 300 0052 0246     		mov	r2, r0
 301 0054 444B     		ldr	r3, .L10+12
 302 0056 1A60     		str	r2, [r3]
 101:Src/freertos.c **** 
 102:Src/freertos.c ****   /* definition and creation of spiSemaphore */
 103:Src/freertos.c ****   osSemaphoreDef(spiSemaphore);
 303              		.loc 1 103 0
 304 0058 0023     		movs	r3, #0
 305 005a 7B65     		str	r3, [r7, #84]
 104:Src/freertos.c ****   spiSemaphoreHandle = osSemaphoreCreate(osSemaphore(spiSemaphore), 1);
 306              		.loc 1 104 0
 307 005c 07F15403 		add	r3, r7, #84
 308 0060 0121     		movs	r1, #1
 309 0062 1846     		mov	r0, r3
 310 0064 FFF7FEFF 		bl	osSemaphoreCreate
 311 0068 0246     		mov	r2, r0
 312 006a 404B     		ldr	r3, .L10+16
 313 006c 1A60     		str	r2, [r3]
 105:Src/freertos.c **** 
 106:Src/freertos.c ****   /* definition and creation of gpsThread */
 107:Src/freertos.c ****   osThreadDef(gpsThread, gpsOps, osPriorityNormal, 0, 1024);
 314              		.loc 1 107 0
 315 006e 404B     		ldr	r3, .L10+20
 316 0070 07F14004 		add	r4, r7, #64
 317 0074 1D46     		mov	r5, r3
 318 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 319 0078 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 320 007a 2B68     		ldr	r3, [r5]
 321 007c 2360     		str	r3, [r4]
 108:Src/freertos.c ****   gpsThreadHandle = osThreadCreate(osThread(gpsThread), NULL);
 322              		.loc 1 108 0
 323 007e 07F14003 		add	r3, r7, #64
 324 0082 0021     		movs	r1, #0
 325 0084 1846     		mov	r0, r3
 326 0086 FFF7FEFF 		bl	osThreadCreate
 327 008a 0246     		mov	r2, r0
 328 008c 394B     		ldr	r3, .L10+24
 329 008e 1A60     		str	r2, [r3]
 109:Src/freertos.c **** 
 110:Src/freertos.c ****   /* definition and creation of sensorThread */
 111:Src/freertos.c ****   osThreadDef(sensorThread, sensorOps, osPriorityBelowNormal, 0, 512);
 330              		.loc 1 111 0
 331 0090 394B     		ldr	r3, .L10+28
 332 0092 07F12C04 		add	r4, r7, #44
 333 0096 1D46     		mov	r5, r3
 334 0098 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 335 009a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 336 009c 2B68     		ldr	r3, [r5]
 337 009e 2360     		str	r3, [r4]
 112:Src/freertos.c ****   sensorThreadHandle = osThreadCreate(osThread(sensorThread), NULL);
 338              		.loc 1 112 0
 339 00a0 07F12C03 		add	r3, r7, #44
ARM GAS  /tmp/cczzlw37.s 			page 9


 340 00a4 0021     		movs	r1, #0
 341 00a6 1846     		mov	r0, r3
 342 00a8 FFF7FEFF 		bl	osThreadCreate
 343 00ac 0246     		mov	r2, r0
 344 00ae 334B     		ldr	r3, .L10+32
 345 00b0 1A60     		str	r2, [r3]
 113:Src/freertos.c **** 
 114:Src/freertos.c ****   /* definition and creation of spiComThread */
 115:Src/freertos.c ****   osThreadDef(spiComThread, spiComOps, osPriorityNormal, 0, 1024);
 346              		.loc 1 115 0
 347 00b2 334B     		ldr	r3, .L10+36
 348 00b4 07F11804 		add	r4, r7, #24
 349 00b8 1D46     		mov	r5, r3
 350 00ba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 351 00bc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 352 00be 2B68     		ldr	r3, [r5]
 353 00c0 2360     		str	r3, [r4]
 116:Src/freertos.c ****   spiComThreadHandle = osThreadCreate(osThread(spiComThread), NULL);
 354              		.loc 1 116 0
 355 00c2 07F11803 		add	r3, r7, #24
 356 00c6 0021     		movs	r1, #0
 357 00c8 1846     		mov	r0, r3
 358 00ca FFF7FEFF 		bl	osThreadCreate
 359 00ce 0246     		mov	r2, r0
 360 00d0 2C4B     		ldr	r3, .L10+40
 361 00d2 1A60     		str	r2, [r3]
 117:Src/freertos.c **** 
 118:Src/freertos.c ****   osThreadDef(motorThread, motorOps, osPriorityAboveNormal, 0, 512);
 362              		.loc 1 118 0
 363 00d4 2C4B     		ldr	r3, .L10+44
 364 00d6 3C1D     		adds	r4, r7, #4
 365 00d8 1D46     		mov	r5, r3
 366 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 367 00dc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 368 00de 2B68     		ldr	r3, [r5]
 369 00e0 2360     		str	r3, [r4]
 119:Src/freertos.c ****   motorThreadHandle = osThreadCreate(osThread(motorThread), NULL);
 370              		.loc 1 119 0
 371 00e2 3B1D     		adds	r3, r7, #4
 372 00e4 0021     		movs	r1, #0
 373 00e6 1846     		mov	r0, r3
 374 00e8 FFF7FEFF 		bl	osThreadCreate
 375 00ec 0246     		mov	r2, r0
 376 00ee 274B     		ldr	r3, .L10+48
 377 00f0 1A60     		str	r2, [r3]
 120:Src/freertos.c **** 
 121:Src/freertos.c **** 
 122:Src/freertos.c ****   EnvironmentData = malloc(sizeof(ENVIRONMENT_DATA_FORMAT));
 378              		.loc 1 122 0
 379 00f2 7C20     		movs	r0, #124
 380 00f4 FFF7FEFF 		bl	malloc
 381 00f8 0346     		mov	r3, r0
 382 00fa 1A46     		mov	r2, r3
 383 00fc 244B     		ldr	r3, .L10+52
 384 00fe 1A60     		str	r2, [r3]
 123:Src/freertos.c ****   ControlData = malloc(sizeof(CONTROL_DATA_FORMAT));
 385              		.loc 1 123 0
ARM GAS  /tmp/cczzlw37.s 			page 10


 386 0100 7820     		movs	r0, #120
 387 0102 FFF7FEFF 		bl	malloc
 388 0106 0346     		mov	r3, r0
 389 0108 1A46     		mov	r2, r3
 390 010a 224B     		ldr	r3, .L10+56
 391 010c 1A60     		str	r2, [r3]
 124:Src/freertos.c ****   UpdateFile = malloc(sizeof(UPDATE_FILE_FORMAT));
 392              		.loc 1 124 0
 393 010e 7420     		movs	r0, #116
 394 0110 FFF7FEFF 		bl	malloc
 395 0114 0346     		mov	r3, r0
 396 0116 1A46     		mov	r2, r3
 397 0118 1F4B     		ldr	r3, .L10+60
 398 011a 1A60     		str	r2, [r3]
 125:Src/freertos.c **** 
 126:Src/freertos.c ****   SpiRxData = malloc(sizeof(SPI_TRANSFER_FORMAT));
 399              		.loc 1 126 0
 400 011c 7820     		movs	r0, #120
 401 011e FFF7FEFF 		bl	malloc
 402 0122 0346     		mov	r3, r0
 403 0124 1A46     		mov	r2, r3
 404 0126 1D4B     		ldr	r3, .L10+64
 405 0128 1A60     		str	r2, [r3]
 127:Src/freertos.c **** 
 128:Src/freertos.c ****   SpiTxData = malloc(sizeof(SPI_TRANSFER_FORMAT));
 406              		.loc 1 128 0
 407 012a 7820     		movs	r0, #120
 408 012c FFF7FEFF 		bl	malloc
 409 0130 0346     		mov	r3, r0
 410 0132 1A46     		mov	r2, r3
 411 0134 1A4B     		ldr	r3, .L10+68
 412 0136 1A60     		str	r2, [r3]
 129:Src/freertos.c ****   SpiCheckData = malloc(sizeof(SPI_TRANSFER_FORMAT));
 413              		.loc 1 129 0
 414 0138 7820     		movs	r0, #120
 415 013a FFF7FEFF 		bl	malloc
 416 013e 0346     		mov	r3, r0
 417 0140 1A46     		mov	r2, r3
 418 0142 184B     		ldr	r3, .L10+72
 419 0144 1A60     		str	r2, [r3]
 130:Src/freertos.c **** 
 131:Src/freertos.c ****   SensorCalibrationNeeded = malloc(sizeof(int));
 420              		.loc 1 131 0
 421 0146 0420     		movs	r0, #4
 422 0148 FFF7FEFF 		bl	malloc
 423 014c 0346     		mov	r3, r0
 424 014e 1A46     		mov	r2, r3
 425 0150 154B     		ldr	r3, .L10+76
 426 0152 1A60     		str	r2, [r3]
 132:Src/freertos.c **** 
 133:Src/freertos.c **** }
 427              		.loc 1 133 0
 428 0154 00BF     		nop
 429 0156 6837     		adds	r7, r7, #104
 430              	.LCFI16:
 431              		.cfi_def_cfa_offset 16
 432 0158 BD46     		mov	sp, r7
ARM GAS  /tmp/cczzlw37.s 			page 11


 433              	.LCFI17:
 434              		.cfi_def_cfa_register 13
 435              		@ sp needed
 436 015a B0BD     		pop	{r4, r5, r7, pc}
 437              	.L11:
 438              		.align	2
 439              	.L10:
 440 015c 00000000 		.word	spiMutexHandle
 441 0160 00000000 		.word	uartMutexHandle
 442 0164 00000000 		.word	controlMutexHandle
 443 0168 00000000 		.word	uartSemaphoreHandle
 444 016c 00000000 		.word	spiSemaphoreHandle
 445 0170 0C000000 		.word	.LC8
 446 0174 00000000 		.word	gpsThreadHandle
 447 0178 30000000 		.word	.LC9
 448 017c 00000000 		.word	sensorThreadHandle
 449 0180 54000000 		.word	.LC10
 450 0184 00000000 		.word	spiComThreadHandle
 451 0188 74000000 		.word	.LC11
 452 018c 00000000 		.word	motorThreadHandle
 453 0190 00000000 		.word	EnvironmentData
 454 0194 00000000 		.word	ControlData
 455 0198 00000000 		.word	UpdateFile
 456 019c 00000000 		.word	SpiRxData
 457 01a0 00000000 		.word	SpiTxData
 458 01a4 00000000 		.word	SpiCheckData
 459 01a8 00000000 		.word	SensorCalibrationNeeded
 460              		.cfi_endproc
 461              	.LFE145:
 463              		.text
 464              	.Letext0:
 465              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdint-gcc.h"
 466              		.file 3 "Inc/main.h"
 467              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 468              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 469              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 470              		.file 7 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdarg.h"
 471              		.file 8 "/usr/include/newlib/sys/lock.h"
 472              		.file 9 "/usr/include/newlib/sys/_types.h"
 473              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 474              		.file 11 "/usr/include/newlib/sys/reent.h"
 475              		.file 12 "<built-in>"
 476              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 477              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 478              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 479              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 480              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 481              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 482              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 483              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 484              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 485              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 486              		.file 23 "Inc/gps.h"
 487              		.file 24 "Inc/sensor.h"
 488              		.file 25 "Inc/motor.h"
 489              		.file 26 "Inc/usart.h"
 490              		.file 27 "Inc/spi.h"
ARM GAS  /tmp/cczzlw37.s 			page 12


 491              		.file 28 "Inc/tim.h"
 492              		.file 29 "Inc/freertos.h"
ARM GAS  /tmp/cczzlw37.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
                            *COM*:00000000000001a0 gpsData
                            *COM*:0000000000000014 sensorValues
                            *COM*:000000000000000c gyroscopeValues
                            *COM*:0000000000000004 calibration
                            *COM*:0000000000000001 setting_enable
                            *COM*:0000000000000014 motor1
                            *COM*:0000000000000014 motor2
                            *COM*:0000000000000010 servo1
                            *COM*:0000000000000010 servo2
                            *COM*:0000000000000004 gpsThreadHandle
                            *COM*:0000000000000004 sensorThreadHandle
                            *COM*:0000000000000004 spiComThreadHandle
                            *COM*:0000000000000004 motorThreadHandle
                            *COM*:0000000000000004 spiMutexHandle
                            *COM*:0000000000000004 uartMutexHandle
                            *COM*:0000000000000004 controlMutexHandle
                            *COM*:0000000000000004 spiSemaphoreHandle
                            *COM*:0000000000000004 uartSemaphoreHandle
                            *COM*:0000000000000004 SpiCheckData
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 EnvironmentData
                            *COM*:0000000000000004 ControlData
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000004 SensorCalibrationNeeded
                            *COM*:0000000000000001 rx_buf
     /tmp/cczzlw37.s:44     .text.vprint:0000000000000000 $t
     /tmp/cczzlw37.s:51     .text.vprint:0000000000000000 vprint
     /tmp/cczzlw37.s:104    .text.vprint:0000000000000044 $d
     /tmp/cczzlw37.s:109    .text.mprintf:0000000000000000 $t
     /tmp/cczzlw37.s:116    .text.mprintf:0000000000000000 mprintf
     /tmp/cczzlw37.s:186    .text.mprintf:0000000000000040 $d
     /tmp/cczzlw37.s:191    .rodata:0000000000000000 $d
     /tmp/cczzlw37.s:236    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/cczzlw37.s:243    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/cczzlw37.s:440    .text.MX_FREERTOS_Init:000000000000015c $d

UNDEFINED SYMBOLS
vsprintf
strlen
HAL_UART_Transmit
huart1
xQueueGenericReceive
xQueueGenericSend
gpsOps
sensorOps
spiComOps
motorOps
osMutexCreate
osSemaphoreCreate
osThreadCreate
malloc
