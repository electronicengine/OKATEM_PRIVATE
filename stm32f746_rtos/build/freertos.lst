ARM GAS  /tmp/ccSNrujI.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	gpsData,416,4
  18              		.comm	sensorValues,20,4
  19              		.comm	motor1,8,4
  20              		.comm	motor2,8,4
  21              		.comm	motor3,8,4
  22              		.comm	motor4,8,4
  23              		.comm	gpsThreadHandle,4,4
  24              		.comm	sensorThreadHandle,4,4
  25              		.comm	spiComThreadHandle,4,4
  26              		.comm	logThreadHandle,4,4
  27              		.comm	spiMutexHandle,4,4
  28              		.comm	uartMutexHandle,4,4
  29              		.comm	memoryMutexHandle,4,4
  30              		.comm	spiSemaphoreHandle,4,4
  31              		.comm	uartSemaphoreHandle,4,4
  32              		.comm	spi_rx_data,124,4
  33              		.comm	rx_data,124,4
  34              		.comm	spi_tx_data,120,4
  35              		.comm	tx_data,120,4
  36              		.comm	rx_buf,1,1
  37              		.section	.text.vprint,"ax",%progbits
  38              		.align	1
  39              		.global	vprint
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	vprint:
  46              	.LFB141:
  47              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
ARM GAS  /tmp/ccSNrujI.s 			page 2


  12:Src/freertos.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** #include "cmsis_os.h"
  53:Src/freertos.c **** #include "gps.h"
  54:Src/freertos.c **** #include "sensor.h"
  55:Src/freertos.c **** #include "motor.h"
  56:Src/freertos.c **** #include <stdarg.h>
  57:Src/freertos.c **** #include <stdio.h>
  58:Src/freertos.c **** #include "usart.h"
  59:Src/freertos.c **** #include "spi.h"
  60:Src/freertos.c **** #include "sfp.h"
  61:Src/freertos.c **** #include "tim.h"
  62:Src/freertos.c **** 
  63:Src/freertos.c **** 
  64:Src/freertos.c **** osThreadId gpsThreadHandle;
  65:Src/freertos.c **** osThreadId sensorThreadHandle;
  66:Src/freertos.c **** osThreadId spiComThreadHandle;
  67:Src/freertos.c **** osThreadId logThreadHandle;
  68:Src/freertos.c **** 
ARM GAS  /tmp/ccSNrujI.s 			page 3


  69:Src/freertos.c **** 
  70:Src/freertos.c **** osMutexId spiMutexHandle;
  71:Src/freertos.c **** osMutexId uartMutexHandle;
  72:Src/freertos.c **** osMutexId memoryMutexHandle;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** osSemaphoreId spiSemaphoreHandle;
  75:Src/freertos.c **** osSemaphoreId uartSemaphoreHandle;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** struct SPI_RX_FORMAT
  78:Src/freertos.c **** {
  79:Src/freertos.c ****     uint8_t garbage1[47];
  80:Src/freertos.c ****     uint32_t x_position;
  81:Src/freertos.c ****     uint32_t y_position;
  82:Src/freertos.c ****     uint32_t z_position;
  83:Src/freertos.c **** 
  84:Src/freertos.c ****     uint8_t step_motor1_direction;
  85:Src/freertos.c ****     uint8_t step_motor2_direction;
  86:Src/freertos.c ****     uint8_t step_motor3_direction;
  87:Src/freertos.c ****     uint8_t step_motor4_direction;
  88:Src/freertos.c ****     uint8_t servo_motor1_direction;
  89:Src/freertos.c ****     uint8_t servo_motor2_direction;
  90:Src/freertos.c **** 
  91:Src/freertos.c ****     uint8_t step_motor1_speed;
  92:Src/freertos.c ****     uint8_t step_motor2_speed;
  93:Src/freertos.c ****     uint8_t step_motor3_speed;
  94:Src/freertos.c ****     uint8_t step_motor4_speed;
  95:Src/freertos.c ****     uint8_t servo_motor1_degree;
  96:Src/freertos.c ****     uint8_t servo_motor2_degree;
  97:Src/freertos.c **** 
  98:Src/freertos.c ****     uint16_t checksum;
  99:Src/freertos.c **** 
 100:Src/freertos.c ****     uint8_t garbage2[48];
 101:Src/freertos.c **** 
 102:Src/freertos.c **** }spi_rx_data, rx_data;
 103:Src/freertos.c **** 
 104:Src/freertos.c **** volatile struct SPI_TX_FORMAT
 105:Src/freertos.c **** {
 106:Src/freertos.c **** 
 107:Src/freertos.c ****     unsigned char gps_data[100];
 108:Src/freertos.c **** 
 109:Src/freertos.c ****     uint32_t temperature;
 110:Src/freertos.c ****     uint32_t compass_degree;
 111:Src/freertos.c ****     uint32_t pressure;
 112:Src/freertos.c ****     uint32_t altitude;
 113:Src/freertos.c **** 
 114:Src/freertos.c ****     unsigned char wheather_condition;
 115:Src/freertos.c **** 
 116:Src/freertos.c ****     uint16_t checksum;
 117:Src/freertos.c **** 
 118:Src/freertos.c **** }spi_tx_data,  tx_data;
 119:Src/freertos.c **** 
 120:Src/freertos.c **** 
 121:Src/freertos.c **** //uint8_t rx[sizeof(spi_rx_data)];
 122:Src/freertos.c **** //uint8_t tx[sizeof(spi_tx_data)];
 123:Src/freertos.c **** 
 124:Src/freertos.c **** 
 125:Src/freertos.c **** 
ARM GAS  /tmp/ccSNrujI.s 			page 4


 126:Src/freertos.c **** void gpsOps(void const * argument);
 127:Src/freertos.c **** void sensorOps(void const * argument);
 128:Src/freertos.c **** void spiComOps(void const * argument);
 129:Src/freertos.c **** void loggingOps(void const * argument);
 130:Src/freertos.c **** 
 131:Src/freertos.c **** void MX_FREERTOS_Init(void);
 132:Src/freertos.c **** void mprintf(const char *fmt, ...);
 133:Src/freertos.c **** unsigned char rx_buf;
 134:Src/freertos.c **** 
 135:Src/freertos.c **** 
 136:Src/freertos.c **** void vprint(const char *fmt, va_list argp)
 137:Src/freertos.c **** {
  48              		.loc 1 137 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 160
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 A8B0     		sub	sp, sp, #160
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 168
  60 0004 00AF     		add	r7, sp, #0
  61              	.LCFI2:
  62              		.cfi_def_cfa_register 7
  63 0006 7860     		str	r0, [r7, #4]
  64 0008 3960     		str	r1, [r7]
 138:Src/freertos.c ****     char string[150];
 139:Src/freertos.c **** 
 140:Src/freertos.c ****     if(0 < vsprintf(string,fmt,argp)) // build string
  65              		.loc 1 140 0
  66 000a 07F10803 		add	r3, r7, #8
  67 000e 3A68     		ldr	r2, [r7]
  68 0010 7968     		ldr	r1, [r7, #4]
  69 0012 1846     		mov	r0, r3
  70 0014 FFF7FEFF 		bl	vsprintf
  71 0018 0346     		mov	r3, r0
  72 001a 002B     		cmp	r3, #0
  73 001c 0DDD     		ble	.L3
 141:Src/freertos.c ****        HAL_UART_Transmit(&huart1, (uint8_t*)string, strlen(string), 0xffffff); // send message via 
  74              		.loc 1 141 0
  75 001e 07F10803 		add	r3, r7, #8
  76 0022 1846     		mov	r0, r3
  77 0024 FFF7FEFF 		bl	strlen
  78 0028 0346     		mov	r3, r0
  79 002a 9AB2     		uxth	r2, r3
  80 002c 07F10801 		add	r1, r7, #8
  81 0030 6FF07F43 		mvn	r3, #-16777216
  82 0034 0348     		ldr	r0, .L4
  83 0036 FFF7FEFF 		bl	HAL_UART_Transmit
  84              	.L3:
 142:Src/freertos.c **** 
 143:Src/freertos.c **** }
  85              		.loc 1 143 0
  86 003a 00BF     		nop
ARM GAS  /tmp/ccSNrujI.s 			page 5


  87 003c A037     		adds	r7, r7, #160
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 8
  90 003e BD46     		mov	sp, r7
  91              	.LCFI4:
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 0040 80BD     		pop	{r7, pc}
  95              	.L5:
  96 0042 00BF     		.align	2
  97              	.L4:
  98 0044 00000000 		.word	huart1
  99              		.cfi_endproc
 100              	.LFE141:
 102              		.section	.text.mprintf,"ax",%progbits
 103              		.align	1
 104              		.global	mprintf
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	mprintf:
 111              	.LFB142:
 144:Src/freertos.c **** 
 145:Src/freertos.c **** 
 146:Src/freertos.c **** 
 147:Src/freertos.c **** void mprintf(const char *fmt, ...) // custom printf() function
 148:Src/freertos.c **** {
 112              		.loc 1 148 0
 113              		.cfi_startproc
 114              		@ args = 4, pretend = 16, frame = 8
 115              		@ frame_needed = 1, uses_anonymous_args = 1
 116 0000 0FB4     		push	{r0, r1, r2, r3}
 117              	.LCFI5:
 118              		.cfi_def_cfa_offset 16
 119              		.cfi_offset 0, -16
 120              		.cfi_offset 1, -12
 121              		.cfi_offset 2, -8
 122              		.cfi_offset 3, -4
 123 0002 80B5     		push	{r7, lr}
 124              	.LCFI6:
 125              		.cfi_def_cfa_offset 24
 126              		.cfi_offset 7, -24
 127              		.cfi_offset 14, -20
 128 0004 82B0     		sub	sp, sp, #8
 129              	.LCFI7:
 130              		.cfi_def_cfa_offset 32
 131 0006 00AF     		add	r7, sp, #0
 132              	.LCFI8:
 133              		.cfi_def_cfa_register 7
 149:Src/freertos.c **** 
 150:Src/freertos.c ****     xSemaphoreTake(uartMutexHandle, 100);
 134              		.loc 1 150 0
 135 0008 0D4B     		ldr	r3, .L7
 136 000a 1868     		ldr	r0, [r3]
 137 000c 0023     		movs	r3, #0
 138 000e 6422     		movs	r2, #100
ARM GAS  /tmp/ccSNrujI.s 			page 6


 139 0010 0021     		movs	r1, #0
 140 0012 FFF7FEFF 		bl	xQueueGenericReceive
 151:Src/freertos.c ****     va_list argp;
 152:Src/freertos.c ****     va_start(argp, fmt);
 141              		.loc 1 152 0
 142 0016 07F11403 		add	r3, r7, #20
 143 001a 7B60     		str	r3, [r7, #4]
 153:Src/freertos.c ****     vprint(fmt, argp);
 144              		.loc 1 153 0
 145 001c 7968     		ldr	r1, [r7, #4]
 146 001e 3869     		ldr	r0, [r7, #16]
 147 0020 FFF7FEFF 		bl	vprint
 154:Src/freertos.c ****     va_end(argp);
 155:Src/freertos.c ****     xSemaphoreGive(uartMutexHandle);
 148              		.loc 1 155 0
 149 0024 064B     		ldr	r3, .L7
 150 0026 1868     		ldr	r0, [r3]
 151 0028 0023     		movs	r3, #0
 152 002a 0022     		movs	r2, #0
 153 002c 0021     		movs	r1, #0
 154 002e FFF7FEFF 		bl	xQueueGenericSend
 156:Src/freertos.c **** 
 157:Src/freertos.c **** }
 155              		.loc 1 157 0
 156 0032 00BF     		nop
 157 0034 0837     		adds	r7, r7, #8
 158              	.LCFI9:
 159              		.cfi_def_cfa_offset 24
 160 0036 BD46     		mov	sp, r7
 161              	.LCFI10:
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 0038 BDE88040 		pop	{r7, lr}
 165              	.LCFI11:
 166              		.cfi_restore 14
 167              		.cfi_restore 7
 168              		.cfi_def_cfa_offset 16
 169 003c 04B0     		add	sp, sp, #16
 170              	.LCFI12:
 171              		.cfi_restore 3
 172              		.cfi_restore 2
 173              		.cfi_restore 1
 174              		.cfi_restore 0
 175              		.cfi_def_cfa_offset 0
 176 003e 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0040 00000000 		.word	uartMutexHandle
 181              		.cfi_endproc
 182              	.LFE142:
 184              		.section	.rodata
 185              		.align	2
 186              	.LC0:
 187 0000 67707354 		.ascii	"gpsThread\000"
 187      68726561 
 187      6400
ARM GAS  /tmp/ccSNrujI.s 			page 7


 188 000a 0000     		.align	2
 189              	.LC6:
 190 000c 00000000 		.word	.LC0
 191 0010 00000000 		.word	gpsOps
 192 0014 0100     		.short	1
 193 0016 0000     		.space	2
 194 0018 00000000 		.word	0
 195 001c 00040000 		.word	1024
 196              		.align	2
 197              	.LC2:
 198 0020 73656E73 		.ascii	"sensorThread\000"
 198      6F725468 
 198      72656164 
 198      00
 199 002d 000000   		.align	2
 200              	.LC7:
 201 0030 20000000 		.word	.LC2
 202 0034 00000000 		.word	sensorOps
 203 0038 FFFF     		.short	-1
 204 003a 0000     		.space	2
 205 003c 00000000 		.word	0
 206 0040 00020000 		.word	512
 207              		.align	2
 208              	.LC4:
 209 0044 73706943 		.ascii	"spiComThread\000"
 209      6F6D5468 
 209      72656164 
 209      00
 210 0051 000000   		.align	2
 211              	.LC8:
 212 0054 44000000 		.word	.LC4
 213 0058 00000000 		.word	spiComOps
 214 005c 0000     		.short	0
 215 005e 0000     		.space	2
 216 0060 00000000 		.word	0
 217 0064 00020000 		.word	512
 218              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 219              		.align	1
 220              		.global	MX_FREERTOS_Init
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	MX_FREERTOS_Init:
 227              	.LFB143:
 158:Src/freertos.c **** 
 159:Src/freertos.c **** 
 160:Src/freertos.c **** 
 161:Src/freertos.c **** void MX_FREERTOS_Init(void)
 162:Src/freertos.c **** {
 228              		.loc 1 162 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 80
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 B0B5     		push	{r4, r5, r7, lr}
 233              	.LCFI13:
 234              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccSNrujI.s 			page 8


 235              		.cfi_offset 4, -16
 236              		.cfi_offset 5, -12
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 94B0     		sub	sp, sp, #80
 240              	.LCFI14:
 241              		.cfi_def_cfa_offset 96
 242 0004 00AF     		add	r7, sp, #0
 243              	.LCFI15:
 244              		.cfi_def_cfa_register 7
 163:Src/freertos.c **** 
 164:Src/freertos.c ****   osMutexDef(spiMutex);
 245              		.loc 1 164 0
 246 0006 0023     		movs	r3, #0
 247 0008 FB64     		str	r3, [r7, #76]
 165:Src/freertos.c ****   spiMutexHandle = osMutexCreate(osMutex(spiMutex));
 248              		.loc 1 165 0
 249 000a 07F14C03 		add	r3, r7, #76
 250 000e 1846     		mov	r0, r3
 251 0010 FFF7FEFF 		bl	osMutexCreate
 252 0014 0246     		mov	r2, r0
 253 0016 304B     		ldr	r3, .L10
 254 0018 1A60     		str	r2, [r3]
 166:Src/freertos.c **** 
 167:Src/freertos.c ****   osMutexDef(uartMutex);
 255              		.loc 1 167 0
 256 001a 0023     		movs	r3, #0
 257 001c BB64     		str	r3, [r7, #72]
 168:Src/freertos.c ****   uartMutexHandle = osMutexCreate(osMutex(uartMutex));
 258              		.loc 1 168 0
 259 001e 07F14803 		add	r3, r7, #72
 260 0022 1846     		mov	r0, r3
 261 0024 FFF7FEFF 		bl	osMutexCreate
 262 0028 0246     		mov	r2, r0
 263 002a 2C4B     		ldr	r3, .L10+4
 264 002c 1A60     		str	r2, [r3]
 169:Src/freertos.c **** 
 170:Src/freertos.c ****   osMutexDef(memoryMutex);
 265              		.loc 1 170 0
 266 002e 0023     		movs	r3, #0
 267 0030 7B64     		str	r3, [r7, #68]
 171:Src/freertos.c ****   memoryMutexHandle = osMutexCreate(osMutex(memoryMutex));
 268              		.loc 1 171 0
 269 0032 07F14403 		add	r3, r7, #68
 270 0036 1846     		mov	r0, r3
 271 0038 FFF7FEFF 		bl	osMutexCreate
 272 003c 0246     		mov	r2, r0
 273 003e 284B     		ldr	r3, .L10+8
 274 0040 1A60     		str	r2, [r3]
 172:Src/freertos.c **** 
 173:Src/freertos.c ****   osSemaphoreDef(uartSemaphore);
 275              		.loc 1 173 0
 276 0042 0023     		movs	r3, #0
 277 0044 3B64     		str	r3, [r7, #64]
 174:Src/freertos.c ****   uartSemaphoreHandle = osSemaphoreCreate(osSemaphore(uartSemaphore), 1);
 278              		.loc 1 174 0
 279 0046 07F14003 		add	r3, r7, #64
ARM GAS  /tmp/ccSNrujI.s 			page 9


 280 004a 0121     		movs	r1, #1
 281 004c 1846     		mov	r0, r3
 282 004e FFF7FEFF 		bl	osSemaphoreCreate
 283 0052 0246     		mov	r2, r0
 284 0054 234B     		ldr	r3, .L10+12
 285 0056 1A60     		str	r2, [r3]
 175:Src/freertos.c **** 
 176:Src/freertos.c ****   /* definition and creation of spiSemaphore */
 177:Src/freertos.c ****   osSemaphoreDef(spiSemaphore);
 286              		.loc 1 177 0
 287 0058 0023     		movs	r3, #0
 288 005a FB63     		str	r3, [r7, #60]
 178:Src/freertos.c ****   spiSemaphoreHandle = osSemaphoreCreate(osSemaphore(spiSemaphore), 1);
 289              		.loc 1 178 0
 290 005c 07F13C03 		add	r3, r7, #60
 291 0060 0121     		movs	r1, #1
 292 0062 1846     		mov	r0, r3
 293 0064 FFF7FEFF 		bl	osSemaphoreCreate
 294 0068 0246     		mov	r2, r0
 295 006a 1F4B     		ldr	r3, .L10+16
 296 006c 1A60     		str	r2, [r3]
 179:Src/freertos.c **** 
 180:Src/freertos.c ****   /* definition and creation of gpsThread */
 181:Src/freertos.c ****   osThreadDef(gpsThread, gpsOps, osPriorityAboveNormal, 0, 1024);
 297              		.loc 1 181 0
 298 006e 1F4B     		ldr	r3, .L10+20
 299 0070 07F12804 		add	r4, r7, #40
 300 0074 1D46     		mov	r5, r3
 301 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 302 0078 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 303 007a 2B68     		ldr	r3, [r5]
 304 007c 2360     		str	r3, [r4]
 182:Src/freertos.c ****   gpsThreadHandle = osThreadCreate(osThread(gpsThread), NULL);
 305              		.loc 1 182 0
 306 007e 07F12803 		add	r3, r7, #40
 307 0082 0021     		movs	r1, #0
 308 0084 1846     		mov	r0, r3
 309 0086 FFF7FEFF 		bl	osThreadCreate
 310 008a 0246     		mov	r2, r0
 311 008c 184B     		ldr	r3, .L10+24
 312 008e 1A60     		str	r2, [r3]
 183:Src/freertos.c **** 
 184:Src/freertos.c ****   /* definition and creation of sensorThread */
 185:Src/freertos.c ****   osThreadDef(sensorThread, sensorOps, osPriorityBelowNormal, 0, 512);
 313              		.loc 1 185 0
 314 0090 184B     		ldr	r3, .L10+28
 315 0092 07F11404 		add	r4, r7, #20
 316 0096 1D46     		mov	r5, r3
 317 0098 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 318 009a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 319 009c 2B68     		ldr	r3, [r5]
 320 009e 2360     		str	r3, [r4]
 186:Src/freertos.c ****   sensorThreadHandle = osThreadCreate(osThread(sensorThread), NULL);
 321              		.loc 1 186 0
 322 00a0 07F11403 		add	r3, r7, #20
 323 00a4 0021     		movs	r1, #0
 324 00a6 1846     		mov	r0, r3
ARM GAS  /tmp/ccSNrujI.s 			page 10


 325 00a8 FFF7FEFF 		bl	osThreadCreate
 326 00ac 0246     		mov	r2, r0
 327 00ae 124B     		ldr	r3, .L10+32
 328 00b0 1A60     		str	r2, [r3]
 187:Src/freertos.c **** 
 188:Src/freertos.c ****   /* definition and creation of spiComThread */
 189:Src/freertos.c ****   osThreadDef(spiComThread, spiComOps, osPriorityNormal, 0, 512);
 329              		.loc 1 189 0
 330 00b2 124B     		ldr	r3, .L10+36
 331 00b4 3C46     		mov	r4, r7
 332 00b6 1D46     		mov	r5, r3
 333 00b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 334 00ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 335 00bc 2B68     		ldr	r3, [r5]
 336 00be 2360     		str	r3, [r4]
 190:Src/freertos.c ****   spiComThreadHandle = osThreadCreate(osThread(spiComThread), NULL);
 337              		.loc 1 190 0
 338 00c0 3B46     		mov	r3, r7
 339 00c2 0021     		movs	r1, #0
 340 00c4 1846     		mov	r0, r3
 341 00c6 FFF7FEFF 		bl	osThreadCreate
 342 00ca 0246     		mov	r2, r0
 343 00cc 0C4B     		ldr	r3, .L10+40
 344 00ce 1A60     		str	r2, [r3]
 191:Src/freertos.c **** 
 192:Src/freertos.c **** //  osThreadDef(loggingThread, loggingOps, osPriorityNormal, 0, 512);
 193:Src/freertos.c **** //  logThreadHandle = osThreadCreate(osThread(loggingThread), NULL);
 194:Src/freertos.c **** 
 195:Src/freertos.c **** }
 345              		.loc 1 195 0
 346 00d0 00BF     		nop
 347 00d2 5037     		adds	r7, r7, #80
 348              	.LCFI16:
 349              		.cfi_def_cfa_offset 16
 350 00d4 BD46     		mov	sp, r7
 351              	.LCFI17:
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 00d6 B0BD     		pop	{r4, r5, r7, pc}
 355              	.L11:
 356              		.align	2
 357              	.L10:
 358 00d8 00000000 		.word	spiMutexHandle
 359 00dc 00000000 		.word	uartMutexHandle
 360 00e0 00000000 		.word	memoryMutexHandle
 361 00e4 00000000 		.word	uartSemaphoreHandle
 362 00e8 00000000 		.word	spiSemaphoreHandle
 363 00ec 0C000000 		.word	.LC6
 364 00f0 00000000 		.word	gpsThreadHandle
 365 00f4 30000000 		.word	.LC7
 366 00f8 00000000 		.word	sensorThreadHandle
 367 00fc 54000000 		.word	.LC8
 368 0100 00000000 		.word	spiComThreadHandle
 369              		.cfi_endproc
 370              	.LFE143:
 372              		.section	.text.UART4_IRQHandler,"ax",%progbits
 373              		.align	1
ARM GAS  /tmp/ccSNrujI.s 			page 11


 374              		.global	UART4_IRQHandler
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	UART4_IRQHandler:
 381              	.LFB144:
 196:Src/freertos.c **** 
 197:Src/freertos.c **** 
 198:Src/freertos.c **** void UART4_IRQHandler(void)
 199:Src/freertos.c **** {
 382              		.loc 1 199 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386 0000 80B5     		push	{r7, lr}
 387              	.LCFI18:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              	.LCFI19:
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              	.LCFI20:
 396              		.cfi_def_cfa_register 7
 200:Src/freertos.c **** 
 201:Src/freertos.c ****     long lSwitchRequired;
 202:Src/freertos.c **** 
 203:Src/freertos.c ****     HAL_UART_IRQHandler(&huart4);
 397              		.loc 1 203 0
 398 0006 0D48     		ldr	r0, .L15
 399 0008 FFF7FEFF 		bl	HAL_UART_IRQHandler
 204:Src/freertos.c **** 
 205:Src/freertos.c ****     xSemaphoreGiveFromISR(uartSemaphoreHandle, NULL);
 400              		.loc 1 205 0
 401 000c 0C4B     		ldr	r3, .L15+4
 402 000e 1B68     		ldr	r3, [r3]
 403 0010 0021     		movs	r1, #0
 404 0012 1846     		mov	r0, r3
 405 0014 FFF7FEFF 		bl	xQueueGiveFromISR
 206:Src/freertos.c **** 
 207:Src/freertos.c ****     if(lSwitchRequired)
 406              		.loc 1 207 0
 407 0018 7B68     		ldr	r3, [r7, #4]
 408 001a 002B     		cmp	r3, #0
 409 001c 0AD0     		beq	.L14
 208:Src/freertos.c ****         portYIELD_FROM_ISR(lSwitchRequired);
 410              		.loc 1 208 0
 411 001e 7B68     		ldr	r3, [r7, #4]
 412 0020 002B     		cmp	r3, #0
 413 0022 07D0     		beq	.L14
 414              		.loc 1 208 0 is_stmt 0 discriminator 1
 415 0024 074B     		ldr	r3, .L15+8
 416 0026 4FF08052 		mov	r2, #268435456
 417 002a 1A60     		str	r2, [r3]
 418              		.syntax unified
ARM GAS  /tmp/ccSNrujI.s 			page 12


 419              	@ 208 "Src/freertos.c" 1
 420 002c BFF34F8F 		dsb
 421              	@ 0 "" 2
 422              	@ 208 "Src/freertos.c" 1
 423 0030 BFF36F8F 		isb
 424              	@ 0 "" 2
 425              		.thumb
 426              		.syntax unified
 427              	.L14:
 209:Src/freertos.c **** 
 210:Src/freertos.c **** 
 211:Src/freertos.c **** }
 428              		.loc 1 211 0 is_stmt 1
 429 0034 00BF     		nop
 430 0036 0837     		adds	r7, r7, #8
 431              	.LCFI21:
 432              		.cfi_def_cfa_offset 8
 433 0038 BD46     		mov	sp, r7
 434              	.LCFI22:
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 003a 80BD     		pop	{r7, pc}
 438              	.L16:
 439              		.align	2
 440              	.L15:
 441 003c 00000000 		.word	huart4
 442 0040 00000000 		.word	uartSemaphoreHandle
 443 0044 04ED00E0 		.word	-536810236
 444              		.cfi_endproc
 445              	.LFE144:
 447              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 448              		.align	1
 449              		.global	SPI1_IRQHandler
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	SPI1_IRQHandler:
 456              	.LFB145:
 212:Src/freertos.c **** 
 213:Src/freertos.c **** void SPI1_IRQHandler(void)
 214:Src/freertos.c **** {
 457              		.loc 1 214 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              	.LCFI23:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 00AF     		add	r7, sp, #0
 467              	.LCFI24:
 468              		.cfi_def_cfa_register 7
 215:Src/freertos.c **** 
 216:Src/freertos.c **** 
 217:Src/freertos.c ****   long lSwitchRequired;
ARM GAS  /tmp/ccSNrujI.s 			page 13


 218:Src/freertos.c **** 
 219:Src/freertos.c **** 
 220:Src/freertos.c ****   HAL_SPI_IRQHandler(&hspi1);
 469              		.loc 1 220 0
 470 0004 0548     		ldr	r0, .L18
 471 0006 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 221:Src/freertos.c **** 
 222:Src/freertos.c ****   xSemaphoreGiveFromISR(spiSemaphoreHandle, NULL);
 472              		.loc 1 222 0
 473 000a 054B     		ldr	r3, .L18+4
 474 000c 1B68     		ldr	r3, [r3]
 475 000e 0021     		movs	r1, #0
 476 0010 1846     		mov	r0, r3
 477 0012 FFF7FEFF 		bl	xQueueGiveFromISR
 223:Src/freertos.c **** 
 224:Src/freertos.c **** //  if(lSwitchRequired)
 225:Src/freertos.c **** //      portYIELD_FROM_ISR(lSwitchRequired);
 226:Src/freertos.c **** 
 227:Src/freertos.c **** //  HAL_SPI_TransmitReceive_IT(&hspi1, (uint8_t *)&spi_tx_data, (uint8_t *)rx, sizeof(spi_tx_data))
 228:Src/freertos.c **** 
 229:Src/freertos.c **** }
 478              		.loc 1 229 0
 479 0016 00BF     		nop
 480 0018 80BD     		pop	{r7, pc}
 481              	.L19:
 482 001a 00BF     		.align	2
 483              	.L18:
 484 001c 00000000 		.word	hspi1
 485 0020 00000000 		.word	spiSemaphoreHandle
 486              		.cfi_endproc
 487              	.LFE145:
 489              		.section	.rodata
 490              		.align	2
 491              	.LC9:
 492 0068 6C6F6769 		.ascii	"logingOps\015\012\000"
 492      6E674F70 
 492      730D0A00 
 493              		.section	.text.loggingOps,"ax",%progbits
 494              		.align	1
 495              		.global	loggingOps
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	loggingOps:
 502              	.LFB146:
 230:Src/freertos.c **** 
 231:Src/freertos.c **** void loggingOps(void const * argument)
 232:Src/freertos.c **** {
 503              		.loc 1 232 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507 0000 80B5     		push	{r7, lr}
 508              	.LCFI25:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
ARM GAS  /tmp/ccSNrujI.s 			page 14


 511              		.cfi_offset 14, -4
 512 0002 82B0     		sub	sp, sp, #8
 513              	.LCFI26:
 514              		.cfi_def_cfa_offset 16
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI27:
 517              		.cfi_def_cfa_register 7
 518 0006 7860     		str	r0, [r7, #4]
 233:Src/freertos.c **** 
 234:Src/freertos.c ****     mprintf("logingOps\r\n");
 519              		.loc 1 234 0
 520 0008 0548     		ldr	r0, .L22
 521 000a FFF7FEFF 		bl	mprintf
 522              	.L21:
 235:Src/freertos.c **** 
 236:Src/freertos.c ****     while(1)
 237:Src/freertos.c ****     {
 238:Src/freertos.c ****         mprintf("logingOps\r\n");
 523              		.loc 1 238 0 discriminator 1
 524 000e 0448     		ldr	r0, .L22
 525 0010 FFF7FEFF 		bl	mprintf
 239:Src/freertos.c ****         osDelay(1000);
 526              		.loc 1 239 0 discriminator 1
 527 0014 4FF47A70 		mov	r0, #1000
 528 0018 FFF7FEFF 		bl	osDelay
 238:Src/freertos.c ****         osDelay(1000);
 529              		.loc 1 238 0 discriminator 1
 530 001c F7E7     		b	.L21
 531              	.L23:
 532 001e 00BF     		.align	2
 533              	.L22:
 534 0020 68000000 		.word	.LC9
 535              		.cfi_endproc
 536              	.LFE146:
 538              		.section	.rodata
 539              		.align	2
 540              	.LC10:
 541 0074 6770734F 		.ascii	"gpsOps\015\012\000"
 541      70730D0A 
 541      00
 542 007d 000000   		.align	2
 543              	.LC11:
 544 0080 6770734F 		.ascii	"gpsOps Crash \015\012\000"
 544      70732043 
 544      72617368 
 544      200D0A00 
 545              		.section	.text.gpsOps,"ax",%progbits
 546              		.align	1
 547              		.global	gpsOps
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv4-sp-d16
 553              	gpsOps:
 554              	.LFB147:
 240:Src/freertos.c ****     }
 241:Src/freertos.c **** }
ARM GAS  /tmp/ccSNrujI.s 			page 15


 242:Src/freertos.c **** 
 243:Src/freertos.c **** 
 244:Src/freertos.c **** 
 245:Src/freertos.c **** 
 246:Src/freertos.c **** void gpsOps(void const * argument)
 247:Src/freertos.c **** {
 555              		.loc 1 247 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              	.LCFI28:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 84B0     		sub	sp, sp, #16
 565              	.LCFI29:
 566              		.cfi_def_cfa_offset 24
 567 0004 00AF     		add	r7, sp, #0
 568              	.LCFI30:
 569              		.cfi_def_cfa_register 7
 570 0006 7860     		str	r0, [r7, #4]
 248:Src/freertos.c **** 
 249:Src/freertos.c ****     mprintf("gpsOps\r\n");
 571              		.loc 1 249 0
 572 0008 2648     		ldr	r0, .L31
 573 000a FFF7FEFF 		bl	mprintf
 250:Src/freertos.c **** 
 251:Src/freertos.c ****     unsigned char rx_data;
 252:Src/freertos.c **** 
 253:Src/freertos.c ****     gpsInit();
 574              		.loc 1 253 0
 575 000e FFF7FEFF 		bl	gpsInit
 576              	.L30:
 254:Src/freertos.c **** 
 255:Src/freertos.c ****   while(1)
 256:Src/freertos.c ****   {
 257:Src/freertos.c **** 
 258:Src/freertos.c ****       if( xSemaphoreTake(uartSemaphoreHandle, 1000) == pdPASS)
 577              		.loc 1 258 0
 578 0012 254B     		ldr	r3, .L31+4
 579 0014 1868     		ldr	r0, [r3]
 580 0016 0023     		movs	r3, #0
 581 0018 4FF47A72 		mov	r2, #1000
 582 001c 0021     		movs	r1, #0
 583 001e FFF7FEFF 		bl	xQueueGenericReceive
 584 0022 0346     		mov	r3, r0
 585 0024 012B     		cmp	r3, #1
 586 0026 39D1     		bne	.L25
 259:Src/freertos.c ****       {
 260:Src/freertos.c **** 
 261:Src/freertos.c **** 
 262:Src/freertos.c ****         if(checkGpsData() == GPS_READY)
 587              		.loc 1 262 0
 588 0028 FFF7FEFF 		bl	checkGpsData
 589 002c 0346     		mov	r3, r0
 590 002e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccSNrujI.s 			page 16


 591 0030 2AD1     		bne	.L26
 263:Src/freertos.c ****         {
 264:Src/freertos.c **** 
 265:Src/freertos.c ****                xSemaphoreTake(spiMutexHandle, portMAX_DELAY);
 592              		.loc 1 265 0
 593 0032 1E4B     		ldr	r3, .L31+8
 594 0034 1868     		ldr	r0, [r3]
 595 0036 0023     		movs	r3, #0
 596 0038 4FF0FF32 		mov	r2, #-1
 597 003c 0021     		movs	r1, #0
 598 003e FFF7FEFF 		bl	xQueueGenericReceive
 599              	.LBB2:
 266:Src/freertos.c **** 
 267:Src/freertos.c **** 
 268:Src/freertos.c ****                for(int i=0; i<100; i++)
 600              		.loc 1 268 0
 601 0042 0023     		movs	r3, #0
 602 0044 FB60     		str	r3, [r7, #12]
 603 0046 0EE0     		b	.L27
 604              	.L28:
 269:Src/freertos.c ****                    spi_tx_data.gps_data[i] = gpsData.gprmc_body[i];
 605              		.loc 1 269 0 discriminator 3
 606 0048 194A     		ldr	r2, .L31+12
 607 004a FB68     		ldr	r3, [r7, #12]
 608 004c 1344     		add	r3, r3, r2
 609 004e 03F59C73 		add	r3, r3, #312
 610 0052 1B78     		ldrb	r3, [r3]
 611 0054 D9B2     		uxtb	r1, r3
 612 0056 174A     		ldr	r2, .L31+16
 613 0058 FB68     		ldr	r3, [r7, #12]
 614 005a 1344     		add	r3, r3, r2
 615 005c 0A46     		mov	r2, r1
 616 005e 1A70     		strb	r2, [r3]
 268:Src/freertos.c ****                    spi_tx_data.gps_data[i] = gpsData.gprmc_body[i];
 617              		.loc 1 268 0 discriminator 3
 618 0060 FB68     		ldr	r3, [r7, #12]
 619 0062 0133     		adds	r3, r3, #1
 620 0064 FB60     		str	r3, [r7, #12]
 621              	.L27:
 268:Src/freertos.c ****                    spi_tx_data.gps_data[i] = gpsData.gprmc_body[i];
 622              		.loc 1 268 0 is_stmt 0 discriminator 1
 623 0066 FB68     		ldr	r3, [r7, #12]
 624 0068 632B     		cmp	r3, #99
 625 006a EDDD     		ble	.L28
 626              	.LBE2:
 270:Src/freertos.c **** 
 271:Src/freertos.c **** 
 272:Src/freertos.c **** 
 273:Src/freertos.c ****                xSemaphoreGive(spiMutexHandle);
 627              		.loc 1 273 0 is_stmt 1
 628 006c 0F4B     		ldr	r3, .L31+8
 629 006e 1868     		ldr	r0, [r3]
 630 0070 0023     		movs	r3, #0
 631 0072 0022     		movs	r2, #0
 632 0074 0021     		movs	r1, #0
 633 0076 FFF7FEFF 		bl	xQueueGenericSend
 274:Src/freertos.c **** 
ARM GAS  /tmp/ccSNrujI.s 			page 17


 275:Src/freertos.c **** 
 276:Src/freertos.c **** 
 277:Src/freertos.c ****            HAL_GPIO_TogglePin(LED3_GPIO_Port, LED3_Pin);
 634              		.loc 1 277 0
 635 007a 4FF48051 		mov	r1, #4096
 636 007e 0E48     		ldr	r0, .L31+20
 637 0080 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 278:Src/freertos.c **** 
 279:Src/freertos.c ****            enableGps();
 638              		.loc 1 279 0
 639 0084 FFF7FEFF 		bl	enableGps
 640              	.L26:
 280:Src/freertos.c **** 
 281:Src/freertos.c ****         }
 282:Src/freertos.c **** 
 283:Src/freertos.c **** 
 284:Src/freertos.c ****           receiveGpsData();
 641              		.loc 1 284 0
 642 0088 FFF7FEFF 		bl	receiveGpsData
 285:Src/freertos.c **** 
 286:Src/freertos.c ****           HAL_UART_Receive_IT(&huart4, (uint8_t *)&rx_data, 1);
 643              		.loc 1 286 0
 644 008c 07F10B03 		add	r3, r7, #11
 645 0090 0122     		movs	r2, #1
 646 0092 1946     		mov	r1, r3
 647 0094 0948     		ldr	r0, .L31+24
 648 0096 FFF7FEFF 		bl	HAL_UART_Receive_IT
 649 009a BAE7     		b	.L30
 650              	.L25:
 287:Src/freertos.c **** 
 288:Src/freertos.c **** 
 289:Src/freertos.c ****       }
 290:Src/freertos.c ****       else
 291:Src/freertos.c ****       {
 292:Src/freertos.c **** 
 293:Src/freertos.c ****           mprintf("gpsOps Crash \r\n");
 651              		.loc 1 293 0
 652 009c 0848     		ldr	r0, .L31+28
 653 009e FFF7FEFF 		bl	mprintf
 258:Src/freertos.c ****       {
 654              		.loc 1 258 0
 655 00a2 B6E7     		b	.L30
 656              	.L32:
 657              		.align	2
 658              	.L31:
 659 00a4 74000000 		.word	.LC10
 660 00a8 00000000 		.word	uartSemaphoreHandle
 661 00ac 00000000 		.word	spiMutexHandle
 662 00b0 00000000 		.word	gpsData
 663 00b4 00000000 		.word	spi_tx_data
 664 00b8 00040240 		.word	1073873920
 665 00bc 00000000 		.word	huart4
 666 00c0 80000000 		.word	.LC11
 667              		.cfi_endproc
 668              	.LFE147:
 670              		.section	.rodata
 671              		.align	2
ARM GAS  /tmp/ccSNrujI.s 			page 18


 672              	.LC12:
 673 0090 73656E73 		.ascii	"sensorOps\015\012\000"
 673      6F724F70 
 673      730D0A00 
 674              		.section	.text.sensorOps,"ax",%progbits
 675              		.align	1
 676              		.global	sensorOps
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu fpv4-sp-d16
 682              	sensorOps:
 683              	.LFB148:
 294:Src/freertos.c **** 
 295:Src/freertos.c ****       }
 296:Src/freertos.c **** 
 297:Src/freertos.c ****   }
 298:Src/freertos.c **** 
 299:Src/freertos.c **** }
 300:Src/freertos.c **** 
 301:Src/freertos.c **** /* sensorOps function */
 302:Src/freertos.c **** void sensorOps(void const * argument)
 303:Src/freertos.c **** {
 684              		.loc 1 303 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 16
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688 0000 80B5     		push	{r7, lr}
 689              	.LCFI31:
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 84B0     		sub	sp, sp, #16
 694              	.LCFI32:
 695              		.cfi_def_cfa_offset 24
 696 0004 00AF     		add	r7, sp, #0
 697              	.LCFI33:
 698              		.cfi_def_cfa_register 7
 699 0006 7860     		str	r0, [r7, #4]
 304:Src/freertos.c **** 
 305:Src/freertos.c **** 
 306:Src/freertos.c ****     int pwm=45;
 700              		.loc 1 306 0
 701 0008 2D23     		movs	r3, #45
 702 000a FB60     		str	r3, [r7, #12]
 307:Src/freertos.c **** 
 308:Src/freertos.c ****   mprintf("sensorOps\r\n");
 703              		.loc 1 308 0
 704 000c 1B48     		ldr	r0, .L35
 705 000e FFF7FEFF 		bl	mprintf
 309:Src/freertos.c **** 
 310:Src/freertos.c ****   sensorInit();
 706              		.loc 1 310 0
 707 0012 FFF7FEFF 		bl	sensorInit
 311:Src/freertos.c **** 
 312:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 708              		.loc 1 312 0
ARM GAS  /tmp/ccSNrujI.s 			page 19


 709 0016 0021     		movs	r1, #0
 710 0018 1948     		ldr	r0, .L35+4
 711 001a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 712              	.L34:
 313:Src/freertos.c **** 
 314:Src/freertos.c ****   int ret;
 315:Src/freertos.c **** 
 316:Src/freertos.c **** //  calibrateCompass();
 317:Src/freertos.c **** 
 318:Src/freertos.c ****   while(1)
 319:Src/freertos.c ****   {
 320:Src/freertos.c ****       readAllSensors();
 713              		.loc 1 320 0 discriminator 1
 714 001e FFF7FEFF 		bl	readAllSensors
 321:Src/freertos.c **** 
 322:Src/freertos.c **** 
 323:Src/freertos.c ****       xSemaphoreTake(spiMutexHandle, portMAX_DELAY);
 715              		.loc 1 323 0 discriminator 1
 716 0022 184B     		ldr	r3, .L35+8
 717 0024 1868     		ldr	r0, [r3]
 718 0026 0023     		movs	r3, #0
 719 0028 4FF0FF32 		mov	r2, #-1
 720 002c 0021     		movs	r1, #0
 721 002e FFF7FEFF 		bl	xQueueGenericReceive
 324:Src/freertos.c **** 
 325:Src/freertos.c ****       spi_tx_data.temperature = sensorValues.temperature;
 722              		.loc 1 325 0 discriminator 1
 723 0032 154B     		ldr	r3, .L35+12
 724 0034 9B68     		ldr	r3, [r3, #8]
 725 0036 1A46     		mov	r2, r3
 726 0038 144B     		ldr	r3, .L35+16
 727 003a 5A66     		str	r2, [r3, #100]
 326:Src/freertos.c ****       spi_tx_data.pressure = sensorValues.pressure;
 728              		.loc 1 326 0 discriminator 1
 729 003c 124B     		ldr	r3, .L35+12
 730 003e 1B68     		ldr	r3, [r3]
 731 0040 1A46     		mov	r2, r3
 732 0042 124B     		ldr	r3, .L35+16
 733 0044 DA66     		str	r2, [r3, #108]
 327:Src/freertos.c ****       spi_tx_data.altitude = sensorValues.altitude;
 734              		.loc 1 327 0 discriminator 1
 735 0046 104B     		ldr	r3, .L35+12
 736 0048 5B68     		ldr	r3, [r3, #4]
 737 004a 1A46     		mov	r2, r3
 738 004c 0F4B     		ldr	r3, .L35+16
 739 004e 1A67     		str	r2, [r3, #112]
 328:Src/freertos.c ****       spi_tx_data.wheather_condition = sensorValues.wheather_condition;
 740              		.loc 1 328 0 discriminator 1
 741 0050 0D4B     		ldr	r3, .L35+12
 742 0052 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 743 0054 0D4B     		ldr	r3, .L35+16
 744 0056 83F87420 		strb	r2, [r3, #116]
 329:Src/freertos.c ****       spi_tx_data.compass_degree = sensorValues.compass_degree;
 745              		.loc 1 329 0 discriminator 1
 746 005a 0B4B     		ldr	r3, .L35+12
 747 005c 1B69     		ldr	r3, [r3, #16]
 748 005e 1A46     		mov	r2, r3
ARM GAS  /tmp/ccSNrujI.s 			page 20


 749 0060 0A4B     		ldr	r3, .L35+16
 750 0062 9A66     		str	r2, [r3, #104]
 330:Src/freertos.c **** 
 331:Src/freertos.c ****       spi_tx_data.checksum = 100;
 751              		.loc 1 331 0 discriminator 1
 752 0064 094B     		ldr	r3, .L35+16
 753 0066 6422     		movs	r2, #100
 754 0068 A3F87620 		strh	r2, [r3, #118]	@ movhi
 332:Src/freertos.c **** 
 333:Src/freertos.c ****       xSemaphoreGive(spiMutexHandle);
 755              		.loc 1 333 0 discriminator 1
 756 006c 054B     		ldr	r3, .L35+8
 757 006e 1868     		ldr	r0, [r3]
 758 0070 0023     		movs	r3, #0
 759 0072 0022     		movs	r2, #0
 760 0074 0021     		movs	r1, #0
 761 0076 FFF7FEFF 		bl	xQueueGenericSend
 320:Src/freertos.c **** 
 762              		.loc 1 320 0 discriminator 1
 763 007a D0E7     		b	.L34
 764              	.L36:
 765              		.align	2
 766              	.L35:
 767 007c 90000000 		.word	.LC12
 768 0080 00000000 		.word	htim3
 769 0084 00000000 		.word	spiMutexHandle
 770 0088 00000000 		.word	sensorValues
 771 008c 00000000 		.word	spi_tx_data
 772              		.cfi_endproc
 773              	.LFE148:
 775              		.section	.rodata
 776              		.align	2
 777              	.LC13:
 778 009c 7370694F 		.ascii	"spiOps\015\012\000"
 778      70730D0A 
 778      00
 779              		.section	.text.spiComOps,"ax",%progbits
 780              		.align	1
 781              		.global	spiComOps
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu fpv4-sp-d16
 787              	spiComOps:
 788              	.LFB149:
 334:Src/freertos.c **** 
 335:Src/freertos.c **** 
 336:Src/freertos.c **** //      ret = getSfpTemperature();
 337:Src/freertos.c **** //          mprintf("%d\r\n", ret);
 338:Src/freertos.c **** 
 339:Src/freertos.c **** //          osDelay(1000);
 340:Src/freertos.c **** 
 341:Src/freertos.c **** //      __HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, pwm);
 342:Src/freertos.c **** //      pwm++;
 343:Src/freertos.c **** //      osDelay(100);
 344:Src/freertos.c **** 
 345:Src/freertos.c **** //      if(pwm == 153)
ARM GAS  /tmp/ccSNrujI.s 			page 21


 346:Src/freertos.c **** //          pwm = 45;
 347:Src/freertos.c **** 
 348:Src/freertos.c **** 
 349:Src/freertos.c **** 
 350:Src/freertos.c ****   }
 351:Src/freertos.c **** 
 352:Src/freertos.c **** }
 353:Src/freertos.c **** 
 354:Src/freertos.c **** /* spiComOps function */
 355:Src/freertos.c **** void spiComOps(void const * argument)
 356:Src/freertos.c **** {
 789              		.loc 1 356 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 24
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              	.LCFI34:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 86B0     		sub	sp, sp, #24
 799              	.LCFI35:
 800              		.cfi_def_cfa_offset 32
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI36:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 357:Src/freertos.c **** 
 358:Src/freertos.c ****     int count = 0;
 805              		.loc 1 358 0
 806 0008 0023     		movs	r3, #0
 807 000a 7B61     		str	r3, [r7, #20]
 359:Src/freertos.c ****     int speed = 1;
 808              		.loc 1 359 0
 809 000c 0123     		movs	r3, #1
 810 000e 3B61     		str	r3, [r7, #16]
 360:Src/freertos.c **** 
 361:Src/freertos.c ****     HAL_SPI_StateTypeDef status;
 362:Src/freertos.c **** 
 363:Src/freertos.c ****     mprintf("spiOps\r\n");
 811              		.loc 1 363 0
 812 0010 4B48     		ldr	r0, .L51
 813 0012 FFF7FEFF 		bl	mprintf
 364:Src/freertos.c **** 
 365:Src/freertos.c **** 
 366:Src/freertos.c ****     HAL_SPI_TransmitReceive_IT(&hspi1, (uint8_t *)&spi_tx_data, (uint8_t *)&spi_rx_data,  sizeof(sp
 814              		.loc 1 366 0
 815 0016 7823     		movs	r3, #120
 816 0018 4A4A     		ldr	r2, .L51+4
 817 001a 4B49     		ldr	r1, .L51+8
 818 001c 4B48     		ldr	r0, .L51+12
 819 001e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 820              	.L50:
 367:Src/freertos.c **** 
 368:Src/freertos.c **** 
 369:Src/freertos.c ****   while(1)
 370:Src/freertos.c ****   {
ARM GAS  /tmp/ccSNrujI.s 			page 22


 371:Src/freertos.c **** 
 372:Src/freertos.c ****       if( xSemaphoreTake(spiSemaphoreHandle, 1) == pdPASS)
 821              		.loc 1 372 0
 822 0022 4B4B     		ldr	r3, .L51+16
 823 0024 1868     		ldr	r0, [r3]
 824 0026 0023     		movs	r3, #0
 825 0028 0122     		movs	r2, #1
 826 002a 0021     		movs	r1, #0
 827 002c FFF7FEFF 		bl	xQueueGenericReceive
 828 0030 0346     		mov	r3, r0
 829 0032 012B     		cmp	r3, #1
 830 0034 5CD1     		bne	.L38
 373:Src/freertos.c ****       {
 374:Src/freertos.c **** 
 375:Src/freertos.c ****           status = HAL_SPI_GetState(&hspi1);
 831              		.loc 1 375 0
 832 0036 4548     		ldr	r0, .L51+12
 833 0038 FFF7FEFF 		bl	HAL_SPI_GetState
 834 003c 0346     		mov	r3, r0
 835 003e FB73     		strb	r3, [r7, #15]
 376:Src/freertos.c ****           if(status == HAL_SPI_STATE_READY)
 377:Src/freertos.c ****           {
 378:Src/freertos.c **** 
 379:Src/freertos.c **** 
 380:Src/freertos.c **** 
 381:Src/freertos.c **** 
 382:Src/freertos.c ****           }
 383:Src/freertos.c **** 
 384:Src/freertos.c ****          xSemaphoreTake(spiMutexHandle, portMAX_DELAY);
 836              		.loc 1 384 0
 837 0040 444B     		ldr	r3, .L51+20
 838 0042 1868     		ldr	r0, [r3]
 839 0044 0023     		movs	r3, #0
 840 0046 4FF0FF32 		mov	r2, #-1
 841 004a 0021     		movs	r1, #0
 842 004c FFF7FEFF 		bl	xQueueGenericReceive
 385:Src/freertos.c **** 
 386:Src/freertos.c ****           tx_data = spi_tx_data;
 843              		.loc 1 386 0
 844 0050 414A     		ldr	r2, .L51+24
 845 0052 3D4B     		ldr	r3, .L51+8
 846 0054 1046     		mov	r0, r2
 847 0056 1946     		mov	r1, r3
 848 0058 7823     		movs	r3, #120
 849 005a 1A46     		mov	r2, r3
 850 005c FFF7FEFF 		bl	memcpy
 387:Src/freertos.c **** 
 388:Src/freertos.c ****          xSemaphoreGive(spiMutexHandle);
 851              		.loc 1 388 0
 852 0060 3C4B     		ldr	r3, .L51+20
 853 0062 1868     		ldr	r0, [r3]
 854 0064 0023     		movs	r3, #0
 855 0066 0022     		movs	r2, #0
 856 0068 0021     		movs	r1, #0
 857 006a FFF7FEFF 		bl	xQueueGenericSend
 389:Src/freertos.c **** 
 390:Src/freertos.c **** 
ARM GAS  /tmp/ccSNrujI.s 			page 23


 391:Src/freertos.c **** 
 392:Src/freertos.c **** 
 393:Src/freertos.c ****         HAL_SPI_TransmitReceive_IT(&hspi1, (uint8_t *)&tx_data, (uint8_t *)&spi_rx_data,  sizeof(sp
 858              		.loc 1 393 0
 859 006e 7823     		movs	r3, #120
 860 0070 344A     		ldr	r2, .L51+4
 861 0072 3949     		ldr	r1, .L51+24
 862 0074 3548     		ldr	r0, .L51+12
 863 0076 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 394:Src/freertos.c **** 
 395:Src/freertos.c **** 
 396:Src/freertos.c ****         if(spi_rx_data.step_motor1_direction == FORWARD)
 864              		.loc 1 396 0
 865 007a 324B     		ldr	r3, .L51+4
 866 007c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 867 0080 012B     		cmp	r3, #1
 868 0082 07D1     		bne	.L39
 397:Src/freertos.c ****         {
 398:Src/freertos.c ****             motor1.direction = FORWARD;
 869              		.loc 1 398 0
 870 0084 354B     		ldr	r3, .L51+28
 871 0086 0122     		movs	r2, #1
 872 0088 1A60     		str	r2, [r3]
 399:Src/freertos.c ****             speed = spi_rx_data.step_motor1_speed;
 873              		.loc 1 399 0
 874 008a 2E4B     		ldr	r3, .L51+4
 875 008c 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 876 0090 3B61     		str	r3, [r7, #16]
 877 0092 0FE0     		b	.L40
 878              	.L39:
 400:Src/freertos.c ****         }
 401:Src/freertos.c ****         else if(spi_rx_data.step_motor1_direction == BACKWARD)
 879              		.loc 1 401 0
 880 0094 2B4B     		ldr	r3, .L51+4
 881 0096 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 882 009a 022B     		cmp	r3, #2
 883 009c 07D1     		bne	.L41
 402:Src/freertos.c ****         {
 403:Src/freertos.c ****             motor1.direction = BACKWARD;
 884              		.loc 1 403 0
 885 009e 2F4B     		ldr	r3, .L51+28
 886 00a0 0222     		movs	r2, #2
 887 00a2 1A60     		str	r2, [r3]
 404:Src/freertos.c ****             speed = spi_rx_data.step_motor1_speed;
 888              		.loc 1 404 0
 889 00a4 274B     		ldr	r3, .L51+4
 890 00a6 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 891 00aa 3B61     		str	r3, [r7, #16]
 892 00ac 02E0     		b	.L40
 893              	.L41:
 405:Src/freertos.c ****         }
 406:Src/freertos.c ****         else
 407:Src/freertos.c ****         {
 408:Src/freertos.c ****             motor1.direction = STOP;
 894              		.loc 1 408 0
 895 00ae 2B4B     		ldr	r3, .L51+28
 896 00b0 0022     		movs	r2, #0
ARM GAS  /tmp/ccSNrujI.s 			page 24


 897 00b2 1A60     		str	r2, [r3]
 898              	.L40:
 409:Src/freertos.c ****         }
 410:Src/freertos.c **** 
 411:Src/freertos.c ****         if(spi_rx_data.step_motor2_direction == FORWARD)
 899              		.loc 1 411 0
 900 00b4 234B     		ldr	r3, .L51+4
 901 00b6 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 902 00ba 012B     		cmp	r3, #1
 903 00bc 07D1     		bne	.L42
 412:Src/freertos.c ****         {
 413:Src/freertos.c ****             motor2.direction = FORWARD;
 904              		.loc 1 413 0
 905 00be 284B     		ldr	r3, .L51+32
 906 00c0 0122     		movs	r2, #1
 907 00c2 1A60     		str	r2, [r3]
 414:Src/freertos.c ****             speed = spi_rx_data.step_motor2_speed;
 908              		.loc 1 414 0
 909 00c4 1F4B     		ldr	r3, .L51+4
 910 00c6 93F84330 		ldrb	r3, [r3, #67]	@ zero_extendqisi2
 911 00ca 3B61     		str	r3, [r7, #16]
 912 00cc A9E7     		b	.L50
 913              	.L42:
 415:Src/freertos.c ****         }
 416:Src/freertos.c ****         else if(spi_rx_data.step_motor2_direction == BACKWARD)
 914              		.loc 1 416 0
 915 00ce 1D4B     		ldr	r3, .L51+4
 916 00d0 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 917 00d4 022B     		cmp	r3, #2
 918 00d6 07D1     		bne	.L44
 417:Src/freertos.c ****         {
 418:Src/freertos.c ****             motor2.direction = BACKWARD;
 919              		.loc 1 418 0
 920 00d8 214B     		ldr	r3, .L51+32
 921 00da 0222     		movs	r2, #2
 922 00dc 1A60     		str	r2, [r3]
 419:Src/freertos.c ****             speed = spi_rx_data.step_motor2_speed;
 923              		.loc 1 419 0
 924 00de 194B     		ldr	r3, .L51+4
 925 00e0 93F84330 		ldrb	r3, [r3, #67]	@ zero_extendqisi2
 926 00e4 3B61     		str	r3, [r7, #16]
 927 00e6 9CE7     		b	.L50
 928              	.L44:
 420:Src/freertos.c ****         }
 421:Src/freertos.c ****         else
 422:Src/freertos.c ****         {
 423:Src/freertos.c ****             motor2.direction = STOP;
 929              		.loc 1 423 0
 930 00e8 1D4B     		ldr	r3, .L51+32
 931 00ea 0022     		movs	r2, #0
 932 00ec 1A60     		str	r2, [r3]
 933 00ee 98E7     		b	.L50
 934              	.L38:
 424:Src/freertos.c ****         }
 425:Src/freertos.c **** 
 426:Src/freertos.c **** 
 427:Src/freertos.c **** 
ARM GAS  /tmp/ccSNrujI.s 			page 25


 428:Src/freertos.c ****       }
 429:Src/freertos.c ****       else
 430:Src/freertos.c ****       {
 431:Src/freertos.c ****           count ++;
 935              		.loc 1 431 0
 936 00f0 7B69     		ldr	r3, [r7, #20]
 937 00f2 0133     		adds	r3, r3, #1
 938 00f4 7B61     		str	r3, [r7, #20]
 432:Src/freertos.c **** 
 433:Src/freertos.c **** 
 434:Src/freertos.c ****           if(count >= 2 + speed)
 939              		.loc 1 434 0
 940 00f6 3B69     		ldr	r3, [r7, #16]
 941 00f8 9A1C     		adds	r2, r3, #2
 942 00fa 7B69     		ldr	r3, [r7, #20]
 943 00fc 9A42     		cmp	r2, r3
 944 00fe 90DC     		bgt	.L50
 435:Src/freertos.c ****           {
 436:Src/freertos.c **** 
 437:Src/freertos.c **** 
 438:Src/freertos.c ****             if(motor1.direction == FORWARD)
 945              		.loc 1 438 0
 946 0100 164B     		ldr	r3, .L51+28
 947 0102 1B68     		ldr	r3, [r3]
 948 0104 012B     		cmp	r3, #1
 949 0106 02D1     		bne	.L46
 439:Src/freertos.c ****             {
 440:Src/freertos.c ****               motor1Drive(FORWARD);
 950              		.loc 1 440 0
 951 0108 0120     		movs	r0, #1
 952 010a FFF7FEFF 		bl	motor1Drive
 953              	.L46:
 441:Src/freertos.c ****             }
 442:Src/freertos.c **** 
 443:Src/freertos.c ****             if(motor1.direction == BACKWARD)
 954              		.loc 1 443 0
 955 010e 134B     		ldr	r3, .L51+28
 956 0110 1B68     		ldr	r3, [r3]
 957 0112 022B     		cmp	r3, #2
 958 0114 02D1     		bne	.L47
 444:Src/freertos.c ****             {
 445:Src/freertos.c ****               motor1Drive(BACKWARD);
 959              		.loc 1 445 0
 960 0116 0220     		movs	r0, #2
 961 0118 FFF7FEFF 		bl	motor1Drive
 962              	.L47:
 446:Src/freertos.c ****             }
 447:Src/freertos.c **** 
 448:Src/freertos.c ****             if(motor2.direction == FORWARD)
 963              		.loc 1 448 0
 964 011c 104B     		ldr	r3, .L51+32
 965 011e 1B68     		ldr	r3, [r3]
 966 0120 012B     		cmp	r3, #1
 967 0122 02D1     		bne	.L48
 449:Src/freertos.c ****             {
 450:Src/freertos.c ****               motor2Drive(FORWARD);
 968              		.loc 1 450 0
ARM GAS  /tmp/ccSNrujI.s 			page 26


 969 0124 0120     		movs	r0, #1
 970 0126 FFF7FEFF 		bl	motor2Drive
 971              	.L48:
 451:Src/freertos.c ****             }
 452:Src/freertos.c **** 
 453:Src/freertos.c ****             if(motor2.direction == BACKWARD)
 972              		.loc 1 453 0
 973 012a 0D4B     		ldr	r3, .L51+32
 974 012c 1B68     		ldr	r3, [r3]
 975 012e 022B     		cmp	r3, #2
 976 0130 02D1     		bne	.L49
 454:Src/freertos.c ****             {
 455:Src/freertos.c ****               motor2Drive(BACKWARD);
 977              		.loc 1 455 0
 978 0132 0220     		movs	r0, #2
 979 0134 FFF7FEFF 		bl	motor2Drive
 980              	.L49:
 456:Src/freertos.c ****             }
 457:Src/freertos.c **** 
 458:Src/freertos.c **** 
 459:Src/freertos.c **** //            motor2Drive(FORWARD);
 460:Src/freertos.c **** 
 461:Src/freertos.c ****             count = 0;
 981              		.loc 1 461 0
 982 0138 0023     		movs	r3, #0
 983 013a 7B61     		str	r3, [r7, #20]
 372:Src/freertos.c ****       {
 984              		.loc 1 372 0
 985 013c 71E7     		b	.L50
 986              	.L52:
 987 013e 00BF     		.align	2
 988              	.L51:
 989 0140 9C000000 		.word	.LC13
 990 0144 00000000 		.word	spi_rx_data
 991 0148 00000000 		.word	spi_tx_data
 992 014c 00000000 		.word	hspi1
 993 0150 00000000 		.word	spiSemaphoreHandle
 994 0154 00000000 		.word	spiMutexHandle
 995 0158 00000000 		.word	tx_data
 996 015c 00000000 		.word	motor1
 997 0160 00000000 		.word	motor2
 998              		.cfi_endproc
 999              	.LFE149:
 1001              		.text
 1002              	.Letext0:
 1003              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1004              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1005              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1006              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1007              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1008              		.file 7 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stdarg.h"
 1009              		.file 8 "/usr/include/newlib/sys/lock.h"
 1010              		.file 9 "/usr/include/newlib/sys/_types.h"
 1011              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1012              		.file 11 "/usr/include/newlib/sys/reent.h"
 1013              		.file 12 "<built-in>"
 1014              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
ARM GAS  /tmp/ccSNrujI.s 			page 27


 1015              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1016              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 1017              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1018              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1019              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 1020              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1021              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1022              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1023              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1024              		.file 23 "Inc/gps.h"
 1025              		.file 24 "Inc/sensor.h"
 1026              		.file 25 "Inc/motor.h"
 1027              		.file 26 "Inc/usart.h"
 1028              		.file 27 "Inc/spi.h"
 1029              		.file 28 "Inc/tim.h"
ARM GAS  /tmp/ccSNrujI.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
                            *COM*:00000000000001a0 gpsData
                            *COM*:0000000000000014 sensorValues
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000004 gpsThreadHandle
                            *COM*:0000000000000004 sensorThreadHandle
                            *COM*:0000000000000004 spiComThreadHandle
                            *COM*:0000000000000004 logThreadHandle
                            *COM*:0000000000000004 spiMutexHandle
                            *COM*:0000000000000004 uartMutexHandle
                            *COM*:0000000000000004 memoryMutexHandle
                            *COM*:0000000000000004 spiSemaphoreHandle
                            *COM*:0000000000000004 uartSemaphoreHandle
                            *COM*:000000000000007c spi_rx_data
                            *COM*:000000000000007c rx_data
                            *COM*:0000000000000078 spi_tx_data
                            *COM*:0000000000000078 tx_data
                            *COM*:0000000000000001 rx_buf
     /tmp/ccSNrujI.s:38     .text.vprint:0000000000000000 $t
     /tmp/ccSNrujI.s:45     .text.vprint:0000000000000000 vprint
     /tmp/ccSNrujI.s:98     .text.vprint:0000000000000044 $d
     /tmp/ccSNrujI.s:103    .text.mprintf:0000000000000000 $t
     /tmp/ccSNrujI.s:110    .text.mprintf:0000000000000000 mprintf
     /tmp/ccSNrujI.s:180    .text.mprintf:0000000000000040 $d
     /tmp/ccSNrujI.s:185    .rodata:0000000000000000 $d
     /tmp/ccSNrujI.s:553    .text.gpsOps:0000000000000000 gpsOps
     /tmp/ccSNrujI.s:682    .text.sensorOps:0000000000000000 sensorOps
     /tmp/ccSNrujI.s:787    .text.spiComOps:0000000000000000 spiComOps
     /tmp/ccSNrujI.s:219    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccSNrujI.s:226    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccSNrujI.s:358    .text.MX_FREERTOS_Init:00000000000000d8 $d
     /tmp/ccSNrujI.s:373    .text.UART4_IRQHandler:0000000000000000 $t
     /tmp/ccSNrujI.s:380    .text.UART4_IRQHandler:0000000000000000 UART4_IRQHandler
     /tmp/ccSNrujI.s:441    .text.UART4_IRQHandler:000000000000003c $d
     /tmp/ccSNrujI.s:448    .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/ccSNrujI.s:455    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/ccSNrujI.s:484    .text.SPI1_IRQHandler:000000000000001c $d
     /tmp/ccSNrujI.s:494    .text.loggingOps:0000000000000000 $t
     /tmp/ccSNrujI.s:501    .text.loggingOps:0000000000000000 loggingOps
     /tmp/ccSNrujI.s:534    .text.loggingOps:0000000000000020 $d
     /tmp/ccSNrujI.s:546    .text.gpsOps:0000000000000000 $t
     /tmp/ccSNrujI.s:659    .text.gpsOps:00000000000000a4 $d
     /tmp/ccSNrujI.s:675    .text.sensorOps:0000000000000000 $t
     /tmp/ccSNrujI.s:767    .text.sensorOps:000000000000007c $d
     /tmp/ccSNrujI.s:780    .text.spiComOps:0000000000000000 $t
     /tmp/ccSNrujI.s:989    .text.spiComOps:0000000000000140 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vsprintf
strlen
HAL_UART_Transmit
huart1
ARM GAS  /tmp/ccSNrujI.s 			page 29


xQueueGenericReceive
xQueueGenericSend
osMutexCreate
osSemaphoreCreate
osThreadCreate
HAL_UART_IRQHandler
xQueueGiveFromISR
huart4
HAL_SPI_IRQHandler
hspi1
osDelay
gpsInit
checkGpsData
HAL_GPIO_TogglePin
enableGps
receiveGpsData
HAL_UART_Receive_IT
sensorInit
HAL_TIM_PWM_Start
readAllSensors
htim3
HAL_SPI_TransmitReceive_IT
HAL_SPI_GetState
memcpy
motor1Drive
motor2Drive
