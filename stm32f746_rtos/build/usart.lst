ARM GAS  /tmp/cct7omll.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	huart4,112,4
  18              		.comm	huart7,112,4
  19              		.comm	huart8,112,4
  20              		.comm	huart1,112,4
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 5372632F 		.ascii	"Src/usart.c\000"
  24      75736172 
  24      742E6300 
  25              		.section	.text.MX_UART4_Init,"ax",%progbits
  26              		.align	1
  27              		.global	MX_UART4_Init
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	MX_UART4_Init:
  34              	.LFB136:
  35              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usart.c   ****   * All rights reserved.
  15:Src/usart.c   ****   *
  16:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usart.c   ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usart.c   ****   *
  19:Src/usart.c   ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usart.c   ****   *    this list of conditions and the following disclaimer.
  21:Src/usart.c   ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/cct7omll.s 			page 2


  22:Src/usart.c   ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usart.c   ****   *    and/or other materials provided with the distribution.
  24:Src/usart.c   ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usart.c   ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usart.c   ****   *    derived from this software without specific written permission.
  27:Src/usart.c   ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usart.c   ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usart.c   ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usart.c   ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usart.c   ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usart.c   ****   *    this license. 
  33:Src/usart.c   ****   *
  34:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usart.c   ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usart.c   ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usart.c   ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usart.c   ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usart.c   ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usart.c   ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usart.c   ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usart.c   ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usart.c   ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usart.c   ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usart.c   ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usart.c   ****   *
  47:Src/usart.c   ****   ******************************************************************************
  48:Src/usart.c   ****   */
  49:Src/usart.c   **** 
  50:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  51:Src/usart.c   **** #include "usart.h"
  52:Src/usart.c   **** 
  53:Src/usart.c   **** #include "gpio.h"
  54:Src/usart.c   **** #include "FreeRTOSConfig.h"
  55:Src/usart.c   **** 
  56:Src/usart.c   **** 
  57:Src/usart.c   **** /* USER CODE BEGIN 0 */
  58:Src/usart.c   **** 
  59:Src/usart.c   **** /* USER CODE END 0 */
  60:Src/usart.c   **** 
  61:Src/usart.c   **** UART_HandleTypeDef huart4;
  62:Src/usart.c   **** UART_HandleTypeDef huart7;
  63:Src/usart.c   **** UART_HandleTypeDef huart8;
  64:Src/usart.c   **** UART_HandleTypeDef huart1;
  65:Src/usart.c   **** 
  66:Src/usart.c   **** /* UART4 init function */
  67:Src/usart.c   **** void MX_UART4_Init(void)
  68:Src/usart.c   **** {
  36              		.loc 1 68 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cct7omll.s 			page 3


  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  69:Src/usart.c   **** 
  70:Src/usart.c   ****   huart4.Instance = UART4;
  48              		.loc 1 70 0
  49 0004 154B     		ldr	r3, .L4
  50 0006 164A     		ldr	r2, .L4+4
  51 0008 1A60     		str	r2, [r3]
  71:Src/usart.c   ****   huart4.Init.BaudRate = 9600;
  52              		.loc 1 71 0
  53 000a 144B     		ldr	r3, .L4
  54 000c 4FF41652 		mov	r2, #9600
  55 0010 5A60     		str	r2, [r3, #4]
  72:Src/usart.c   ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
  56              		.loc 1 72 0
  57 0012 124B     		ldr	r3, .L4
  58 0014 0022     		movs	r2, #0
  59 0016 9A60     		str	r2, [r3, #8]
  73:Src/usart.c   ****   huart4.Init.StopBits = UART_STOPBITS_2;
  60              		.loc 1 73 0
  61 0018 104B     		ldr	r3, .L4
  62 001a 4FF40052 		mov	r2, #8192
  63 001e DA60     		str	r2, [r3, #12]
  74:Src/usart.c   ****   huart4.Init.Parity = UART_PARITY_NONE;
  64              		.loc 1 74 0
  65 0020 0E4B     		ldr	r3, .L4
  66 0022 0022     		movs	r2, #0
  67 0024 1A61     		str	r2, [r3, #16]
  75:Src/usart.c   ****   huart4.Init.Mode = UART_MODE_TX_RX;
  68              		.loc 1 75 0
  69 0026 0D4B     		ldr	r3, .L4
  70 0028 0C22     		movs	r2, #12
  71 002a 5A61     		str	r2, [r3, #20]
  76:Src/usart.c   ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  72              		.loc 1 76 0
  73 002c 0B4B     		ldr	r3, .L4
  74 002e 0022     		movs	r2, #0
  75 0030 9A61     		str	r2, [r3, #24]
  77:Src/usart.c   ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
  76              		.loc 1 77 0
  77 0032 0A4B     		ldr	r3, .L4
  78 0034 0022     		movs	r2, #0
  79 0036 DA61     		str	r2, [r3, #28]
  78:Src/usart.c   ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  80              		.loc 1 78 0
  81 0038 084B     		ldr	r3, .L4
  82 003a 0022     		movs	r2, #0
  83 003c 1A62     		str	r2, [r3, #32]
  79:Src/usart.c   ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  84              		.loc 1 79 0
  85 003e 074B     		ldr	r3, .L4
  86 0040 0022     		movs	r2, #0
  87 0042 5A62     		str	r2, [r3, #36]
  80:Src/usart.c   ****   if (HAL_UART_Init(&huart4) != HAL_OK)
  88              		.loc 1 80 0
  89 0044 0548     		ldr	r0, .L4
  90 0046 FFF7FEFF 		bl	HAL_UART_Init
ARM GAS  /tmp/cct7omll.s 			page 4


  91 004a 0346     		mov	r3, r0
  92 004c 002B     		cmp	r3, #0
  93 004e 03D0     		beq	.L3
  81:Src/usart.c   ****   {
  82:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  94              		.loc 1 82 0
  95 0050 5221     		movs	r1, #82
  96 0052 0448     		ldr	r0, .L4+8
  97 0054 FFF7FEFF 		bl	_Error_Handler
  98              	.L3:
  83:Src/usart.c   ****   }
  84:Src/usart.c   **** 
  85:Src/usart.c   **** }
  99              		.loc 1 85 0
 100 0058 00BF     		nop
 101 005a 80BD     		pop	{r7, pc}
 102              	.L5:
 103              		.align	2
 104              	.L4:
 105 005c 00000000 		.word	huart4
 106 0060 004C0040 		.word	1073761280
 107 0064 00000000 		.word	.LC0
 108              		.cfi_endproc
 109              	.LFE136:
 111              		.section	.text.MX_UART7_Init,"ax",%progbits
 112              		.align	1
 113              		.global	MX_UART7_Init
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	MX_UART7_Init:
 120              	.LFB137:
  86:Src/usart.c   **** /* UART7 init function */
  87:Src/usart.c   **** void MX_UART7_Init(void)
  88:Src/usart.c   **** {
 121              		.loc 1 88 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 00AF     		add	r7, sp, #0
 131              	.LCFI3:
 132              		.cfi_def_cfa_register 7
  89:Src/usart.c   **** 
  90:Src/usart.c   ****   huart7.Instance = UART7;
 133              		.loc 1 90 0
 134 0004 154B     		ldr	r3, .L9
 135 0006 164A     		ldr	r2, .L9+4
 136 0008 1A60     		str	r2, [r3]
  91:Src/usart.c   ****   huart7.Init.BaudRate = 115200;
 137              		.loc 1 91 0
 138 000a 144B     		ldr	r3, .L9
ARM GAS  /tmp/cct7omll.s 			page 5


 139 000c 4FF4E132 		mov	r2, #115200
 140 0010 5A60     		str	r2, [r3, #4]
  92:Src/usart.c   ****   huart7.Init.WordLength = UART_WORDLENGTH_7B;
 141              		.loc 1 92 0
 142 0012 124B     		ldr	r3, .L9
 143 0014 4FF08052 		mov	r2, #268435456
 144 0018 9A60     		str	r2, [r3, #8]
  93:Src/usart.c   ****   huart7.Init.StopBits = UART_STOPBITS_1;
 145              		.loc 1 93 0
 146 001a 104B     		ldr	r3, .L9
 147 001c 0022     		movs	r2, #0
 148 001e DA60     		str	r2, [r3, #12]
  94:Src/usart.c   ****   huart7.Init.Parity = UART_PARITY_NONE;
 149              		.loc 1 94 0
 150 0020 0E4B     		ldr	r3, .L9
 151 0022 0022     		movs	r2, #0
 152 0024 1A61     		str	r2, [r3, #16]
  95:Src/usart.c   ****   huart7.Init.Mode = UART_MODE_TX_RX;
 153              		.loc 1 95 0
 154 0026 0D4B     		ldr	r3, .L9
 155 0028 0C22     		movs	r2, #12
 156 002a 5A61     		str	r2, [r3, #20]
  96:Src/usart.c   ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 157              		.loc 1 96 0
 158 002c 0B4B     		ldr	r3, .L9
 159 002e 0022     		movs	r2, #0
 160 0030 9A61     		str	r2, [r3, #24]
  97:Src/usart.c   ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 161              		.loc 1 97 0
 162 0032 0A4B     		ldr	r3, .L9
 163 0034 0022     		movs	r2, #0
 164 0036 DA61     		str	r2, [r3, #28]
  98:Src/usart.c   ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 165              		.loc 1 98 0
 166 0038 084B     		ldr	r3, .L9
 167 003a 0022     		movs	r2, #0
 168 003c 1A62     		str	r2, [r3, #32]
  99:Src/usart.c   ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 169              		.loc 1 99 0
 170 003e 074B     		ldr	r3, .L9
 171 0040 0022     		movs	r2, #0
 172 0042 5A62     		str	r2, [r3, #36]
 100:Src/usart.c   ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 173              		.loc 1 100 0
 174 0044 0548     		ldr	r0, .L9
 175 0046 FFF7FEFF 		bl	HAL_UART_Init
 176 004a 0346     		mov	r3, r0
 177 004c 002B     		cmp	r3, #0
 178 004e 03D0     		beq	.L8
 101:Src/usart.c   ****   {
 102:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
 179              		.loc 1 102 0
 180 0050 6621     		movs	r1, #102
 181 0052 0448     		ldr	r0, .L9+8
 182 0054 FFF7FEFF 		bl	_Error_Handler
 183              	.L8:
 103:Src/usart.c   ****   }
ARM GAS  /tmp/cct7omll.s 			page 6


 104:Src/usart.c   **** 
 105:Src/usart.c   **** }
 184              		.loc 1 105 0
 185 0058 00BF     		nop
 186 005a 80BD     		pop	{r7, pc}
 187              	.L10:
 188              		.align	2
 189              	.L9:
 190 005c 00000000 		.word	huart7
 191 0060 00780040 		.word	1073772544
 192 0064 00000000 		.word	.LC0
 193              		.cfi_endproc
 194              	.LFE137:
 196              		.section	.text.MX_UART8_Init,"ax",%progbits
 197              		.align	1
 198              		.global	MX_UART8_Init
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv4-sp-d16
 204              	MX_UART8_Init:
 205              	.LFB138:
 106:Src/usart.c   **** /* UART8 init function */
 107:Src/usart.c   **** void MX_UART8_Init(void)
 108:Src/usart.c   **** {
 206              		.loc 1 108 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              	.LCFI4:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 00AF     		add	r7, sp, #0
 216              	.LCFI5:
 217              		.cfi_def_cfa_register 7
 109:Src/usart.c   **** 
 110:Src/usart.c   ****   huart8.Instance = UART8;
 218              		.loc 1 110 0
 219 0004 154B     		ldr	r3, .L14
 220 0006 164A     		ldr	r2, .L14+4
 221 0008 1A60     		str	r2, [r3]
 111:Src/usart.c   ****   huart8.Init.BaudRate = 115200;
 222              		.loc 1 111 0
 223 000a 144B     		ldr	r3, .L14
 224 000c 4FF4E132 		mov	r2, #115200
 225 0010 5A60     		str	r2, [r3, #4]
 112:Src/usart.c   ****   huart8.Init.WordLength = UART_WORDLENGTH_7B;
 226              		.loc 1 112 0
 227 0012 124B     		ldr	r3, .L14
 228 0014 4FF08052 		mov	r2, #268435456
 229 0018 9A60     		str	r2, [r3, #8]
 113:Src/usart.c   ****   huart8.Init.StopBits = UART_STOPBITS_1;
 230              		.loc 1 113 0
 231 001a 104B     		ldr	r3, .L14
 232 001c 0022     		movs	r2, #0
ARM GAS  /tmp/cct7omll.s 			page 7


 233 001e DA60     		str	r2, [r3, #12]
 114:Src/usart.c   ****   huart8.Init.Parity = UART_PARITY_NONE;
 234              		.loc 1 114 0
 235 0020 0E4B     		ldr	r3, .L14
 236 0022 0022     		movs	r2, #0
 237 0024 1A61     		str	r2, [r3, #16]
 115:Src/usart.c   ****   huart8.Init.Mode = UART_MODE_TX_RX;
 238              		.loc 1 115 0
 239 0026 0D4B     		ldr	r3, .L14
 240 0028 0C22     		movs	r2, #12
 241 002a 5A61     		str	r2, [r3, #20]
 116:Src/usart.c   ****   huart8.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 242              		.loc 1 116 0
 243 002c 0B4B     		ldr	r3, .L14
 244 002e 0022     		movs	r2, #0
 245 0030 9A61     		str	r2, [r3, #24]
 117:Src/usart.c   ****   huart8.Init.OverSampling = UART_OVERSAMPLING_16;
 246              		.loc 1 117 0
 247 0032 0A4B     		ldr	r3, .L14
 248 0034 0022     		movs	r2, #0
 249 0036 DA61     		str	r2, [r3, #28]
 118:Src/usart.c   ****   huart8.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 250              		.loc 1 118 0
 251 0038 084B     		ldr	r3, .L14
 252 003a 0022     		movs	r2, #0
 253 003c 1A62     		str	r2, [r3, #32]
 119:Src/usart.c   ****   huart8.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 254              		.loc 1 119 0
 255 003e 074B     		ldr	r3, .L14
 256 0040 0022     		movs	r2, #0
 257 0042 5A62     		str	r2, [r3, #36]
 120:Src/usart.c   ****   if (HAL_UART_Init(&huart8) != HAL_OK)
 258              		.loc 1 120 0
 259 0044 0548     		ldr	r0, .L14
 260 0046 FFF7FEFF 		bl	HAL_UART_Init
 261 004a 0346     		mov	r3, r0
 262 004c 002B     		cmp	r3, #0
 263 004e 03D0     		beq	.L13
 121:Src/usart.c   ****   {
 122:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
 264              		.loc 1 122 0
 265 0050 7A21     		movs	r1, #122
 266 0052 0448     		ldr	r0, .L14+8
 267 0054 FFF7FEFF 		bl	_Error_Handler
 268              	.L13:
 123:Src/usart.c   ****   }
 124:Src/usart.c   **** 
 125:Src/usart.c   **** }
 269              		.loc 1 125 0
 270 0058 00BF     		nop
 271 005a 80BD     		pop	{r7, pc}
 272              	.L15:
 273              		.align	2
 274              	.L14:
 275 005c 00000000 		.word	huart8
 276 0060 007C0040 		.word	1073773568
 277 0064 00000000 		.word	.LC0
ARM GAS  /tmp/cct7omll.s 			page 8


 278              		.cfi_endproc
 279              	.LFE138:
 281              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 282              		.align	1
 283              		.global	MX_USART1_UART_Init
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	MX_USART1_UART_Init:
 290              	.LFB139:
 126:Src/usart.c   **** /* USART1 init function */
 127:Src/usart.c   **** 
 128:Src/usart.c   **** void MX_USART1_UART_Init(void)
 129:Src/usart.c   **** {
 291              		.loc 1 129 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              	.LCFI6:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 00AF     		add	r7, sp, #0
 301              	.LCFI7:
 302              		.cfi_def_cfa_register 7
 130:Src/usart.c   **** 
 131:Src/usart.c   ****   huart1.Instance = USART1;
 303              		.loc 1 131 0
 304 0004 154B     		ldr	r3, .L19
 305 0006 164A     		ldr	r2, .L19+4
 306 0008 1A60     		str	r2, [r3]
 132:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
 307              		.loc 1 132 0
 308 000a 144B     		ldr	r3, .L19
 309 000c 4FF4E132 		mov	r2, #115200
 310 0010 5A60     		str	r2, [r3, #4]
 133:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 311              		.loc 1 133 0
 312 0012 124B     		ldr	r3, .L19
 313 0014 0022     		movs	r2, #0
 314 0016 9A60     		str	r2, [r3, #8]
 134:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
 315              		.loc 1 134 0
 316 0018 104B     		ldr	r3, .L19
 317 001a 0022     		movs	r2, #0
 318 001c DA60     		str	r2, [r3, #12]
 135:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
 319              		.loc 1 135 0
 320 001e 0F4B     		ldr	r3, .L19
 321 0020 0022     		movs	r2, #0
 322 0022 1A61     		str	r2, [r3, #16]
 136:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
 323              		.loc 1 136 0
 324 0024 0D4B     		ldr	r3, .L19
 325 0026 0C22     		movs	r2, #12
ARM GAS  /tmp/cct7omll.s 			page 9


 326 0028 5A61     		str	r2, [r3, #20]
 137:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 327              		.loc 1 137 0
 328 002a 0C4B     		ldr	r3, .L19
 329 002c 0022     		movs	r2, #0
 330 002e 9A61     		str	r2, [r3, #24]
 138:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 331              		.loc 1 138 0
 332 0030 0A4B     		ldr	r3, .L19
 333 0032 0022     		movs	r2, #0
 334 0034 DA61     		str	r2, [r3, #28]
 139:Src/usart.c   ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 335              		.loc 1 139 0
 336 0036 094B     		ldr	r3, .L19
 337 0038 0022     		movs	r2, #0
 338 003a 1A62     		str	r2, [r3, #32]
 140:Src/usart.c   ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 339              		.loc 1 140 0
 340 003c 074B     		ldr	r3, .L19
 341 003e 0022     		movs	r2, #0
 342 0040 5A62     		str	r2, [r3, #36]
 141:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 343              		.loc 1 141 0
 344 0042 0648     		ldr	r0, .L19
 345 0044 FFF7FEFF 		bl	HAL_UART_Init
 346 0048 0346     		mov	r3, r0
 347 004a 002B     		cmp	r3, #0
 348 004c 03D0     		beq	.L18
 142:Src/usart.c   ****   {
 143:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
 349              		.loc 1 143 0
 350 004e 8F21     		movs	r1, #143
 351 0050 0448     		ldr	r0, .L19+8
 352 0052 FFF7FEFF 		bl	_Error_Handler
 353              	.L18:
 144:Src/usart.c   ****   }
 145:Src/usart.c   **** 
 146:Src/usart.c   **** }
 354              		.loc 1 146 0
 355 0056 00BF     		nop
 356 0058 80BD     		pop	{r7, pc}
 357              	.L20:
 358 005a 00BF     		.align	2
 359              	.L19:
 360 005c 00000000 		.word	huart1
 361 0060 00100140 		.word	1073811456
 362 0064 00000000 		.word	.LC0
 363              		.cfi_endproc
 364              	.LFE139:
 366              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 367              		.align	1
 368              		.global	HAL_UART_MspInit
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	HAL_UART_MspInit:
ARM GAS  /tmp/cct7omll.s 			page 10


 375              	.LFB140:
 147:Src/usart.c   **** 
 148:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
 149:Src/usart.c   **** {
 376              		.loc 1 149 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 48
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380 0000 80B5     		push	{r7, lr}
 381              	.LCFI8:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 8CB0     		sub	sp, sp, #48
 386              	.LCFI9:
 387              		.cfi_def_cfa_offset 56
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI10:
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 150:Src/usart.c   **** 
 151:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 152:Src/usart.c   ****   if(uartHandle->Instance==UART4)
 392              		.loc 1 152 0
 393 0008 7B68     		ldr	r3, [r7, #4]
 394 000a 1B68     		ldr	r3, [r3]
 395 000c 4B4A     		ldr	r2, .L27
 396 000e 9342     		cmp	r3, r2
 397 0010 28D1     		bne	.L22
 398              	.LBB2:
 153:Src/usart.c   ****   {
 154:Src/usart.c   ****   /* USER CODE BEGIN UART4_MspInit 0 */
 155:Src/usart.c   **** 
 156:Src/usart.c   ****   /* USER CODE END UART4_MspInit 0 */
 157:Src/usart.c   ****     /* UART4 clock enable */
 158:Src/usart.c   ****     __HAL_RCC_UART4_CLK_ENABLE();
 399              		.loc 1 158 0
 400 0012 4B4A     		ldr	r2, .L27+4
 401 0014 4A4B     		ldr	r3, .L27+4
 402 0016 1B6C     		ldr	r3, [r3, #64]
 403 0018 43F40023 		orr	r3, r3, #524288
 404 001c 1364     		str	r3, [r2, #64]
 405 001e 484B     		ldr	r3, .L27+4
 406 0020 1B6C     		ldr	r3, [r3, #64]
 407 0022 03F40023 		and	r3, r3, #524288
 408 0026 BB61     		str	r3, [r7, #24]
 409 0028 BB69     		ldr	r3, [r7, #24]
 410              	.LBE2:
 159:Src/usart.c   ****   
 160:Src/usart.c   ****     /**UART4 GPIO Configuration    
 161:Src/usart.c   ****     PC10     ------> UART4_TX
 162:Src/usart.c   ****     PC11     ------> UART4_RX 
 163:Src/usart.c   ****     */
 164:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 411              		.loc 1 164 0
 412 002a 4FF44063 		mov	r3, #3072
 413 002e FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/cct7omll.s 			page 11


 165:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 414              		.loc 1 165 0
 415 0030 0223     		movs	r3, #2
 416 0032 3B62     		str	r3, [r7, #32]
 166:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 417              		.loc 1 166 0
 418 0034 0023     		movs	r3, #0
 419 0036 7B62     		str	r3, [r7, #36]
 167:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 420              		.loc 1 167 0
 421 0038 0323     		movs	r3, #3
 422 003a BB62     		str	r3, [r7, #40]
 168:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 423              		.loc 1 168 0
 424 003c 0823     		movs	r3, #8
 425 003e FB62     		str	r3, [r7, #44]
 169:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 426              		.loc 1 169 0
 427 0040 07F11C03 		add	r3, r7, #28
 428 0044 1946     		mov	r1, r3
 429 0046 3F48     		ldr	r0, .L27+8
 430 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 170:Src/usart.c   **** 
 171:Src/usart.c   ****     /* UART4 interrupt Init */
 172:Src/usart.c   ****     HAL_NVIC_SetPriority(UART4_IRQn, configLIBRARY_LOWEST_INTERRUPT_PRIORITY, 0);
 431              		.loc 1 172 0
 432 004c 0022     		movs	r2, #0
 433 004e 0F21     		movs	r1, #15
 434 0050 3420     		movs	r0, #52
 435 0052 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 173:Src/usart.c   ****     HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 436              		.loc 1 173 0
 437 0056 0320     		movs	r0, #3
 438 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 174:Src/usart.c   **** 
 175:Src/usart.c   ****     HAL_NVIC_EnableIRQ(UART4_IRQn);
 439              		.loc 1 175 0
 440 005c 3420     		movs	r0, #52
 441 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 176:Src/usart.c   ****   /* USER CODE BEGIN UART4_MspInit 1 */
 177:Src/usart.c   **** 
 178:Src/usart.c   ****   /* USER CODE END UART4_MspInit 1 */
 179:Src/usart.c   ****   }
 180:Src/usart.c   ****   else if(uartHandle->Instance==UART7)
 181:Src/usart.c   ****   {
 182:Src/usart.c   ****   /* USER CODE BEGIN UART7_MspInit 0 */
 183:Src/usart.c   **** 
 184:Src/usart.c   ****   /* USER CODE END UART7_MspInit 0 */
 185:Src/usart.c   ****     /* UART7 clock enable */
 186:Src/usart.c   ****     __HAL_RCC_UART7_CLK_ENABLE();
 187:Src/usart.c   ****   
 188:Src/usart.c   ****     /**UART7 GPIO Configuration    
 189:Src/usart.c   ****     PE7     ------> UART7_RX
 190:Src/usart.c   ****     PE8     ------> UART7_TX 
 191:Src/usart.c   ****     */
 192:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 193:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/cct7omll.s 			page 12


 194:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 195:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 196:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 197:Src/usart.c   ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 198:Src/usart.c   **** 
 199:Src/usart.c   ****   /* USER CODE BEGIN UART7_MspInit 1 */
 200:Src/usart.c   **** 
 201:Src/usart.c   ****   /* USER CODE END UART7_MspInit 1 */
 202:Src/usart.c   ****   }
 203:Src/usart.c   ****   else if(uartHandle->Instance==UART8)
 204:Src/usart.c   ****   {
 205:Src/usart.c   ****   /* USER CODE BEGIN UART8_MspInit 0 */
 206:Src/usart.c   **** 
 207:Src/usart.c   ****   /* USER CODE END UART8_MspInit 0 */
 208:Src/usart.c   ****     /* UART8 clock enable */
 209:Src/usart.c   ****     __HAL_RCC_UART8_CLK_ENABLE();
 210:Src/usart.c   ****   
 211:Src/usart.c   ****     /**UART8 GPIO Configuration    
 212:Src/usart.c   ****     PE0     ------> UART8_RX
 213:Src/usart.c   ****     PE1     ------> UART8_TX 
 214:Src/usart.c   ****     */
 215:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 216:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 217:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 218:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 219:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF8_UART8;
 220:Src/usart.c   ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 221:Src/usart.c   **** 
 222:Src/usart.c   ****   /* USER CODE BEGIN UART8_MspInit 1 */
 223:Src/usart.c   **** 
 224:Src/usart.c   ****   /* USER CODE END UART8_MspInit 1 */
 225:Src/usart.c   ****   }
 226:Src/usart.c   ****   else if(uartHandle->Instance==USART1)
 227:Src/usart.c   ****   {
 228:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
 229:Src/usart.c   **** 
 230:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
 231:Src/usart.c   ****     /* USART1 clock enable */
 232:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 233:Src/usart.c   ****   
 234:Src/usart.c   ****     /**USART1 GPIO Configuration    
 235:Src/usart.c   ****     PA9     ------> USART1_TX
 236:Src/usart.c   ****     PA10     ------> USART1_RX
 237:Src/usart.c   ****     PA11     ------> USART1_CTS
 238:Src/usart.c   ****     PA12     ------> USART1_RTS 
 239:Src/usart.c   ****     */
 240:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 241:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 242:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 243:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 244:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 245:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 246:Src/usart.c   **** 
 247:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 248:Src/usart.c   **** 
 249:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 250:Src/usart.c   ****   }
ARM GAS  /tmp/cct7omll.s 			page 13


 251:Src/usart.c   **** }
 442              		.loc 1 251 0
 443 0062 66E0     		b	.L26
 444              	.L22:
 180:Src/usart.c   ****   {
 445              		.loc 1 180 0
 446 0064 7B68     		ldr	r3, [r7, #4]
 447 0066 1B68     		ldr	r3, [r3]
 448 0068 374A     		ldr	r2, .L27+12
 449 006a 9342     		cmp	r3, r2
 450 006c 1DD1     		bne	.L24
 451              	.LBB3:
 186:Src/usart.c   ****   
 452              		.loc 1 186 0
 453 006e 344A     		ldr	r2, .L27+4
 454 0070 334B     		ldr	r3, .L27+4
 455 0072 1B6C     		ldr	r3, [r3, #64]
 456 0074 43F08043 		orr	r3, r3, #1073741824
 457 0078 1364     		str	r3, [r2, #64]
 458 007a 314B     		ldr	r3, .L27+4
 459 007c 1B6C     		ldr	r3, [r3, #64]
 460 007e 03F08043 		and	r3, r3, #1073741824
 461 0082 7B61     		str	r3, [r7, #20]
 462 0084 7B69     		ldr	r3, [r7, #20]
 463              	.LBE3:
 192:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 464              		.loc 1 192 0
 465 0086 4FF4C073 		mov	r3, #384
 466 008a FB61     		str	r3, [r7, #28]
 193:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 467              		.loc 1 193 0
 468 008c 0223     		movs	r3, #2
 469 008e 3B62     		str	r3, [r7, #32]
 194:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 470              		.loc 1 194 0
 471 0090 0023     		movs	r3, #0
 472 0092 7B62     		str	r3, [r7, #36]
 195:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 473              		.loc 1 195 0
 474 0094 0323     		movs	r3, #3
 475 0096 BB62     		str	r3, [r7, #40]
 196:Src/usart.c   ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 476              		.loc 1 196 0
 477 0098 0823     		movs	r3, #8
 478 009a FB62     		str	r3, [r7, #44]
 197:Src/usart.c   **** 
 479              		.loc 1 197 0
 480 009c 07F11C03 		add	r3, r7, #28
 481 00a0 1946     		mov	r1, r3
 482 00a2 2A48     		ldr	r0, .L27+16
 483 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 484              		.loc 1 251 0
 485 00a8 43E0     		b	.L26
 486              	.L24:
 203:Src/usart.c   ****   {
 487              		.loc 1 203 0
 488 00aa 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cct7omll.s 			page 14


 489 00ac 1B68     		ldr	r3, [r3]
 490 00ae 284A     		ldr	r2, .L27+20
 491 00b0 9342     		cmp	r3, r2
 492 00b2 1CD1     		bne	.L25
 493              	.LBB4:
 209:Src/usart.c   ****   
 494              		.loc 1 209 0
 495 00b4 224A     		ldr	r2, .L27+4
 496 00b6 224B     		ldr	r3, .L27+4
 497 00b8 1B6C     		ldr	r3, [r3, #64]
 498 00ba 43F00043 		orr	r3, r3, #-2147483648
 499 00be 1364     		str	r3, [r2, #64]
 500 00c0 1F4B     		ldr	r3, .L27+4
 501 00c2 1B6C     		ldr	r3, [r3, #64]
 502 00c4 03F00043 		and	r3, r3, #-2147483648
 503 00c8 3B61     		str	r3, [r7, #16]
 504 00ca 3B69     		ldr	r3, [r7, #16]
 505              	.LBE4:
 215:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 506              		.loc 1 215 0
 507 00cc 0323     		movs	r3, #3
 508 00ce FB61     		str	r3, [r7, #28]
 216:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 509              		.loc 1 216 0
 510 00d0 0223     		movs	r3, #2
 511 00d2 3B62     		str	r3, [r7, #32]
 217:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 512              		.loc 1 217 0
 513 00d4 0023     		movs	r3, #0
 514 00d6 7B62     		str	r3, [r7, #36]
 218:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF8_UART8;
 515              		.loc 1 218 0
 516 00d8 0323     		movs	r3, #3
 517 00da BB62     		str	r3, [r7, #40]
 219:Src/usart.c   ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 518              		.loc 1 219 0
 519 00dc 0823     		movs	r3, #8
 520 00de FB62     		str	r3, [r7, #44]
 220:Src/usart.c   **** 
 521              		.loc 1 220 0
 522 00e0 07F11C03 		add	r3, r7, #28
 523 00e4 1946     		mov	r1, r3
 524 00e6 1948     		ldr	r0, .L27+16
 525 00e8 FFF7FEFF 		bl	HAL_GPIO_Init
 526              		.loc 1 251 0
 527 00ec 21E0     		b	.L26
 528              	.L25:
 226:Src/usart.c   ****   {
 529              		.loc 1 226 0
 530 00ee 7B68     		ldr	r3, [r7, #4]
 531 00f0 1B68     		ldr	r3, [r3]
 532 00f2 184A     		ldr	r2, .L27+24
 533 00f4 9342     		cmp	r3, r2
 534 00f6 1CD1     		bne	.L26
 535              	.LBB5:
 232:Src/usart.c   ****   
 536              		.loc 1 232 0
ARM GAS  /tmp/cct7omll.s 			page 15


 537 00f8 114A     		ldr	r2, .L27+4
 538 00fa 114B     		ldr	r3, .L27+4
 539 00fc 5B6C     		ldr	r3, [r3, #68]
 540 00fe 43F01003 		orr	r3, r3, #16
 541 0102 5364     		str	r3, [r2, #68]
 542 0104 0E4B     		ldr	r3, .L27+4
 543 0106 5B6C     		ldr	r3, [r3, #68]
 544 0108 03F01003 		and	r3, r3, #16
 545 010c FB60     		str	r3, [r7, #12]
 546 010e FB68     		ldr	r3, [r7, #12]
 547              	.LBE5:
 240:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 548              		.loc 1 240 0
 549 0110 4FF4F053 		mov	r3, #7680
 550 0114 FB61     		str	r3, [r7, #28]
 241:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 551              		.loc 1 241 0
 552 0116 0223     		movs	r3, #2
 553 0118 3B62     		str	r3, [r7, #32]
 242:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 554              		.loc 1 242 0
 555 011a 0023     		movs	r3, #0
 556 011c 7B62     		str	r3, [r7, #36]
 243:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 557              		.loc 1 243 0
 558 011e 0323     		movs	r3, #3
 559 0120 BB62     		str	r3, [r7, #40]
 244:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 560              		.loc 1 244 0
 561 0122 0723     		movs	r3, #7
 562 0124 FB62     		str	r3, [r7, #44]
 245:Src/usart.c   **** 
 563              		.loc 1 245 0
 564 0126 07F11C03 		add	r3, r7, #28
 565 012a 1946     		mov	r1, r3
 566 012c 0A48     		ldr	r0, .L27+28
 567 012e FFF7FEFF 		bl	HAL_GPIO_Init
 568              	.L26:
 569              		.loc 1 251 0
 570 0132 00BF     		nop
 571 0134 3037     		adds	r7, r7, #48
 572              	.LCFI11:
 573              		.cfi_def_cfa_offset 8
 574 0136 BD46     		mov	sp, r7
 575              	.LCFI12:
 576              		.cfi_def_cfa_register 13
 577              		@ sp needed
 578 0138 80BD     		pop	{r7, pc}
 579              	.L28:
 580 013a 00BF     		.align	2
 581              	.L27:
 582 013c 004C0040 		.word	1073761280
 583 0140 00380240 		.word	1073887232
 584 0144 00080240 		.word	1073874944
 585 0148 00780040 		.word	1073772544
 586 014c 00100240 		.word	1073876992
 587 0150 007C0040 		.word	1073773568
ARM GAS  /tmp/cct7omll.s 			page 16


 588 0154 00100140 		.word	1073811456
 589 0158 00000240 		.word	1073872896
 590              		.cfi_endproc
 591              	.LFE140:
 593              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 594              		.align	1
 595              		.global	HAL_UART_MspDeInit
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 601              	HAL_UART_MspDeInit:
 602              	.LFB141:
 252:Src/usart.c   **** 
 253:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 254:Src/usart.c   **** {
 603              		.loc 1 254 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607 0000 80B5     		push	{r7, lr}
 608              	.LCFI13:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 82B0     		sub	sp, sp, #8
 613              	.LCFI14:
 614              		.cfi_def_cfa_offset 16
 615 0004 00AF     		add	r7, sp, #0
 616              	.LCFI15:
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 255:Src/usart.c   **** 
 256:Src/usart.c   ****   if(uartHandle->Instance==UART4)
 619              		.loc 1 256 0
 620 0008 7B68     		ldr	r3, [r7, #4]
 621 000a 1B68     		ldr	r3, [r3]
 622 000c 234A     		ldr	r2, .L35
 623 000e 9342     		cmp	r3, r2
 624 0010 0ED1     		bne	.L30
 257:Src/usart.c   ****   {
 258:Src/usart.c   ****   /* USER CODE BEGIN UART4_MspDeInit 0 */
 259:Src/usart.c   **** 
 260:Src/usart.c   ****   /* USER CODE END UART4_MspDeInit 0 */
 261:Src/usart.c   ****     /* Peripheral clock disable */
 262:Src/usart.c   ****     __HAL_RCC_UART4_CLK_DISABLE();
 625              		.loc 1 262 0
 626 0012 234A     		ldr	r2, .L35+4
 627 0014 224B     		ldr	r3, .L35+4
 628 0016 1B6C     		ldr	r3, [r3, #64]
 629 0018 23F40023 		bic	r3, r3, #524288
 630 001c 1364     		str	r3, [r2, #64]
 263:Src/usart.c   ****   
 264:Src/usart.c   ****     /**UART4 GPIO Configuration    
 265:Src/usart.c   ****     PC10     ------> UART4_TX
 266:Src/usart.c   ****     PC11     ------> UART4_RX 
 267:Src/usart.c   ****     */
ARM GAS  /tmp/cct7omll.s 			page 17


 268:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11);
 631              		.loc 1 268 0
 632 001e 4FF44061 		mov	r1, #3072
 633 0022 2048     		ldr	r0, .L35+8
 634 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 269:Src/usart.c   **** 
 270:Src/usart.c   ****     /* UART4 interrupt Deinit */
 271:Src/usart.c   ****     HAL_NVIC_DisableIRQ(UART4_IRQn);
 635              		.loc 1 271 0
 636 0028 3420     		movs	r0, #52
 637 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 272:Src/usart.c   ****   /* USER CODE BEGIN UART4_MspDeInit 1 */
 273:Src/usart.c   **** 
 274:Src/usart.c   ****   /* USER CODE END UART4_MspDeInit 1 */
 275:Src/usart.c   ****   }
 276:Src/usart.c   ****   else if(uartHandle->Instance==UART7)
 277:Src/usart.c   ****   {
 278:Src/usart.c   ****   /* USER CODE BEGIN UART7_MspDeInit 0 */
 279:Src/usart.c   **** 
 280:Src/usart.c   ****   /* USER CODE END UART7_MspDeInit 0 */
 281:Src/usart.c   ****     /* Peripheral clock disable */
 282:Src/usart.c   ****     __HAL_RCC_UART7_CLK_DISABLE();
 283:Src/usart.c   ****   
 284:Src/usart.c   ****     /**UART7 GPIO Configuration    
 285:Src/usart.c   ****     PE7     ------> UART7_RX
 286:Src/usart.c   ****     PE8     ------> UART7_TX 
 287:Src/usart.c   ****     */
 288:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOE, GPIO_PIN_7|GPIO_PIN_8);
 289:Src/usart.c   **** 
 290:Src/usart.c   ****   /* USER CODE BEGIN UART7_MspDeInit 1 */
 291:Src/usart.c   **** 
 292:Src/usart.c   ****   /* USER CODE END UART7_MspDeInit 1 */
 293:Src/usart.c   ****   }
 294:Src/usart.c   ****   else if(uartHandle->Instance==UART8)
 295:Src/usart.c   ****   {
 296:Src/usart.c   ****   /* USER CODE BEGIN UART8_MspDeInit 0 */
 297:Src/usart.c   **** 
 298:Src/usart.c   ****   /* USER CODE END UART8_MspDeInit 0 */
 299:Src/usart.c   ****     /* Peripheral clock disable */
 300:Src/usart.c   ****     __HAL_RCC_UART8_CLK_DISABLE();
 301:Src/usart.c   ****   
 302:Src/usart.c   ****     /**UART8 GPIO Configuration    
 303:Src/usart.c   ****     PE0     ------> UART8_RX
 304:Src/usart.c   ****     PE1     ------> UART8_TX 
 305:Src/usart.c   ****     */
 306:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOE, GPIO_PIN_0|GPIO_PIN_1);
 307:Src/usart.c   **** 
 308:Src/usart.c   ****   /* USER CODE BEGIN UART8_MspDeInit 1 */
 309:Src/usart.c   **** 
 310:Src/usart.c   ****   /* USER CODE END UART8_MspDeInit 1 */
 311:Src/usart.c   ****   }
 312:Src/usart.c   ****   else if(uartHandle->Instance==USART1)
 313:Src/usart.c   ****   {
 314:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 315:Src/usart.c   **** 
 316:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 317:Src/usart.c   ****     /* Peripheral clock disable */
ARM GAS  /tmp/cct7omll.s 			page 18


 318:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 319:Src/usart.c   ****   
 320:Src/usart.c   ****     /**USART1 GPIO Configuration    
 321:Src/usart.c   ****     PA9     ------> USART1_TX
 322:Src/usart.c   ****     PA10     ------> USART1_RX
 323:Src/usart.c   ****     PA11     ------> USART1_CTS
 324:Src/usart.c   ****     PA12     ------> USART1_RTS 
 325:Src/usart.c   ****     */
 326:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12);
 327:Src/usart.c   **** 
 328:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 329:Src/usart.c   **** 
 330:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 331:Src/usart.c   ****   }
 332:Src/usart.c   **** } 
 638              		.loc 1 332 0
 639 002e 30E0     		b	.L34
 640              	.L30:
 276:Src/usart.c   ****   {
 641              		.loc 1 276 0
 642 0030 7B68     		ldr	r3, [r7, #4]
 643 0032 1B68     		ldr	r3, [r3]
 644 0034 1C4A     		ldr	r2, .L35+12
 645 0036 9342     		cmp	r3, r2
 646 0038 0BD1     		bne	.L32
 282:Src/usart.c   ****   
 647              		.loc 1 282 0
 648 003a 194A     		ldr	r2, .L35+4
 649 003c 184B     		ldr	r3, .L35+4
 650 003e 1B6C     		ldr	r3, [r3, #64]
 651 0040 23F08043 		bic	r3, r3, #1073741824
 652 0044 1364     		str	r3, [r2, #64]
 288:Src/usart.c   **** 
 653              		.loc 1 288 0
 654 0046 4FF4C071 		mov	r1, #384
 655 004a 1848     		ldr	r0, .L35+16
 656 004c FFF7FEFF 		bl	HAL_GPIO_DeInit
 657              		.loc 1 332 0
 658 0050 1FE0     		b	.L34
 659              	.L32:
 294:Src/usart.c   ****   {
 660              		.loc 1 294 0
 661 0052 7B68     		ldr	r3, [r7, #4]
 662 0054 1B68     		ldr	r3, [r3]
 663 0056 164A     		ldr	r2, .L35+20
 664 0058 9342     		cmp	r3, r2
 665 005a 0AD1     		bne	.L33
 300:Src/usart.c   ****   
 666              		.loc 1 300 0
 667 005c 104A     		ldr	r2, .L35+4
 668 005e 104B     		ldr	r3, .L35+4
 669 0060 1B6C     		ldr	r3, [r3, #64]
 670 0062 23F00043 		bic	r3, r3, #-2147483648
 671 0066 1364     		str	r3, [r2, #64]
 306:Src/usart.c   **** 
 672              		.loc 1 306 0
 673 0068 0321     		movs	r1, #3
ARM GAS  /tmp/cct7omll.s 			page 19


 674 006a 1048     		ldr	r0, .L35+16
 675 006c FFF7FEFF 		bl	HAL_GPIO_DeInit
 676              		.loc 1 332 0
 677 0070 0FE0     		b	.L34
 678              	.L33:
 312:Src/usart.c   ****   {
 679              		.loc 1 312 0
 680 0072 7B68     		ldr	r3, [r7, #4]
 681 0074 1B68     		ldr	r3, [r3]
 682 0076 0F4A     		ldr	r2, .L35+24
 683 0078 9342     		cmp	r3, r2
 684 007a 0AD1     		bne	.L34
 318:Src/usart.c   ****   
 685              		.loc 1 318 0
 686 007c 084A     		ldr	r2, .L35+4
 687 007e 084B     		ldr	r3, .L35+4
 688 0080 5B6C     		ldr	r3, [r3, #68]
 689 0082 23F01003 		bic	r3, r3, #16
 690 0086 5364     		str	r3, [r2, #68]
 326:Src/usart.c   **** 
 691              		.loc 1 326 0
 692 0088 4FF4F051 		mov	r1, #7680
 693 008c 0A48     		ldr	r0, .L35+28
 694 008e FFF7FEFF 		bl	HAL_GPIO_DeInit
 695              	.L34:
 696              		.loc 1 332 0
 697 0092 00BF     		nop
 698 0094 0837     		adds	r7, r7, #8
 699              	.LCFI16:
 700              		.cfi_def_cfa_offset 8
 701 0096 BD46     		mov	sp, r7
 702              	.LCFI17:
 703              		.cfi_def_cfa_register 13
 704              		@ sp needed
 705 0098 80BD     		pop	{r7, pc}
 706              	.L36:
 707 009a 00BF     		.align	2
 708              	.L35:
 709 009c 004C0040 		.word	1073761280
 710 00a0 00380240 		.word	1073887232
 711 00a4 00080240 		.word	1073874944
 712 00a8 00780040 		.word	1073772544
 713 00ac 00100240 		.word	1073876992
 714 00b0 007C0040 		.word	1073773568
 715 00b4 00100140 		.word	1073811456
 716 00b8 00000240 		.word	1073872896
 717              		.cfi_endproc
 718              	.LFE141:
 720              		.text
 721              	.Letext0:
 722              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 723              		.file 3 "/usr/include/newlib/sys/lock.h"
 724              		.file 4 "/usr/include/newlib/sys/_types.h"
 725              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 726              		.file 6 "/usr/include/newlib/sys/reent.h"
 727              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 728              		.file 8 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cct7omll.s 			page 20


 729              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 730              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 731              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 732              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 733              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 734              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 735              		.file 15 "Inc/usart.h"
ARM GAS  /tmp/cct7omll.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
                            *COM*:0000000000000070 huart4
                            *COM*:0000000000000070 huart7
                            *COM*:0000000000000070 huart8
                            *COM*:0000000000000070 huart1
     /tmp/cct7omll.s:22     .rodata:0000000000000000 $d
     /tmp/cct7omll.s:26     .text.MX_UART4_Init:0000000000000000 $t
     /tmp/cct7omll.s:33     .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/cct7omll.s:105    .text.MX_UART4_Init:000000000000005c $d
     /tmp/cct7omll.s:112    .text.MX_UART7_Init:0000000000000000 $t
     /tmp/cct7omll.s:119    .text.MX_UART7_Init:0000000000000000 MX_UART7_Init
     /tmp/cct7omll.s:190    .text.MX_UART7_Init:000000000000005c $d
     /tmp/cct7omll.s:197    .text.MX_UART8_Init:0000000000000000 $t
     /tmp/cct7omll.s:204    .text.MX_UART8_Init:0000000000000000 MX_UART8_Init
     /tmp/cct7omll.s:275    .text.MX_UART8_Init:000000000000005c $d
     /tmp/cct7omll.s:282    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cct7omll.s:289    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cct7omll.s:360    .text.MX_USART1_UART_Init:000000000000005c $d
     /tmp/cct7omll.s:367    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cct7omll.s:374    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cct7omll.s:582    .text.HAL_UART_MspInit:000000000000013c $d
     /tmp/cct7omll.s:594    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cct7omll.s:601    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cct7omll.s:709    .text.HAL_UART_MspDeInit:000000000000009c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_SetPriorityGrouping
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
