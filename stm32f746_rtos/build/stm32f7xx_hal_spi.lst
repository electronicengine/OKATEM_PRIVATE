ARM GAS  /tmp/ccVrlOhd.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_SPI_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_SPI_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_SPI_Init:
  26              	.LFB136:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @file    stm32f7xx_hal_spi.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
ARM GAS  /tmp/ccVrlOhd.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx handle to the hspi DMA Tx or Rx handle
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (@) The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bits
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, IT
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (@)
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            (+@) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            (+@) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            (+@) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @endverbatim
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the differents SP
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        according to frequency used on APBx Peripheral Clock (fPCLK) used by the SPI instance :
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
ARM GAS  /tmp/ccVrlOhd.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @attention
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * Redistribution and use in source and binary forms, with or without modification,
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * are permitted provided that the following conditions are met:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      this list of conditions and the following disclaimer.
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      this list of conditions and the following disclaimer in the documentation
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      and/or other materials provided with the distribution.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      may be used to endorse or promote products derived from this software
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      without specific prior written permission.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
ARM GAS  /tmp/ccVrlOhd.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #include "stm32f7xx_hal.h"
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup STM32F7xx_HAL_Driver
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI SPI
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief SPI HAL module driver
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
ARM GAS  /tmp/ccVrlOhd.s 			page 5


 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the selected configuration:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Mode
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Direction
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Data Size
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) NSS Management
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) BaudRate Prescaler
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FirstBit
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) TIMode
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Calculation
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FIFO reception threshold
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           of the selected SPIx peripheral.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccVrlOhd.s 			page 6


 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
  28              		.loc 1 264 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
  44              		.loc 1 268 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
  48              		.loc 1 270 0
  49 000e 0123     		movs	r3, #1
  50 0010 82E0     		b	.L3
  51              	.L2:
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the parameters */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
ARM GAS  /tmp/ccVrlOhd.s 			page 7


 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  52              		.loc 1 296 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 0022     		movs	r2, #0
  55 0016 9A62     		str	r2, [r3, #40]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
  56              		.loc 1 299 0
  57 0018 7B68     		ldr	r3, [r7, #4]
  58 001a 93F85D30 		ldrb	r3, [r3, #93]
  59 001e DBB2     		uxtb	r3, r3
  60 0020 002B     		cmp	r3, #0
  61 0022 06D1     		bne	.L4
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
  62              		.loc 1 302 0
  63 0024 7B68     		ldr	r3, [r7, #4]
  64 0026 0022     		movs	r2, #0
  65 0028 83F85C20 		strb	r2, [r3, #92]
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
  66              		.loc 1 305 0
  67 002c 7868     		ldr	r0, [r7, #4]
  68 002e FFF7FEFF 		bl	HAL_SPI_MspInit
  69              	.L4:
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
  70              		.loc 1 308 0
  71 0032 7B68     		ldr	r3, [r7, #4]
  72 0034 0222     		movs	r2, #2
  73 0036 83F85D20 		strb	r2, [r3, #93]
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  74              		.loc 1 311 0
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 1B68     		ldr	r3, [r3]
  77 003e 7A68     		ldr	r2, [r7, #4]
  78 0040 1268     		ldr	r2, [r2]
  79 0042 1268     		ldr	r2, [r2]
  80 0044 22F04002 		bic	r2, r2, #64
  81 0048 1A60     		str	r2, [r3]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
  82              		.loc 1 314 0
  83 004a 7B68     		ldr	r3, [r7, #4]
  84 004c DB68     		ldr	r3, [r3, #12]
  85 004e B3F5E06F 		cmp	r3, #1792
  86 0052 02D9     		bls	.L5
ARM GAS  /tmp/ccVrlOhd.s 			page 8


 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
  87              		.loc 1 316 0
  88 0054 0023     		movs	r3, #0
  89 0056 FB60     		str	r3, [r7, #12]
  90 0058 02E0     		b	.L6
  91              	.L5:
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
  92              		.loc 1 320 0
  93 005a 4FF48053 		mov	r3, #4096
  94 005e FB60     		str	r3, [r7, #12]
  95              	.L6:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
  96              		.loc 1 324 0
  97 0060 7B68     		ldr	r3, [r7, #4]
  98 0062 DB68     		ldr	r3, [r3, #12]
  99 0064 B3F5706F 		cmp	r3, #3840
 100 0068 07D0     		beq	.L7
 101              		.loc 1 324 0 is_stmt 0 discriminator 1
 102 006a 7B68     		ldr	r3, [r7, #4]
 103 006c DB68     		ldr	r3, [r3, #12]
 104 006e B3F5E06F 		cmp	r3, #1792
 105 0072 02D0     		beq	.L7
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC must be disabled */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 106              		.loc 1 327 0 is_stmt 1
 107 0074 7B68     		ldr	r3, [r7, #4]
 108 0076 0022     		movs	r2, #0
 109 0078 9A62     		str	r2, [r3, #40]
 110              	.L7:
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 111              		.loc 1 331 0
 112 007a 7B68     		ldr	r3, [r7, #4]
 113 007c 1B6B     		ldr	r3, [r3, #48]
 114 007e 002B     		cmp	r3, #0
 115 0080 0BD1     		bne	.L8
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 116              		.loc 1 334 0
 117 0082 7B68     		ldr	r3, [r7, #4]
 118 0084 DB68     		ldr	r3, [r3, #12]
 119 0086 B3F5E06F 		cmp	r3, #1792
 120 008a 03D9     		bls	.L9
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 121              		.loc 1 336 0
ARM GAS  /tmp/ccVrlOhd.s 			page 9


 122 008c 7B68     		ldr	r3, [r7, #4]
 123 008e 0222     		movs	r2, #2
 124 0090 1A63     		str	r2, [r3, #48]
 125 0092 02E0     		b	.L8
 126              	.L9:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 127              		.loc 1 340 0
 128 0094 7B68     		ldr	r3, [r7, #4]
 129 0096 0122     		movs	r2, #1
 130 0098 1A63     		str	r2, [r3, #48]
 131              	.L8:
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   Communication speed, First bit, CRC calculation state */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 132              		.loc 1 347 0
 133 009a 7B68     		ldr	r3, [r7, #4]
 134 009c 1B68     		ldr	r3, [r3]
 135 009e 7A68     		ldr	r2, [r7, #4]
 136 00a0 5168     		ldr	r1, [r2, #4]
 137 00a2 7A68     		ldr	r2, [r7, #4]
 138 00a4 9268     		ldr	r2, [r2, #8]
 139 00a6 1143     		orrs	r1, r1, r2
 140 00a8 7A68     		ldr	r2, [r7, #4]
 141 00aa 1269     		ldr	r2, [r2, #16]
 142 00ac 1143     		orrs	r1, r1, r2
 143 00ae 7A68     		ldr	r2, [r7, #4]
 144 00b0 5269     		ldr	r2, [r2, #20]
 145 00b2 1143     		orrs	r1, r1, r2
 146 00b4 7A68     		ldr	r2, [r7, #4]
 147 00b6 9269     		ldr	r2, [r2, #24]
 148 00b8 02F40072 		and	r2, r2, #512
 149 00bc 1143     		orrs	r1, r1, r2
 150 00be 7A68     		ldr	r2, [r7, #4]
 151 00c0 D269     		ldr	r2, [r2, #28]
 152 00c2 1143     		orrs	r1, r1, r2
 153 00c4 7A68     		ldr	r2, [r7, #4]
 154 00c6 126A     		ldr	r2, [r2, #32]
 155 00c8 1143     		orrs	r1, r1, r2
 156 00ca 7A68     		ldr	r2, [r7, #4]
 157 00cc 926A     		ldr	r2, [r2, #40]
 158 00ce 0A43     		orrs	r2, r2, r1
 159 00d0 1A60     		str	r2, [r3]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Length */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVrlOhd.s 			page 10


 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : NSS management, TI Mode and Rx Fifo Threshold */
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 160              		.loc 1 359 0
 161 00d2 7B68     		ldr	r3, [r7, #4]
 162 00d4 1B68     		ldr	r3, [r3]
 163 00d6 7A68     		ldr	r2, [r7, #4]
 164 00d8 9269     		ldr	r2, [r2, #24]
 165 00da 120C     		lsrs	r2, r2, #16
 166 00dc 02F00401 		and	r1, r2, #4
 167 00e0 7A68     		ldr	r2, [r7, #4]
 168 00e2 526A     		ldr	r2, [r2, #36]
 169 00e4 1143     		orrs	r1, r1, r2
 170 00e6 7A68     		ldr	r2, [r7, #4]
 171 00e8 526B     		ldr	r2, [r2, #52]
 172 00ea 1143     		orrs	r1, r1, r2
 173 00ec 7A68     		ldr	r2, [r7, #4]
 174 00ee D268     		ldr	r2, [r2, #12]
 175 00f0 1143     		orrs	r1, r1, r2
 176 00f2 FA68     		ldr	r2, [r7, #12]
 177 00f4 0A43     		orrs	r2, r2, r1
 178 00f6 5A60     		str	r2, [r3, #4]
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 179              		.loc 1 373 0
 180 00f8 7B68     		ldr	r3, [r7, #4]
 181 00fa 1B68     		ldr	r3, [r3]
 182 00fc 7A68     		ldr	r2, [r7, #4]
 183 00fe 1268     		ldr	r2, [r2]
 184 0100 D269     		ldr	r2, [r2, #28]
 185 0102 22F40062 		bic	r2, r2, #2048
 186 0106 DA61     		str	r2, [r3, #28]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 187              		.loc 1 376 0
 188 0108 7B68     		ldr	r3, [r7, #4]
 189 010a 0022     		movs	r2, #0
 190 010c 1A66     		str	r2, [r3, #96]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 191              		.loc 1 377 0
 192 010e 7B68     		ldr	r3, [r7, #4]
 193 0110 0122     		movs	r2, #1
 194 0112 83F85D20 		strb	r2, [r3, #93]
ARM GAS  /tmp/ccVrlOhd.s 			page 11


 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 195              		.loc 1 379 0
 196 0116 0023     		movs	r3, #0
 197              	.L3:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 198              		.loc 1 380 0
 199 0118 1846     		mov	r0, r3
 200 011a 1037     		adds	r7, r7, #16
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 8
 203 011c BD46     		mov	sp, r7
 204              	.LCFI4:
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 011e 80BD     		pop	{r7, pc}
 208              		.cfi_endproc
 209              	.LFE136:
 211              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 212              		.align	1
 213              		.global	HAL_SPI_DeInit
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	HAL_SPI_DeInit:
 220              	.LFB137:
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 221              		.loc 1 389 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 8
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              	.LCFI5:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 82B0     		sub	sp, sp, #8
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              	.LCFI7:
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
 237              		.loc 1 391 0
 238 0008 7B68     		ldr	r3, [r7, #4]
 239 000a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVrlOhd.s 			page 12


 240 000c 01D1     		bne	.L11
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 241              		.loc 1 393 0
 242 000e 0123     		movs	r3, #1
 243 0010 1AE0     		b	.L12
 244              	.L11:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 245              		.loc 1 399 0
 246 0012 7B68     		ldr	r3, [r7, #4]
 247 0014 0222     		movs	r2, #2
 248 0016 83F85D20 		strb	r2, [r3, #93]
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 249              		.loc 1 402 0
 250 001a 7B68     		ldr	r3, [r7, #4]
 251 001c 1B68     		ldr	r3, [r3]
 252 001e 7A68     		ldr	r2, [r7, #4]
 253 0020 1268     		ldr	r2, [r2]
 254 0022 1268     		ldr	r2, [r2]
 255 0024 22F04002 		bic	r2, r2, #64
 256 0028 1A60     		str	r2, [r3]
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 257              		.loc 1 405 0
 258 002a 7868     		ldr	r0, [r7, #4]
 259 002c FFF7FEFF 		bl	HAL_SPI_MspDeInit
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 260              		.loc 1 407 0
 261 0030 7B68     		ldr	r3, [r7, #4]
 262 0032 0022     		movs	r2, #0
 263 0034 1A66     		str	r2, [r3, #96]
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 264              		.loc 1 408 0
 265 0036 7B68     		ldr	r3, [r7, #4]
 266 0038 0022     		movs	r2, #0
 267 003a 83F85D20 		strb	r2, [r3, #93]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 268              		.loc 1 411 0
 269 003e 7B68     		ldr	r3, [r7, #4]
 270 0040 0022     		movs	r2, #0
 271 0042 83F85C20 		strb	r2, [r3, #92]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 272              		.loc 1 413 0
 273 0046 0023     		movs	r3, #0
 274              	.L12:
ARM GAS  /tmp/ccVrlOhd.s 			page 13


 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 275              		.loc 1 414 0
 276 0048 1846     		mov	r0, r3
 277 004a 0837     		adds	r7, r7, #8
 278              	.LCFI8:
 279              		.cfi_def_cfa_offset 8
 280 004c BD46     		mov	sp, r7
 281              	.LCFI9:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 004e 80BD     		pop	{r7, pc}
 285              		.cfi_endproc
 286              	.LFE137:
 288              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 289              		.align	1
 290              		.weak	HAL_SPI_MspInit
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	HAL_SPI_MspInit:
 297              	.LFB138:
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 298              		.loc 1 423 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI10:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 83B0     		sub	sp, sp, #12
 308              	.LCFI11:
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              	.LCFI12:
 312              		.cfi_def_cfa_register 7
 313 0006 7860     		str	r0, [r7, #4]
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 314              		.loc 1 430 0
 315 0008 00BF     		nop
 316 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccVrlOhd.s 			page 14


 317              	.LCFI13:
 318              		.cfi_def_cfa_offset 4
 319 000c BD46     		mov	sp, r7
 320              	.LCFI14:
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 000e 5DF8047B 		ldr	r7, [sp], #4
 324              	.LCFI15:
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 0012 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE138:
 331              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 332              		.align	1
 333              		.weak	HAL_SPI_MspDeInit
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	HAL_SPI_MspDeInit:
 340              	.LFB139:
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 341              		.loc 1 439 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              	.LCFI16:
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 83B0     		sub	sp, sp, #12
 351              	.LCFI17:
 352              		.cfi_def_cfa_offset 16
 353 0004 00AF     		add	r7, sp, #0
 354              	.LCFI18:
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 357              		.loc 1 446 0
 358 0008 00BF     		nop
 359 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccVrlOhd.s 			page 15


 360              	.LCFI19:
 361              		.cfi_def_cfa_offset 4
 362 000c BD46     		mov	sp, r7
 363              	.LCFI20:
 364              		.cfi_def_cfa_register 13
 365              		@ sp needed
 366 000e 5DF8047B 		ldr	r7, [sp], #4
 367              	.LCFI21:
 368              		.cfi_restore 7
 369              		.cfi_def_cfa_offset 0
 370 0012 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE139:
 374              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 375              		.align	1
 376              		.global	HAL_SPI_Transmit
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu fpv4-sp-d16
 382              	HAL_SPI_Transmit:
 383              	.LFB140:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief   Data transfers functions
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### IO operation functions #####
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  [..]
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     data transfers.
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) There are two modes of transfer:
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             after finishing transfer.
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             using DMA mode.
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
ARM GAS  /tmp/ccVrlOhd.s 			page 16


 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 384              		.loc 1 495 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 32
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 80B5     		push	{r7, lr}
 389              	.LCFI22:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 88B0     		sub	sp, sp, #32
 394              	.LCFI23:
 395              		.cfi_def_cfa_offset 40
 396 0004 00AF     		add	r7, sp, #0
 397              	.LCFI24:
 398              		.cfi_def_cfa_register 7
 399 0006 F860     		str	r0, [r7, #12]
 400 0008 B960     		str	r1, [r7, #8]
 401 000a 3B60     		str	r3, [r7]
 402 000c 1346     		mov	r3, r2	@ movhi
 403 000e FB80     		strh	r3, [r7, #6]	@ movhi
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 404              		.loc 1 496 0
 405 0010 0023     		movs	r3, #0
 406 0012 BB61     		str	r3, [r7, #24]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 407              		.loc 1 497 0
 408 0014 0023     		movs	r3, #0
 409 0016 FB77     		strb	r3, [r7, #31]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 410              		.loc 1 503 0
 411 0018 FB68     		ldr	r3, [r7, #12]
 412 001a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 413 001e 012B     		cmp	r3, #1
 414 0020 01D1     		bne	.L16
 415              		.loc 1 503 0 is_stmt 0 discriminator 1
 416 0022 0223     		movs	r3, #2
 417 0024 F7E0     		b	.L17
 418              	.L16:
ARM GAS  /tmp/ccVrlOhd.s 			page 17


 419              		.loc 1 503 0 discriminator 2
 420 0026 FB68     		ldr	r3, [r7, #12]
 421 0028 0122     		movs	r2, #1
 422 002a 83F85C20 		strb	r2, [r3, #92]
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 423              		.loc 1 506 0 is_stmt 1 discriminator 2
 424 002e FFF7FEFF 		bl	HAL_GetTick
 425 0032 B861     		str	r0, [r7, #24]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 426              		.loc 1 508 0 discriminator 2
 427 0034 FB68     		ldr	r3, [r7, #12]
 428 0036 93F85D30 		ldrb	r3, [r3, #93]
 429 003a DBB2     		uxtb	r3, r3
 430 003c 012B     		cmp	r3, #1
 431 003e 02D0     		beq	.L18
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 432              		.loc 1 510 0
 433 0040 0223     		movs	r3, #2
 434 0042 FB77     		strb	r3, [r7, #31]
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 435              		.loc 1 511 0
 436 0044 DEE0     		b	.L19
 437              	.L18:
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 438              		.loc 1 514 0
 439 0046 BB68     		ldr	r3, [r7, #8]
 440 0048 002B     		cmp	r3, #0
 441 004a 02D0     		beq	.L20
 442              		.loc 1 514 0 is_stmt 0 discriminator 1
 443 004c FB88     		ldrh	r3, [r7, #6]
 444 004e 002B     		cmp	r3, #0
 445 0050 02D1     		bne	.L21
 446              	.L20:
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 447              		.loc 1 516 0 is_stmt 1
 448 0052 0123     		movs	r3, #1
 449 0054 FB77     		strb	r3, [r7, #31]
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 450              		.loc 1 517 0
 451 0056 D5E0     		b	.L19
 452              	.L21:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 453              		.loc 1 521 0
 454 0058 FB68     		ldr	r3, [r7, #12]
 455 005a 0322     		movs	r2, #3
 456 005c 83F85D20 		strb	r2, [r3, #93]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccVrlOhd.s 			page 18


 457              		.loc 1 522 0
 458 0060 FB68     		ldr	r3, [r7, #12]
 459 0062 0022     		movs	r2, #0
 460 0064 1A66     		str	r2, [r3, #96]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 461              		.loc 1 523 0
 462 0066 FB68     		ldr	r3, [r7, #12]
 463 0068 BA68     		ldr	r2, [r7, #8]
 464 006a 9A63     		str	r2, [r3, #56]
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 465              		.loc 1 524 0
 466 006c FB68     		ldr	r3, [r7, #12]
 467 006e FA88     		ldrh	r2, [r7, #6]	@ movhi
 468 0070 9A87     		strh	r2, [r3, #60]	@ movhi
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 469              		.loc 1 525 0
 470 0072 FB68     		ldr	r3, [r7, #12]
 471 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 472 0076 DA87     		strh	r2, [r3, #62]	@ movhi
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 473              		.loc 1 528 0
 474 0078 FB68     		ldr	r3, [r7, #12]
 475 007a 0022     		movs	r2, #0
 476 007c 1A64     		str	r2, [r3, #64]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 477              		.loc 1 529 0
 478 007e FB68     		ldr	r3, [r7, #12]
 479 0080 0022     		movs	r2, #0
 480 0082 A3F84420 		strh	r2, [r3, #68]	@ movhi
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 481              		.loc 1 530 0
 482 0086 FB68     		ldr	r3, [r7, #12]
 483 0088 0022     		movs	r2, #0
 484 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 485              		.loc 1 531 0
 486 008e FB68     		ldr	r3, [r7, #12]
 487 0090 0022     		movs	r2, #0
 488 0092 1A65     		str	r2, [r3, #80]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 489              		.loc 1 532 0
 490 0094 FB68     		ldr	r3, [r7, #12]
 491 0096 0022     		movs	r2, #0
 492 0098 DA64     		str	r2, [r3, #76]
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 493              		.loc 1 535 0
 494 009a FB68     		ldr	r3, [r7, #12]
 495 009c 9B68     		ldr	r3, [r3, #8]
 496 009e B3F5004F 		cmp	r3, #32768
 497 00a2 07D1     		bne	.L22
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 498              		.loc 1 537 0
ARM GAS  /tmp/ccVrlOhd.s 			page 19


 499 00a4 FB68     		ldr	r3, [r7, #12]
 500 00a6 1B68     		ldr	r3, [r3]
 501 00a8 FA68     		ldr	r2, [r7, #12]
 502 00aa 1268     		ldr	r2, [r2]
 503 00ac 1268     		ldr	r2, [r2]
 504 00ae 42F48042 		orr	r2, r2, #16384
 505 00b2 1A60     		str	r2, [r3]
 506              	.L22:
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 507              		.loc 1 549 0
 508 00b4 FB68     		ldr	r3, [r7, #12]
 509 00b6 1B68     		ldr	r3, [r3]
 510 00b8 1B68     		ldr	r3, [r3]
 511 00ba 03F04003 		and	r3, r3, #64
 512 00be 402B     		cmp	r3, #64
 513 00c0 07D0     		beq	.L23
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 514              		.loc 1 552 0
 515 00c2 FB68     		ldr	r3, [r7, #12]
 516 00c4 1B68     		ldr	r3, [r3]
 517 00c6 FA68     		ldr	r2, [r7, #12]
 518 00c8 1268     		ldr	r2, [r2]
 519 00ca 1268     		ldr	r2, [r2]
 520 00cc 42F04002 		orr	r2, r2, #64
 521 00d0 1A60     		str	r2, [r3]
 522              	.L23:
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 523              		.loc 1 556 0
 524 00d2 FB68     		ldr	r3, [r7, #12]
 525 00d4 DB68     		ldr	r3, [r3, #12]
 526 00d6 B3F5E06F 		cmp	r3, #1792
 527 00da 6ED9     		bls	.L30
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 528              		.loc 1 559 0
 529 00dc 28E0     		b	.L25
 530              	.L28:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
ARM GAS  /tmp/ccVrlOhd.s 			page 20


 531              		.loc 1 562 0
 532 00de FB68     		ldr	r3, [r7, #12]
 533 00e0 1B68     		ldr	r3, [r3]
 534 00e2 9B68     		ldr	r3, [r3, #8]
 535 00e4 03F00203 		and	r3, r3, #2
 536 00e8 022B     		cmp	r3, #2
 537 00ea 0FD1     		bne	.L26
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)pData);
 538              		.loc 1 564 0
 539 00ec FB68     		ldr	r3, [r7, #12]
 540 00ee 1B68     		ldr	r3, [r3]
 541 00f0 BA68     		ldr	r2, [r7, #8]
 542 00f2 1288     		ldrh	r2, [r2]
 543 00f4 DA60     		str	r2, [r3, #12]
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pData += sizeof(uint16_t);
 544              		.loc 1 565 0
 545 00f6 BB68     		ldr	r3, [r7, #8]
 546 00f8 0233     		adds	r3, r3, #2
 547 00fa BB60     		str	r3, [r7, #8]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 548              		.loc 1 566 0
 549 00fc FB68     		ldr	r3, [r7, #12]
 550 00fe DB8F     		ldrh	r3, [r3, #62]	@ movhi
 551 0100 9BB2     		uxth	r3, r3
 552 0102 013B     		subs	r3, r3, #1
 553 0104 9AB2     		uxth	r2, r3
 554 0106 FB68     		ldr	r3, [r7, #12]
 555 0108 DA87     		strh	r2, [r3, #62]	@ movhi
 556 010a 11E0     		b	.L25
 557              	.L26:
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 558              		.loc 1 571 0
 559 010c 3B68     		ldr	r3, [r7]
 560 010e 002B     		cmp	r3, #0
 561 0110 0BD0     		beq	.L27
 562              		.loc 1 571 0 is_stmt 0 discriminator 1
 563 0112 3B68     		ldr	r3, [r7]
 564 0114 B3F1FF3F 		cmp	r3, #-1
 565 0118 0AD0     		beq	.L25
 566              		.loc 1 571 0 discriminator 2
 567 011a FFF7FEFF 		bl	HAL_GetTick
 568 011e 0246     		mov	r2, r0
 569 0120 BB69     		ldr	r3, [r7, #24]
 570 0122 D21A     		subs	r2, r2, r3
 571 0124 3B68     		ldr	r3, [r7]
 572 0126 9A42     		cmp	r2, r3
 573 0128 02D3     		bcc	.L25
 574              	.L27:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 575              		.loc 1 573 0 is_stmt 1
 576 012a 0323     		movs	r3, #3
ARM GAS  /tmp/ccVrlOhd.s 			page 21


 577 012c FB77     		strb	r3, [r7, #31]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 578              		.loc 1 574 0
 579 012e 69E0     		b	.L19
 580              	.L25:
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 581              		.loc 1 559 0
 582 0130 FB68     		ldr	r3, [r7, #12]
 583 0132 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 584 0134 9BB2     		uxth	r3, r3
 585 0136 002B     		cmp	r3, #0
 586 0138 D1D1     		bne	.L28
 587 013a 43E0     		b	.L29
 588              	.L35:
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 589              		.loc 1 585 0
 590 013c FB68     		ldr	r3, [r7, #12]
 591 013e 1B68     		ldr	r3, [r3]
 592 0140 9B68     		ldr	r3, [r3, #8]
 593 0142 03F00203 		and	r3, r3, #2
 594 0146 022B     		cmp	r3, #2
 595 0148 25D1     		bne	.L31
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 596              		.loc 1 587 0
 597 014a FB68     		ldr	r3, [r7, #12]
 598 014c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 599 014e 9BB2     		uxth	r3, r3
 600 0150 012B     		cmp	r3, #1
 601 0152 0FD9     		bls	.L32
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* write on the data register in packing mode */
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)pData);
 602              		.loc 1 590 0
 603 0154 FB68     		ldr	r3, [r7, #12]
 604 0156 1B68     		ldr	r3, [r3]
 605 0158 BA68     		ldr	r2, [r7, #8]
 606 015a 1288     		ldrh	r2, [r2]
 607 015c DA60     		str	r2, [r3, #12]
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           pData += sizeof(uint16_t);
 608              		.loc 1 591 0
 609 015e BB68     		ldr	r3, [r7, #8]
 610 0160 0233     		adds	r3, r3, #2
 611 0162 BB60     		str	r3, [r7, #8]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 612              		.loc 1 592 0
 613 0164 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 22


 614 0166 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 615 0168 9BB2     		uxth	r3, r3
 616 016a 023B     		subs	r3, r3, #2
 617 016c 9AB2     		uxth	r2, r3
 618 016e FB68     		ldr	r3, [r7, #12]
 619 0170 DA87     		strh	r2, [r3, #62]	@ movhi
 620 0172 22E0     		b	.L30
 621              	.L32:
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*pData++);
 622              		.loc 1 596 0
 623 0174 FB68     		ldr	r3, [r7, #12]
 624 0176 1B68     		ldr	r3, [r3]
 625 0178 03F10C02 		add	r2, r3, #12
 626 017c BB68     		ldr	r3, [r7, #8]
 627 017e 591C     		adds	r1, r3, #1
 628 0180 B960     		str	r1, [r7, #8]
 629 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0184 1370     		strb	r3, [r2]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 631              		.loc 1 597 0
 632 0186 FB68     		ldr	r3, [r7, #12]
 633 0188 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 634 018a 9BB2     		uxth	r3, r3
 635 018c 013B     		subs	r3, r3, #1
 636 018e 9AB2     		uxth	r2, r3
 637 0190 FB68     		ldr	r3, [r7, #12]
 638 0192 DA87     		strh	r2, [r3, #62]	@ movhi
 639 0194 11E0     		b	.L30
 640              	.L31:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 641              		.loc 1 603 0
 642 0196 3B68     		ldr	r3, [r7]
 643 0198 002B     		cmp	r3, #0
 644 019a 0BD0     		beq	.L34
 645              		.loc 1 603 0 is_stmt 0 discriminator 1
 646 019c 3B68     		ldr	r3, [r7]
 647 019e B3F1FF3F 		cmp	r3, #-1
 648 01a2 0AD0     		beq	.L30
 649              		.loc 1 603 0 discriminator 2
 650 01a4 FFF7FEFF 		bl	HAL_GetTick
 651 01a8 0246     		mov	r2, r0
 652 01aa BB69     		ldr	r3, [r7, #24]
 653 01ac D21A     		subs	r2, r2, r3
 654 01ae 3B68     		ldr	r3, [r7]
 655 01b0 9A42     		cmp	r2, r3
 656 01b2 02D3     		bcc	.L30
 657              	.L34:
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
ARM GAS  /tmp/ccVrlOhd.s 			page 23


 658              		.loc 1 605 0 is_stmt 1
 659 01b4 0323     		movs	r3, #3
 660 01b6 FB77     		strb	r3, [r7, #31]
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 661              		.loc 1 606 0
 662 01b8 24E0     		b	.L19
 663              	.L30:
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 664              		.loc 1 582 0
 665 01ba FB68     		ldr	r3, [r7, #12]
 666 01bc DB8F     		ldrh	r3, [r3, #62]	@ movhi
 667 01be 9BB2     		uxth	r3, r3
 668 01c0 002B     		cmp	r3, #0
 669 01c2 BBD1     		bne	.L35
 670              	.L29:
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 671              		.loc 1 620 0
 672 01c4 BA69     		ldr	r2, [r7, #24]
 673 01c6 3968     		ldr	r1, [r7]
 674 01c8 F868     		ldr	r0, [r7, #12]
 675 01ca FFF7FEFF 		bl	SPI_EndRxTxTransaction
 676 01ce 0346     		mov	r3, r0
 677 01d0 002B     		cmp	r3, #0
 678 01d2 02D0     		beq	.L36
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 679              		.loc 1 622 0
 680 01d4 FB68     		ldr	r3, [r7, #12]
 681 01d6 2022     		movs	r2, #32
 682 01d8 1A66     		str	r2, [r3, #96]
 683              	.L36:
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 684              		.loc 1 626 0
 685 01da FB68     		ldr	r3, [r7, #12]
 686 01dc 9B68     		ldr	r3, [r3, #8]
 687 01de 002B     		cmp	r3, #0
 688 01e0 0AD1     		bne	.L37
 689              	.LBB2:
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 690              		.loc 1 628 0
ARM GAS  /tmp/ccVrlOhd.s 			page 24


 691 01e2 0023     		movs	r3, #0
 692 01e4 7B61     		str	r3, [r7, #20]
 693 01e6 FB68     		ldr	r3, [r7, #12]
 694 01e8 1B68     		ldr	r3, [r3]
 695 01ea DB68     		ldr	r3, [r3, #12]
 696 01ec 7B61     		str	r3, [r7, #20]
 697 01ee FB68     		ldr	r3, [r7, #12]
 698 01f0 1B68     		ldr	r3, [r3]
 699 01f2 9B68     		ldr	r3, [r3, #8]
 700 01f4 7B61     		str	r3, [r7, #20]
 701 01f6 7B69     		ldr	r3, [r7, #20]
 702              	.L37:
 703              	.LBE2:
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 704              		.loc 1 631 0
 705 01f8 FB68     		ldr	r3, [r7, #12]
 706 01fa 1B6E     		ldr	r3, [r3, #96]
 707 01fc 002B     		cmp	r3, #0
 708 01fe 01D0     		beq	.L19
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 709              		.loc 1 633 0
 710 0200 0123     		movs	r3, #1
 711 0202 FB77     		strb	r3, [r7, #31]
 712              	.L19:
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 713              		.loc 1 637 0
 714 0204 FB68     		ldr	r3, [r7, #12]
 715 0206 0122     		movs	r2, #1
 716 0208 83F85D20 		strb	r2, [r3, #93]
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 717              		.loc 1 639 0
 718 020c FB68     		ldr	r3, [r7, #12]
 719 020e 0022     		movs	r2, #0
 720 0210 83F85C20 		strb	r2, [r3, #92]
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 721              		.loc 1 640 0
 722 0214 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 723              	.L17:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 724              		.loc 1 641 0
 725 0216 1846     		mov	r0, r3
 726 0218 2037     		adds	r7, r7, #32
 727              	.LCFI25:
 728              		.cfi_def_cfa_offset 8
 729 021a BD46     		mov	sp, r7
 730              	.LCFI26:
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
 733 021c 80BD     		pop	{r7, pc}
 734              		.cfi_endproc
ARM GAS  /tmp/ccVrlOhd.s 			page 25


 735              	.LFE140:
 737              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 738              		.align	1
 739              		.global	HAL_SPI_Receive
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	HAL_SPI_Receive:
 746              	.LFB141:
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be received
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 747              		.loc 1 653 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 24
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              	.LCFI27:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 88B0     		sub	sp, sp, #32
 757              	.LCFI28:
 758              		.cfi_def_cfa_offset 40
 759 0004 02AF     		add	r7, sp, #8
 760              	.LCFI29:
 761              		.cfi_def_cfa 7, 32
 762 0006 F860     		str	r0, [r7, #12]
 763 0008 B960     		str	r1, [r7, #8]
 764 000a 3B60     		str	r3, [r7]
 765 000c 1346     		mov	r3, r2	@ movhi
 766 000e FB80     		strh	r3, [r7, #6]	@ movhi
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 767              		.loc 1 657 0
 768 0010 0023     		movs	r3, #0
 769 0012 3B61     		str	r3, [r7, #16]
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 770              		.loc 1 658 0
 771 0014 0023     		movs	r3, #0
 772 0016 FB75     		strb	r3, [r7, #23]
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 773              		.loc 1 660 0
 774 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 26


 775 001a 5B68     		ldr	r3, [r3, #4]
 776 001c B3F5827F 		cmp	r3, #260
 777 0020 12D1     		bne	.L39
 778              		.loc 1 660 0 is_stmt 0 discriminator 1
 779 0022 FB68     		ldr	r3, [r7, #12]
 780 0024 9B68     		ldr	r3, [r3, #8]
 781 0026 002B     		cmp	r3, #0
 782 0028 0ED1     		bne	.L39
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 783              		.loc 1 662 0 is_stmt 1
 784 002a FB68     		ldr	r3, [r7, #12]
 785 002c 0422     		movs	r2, #4
 786 002e 83F85D20 		strb	r2, [r3, #93]
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 787              		.loc 1 664 0
 788 0032 FA88     		ldrh	r2, [r7, #6]
 789 0034 3B68     		ldr	r3, [r7]
 790 0036 0093     		str	r3, [sp]
 791 0038 1346     		mov	r3, r2
 792 003a BA68     		ldr	r2, [r7, #8]
 793 003c B968     		ldr	r1, [r7, #8]
 794 003e F868     		ldr	r0, [r7, #12]
 795 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 796 0044 0346     		mov	r3, r0
 797 0046 F8E0     		b	.L40
 798              	.L39:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 799              		.loc 1 668 0
 800 0048 FB68     		ldr	r3, [r7, #12]
 801 004a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 802 004e 012B     		cmp	r3, #1
 803 0050 01D1     		bne	.L41
 804              		.loc 1 668 0 is_stmt 0 discriminator 1
 805 0052 0223     		movs	r3, #2
 806 0054 F1E0     		b	.L40
 807              	.L41:
 808              		.loc 1 668 0 discriminator 2
 809 0056 FB68     		ldr	r3, [r7, #12]
 810 0058 0122     		movs	r2, #1
 811 005a 83F85C20 		strb	r2, [r3, #92]
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 812              		.loc 1 671 0 is_stmt 1 discriminator 2
 813 005e FFF7FEFF 		bl	HAL_GetTick
 814 0062 3861     		str	r0, [r7, #16]
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 815              		.loc 1 673 0 discriminator 2
 816 0064 FB68     		ldr	r3, [r7, #12]
 817 0066 93F85D30 		ldrb	r3, [r3, #93]
 818 006a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccVrlOhd.s 			page 27


 819 006c 012B     		cmp	r3, #1
 820 006e 02D0     		beq	.L42
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 821              		.loc 1 675 0
 822 0070 0223     		movs	r3, #2
 823 0072 FB75     		strb	r3, [r7, #23]
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 824              		.loc 1 676 0
 825 0074 D8E0     		b	.L43
 826              	.L42:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 827              		.loc 1 679 0
 828 0076 BB68     		ldr	r3, [r7, #8]
 829 0078 002B     		cmp	r3, #0
 830 007a 02D0     		beq	.L44
 831              		.loc 1 679 0 is_stmt 0 discriminator 1
 832 007c FB88     		ldrh	r3, [r7, #6]
 833 007e 002B     		cmp	r3, #0
 834 0080 02D1     		bne	.L45
 835              	.L44:
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 836              		.loc 1 681 0 is_stmt 1
 837 0082 0123     		movs	r3, #1
 838 0084 FB75     		strb	r3, [r7, #23]
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 839              		.loc 1 682 0
 840 0086 CFE0     		b	.L43
 841              	.L45:
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 842              		.loc 1 686 0
 843 0088 FB68     		ldr	r3, [r7, #12]
 844 008a 0422     		movs	r2, #4
 845 008c 83F85D20 		strb	r2, [r3, #93]
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 846              		.loc 1 687 0
 847 0090 FB68     		ldr	r3, [r7, #12]
 848 0092 0022     		movs	r2, #0
 849 0094 1A66     		str	r2, [r3, #96]
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 850              		.loc 1 688 0
 851 0096 FB68     		ldr	r3, [r7, #12]
 852 0098 BA68     		ldr	r2, [r7, #8]
 853 009a 1A64     		str	r2, [r3, #64]
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 854              		.loc 1 689 0
 855 009c FB68     		ldr	r3, [r7, #12]
 856 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 857 00a0 A3F84420 		strh	r2, [r3, #68]	@ movhi
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 858              		.loc 1 690 0
ARM GAS  /tmp/ccVrlOhd.s 			page 28


 859 00a4 FB68     		ldr	r3, [r7, #12]
 860 00a6 FA88     		ldrh	r2, [r7, #6]	@ movhi
 861 00a8 A3F84620 		strh	r2, [r3, #70]	@ movhi
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 862              		.loc 1 693 0
 863 00ac FB68     		ldr	r3, [r7, #12]
 864 00ae 0022     		movs	r2, #0
 865 00b0 9A63     		str	r2, [r3, #56]
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 866              		.loc 1 694 0
 867 00b2 FB68     		ldr	r3, [r7, #12]
 868 00b4 0022     		movs	r2, #0
 869 00b6 9A87     		strh	r2, [r3, #60]	@ movhi
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 870              		.loc 1 695 0
 871 00b8 FB68     		ldr	r3, [r7, #12]
 872 00ba 0022     		movs	r2, #0
 873 00bc DA87     		strh	r2, [r3, #62]	@ movhi
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 874              		.loc 1 696 0
 875 00be FB68     		ldr	r3, [r7, #12]
 876 00c0 0022     		movs	r2, #0
 877 00c2 DA64     		str	r2, [r3, #76]
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 878              		.loc 1 697 0
 879 00c4 FB68     		ldr	r3, [r7, #12]
 880 00c6 0022     		movs	r2, #0
 881 00c8 1A65     		str	r2, [r3, #80]
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 882              		.loc 1 710 0
 883 00ca FB68     		ldr	r3, [r7, #12]
 884 00cc DB68     		ldr	r3, [r3, #12]
 885 00ce B3F5E06F 		cmp	r3, #1792
 886 00d2 08D9     		bls	.L46
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 887              		.loc 1 713 0
 888 00d4 FB68     		ldr	r3, [r7, #12]
 889 00d6 1B68     		ldr	r3, [r3]
 890 00d8 FA68     		ldr	r2, [r7, #12]
 891 00da 1268     		ldr	r2, [r2]
 892 00dc 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 29


 893 00de 22F48052 		bic	r2, r2, #4096
 894 00e2 5A60     		str	r2, [r3, #4]
 895 00e4 07E0     		b	.L47
 896              	.L46:
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 897              		.loc 1 718 0
 898 00e6 FB68     		ldr	r3, [r7, #12]
 899 00e8 1B68     		ldr	r3, [r3]
 900 00ea FA68     		ldr	r2, [r7, #12]
 901 00ec 1268     		ldr	r2, [r2]
 902 00ee 5268     		ldr	r2, [r2, #4]
 903 00f0 42F48052 		orr	r2, r2, #4096
 904 00f4 5A60     		str	r2, [r3, #4]
 905              	.L47:
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 906              		.loc 1 722 0
 907 00f6 FB68     		ldr	r3, [r7, #12]
 908 00f8 9B68     		ldr	r3, [r3, #8]
 909 00fa B3F5004F 		cmp	r3, #32768
 910 00fe 07D1     		bne	.L48
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 911              		.loc 1 724 0
 912 0100 FB68     		ldr	r3, [r7, #12]
 913 0102 1B68     		ldr	r3, [r3]
 914 0104 FA68     		ldr	r2, [r7, #12]
 915 0106 1268     		ldr	r2, [r2]
 916 0108 1268     		ldr	r2, [r2]
 917 010a 22F48042 		bic	r2, r2, #16384
 918 010e 1A60     		str	r2, [r3]
 919              	.L48:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 920              		.loc 1 728 0
 921 0110 FB68     		ldr	r3, [r7, #12]
 922 0112 1B68     		ldr	r3, [r3]
 923 0114 1B68     		ldr	r3, [r3]
 924 0116 03F04003 		and	r3, r3, #64
 925 011a 402B     		cmp	r3, #64
 926 011c 07D0     		beq	.L49
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 927              		.loc 1 731 0
 928 011e FB68     		ldr	r3, [r7, #12]
 929 0120 1B68     		ldr	r3, [r3]
 930 0122 FA68     		ldr	r2, [r7, #12]
 931 0124 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccVrlOhd.s 			page 30


 932 0126 1268     		ldr	r2, [r2]
 933 0128 42F04002 		orr	r2, r2, #64
 934 012c 1A60     		str	r2, [r3]
 935              	.L49:
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 936              		.loc 1 735 0
 937 012e FB68     		ldr	r3, [r7, #12]
 938 0130 DB68     		ldr	r3, [r3, #12]
 939 0132 B3F5E06F 		cmp	r3, #1792
 940 0136 60D8     		bhi	.L56
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 941              		.loc 1 738 0
 942 0138 2CE0     		b	.L51
 943              	.L54:
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 944              		.loc 1 741 0
 945 013a FB68     		ldr	r3, [r7, #12]
 946 013c 1B68     		ldr	r3, [r3]
 947 013e 9B68     		ldr	r3, [r3, #8]
 948 0140 03F00103 		and	r3, r3, #1
 949 0144 012B     		cmp	r3, #1
 950 0146 13D1     		bne	.L52
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* read the received data */
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (*pData) = *(__IO uint8_t *)&hspi->Instance->DR;
 951              		.loc 1 744 0
 952 0148 FB68     		ldr	r3, [r7, #12]
 953 014a 1B68     		ldr	r3, [r3]
 954 014c 0C33     		adds	r3, r3, #12
 955 014e 1B78     		ldrb	r3, [r3]
 956 0150 DAB2     		uxtb	r2, r3
 957 0152 BB68     		ldr	r3, [r7, #8]
 958 0154 1A70     		strb	r2, [r3]
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pData += sizeof(uint8_t);
 959              		.loc 1 745 0
 960 0156 BB68     		ldr	r3, [r7, #8]
 961 0158 0133     		adds	r3, r3, #1
 962 015a BB60     		str	r3, [r7, #8]
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 963              		.loc 1 746 0
 964 015c FB68     		ldr	r3, [r7, #12]
 965 015e B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 966 0162 9BB2     		uxth	r3, r3
 967 0164 013B     		subs	r3, r3, #1
 968 0166 9AB2     		uxth	r2, r3
 969 0168 FB68     		ldr	r3, [r7, #12]
 970 016a A3F84620 		strh	r2, [r3, #70]	@ movhi
 971 016e 11E0     		b	.L51
 972              	.L52:
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
ARM GAS  /tmp/ccVrlOhd.s 			page 31


 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 973              		.loc 1 751 0
 974 0170 3B68     		ldr	r3, [r7]
 975 0172 002B     		cmp	r3, #0
 976 0174 0BD0     		beq	.L53
 977              		.loc 1 751 0 is_stmt 0 discriminator 1
 978 0176 3B68     		ldr	r3, [r7]
 979 0178 B3F1FF3F 		cmp	r3, #-1
 980 017c 0AD0     		beq	.L51
 981              		.loc 1 751 0 discriminator 2
 982 017e FFF7FEFF 		bl	HAL_GetTick
 983 0182 0246     		mov	r2, r0
 984 0184 3B69     		ldr	r3, [r7, #16]
 985 0186 D21A     		subs	r2, r2, r3
 986 0188 3B68     		ldr	r3, [r7]
 987 018a 9A42     		cmp	r2, r3
 988 018c 02D3     		bcc	.L51
 989              	.L53:
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 990              		.loc 1 753 0 is_stmt 1
 991 018e 0323     		movs	r3, #3
 992 0190 FB75     		strb	r3, [r7, #23]
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 993              		.loc 1 754 0
 994 0192 49E0     		b	.L43
 995              	.L51:
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 996              		.loc 1 738 0
 997 0194 FB68     		ldr	r3, [r7, #12]
 998 0196 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 999 019a 9BB2     		uxth	r3, r3
 1000 019c 002B     		cmp	r3, #0
 1001 019e CCD1     		bne	.L54
 1002 01a0 31E0     		b	.L55
 1003              	.L59:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1004              		.loc 1 765 0
 1005 01a2 FB68     		ldr	r3, [r7, #12]
 1006 01a4 1B68     		ldr	r3, [r3]
 1007 01a6 9B68     		ldr	r3, [r3, #8]
 1008 01a8 03F00103 		and	r3, r3, #1
 1009 01ac 012B     		cmp	r3, #1
 1010 01ae 12D1     		bne	.L57
ARM GAS  /tmp/ccVrlOhd.s 			page 32


 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)pData) = hspi->Instance->DR;
 1011              		.loc 1 767 0
 1012 01b0 FB68     		ldr	r3, [r7, #12]
 1013 01b2 1B68     		ldr	r3, [r3]
 1014 01b4 DB68     		ldr	r3, [r3, #12]
 1015 01b6 9AB2     		uxth	r2, r3
 1016 01b8 BB68     		ldr	r3, [r7, #8]
 1017 01ba 1A80     		strh	r2, [r3]	@ movhi
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pData += sizeof(uint16_t);
 1018              		.loc 1 768 0
 1019 01bc BB68     		ldr	r3, [r7, #8]
 1020 01be 0233     		adds	r3, r3, #2
 1021 01c0 BB60     		str	r3, [r7, #8]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 1022              		.loc 1 769 0
 1023 01c2 FB68     		ldr	r3, [r7, #12]
 1024 01c4 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1025 01c8 9BB2     		uxth	r3, r3
 1026 01ca 013B     		subs	r3, r3, #1
 1027 01cc 9AB2     		uxth	r2, r3
 1028 01ce FB68     		ldr	r3, [r7, #12]
 1029 01d0 A3F84620 		strh	r2, [r3, #70]	@ movhi
 1030 01d4 11E0     		b	.L56
 1031              	.L57:
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 1032              		.loc 1 774 0
 1033 01d6 3B68     		ldr	r3, [r7]
 1034 01d8 002B     		cmp	r3, #0
 1035 01da 0BD0     		beq	.L58
 1036              		.loc 1 774 0 is_stmt 0 discriminator 1
 1037 01dc 3B68     		ldr	r3, [r7]
 1038 01de B3F1FF3F 		cmp	r3, #-1
 1039 01e2 0AD0     		beq	.L56
 1040              		.loc 1 774 0 discriminator 2
 1041 01e4 FFF7FEFF 		bl	HAL_GetTick
 1042 01e8 0246     		mov	r2, r0
 1043 01ea 3B69     		ldr	r3, [r7, #16]
 1044 01ec D21A     		subs	r2, r2, r3
 1045 01ee 3B68     		ldr	r3, [r7]
 1046 01f0 9A42     		cmp	r2, r3
 1047 01f2 02D3     		bcc	.L56
 1048              	.L58:
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 1049              		.loc 1 776 0 is_stmt 1
 1050 01f4 0323     		movs	r3, #3
 1051 01f6 FB75     		strb	r3, [r7, #23]
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1052              		.loc 1 777 0
 1053 01f8 16E0     		b	.L43
 1054              	.L56:
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccVrlOhd.s 			page 33


 1055              		.loc 1 762 0
 1056 01fa FB68     		ldr	r3, [r7, #12]
 1057 01fc B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1058 0200 9BB2     		uxth	r3, r3
 1059 0202 002B     		cmp	r3, #0
 1060 0204 CDD1     		bne	.L59
 1061              	.L55:
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Handle the CRC Transmission */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* freeze the CRC before the latest data */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read the latest data */
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* the latest data has not been received */
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       *((uint16_t *)pData) = hspi->Instance->DR;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (*pData) = *(__IO uint8_t *)&hspi->Instance->DR;
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait the CRC data */
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
ARM GAS  /tmp/ccVrlOhd.s 			page 34


 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, Timeout, tickstart) !
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1062              		.loc 1 848 0
 1063 0206 3A69     		ldr	r2, [r7, #16]
 1064 0208 3968     		ldr	r1, [r7]
 1065 020a F868     		ldr	r0, [r7, #12]
 1066 020c FFF7FEFF 		bl	SPI_EndRxTransaction
 1067 0210 0346     		mov	r3, r0
 1068 0212 002B     		cmp	r3, #0
 1069 0214 02D0     		beq	.L60
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1070              		.loc 1 850 0
 1071 0216 FB68     		ldr	r3, [r7, #12]
 1072 0218 2022     		movs	r2, #32
 1073 021a 1A66     		str	r2, [r3, #96]
 1074              	.L60:
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1075              		.loc 1 862 0
 1076 021c FB68     		ldr	r3, [r7, #12]
 1077 021e 1B6E     		ldr	r3, [r3, #96]
 1078 0220 002B     		cmp	r3, #0
 1079 0222 01D0     		beq	.L43
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1080              		.loc 1 864 0
 1081 0224 0123     		movs	r3, #1
ARM GAS  /tmp/ccVrlOhd.s 			page 35


 1082 0226 FB75     		strb	r3, [r7, #23]
 1083              	.L43:
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1084              		.loc 1 868 0
 1085 0228 FB68     		ldr	r3, [r7, #12]
 1086 022a 0122     		movs	r2, #1
 1087 022c 83F85D20 		strb	r2, [r3, #93]
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1088              		.loc 1 869 0
 1089 0230 FB68     		ldr	r3, [r7, #12]
 1090 0232 0022     		movs	r2, #0
 1091 0234 83F85C20 		strb	r2, [r3, #92]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1092              		.loc 1 870 0
 1093 0238 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1094              	.L40:
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1095              		.loc 1 871 0
 1096 023a 1846     		mov	r0, r3
 1097 023c 1837     		adds	r7, r7, #24
 1098              	.LCFI30:
 1099              		.cfi_def_cfa_offset 8
 1100 023e BD46     		mov	sp, r7
 1101              	.LCFI31:
 1102              		.cfi_def_cfa_register 13
 1103              		@ sp needed
 1104 0240 80BD     		pop	{r7, pc}
 1105              		.cfi_endproc
 1106              	.LFE141:
 1108              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1109              		.align	1
 1110              		.global	HAL_SPI_TransmitReceive
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv4-sp-d16
 1116              	HAL_SPI_TransmitReceive:
 1117              	.LFB142:
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           uint32_t Timeout)
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 1118              		.loc 1 885 0
 1119              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 36


 1120              		@ args = 4, pretend = 0, frame = 40
 1121              		@ frame_needed = 1, uses_anonymous_args = 0
 1122 0000 80B5     		push	{r7, lr}
 1123              	.LCFI32:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 8AB0     		sub	sp, sp, #40
 1128              	.LCFI33:
 1129              		.cfi_def_cfa_offset 48
 1130 0004 00AF     		add	r7, sp, #0
 1131              	.LCFI34:
 1132              		.cfi_def_cfa_register 7
 1133 0006 F860     		str	r0, [r7, #12]
 1134 0008 B960     		str	r1, [r7, #8]
 1135 000a 7A60     		str	r2, [r7, #4]
 1136 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 1137              		.loc 1 886 0
 1138 000e 0023     		movs	r3, #0
 1139 0010 FB61     		str	r3, [r7, #28]
 1140 0012 0023     		movs	r3, #0
 1141 0014 BB61     		str	r3, [r7, #24]
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 1142              		.loc 1 890 0
 1143 0016 0023     		movs	r3, #0
 1144 0018 7B61     		str	r3, [r7, #20]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t txallowed = 1U;
 1145              		.loc 1 892 0
 1146 001a 0123     		movs	r3, #1
 1147 001c 7B62     		str	r3, [r7, #36]
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1148              		.loc 1 893 0
 1149 001e 0023     		movs	r3, #0
 1150 0020 87F82330 		strb	r3, [r7, #35]
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1151              		.loc 1 899 0
 1152 0024 FB68     		ldr	r3, [r7, #12]
 1153 0026 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1154 002a 012B     		cmp	r3, #1
 1155 002c 01D1     		bne	.L62
 1156              		.loc 1 899 0 is_stmt 0 discriminator 1
 1157 002e 0223     		movs	r3, #2
 1158 0030 CCE1     		b	.L63
 1159              	.L62:
 1160              		.loc 1 899 0 discriminator 2
 1161 0032 FB68     		ldr	r3, [r7, #12]
 1162 0034 0122     		movs	r2, #1
ARM GAS  /tmp/ccVrlOhd.s 			page 37


 1163 0036 83F85C20 		strb	r2, [r3, #92]
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1164              		.loc 1 902 0 is_stmt 1 discriminator 2
 1165 003a FFF7FEFF 		bl	HAL_GetTick
 1166 003e 7861     		str	r0, [r7, #20]
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp  = hspi->State;
 1167              		.loc 1 904 0 discriminator 2
 1168 0040 FB68     		ldr	r3, [r7, #12]
 1169 0042 93F85D30 		ldrb	r3, [r3, #93]
 1170 0046 DBB2     		uxtb	r3, r3
 1171 0048 FB61     		str	r3, [r7, #28]
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 1172              		.loc 1 905 0 discriminator 2
 1173 004a FB68     		ldr	r3, [r7, #12]
 1174 004c 5B68     		ldr	r3, [r3, #4]
 1175 004e BB61     		str	r3, [r7, #24]
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp == HAL_SPI_STATE_READY) || \
 1176              		.loc 1 907 0 discriminator 2
 1177 0050 FB69     		ldr	r3, [r7, #28]
 1178 0052 012B     		cmp	r3, #1
 1179 0054 0ED0     		beq	.L64
 1180              		.loc 1 907 0 is_stmt 0 discriminator 1
 1181 0056 BB69     		ldr	r3, [r7, #24]
 1182 0058 B3F5827F 		cmp	r3, #260
 1183 005c 06D1     		bne	.L65
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL
 1184              		.loc 1 908 0 is_stmt 1
 1185 005e FB68     		ldr	r3, [r7, #12]
 1186 0060 9B68     		ldr	r3, [r3, #8]
 1187 0062 002B     		cmp	r3, #0
 1188 0064 02D1     		bne	.L65
 1189              		.loc 1 908 0 is_stmt 0 discriminator 1
 1190 0066 FB69     		ldr	r3, [r7, #28]
 1191 0068 042B     		cmp	r3, #4
 1192 006a 03D0     		beq	.L64
 1193              	.L65:
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1194              		.loc 1 910 0 is_stmt 1
 1195 006c 0223     		movs	r3, #2
 1196 006e 87F82330 		strb	r3, [r7, #35]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1197              		.loc 1 911 0
 1198 0072 A1E1     		b	.L66
 1199              	.L64:
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 1200              		.loc 1 914 0
 1201 0074 BB68     		ldr	r3, [r7, #8]
 1202 0076 002B     		cmp	r3, #0
 1203 0078 05D0     		beq	.L67
 1204              		.loc 1 914 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccVrlOhd.s 			page 38


 1205 007a 7B68     		ldr	r3, [r7, #4]
 1206 007c 002B     		cmp	r3, #0
 1207 007e 02D0     		beq	.L67
 1208              		.loc 1 914 0 discriminator 2
 1209 0080 7B88     		ldrh	r3, [r7, #2]
 1210 0082 002B     		cmp	r3, #0
 1211 0084 03D1     		bne	.L68
 1212              	.L67:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1213              		.loc 1 916 0 is_stmt 1
 1214 0086 0123     		movs	r3, #1
 1215 0088 87F82330 		strb	r3, [r7, #35]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1216              		.loc 1 917 0
 1217 008c 94E1     		b	.L66
 1218              	.L68:
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 1219              		.loc 1 921 0
 1220 008e FB68     		ldr	r3, [r7, #12]
 1221 0090 93F85D30 		ldrb	r3, [r3, #93]
 1222 0094 DBB2     		uxtb	r3, r3
 1223 0096 042B     		cmp	r3, #4
 1224 0098 03D0     		beq	.L69
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1225              		.loc 1 923 0
 1226 009a FB68     		ldr	r3, [r7, #12]
 1227 009c 0522     		movs	r2, #5
 1228 009e 83F85D20 		strb	r2, [r3, #93]
 1229              	.L69:
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1230              		.loc 1 927 0
 1231 00a2 FB68     		ldr	r3, [r7, #12]
 1232 00a4 0022     		movs	r2, #0
 1233 00a6 1A66     		str	r2, [r3, #96]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1234              		.loc 1 928 0
 1235 00a8 FB68     		ldr	r3, [r7, #12]
 1236 00aa 7A68     		ldr	r2, [r7, #4]
 1237 00ac 1A64     		str	r2, [r3, #64]
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1238              		.loc 1 929 0
 1239 00ae FB68     		ldr	r3, [r7, #12]
 1240 00b0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1241 00b2 A3F84620 		strh	r2, [r3, #70]	@ movhi
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1242              		.loc 1 930 0
 1243 00b6 FB68     		ldr	r3, [r7, #12]
 1244 00b8 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1245 00ba A3F84420 		strh	r2, [r3, #68]	@ movhi
ARM GAS  /tmp/ccVrlOhd.s 			page 39


 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1246              		.loc 1 931 0
 1247 00be FB68     		ldr	r3, [r7, #12]
 1248 00c0 BA68     		ldr	r2, [r7, #8]
 1249 00c2 9A63     		str	r2, [r3, #56]
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1250              		.loc 1 932 0
 1251 00c4 FB68     		ldr	r3, [r7, #12]
 1252 00c6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1253 00c8 DA87     		strh	r2, [r3, #62]	@ movhi
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1254              		.loc 1 933 0
 1255 00ca FB68     		ldr	r3, [r7, #12]
 1256 00cc 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1257 00ce 9A87     		strh	r2, [r3, #60]	@ movhi
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1258              		.loc 1 936 0
 1259 00d0 FB68     		ldr	r3, [r7, #12]
 1260 00d2 0022     		movs	r2, #0
 1261 00d4 DA64     		str	r2, [r3, #76]
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1262              		.loc 1 937 0
 1263 00d6 FB68     		ldr	r3, [r7, #12]
 1264 00d8 0022     		movs	r2, #0
 1265 00da 1A65     		str	r2, [r3, #80]
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (hspi->RxXferCount > 1))
 1266              		.loc 1 948 0
 1267 00dc FB68     		ldr	r3, [r7, #12]
 1268 00de DB68     		ldr	r3, [r3, #12]
 1269 00e0 B3F5E06F 		cmp	r3, #1792
 1270 00e4 05D8     		bhi	.L70
 1271              		.loc 1 948 0 is_stmt 0 discriminator 1
 1272 00e6 FB68     		ldr	r3, [r7, #12]
 1273 00e8 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1274 00ec 9BB2     		uxth	r3, r3
 1275 00ee 012B     		cmp	r3, #1
 1276 00f0 08D9     		bls	.L71
 1277              	.L70:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1278              		.loc 1 951 0 is_stmt 1
 1279 00f2 FB68     		ldr	r3, [r7, #12]
 1280 00f4 1B68     		ldr	r3, [r3]
 1281 00f6 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 40


 1282 00f8 1268     		ldr	r2, [r2]
 1283 00fa 5268     		ldr	r2, [r2, #4]
 1284 00fc 22F48052 		bic	r2, r2, #4096
 1285 0100 5A60     		str	r2, [r3, #4]
 1286 0102 07E0     		b	.L72
 1287              	.L71:
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1288              		.loc 1 956 0
 1289 0104 FB68     		ldr	r3, [r7, #12]
 1290 0106 1B68     		ldr	r3, [r3]
 1291 0108 FA68     		ldr	r2, [r7, #12]
 1292 010a 1268     		ldr	r2, [r2]
 1293 010c 5268     		ldr	r2, [r2, #4]
 1294 010e 42F48052 		orr	r2, r2, #4096
 1295 0112 5A60     		str	r2, [r3, #4]
 1296              	.L72:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1297              		.loc 1 960 0
 1298 0114 FB68     		ldr	r3, [r7, #12]
 1299 0116 1B68     		ldr	r3, [r3]
 1300 0118 1B68     		ldr	r3, [r3]
 1301 011a 03F04003 		and	r3, r3, #64
 1302 011e 402B     		cmp	r3, #64
 1303 0120 07D0     		beq	.L73
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1304              		.loc 1 963 0
 1305 0122 FB68     		ldr	r3, [r7, #12]
 1306 0124 1B68     		ldr	r3, [r3]
 1307 0126 FA68     		ldr	r2, [r7, #12]
 1308 0128 1268     		ldr	r2, [r2]
 1309 012a 1268     		ldr	r2, [r2]
 1310 012c 42F04002 		orr	r2, r2, #64
 1311 0130 1A60     		str	r2, [r3]
 1312              	.L73:
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1313              		.loc 1 967 0
 1314 0132 FB68     		ldr	r3, [r7, #12]
 1315 0134 DB68     		ldr	r3, [r3, #12]
 1316 0136 B3F5E06F 		cmp	r3, #1792
 1317 013a 75D9     		bls	.L74
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01))
 1318              		.loc 1 969 0
 1319 013c FB68     		ldr	r3, [r7, #12]
 1320 013e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 41


 1321 0140 002B     		cmp	r3, #0
 1322 0142 04D0     		beq	.L75
 1323              		.loc 1 969 0 is_stmt 0 discriminator 1
 1324 0144 FB68     		ldr	r3, [r7, #12]
 1325 0146 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1326 0148 9BB2     		uxth	r3, r3
 1327 014a 012B     		cmp	r3, #1
 1328 014c 60D1     		bne	.L77
 1329              	.L75:
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)pTxData);
 1330              		.loc 1 971 0 is_stmt 1
 1331 014e FB68     		ldr	r3, [r7, #12]
 1332 0150 1B68     		ldr	r3, [r3]
 1333 0152 BA68     		ldr	r2, [r7, #8]
 1334 0154 1288     		ldrh	r2, [r2]
 1335 0156 DA60     		str	r2, [r3, #12]
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       pTxData += sizeof(uint16_t);
 1336              		.loc 1 972 0
 1337 0158 BB68     		ldr	r3, [r7, #8]
 1338 015a 0233     		adds	r3, r3, #2
 1339 015c BB60     		str	r3, [r7, #8]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1340              		.loc 1 973 0
 1341 015e FB68     		ldr	r3, [r7, #12]
 1342 0160 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1343 0162 9BB2     		uxth	r3, r3
 1344 0164 013B     		subs	r3, r3, #1
 1345 0166 9AB2     		uxth	r2, r3
 1346 0168 FB68     		ldr	r3, [r7, #12]
 1347 016a DA87     		strh	r2, [r3, #62]	@ movhi
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1348              		.loc 1 975 0
 1349 016c 50E0     		b	.L77
 1350              	.L80:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check TXE flag */
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (txallowed && (hspi->TxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)))
 1351              		.loc 1 978 0
 1352 016e 7B6A     		ldr	r3, [r7, #36]
 1353 0170 002B     		cmp	r3, #0
 1354 0172 1CD0     		beq	.L78
 1355              		.loc 1 978 0 is_stmt 0 discriminator 1
 1356 0174 FB68     		ldr	r3, [r7, #12]
 1357 0176 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1358 0178 9BB2     		uxth	r3, r3
 1359 017a 002B     		cmp	r3, #0
 1360 017c 17D0     		beq	.L78
 1361              		.loc 1 978 0 discriminator 2
 1362 017e FB68     		ldr	r3, [r7, #12]
 1363 0180 1B68     		ldr	r3, [r3]
 1364 0182 9B68     		ldr	r3, [r3, #8]
 1365 0184 03F00203 		and	r3, r3, #2
 1366 0188 022B     		cmp	r3, #2
 1367 018a 10D1     		bne	.L78
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccVrlOhd.s 			page 42


 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)pTxData);
 1368              		.loc 1 980 0 is_stmt 1
 1369 018c FB68     		ldr	r3, [r7, #12]
 1370 018e 1B68     		ldr	r3, [r3]
 1371 0190 BA68     		ldr	r2, [r7, #8]
 1372 0192 1288     		ldrh	r2, [r2]
 1373 0194 DA60     		str	r2, [r3, #12]
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pTxData += sizeof(uint16_t);
 1374              		.loc 1 981 0
 1375 0196 BB68     		ldr	r3, [r7, #8]
 1376 0198 0233     		adds	r3, r3, #2
 1377 019a BB60     		str	r3, [r7, #8]
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1378              		.loc 1 982 0
 1379 019c FB68     		ldr	r3, [r7, #12]
 1380 019e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1381 01a0 9BB2     		uxth	r3, r3
 1382 01a2 013B     		subs	r3, r3, #1
 1383 01a4 9AB2     		uxth	r2, r3
 1384 01a6 FB68     		ldr	r3, [r7, #12]
 1385 01a8 DA87     		strh	r2, [r3, #62]	@ movhi
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
 1386              		.loc 1 984 0
 1387 01aa 0023     		movs	r3, #0
 1388 01ac 7B62     		str	r3, [r7, #36]
 1389              	.L78:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (((hspi->Instance->CR1 & SPI_CR1_MSTR) == 0U) && ((hspi->Instance->CR2 & SPI_CR2_NSSP)
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check RXNE flag */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)))
 1390              		.loc 1 1001 0
 1391 01ae FB68     		ldr	r3, [r7, #12]
 1392 01b0 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1393 01b4 9BB2     		uxth	r3, r3
 1394 01b6 002B     		cmp	r3, #0
 1395 01b8 1AD0     		beq	.L79
 1396              		.loc 1 1001 0 is_stmt 0 discriminator 1
 1397 01ba FB68     		ldr	r3, [r7, #12]
 1398 01bc 1B68     		ldr	r3, [r3]
 1399 01be 9B68     		ldr	r3, [r3, #8]
 1400 01c0 03F00103 		and	r3, r3, #1
 1401 01c4 012B     		cmp	r3, #1
 1402 01c6 13D1     		bne	.L79
ARM GAS  /tmp/ccVrlOhd.s 			page 43


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)pRxData) = hspi->Instance->DR;
 1403              		.loc 1 1003 0 is_stmt 1
 1404 01c8 FB68     		ldr	r3, [r7, #12]
 1405 01ca 1B68     		ldr	r3, [r3]
 1406 01cc DB68     		ldr	r3, [r3, #12]
 1407 01ce 9AB2     		uxth	r2, r3
 1408 01d0 7B68     		ldr	r3, [r7, #4]
 1409 01d2 1A80     		strh	r2, [r3]	@ movhi
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pRxData += sizeof(uint16_t);
 1410              		.loc 1 1004 0
 1411 01d4 7B68     		ldr	r3, [r7, #4]
 1412 01d6 0233     		adds	r3, r3, #2
 1413 01d8 7B60     		str	r3, [r7, #4]
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 1414              		.loc 1 1005 0
 1415 01da FB68     		ldr	r3, [r7, #12]
 1416 01dc B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1417 01e0 9BB2     		uxth	r3, r3
 1418 01e2 013B     		subs	r3, r3, #1
 1419 01e4 9AB2     		uxth	r2, r3
 1420 01e6 FB68     		ldr	r3, [r7, #12]
 1421 01e8 A3F84620 		strh	r2, [r3, #70]	@ movhi
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
 1422              		.loc 1 1007 0
 1423 01ec 0123     		movs	r3, #1
 1424 01ee 7B62     		str	r3, [r7, #36]
 1425              	.L79:
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Timeout))
 1426              		.loc 1 1009 0
 1427 01f0 3B6B     		ldr	r3, [r7, #48]
 1428 01f2 B3F1FF3F 		cmp	r3, #-1
 1429 01f6 0BD0     		beq	.L77
 1430              		.loc 1 1009 0 is_stmt 0 discriminator 1
 1431 01f8 FFF7FEFF 		bl	HAL_GetTick
 1432 01fc 0246     		mov	r2, r0
 1433 01fe 7B69     		ldr	r3, [r7, #20]
 1434 0200 D21A     		subs	r2, r2, r3
 1435 0202 3B6B     		ldr	r3, [r7, #48]
 1436 0204 9A42     		cmp	r2, r3
 1437 0206 03D3     		bcc	.L77
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1438              		.loc 1 1011 0 is_stmt 1
 1439 0208 0323     		movs	r3, #3
 1440 020a 87F82330 		strb	r3, [r7, #35]
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1441              		.loc 1 1012 0
 1442 020e D3E0     		b	.L66
 1443              	.L77:
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1444              		.loc 1 975 0
 1445 0210 FB68     		ldr	r3, [r7, #12]
 1446 0212 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1447 0214 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVrlOhd.s 			page 44


 1448 0216 002B     		cmp	r3, #0
 1449 0218 A9D1     		bne	.L80
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1450              		.loc 1 975 0 is_stmt 0 discriminator 1
 1451 021a FB68     		ldr	r3, [r7, #12]
 1452 021c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1453 0220 9BB2     		uxth	r3, r3
 1454 0222 002B     		cmp	r3, #0
 1455 0224 A3D1     		bne	.L80
 1456 0226 B5E0     		b	.L81
 1457              	.L74:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01))
 1458              		.loc 1 1019 0 is_stmt 1
 1459 0228 FB68     		ldr	r3, [r7, #12]
 1460 022a 5B68     		ldr	r3, [r3, #4]
 1461 022c 002B     		cmp	r3, #0
 1462 022e 05D0     		beq	.L82
 1463              		.loc 1 1019 0 is_stmt 0 discriminator 1
 1464 0230 FB68     		ldr	r3, [r7, #12]
 1465 0232 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1466 0234 9BB2     		uxth	r3, r3
 1467 0236 012B     		cmp	r3, #1
 1468 0238 40F09F80 		bne	.L84
 1469              	.L82:
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*pTxData);
 1470              		.loc 1 1021 0 is_stmt 1
 1471 023c FB68     		ldr	r3, [r7, #12]
 1472 023e 1B68     		ldr	r3, [r3]
 1473 0240 0C33     		adds	r3, r3, #12
 1474 0242 BA68     		ldr	r2, [r7, #8]
 1475 0244 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1476 0246 1A70     		strb	r2, [r3]
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       pTxData += sizeof(uint8_t);
 1477              		.loc 1 1022 0
 1478 0248 BB68     		ldr	r3, [r7, #8]
 1479 024a 0133     		adds	r3, r3, #1
 1480 024c BB60     		str	r3, [r7, #8]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1481              		.loc 1 1023 0
 1482 024e FB68     		ldr	r3, [r7, #12]
 1483 0250 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1484 0252 9BB2     		uxth	r3, r3
 1485 0254 013B     		subs	r3, r3, #1
 1486 0256 9AB2     		uxth	r2, r3
 1487 0258 FB68     		ldr	r3, [r7, #12]
 1488 025a DA87     		strh	r2, [r3, #62]	@ movhi
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1489              		.loc 1 1025 0
 1490 025c 8DE0     		b	.L84
ARM GAS  /tmp/ccVrlOhd.s 			page 45


 1491              	.L92:
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* check TXE flag */
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (txallowed && (hspi->TxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)))
 1492              		.loc 1 1028 0
 1493 025e 7B6A     		ldr	r3, [r7, #36]
 1494 0260 002B     		cmp	r3, #0
 1495 0262 32D0     		beq	.L85
 1496              		.loc 1 1028 0 is_stmt 0 discriminator 1
 1497 0264 FB68     		ldr	r3, [r7, #12]
 1498 0266 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1499 0268 9BB2     		uxth	r3, r3
 1500 026a 002B     		cmp	r3, #0
 1501 026c 2DD0     		beq	.L85
 1502              		.loc 1 1028 0 discriminator 2
 1503 026e FB68     		ldr	r3, [r7, #12]
 1504 0270 1B68     		ldr	r3, [r3]
 1505 0272 9B68     		ldr	r3, [r3, #8]
 1506 0274 03F00203 		and	r3, r3, #2
 1507 0278 022B     		cmp	r3, #2
 1508 027a 26D1     		bne	.L85
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 1509              		.loc 1 1030 0 is_stmt 1
 1510 027c FB68     		ldr	r3, [r7, #12]
 1511 027e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1512 0280 9BB2     		uxth	r3, r3
 1513 0282 012B     		cmp	r3, #1
 1514 0284 0FD9     		bls	.L86
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)pTxData);
 1515              		.loc 1 1032 0
 1516 0286 FB68     		ldr	r3, [r7, #12]
 1517 0288 1B68     		ldr	r3, [r3]
 1518 028a BA68     		ldr	r2, [r7, #8]
 1519 028c 1288     		ldrh	r2, [r2]
 1520 028e DA60     		str	r2, [r3, #12]
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           pTxData += sizeof(uint16_t);
 1521              		.loc 1 1033 0
 1522 0290 BB68     		ldr	r3, [r7, #8]
 1523 0292 0233     		adds	r3, r3, #2
 1524 0294 BB60     		str	r3, [r7, #8]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1525              		.loc 1 1034 0
 1526 0296 FB68     		ldr	r3, [r7, #12]
 1527 0298 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1528 029a 9BB2     		uxth	r3, r3
 1529 029c 023B     		subs	r3, r3, #2
 1530 029e 9AB2     		uxth	r2, r3
 1531 02a0 FB68     		ldr	r3, [r7, #12]
 1532 02a2 DA87     		strh	r2, [r3, #62]	@ movhi
 1533 02a4 0FE0     		b	.L87
 1534              	.L86:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*pTxData++);
ARM GAS  /tmp/ccVrlOhd.s 			page 46


 1535              		.loc 1 1038 0
 1536 02a6 FB68     		ldr	r3, [r7, #12]
 1537 02a8 1B68     		ldr	r3, [r3]
 1538 02aa 03F10C02 		add	r2, r3, #12
 1539 02ae BB68     		ldr	r3, [r7, #8]
 1540 02b0 591C     		adds	r1, r3, #1
 1541 02b2 B960     		str	r1, [r7, #8]
 1542 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1543 02b6 1370     		strb	r3, [r2]
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 1544              		.loc 1 1039 0
 1545 02b8 FB68     		ldr	r3, [r7, #12]
 1546 02ba DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1547 02bc 9BB2     		uxth	r3, r3
 1548 02be 013B     		subs	r3, r3, #1
 1549 02c0 9AB2     		uxth	r2, r3
 1550 02c2 FB68     		ldr	r3, [r7, #12]
 1551 02c4 DA87     		strh	r2, [r3, #62]	@ movhi
 1552              	.L87:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
 1553              		.loc 1 1042 0
 1554 02c6 0023     		movs	r3, #0
 1555 02c8 7B62     		str	r3, [r7, #36]
 1556              	.L85:
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (((hspi->Instance->CR1 & SPI_CR1_MSTR) == 0U) && ((hspi->Instance->CR2 & SPI_CR2_NSSP)
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)))
 1557              		.loc 1 1059 0
 1558 02ca FB68     		ldr	r3, [r7, #12]
 1559 02cc B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1560 02d0 9BB2     		uxth	r3, r3
 1561 02d2 002B     		cmp	r3, #0
 1562 02d4 41D0     		beq	.L88
 1563              		.loc 1 1059 0 is_stmt 0 discriminator 1
 1564 02d6 FB68     		ldr	r3, [r7, #12]
 1565 02d8 1B68     		ldr	r3, [r3]
 1566 02da 9B68     		ldr	r3, [r3, #8]
 1567 02dc 03F00103 		and	r3, r3, #1
 1568 02e0 012B     		cmp	r3, #1
 1569 02e2 3AD1     		bne	.L88
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccVrlOhd.s 			page 47


1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
 1570              		.loc 1 1061 0 is_stmt 1
 1571 02e4 FB68     		ldr	r3, [r7, #12]
 1572 02e6 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1573 02ea 9BB2     		uxth	r3, r3
 1574 02ec 012B     		cmp	r3, #1
 1575 02ee 20D9     		bls	.L89
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((uint16_t *)pRxData) = hspi->Instance->DR;
 1576              		.loc 1 1063 0
 1577 02f0 FB68     		ldr	r3, [r7, #12]
 1578 02f2 1B68     		ldr	r3, [r3]
 1579 02f4 DB68     		ldr	r3, [r3, #12]
 1580 02f6 9AB2     		uxth	r2, r3
 1581 02f8 7B68     		ldr	r3, [r7, #4]
 1582 02fa 1A80     		strh	r2, [r3]	@ movhi
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           pRxData += sizeof(uint16_t);
 1583              		.loc 1 1064 0
 1584 02fc 7B68     		ldr	r3, [r7, #4]
 1585 02fe 0233     		adds	r3, r3, #2
 1586 0300 7B60     		str	r3, [r7, #4]
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1587              		.loc 1 1065 0
 1588 0302 FB68     		ldr	r3, [r7, #12]
 1589 0304 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1590 0308 9BB2     		uxth	r3, r3
 1591 030a 023B     		subs	r3, r3, #2
 1592 030c 9AB2     		uxth	r2, r3
 1593 030e FB68     		ldr	r3, [r7, #12]
 1594 0310 A3F84620 		strh	r2, [r3, #70]	@ movhi
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1595              		.loc 1 1066 0
 1596 0314 FB68     		ldr	r3, [r7, #12]
 1597 0316 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1598 031a 9BB2     		uxth	r3, r3
 1599 031c 012B     		cmp	r3, #1
 1600 031e 1AD8     		bhi	.L91
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* set fiforxthreshold before to switch on 8 bit data size */
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1601              		.loc 1 1069 0
 1602 0320 FB68     		ldr	r3, [r7, #12]
 1603 0322 1B68     		ldr	r3, [r3]
 1604 0324 FA68     		ldr	r2, [r7, #12]
 1605 0326 1268     		ldr	r2, [r2]
 1606 0328 5268     		ldr	r2, [r2, #4]
 1607 032a 42F48052 		orr	r2, r2, #4096
 1608 032e 5A60     		str	r2, [r3, #4]
 1609 0330 11E0     		b	.L91
 1610              	.L89:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (*pRxData++) = *(__IO uint8_t *)&hspi->Instance->DR;
 1611              		.loc 1 1074 0
 1612 0332 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 48


 1613 0334 5A1C     		adds	r2, r3, #1
 1614 0336 7A60     		str	r2, [r7, #4]
 1615 0338 FA68     		ldr	r2, [r7, #12]
 1616 033a 1268     		ldr	r2, [r2]
 1617 033c 0C32     		adds	r2, r2, #12
 1618 033e 1278     		ldrb	r2, [r2]
 1619 0340 D2B2     		uxtb	r2, r2
 1620 0342 1A70     		strb	r2, [r3]
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount--;
 1621              		.loc 1 1075 0
 1622 0344 FB68     		ldr	r3, [r7, #12]
 1623 0346 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1624 034a 9BB2     		uxth	r3, r3
 1625 034c 013B     		subs	r3, r3, #1
 1626 034e 9AB2     		uxth	r2, r3
 1627 0350 FB68     		ldr	r3, [r7, #12]
 1628 0352 A3F84620 		strh	r2, [r3, #70]	@ movhi
 1629              	.L91:
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
 1630              		.loc 1 1078 0
 1631 0356 0123     		movs	r3, #1
 1632 0358 7B62     		str	r3, [r7, #36]
 1633              	.L88:
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Timeout))
 1634              		.loc 1 1080 0
 1635 035a 3B6B     		ldr	r3, [r7, #48]
 1636 035c B3F1FF3F 		cmp	r3, #-1
 1637 0360 0BD0     		beq	.L84
 1638              		.loc 1 1080 0 is_stmt 0 discriminator 1
 1639 0362 FFF7FEFF 		bl	HAL_GetTick
 1640 0366 0246     		mov	r2, r0
 1641 0368 7B69     		ldr	r3, [r7, #20]
 1642 036a D21A     		subs	r2, r2, r3
 1643 036c 3B6B     		ldr	r3, [r7, #48]
 1644 036e 9A42     		cmp	r2, r3
 1645 0370 03D3     		bcc	.L84
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1646              		.loc 1 1082 0 is_stmt 1
 1647 0372 0323     		movs	r3, #3
 1648 0374 87F82330 		strb	r3, [r7, #35]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1649              		.loc 1 1083 0
 1650 0378 1EE0     		b	.L66
 1651              	.L84:
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1652              		.loc 1 1025 0
 1653 037a FB68     		ldr	r3, [r7, #12]
 1654 037c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1655 037e 9BB2     		uxth	r3, r3
 1656 0380 002B     		cmp	r3, #0
 1657 0382 7FF46CAF 		bne	.L92
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1658              		.loc 1 1025 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccVrlOhd.s 			page 49


 1659 0386 FB68     		ldr	r3, [r7, #12]
 1660 0388 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1661 038c 9BB2     		uxth	r3, r3
 1662 038e 002B     		cmp	r3, #0
 1663 0390 7FF465AF 		bne	.L92
 1664              	.L81:
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait until TXE flag */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Error on the CRC reception */
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear CRC Flag */
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
ARM GAS  /tmp/ccVrlOhd.s 			page 50


1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1665              		.loc 1 1141 0 is_stmt 1
 1666 0394 7A69     		ldr	r2, [r7, #20]
 1667 0396 396B     		ldr	r1, [r7, #48]
 1668 0398 F868     		ldr	r0, [r7, #12]
 1669 039a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1670 039e 0346     		mov	r3, r0
 1671 03a0 002B     		cmp	r3, #0
 1672 03a2 02D0     		beq	.L93
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1673              		.loc 1 1143 0
 1674 03a4 FB68     		ldr	r3, [r7, #12]
 1675 03a6 2022     		movs	r2, #32
 1676 03a8 1A66     		str	r2, [r3, #96]
 1677              	.L93:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1678              		.loc 1 1146 0
 1679 03aa FB68     		ldr	r3, [r7, #12]
 1680 03ac 1B6E     		ldr	r3, [r3, #96]
 1681 03ae 002B     		cmp	r3, #0
 1682 03b0 02D0     		beq	.L66
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1683              		.loc 1 1148 0
 1684 03b2 0123     		movs	r3, #1
 1685 03b4 87F82330 		strb	r3, [r7, #35]
 1686              	.L66:
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1687              		.loc 1 1152 0
 1688 03b8 FB68     		ldr	r3, [r7, #12]
 1689 03ba 0122     		movs	r2, #1
 1690 03bc 83F85D20 		strb	r2, [r3, #93]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1691              		.loc 1 1153 0
 1692 03c0 FB68     		ldr	r3, [r7, #12]
 1693 03c2 0022     		movs	r2, #0
 1694 03c4 83F85C20 		strb	r2, [r3, #92]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1695              		.loc 1 1154 0
 1696 03c8 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1697              	.L63:
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1698              		.loc 1 1155 0
 1699 03cc 1846     		mov	r0, r3
 1700 03ce 2837     		adds	r7, r7, #40
ARM GAS  /tmp/ccVrlOhd.s 			page 51


 1701              	.LCFI35:
 1702              		.cfi_def_cfa_offset 8
 1703 03d0 BD46     		mov	sp, r7
 1704              	.LCFI36:
 1705              		.cfi_def_cfa_register 13
 1706              		@ sp needed
 1707 03d2 80BD     		pop	{r7, pc}
 1708              		.cfi_endproc
 1709              	.LFE142:
 1711              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1712              		.align	1
 1713              		.global	HAL_SPI_Transmit_IT
 1714              		.syntax unified
 1715              		.thumb
 1716              		.thumb_func
 1717              		.fpu fpv4-sp-d16
 1719              	HAL_SPI_Transmit_IT:
 1720              	.LFB143:
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 1721              		.loc 1 1166 0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 24
 1724              		@ frame_needed = 1, uses_anonymous_args = 0
 1725              		@ link register save eliminated.
 1726 0000 80B4     		push	{r7}
 1727              	.LCFI37:
 1728              		.cfi_def_cfa_offset 4
 1729              		.cfi_offset 7, -4
 1730 0002 87B0     		sub	sp, sp, #28
 1731              	.LCFI38:
 1732              		.cfi_def_cfa_offset 32
 1733 0004 00AF     		add	r7, sp, #0
 1734              	.LCFI39:
 1735              		.cfi_def_cfa_register 7
 1736 0006 F860     		str	r0, [r7, #12]
 1737 0008 B960     		str	r1, [r7, #8]
 1738 000a 1346     		mov	r3, r2
 1739 000c FB80     		strh	r3, [r7, #6]	@ movhi
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1740              		.loc 1 1167 0
 1741 000e 0023     		movs	r3, #0
 1742 0010 FB75     		strb	r3, [r7, #23]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
ARM GAS  /tmp/ccVrlOhd.s 			page 52


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1743              		.loc 1 1173 0
 1744 0012 FB68     		ldr	r3, [r7, #12]
 1745 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1746 0018 012B     		cmp	r3, #1
 1747 001a 01D1     		bne	.L95
 1748              		.loc 1 1173 0 is_stmt 0 discriminator 1
 1749 001c 0223     		movs	r3, #2
 1750 001e 68E0     		b	.L96
 1751              	.L95:
 1752              		.loc 1 1173 0 discriminator 2
 1753 0020 FB68     		ldr	r3, [r7, #12]
 1754 0022 0122     		movs	r2, #1
 1755 0024 83F85C20 		strb	r2, [r3, #92]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 1756              		.loc 1 1175 0 is_stmt 1 discriminator 2
 1757 0028 BB68     		ldr	r3, [r7, #8]
 1758 002a 002B     		cmp	r3, #0
 1759 002c 02D0     		beq	.L97
 1760              		.loc 1 1175 0 is_stmt 0 discriminator 1
 1761 002e FB88     		ldrh	r3, [r7, #6]
 1762 0030 002B     		cmp	r3, #0
 1763 0032 02D1     		bne	.L98
 1764              	.L97:
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1765              		.loc 1 1177 0 is_stmt 1
 1766 0034 0123     		movs	r3, #1
 1767 0036 FB75     		strb	r3, [r7, #23]
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1768              		.loc 1 1178 0
 1769 0038 56E0     		b	.L99
 1770              	.L98:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1771              		.loc 1 1181 0
 1772 003a FB68     		ldr	r3, [r7, #12]
 1773 003c 93F85D30 		ldrb	r3, [r3, #93]
 1774 0040 DBB2     		uxtb	r3, r3
 1775 0042 012B     		cmp	r3, #1
 1776 0044 02D0     		beq	.L100
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1777              		.loc 1 1183 0
 1778 0046 0223     		movs	r3, #2
 1779 0048 FB75     		strb	r3, [r7, #23]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1780              		.loc 1 1184 0
 1781 004a 4DE0     		b	.L99
 1782              	.L100:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 1783              		.loc 1 1188 0
ARM GAS  /tmp/ccVrlOhd.s 			page 53


 1784 004c FB68     		ldr	r3, [r7, #12]
 1785 004e 0322     		movs	r2, #3
 1786 0050 83F85D20 		strb	r2, [r3, #93]
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1787              		.loc 1 1189 0
 1788 0054 FB68     		ldr	r3, [r7, #12]
 1789 0056 0022     		movs	r2, #0
 1790 0058 1A66     		str	r2, [r3, #96]
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1791              		.loc 1 1190 0
 1792 005a FB68     		ldr	r3, [r7, #12]
 1793 005c BA68     		ldr	r2, [r7, #8]
 1794 005e 9A63     		str	r2, [r3, #56]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1795              		.loc 1 1191 0
 1796 0060 FB68     		ldr	r3, [r7, #12]
 1797 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1798 0064 9A87     		strh	r2, [r3, #60]	@ movhi
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1799              		.loc 1 1192 0
 1800 0066 FB68     		ldr	r3, [r7, #12]
 1801 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1802 006a DA87     		strh	r2, [r3, #62]	@ movhi
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 1803              		.loc 1 1195 0
 1804 006c FB68     		ldr	r3, [r7, #12]
 1805 006e 0022     		movs	r2, #0
 1806 0070 1A64     		str	r2, [r3, #64]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1807              		.loc 1 1196 0
 1808 0072 FB68     		ldr	r3, [r7, #12]
 1809 0074 0022     		movs	r2, #0
 1810 0076 A3F84420 		strh	r2, [r3, #68]	@ movhi
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1811              		.loc 1 1197 0
 1812 007a FB68     		ldr	r3, [r7, #12]
 1813 007c 0022     		movs	r2, #0
 1814 007e A3F84620 		strh	r2, [r3, #70]	@ movhi
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1815              		.loc 1 1198 0
 1816 0082 FB68     		ldr	r3, [r7, #12]
 1817 0084 0022     		movs	r2, #0
 1818 0086 DA64     		str	r2, [r3, #76]
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1819              		.loc 1 1201 0
 1820 0088 FB68     		ldr	r3, [r7, #12]
 1821 008a DB68     		ldr	r3, [r3, #12]
 1822 008c B3F5E06F 		cmp	r3, #1792
 1823 0090 03D9     		bls	.L101
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
 1824              		.loc 1 1203 0
 1825 0092 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 54


 1826 0094 1A4A     		ldr	r2, .L104
 1827 0096 1A65     		str	r2, [r3, #80]
 1828 0098 02E0     		b	.L102
 1829              	.L101:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
 1830              		.loc 1 1207 0
 1831 009a FB68     		ldr	r3, [r7, #12]
 1832 009c 194A     		ldr	r2, .L104+4
 1833 009e 1A65     		str	r2, [r3, #80]
 1834              	.L102:
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1835              		.loc 1 1211 0
 1836 00a0 FB68     		ldr	r3, [r7, #12]
 1837 00a2 9B68     		ldr	r3, [r3, #8]
 1838 00a4 B3F5004F 		cmp	r3, #32768
 1839 00a8 07D1     		bne	.L103
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 1840              		.loc 1 1213 0
 1841 00aa FB68     		ldr	r3, [r7, #12]
 1842 00ac 1B68     		ldr	r3, [r3]
 1843 00ae FA68     		ldr	r2, [r7, #12]
 1844 00b0 1268     		ldr	r2, [r2]
 1845 00b2 1268     		ldr	r2, [r2]
 1846 00b4 42F48042 		orr	r2, r2, #16384
 1847 00b8 1A60     		str	r2, [r3]
 1848              	.L103:
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 1849              		.loc 1 1225 0
 1850 00ba FB68     		ldr	r3, [r7, #12]
 1851 00bc 1B68     		ldr	r3, [r3]
 1852 00be FA68     		ldr	r2, [r7, #12]
 1853 00c0 1268     		ldr	r2, [r2]
 1854 00c2 5268     		ldr	r2, [r2, #4]
 1855 00c4 42F0A002 		orr	r2, r2, #160
 1856 00c8 5A60     		str	r2, [r3, #4]
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
ARM GAS  /tmp/ccVrlOhd.s 			page 55


 1857              		.loc 1 1229 0
 1858 00ca FB68     		ldr	r3, [r7, #12]
 1859 00cc 1B68     		ldr	r3, [r3]
 1860 00ce 1B68     		ldr	r3, [r3]
 1861 00d0 03F04003 		and	r3, r3, #64
 1862 00d4 402B     		cmp	r3, #64
 1863 00d6 07D0     		beq	.L99
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1864              		.loc 1 1232 0
 1865 00d8 FB68     		ldr	r3, [r7, #12]
 1866 00da 1B68     		ldr	r3, [r3]
 1867 00dc FA68     		ldr	r2, [r7, #12]
 1868 00de 1268     		ldr	r2, [r2]
 1869 00e0 1268     		ldr	r2, [r2]
 1870 00e2 42F04002 		orr	r2, r2, #64
 1871 00e6 1A60     		str	r2, [r3]
 1872              	.L99:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1873              		.loc 1 1236 0
 1874 00e8 FB68     		ldr	r3, [r7, #12]
 1875 00ea 0022     		movs	r2, #0
 1876 00ec 83F85C20 		strb	r2, [r3, #92]
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1877              		.loc 1 1237 0
 1878 00f0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1879              	.L96:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1880              		.loc 1 1238 0
 1881 00f2 1846     		mov	r0, r3
 1882 00f4 1C37     		adds	r7, r7, #28
 1883              	.LCFI40:
 1884              		.cfi_def_cfa_offset 4
 1885 00f6 BD46     		mov	sp, r7
 1886              	.LCFI41:
 1887              		.cfi_def_cfa_register 13
 1888              		@ sp needed
 1889 00f8 5DF8047B 		ldr	r7, [sp], #4
 1890              	.LCFI42:
 1891              		.cfi_restore 7
 1892              		.cfi_def_cfa_offset 0
 1893 00fc 7047     		bx	lr
 1894              	.L105:
 1895 00fe 00BF     		.align	2
 1896              	.L104:
 1897 0100 00000000 		.word	SPI_TxISR_16BIT
 1898 0104 00000000 		.word	SPI_TxISR_8BIT
 1899              		.cfi_endproc
 1900              	.LFE143:
 1902              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 1903              		.align	1
 1904              		.global	HAL_SPI_Receive_IT
 1905              		.syntax unified
ARM GAS  /tmp/ccVrlOhd.s 			page 56


 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu fpv4-sp-d16
 1910              	HAL_SPI_Receive_IT:
 1911              	.LFB144:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 1912              		.loc 1 1249 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 24
 1915              		@ frame_needed = 1, uses_anonymous_args = 0
 1916 0000 80B5     		push	{r7, lr}
 1917              	.LCFI43:
 1918              		.cfi_def_cfa_offset 8
 1919              		.cfi_offset 7, -8
 1920              		.cfi_offset 14, -4
 1921 0002 86B0     		sub	sp, sp, #24
 1922              	.LCFI44:
 1923              		.cfi_def_cfa_offset 32
 1924 0004 00AF     		add	r7, sp, #0
 1925              	.LCFI45:
 1926              		.cfi_def_cfa_register 7
 1927 0006 F860     		str	r0, [r7, #12]
 1928 0008 B960     		str	r1, [r7, #8]
 1929 000a 1346     		mov	r3, r2
 1930 000c FB80     		strh	r3, [r7, #6]	@ movhi
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1931              		.loc 1 1250 0
 1932 000e 0023     		movs	r3, #0
 1933 0010 FB75     		strb	r3, [r7, #23]
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 1934              		.loc 1 1252 0
 1935 0012 FB68     		ldr	r3, [r7, #12]
 1936 0014 9B68     		ldr	r3, [r3, #8]
 1937 0016 002B     		cmp	r3, #0
 1938 0018 10D1     		bne	.L107
 1939              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1940 001a FB68     		ldr	r3, [r7, #12]
 1941 001c 5B68     		ldr	r3, [r3, #4]
 1942 001e B3F5827F 		cmp	r3, #260
 1943 0022 0BD1     		bne	.L107
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 1944              		.loc 1 1254 0 is_stmt 1
 1945 0024 FB68     		ldr	r3, [r7, #12]
 1946 0026 0422     		movs	r2, #4
 1947 0028 83F85D20 		strb	r2, [r3, #93]
ARM GAS  /tmp/ccVrlOhd.s 			page 57


1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 1948              		.loc 1 1256 0
 1949 002c FB88     		ldrh	r3, [r7, #6]
 1950 002e BA68     		ldr	r2, [r7, #8]
 1951 0030 B968     		ldr	r1, [r7, #8]
 1952 0032 F868     		ldr	r0, [r7, #12]
 1953 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 1954 0038 0346     		mov	r3, r0
 1955 003a 7FE0     		b	.L108
 1956              	.L107:
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1957              		.loc 1 1260 0
 1958 003c FB68     		ldr	r3, [r7, #12]
 1959 003e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1960 0042 012B     		cmp	r3, #1
 1961 0044 01D1     		bne	.L109
 1962              		.loc 1 1260 0 is_stmt 0 discriminator 1
 1963 0046 0223     		movs	r3, #2
 1964 0048 78E0     		b	.L108
 1965              	.L109:
 1966              		.loc 1 1260 0 discriminator 2
 1967 004a FB68     		ldr	r3, [r7, #12]
 1968 004c 0122     		movs	r2, #1
 1969 004e 83F85C20 		strb	r2, [r3, #92]
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1970              		.loc 1 1262 0 is_stmt 1 discriminator 2
 1971 0052 FB68     		ldr	r3, [r7, #12]
 1972 0054 93F85D30 		ldrb	r3, [r3, #93]
 1973 0058 DBB2     		uxtb	r3, r3
 1974 005a 012B     		cmp	r3, #1
 1975 005c 02D0     		beq	.L110
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1976              		.loc 1 1264 0
 1977 005e 0223     		movs	r3, #2
 1978 0060 FB75     		strb	r3, [r7, #23]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1979              		.loc 1 1265 0
 1980 0062 66E0     		b	.L111
 1981              	.L110:
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 1982              		.loc 1 1268 0
 1983 0064 BB68     		ldr	r3, [r7, #8]
 1984 0066 002B     		cmp	r3, #0
 1985 0068 02D0     		beq	.L112
 1986              		.loc 1 1268 0 is_stmt 0 discriminator 1
 1987 006a FB88     		ldrh	r3, [r7, #6]
 1988 006c 002B     		cmp	r3, #0
 1989 006e 02D1     		bne	.L113
 1990              	.L112:
ARM GAS  /tmp/ccVrlOhd.s 			page 58


1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1991              		.loc 1 1270 0 is_stmt 1
 1992 0070 0123     		movs	r3, #1
 1993 0072 FB75     		strb	r3, [r7, #23]
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1994              		.loc 1 1271 0
 1995 0074 5DE0     		b	.L111
 1996              	.L113:
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 1997              		.loc 1 1275 0
 1998 0076 FB68     		ldr	r3, [r7, #12]
 1999 0078 0422     		movs	r2, #4
 2000 007a 83F85D20 		strb	r2, [r3, #93]
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2001              		.loc 1 1276 0
 2002 007e FB68     		ldr	r3, [r7, #12]
 2003 0080 0022     		movs	r2, #0
 2004 0082 1A66     		str	r2, [r3, #96]
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2005              		.loc 1 1277 0
 2006 0084 FB68     		ldr	r3, [r7, #12]
 2007 0086 BA68     		ldr	r2, [r7, #8]
 2008 0088 1A64     		str	r2, [r3, #64]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2009              		.loc 1 1278 0
 2010 008a FB68     		ldr	r3, [r7, #12]
 2011 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2012 008e A3F84420 		strh	r2, [r3, #68]	@ movhi
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2013              		.loc 1 1279 0
 2014 0092 FB68     		ldr	r3, [r7, #12]
 2015 0094 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2016 0096 A3F84620 		strh	r2, [r3, #70]	@ movhi
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 2017              		.loc 1 1282 0
 2018 009a FB68     		ldr	r3, [r7, #12]
 2019 009c 0022     		movs	r2, #0
 2020 009e 9A63     		str	r2, [r3, #56]
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2021              		.loc 1 1283 0
 2022 00a0 FB68     		ldr	r3, [r7, #12]
 2023 00a2 0022     		movs	r2, #0
 2024 00a4 9A87     		strh	r2, [r3, #60]	@ movhi
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2025              		.loc 1 1284 0
 2026 00a6 FB68     		ldr	r3, [r7, #12]
 2027 00a8 0022     		movs	r2, #0
 2028 00aa DA87     		strh	r2, [r3, #62]	@ movhi
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2029              		.loc 1 1285 0
 2030 00ac FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 59


 2031 00ae 0022     		movs	r2, #0
 2032 00b0 1A65     		str	r2, [r3, #80]
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check the data size to adapt Rx threshold and the set the function for IT treatment */
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2033              		.loc 1 1288 0
 2034 00b2 FB68     		ldr	r3, [r7, #12]
 2035 00b4 DB68     		ldr	r3, [r3, #12]
 2036 00b6 B3F5E06F 		cmp	r3, #1792
 2037 00ba 0BD9     		bls	.L114
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16 bit */
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2038              		.loc 1 1291 0
 2039 00bc FB68     		ldr	r3, [r7, #12]
 2040 00be 1B68     		ldr	r3, [r3]
 2041 00c0 FA68     		ldr	r2, [r7, #12]
 2042 00c2 1268     		ldr	r2, [r2]
 2043 00c4 5268     		ldr	r2, [r2, #4]
 2044 00c6 22F48052 		bic	r2, r2, #4096
 2045 00ca 5A60     		str	r2, [r3, #4]
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2046              		.loc 1 1292 0
 2047 00cc FB68     		ldr	r3, [r7, #12]
 2048 00ce 1D4A     		ldr	r2, .L117
 2049 00d0 DA64     		str	r2, [r3, #76]
 2050 00d2 0AE0     		b	.L115
 2051              	.L114:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8 bit */
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2052              		.loc 1 1297 0
 2053 00d4 FB68     		ldr	r3, [r7, #12]
 2054 00d6 1B68     		ldr	r3, [r3]
 2055 00d8 FA68     		ldr	r2, [r7, #12]
 2056 00da 1268     		ldr	r2, [r2]
 2057 00dc 5268     		ldr	r2, [r2, #4]
 2058 00de 42F48052 		orr	r2, r2, #4096
 2059 00e2 5A60     		str	r2, [r3, #4]
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2060              		.loc 1 1298 0
 2061 00e4 FB68     		ldr	r3, [r7, #12]
 2062 00e6 184A     		ldr	r2, .L117+4
 2063 00e8 DA64     		str	r2, [r3, #76]
 2064              	.L115:
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2065              		.loc 1 1302 0
 2066 00ea FB68     		ldr	r3, [r7, #12]
 2067 00ec 9B68     		ldr	r3, [r3, #8]
 2068 00ee B3F5004F 		cmp	r3, #32768
 2069 00f2 07D1     		bne	.L116
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVrlOhd.s 			page 60


1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2070              		.loc 1 1304 0
 2071 00f4 FB68     		ldr	r3, [r7, #12]
 2072 00f6 1B68     		ldr	r3, [r3]
 2073 00f8 FA68     		ldr	r2, [r7, #12]
 2074 00fa 1268     		ldr	r2, [r2]
 2075 00fc 1268     		ldr	r2, [r2]
 2076 00fe 22F48042 		bic	r2, r2, #16384
 2077 0102 1A60     		str	r2, [r3]
 2078              	.L116:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2079              		.loc 1 1325 0
 2080 0104 FB68     		ldr	r3, [r7, #12]
 2081 0106 1B68     		ldr	r3, [r3]
 2082 0108 FA68     		ldr	r2, [r7, #12]
 2083 010a 1268     		ldr	r2, [r2]
 2084 010c 5268     		ldr	r2, [r2, #4]
 2085 010e 42F06002 		orr	r2, r2, #96
 2086 0112 5A60     		str	r2, [r3, #4]
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             process unlock */
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2087              		.loc 1 1332 0
 2088 0114 FB68     		ldr	r3, [r7, #12]
 2089 0116 1B68     		ldr	r3, [r3]
 2090 0118 1B68     		ldr	r3, [r3]
 2091 011a 03F04003 		and	r3, r3, #64
 2092 011e 402B     		cmp	r3, #64
 2093 0120 07D0     		beq	.L111
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2094              		.loc 1 1335 0
ARM GAS  /tmp/ccVrlOhd.s 			page 61


 2095 0122 FB68     		ldr	r3, [r7, #12]
 2096 0124 1B68     		ldr	r3, [r3]
 2097 0126 FA68     		ldr	r2, [r7, #12]
 2098 0128 1268     		ldr	r2, [r2]
 2099 012a 1268     		ldr	r2, [r2]
 2100 012c 42F04002 		orr	r2, r2, #64
 2101 0130 1A60     		str	r2, [r3]
 2102              	.L111:
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2103              		.loc 1 1340 0
 2104 0132 FB68     		ldr	r3, [r7, #12]
 2105 0134 0022     		movs	r2, #0
 2106 0136 83F85C20 		strb	r2, [r3, #92]
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2107              		.loc 1 1341 0
 2108 013a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2109              	.L108:
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2110              		.loc 1 1342 0
 2111 013c 1846     		mov	r0, r3
 2112 013e 1837     		adds	r7, r7, #24
 2113              	.LCFI46:
 2114              		.cfi_def_cfa_offset 8
 2115 0140 BD46     		mov	sp, r7
 2116              	.LCFI47:
 2117              		.cfi_def_cfa_register 13
 2118              		@ sp needed
 2119 0142 80BD     		pop	{r7, pc}
 2120              	.L118:
 2121              		.align	2
 2122              	.L117:
 2123 0144 00000000 		.word	SPI_RxISR_16BIT
 2124 0148 00000000 		.word	SPI_RxISR_8BIT
 2125              		.cfi_endproc
 2126              	.LFE144:
 2128              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2129              		.align	1
 2130              		.global	HAL_SPI_TransmitReceive_IT
 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2134              		.fpu fpv4-sp-d16
 2136              	HAL_SPI_TransmitReceive_IT:
 2137              	.LFB145:
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccVrlOhd.s 			page 62


1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2138              		.loc 1 1354 0
 2139              		.cfi_startproc
 2140              		@ args = 0, pretend = 0, frame = 32
 2141              		@ frame_needed = 1, uses_anonymous_args = 0
 2142              		@ link register save eliminated.
 2143 0000 80B4     		push	{r7}
 2144              	.LCFI48:
 2145              		.cfi_def_cfa_offset 4
 2146              		.cfi_offset 7, -4
 2147 0002 89B0     		sub	sp, sp, #36
 2148              	.LCFI49:
 2149              		.cfi_def_cfa_offset 40
 2150 0004 00AF     		add	r7, sp, #0
 2151              	.LCFI50:
 2152              		.cfi_def_cfa_register 7
 2153 0006 F860     		str	r0, [r7, #12]
 2154 0008 B960     		str	r1, [r7, #8]
 2155 000a 7A60     		str	r2, [r7, #4]
 2156 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 2157              		.loc 1 1355 0
 2158 000e 0023     		movs	r3, #0
 2159 0010 BB61     		str	r3, [r7, #24]
 2160 0012 0023     		movs	r3, #0
 2161 0014 7B61     		str	r3, [r7, #20]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2162              		.loc 1 1356 0
 2163 0016 0023     		movs	r3, #0
 2164 0018 FB77     		strb	r3, [r7, #31]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2165              		.loc 1 1362 0
 2166 001a FB68     		ldr	r3, [r7, #12]
 2167 001c 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2168 0020 012B     		cmp	r3, #1
 2169 0022 01D1     		bne	.L120
 2170              		.loc 1 1362 0 is_stmt 0 discriminator 1
 2171 0024 0223     		movs	r3, #2
 2172 0026 93E0     		b	.L121
 2173              	.L120:
 2174              		.loc 1 1362 0 discriminator 2
 2175 0028 FB68     		ldr	r3, [r7, #12]
 2176 002a 0122     		movs	r2, #1
 2177 002c 83F85C20 		strb	r2, [r3, #92]
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp  = hspi->State;
 2178              		.loc 1 1364 0 is_stmt 1 discriminator 2
 2179 0030 FB68     		ldr	r3, [r7, #12]
 2180 0032 93F85D30 		ldrb	r3, [r3, #93]
 2181 0036 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccVrlOhd.s 			page 63


 2182 0038 BB61     		str	r3, [r7, #24]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 2183              		.loc 1 1365 0 discriminator 2
 2184 003a FB68     		ldr	r3, [r7, #12]
 2185 003c 5B68     		ldr	r3, [r3, #4]
 2186 003e 7B61     		str	r3, [r7, #20]
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp == HAL_SPI_STATE_READY) || \
 2187              		.loc 1 1367 0 discriminator 2
 2188 0040 BB69     		ldr	r3, [r7, #24]
 2189 0042 012B     		cmp	r3, #1
 2190 0044 0DD0     		beq	.L122
 2191              		.loc 1 1367 0 is_stmt 0 discriminator 1
 2192 0046 7B69     		ldr	r3, [r7, #20]
 2193 0048 B3F5827F 		cmp	r3, #260
 2194 004c 06D1     		bne	.L123
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL
 2195              		.loc 1 1368 0 is_stmt 1
 2196 004e FB68     		ldr	r3, [r7, #12]
 2197 0050 9B68     		ldr	r3, [r3, #8]
 2198 0052 002B     		cmp	r3, #0
 2199 0054 02D1     		bne	.L123
 2200              		.loc 1 1368 0 is_stmt 0 discriminator 1
 2201 0056 BB69     		ldr	r3, [r7, #24]
 2202 0058 042B     		cmp	r3, #4
 2203 005a 02D0     		beq	.L122
 2204              	.L123:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2205              		.loc 1 1370 0 is_stmt 1
 2206 005c 0223     		movs	r3, #2
 2207 005e FB77     		strb	r3, [r7, #31]
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2208              		.loc 1 1371 0
 2209 0060 71E0     		b	.L124
 2210              	.L122:
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 2211              		.loc 1 1374 0
 2212 0062 BB68     		ldr	r3, [r7, #8]
 2213 0064 002B     		cmp	r3, #0
 2214 0066 05D0     		beq	.L125
 2215              		.loc 1 1374 0 is_stmt 0 discriminator 1
 2216 0068 7B68     		ldr	r3, [r7, #4]
 2217 006a 002B     		cmp	r3, #0
 2218 006c 02D0     		beq	.L125
 2219              		.loc 1 1374 0 discriminator 2
 2220 006e 7B88     		ldrh	r3, [r7, #2]
 2221 0070 002B     		cmp	r3, #0
 2222 0072 02D1     		bne	.L126
 2223              	.L125:
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2224              		.loc 1 1376 0 is_stmt 1
 2225 0074 0123     		movs	r3, #1
 2226 0076 FB77     		strb	r3, [r7, #31]
ARM GAS  /tmp/ccVrlOhd.s 			page 64


1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2227              		.loc 1 1377 0
 2228 0078 65E0     		b	.L124
 2229              	.L126:
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 2230              		.loc 1 1381 0
 2231 007a FB68     		ldr	r3, [r7, #12]
 2232 007c 93F85D30 		ldrb	r3, [r3, #93]
 2233 0080 DBB2     		uxtb	r3, r3
 2234 0082 042B     		cmp	r3, #4
 2235 0084 03D0     		beq	.L127
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2236              		.loc 1 1383 0
 2237 0086 FB68     		ldr	r3, [r7, #12]
 2238 0088 0522     		movs	r2, #5
 2239 008a 83F85D20 		strb	r2, [r3, #93]
 2240              	.L127:
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2241              		.loc 1 1387 0
 2242 008e FB68     		ldr	r3, [r7, #12]
 2243 0090 0022     		movs	r2, #0
 2244 0092 1A66     		str	r2, [r3, #96]
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2245              		.loc 1 1388 0
 2246 0094 FB68     		ldr	r3, [r7, #12]
 2247 0096 BA68     		ldr	r2, [r7, #8]
 2248 0098 9A63     		str	r2, [r3, #56]
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2249              		.loc 1 1389 0
 2250 009a FB68     		ldr	r3, [r7, #12]
 2251 009c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2252 009e 9A87     		strh	r2, [r3, #60]	@ movhi
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2253              		.loc 1 1390 0
 2254 00a0 FB68     		ldr	r3, [r7, #12]
 2255 00a2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2256 00a4 DA87     		strh	r2, [r3, #62]	@ movhi
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2257              		.loc 1 1391 0
 2258 00a6 FB68     		ldr	r3, [r7, #12]
 2259 00a8 7A68     		ldr	r2, [r7, #4]
 2260 00aa 1A64     		str	r2, [r3, #64]
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2261              		.loc 1 1392 0
 2262 00ac FB68     		ldr	r3, [r7, #12]
 2263 00ae 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2264 00b0 A3F84420 		strh	r2, [r3, #68]	@ movhi
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2265              		.loc 1 1393 0
 2266 00b4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 65


 2267 00b6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2268 00b8 A3F84620 		strh	r2, [r3, #70]	@ movhi
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2269              		.loc 1 1396 0
 2270 00bc FB68     		ldr	r3, [r7, #12]
 2271 00be DB68     		ldr	r3, [r3, #12]
 2272 00c0 B3F5E06F 		cmp	r3, #1792
 2273 00c4 06D9     		bls	.L128
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
 2274              		.loc 1 1398 0
 2275 00c6 FB68     		ldr	r3, [r7, #12]
 2276 00c8 244A     		ldr	r2, .L133
 2277 00ca DA64     		str	r2, [r3, #76]
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2278              		.loc 1 1399 0
 2279 00cc FB68     		ldr	r3, [r7, #12]
 2280 00ce 244A     		ldr	r2, .L133+4
 2281 00d0 1A65     		str	r2, [r3, #80]
 2282 00d2 05E0     		b	.L129
 2283              	.L128:
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
 2284              		.loc 1 1403 0
 2285 00d4 FB68     		ldr	r3, [r7, #12]
 2286 00d6 234A     		ldr	r2, .L133+8
 2287 00d8 DA64     		str	r2, [r3, #76]
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2288              		.loc 1 1404 0
 2289 00da FB68     		ldr	r3, [r7, #12]
 2290 00dc 224A     		ldr	r2, .L133+12
 2291 00de 1A65     		str	r2, [r3, #80]
 2292              	.L129:
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check if packing mode is enabled and if there is more than 2 data to receive */
ARM GAS  /tmp/ccVrlOhd.s 			page 66


1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (hspi->RxXferCount >= 2U))
 2293              		.loc 1 1425 0
 2294 00e0 FB68     		ldr	r3, [r7, #12]
 2295 00e2 DB68     		ldr	r3, [r3, #12]
 2296 00e4 B3F5E06F 		cmp	r3, #1792
 2297 00e8 05D8     		bhi	.L130
 2298              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2299 00ea FB68     		ldr	r3, [r7, #12]
 2300 00ec B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 2301 00f0 9BB2     		uxth	r3, r3
 2302 00f2 012B     		cmp	r3, #1
 2303 00f4 08D9     		bls	.L131
 2304              	.L130:
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16 bit */
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2305              		.loc 1 1428 0 is_stmt 1
 2306 00f6 FB68     		ldr	r3, [r7, #12]
 2307 00f8 1B68     		ldr	r3, [r3]
 2308 00fa FA68     		ldr	r2, [r7, #12]
 2309 00fc 1268     		ldr	r2, [r2]
 2310 00fe 5268     		ldr	r2, [r2, #4]
 2311 0100 22F48052 		bic	r2, r2, #4096
 2312 0104 5A60     		str	r2, [r3, #4]
 2313 0106 07E0     		b	.L132
 2314              	.L131:
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8 bit */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2315              		.loc 1 1433 0
 2316 0108 FB68     		ldr	r3, [r7, #12]
 2317 010a 1B68     		ldr	r3, [r3]
 2318 010c FA68     		ldr	r2, [r7, #12]
 2319 010e 1268     		ldr	r2, [r2]
 2320 0110 5268     		ldr	r2, [r2, #4]
 2321 0112 42F48052 		orr	r2, r2, #4096
 2322 0116 5A60     		str	r2, [r3, #4]
 2323              	.L132:
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2324              		.loc 1 1437 0
 2325 0118 FB68     		ldr	r3, [r7, #12]
 2326 011a 1B68     		ldr	r3, [r3]
 2327 011c FA68     		ldr	r2, [r7, #12]
 2328 011e 1268     		ldr	r2, [r2]
 2329 0120 5268     		ldr	r2, [r2, #4]
 2330 0122 42F0E002 		orr	r2, r2, #224
 2331 0126 5A60     		str	r2, [r3, #4]
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2332              		.loc 1 1440 0
 2333 0128 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 67


 2334 012a 1B68     		ldr	r3, [r3]
 2335 012c 1B68     		ldr	r3, [r3]
 2336 012e 03F04003 		and	r3, r3, #64
 2337 0132 402B     		cmp	r3, #64
 2338 0134 07D0     		beq	.L124
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2339              		.loc 1 1443 0
 2340 0136 FB68     		ldr	r3, [r7, #12]
 2341 0138 1B68     		ldr	r3, [r3]
 2342 013a FA68     		ldr	r2, [r7, #12]
 2343 013c 1268     		ldr	r2, [r2]
 2344 013e 1268     		ldr	r2, [r2]
 2345 0140 42F04002 		orr	r2, r2, #64
 2346 0144 1A60     		str	r2, [r3]
 2347              	.L124:
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2348              		.loc 1 1448 0
 2349 0146 FB68     		ldr	r3, [r7, #12]
 2350 0148 0022     		movs	r2, #0
 2351 014a 83F85C20 		strb	r2, [r3, #92]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2352              		.loc 1 1449 0
 2353 014e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2354              	.L121:
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2355              		.loc 1 1450 0
 2356 0150 1846     		mov	r0, r3
 2357 0152 2437     		adds	r7, r7, #36
 2358              	.LCFI51:
 2359              		.cfi_def_cfa_offset 4
 2360 0154 BD46     		mov	sp, r7
 2361              	.LCFI52:
 2362              		.cfi_def_cfa_register 13
 2363              		@ sp needed
 2364 0156 5DF8047B 		ldr	r7, [sp], #4
 2365              	.LCFI53:
 2366              		.cfi_restore 7
 2367              		.cfi_def_cfa_offset 0
 2368 015a 7047     		bx	lr
 2369              	.L134:
 2370              		.align	2
 2371              	.L133:
 2372 015c 00000000 		.word	SPI_2linesRxISR_16BIT
 2373 0160 00000000 		.word	SPI_2linesTxISR_16BIT
 2374 0164 00000000 		.word	SPI_2linesRxISR_8BIT
 2375 0168 00000000 		.word	SPI_2linesTxISR_8BIT
 2376              		.cfi_endproc
 2377              	.LFE145:
 2379              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2380              		.align	1
 2381              		.global	HAL_SPI_Transmit_DMA
ARM GAS  /tmp/ccVrlOhd.s 			page 68


 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2385              		.fpu fpv4-sp-d16
 2387              	HAL_SPI_Transmit_DMA:
 2388              	.LFB146:
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2389              		.loc 1 1461 0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 24
 2392              		@ frame_needed = 1, uses_anonymous_args = 0
 2393 0000 80B5     		push	{r7, lr}
 2394              	.LCFI54:
 2395              		.cfi_def_cfa_offset 8
 2396              		.cfi_offset 7, -8
 2397              		.cfi_offset 14, -4
 2398 0002 86B0     		sub	sp, sp, #24
 2399              	.LCFI55:
 2400              		.cfi_def_cfa_offset 32
 2401 0004 00AF     		add	r7, sp, #0
 2402              	.LCFI56:
 2403              		.cfi_def_cfa_register 7
 2404 0006 F860     		str	r0, [r7, #12]
 2405 0008 B960     		str	r1, [r7, #8]
 2406 000a 1346     		mov	r3, r2
 2407 000c FB80     		strh	r3, [r7, #6]	@ movhi
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2408              		.loc 1 1462 0
 2409 000e 0023     		movs	r3, #0
 2410 0010 FB75     		strb	r3, [r7, #23]
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2411              		.loc 1 1468 0
 2412 0012 FB68     		ldr	r3, [r7, #12]
 2413 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2414 0018 012B     		cmp	r3, #1
 2415 001a 01D1     		bne	.L136
 2416              		.loc 1 1468 0 is_stmt 0 discriminator 1
 2417 001c 0223     		movs	r3, #2
 2418 001e C0E0     		b	.L137
 2419              	.L136:
 2420              		.loc 1 1468 0 discriminator 2
 2421 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 69


 2422 0022 0122     		movs	r2, #1
 2423 0024 83F85C20 		strb	r2, [r3, #92]
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2424              		.loc 1 1470 0 is_stmt 1 discriminator 2
 2425 0028 FB68     		ldr	r3, [r7, #12]
 2426 002a 93F85D30 		ldrb	r3, [r3, #93]
 2427 002e DBB2     		uxtb	r3, r3
 2428 0030 012B     		cmp	r3, #1
 2429 0032 02D0     		beq	.L138
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2430              		.loc 1 1472 0
 2431 0034 0223     		movs	r3, #2
 2432 0036 FB75     		strb	r3, [r7, #23]
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2433              		.loc 1 1473 0
 2434 0038 AEE0     		b	.L139
 2435              	.L138:
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2436              		.loc 1 1476 0
 2437 003a BB68     		ldr	r3, [r7, #8]
 2438 003c 002B     		cmp	r3, #0
 2439 003e 02D0     		beq	.L140
 2440              		.loc 1 1476 0 is_stmt 0 discriminator 1
 2441 0040 FB88     		ldrh	r3, [r7, #6]
 2442 0042 002B     		cmp	r3, #0
 2443 0044 02D1     		bne	.L141
 2444              	.L140:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2445              		.loc 1 1478 0 is_stmt 1
 2446 0046 0123     		movs	r3, #1
 2447 0048 FB75     		strb	r3, [r7, #23]
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2448              		.loc 1 1479 0
 2449 004a A5E0     		b	.L139
 2450              	.L141:
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2451              		.loc 1 1483 0
 2452 004c FB68     		ldr	r3, [r7, #12]
 2453 004e 0322     		movs	r2, #3
 2454 0050 83F85D20 		strb	r2, [r3, #93]
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2455              		.loc 1 1484 0
 2456 0054 FB68     		ldr	r3, [r7, #12]
 2457 0056 0022     		movs	r2, #0
 2458 0058 1A66     		str	r2, [r3, #96]
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2459              		.loc 1 1485 0
 2460 005a FB68     		ldr	r3, [r7, #12]
 2461 005c BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccVrlOhd.s 			page 70


 2462 005e 9A63     		str	r2, [r3, #56]
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2463              		.loc 1 1486 0
 2464 0060 FB68     		ldr	r3, [r7, #12]
 2465 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2466 0064 9A87     		strh	r2, [r3, #60]	@ movhi
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2467              		.loc 1 1487 0
 2468 0066 FB68     		ldr	r3, [r7, #12]
 2469 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2470 006a DA87     		strh	r2, [r3, #62]	@ movhi
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 2471              		.loc 1 1490 0
 2472 006c FB68     		ldr	r3, [r7, #12]
 2473 006e 0022     		movs	r2, #0
 2474 0070 1A64     		str	r2, [r3, #64]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2475              		.loc 1 1491 0
 2476 0072 FB68     		ldr	r3, [r7, #12]
 2477 0074 0022     		movs	r2, #0
 2478 0076 1A65     		str	r2, [r3, #80]
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2479              		.loc 1 1492 0
 2480 0078 FB68     		ldr	r3, [r7, #12]
 2481 007a 0022     		movs	r2, #0
 2482 007c DA64     		str	r2, [r3, #76]
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2483              		.loc 1 1493 0
 2484 007e FB68     		ldr	r3, [r7, #12]
 2485 0080 0022     		movs	r2, #0
 2486 0082 A3F84420 		strh	r2, [r3, #68]	@ movhi
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2487              		.loc 1 1494 0
 2488 0086 FB68     		ldr	r3, [r7, #12]
 2489 0088 0022     		movs	r2, #0
 2490 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2491              		.loc 1 1497 0
 2492 008e FB68     		ldr	r3, [r7, #12]
 2493 0090 9B68     		ldr	r3, [r3, #8]
 2494 0092 B3F5004F 		cmp	r3, #32768
 2495 0096 07D1     		bne	.L142
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2496              		.loc 1 1499 0
 2497 0098 FB68     		ldr	r3, [r7, #12]
 2498 009a 1B68     		ldr	r3, [r3]
 2499 009c FA68     		ldr	r2, [r7, #12]
 2500 009e 1268     		ldr	r2, [r2]
 2501 00a0 1268     		ldr	r2, [r2]
 2502 00a2 42F48042 		orr	r2, r2, #16384
 2503 00a6 1A60     		str	r2, [r3]
 2504              	.L142:
ARM GAS  /tmp/ccVrlOhd.s 			page 71


1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 2505              		.loc 1 1511 0
 2506 00a8 FB68     		ldr	r3, [r7, #12]
 2507 00aa 5B6D     		ldr	r3, [r3, #84]
 2508 00ac 3F4A     		ldr	r2, .L146
 2509 00ae 1A64     		str	r2, [r3, #64]
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2510              		.loc 1 1514 0
 2511 00b0 FB68     		ldr	r3, [r7, #12]
 2512 00b2 5B6D     		ldr	r3, [r3, #84]
 2513 00b4 3E4A     		ldr	r2, .L146+4
 2514 00b6 DA63     		str	r2, [r3, #60]
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2515              		.loc 1 1517 0
 2516 00b8 FB68     		ldr	r3, [r7, #12]
 2517 00ba 5B6D     		ldr	r3, [r3, #84]
 2518 00bc 3D4A     		ldr	r2, .L146+8
 2519 00be DA64     		str	r2, [r3, #76]
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 2520              		.loc 1 1520 0
 2521 00c0 FB68     		ldr	r3, [r7, #12]
 2522 00c2 5B6D     		ldr	r3, [r3, #84]
 2523 00c4 0022     		movs	r2, #0
 2524 00c6 1A65     		str	r2, [r3, #80]
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2525              		.loc 1 1522 0
 2526 00c8 FB68     		ldr	r3, [r7, #12]
 2527 00ca 1B68     		ldr	r3, [r3]
 2528 00cc FA68     		ldr	r2, [r7, #12]
 2529 00ce 1268     		ldr	r2, [r2]
 2530 00d0 5268     		ldr	r2, [r2, #4]
 2531 00d2 22F48042 		bic	r2, r2, #16384
 2532 00d6 5A60     		str	r2, [r3, #4]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* packing mode is enabled only if the DMA setting is HALWORD */
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
 2533              		.loc 1 1524 0
 2534 00d8 FB68     		ldr	r3, [r7, #12]
 2535 00da DB68     		ldr	r3, [r3, #12]
 2536 00dc B3F5E06F 		cmp	r3, #1792
ARM GAS  /tmp/ccVrlOhd.s 			page 72


 2537 00e0 2DD8     		bhi	.L143
 2538              		.loc 1 1524 0 is_stmt 0 discriminator 1
 2539 00e2 FB68     		ldr	r3, [r7, #12]
 2540 00e4 5B6D     		ldr	r3, [r3, #84]
 2541 00e6 9B69     		ldr	r3, [r3, #24]
 2542 00e8 B3F5005F 		cmp	r3, #8192
 2543 00ec 27D1     		bne	.L143
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
 2544              		.loc 1 1527 0 is_stmt 1
 2545 00ee FB68     		ldr	r3, [r7, #12]
 2546 00f0 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2547 00f2 9BB2     		uxth	r3, r3
 2548 00f4 03F00103 		and	r3, r3, #1
 2549 00f8 002B     		cmp	r3, #0
 2550 00fa 0FD1     		bne	.L144
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2551              		.loc 1 1529 0
 2552 00fc FB68     		ldr	r3, [r7, #12]
 2553 00fe 1B68     		ldr	r3, [r3]
 2554 0100 FA68     		ldr	r2, [r7, #12]
 2555 0102 1268     		ldr	r2, [r2]
 2556 0104 5268     		ldr	r2, [r2, #4]
 2557 0106 22F48042 		bic	r2, r2, #16384
 2558 010a 5A60     		str	r2, [r3, #4]
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 2559              		.loc 1 1530 0
 2560 010c FB68     		ldr	r3, [r7, #12]
 2561 010e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2562 0110 9BB2     		uxth	r3, r3
 2563 0112 5B08     		lsrs	r3, r3, #1
 2564 0114 9AB2     		uxth	r2, r3
 2565 0116 FB68     		ldr	r3, [r7, #12]
 2566 0118 DA87     		strh	r2, [r3, #62]	@ movhi
 2567 011a 10E0     		b	.L143
 2568              	.L144:
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2569              		.loc 1 1534 0
 2570 011c FB68     		ldr	r3, [r7, #12]
 2571 011e 1B68     		ldr	r3, [r3]
 2572 0120 FA68     		ldr	r2, [r7, #12]
 2573 0122 1268     		ldr	r2, [r2]
 2574 0124 5268     		ldr	r2, [r2, #4]
 2575 0126 42F48042 		orr	r2, r2, #16384
 2576 012a 5A60     		str	r2, [r3, #4]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 2577              		.loc 1 1535 0
 2578 012c FB68     		ldr	r3, [r7, #12]
 2579 012e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2580 0130 9BB2     		uxth	r3, r3
 2581 0132 5B08     		lsrs	r3, r3, #1
 2582 0134 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVrlOhd.s 			page 73


 2583 0136 0133     		adds	r3, r3, #1
 2584 0138 9AB2     		uxth	r2, r3
 2585 013a FB68     		ldr	r3, [r7, #12]
 2586 013c DA87     		strh	r2, [r3, #62]	@ movhi
 2587              	.L143:
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi->T
 2588              		.loc 1 1540 0
 2589 013e FB68     		ldr	r3, [r7, #12]
 2590 0140 586D     		ldr	r0, [r3, #84]
 2591 0142 FB68     		ldr	r3, [r7, #12]
 2592 0144 9B6B     		ldr	r3, [r3, #56]
 2593 0146 1946     		mov	r1, r3
 2594 0148 FB68     		ldr	r3, [r7, #12]
 2595 014a 1B68     		ldr	r3, [r3]
 2596 014c 0C33     		adds	r3, r3, #12
 2597 014e 1A46     		mov	r2, r3
 2598 0150 FB68     		ldr	r3, [r7, #12]
 2599 0152 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2600 0154 9BB2     		uxth	r3, r3
 2601 0156 FFF7FEFF 		bl	HAL_DMA_Start_IT
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2602              		.loc 1 1543 0
 2603 015a FB68     		ldr	r3, [r7, #12]
 2604 015c 1B68     		ldr	r3, [r3]
 2605 015e 1B68     		ldr	r3, [r3]
 2606 0160 03F04003 		and	r3, r3, #64
 2607 0164 402B     		cmp	r3, #64
 2608 0166 07D0     		beq	.L145
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2609              		.loc 1 1546 0
 2610 0168 FB68     		ldr	r3, [r7, #12]
 2611 016a 1B68     		ldr	r3, [r3]
 2612 016c FA68     		ldr	r2, [r7, #12]
 2613 016e 1268     		ldr	r2, [r2]
 2614 0170 1268     		ldr	r2, [r2]
 2615 0172 42F04002 		orr	r2, r2, #64
 2616 0176 1A60     		str	r2, [r3]
 2617              	.L145:
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2618              		.loc 1 1550 0
 2619 0178 FB68     		ldr	r3, [r7, #12]
 2620 017a 1B68     		ldr	r3, [r3]
 2621 017c FA68     		ldr	r2, [r7, #12]
 2622 017e 1268     		ldr	r2, [r2]
 2623 0180 5268     		ldr	r2, [r2, #4]
 2624 0182 42F02002 		orr	r2, r2, #32
ARM GAS  /tmp/ccVrlOhd.s 			page 74


 2625 0186 5A60     		str	r2, [r3, #4]
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 2626              		.loc 1 1553 0
 2627 0188 FB68     		ldr	r3, [r7, #12]
 2628 018a 1B68     		ldr	r3, [r3]
 2629 018c FA68     		ldr	r2, [r7, #12]
 2630 018e 1268     		ldr	r2, [r2]
 2631 0190 5268     		ldr	r2, [r2, #4]
 2632 0192 42F00202 		orr	r2, r2, #2
 2633 0196 5A60     		str	r2, [r3, #4]
 2634              	.L139:
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2635              		.loc 1 1557 0
 2636 0198 FB68     		ldr	r3, [r7, #12]
 2637 019a 0022     		movs	r2, #0
 2638 019c 83F85C20 		strb	r2, [r3, #92]
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2639              		.loc 1 1558 0
 2640 01a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2641              	.L137:
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2642              		.loc 1 1559 0
 2643 01a2 1846     		mov	r0, r3
 2644 01a4 1837     		adds	r7, r7, #24
 2645              	.LCFI57:
 2646              		.cfi_def_cfa_offset 8
 2647 01a6 BD46     		mov	sp, r7
 2648              	.LCFI58:
 2649              		.cfi_def_cfa_register 13
 2650              		@ sp needed
 2651 01a8 80BD     		pop	{r7, pc}
 2652              	.L147:
 2653 01aa 00BF     		.align	2
 2654              	.L146:
 2655 01ac 00000000 		.word	SPI_DMAHalfTransmitCplt
 2656 01b0 00000000 		.word	SPI_DMATransmitCplt
 2657 01b4 00000000 		.word	SPI_DMAError
 2658              		.cfi_endproc
 2659              	.LFE146:
 2661              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2662              		.align	1
 2663              		.global	HAL_SPI_Receive_DMA
 2664              		.syntax unified
 2665              		.thumb
 2666              		.thumb_func
 2667              		.fpu fpv4-sp-d16
 2669              	HAL_SPI_Receive_DMA:
 2670              	.LFB147:
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccVrlOhd.s 			page 75


1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2671              		.loc 1 1571 0
 2672              		.cfi_startproc
 2673              		@ args = 0, pretend = 0, frame = 24
 2674              		@ frame_needed = 1, uses_anonymous_args = 0
 2675 0000 80B5     		push	{r7, lr}
 2676              	.LCFI59:
 2677              		.cfi_def_cfa_offset 8
 2678              		.cfi_offset 7, -8
 2679              		.cfi_offset 14, -4
 2680 0002 86B0     		sub	sp, sp, #24
 2681              	.LCFI60:
 2682              		.cfi_def_cfa_offset 32
 2683 0004 00AF     		add	r7, sp, #0
 2684              	.LCFI61:
 2685              		.cfi_def_cfa_register 7
 2686 0006 F860     		str	r0, [r7, #12]
 2687 0008 B960     		str	r1, [r7, #8]
 2688 000a 1346     		mov	r3, r2
 2689 000c FB80     		strh	r3, [r7, #6]	@ movhi
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2690              		.loc 1 1572 0
 2691 000e 0023     		movs	r3, #0
 2692 0010 FB75     		strb	r3, [r7, #23]
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2693              		.loc 1 1574 0
 2694 0012 FB68     		ldr	r3, [r7, #12]
 2695 0014 9B68     		ldr	r3, [r3, #8]
 2696 0016 002B     		cmp	r3, #0
 2697 0018 10D1     		bne	.L149
 2698              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2699 001a FB68     		ldr	r3, [r7, #12]
 2700 001c 5B68     		ldr	r3, [r3, #4]
 2701 001e B3F5827F 		cmp	r3, #260
 2702 0022 0BD1     		bne	.L149
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2703              		.loc 1 1576 0 is_stmt 1
 2704 0024 FB68     		ldr	r3, [r7, #12]
 2705 0026 0422     		movs	r2, #4
 2706 0028 83F85D20 		strb	r2, [r3, #93]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 2707              		.loc 1 1578 0
 2708 002c FB88     		ldrh	r3, [r7, #6]
 2709 002e BA68     		ldr	r2, [r7, #8]
 2710 0030 B968     		ldr	r1, [r7, #8]
 2711 0032 F868     		ldr	r0, [r7, #12]
 2712 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
ARM GAS  /tmp/ccVrlOhd.s 			page 76


 2713 0038 0346     		mov	r3, r0
 2714 003a B6E0     		b	.L150
 2715              	.L149:
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2716              		.loc 1 1582 0
 2717 003c FB68     		ldr	r3, [r7, #12]
 2718 003e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2719 0042 012B     		cmp	r3, #1
 2720 0044 01D1     		bne	.L151
 2721              		.loc 1 1582 0 is_stmt 0 discriminator 1
 2722 0046 0223     		movs	r3, #2
 2723 0048 AFE0     		b	.L150
 2724              	.L151:
 2725              		.loc 1 1582 0 discriminator 2
 2726 004a FB68     		ldr	r3, [r7, #12]
 2727 004c 0122     		movs	r2, #1
 2728 004e 83F85C20 		strb	r2, [r3, #92]
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2729              		.loc 1 1584 0 is_stmt 1 discriminator 2
 2730 0052 FB68     		ldr	r3, [r7, #12]
 2731 0054 93F85D30 		ldrb	r3, [r3, #93]
 2732 0058 DBB2     		uxtb	r3, r3
 2733 005a 012B     		cmp	r3, #1
 2734 005c 02D0     		beq	.L152
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2735              		.loc 1 1586 0
 2736 005e 0223     		movs	r3, #2
 2737 0060 FB75     		strb	r3, [r7, #23]
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2738              		.loc 1 1587 0
 2739 0062 9DE0     		b	.L153
 2740              	.L152:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2741              		.loc 1 1590 0
 2742 0064 BB68     		ldr	r3, [r7, #8]
 2743 0066 002B     		cmp	r3, #0
 2744 0068 02D0     		beq	.L154
 2745              		.loc 1 1590 0 is_stmt 0 discriminator 1
 2746 006a FB88     		ldrh	r3, [r7, #6]
 2747 006c 002B     		cmp	r3, #0
 2748 006e 02D1     		bne	.L155
 2749              	.L154:
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2750              		.loc 1 1592 0 is_stmt 1
 2751 0070 0123     		movs	r3, #1
 2752 0072 FB75     		strb	r3, [r7, #23]
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2753              		.loc 1 1593 0
 2754 0074 94E0     		b	.L153
ARM GAS  /tmp/ccVrlOhd.s 			page 77


 2755              	.L155:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2756              		.loc 1 1597 0
 2757 0076 FB68     		ldr	r3, [r7, #12]
 2758 0078 0422     		movs	r2, #4
 2759 007a 83F85D20 		strb	r2, [r3, #93]
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2760              		.loc 1 1598 0
 2761 007e FB68     		ldr	r3, [r7, #12]
 2762 0080 0022     		movs	r2, #0
 2763 0082 1A66     		str	r2, [r3, #96]
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2764              		.loc 1 1599 0
 2765 0084 FB68     		ldr	r3, [r7, #12]
 2766 0086 BA68     		ldr	r2, [r7, #8]
 2767 0088 1A64     		str	r2, [r3, #64]
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2768              		.loc 1 1600 0
 2769 008a FB68     		ldr	r3, [r7, #12]
 2770 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2771 008e A3F84420 		strh	r2, [r3, #68]	@ movhi
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2772              		.loc 1 1601 0
 2773 0092 FB68     		ldr	r3, [r7, #12]
 2774 0094 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2775 0096 A3F84620 		strh	r2, [r3, #70]	@ movhi
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2776              		.loc 1 1604 0
 2777 009a FB68     		ldr	r3, [r7, #12]
 2778 009c 0022     		movs	r2, #0
 2779 009e DA64     		str	r2, [r3, #76]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2780              		.loc 1 1605 0
 2781 00a0 FB68     		ldr	r3, [r7, #12]
 2782 00a2 0022     		movs	r2, #0
 2783 00a4 1A65     		str	r2, [r3, #80]
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2784              		.loc 1 1606 0
 2785 00a6 FB68     		ldr	r3, [r7, #12]
 2786 00a8 0022     		movs	r2, #0
 2787 00aa 9A87     		strh	r2, [r3, #60]	@ movhi
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2788              		.loc 1 1607 0
 2789 00ac FB68     		ldr	r3, [r7, #12]
 2790 00ae 0022     		movs	r2, #0
 2791 00b0 DA87     		strh	r2, [r3, #62]	@ movhi
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2792              		.loc 1 1610 0
 2793 00b2 FB68     		ldr	r3, [r7, #12]
 2794 00b4 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccVrlOhd.s 			page 78


 2795 00b6 B3F5004F 		cmp	r3, #32768
 2796 00ba 07D1     		bne	.L156
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2797              		.loc 1 1612 0
 2798 00bc FB68     		ldr	r3, [r7, #12]
 2799 00be 1B68     		ldr	r3, [r3]
 2800 00c0 FA68     		ldr	r2, [r7, #12]
 2801 00c2 1268     		ldr	r2, [r2]
 2802 00c4 1268     		ldr	r2, [r2]
 2803 00c6 22F48042 		bic	r2, r2, #16384
 2804 00ca 1A60     		str	r2, [r3]
 2805              	.L156:
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* packing mode management is enabled by the DMA settings */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmarx->Init.MemDataAlignment == DMA_MDA
 2806              		.loc 1 1624 0
 2807 00cc FB68     		ldr	r3, [r7, #12]
 2808 00ce DB68     		ldr	r3, [r3, #12]
 2809 00d0 B3F5E06F 		cmp	r3, #1792
 2810 00d4 08D8     		bhi	.L157
 2811              		.loc 1 1624 0 is_stmt 0 discriminator 1
 2812 00d6 FB68     		ldr	r3, [r7, #12]
 2813 00d8 9B6D     		ldr	r3, [r3, #88]
 2814 00da 9B69     		ldr	r3, [r3, #24]
 2815 00dc B3F5005F 		cmp	r3, #8192
 2816 00e0 02D1     		bne	.L157
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2817              		.loc 1 1627 0 is_stmt 1
 2818 00e2 0123     		movs	r3, #1
 2819 00e4 FB75     		strb	r3, [r7, #23]
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2820              		.loc 1 1628 0
 2821 00e6 5BE0     		b	.L153
 2822              	.L157:
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 2823              		.loc 1 1631 0
 2824 00e8 FB68     		ldr	r3, [r7, #12]
 2825 00ea 1B68     		ldr	r3, [r3]
 2826 00ec FA68     		ldr	r2, [r7, #12]
 2827 00ee 1268     		ldr	r2, [r2]
 2828 00f0 5268     		ldr	r2, [r2, #4]
 2829 00f2 22F40052 		bic	r2, r2, #8192
 2830 00f6 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 79


1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2831              		.loc 1 1632 0
 2832 00f8 FB68     		ldr	r3, [r7, #12]
 2833 00fa DB68     		ldr	r3, [r3, #12]
 2834 00fc B3F5E06F 		cmp	r3, #1792
 2835 0100 08D9     		bls	.L158
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2836              		.loc 1 1635 0
 2837 0102 FB68     		ldr	r3, [r7, #12]
 2838 0104 1B68     		ldr	r3, [r3]
 2839 0106 FA68     		ldr	r2, [r7, #12]
 2840 0108 1268     		ldr	r2, [r2]
 2841 010a 5268     		ldr	r2, [r2, #4]
 2842 010c 22F48052 		bic	r2, r2, #4096
 2843 0110 5A60     		str	r2, [r3, #4]
 2844 0112 07E0     		b	.L159
 2845              	.L158:
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2846              		.loc 1 1640 0
 2847 0114 FB68     		ldr	r3, [r7, #12]
 2848 0116 1B68     		ldr	r3, [r3]
 2849 0118 FA68     		ldr	r2, [r7, #12]
 2850 011a 1268     		ldr	r2, [r2]
 2851 011c 5268     		ldr	r2, [r2, #4]
 2852 011e 42F48052 		orr	r2, r2, #4096
 2853 0122 5A60     		str	r2, [r3, #4]
 2854              	.L159:
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 2855              		.loc 1 1644 0
 2856 0124 FB68     		ldr	r3, [r7, #12]
 2857 0126 9B6D     		ldr	r3, [r3, #88]
 2858 0128 224A     		ldr	r2, .L161
 2859 012a 1A64     		str	r2, [r3, #64]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2860              		.loc 1 1647 0
 2861 012c FB68     		ldr	r3, [r7, #12]
 2862 012e 9B6D     		ldr	r3, [r3, #88]
 2863 0130 214A     		ldr	r2, .L161+4
 2864 0132 DA63     		str	r2, [r3, #60]
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2865              		.loc 1 1650 0
 2866 0134 FB68     		ldr	r3, [r7, #12]
 2867 0136 9B6D     		ldr	r3, [r3, #88]
 2868 0138 204A     		ldr	r2, .L161+8
ARM GAS  /tmp/ccVrlOhd.s 			page 80


 2869 013a DA64     		str	r2, [r3, #76]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 2870              		.loc 1 1653 0
 2871 013c FB68     		ldr	r3, [r7, #12]
 2872 013e 9B6D     		ldr	r3, [r3, #88]
 2873 0140 0022     		movs	r2, #0
 2874 0142 1A65     		str	r2, [r3, #80]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi->R
 2875              		.loc 1 1656 0
 2876 0144 FB68     		ldr	r3, [r7, #12]
 2877 0146 986D     		ldr	r0, [r3, #88]
 2878 0148 FB68     		ldr	r3, [r7, #12]
 2879 014a 1B68     		ldr	r3, [r3]
 2880 014c 0C33     		adds	r3, r3, #12
 2881 014e 1946     		mov	r1, r3
 2882 0150 FB68     		ldr	r3, [r7, #12]
 2883 0152 1B6C     		ldr	r3, [r3, #64]
 2884 0154 1A46     		mov	r2, r3
 2885 0156 FB68     		ldr	r3, [r7, #12]
 2886 0158 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 2887 015c 9BB2     		uxth	r3, r3
 2888 015e FFF7FEFF 		bl	HAL_DMA_Start_IT
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2889              		.loc 1 1659 0
 2890 0162 FB68     		ldr	r3, [r7, #12]
 2891 0164 1B68     		ldr	r3, [r3]
 2892 0166 1B68     		ldr	r3, [r3]
 2893 0168 03F04003 		and	r3, r3, #64
 2894 016c 402B     		cmp	r3, #64
 2895 016e 07D0     		beq	.L160
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2896              		.loc 1 1662 0
 2897 0170 FB68     		ldr	r3, [r7, #12]
 2898 0172 1B68     		ldr	r3, [r3]
 2899 0174 FA68     		ldr	r2, [r7, #12]
 2900 0176 1268     		ldr	r2, [r2]
 2901 0178 1268     		ldr	r2, [r2]
 2902 017a 42F04002 		orr	r2, r2, #64
 2903 017e 1A60     		str	r2, [r3]
 2904              	.L160:
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2905              		.loc 1 1666 0
 2906 0180 FB68     		ldr	r3, [r7, #12]
 2907 0182 1B68     		ldr	r3, [r3]
 2908 0184 FA68     		ldr	r2, [r7, #12]
 2909 0186 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccVrlOhd.s 			page 81


 2910 0188 5268     		ldr	r2, [r2, #4]
 2911 018a 42F02002 		orr	r2, r2, #32
 2912 018e 5A60     		str	r2, [r3, #4]
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 2913              		.loc 1 1669 0
 2914 0190 FB68     		ldr	r3, [r7, #12]
 2915 0192 1B68     		ldr	r3, [r3]
 2916 0194 FA68     		ldr	r2, [r7, #12]
 2917 0196 1268     		ldr	r2, [r2]
 2918 0198 5268     		ldr	r2, [r2, #4]
 2919 019a 42F00102 		orr	r2, r2, #1
 2920 019e 5A60     		str	r2, [r3, #4]
 2921              	.L153:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2922              		.loc 1 1673 0
 2923 01a0 FB68     		ldr	r3, [r7, #12]
 2924 01a2 0022     		movs	r2, #0
 2925 01a4 83F85C20 		strb	r2, [r3, #92]
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2926              		.loc 1 1674 0
 2927 01a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2928              	.L150:
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2929              		.loc 1 1675 0
 2930 01aa 1846     		mov	r0, r3
 2931 01ac 1837     		adds	r7, r7, #24
 2932              	.LCFI62:
 2933              		.cfi_def_cfa_offset 8
 2934 01ae BD46     		mov	sp, r7
 2935              	.LCFI63:
 2936              		.cfi_def_cfa_register 13
 2937              		@ sp needed
 2938 01b0 80BD     		pop	{r7, pc}
 2939              	.L162:
 2940 01b2 00BF     		.align	2
 2941              	.L161:
 2942 01b4 00000000 		.word	SPI_DMAHalfReceiveCplt
 2943 01b8 00000000 		.word	SPI_DMAReceiveCplt
 2944 01bc 00000000 		.word	SPI_DMAError
 2945              		.cfi_endproc
 2946              	.LFE147:
 2948              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2949              		.align	1
 2950              		.global	HAL_SPI_TransmitReceive_DMA
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2954              		.fpu fpv4-sp-d16
 2956              	HAL_SPI_TransmitReceive_DMA:
 2957              	.LFB148:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccVrlOhd.s 			page 82


1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                               uint16_t Size)
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2958              		.loc 1 1689 0
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 32
 2961              		@ frame_needed = 1, uses_anonymous_args = 0
 2962 0000 80B5     		push	{r7, lr}
 2963              	.LCFI64:
 2964              		.cfi_def_cfa_offset 8
 2965              		.cfi_offset 7, -8
 2966              		.cfi_offset 14, -4
 2967 0002 88B0     		sub	sp, sp, #32
 2968              	.LCFI65:
 2969              		.cfi_def_cfa_offset 40
 2970 0004 00AF     		add	r7, sp, #0
 2971              	.LCFI66:
 2972              		.cfi_def_cfa_register 7
 2973 0006 F860     		str	r0, [r7, #12]
 2974 0008 B960     		str	r1, [r7, #8]
 2975 000a 7A60     		str	r2, [r7, #4]
 2976 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 2977              		.loc 1 1690 0
 2978 000e 0023     		movs	r3, #0
 2979 0010 BB61     		str	r3, [r7, #24]
 2980 0012 0023     		movs	r3, #0
 2981 0014 7B61     		str	r3, [r7, #20]
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2982              		.loc 1 1691 0
 2983 0016 0023     		movs	r3, #0
 2984 0018 FB77     		strb	r3, [r7, #31]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2985              		.loc 1 1697 0
 2986 001a FB68     		ldr	r3, [r7, #12]
 2987 001c 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2988 0020 012B     		cmp	r3, #1
 2989 0022 01D1     		bne	.L164
 2990              		.loc 1 1697 0 is_stmt 0 discriminator 1
 2991 0024 0223     		movs	r3, #2
 2992 0026 4DE1     		b	.L165
 2993              	.L164:
 2994              		.loc 1 1697 0 discriminator 2
ARM GAS  /tmp/ccVrlOhd.s 			page 83


 2995 0028 FB68     		ldr	r3, [r7, #12]
 2996 002a 0122     		movs	r2, #1
 2997 002c 83F85C20 		strb	r2, [r3, #92]
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp  = hspi->State;
 2998              		.loc 1 1699 0 is_stmt 1 discriminator 2
 2999 0030 FB68     		ldr	r3, [r7, #12]
 3000 0032 93F85D30 		ldrb	r3, [r3, #93]
 3001 0036 DBB2     		uxtb	r3, r3
 3002 0038 BB61     		str	r3, [r7, #24]
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 3003              		.loc 1 1700 0 discriminator 2
 3004 003a FB68     		ldr	r3, [r7, #12]
 3005 003c 5B68     		ldr	r3, [r3, #4]
 3006 003e 7B61     		str	r3, [r7, #20]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp == HAL_SPI_STATE_READY) ||
 3007              		.loc 1 1701 0 discriminator 2
 3008 0040 BB69     		ldr	r3, [r7, #24]
 3009 0042 012B     		cmp	r3, #1
 3010 0044 0DD0     		beq	.L166
 3011              		.loc 1 1701 0 is_stmt 0 discriminator 1
 3012 0046 7B69     		ldr	r3, [r7, #20]
 3013 0048 B3F5827F 		cmp	r3, #260
 3014 004c 06D1     		bne	.L167
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL
 3015              		.loc 1 1702 0 is_stmt 1
 3016 004e FB68     		ldr	r3, [r7, #12]
 3017 0050 9B68     		ldr	r3, [r3, #8]
 3018 0052 002B     		cmp	r3, #0
 3019 0054 02D1     		bne	.L167
 3020              		.loc 1 1702 0 is_stmt 0 discriminator 1
 3021 0056 BB69     		ldr	r3, [r7, #24]
 3022 0058 042B     		cmp	r3, #4
 3023 005a 02D0     		beq	.L166
 3024              	.L167:
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3025              		.loc 1 1704 0 is_stmt 1
 3026 005c 0223     		movs	r3, #2
 3027 005e FB77     		strb	r3, [r7, #31]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3028              		.loc 1 1705 0
 3029 0060 2BE1     		b	.L168
 3030              	.L166:
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 3031              		.loc 1 1708 0
 3032 0062 BB68     		ldr	r3, [r7, #8]
 3033 0064 002B     		cmp	r3, #0
 3034 0066 05D0     		beq	.L169
 3035              		.loc 1 1708 0 is_stmt 0 discriminator 1
 3036 0068 7B68     		ldr	r3, [r7, #4]
 3037 006a 002B     		cmp	r3, #0
 3038 006c 02D0     		beq	.L169
 3039              		.loc 1 1708 0 discriminator 2
 3040 006e 7B88     		ldrh	r3, [r7, #2]
ARM GAS  /tmp/ccVrlOhd.s 			page 84


 3041 0070 002B     		cmp	r3, #0
 3042 0072 02D1     		bne	.L170
 3043              	.L169:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3044              		.loc 1 1710 0 is_stmt 1
 3045 0074 0123     		movs	r3, #1
 3046 0076 FB77     		strb	r3, [r7, #31]
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3047              		.loc 1 1711 0
 3048 0078 1FE1     		b	.L168
 3049              	.L170:
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 3050              		.loc 1 1715 0
 3051 007a FB68     		ldr	r3, [r7, #12]
 3052 007c 93F85D30 		ldrb	r3, [r3, #93]
 3053 0080 DBB2     		uxtb	r3, r3
 3054 0082 042B     		cmp	r3, #4
 3055 0084 03D0     		beq	.L171
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 3056              		.loc 1 1717 0
 3057 0086 FB68     		ldr	r3, [r7, #12]
 3058 0088 0522     		movs	r2, #5
 3059 008a 83F85D20 		strb	r2, [r3, #93]
 3060              	.L171:
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3061              		.loc 1 1721 0
 3062 008e FB68     		ldr	r3, [r7, #12]
 3063 0090 0022     		movs	r2, #0
 3064 0092 1A66     		str	r2, [r3, #96]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3065              		.loc 1 1722 0
 3066 0094 FB68     		ldr	r3, [r7, #12]
 3067 0096 BA68     		ldr	r2, [r7, #8]
 3068 0098 9A63     		str	r2, [r3, #56]
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3069              		.loc 1 1723 0
 3070 009a FB68     		ldr	r3, [r7, #12]
 3071 009c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3072 009e 9A87     		strh	r2, [r3, #60]	@ movhi
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3073              		.loc 1 1724 0
 3074 00a0 FB68     		ldr	r3, [r7, #12]
 3075 00a2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3076 00a4 DA87     		strh	r2, [r3, #62]	@ movhi
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3077              		.loc 1 1725 0
 3078 00a6 FB68     		ldr	r3, [r7, #12]
 3079 00a8 7A68     		ldr	r2, [r7, #4]
 3080 00aa 1A64     		str	r2, [r3, #64]
ARM GAS  /tmp/ccVrlOhd.s 			page 85


1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3081              		.loc 1 1726 0
 3082 00ac FB68     		ldr	r3, [r7, #12]
 3083 00ae 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3084 00b0 A3F84420 		strh	r2, [r3, #68]	@ movhi
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3085              		.loc 1 1727 0
 3086 00b4 FB68     		ldr	r3, [r7, #12]
 3087 00b6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3088 00b8 A3F84620 		strh	r2, [r3, #70]	@ movhi
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3089              		.loc 1 1730 0
 3090 00bc FB68     		ldr	r3, [r7, #12]
 3091 00be 0022     		movs	r2, #0
 3092 00c0 DA64     		str	r2, [r3, #76]
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3093              		.loc 1 1731 0
 3094 00c2 FB68     		ldr	r3, [r7, #12]
 3095 00c4 0022     		movs	r2, #0
 3096 00c6 1A65     		str	r2, [r3, #80]
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset the threshold bit */
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
 3097              		.loc 1 1742 0
 3098 00c8 FB68     		ldr	r3, [r7, #12]
 3099 00ca 1B68     		ldr	r3, [r3]
 3100 00cc FA68     		ldr	r2, [r7, #12]
 3101 00ce 1268     		ldr	r2, [r2]
 3102 00d0 5268     		ldr	r2, [r2, #4]
 3103 00d2 22F4C042 		bic	r2, r2, #24576
 3104 00d6 5A60     		str	r2, [r3, #4]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* the packing mode management is enabled by the DMA settings according the spi data size */
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3105              		.loc 1 1745 0
 3106 00d8 FB68     		ldr	r3, [r7, #12]
 3107 00da DB68     		ldr	r3, [r3, #12]
 3108 00dc B3F5E06F 		cmp	r3, #1792
 3109 00e0 08D9     		bls	.L172
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3110              		.loc 1 1748 0
 3111 00e2 FB68     		ldr	r3, [r7, #12]
 3112 00e4 1B68     		ldr	r3, [r3]
 3113 00e6 FA68     		ldr	r2, [r7, #12]
 3114 00e8 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccVrlOhd.s 			page 86


 3115 00ea 5268     		ldr	r2, [r2, #4]
 3116 00ec 22F48052 		bic	r2, r2, #4096
 3117 00f0 5A60     		str	r2, [r3, #4]
 3118 00f2 6FE0     		b	.L173
 3119              	.L172:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3120              		.loc 1 1753 0
 3121 00f4 FB68     		ldr	r3, [r7, #12]
 3122 00f6 1B68     		ldr	r3, [r3]
 3123 00f8 FA68     		ldr	r2, [r7, #12]
 3124 00fa 1268     		ldr	r2, [r2]
 3125 00fc 5268     		ldr	r2, [r2, #4]
 3126 00fe 42F48052 		orr	r2, r2, #4096
 3127 0102 5A60     		str	r2, [r3, #4]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3128              		.loc 1 1755 0
 3129 0104 FB68     		ldr	r3, [r7, #12]
 3130 0106 5B6D     		ldr	r3, [r3, #84]
 3131 0108 9B69     		ldr	r3, [r3, #24]
 3132 010a B3F5005F 		cmp	r3, #8192
 3133 010e 26D1     		bne	.L174
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
 3134              		.loc 1 1757 0
 3135 0110 FB68     		ldr	r3, [r7, #12]
 3136 0112 9B8F     		ldrh	r3, [r3, #60]
 3137 0114 03F00103 		and	r3, r3, #1
 3138 0118 002B     		cmp	r3, #0
 3139 011a 0FD1     		bne	.L175
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 3140              		.loc 1 1759 0
 3141 011c FB68     		ldr	r3, [r7, #12]
 3142 011e 1B68     		ldr	r3, [r3]
 3143 0120 FA68     		ldr	r2, [r7, #12]
 3144 0122 1268     		ldr	r2, [r2]
 3145 0124 5268     		ldr	r2, [r2, #4]
 3146 0126 22F48042 		bic	r2, r2, #16384
 3147 012a 5A60     		str	r2, [r3, #4]
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3148              		.loc 1 1760 0
 3149 012c FB68     		ldr	r3, [r7, #12]
 3150 012e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3151 0130 9BB2     		uxth	r3, r3
 3152 0132 5B08     		lsrs	r3, r3, #1
 3153 0134 9AB2     		uxth	r2, r3
 3154 0136 FB68     		ldr	r3, [r7, #12]
 3155 0138 DA87     		strh	r2, [r3, #62]	@ movhi
 3156 013a 10E0     		b	.L174
 3157              	.L175:
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
ARM GAS  /tmp/ccVrlOhd.s 			page 87


1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 3158              		.loc 1 1764 0
 3159 013c FB68     		ldr	r3, [r7, #12]
 3160 013e 1B68     		ldr	r3, [r3]
 3161 0140 FA68     		ldr	r2, [r7, #12]
 3162 0142 1268     		ldr	r2, [r2]
 3163 0144 5268     		ldr	r2, [r2, #4]
 3164 0146 42F48042 		orr	r2, r2, #16384
 3165 014a 5A60     		str	r2, [r3, #4]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3166              		.loc 1 1765 0
 3167 014c FB68     		ldr	r3, [r7, #12]
 3168 014e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3169 0150 9BB2     		uxth	r3, r3
 3170 0152 5B08     		lsrs	r3, r3, #1
 3171 0154 9BB2     		uxth	r3, r3
 3172 0156 0133     		adds	r3, r3, #1
 3173 0158 9AB2     		uxth	r2, r3
 3174 015a FB68     		ldr	r3, [r7, #12]
 3175 015c DA87     		strh	r2, [r3, #62]	@ movhi
 3176              	.L174:
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3177              		.loc 1 1769 0
 3178 015e FB68     		ldr	r3, [r7, #12]
 3179 0160 9B6D     		ldr	r3, [r3, #88]
 3180 0162 9B69     		ldr	r3, [r3, #24]
 3181 0164 B3F5005F 		cmp	r3, #8192
 3182 0168 34D1     		bne	.L173
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* set fiforxthreshold according the reception data length: 16bit */
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3183              		.loc 1 1772 0
 3184 016a FB68     		ldr	r3, [r7, #12]
 3185 016c 1B68     		ldr	r3, [r3]
 3186 016e FA68     		ldr	r2, [r7, #12]
 3187 0170 1268     		ldr	r2, [r2]
 3188 0172 5268     		ldr	r2, [r2, #4]
 3189 0174 22F48052 		bic	r2, r2, #4096
 3190 0178 5A60     		str	r2, [r3, #4]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
 3191              		.loc 1 1774 0
 3192 017a FB68     		ldr	r3, [r7, #12]
 3193 017c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3194 0180 9BB2     		uxth	r3, r3
 3195 0182 03F00103 		and	r3, r3, #1
 3196 0186 002B     		cmp	r3, #0
 3197 0188 11D1     		bne	.L176
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3198              		.loc 1 1776 0
 3199 018a FB68     		ldr	r3, [r7, #12]
 3200 018c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccVrlOhd.s 			page 88


 3201 018e FA68     		ldr	r2, [r7, #12]
 3202 0190 1268     		ldr	r2, [r2]
 3203 0192 5268     		ldr	r2, [r2, #4]
 3204 0194 22F40052 		bic	r2, r2, #8192
 3205 0198 5A60     		str	r2, [r3, #4]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3206              		.loc 1 1777 0
 3207 019a FB68     		ldr	r3, [r7, #12]
 3208 019c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3209 01a0 9BB2     		uxth	r3, r3
 3210 01a2 5B08     		lsrs	r3, r3, #1
 3211 01a4 9AB2     		uxth	r2, r3
 3212 01a6 FB68     		ldr	r3, [r7, #12]
 3213 01a8 A3F84620 		strh	r2, [r3, #70]	@ movhi
 3214 01ac 12E0     		b	.L173
 3215              	.L176:
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3216              		.loc 1 1781 0
 3217 01ae FB68     		ldr	r3, [r7, #12]
 3218 01b0 1B68     		ldr	r3, [r3]
 3219 01b2 FA68     		ldr	r2, [r7, #12]
 3220 01b4 1268     		ldr	r2, [r2]
 3221 01b6 5268     		ldr	r2, [r2, #4]
 3222 01b8 42F40052 		orr	r2, r2, #8192
 3223 01bc 5A60     		str	r2, [r3, #4]
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3224              		.loc 1 1782 0
 3225 01be FB68     		ldr	r3, [r7, #12]
 3226 01c0 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3227 01c4 9BB2     		uxth	r3, r3
 3228 01c6 5B08     		lsrs	r3, r3, #1
 3229 01c8 9BB2     		uxth	r3, r3
 3230 01ca 0133     		adds	r3, r3, #1
 3231 01cc 9AB2     		uxth	r2, r3
 3232 01ce FB68     		ldr	r3, [r7, #12]
 3233 01d0 A3F84620 		strh	r2, [r3, #70]	@ movhi
 3234              	.L173:
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 3235              		.loc 1 1788 0
 3236 01d4 FB68     		ldr	r3, [r7, #12]
 3237 01d6 93F85D30 		ldrb	r3, [r3, #93]
 3238 01da DBB2     		uxtb	r3, r3
 3239 01dc 042B     		cmp	r3, #4
 3240 01de 08D1     		bne	.L177
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 3241              		.loc 1 1791 0
 3242 01e0 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 89


 3243 01e2 9B6D     		ldr	r3, [r3, #88]
 3244 01e4 394A     		ldr	r2, .L180
 3245 01e6 1A64     		str	r2, [r3, #64]
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3246              		.loc 1 1792 0
 3247 01e8 FB68     		ldr	r3, [r7, #12]
 3248 01ea 9B6D     		ldr	r3, [r3, #88]
 3249 01ec 384A     		ldr	r2, .L180+4
 3250 01ee DA63     		str	r2, [r3, #60]
 3251 01f0 07E0     		b	.L178
 3252              	.L177:
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 3253              		.loc 1 1797 0
 3254 01f2 FB68     		ldr	r3, [r7, #12]
 3255 01f4 9B6D     		ldr	r3, [r3, #88]
 3256 01f6 374A     		ldr	r2, .L180+8
 3257 01f8 1A64     		str	r2, [r3, #64]
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3258              		.loc 1 1798 0
 3259 01fa FB68     		ldr	r3, [r7, #12]
 3260 01fc 9B6D     		ldr	r3, [r3, #88]
 3261 01fe 364A     		ldr	r2, .L180+12
 3262 0200 DA63     		str	r2, [r3, #60]
 3263              	.L178:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 3264              		.loc 1 1802 0
 3265 0202 FB68     		ldr	r3, [r7, #12]
 3266 0204 9B6D     		ldr	r3, [r3, #88]
 3267 0206 354A     		ldr	r2, .L180+16
 3268 0208 DA64     		str	r2, [r3, #76]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 3269              		.loc 1 1805 0
 3270 020a FB68     		ldr	r3, [r7, #12]
 3271 020c 9B6D     		ldr	r3, [r3, #88]
 3272 020e 0022     		movs	r2, #0
 3273 0210 1A65     		str	r2, [r3, #80]
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi->R
 3274              		.loc 1 1808 0
 3275 0212 FB68     		ldr	r3, [r7, #12]
 3276 0214 986D     		ldr	r0, [r3, #88]
 3277 0216 FB68     		ldr	r3, [r7, #12]
 3278 0218 1B68     		ldr	r3, [r3]
 3279 021a 0C33     		adds	r3, r3, #12
 3280 021c 1946     		mov	r1, r3
 3281 021e FB68     		ldr	r3, [r7, #12]
 3282 0220 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccVrlOhd.s 			page 90


 3283 0222 1A46     		mov	r2, r3
 3284 0224 FB68     		ldr	r3, [r7, #12]
 3285 0226 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3286 022a 9BB2     		uxth	r3, r3
 3287 022c FFF7FEFF 		bl	HAL_DMA_Start_IT
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3288              		.loc 1 1811 0
 3289 0230 FB68     		ldr	r3, [r7, #12]
 3290 0232 1B68     		ldr	r3, [r3]
 3291 0234 FA68     		ldr	r2, [r7, #12]
 3292 0236 1268     		ldr	r2, [r2]
 3293 0238 5268     		ldr	r2, [r2, #4]
 3294 023a 42F00102 		orr	r2, r2, #1
 3295 023e 5A60     		str	r2, [r3, #4]
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
 3296              		.loc 1 1815 0
 3297 0240 FB68     		ldr	r3, [r7, #12]
 3298 0242 5B6D     		ldr	r3, [r3, #84]
 3299 0244 0022     		movs	r2, #0
 3300 0246 1A64     		str	r2, [r3, #64]
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3301              		.loc 1 1816 0
 3302 0248 FB68     		ldr	r3, [r7, #12]
 3303 024a 5B6D     		ldr	r3, [r3, #84]
 3304 024c 0022     		movs	r2, #0
 3305 024e DA63     		str	r2, [r3, #60]
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3306              		.loc 1 1817 0
 3307 0250 FB68     		ldr	r3, [r7, #12]
 3308 0252 5B6D     		ldr	r3, [r3, #84]
 3309 0254 0022     		movs	r2, #0
 3310 0256 DA64     		str	r2, [r3, #76]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3311              		.loc 1 1818 0
 3312 0258 FB68     		ldr	r3, [r7, #12]
 3313 025a 5B6D     		ldr	r3, [r3, #84]
 3314 025c 0022     		movs	r2, #0
 3315 025e 1A65     		str	r2, [r3, #80]
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi->T
 3316              		.loc 1 1821 0
 3317 0260 FB68     		ldr	r3, [r7, #12]
 3318 0262 586D     		ldr	r0, [r3, #84]
 3319 0264 FB68     		ldr	r3, [r7, #12]
 3320 0266 9B6B     		ldr	r3, [r3, #56]
 3321 0268 1946     		mov	r1, r3
 3322 026a FB68     		ldr	r3, [r7, #12]
 3323 026c 1B68     		ldr	r3, [r3]
 3324 026e 0C33     		adds	r3, r3, #12
 3325 0270 1A46     		mov	r2, r3
 3326 0272 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 91


 3327 0274 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3328 0276 9BB2     		uxth	r3, r3
 3329 0278 FFF7FEFF 		bl	HAL_DMA_Start_IT
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 3330              		.loc 1 1824 0
 3331 027c FB68     		ldr	r3, [r7, #12]
 3332 027e 1B68     		ldr	r3, [r3]
 3333 0280 1B68     		ldr	r3, [r3]
 3334 0282 03F04003 		and	r3, r3, #64
 3335 0286 402B     		cmp	r3, #64
 3336 0288 07D0     		beq	.L179
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3337              		.loc 1 1827 0
 3338 028a FB68     		ldr	r3, [r7, #12]
 3339 028c 1B68     		ldr	r3, [r3]
 3340 028e FA68     		ldr	r2, [r7, #12]
 3341 0290 1268     		ldr	r2, [r2]
 3342 0292 1268     		ldr	r2, [r2]
 3343 0294 42F04002 		orr	r2, r2, #64
 3344 0298 1A60     		str	r2, [r3]
 3345              	.L179:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3346              		.loc 1 1830 0
 3347 029a FB68     		ldr	r3, [r7, #12]
 3348 029c 1B68     		ldr	r3, [r3]
 3349 029e FA68     		ldr	r2, [r7, #12]
 3350 02a0 1268     		ldr	r2, [r2]
 3351 02a2 5268     		ldr	r2, [r2, #4]
 3352 02a4 42F02002 		orr	r2, r2, #32
 3353 02a8 5A60     		str	r2, [r3, #4]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3354              		.loc 1 1833 0
 3355 02aa FB68     		ldr	r3, [r7, #12]
 3356 02ac 1B68     		ldr	r3, [r3]
 3357 02ae FA68     		ldr	r2, [r7, #12]
 3358 02b0 1268     		ldr	r2, [r2]
 3359 02b2 5268     		ldr	r2, [r2, #4]
 3360 02b4 42F00202 		orr	r2, r2, #2
 3361 02b8 5A60     		str	r2, [r3, #4]
 3362              	.L168:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3363              		.loc 1 1837 0
 3364 02ba FB68     		ldr	r3, [r7, #12]
 3365 02bc 0022     		movs	r2, #0
 3366 02be 83F85C20 		strb	r2, [r3, #92]
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
ARM GAS  /tmp/ccVrlOhd.s 			page 92


 3367              		.loc 1 1838 0
 3368 02c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3369              	.L165:
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3370              		.loc 1 1839 0
 3371 02c4 1846     		mov	r0, r3
 3372 02c6 2037     		adds	r7, r7, #32
 3373              	.LCFI67:
 3374              		.cfi_def_cfa_offset 8
 3375 02c8 BD46     		mov	sp, r7
 3376              	.LCFI68:
 3377              		.cfi_def_cfa_register 13
 3378              		@ sp needed
 3379 02ca 80BD     		pop	{r7, pc}
 3380              	.L181:
 3381              		.align	2
 3382              	.L180:
 3383 02cc 00000000 		.word	SPI_DMAHalfReceiveCplt
 3384 02d0 00000000 		.word	SPI_DMAReceiveCplt
 3385 02d4 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3386 02d8 00000000 		.word	SPI_DMATransmitReceiveCplt
 3387 02dc 00000000 		.word	SPI_DMAError
 3388              		.cfi_endproc
 3389              	.LFE148:
 3391              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3392              		.align	1
 3393              		.global	HAL_SPI_Abort
 3394              		.syntax unified
 3395              		.thumb
 3396              		.thumb_func
 3397              		.fpu fpv4-sp-d16
 3399              	HAL_SPI_Abort:
 3400              	.LFB149:
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 3401              		.loc 1 1855 0
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 24
 3404              		@ frame_needed = 1, uses_anonymous_args = 0
 3405 0000 80B5     		push	{r7, lr}
 3406              	.LCFI69:
 3407              		.cfi_def_cfa_offset 8
 3408              		.cfi_offset 7, -8
ARM GAS  /tmp/ccVrlOhd.s 			page 93


 3409              		.cfi_offset 14, -4
 3410 0002 88B0     		sub	sp, sp, #32
 3411              	.LCFI70:
 3412              		.cfi_def_cfa_offset 40
 3413 0004 02AF     		add	r7, sp, #8
 3414              	.LCFI71:
 3415              		.cfi_def_cfa 7, 32
 3416 0006 7860     		str	r0, [r7, #4]
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3417              		.loc 1 1857 0
 3418 0008 0023     		movs	r3, #0
 3419 000a 3B61     		str	r3, [r7, #16]
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
 3420              		.loc 1 1860 0
 3421 000c 0023     		movs	r3, #0
 3422 000e FB75     		strb	r3, [r7, #23]
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 3423              		.loc 1 1863 0
 3424 0010 FFF7FEFF 		bl	HAL_GetTick
 3425 0014 3861     		str	r0, [r7, #16]
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3426              		.loc 1 1866 0
 3427 0016 7B68     		ldr	r3, [r7, #4]
 3428 0018 1B68     		ldr	r3, [r3]
 3429 001a 5B68     		ldr	r3, [r3, #4]
 3430 001c 03F08003 		and	r3, r3, #128
 3431 0020 002B     		cmp	r3, #0
 3432 0022 02D0     		beq	.L183
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3433              		.loc 1 1868 0
 3434 0024 7B68     		ldr	r3, [r7, #4]
 3435 0026 734A     		ldr	r2, .L198
 3436 0028 1A65     		str	r2, [r3, #80]
 3437              	.L183:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3438              		.loc 1 1871 0
 3439 002a 7B68     		ldr	r3, [r7, #4]
 3440 002c 1B68     		ldr	r3, [r3]
 3441 002e 5B68     		ldr	r3, [r3, #4]
 3442 0030 03F04003 		and	r3, r3, #64
 3443 0034 002B     		cmp	r3, #0
 3444 0036 0DD0     		beq	.L185
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3445              		.loc 1 1873 0
 3446 0038 7B68     		ldr	r3, [r7, #4]
 3447 003a 6F4A     		ldr	r2, .L198+4
ARM GAS  /tmp/ccVrlOhd.s 			page 94


 3448 003c DA64     		str	r2, [r3, #76]
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (hspi->State != HAL_SPI_STATE_ABORT)
 3449              		.loc 1 1876 0
 3450 003e 09E0     		b	.L185
 3451              	.L187:
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 3452              		.loc 1 1878 0
 3453 0040 FFF7FEFF 		bl	HAL_GetTick
 3454 0044 0246     		mov	r2, r0
 3455 0046 3B69     		ldr	r3, [r7, #16]
 3456 0048 D31A     		subs	r3, r2, r3
 3457 004a B3F1FF3F 		cmp	r3, #-1
 3458 004e 01D1     		bne	.L185
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 3459              		.loc 1 1880 0
 3460 0050 0323     		movs	r3, #3
 3461 0052 CAE0     		b	.L186
 3462              	.L185:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3463              		.loc 1 1876 0
 3464 0054 7B68     		ldr	r3, [r7, #4]
 3465 0056 93F85D30 		ldrb	r3, [r3, #93]
 3466 005a DBB2     		uxtb	r3, r3
 3467 005c 072B     		cmp	r3, #7
 3468 005e EFD1     		bne	.L187
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupts in case of DMA Mode */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3469              		.loc 1 1885 0
 3470 0060 7B68     		ldr	r3, [r7, #4]
 3471 0062 1B68     		ldr	r3, [r3]
 3472 0064 7A68     		ldr	r2, [r7, #4]
 3473 0066 1268     		ldr	r2, [r2]
 3474 0068 5268     		ldr	r2, [r2, #4]
 3475 006a 22F02002 		bic	r2, r2, #32
 3476 006e 5A60     		str	r2, [r3, #4]
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or SPI DMA Rx request if enabled */
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(hspi->Instance->CR2
 3477              		.loc 1 1888 0
 3478 0070 7B68     		ldr	r3, [r7, #4]
 3479 0072 1B68     		ldr	r3, [r3]
 3480 0074 5B68     		ldr	r3, [r3, #4]
 3481 0076 03F00203 		and	r3, r3, #2
 3482 007a 002B     		cmp	r3, #0
 3483 007c 07D1     		bne	.L188
 3484              		.loc 1 1888 0 is_stmt 0 discriminator 1
 3485 007e 7B68     		ldr	r3, [r7, #4]
 3486 0080 1B68     		ldr	r3, [r3]
 3487 0082 5B68     		ldr	r3, [r3, #4]
 3488 0084 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccVrlOhd.s 			page 95


 3489 0088 002B     		cmp	r3, #0
 3490 008a 00F08680 		beq	.L189
 3491              	.L188:
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3492              		.loc 1 1891 0 is_stmt 1
 3493 008e 7B68     		ldr	r3, [r7, #4]
 3494 0090 5B6D     		ldr	r3, [r3, #84]
 3495 0092 002B     		cmp	r3, #0
 3496 0094 3DD0     		beq	.L190
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3497              		.loc 1 1895 0
 3498 0096 7B68     		ldr	r3, [r7, #4]
 3499 0098 5B6D     		ldr	r3, [r3, #84]
 3500 009a 0022     		movs	r2, #0
 3501 009c 1A65     		str	r2, [r3, #80]
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
 3502              		.loc 1 1898 0
 3503 009e 7B68     		ldr	r3, [r7, #4]
 3504 00a0 5B6D     		ldr	r3, [r3, #84]
 3505 00a2 1846     		mov	r0, r3
 3506 00a4 FFF7FEFF 		bl	HAL_DMA_Abort
 3507 00a8 0346     		mov	r3, r0
 3508 00aa 002B     		cmp	r3, #0
 3509 00ac 02D0     		beq	.L191
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3510              		.loc 1 1900 0
 3511 00ae 7B68     		ldr	r3, [r7, #4]
 3512 00b0 4022     		movs	r2, #64
 3513 00b2 1A66     		str	r2, [r3, #96]
 3514              	.L191:
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Tx DMA Request */
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
 3515              		.loc 1 1904 0
 3516 00b4 7B68     		ldr	r3, [r7, #4]
 3517 00b6 1B68     		ldr	r3, [r3]
 3518 00b8 7A68     		ldr	r2, [r7, #4]
 3519 00ba 1268     		ldr	r2, [r2]
 3520 00bc 5268     		ldr	r2, [r2, #4]
 3521 00be 22F00202 		bic	r2, r2, #2
 3522 00c2 5A60     		str	r2, [r3, #4]
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 3523              		.loc 1 1906 0
 3524 00c4 FFF7FEFF 		bl	HAL_GetTick
 3525 00c8 0346     		mov	r3, r0
 3526 00ca 1A46     		mov	r2, r3
 3527 00cc 6421     		movs	r1, #100
ARM GAS  /tmp/ccVrlOhd.s 			page 96


 3528 00ce 7868     		ldr	r0, [r7, #4]
 3529 00d0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3530 00d4 0346     		mov	r3, r0
 3531 00d6 002B     		cmp	r3, #0
 3532 00d8 02D0     		beq	.L192
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3533              		.loc 1 1908 0
 3534 00da 7B68     		ldr	r3, [r7, #4]
 3535 00dc 4022     		movs	r2, #64
 3536 00de 1A66     		str	r2, [r3, #96]
 3537              	.L192:
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable SPI Peripheral */
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3538              		.loc 1 1912 0
 3539 00e0 7B68     		ldr	r3, [r7, #4]
 3540 00e2 1B68     		ldr	r3, [r3]
 3541 00e4 7A68     		ldr	r2, [r7, #4]
 3542 00e6 1268     		ldr	r2, [r2]
 3543 00e8 1268     		ldr	r2, [r2]
 3544 00ea 22F04002 		bic	r2, r2, #64
 3545 00ee 1A60     		str	r2, [r3]
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
 3546              		.loc 1 1915 0
 3547 00f0 FFF7FEFF 		bl	HAL_GetTick
 3548 00f4 0346     		mov	r3, r0
 3549 00f6 0093     		str	r3, [sp]
 3550 00f8 6423     		movs	r3, #100
 3551 00fa 0022     		movs	r2, #0
 3552 00fc 4FF4C061 		mov	r1, #1536
 3553 0100 7868     		ldr	r0, [r7, #4]
 3554 0102 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3555 0106 0346     		mov	r3, r0
 3556 0108 002B     		cmp	r3, #0
 3557 010a 02D0     		beq	.L190
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3558              		.loc 1 1917 0
 3559 010c 7B68     		ldr	r3, [r7, #4]
 3560 010e 4022     		movs	r2, #64
 3561 0110 1A66     		str	r2, [r3, #96]
 3562              	.L190:
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3563              		.loc 1 1921 0
 3564 0112 7B68     		ldr	r3, [r7, #4]
 3565 0114 9B6D     		ldr	r3, [r3, #88]
 3566 0116 002B     		cmp	r3, #0
 3567 0118 3FD0     		beq	.L189
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
ARM GAS  /tmp/ccVrlOhd.s 			page 97


1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3568              		.loc 1 1925 0
 3569 011a 7B68     		ldr	r3, [r7, #4]
 3570 011c 9B6D     		ldr	r3, [r3, #88]
 3571 011e 0022     		movs	r2, #0
 3572 0120 1A65     		str	r2, [r3, #80]
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
 3573              		.loc 1 1928 0
 3574 0122 7B68     		ldr	r3, [r7, #4]
 3575 0124 9B6D     		ldr	r3, [r3, #88]
 3576 0126 1846     		mov	r0, r3
 3577 0128 FFF7FEFF 		bl	HAL_DMA_Abort
 3578 012c 0346     		mov	r3, r0
 3579 012e 002B     		cmp	r3, #0
 3580 0130 02D0     		beq	.L193
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3581              		.loc 1 1930 0
 3582 0132 7B68     		ldr	r3, [r7, #4]
 3583 0134 4022     		movs	r2, #64
 3584 0136 1A66     		str	r2, [r3, #96]
 3585              	.L193:
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable peripheral */
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3586              		.loc 1 1934 0
 3587 0138 7B68     		ldr	r3, [r7, #4]
 3588 013a 1B68     		ldr	r3, [r3]
 3589 013c 7A68     		ldr	r2, [r7, #4]
 3590 013e 1268     		ldr	r2, [r2]
 3591 0140 1268     		ldr	r2, [r2]
 3592 0142 22F04002 		bic	r2, r2, #64
 3593 0146 1A60     		str	r2, [r3]
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Control the BSY flag */
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
 3594              		.loc 1 1937 0
 3595 0148 FFF7FEFF 		bl	HAL_GetTick
 3596 014c 0346     		mov	r3, r0
 3597 014e 0093     		str	r3, [sp]
 3598 0150 6423     		movs	r3, #100
 3599 0152 0022     		movs	r2, #0
 3600 0154 8021     		movs	r1, #128
 3601 0156 7868     		ldr	r0, [r7, #4]
 3602 0158 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 3603 015c 0346     		mov	r3, r0
 3604 015e 002B     		cmp	r3, #0
 3605 0160 02D0     		beq	.L194
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3606              		.loc 1 1939 0
 3607 0162 7B68     		ldr	r3, [r7, #4]
 3608 0164 4022     		movs	r2, #64
ARM GAS  /tmp/ccVrlOhd.s 			page 98


 3609 0166 1A66     		str	r2, [r3, #96]
 3610              	.L194:
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
 3611              		.loc 1 1943 0
 3612 0168 FFF7FEFF 		bl	HAL_GetTick
 3613 016c 0346     		mov	r3, r0
 3614 016e 0093     		str	r3, [sp]
 3615 0170 6423     		movs	r3, #100
 3616 0172 0022     		movs	r2, #0
 3617 0174 4FF4C061 		mov	r1, #1536
 3618 0178 7868     		ldr	r0, [r7, #4]
 3619 017a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3620 017e 0346     		mov	r3, r0
 3621 0180 002B     		cmp	r3, #0
 3622 0182 02D0     		beq	.L195
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3623              		.loc 1 1945 0
 3624 0184 7B68     		ldr	r3, [r7, #4]
 3625 0186 4022     		movs	r2, #64
 3626 0188 1A66     		str	r2, [r3, #96]
 3627              	.L195:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Rx DMA Request */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
 3628              		.loc 1 1949 0
 3629 018a 7B68     		ldr	r3, [r7, #4]
 3630 018c 1B68     		ldr	r3, [r3]
 3631 018e 7A68     		ldr	r2, [r7, #4]
 3632 0190 1268     		ldr	r2, [r2]
 3633 0192 5268     		ldr	r2, [r2, #4]
 3634 0194 22F00102 		bic	r2, r2, #1
 3635 0198 5A60     		str	r2, [r3, #4]
 3636              	.L189:
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3637              		.loc 1 1953 0
 3638 019a 7B68     		ldr	r3, [r7, #4]
 3639 019c 0022     		movs	r2, #0
 3640 019e A3F84620 		strh	r2, [r3, #70]	@ movhi
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3641              		.loc 1 1954 0
 3642 01a2 7B68     		ldr	r3, [r7, #4]
 3643 01a4 0022     		movs	r2, #0
 3644 01a6 DA87     		strh	r2, [r3, #62]	@ movhi
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check error during Abort procedure */
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 3645              		.loc 1 1957 0
 3646 01a8 7B68     		ldr	r3, [r7, #4]
 3647 01aa 1B6E     		ldr	r3, [r3, #96]
ARM GAS  /tmp/ccVrlOhd.s 			page 99


 3648 01ac 402B     		cmp	r3, #64
 3649 01ae 02D1     		bne	.L196
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3650              		.loc 1 1960 0
 3651 01b0 0123     		movs	r3, #1
 3652 01b2 FB75     		strb	r3, [r7, #23]
 3653 01b4 02E0     		b	.L197
 3654              	.L196:
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 3655              		.loc 1 1965 0
 3656 01b6 7B68     		ldr	r3, [r7, #4]
 3657 01b8 0022     		movs	r2, #0
 3658 01ba 1A66     		str	r2, [r3, #96]
 3659              	.L197:
 3660              	.LBB3:
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3661              		.loc 1 1969 0
 3662 01bc 0023     		movs	r3, #0
 3663 01be FB60     		str	r3, [r7, #12]
 3664 01c0 7B68     		ldr	r3, [r7, #4]
 3665 01c2 1B68     		ldr	r3, [r3]
 3666 01c4 DB68     		ldr	r3, [r3, #12]
 3667 01c6 FB60     		str	r3, [r7, #12]
 3668 01c8 7B68     		ldr	r3, [r7, #4]
 3669 01ca 1B68     		ldr	r3, [r3]
 3670 01cc 9B68     		ldr	r3, [r3, #8]
 3671 01ce FB60     		str	r3, [r7, #12]
 3672 01d0 FB68     		ldr	r3, [r7, #12]
 3673              	.LBE3:
 3674              	.LBB4:
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 3675              		.loc 1 1970 0
 3676 01d2 0023     		movs	r3, #0
 3677 01d4 BB60     		str	r3, [r7, #8]
 3678 01d6 7B68     		ldr	r3, [r7, #4]
 3679 01d8 1B68     		ldr	r3, [r3]
 3680 01da 9B68     		ldr	r3, [r3, #8]
 3681 01dc BB60     		str	r3, [r7, #8]
 3682 01de BB68     		ldr	r3, [r7, #8]
 3683              	.LBE4:
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->state to ready */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3684              		.loc 1 1973 0
 3685 01e0 7B68     		ldr	r3, [r7, #4]
 3686 01e2 0122     		movs	r2, #1
 3687 01e4 83F85D20 		strb	r2, [r3, #93]
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccVrlOhd.s 			page 100


1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3688              		.loc 1 1975 0
 3689 01e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3690              	.L186:
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3691              		.loc 1 1976 0
 3692 01ea 1846     		mov	r0, r3
 3693 01ec 1837     		adds	r7, r7, #24
 3694              	.LCFI72:
 3695              		.cfi_def_cfa_offset 8
 3696 01ee BD46     		mov	sp, r7
 3697              	.LCFI73:
 3698              		.cfi_def_cfa_register 13
 3699              		@ sp needed
 3700 01f0 80BD     		pop	{r7, pc}
 3701              	.L199:
 3702 01f2 00BF     		.align	2
 3703              	.L198:
 3704 01f4 00000000 		.word	SPI_AbortTx_ISR
 3705 01f8 00000000 		.word	SPI_AbortRx_ISR
 3706              		.cfi_endproc
 3707              	.LFE149:
 3709              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 3710              		.align	1
 3711              		.global	HAL_SPI_Abort_IT
 3712              		.syntax unified
 3713              		.thumb
 3714              		.thumb_func
 3715              		.fpu fpv4-sp-d16
 3717              	HAL_SPI_Abort_IT:
 3718              	.LFB150:
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 3719              		.loc 1 1994 0
 3720              		.cfi_startproc
 3721              		@ args = 0, pretend = 0, frame = 32
 3722              		@ frame_needed = 1, uses_anonymous_args = 0
 3723 0000 80B5     		push	{r7, lr}
 3724              	.LCFI74:
 3725              		.cfi_def_cfa_offset 8
 3726              		.cfi_offset 7, -8
ARM GAS  /tmp/ccVrlOhd.s 			page 101


 3727              		.cfi_offset 14, -4
 3728 0002 88B0     		sub	sp, sp, #32
 3729              	.LCFI75:
 3730              		.cfi_def_cfa_offset 40
 3731 0004 00AF     		add	r7, sp, #0
 3732              	.LCFI76:
 3733              		.cfi_def_cfa_register 7
 3734 0006 7860     		str	r0, [r7, #4]
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3735              		.loc 1 1996 0
 3736 0008 0023     		movs	r3, #0
 3737 000a 7B61     		str	r3, [r7, #20]
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t abortcplt ;
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
 3738              		.loc 1 2000 0
 3739 000c 0023     		movs	r3, #0
 3740 000e FB77     		strb	r3, [r7, #31]
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   abortcplt = 1U;
 3741              		.loc 1 2001 0
 3742 0010 0123     		movs	r3, #1
 3743 0012 BB61     		str	r3, [r7, #24]
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 3744              		.loc 1 2004 0
 3745 0014 FFF7FEFF 		bl	HAL_GetTick
 3746 0018 7861     		str	r0, [r7, #20]
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3747              		.loc 1 2007 0
 3748 001a 7B68     		ldr	r3, [r7, #4]
 3749 001c 1B68     		ldr	r3, [r3]
 3750 001e 5B68     		ldr	r3, [r3, #4]
 3751 0020 03F08003 		and	r3, r3, #128
 3752 0024 002B     		cmp	r3, #0
 3753 0026 02D0     		beq	.L201
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3754              		.loc 1 2009 0
 3755 0028 7B68     		ldr	r3, [r7, #4]
 3756 002a 7A4A     		ldr	r2, .L221
 3757 002c 1A65     		str	r2, [r3, #80]
 3758              	.L201:
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3759              		.loc 1 2012 0
 3760 002e 7B68     		ldr	r3, [r7, #4]
 3761 0030 1B68     		ldr	r3, [r3]
 3762 0032 5B68     		ldr	r3, [r3, #4]
 3763 0034 03F04003 		and	r3, r3, #64
 3764 0038 002B     		cmp	r3, #0
 3765 003a 0DD0     		beq	.L203
ARM GAS  /tmp/ccVrlOhd.s 			page 102


2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3766              		.loc 1 2014 0
 3767 003c 7B68     		ldr	r3, [r7, #4]
 3768 003e 764A     		ldr	r2, .L221+4
 3769 0040 DA64     		str	r2, [r3, #76]
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (hspi->State != HAL_SPI_STATE_ABORT)
 3770              		.loc 1 2017 0
 3771 0042 09E0     		b	.L203
 3772              	.L205:
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 3773              		.loc 1 2019 0
 3774 0044 FFF7FEFF 		bl	HAL_GetTick
 3775 0048 0246     		mov	r2, r0
 3776 004a 7B69     		ldr	r3, [r7, #20]
 3777 004c D31A     		subs	r3, r2, r3
 3778 004e B3F1FF3F 		cmp	r3, #-1
 3779 0052 01D1     		bne	.L203
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 3780              		.loc 1 2021 0
 3781 0054 0323     		movs	r3, #3
 3782 0056 D9E0     		b	.L204
 3783              	.L203:
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3784              		.loc 1 2017 0
 3785 0058 7B68     		ldr	r3, [r7, #4]
 3786 005a 93F85D30 		ldrb	r3, [r3, #93]
 3787 005e DBB2     		uxtb	r3, r3
 3788 0060 072B     		cmp	r3, #7
 3789 0062 EFD1     		bne	.L205
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupts in case of DMA Mode */
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3790              		.loc 1 2026 0
 3791 0064 7B68     		ldr	r3, [r7, #4]
 3792 0066 1B68     		ldr	r3, [r3]
 3793 0068 7A68     		ldr	r2, [r7, #4]
 3794 006a 1268     		ldr	r2, [r2]
 3795 006c 5268     		ldr	r2, [r2, #4]
 3796 006e 22F02002 		bic	r2, r2, #32
 3797 0072 5A60     		str	r2, [r3, #4]
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      before any call to DMA Abort functions */
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 3798              		.loc 1 2031 0
 3799 0074 7B68     		ldr	r3, [r7, #4]
 3800 0076 5B6D     		ldr	r3, [r3, #84]
 3801 0078 002B     		cmp	r3, #0
 3802 007a 0FD0     		beq	.L206
ARM GAS  /tmp/ccVrlOhd.s 			page 103


2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3803              		.loc 1 2035 0
 3804 007c 7B68     		ldr	r3, [r7, #4]
 3805 007e 1B68     		ldr	r3, [r3]
 3806 0080 5B68     		ldr	r3, [r3, #4]
 3807 0082 03F00203 		and	r3, r3, #2
 3808 0086 002B     		cmp	r3, #0
 3809 0088 04D0     		beq	.L207
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
 3810              		.loc 1 2037 0
 3811 008a 7B68     		ldr	r3, [r7, #4]
 3812 008c 5B6D     		ldr	r3, [r3, #84]
 3813 008e 634A     		ldr	r2, .L221+8
 3814 0090 1A65     		str	r2, [r3, #80]
 3815 0092 03E0     		b	.L206
 3816              	.L207:
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3817              		.loc 1 2041 0
 3818 0094 7B68     		ldr	r3, [r7, #4]
 3819 0096 5B6D     		ldr	r3, [r3, #84]
 3820 0098 0022     		movs	r2, #0
 3821 009a 1A65     		str	r2, [r3, #80]
 3822              	.L206:
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 3823              		.loc 1 2045 0
 3824 009c 7B68     		ldr	r3, [r7, #4]
 3825 009e 9B6D     		ldr	r3, [r3, #88]
 3826 00a0 002B     		cmp	r3, #0
 3827 00a2 0FD0     		beq	.L208
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3828              		.loc 1 2049 0
 3829 00a4 7B68     		ldr	r3, [r7, #4]
 3830 00a6 1B68     		ldr	r3, [r3]
 3831 00a8 5B68     		ldr	r3, [r3, #4]
 3832 00aa 03F00103 		and	r3, r3, #1
 3833 00ae 002B     		cmp	r3, #0
 3834 00b0 04D0     		beq	.L209
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
 3835              		.loc 1 2051 0
 3836 00b2 7B68     		ldr	r3, [r7, #4]
 3837 00b4 9B6D     		ldr	r3, [r3, #88]
 3838 00b6 5A4A     		ldr	r2, .L221+12
 3839 00b8 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccVrlOhd.s 			page 104


 3840 00ba 03E0     		b	.L208
 3841              	.L209:
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3842              		.loc 1 2055 0
 3843 00bc 7B68     		ldr	r3, [r7, #4]
 3844 00be 9B6D     		ldr	r3, [r3, #88]
 3845 00c0 0022     		movs	r2, #0
 3846 00c2 1A65     		str	r2, [r3, #80]
 3847              	.L208:
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN)) && (HAL_IS_BIT_SET(hspi->Instance->CR2
 3848              		.loc 1 2060 0
 3849 00c4 7B68     		ldr	r3, [r7, #4]
 3850 00c6 1B68     		ldr	r3, [r3]
 3851 00c8 5B68     		ldr	r3, [r3, #4]
 3852 00ca 03F00203 		and	r3, r3, #2
 3853 00ce 002B     		cmp	r3, #0
 3854 00d0 34D0     		beq	.L210
 3855              		.loc 1 2060 0 is_stmt 0 discriminator 1
 3856 00d2 7B68     		ldr	r3, [r7, #4]
 3857 00d4 1B68     		ldr	r3, [r3]
 3858 00d6 5B68     		ldr	r3, [r3, #4]
 3859 00d8 03F00103 		and	r3, r3, #1
 3860 00dc 002B     		cmp	r3, #0
 3861 00de 2DD0     		beq	.L210
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3862              		.loc 1 2063 0 is_stmt 1
 3863 00e0 7B68     		ldr	r3, [r7, #4]
 3864 00e2 5B6D     		ldr	r3, [r3, #84]
 3865 00e4 002B     		cmp	r3, #0
 3866 00e6 11D0     		beq	.L211
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 3867              		.loc 1 2066 0
 3868 00e8 7B68     		ldr	r3, [r7, #4]
 3869 00ea 5B6D     		ldr	r3, [r3, #84]
 3870 00ec 1846     		mov	r0, r3
 3871 00ee FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3872 00f2 0346     		mov	r3, r0
 3873 00f4 002B     		cmp	r3, #0
 3874 00f6 07D0     		beq	.L212
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 3875              		.loc 1 2068 0
 3876 00f8 7B68     		ldr	r3, [r7, #4]
 3877 00fa 5B6D     		ldr	r3, [r3, #84]
 3878 00fc 0022     		movs	r2, #0
 3879 00fe 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccVrlOhd.s 			page 105


2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3880              		.loc 1 2069 0
 3881 0100 7B68     		ldr	r3, [r7, #4]
 3882 0102 4022     		movs	r2, #64
 3883 0104 1A66     		str	r2, [r3, #96]
 3884 0106 01E0     		b	.L211
 3885              	.L212:
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 3886              		.loc 1 2073 0
 3887 0108 0023     		movs	r3, #0
 3888 010a BB61     		str	r3, [r7, #24]
 3889              	.L211:
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3890              		.loc 1 2077 0
 3891 010c 7B68     		ldr	r3, [r7, #4]
 3892 010e 9B6D     		ldr	r3, [r3, #88]
 3893 0110 002B     		cmp	r3, #0
 3894 0112 13D0     		beq	.L210
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 3895              		.loc 1 2080 0
 3896 0114 7B68     		ldr	r3, [r7, #4]
 3897 0116 9B6D     		ldr	r3, [r3, #88]
 3898 0118 1846     		mov	r0, r3
 3899 011a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3900 011e 0346     		mov	r3, r0
 3901 0120 002B     		cmp	r3, #0
 3902 0122 09D0     		beq	.L213
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 3903              		.loc 1 2082 0
 3904 0124 7B68     		ldr	r3, [r7, #4]
 3905 0126 9B6D     		ldr	r3, [r3, #88]
 3906 0128 0022     		movs	r2, #0
 3907 012a 1A65     		str	r2, [r3, #80]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3908              		.loc 1 2083 0
 3909 012c 7B68     		ldr	r3, [r7, #4]
 3910 012e 4022     		movs	r2, #64
 3911 0130 1A66     		str	r2, [r3, #96]
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 1U;
 3912              		.loc 1 2084 0
 3913 0132 0123     		movs	r3, #1
 3914 0134 BB61     		str	r3, [r7, #24]
 3915 0136 01E0     		b	.L210
 3916              	.L213:
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
ARM GAS  /tmp/ccVrlOhd.s 			page 106


 3917              		.loc 1 2088 0
 3918 0138 0023     		movs	r3, #0
 3919 013a BB61     		str	r3, [r7, #24]
 3920              	.L210:
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3921              		.loc 1 2094 0
 3922 013c 7B68     		ldr	r3, [r7, #4]
 3923 013e 1B68     		ldr	r3, [r3]
 3924 0140 5B68     		ldr	r3, [r3, #4]
 3925 0142 03F00203 		and	r3, r3, #2
 3926 0146 002B     		cmp	r3, #0
 3927 0148 15D0     		beq	.L214
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3928              		.loc 1 2097 0
 3929 014a 7B68     		ldr	r3, [r7, #4]
 3930 014c 5B6D     		ldr	r3, [r3, #84]
 3931 014e 002B     		cmp	r3, #0
 3932 0150 11D0     		beq	.L214
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 3933              		.loc 1 2100 0
 3934 0152 7B68     		ldr	r3, [r7, #4]
 3935 0154 5B6D     		ldr	r3, [r3, #84]
 3936 0156 1846     		mov	r0, r3
 3937 0158 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3938 015c 0346     		mov	r3, r0
 3939 015e 002B     		cmp	r3, #0
 3940 0160 07D0     		beq	.L215
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 3941              		.loc 1 2102 0
 3942 0162 7B68     		ldr	r3, [r7, #4]
 3943 0164 5B6D     		ldr	r3, [r3, #84]
 3944 0166 0022     		movs	r2, #0
 3945 0168 1A65     		str	r2, [r3, #80]
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3946              		.loc 1 2103 0
 3947 016a 7B68     		ldr	r3, [r7, #4]
 3948 016c 4022     		movs	r2, #64
 3949 016e 1A66     		str	r2, [r3, #96]
 3950 0170 01E0     		b	.L214
 3951              	.L215:
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 3952              		.loc 1 2107 0
 3953 0172 0023     		movs	r3, #0
 3954 0174 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccVrlOhd.s 			page 107


 3955              	.L214:
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3956              		.loc 1 2112 0
 3957 0176 7B68     		ldr	r3, [r7, #4]
 3958 0178 1B68     		ldr	r3, [r3]
 3959 017a 5B68     		ldr	r3, [r3, #4]
 3960 017c 03F00103 		and	r3, r3, #1
 3961 0180 002B     		cmp	r3, #0
 3962 0182 15D0     		beq	.L216
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3963              		.loc 1 2115 0
 3964 0184 7B68     		ldr	r3, [r7, #4]
 3965 0186 9B6D     		ldr	r3, [r3, #88]
 3966 0188 002B     		cmp	r3, #0
 3967 018a 11D0     		beq	.L216
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 3968              		.loc 1 2118 0
 3969 018c 7B68     		ldr	r3, [r7, #4]
 3970 018e 9B6D     		ldr	r3, [r3, #88]
 3971 0190 1846     		mov	r0, r3
 3972 0192 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3973 0196 0346     		mov	r3, r0
 3974 0198 002B     		cmp	r3, #0
 3975 019a 07D0     		beq	.L217
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 3976              		.loc 1 2120 0
 3977 019c 7B68     		ldr	r3, [r7, #4]
 3978 019e 9B6D     		ldr	r3, [r3, #88]
 3979 01a0 0022     		movs	r2, #0
 3980 01a2 1A65     		str	r2, [r3, #80]
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3981              		.loc 1 2121 0
 3982 01a4 7B68     		ldr	r3, [r7, #4]
 3983 01a6 4022     		movs	r2, #64
 3984 01a8 1A66     		str	r2, [r3, #96]
 3985 01aa 01E0     		b	.L216
 3986              	.L217:
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 3987              		.loc 1 2125 0
 3988 01ac 0023     		movs	r3, #0
 3989 01ae BB61     		str	r3, [r7, #24]
 3990              	.L216:
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVrlOhd.s 			page 108


2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (abortcplt == 1U)
 3991              		.loc 1 2130 0
 3992 01b0 BB69     		ldr	r3, [r7, #24]
 3993 01b2 012B     		cmp	r3, #1
 3994 01b4 29D1     		bne	.L218
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 3995              		.loc 1 2133 0
 3996 01b6 7B68     		ldr	r3, [r7, #4]
 3997 01b8 0022     		movs	r2, #0
 3998 01ba A3F84620 		strh	r2, [r3, #70]	@ movhi
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 3999              		.loc 1 2134 0
 4000 01be 7B68     		ldr	r3, [r7, #4]
 4001 01c0 0022     		movs	r2, #0
 4002 01c2 DA87     		strh	r2, [r3, #62]	@ movhi
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check error during Abort procedure */
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 4003              		.loc 1 2137 0
 4004 01c4 7B68     		ldr	r3, [r7, #4]
 4005 01c6 1B6E     		ldr	r3, [r3, #96]
 4006 01c8 402B     		cmp	r3, #64
 4007 01ca 02D1     		bne	.L219
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4008              		.loc 1 2140 0
 4009 01cc 0123     		movs	r3, #1
 4010 01ce FB77     		strb	r3, [r7, #31]
 4011 01d0 02E0     		b	.L220
 4012              	.L219:
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Reset errorCode */
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 4013              		.loc 1 2145 0
 4014 01d2 7B68     		ldr	r3, [r7, #4]
 4015 01d4 0022     		movs	r2, #0
 4016 01d6 1A66     		str	r2, [r3, #96]
 4017              	.L220:
 4018              	.LBB5:
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4019              		.loc 1 2149 0
 4020 01d8 0023     		movs	r3, #0
 4021 01da 3B61     		str	r3, [r7, #16]
 4022 01dc 7B68     		ldr	r3, [r7, #4]
 4023 01de 1B68     		ldr	r3, [r3]
 4024 01e0 DB68     		ldr	r3, [r3, #12]
 4025 01e2 3B61     		str	r3, [r7, #16]
 4026 01e4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 109


 4027 01e6 1B68     		ldr	r3, [r3]
 4028 01e8 9B68     		ldr	r3, [r3, #8]
 4029 01ea 3B61     		str	r3, [r7, #16]
 4030 01ec 3B69     		ldr	r3, [r7, #16]
 4031              	.LBE5:
 4032              	.LBB6:
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 4033              		.loc 1 2150 0
 4034 01ee 0023     		movs	r3, #0
 4035 01f0 FB60     		str	r3, [r7, #12]
 4036 01f2 7B68     		ldr	r3, [r7, #4]
 4037 01f4 1B68     		ldr	r3, [r3]
 4038 01f6 9B68     		ldr	r3, [r3, #8]
 4039 01f8 FB60     		str	r3, [r7, #12]
 4040 01fa FB68     		ldr	r3, [r7, #12]
 4041              	.LBE6:
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4042              		.loc 1 2153 0
 4043 01fc 7B68     		ldr	r3, [r7, #4]
 4044 01fe 0122     		movs	r2, #1
 4045 0200 83F85D20 		strb	r2, [r3, #93]
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
 4046              		.loc 1 2156 0
 4047 0204 7868     		ldr	r0, [r7, #4]
 4048 0206 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4049              	.L218:
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 4050              		.loc 1 2159 0
 4051 020a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4052              	.L204:
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4053              		.loc 1 2160 0
 4054 020c 1846     		mov	r0, r3
 4055 020e 2037     		adds	r7, r7, #32
 4056              	.LCFI77:
 4057              		.cfi_def_cfa_offset 8
 4058 0210 BD46     		mov	sp, r7
 4059              	.LCFI78:
 4060              		.cfi_def_cfa_register 13
 4061              		@ sp needed
 4062 0212 80BD     		pop	{r7, pc}
 4063              	.L222:
 4064              		.align	2
 4065              	.L221:
 4066 0214 00000000 		.word	SPI_AbortTx_ISR
 4067 0218 00000000 		.word	SPI_AbortRx_ISR
 4068 021c 00000000 		.word	SPI_DMATxAbortCallback
 4069 0220 00000000 		.word	SPI_DMARxAbortCallback
 4070              		.cfi_endproc
 4071              	.LFE150:
 4073              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
ARM GAS  /tmp/ccVrlOhd.s 			page 110


 4074              		.align	1
 4075              		.global	HAL_SPI_DMAPause
 4076              		.syntax unified
 4077              		.thumb
 4078              		.thumb_func
 4079              		.fpu fpv4-sp-d16
 4081              	HAL_SPI_DMAPause:
 4082              	.LFB151:
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4083              		.loc 1 2169 0
 4084              		.cfi_startproc
 4085              		@ args = 0, pretend = 0, frame = 8
 4086              		@ frame_needed = 1, uses_anonymous_args = 0
 4087              		@ link register save eliminated.
 4088 0000 80B4     		push	{r7}
 4089              	.LCFI79:
 4090              		.cfi_def_cfa_offset 4
 4091              		.cfi_offset 7, -4
 4092 0002 83B0     		sub	sp, sp, #12
 4093              	.LCFI80:
 4094              		.cfi_def_cfa_offset 16
 4095 0004 00AF     		add	r7, sp, #0
 4096              	.LCFI81:
 4097              		.cfi_def_cfa_register 7
 4098 0006 7860     		str	r0, [r7, #4]
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4099              		.loc 1 2171 0
 4100 0008 7B68     		ldr	r3, [r7, #4]
 4101 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 4102 000e 012B     		cmp	r3, #1
 4103 0010 01D1     		bne	.L224
 4104              		.loc 1 2171 0 is_stmt 0 discriminator 1
 4105 0012 0223     		movs	r3, #2
 4106 0014 10E0     		b	.L225
 4107              	.L224:
 4108              		.loc 1 2171 0 discriminator 2
 4109 0016 7B68     		ldr	r3, [r7, #4]
 4110 0018 0122     		movs	r2, #1
 4111 001a 83F85C20 		strb	r2, [r3, #92]
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4112              		.loc 1 2174 0 is_stmt 1 discriminator 2
 4113 001e 7B68     		ldr	r3, [r7, #4]
 4114 0020 1B68     		ldr	r3, [r3]
 4115 0022 7A68     		ldr	r2, [r7, #4]
 4116 0024 1268     		ldr	r2, [r2]
 4117 0026 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 111


 4118 0028 22F00302 		bic	r2, r2, #3
 4119 002c 5A60     		str	r2, [r3, #4]
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4120              		.loc 1 2177 0 discriminator 2
 4121 002e 7B68     		ldr	r3, [r7, #4]
 4122 0030 0022     		movs	r2, #0
 4123 0032 83F85C20 		strb	r2, [r3, #92]
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 4124              		.loc 1 2179 0 discriminator 2
 4125 0036 0023     		movs	r3, #0
 4126              	.L225:
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4127              		.loc 1 2180 0
 4128 0038 1846     		mov	r0, r3
 4129 003a 0C37     		adds	r7, r7, #12
 4130              	.LCFI82:
 4131              		.cfi_def_cfa_offset 4
 4132 003c BD46     		mov	sp, r7
 4133              	.LCFI83:
 4134              		.cfi_def_cfa_register 13
 4135              		@ sp needed
 4136 003e 5DF8047B 		ldr	r7, [sp], #4
 4137              	.LCFI84:
 4138              		.cfi_restore 7
 4139              		.cfi_def_cfa_offset 0
 4140 0042 7047     		bx	lr
 4141              		.cfi_endproc
 4142              	.LFE151:
 4144              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4145              		.align	1
 4146              		.global	HAL_SPI_DMAResume
 4147              		.syntax unified
 4148              		.thumb
 4149              		.thumb_func
 4150              		.fpu fpv4-sp-d16
 4152              	HAL_SPI_DMAResume:
 4153              	.LFB152:
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4154              		.loc 1 2189 0
 4155              		.cfi_startproc
 4156              		@ args = 0, pretend = 0, frame = 8
 4157              		@ frame_needed = 1, uses_anonymous_args = 0
 4158              		@ link register save eliminated.
 4159 0000 80B4     		push	{r7}
 4160              	.LCFI85:
 4161              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccVrlOhd.s 			page 112


 4162              		.cfi_offset 7, -4
 4163 0002 83B0     		sub	sp, sp, #12
 4164              	.LCFI86:
 4165              		.cfi_def_cfa_offset 16
 4166 0004 00AF     		add	r7, sp, #0
 4167              	.LCFI87:
 4168              		.cfi_def_cfa_register 7
 4169 0006 7860     		str	r0, [r7, #4]
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4170              		.loc 1 2191 0
 4171 0008 7B68     		ldr	r3, [r7, #4]
 4172 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 4173 000e 012B     		cmp	r3, #1
 4174 0010 01D1     		bne	.L227
 4175              		.loc 1 2191 0 is_stmt 0 discriminator 1
 4176 0012 0223     		movs	r3, #2
 4177 0014 10E0     		b	.L228
 4178              	.L227:
 4179              		.loc 1 2191 0 discriminator 2
 4180 0016 7B68     		ldr	r3, [r7, #4]
 4181 0018 0122     		movs	r2, #1
 4182 001a 83F85C20 		strb	r2, [r3, #92]
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4183              		.loc 1 2194 0 is_stmt 1 discriminator 2
 4184 001e 7B68     		ldr	r3, [r7, #4]
 4185 0020 1B68     		ldr	r3, [r3]
 4186 0022 7A68     		ldr	r2, [r7, #4]
 4187 0024 1268     		ldr	r2, [r2]
 4188 0026 5268     		ldr	r2, [r2, #4]
 4189 0028 42F00302 		orr	r2, r2, #3
 4190 002c 5A60     		str	r2, [r3, #4]
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4191              		.loc 1 2197 0 discriminator 2
 4192 002e 7B68     		ldr	r3, [r7, #4]
 4193 0030 0022     		movs	r2, #0
 4194 0032 83F85C20 		strb	r2, [r3, #92]
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 4195              		.loc 1 2199 0 discriminator 2
 4196 0036 0023     		movs	r3, #0
 4197              	.L228:
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4198              		.loc 1 2200 0
 4199 0038 1846     		mov	r0, r3
 4200 003a 0C37     		adds	r7, r7, #12
 4201              	.LCFI88:
 4202              		.cfi_def_cfa_offset 4
 4203 003c BD46     		mov	sp, r7
 4204              	.LCFI89:
 4205              		.cfi_def_cfa_register 13
 4206              		@ sp needed
 4207 003e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccVrlOhd.s 			page 113


 4208              	.LCFI90:
 4209              		.cfi_restore 7
 4210              		.cfi_def_cfa_offset 0
 4211 0042 7047     		bx	lr
 4212              		.cfi_endproc
 4213              	.LFE152:
 4215              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4216              		.align	1
 4217              		.global	HAL_SPI_DMAStop
 4218              		.syntax unified
 4219              		.thumb
 4220              		.thumb_func
 4221              		.fpu fpv4-sp-d16
 4223              	HAL_SPI_DMAStop:
 4224              	.LFB153:
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Stop the DMA Transfer.
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4225              		.loc 1 2209 0
 4226              		.cfi_startproc
 4227              		@ args = 0, pretend = 0, frame = 8
 4228              		@ frame_needed = 1, uses_anonymous_args = 0
 4229 0000 80B5     		push	{r7, lr}
 4230              	.LCFI91:
 4231              		.cfi_def_cfa_offset 8
 4232              		.cfi_offset 7, -8
 4233              		.cfi_offset 14, -4
 4234 0002 82B0     		sub	sp, sp, #8
 4235              	.LCFI92:
 4236              		.cfi_def_cfa_offset 16
 4237 0004 00AF     		add	r7, sp, #0
 4238              	.LCFI93:
 4239              		.cfi_def_cfa_register 7
 4240 0006 7860     		str	r0, [r7, #4]
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      */
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 4241              		.loc 1 2217 0
 4242 0008 7B68     		ldr	r3, [r7, #4]
 4243 000a 5B6D     		ldr	r3, [r3, #84]
 4244 000c 002B     		cmp	r3, #0
 4245 000e 04D0     		beq	.L230
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmatx);
 4246              		.loc 1 2219 0
 4247 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 114


 4248 0012 5B6D     		ldr	r3, [r3, #84]
 4249 0014 1846     		mov	r0, r3
 4250 0016 FFF7FEFF 		bl	HAL_DMA_Abort
 4251              	.L230:
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 4252              		.loc 1 2222 0
 4253 001a 7B68     		ldr	r3, [r7, #4]
 4254 001c 9B6D     		ldr	r3, [r3, #88]
 4255 001e 002B     		cmp	r3, #0
 4256 0020 04D0     		beq	.L231
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmarx);
 4257              		.loc 1 2224 0
 4258 0022 7B68     		ldr	r3, [r7, #4]
 4259 0024 9B6D     		ldr	r3, [r3, #88]
 4260 0026 1846     		mov	r0, r3
 4261 0028 FFF7FEFF 		bl	HAL_DMA_Abort
 4262              	.L231:
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4263              		.loc 1 2228 0
 4264 002c 7B68     		ldr	r3, [r7, #4]
 4265 002e 1B68     		ldr	r3, [r3]
 4266 0030 7A68     		ldr	r2, [r7, #4]
 4267 0032 1268     		ldr	r2, [r2]
 4268 0034 5268     		ldr	r2, [r2, #4]
 4269 0036 22F00302 		bic	r2, r2, #3
 4270 003a 5A60     		str	r2, [r3, #4]
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4271              		.loc 1 2229 0
 4272 003c 7B68     		ldr	r3, [r7, #4]
 4273 003e 0122     		movs	r2, #1
 4274 0040 83F85D20 		strb	r2, [r3, #93]
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 4275              		.loc 1 2230 0
 4276 0044 0023     		movs	r3, #0
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4277              		.loc 1 2231 0
 4278 0046 1846     		mov	r0, r3
 4279 0048 0837     		adds	r7, r7, #8
 4280              	.LCFI94:
 4281              		.cfi_def_cfa_offset 8
 4282 004a BD46     		mov	sp, r7
 4283              	.LCFI95:
 4284              		.cfi_def_cfa_register 13
 4285              		@ sp needed
 4286 004c 80BD     		pop	{r7, pc}
 4287              		.cfi_endproc
 4288              	.LFE153:
 4290              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4291              		.align	1
 4292              		.global	HAL_SPI_IRQHandler
 4293              		.syntax unified
ARM GAS  /tmp/ccVrlOhd.s 			page 115


 4294              		.thumb
 4295              		.thumb_func
 4296              		.fpu fpv4-sp-d16
 4298              	HAL_SPI_IRQHandler:
 4299              	.LFB154:
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4300              		.loc 1 2240 0
 4301              		.cfi_startproc
 4302              		@ args = 0, pretend = 0, frame = 32
 4303              		@ frame_needed = 1, uses_anonymous_args = 0
 4304 0000 80B5     		push	{r7, lr}
 4305              	.LCFI96:
 4306              		.cfi_def_cfa_offset 8
 4307              		.cfi_offset 7, -8
 4308              		.cfi_offset 14, -4
 4309 0002 88B0     		sub	sp, sp, #32
 4310              	.LCFI97:
 4311              		.cfi_def_cfa_offset 40
 4312 0004 00AF     		add	r7, sp, #0
 4313              	.LCFI98:
 4314              		.cfi_def_cfa_register 7
 4315 0006 7860     		str	r0, [r7, #4]
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4316              		.loc 1 2241 0
 4317 0008 7B68     		ldr	r3, [r7, #4]
 4318 000a 1B68     		ldr	r3, [r3]
 4319 000c 5B68     		ldr	r3, [r3, #4]
 4320 000e FB61     		str	r3, [r7, #28]
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4321              		.loc 1 2242 0
 4322 0010 7B68     		ldr	r3, [r7, #4]
 4323 0012 1B68     		ldr	r3, [r3]
 4324 0014 9B68     		ldr	r3, [r3, #8]
 4325 0016 BB61     		str	r3, [r7, #24]
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((itflag & SPI_FLAG_OVR) == RESET) &&
 4326              		.loc 1 2245 0
 4327 0018 BB69     		ldr	r3, [r7, #24]
 4328 001a 03F04003 		and	r3, r3, #64
 4329 001e 002B     		cmp	r3, #0
 4330 0020 0ED1     		bne	.L234
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       ((itflag & SPI_FLAG_RXNE) != RESET) && ((itsource & SPI_IT_RXNE) != RESET))
 4331              		.loc 1 2246 0 discriminator 1
 4332 0022 BB69     		ldr	r3, [r7, #24]
 4333 0024 03F00103 		and	r3, r3, #1
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       ((itflag & SPI_FLAG_RXNE) != RESET) && ((itsource & SPI_IT_RXNE) != RESET))
 4334              		.loc 1 2245 0 discriminator 1
 4335 0028 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVrlOhd.s 			page 116


 4336 002a 09D0     		beq	.L234
 4337              		.loc 1 2246 0
 4338 002c FB69     		ldr	r3, [r7, #28]
 4339 002e 03F04003 		and	r3, r3, #64
 4340 0032 002B     		cmp	r3, #0
 4341 0034 04D0     		beq	.L234
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR(hspi);
 4342              		.loc 1 2248 0
 4343 0036 7B68     		ldr	r3, [r7, #4]
 4344 0038 DB6C     		ldr	r3, [r3, #76]
 4345 003a 7868     		ldr	r0, [r7, #4]
 4346 003c 9847     		blx	r3
 4347              	.LVL0:
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 4348              		.loc 1 2249 0
 4349 003e B1E0     		b	.L233
 4350              	.L234:
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((itflag & SPI_FLAG_TXE) != RESET) && ((itsource & SPI_IT_TXE) != RESET))
 4351              		.loc 1 2253 0
 4352 0040 BB69     		ldr	r3, [r7, #24]
 4353 0042 03F00203 		and	r3, r3, #2
 4354 0046 002B     		cmp	r3, #0
 4355 0048 09D0     		beq	.L236
 4356              		.loc 1 2253 0 is_stmt 0 discriminator 1
 4357 004a FB69     		ldr	r3, [r7, #28]
 4358 004c 03F08003 		and	r3, r3, #128
 4359 0050 002B     		cmp	r3, #0
 4360 0052 04D0     		beq	.L236
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR(hspi);
 4361              		.loc 1 2255 0 is_stmt 1
 4362 0054 7B68     		ldr	r3, [r7, #4]
 4363 0056 1B6D     		ldr	r3, [r3, #80]
 4364 0058 7868     		ldr	r0, [r7, #4]
 4365 005a 9847     		blx	r3
 4366              	.LVL1:
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 4367              		.loc 1 2256 0
 4368 005c A2E0     		b	.L233
 4369              	.L236:
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((itflag & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE)) != RESET) && ((itsource & SPI_IT_ER
 4370              		.loc 1 2260 0
 4371 005e BB69     		ldr	r3, [r7, #24]
 4372 0060 03F4B073 		and	r3, r3, #352
 4373 0064 002B     		cmp	r3, #0
 4374 0066 00F09D80 		beq	.L233
 4375              		.loc 1 2260 0 is_stmt 0 discriminator 1
 4376 006a FB69     		ldr	r3, [r7, #28]
 4377 006c 03F02003 		and	r3, r3, #32
 4378 0070 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVrlOhd.s 			page 117


 4379 0072 00F09780 		beq	.L233
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_OVR) != RESET)
 4380              		.loc 1 2263 0 is_stmt 1
 4381 0076 BB69     		ldr	r3, [r7, #24]
 4382 0078 03F04003 		and	r3, r3, #64
 4383 007c 002B     		cmp	r3, #0
 4384 007e 23D0     		beq	.L237
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 4385              		.loc 1 2265 0
 4386 0080 7B68     		ldr	r3, [r7, #4]
 4387 0082 93F85D30 		ldrb	r3, [r3, #93]
 4388 0086 DBB2     		uxtb	r3, r3
 4389 0088 032B     		cmp	r3, #3
 4390 008a 11D0     		beq	.L238
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 4391              		.loc 1 2267 0
 4392 008c 7B68     		ldr	r3, [r7, #4]
 4393 008e 1B6E     		ldr	r3, [r3, #96]
 4394 0090 43F00402 		orr	r2, r3, #4
 4395 0094 7B68     		ldr	r3, [r7, #4]
 4396 0096 1A66     		str	r2, [r3, #96]
 4397              	.LBB7:
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4398              		.loc 1 2268 0
 4399 0098 0023     		movs	r3, #0
 4400 009a 7B61     		str	r3, [r7, #20]
 4401 009c 7B68     		ldr	r3, [r7, #4]
 4402 009e 1B68     		ldr	r3, [r3]
 4403 00a0 DB68     		ldr	r3, [r3, #12]
 4404 00a2 7B61     		str	r3, [r7, #20]
 4405 00a4 7B68     		ldr	r3, [r7, #4]
 4406 00a6 1B68     		ldr	r3, [r3]
 4407 00a8 9B68     		ldr	r3, [r3, #8]
 4408 00aa 7B61     		str	r3, [r7, #20]
 4409 00ac 7B69     		ldr	r3, [r7, #20]
 4410              	.LBE7:
 4411 00ae 0BE0     		b	.L237
 4412              	.L238:
 4413              	.LBB8:
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4414              		.loc 1 2272 0
 4415 00b0 0023     		movs	r3, #0
 4416 00b2 3B61     		str	r3, [r7, #16]
 4417 00b4 7B68     		ldr	r3, [r7, #4]
 4418 00b6 1B68     		ldr	r3, [r3]
 4419 00b8 DB68     		ldr	r3, [r3, #12]
 4420 00ba 3B61     		str	r3, [r7, #16]
 4421 00bc 7B68     		ldr	r3, [r7, #4]
 4422 00be 1B68     		ldr	r3, [r3]
 4423 00c0 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccVrlOhd.s 			page 118


 4424 00c2 3B61     		str	r3, [r7, #16]
 4425 00c4 3B69     		ldr	r3, [r7, #16]
 4426              	.LBE8:
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return;
 4427              		.loc 1 2273 0
 4428 00c6 6DE0     		b	.L233
 4429              	.L237:
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_MODF) != RESET)
 4430              		.loc 1 2278 0
 4431 00c8 BB69     		ldr	r3, [r7, #24]
 4432 00ca 03F02003 		and	r3, r3, #32
 4433 00ce 002B     		cmp	r3, #0
 4434 00d0 14D0     		beq	.L239
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 4435              		.loc 1 2280 0
 4436 00d2 7B68     		ldr	r3, [r7, #4]
 4437 00d4 1B6E     		ldr	r3, [r3, #96]
 4438 00d6 43F00102 		orr	r2, r3, #1
 4439 00da 7B68     		ldr	r3, [r7, #4]
 4440 00dc 1A66     		str	r2, [r3, #96]
 4441              	.LBB9:
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4442              		.loc 1 2281 0
 4443 00de 0023     		movs	r3, #0
 4444 00e0 FB60     		str	r3, [r7, #12]
 4445 00e2 7B68     		ldr	r3, [r7, #4]
 4446 00e4 1B68     		ldr	r3, [r3]
 4447 00e6 9B68     		ldr	r3, [r3, #8]
 4448 00e8 FB60     		str	r3, [r7, #12]
 4449 00ea 7B68     		ldr	r3, [r7, #4]
 4450 00ec 1B68     		ldr	r3, [r3]
 4451 00ee 7A68     		ldr	r2, [r7, #4]
 4452 00f0 1268     		ldr	r2, [r2]
 4453 00f2 1268     		ldr	r2, [r2]
 4454 00f4 22F04002 		bic	r2, r2, #64
 4455 00f8 1A60     		str	r2, [r3]
 4456 00fa FB68     		ldr	r3, [r7, #12]
 4457              	.L239:
 4458              	.LBE9:
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_FRE) != RESET)
 4459              		.loc 1 2285 0
 4460 00fc BB69     		ldr	r3, [r7, #24]
 4461 00fe 03F48073 		and	r3, r3, #256
 4462 0102 002B     		cmp	r3, #0
 4463 0104 0CD0     		beq	.L240
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 4464              		.loc 1 2287 0
 4465 0106 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 119


 4466 0108 1B6E     		ldr	r3, [r3, #96]
 4467 010a 43F00802 		orr	r2, r3, #8
 4468 010e 7B68     		ldr	r3, [r7, #4]
 4469 0110 1A66     		str	r2, [r3, #96]
 4470              	.LBB10:
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 4471              		.loc 1 2288 0
 4472 0112 0023     		movs	r3, #0
 4473 0114 BB60     		str	r3, [r7, #8]
 4474 0116 7B68     		ldr	r3, [r7, #4]
 4475 0118 1B68     		ldr	r3, [r3]
 4476 011a 9B68     		ldr	r3, [r3, #8]
 4477 011c BB60     		str	r3, [r7, #8]
 4478 011e BB68     		ldr	r3, [r7, #8]
 4479              	.L240:
 4480              	.LBE10:
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4481              		.loc 1 2291 0
 4482 0120 7B68     		ldr	r3, [r7, #4]
 4483 0122 1B6E     		ldr	r3, [r3, #96]
 4484 0124 002B     		cmp	r3, #0
 4485 0126 3CD0     		beq	.L246
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable all interrupts */
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 4486              		.loc 1 2294 0
 4487 0128 7B68     		ldr	r3, [r7, #4]
 4488 012a 1B68     		ldr	r3, [r3]
 4489 012c 7A68     		ldr	r2, [r7, #4]
 4490 012e 1268     		ldr	r2, [r2]
 4491 0130 5268     		ldr	r2, [r2, #4]
 4492 0132 22F0E002 		bic	r2, r2, #224
 4493 0136 5A60     		str	r2, [r3, #4]
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 4494              		.loc 1 2296 0
 4495 0138 7B68     		ldr	r3, [r7, #4]
 4496 013a 0122     		movs	r2, #1
 4497 013c 83F85D20 		strb	r2, [r3, #93]
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
 4498              		.loc 1 2298 0
 4499 0140 FB69     		ldr	r3, [r7, #28]
 4500 0142 03F00203 		and	r3, r3, #2
 4501 0146 002B     		cmp	r3, #0
 4502 0148 04D1     		bne	.L242
 4503              		.loc 1 2298 0 is_stmt 0 discriminator 1
 4504 014a FB69     		ldr	r3, [r7, #28]
 4505 014c 03F00103 		and	r3, r3, #1
 4506 0150 002B     		cmp	r3, #0
 4507 0152 22D0     		beq	.L243
 4508              	.L242:
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 4509              		.loc 1 2300 0 is_stmt 1
ARM GAS  /tmp/ccVrlOhd.s 			page 120


 4510 0154 7B68     		ldr	r3, [r7, #4]
 4511 0156 1B68     		ldr	r3, [r3]
 4512 0158 7A68     		ldr	r2, [r7, #4]
 4513 015a 1268     		ldr	r2, [r2]
 4514 015c 5268     		ldr	r2, [r2, #4]
 4515 015e 22F00302 		bic	r2, r2, #3
 4516 0162 5A60     		str	r2, [r3, #4]
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
 4517              		.loc 1 2303 0
 4518 0164 7B68     		ldr	r3, [r7, #4]
 4519 0166 9B6D     		ldr	r3, [r3, #88]
 4520 0168 002B     		cmp	r3, #0
 4521 016a 08D0     		beq	.L244
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 4522              		.loc 1 2307 0
 4523 016c 7B68     		ldr	r3, [r7, #4]
 4524 016e 9B6D     		ldr	r3, [r3, #88]
 4525 0170 0E4A     		ldr	r2, .L247
 4526 0172 1A65     		str	r2, [r3, #80]
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmarx);
 4527              		.loc 1 2308 0
 4528 0174 7B68     		ldr	r3, [r7, #4]
 4529 0176 9B6D     		ldr	r3, [r3, #88]
 4530 0178 1846     		mov	r0, r3
 4531 017a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4532              	.L244:
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
 4533              		.loc 1 2311 0
 4534 017e 7B68     		ldr	r3, [r7, #4]
 4535 0180 5B6D     		ldr	r3, [r3, #84]
 4536 0182 002B     		cmp	r3, #0
 4537 0184 0CD0     		beq	.L241
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 4538              		.loc 1 2315 0
 4539 0186 7B68     		ldr	r3, [r7, #4]
 4540 0188 5B6D     		ldr	r3, [r3, #84]
 4541 018a 084A     		ldr	r2, .L247
 4542 018c 1A65     		str	r2, [r3, #80]
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmatx);
 4543              		.loc 1 2316 0
 4544 018e 7B68     		ldr	r3, [r7, #4]
 4545 0190 5B6D     		ldr	r3, [r3, #84]
 4546 0192 1846     		mov	r0, r3
 4547 0194 FFF7FEFF 		bl	HAL_DMA_Abort_IT
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 4548              		.loc 1 2311 0
 4549 0198 02E0     		b	.L241
ARM GAS  /tmp/ccVrlOhd.s 			page 121


 4550              	.L243:
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user error callback */
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
 4551              		.loc 1 2322 0
 4552 019a 7868     		ldr	r0, [r7, #4]
 4553 019c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4554              	.L241:
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 4555              		.loc 1 2325 0 discriminator 1
 4556 01a0 00BF     		nop
 4557              	.L246:
 4558              		.loc 1 2325 0 is_stmt 0
 4559 01a2 00BF     		nop
 4560              	.L233:
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4561              		.loc 1 2327 0 is_stmt 1
 4562 01a4 2037     		adds	r7, r7, #32
 4563              	.LCFI99:
 4564              		.cfi_def_cfa_offset 8
 4565 01a6 BD46     		mov	sp, r7
 4566              	.LCFI100:
 4567              		.cfi_def_cfa_register 13
 4568              		@ sp needed
 4569 01a8 80BD     		pop	{r7, pc}
 4570              	.L248:
 4571 01aa 00BF     		.align	2
 4572              	.L247:
 4573 01ac 00000000 		.word	SPI_DMAAbortOnError
 4574              		.cfi_endproc
 4575              	.LFE154:
 4577              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4578              		.align	1
 4579              		.weak	HAL_SPI_TxCpltCallback
 4580              		.syntax unified
 4581              		.thumb
 4582              		.thumb_func
 4583              		.fpu fpv4-sp-d16
 4585              	HAL_SPI_TxCpltCallback:
 4586              	.LFB155:
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx Transfer completed callback.
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4587              		.loc 1 2336 0
 4588              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 122


 4589              		@ args = 0, pretend = 0, frame = 8
 4590              		@ frame_needed = 1, uses_anonymous_args = 0
 4591              		@ link register save eliminated.
 4592 0000 80B4     		push	{r7}
 4593              	.LCFI101:
 4594              		.cfi_def_cfa_offset 4
 4595              		.cfi_offset 7, -4
 4596 0002 83B0     		sub	sp, sp, #12
 4597              	.LCFI102:
 4598              		.cfi_def_cfa_offset 16
 4599 0004 00AF     		add	r7, sp, #0
 4600              	.LCFI103:
 4601              		.cfi_def_cfa_register 7
 4602 0006 7860     		str	r0, [r7, #4]
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4603              		.loc 1 2343 0
 4604 0008 00BF     		nop
 4605 000a 0C37     		adds	r7, r7, #12
 4606              	.LCFI104:
 4607              		.cfi_def_cfa_offset 4
 4608 000c BD46     		mov	sp, r7
 4609              	.LCFI105:
 4610              		.cfi_def_cfa_register 13
 4611              		@ sp needed
 4612 000e 5DF8047B 		ldr	r7, [sp], #4
 4613              	.LCFI106:
 4614              		.cfi_restore 7
 4615              		.cfi_def_cfa_offset 0
 4616 0012 7047     		bx	lr
 4617              		.cfi_endproc
 4618              	.LFE155:
 4620              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4621              		.align	1
 4622              		.weak	HAL_SPI_RxCpltCallback
 4623              		.syntax unified
 4624              		.thumb
 4625              		.thumb_func
 4626              		.fpu fpv4-sp-d16
 4628              	HAL_SPI_RxCpltCallback:
 4629              	.LFB156:
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Rx Transfer completed callback.
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4630              		.loc 1 2352 0
 4631              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 123


 4632              		@ args = 0, pretend = 0, frame = 8
 4633              		@ frame_needed = 1, uses_anonymous_args = 0
 4634              		@ link register save eliminated.
 4635 0000 80B4     		push	{r7}
 4636              	.LCFI107:
 4637              		.cfi_def_cfa_offset 4
 4638              		.cfi_offset 7, -4
 4639 0002 83B0     		sub	sp, sp, #12
 4640              	.LCFI108:
 4641              		.cfi_def_cfa_offset 16
 4642 0004 00AF     		add	r7, sp, #0
 4643              	.LCFI109:
 4644              		.cfi_def_cfa_register 7
 4645 0006 7860     		str	r0, [r7, #4]
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4646              		.loc 1 2359 0
 4647 0008 00BF     		nop
 4648 000a 0C37     		adds	r7, r7, #12
 4649              	.LCFI110:
 4650              		.cfi_def_cfa_offset 4
 4651 000c BD46     		mov	sp, r7
 4652              	.LCFI111:
 4653              		.cfi_def_cfa_register 13
 4654              		@ sp needed
 4655 000e 5DF8047B 		ldr	r7, [sp], #4
 4656              	.LCFI112:
 4657              		.cfi_restore 7
 4658              		.cfi_def_cfa_offset 0
 4659 0012 7047     		bx	lr
 4660              		.cfi_endproc
 4661              	.LFE156:
 4663              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4664              		.align	1
 4665              		.weak	HAL_SPI_TxRxCpltCallback
 4666              		.syntax unified
 4667              		.thumb
 4668              		.thumb_func
 4669              		.fpu fpv4-sp-d16
 4671              	HAL_SPI_TxRxCpltCallback:
 4672              	.LFB157:
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callback.
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4673              		.loc 1 2368 0
 4674              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 124


 4675              		@ args = 0, pretend = 0, frame = 8
 4676              		@ frame_needed = 1, uses_anonymous_args = 0
 4677              		@ link register save eliminated.
 4678 0000 80B4     		push	{r7}
 4679              	.LCFI113:
 4680              		.cfi_def_cfa_offset 4
 4681              		.cfi_offset 7, -4
 4682 0002 83B0     		sub	sp, sp, #12
 4683              	.LCFI114:
 4684              		.cfi_def_cfa_offset 16
 4685 0004 00AF     		add	r7, sp, #0
 4686              	.LCFI115:
 4687              		.cfi_def_cfa_register 7
 4688 0006 7860     		str	r0, [r7, #4]
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4689              		.loc 1 2375 0
 4690 0008 00BF     		nop
 4691 000a 0C37     		adds	r7, r7, #12
 4692              	.LCFI116:
 4693              		.cfi_def_cfa_offset 4
 4694 000c BD46     		mov	sp, r7
 4695              	.LCFI117:
 4696              		.cfi_def_cfa_register 13
 4697              		@ sp needed
 4698 000e 5DF8047B 		ldr	r7, [sp], #4
 4699              	.LCFI118:
 4700              		.cfi_restore 7
 4701              		.cfi_def_cfa_offset 0
 4702 0012 7047     		bx	lr
 4703              		.cfi_endproc
 4704              	.LFE157:
 4706              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4707              		.align	1
 4708              		.weak	HAL_SPI_TxHalfCpltCallback
 4709              		.syntax unified
 4710              		.thumb
 4711              		.thumb_func
 4712              		.fpu fpv4-sp-d16
 4714              	HAL_SPI_TxHalfCpltCallback:
 4715              	.LFB158:
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx Half Transfer completed callback.
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4716              		.loc 1 2384 0
 4717              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 125


 4718              		@ args = 0, pretend = 0, frame = 8
 4719              		@ frame_needed = 1, uses_anonymous_args = 0
 4720              		@ link register save eliminated.
 4721 0000 80B4     		push	{r7}
 4722              	.LCFI119:
 4723              		.cfi_def_cfa_offset 4
 4724              		.cfi_offset 7, -4
 4725 0002 83B0     		sub	sp, sp, #12
 4726              	.LCFI120:
 4727              		.cfi_def_cfa_offset 16
 4728 0004 00AF     		add	r7, sp, #0
 4729              	.LCFI121:
 4730              		.cfi_def_cfa_register 7
 4731 0006 7860     		str	r0, [r7, #4]
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4732              		.loc 1 2391 0
 4733 0008 00BF     		nop
 4734 000a 0C37     		adds	r7, r7, #12
 4735              	.LCFI122:
 4736              		.cfi_def_cfa_offset 4
 4737 000c BD46     		mov	sp, r7
 4738              	.LCFI123:
 4739              		.cfi_def_cfa_register 13
 4740              		@ sp needed
 4741 000e 5DF8047B 		ldr	r7, [sp], #4
 4742              	.LCFI124:
 4743              		.cfi_restore 7
 4744              		.cfi_def_cfa_offset 0
 4745 0012 7047     		bx	lr
 4746              		.cfi_endproc
 4747              	.LFE158:
 4749              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4750              		.align	1
 4751              		.weak	HAL_SPI_RxHalfCpltCallback
 4752              		.syntax unified
 4753              		.thumb
 4754              		.thumb_func
 4755              		.fpu fpv4-sp-d16
 4757              	HAL_SPI_RxHalfCpltCallback:
 4758              	.LFB159:
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Rx Half Transfer completed callback.
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4759              		.loc 1 2400 0
 4760              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 126


 4761              		@ args = 0, pretend = 0, frame = 8
 4762              		@ frame_needed = 1, uses_anonymous_args = 0
 4763              		@ link register save eliminated.
 4764 0000 80B4     		push	{r7}
 4765              	.LCFI125:
 4766              		.cfi_def_cfa_offset 4
 4767              		.cfi_offset 7, -4
 4768 0002 83B0     		sub	sp, sp, #12
 4769              	.LCFI126:
 4770              		.cfi_def_cfa_offset 16
 4771 0004 00AF     		add	r7, sp, #0
 4772              	.LCFI127:
 4773              		.cfi_def_cfa_register 7
 4774 0006 7860     		str	r0, [r7, #4]
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4775              		.loc 1 2407 0
 4776 0008 00BF     		nop
 4777 000a 0C37     		adds	r7, r7, #12
 4778              	.LCFI128:
 4779              		.cfi_def_cfa_offset 4
 4780 000c BD46     		mov	sp, r7
 4781              	.LCFI129:
 4782              		.cfi_def_cfa_register 13
 4783              		@ sp needed
 4784 000e 5DF8047B 		ldr	r7, [sp], #4
 4785              	.LCFI130:
 4786              		.cfi_restore 7
 4787              		.cfi_def_cfa_offset 0
 4788 0012 7047     		bx	lr
 4789              		.cfi_endproc
 4790              	.LFE159:
 4792              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4793              		.align	1
 4794              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4795              		.syntax unified
 4796              		.thumb
 4797              		.thumb_func
 4798              		.fpu fpv4-sp-d16
 4800              	HAL_SPI_TxRxHalfCpltCallback:
 4801              	.LFB160:
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx and Rx Half Transfer callback.
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4802              		.loc 1 2416 0
 4803              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 127


 4804              		@ args = 0, pretend = 0, frame = 8
 4805              		@ frame_needed = 1, uses_anonymous_args = 0
 4806              		@ link register save eliminated.
 4807 0000 80B4     		push	{r7}
 4808              	.LCFI131:
 4809              		.cfi_def_cfa_offset 4
 4810              		.cfi_offset 7, -4
 4811 0002 83B0     		sub	sp, sp, #12
 4812              	.LCFI132:
 4813              		.cfi_def_cfa_offset 16
 4814 0004 00AF     		add	r7, sp, #0
 4815              	.LCFI133:
 4816              		.cfi_def_cfa_register 7
 4817 0006 7860     		str	r0, [r7, #4]
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4818              		.loc 1 2423 0
 4819 0008 00BF     		nop
 4820 000a 0C37     		adds	r7, r7, #12
 4821              	.LCFI134:
 4822              		.cfi_def_cfa_offset 4
 4823 000c BD46     		mov	sp, r7
 4824              	.LCFI135:
 4825              		.cfi_def_cfa_register 13
 4826              		@ sp needed
 4827 000e 5DF8047B 		ldr	r7, [sp], #4
 4828              	.LCFI136:
 4829              		.cfi_restore 7
 4830              		.cfi_def_cfa_offset 0
 4831 0012 7047     		bx	lr
 4832              		.cfi_endproc
 4833              	.LFE160:
 4835              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4836              		.align	1
 4837              		.weak	HAL_SPI_ErrorCallback
 4838              		.syntax unified
 4839              		.thumb
 4840              		.thumb_func
 4841              		.fpu fpv4-sp-d16
 4843              	HAL_SPI_ErrorCallback:
 4844              	.LFB161:
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief SPI error callback.
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4845              		.loc 1 2432 0
 4846              		.cfi_startproc
ARM GAS  /tmp/ccVrlOhd.s 			page 128


 4847              		@ args = 0, pretend = 0, frame = 8
 4848              		@ frame_needed = 1, uses_anonymous_args = 0
 4849              		@ link register save eliminated.
 4850 0000 80B4     		push	{r7}
 4851              	.LCFI137:
 4852              		.cfi_def_cfa_offset 4
 4853              		.cfi_offset 7, -4
 4854 0002 83B0     		sub	sp, sp, #12
 4855              	.LCFI138:
 4856              		.cfi_def_cfa_offset 16
 4857 0004 00AF     		add	r7, sp, #0
 4858              	.LCFI139:
 4859              		.cfi_def_cfa_register 7
 4860 0006 7860     		str	r0, [r7, #4]
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4861              		.loc 1 2442 0
 4862 0008 00BF     		nop
 4863 000a 0C37     		adds	r7, r7, #12
 4864              	.LCFI140:
 4865              		.cfi_def_cfa_offset 4
 4866 000c BD46     		mov	sp, r7
 4867              	.LCFI141:
 4868              		.cfi_def_cfa_register 13
 4869              		@ sp needed
 4870 000e 5DF8047B 		ldr	r7, [sp], #4
 4871              	.LCFI142:
 4872              		.cfi_restore 7
 4873              		.cfi_def_cfa_offset 0
 4874 0012 7047     		bx	lr
 4875              		.cfi_endproc
 4876              	.LFE161:
 4878              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4879              		.align	1
 4880              		.weak	HAL_SPI_AbortCpltCallback
 4881              		.syntax unified
 4882              		.thumb
 4883              		.thumb_func
 4884              		.fpu fpv4-sp-d16
 4886              	HAL_SPI_AbortCpltCallback:
 4887              	.LFB162:
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
ARM GAS  /tmp/ccVrlOhd.s 			page 129


 4888              		.loc 1 2450 0
 4889              		.cfi_startproc
 4890              		@ args = 0, pretend = 0, frame = 8
 4891              		@ frame_needed = 1, uses_anonymous_args = 0
 4892              		@ link register save eliminated.
 4893 0000 80B4     		push	{r7}
 4894              	.LCFI143:
 4895              		.cfi_def_cfa_offset 4
 4896              		.cfi_offset 7, -4
 4897 0002 83B0     		sub	sp, sp, #12
 4898              	.LCFI144:
 4899              		.cfi_def_cfa_offset 16
 4900 0004 00AF     		add	r7, sp, #0
 4901              	.LCFI145:
 4902              		.cfi_def_cfa_register 7
 4903 0006 7860     		str	r0, [r7, #4]
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4904              		.loc 1 2457 0
 4905 0008 00BF     		nop
 4906 000a 0C37     		adds	r7, r7, #12
 4907              	.LCFI146:
 4908              		.cfi_def_cfa_offset 4
 4909 000c BD46     		mov	sp, r7
 4910              	.LCFI147:
 4911              		.cfi_def_cfa_register 13
 4912              		@ sp needed
 4913 000e 5DF8047B 		ldr	r7, [sp], #4
 4914              	.LCFI148:
 4915              		.cfi_restore 7
 4916              		.cfi_def_cfa_offset 0
 4917 0012 7047     		bx	lr
 4918              		.cfi_endproc
 4919              	.LFE162:
 4921              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 4922              		.align	1
 4923              		.global	HAL_SPI_GetState
 4924              		.syntax unified
 4925              		.thumb
 4926              		.thumb_func
 4927              		.fpu fpv4-sp-d16
 4929              	HAL_SPI_GetState:
 4930              	.LFB163:
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI control functions
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
ARM GAS  /tmp/ccVrlOhd.s 			page 130


2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI state
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4931              		.loc 1 2485 0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 8
 4934              		@ frame_needed = 1, uses_anonymous_args = 0
 4935              		@ link register save eliminated.
 4936 0000 80B4     		push	{r7}
 4937              	.LCFI149:
 4938              		.cfi_def_cfa_offset 4
 4939              		.cfi_offset 7, -4
 4940 0002 83B0     		sub	sp, sp, #12
 4941              	.LCFI150:
 4942              		.cfi_def_cfa_offset 16
 4943 0004 00AF     		add	r7, sp, #0
 4944              	.LCFI151:
 4945              		.cfi_def_cfa_register 7
 4946 0006 7860     		str	r0, [r7, #4]
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI handle state */
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->State;
 4947              		.loc 1 2487 0
 4948 0008 7B68     		ldr	r3, [r7, #4]
 4949 000a 93F85D30 		ldrb	r3, [r3, #93]
 4950 000e DBB2     		uxtb	r3, r3
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4951              		.loc 1 2488 0
 4952 0010 1846     		mov	r0, r3
 4953 0012 0C37     		adds	r7, r7, #12
 4954              	.LCFI152:
 4955              		.cfi_def_cfa_offset 4
 4956 0014 BD46     		mov	sp, r7
 4957              	.LCFI153:
 4958              		.cfi_def_cfa_register 13
 4959              		@ sp needed
 4960 0016 5DF8047B 		ldr	r7, [sp], #4
 4961              	.LCFI154:
 4962              		.cfi_restore 7
 4963              		.cfi_def_cfa_offset 0
 4964 001a 7047     		bx	lr
 4965              		.cfi_endproc
ARM GAS  /tmp/ccVrlOhd.s 			page 131


 4966              	.LFE163:
 4968              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 4969              		.align	1
 4970              		.global	HAL_SPI_GetError
 4971              		.syntax unified
 4972              		.thumb
 4973              		.thumb_func
 4974              		.fpu fpv4-sp-d16
 4976              	HAL_SPI_GetError:
 4977              	.LFB164:
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI error code.
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4978              		.loc 1 2497 0
 4979              		.cfi_startproc
 4980              		@ args = 0, pretend = 0, frame = 8
 4981              		@ frame_needed = 1, uses_anonymous_args = 0
 4982              		@ link register save eliminated.
 4983 0000 80B4     		push	{r7}
 4984              	.LCFI155:
 4985              		.cfi_def_cfa_offset 4
 4986              		.cfi_offset 7, -4
 4987 0002 83B0     		sub	sp, sp, #12
 4988              	.LCFI156:
 4989              		.cfi_def_cfa_offset 16
 4990 0004 00AF     		add	r7, sp, #0
 4991              	.LCFI157:
 4992              		.cfi_def_cfa_register 7
 4993 0006 7860     		str	r0, [r7, #4]
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI ErrorCode */
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->ErrorCode;
 4994              		.loc 1 2499 0
 4995 0008 7B68     		ldr	r3, [r7, #4]
 4996 000a 1B6E     		ldr	r3, [r3, #96]
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4997              		.loc 1 2500 0
 4998 000c 1846     		mov	r0, r3
 4999 000e 0C37     		adds	r7, r7, #12
 5000              	.LCFI158:
 5001              		.cfi_def_cfa_offset 4
 5002 0010 BD46     		mov	sp, r7
 5003              	.LCFI159:
 5004              		.cfi_def_cfa_register 13
 5005              		@ sp needed
 5006 0012 5DF8047B 		ldr	r7, [sp], #4
 5007              	.LCFI160:
 5008              		.cfi_restore 7
 5009              		.cfi_def_cfa_offset 0
 5010 0016 7047     		bx	lr
 5011              		.cfi_endproc
 5012              	.LFE164:
ARM GAS  /tmp/ccVrlOhd.s 			page 132


 5014              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5015              		.align	1
 5016              		.syntax unified
 5017              		.thumb
 5018              		.thumb_func
 5019              		.fpu fpv4-sp-d16
 5021              	SPI_DMATransmitCplt:
 5022              	.LFB165:
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   Private functions
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback.
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5023              		.loc 1 2522 0
 5024              		.cfi_startproc
 5025              		@ args = 0, pretend = 0, frame = 24
 5026              		@ frame_needed = 1, uses_anonymous_args = 0
 5027 0000 80B5     		push	{r7, lr}
 5028              	.LCFI161:
 5029              		.cfi_def_cfa_offset 8
 5030              		.cfi_offset 7, -8
 5031              		.cfi_offset 14, -4
 5032 0002 86B0     		sub	sp, sp, #24
 5033              	.LCFI162:
 5034              		.cfi_def_cfa_offset 32
 5035 0004 00AF     		add	r7, sp, #0
 5036              	.LCFI163:
 5037              		.cfi_def_cfa_register 7
 5038 0006 7860     		str	r0, [r7, #4]
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5039              		.loc 1 2523 0
 5040 0008 7B68     		ldr	r3, [r7, #4]
 5041 000a 9B6B     		ldr	r3, [r3, #56]
 5042 000c 7B61     		str	r3, [r7, #20]
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 5043              		.loc 1 2524 0
 5044 000e 0023     		movs	r3, #0
 5045 0010 3B61     		str	r3, [r7, #16]
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
ARM GAS  /tmp/ccVrlOhd.s 			page 133


2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5046              		.loc 1 2527 0
 5047 0012 FFF7FEFF 		bl	HAL_GetTick
 5048 0016 3861     		str	r0, [r7, #16]
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 5049              		.loc 1 2530 0
 5050 0018 7B68     		ldr	r3, [r7, #4]
 5051 001a 1B68     		ldr	r3, [r3]
 5052 001c 1B68     		ldr	r3, [r3]
 5053 001e 03F48073 		and	r3, r3, #256
 5054 0022 B3F5807F 		cmp	r3, #256
 5055 0026 3BD0     		beq	.L262
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5056              		.loc 1 2533 0
 5057 0028 7B69     		ldr	r3, [r7, #20]
 5058 002a 1B68     		ldr	r3, [r3]
 5059 002c 7A69     		ldr	r2, [r7, #20]
 5060 002e 1268     		ldr	r2, [r2]
 5061 0030 5268     		ldr	r2, [r2, #4]
 5062 0032 22F02002 		bic	r2, r2, #32
 5063 0036 5A60     		str	r2, [r3, #4]
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Tx DMA Request */
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5064              		.loc 1 2536 0
 5065 0038 7B69     		ldr	r3, [r7, #20]
 5066 003a 1B68     		ldr	r3, [r3]
 5067 003c 7A69     		ldr	r2, [r7, #20]
 5068 003e 1268     		ldr	r2, [r2]
 5069 0040 5268     		ldr	r2, [r2, #4]
 5070 0042 22F00202 		bic	r2, r2, #2
 5071 0046 5A60     		str	r2, [r3, #4]
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5072              		.loc 1 2539 0
 5073 0048 3A69     		ldr	r2, [r7, #16]
 5074 004a 6421     		movs	r1, #100
 5075 004c 7869     		ldr	r0, [r7, #20]
 5076 004e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5077 0052 0346     		mov	r3, r0
 5078 0054 002B     		cmp	r3, #0
 5079 0056 05D0     		beq	.L263
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5080              		.loc 1 2541 0
 5081 0058 7B69     		ldr	r3, [r7, #20]
 5082 005a 1B6E     		ldr	r3, [r3, #96]
 5083 005c 43F02002 		orr	r2, r3, #32
 5084 0060 7B69     		ldr	r3, [r7, #20]
 5085 0062 1A66     		str	r2, [r3, #96]
 5086              	.L263:
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccVrlOhd.s 			page 134


2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 5087              		.loc 1 2545 0
 5088 0064 7B69     		ldr	r3, [r7, #20]
 5089 0066 9B68     		ldr	r3, [r3, #8]
 5090 0068 002B     		cmp	r3, #0
 5091 006a 0AD1     		bne	.L264
 5092              	.LBB11:
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5093              		.loc 1 2547 0
 5094 006c 0023     		movs	r3, #0
 5095 006e FB60     		str	r3, [r7, #12]
 5096 0070 7B69     		ldr	r3, [r7, #20]
 5097 0072 1B68     		ldr	r3, [r3]
 5098 0074 DB68     		ldr	r3, [r3, #12]
 5099 0076 FB60     		str	r3, [r7, #12]
 5100 0078 7B69     		ldr	r3, [r7, #20]
 5101 007a 1B68     		ldr	r3, [r3]
 5102 007c 9B68     		ldr	r3, [r3, #8]
 5103 007e FB60     		str	r3, [r7, #12]
 5104 0080 FB68     		ldr	r3, [r7, #12]
 5105              	.L264:
 5106              	.LBE11:
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5107              		.loc 1 2550 0
 5108 0082 7B69     		ldr	r3, [r7, #20]
 5109 0084 0022     		movs	r2, #0
 5110 0086 DA87     		strh	r2, [r3, #62]	@ movhi
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5111              		.loc 1 2551 0
 5112 0088 7B69     		ldr	r3, [r7, #20]
 5113 008a 0122     		movs	r2, #1
 5114 008c 83F85D20 		strb	r2, [r3, #93]
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5115              		.loc 1 2553 0
 5116 0090 7B69     		ldr	r3, [r7, #20]
 5117 0092 1B6E     		ldr	r3, [r3, #96]
 5118 0094 002B     		cmp	r3, #0
 5119 0096 03D0     		beq	.L262
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5120              		.loc 1 2555 0
 5121 0098 7869     		ldr	r0, [r7, #20]
 5122 009a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
 5123              		.loc 1 2556 0
 5124 009e 02E0     		b	.L261
 5125              	.L262:
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
 5126              		.loc 1 2559 0
ARM GAS  /tmp/ccVrlOhd.s 			page 135


 5127 00a0 7869     		ldr	r0, [r7, #20]
 5128 00a2 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5129              	.L261:
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5130              		.loc 1 2560 0
 5131 00a6 1837     		adds	r7, r7, #24
 5132              	.LCFI164:
 5133              		.cfi_def_cfa_offset 8
 5134 00a8 BD46     		mov	sp, r7
 5135              	.LCFI165:
 5136              		.cfi_def_cfa_register 13
 5137              		@ sp needed
 5138 00aa 80BD     		pop	{r7, pc}
 5139              		.cfi_endproc
 5140              	.LFE165:
 5142              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5143              		.align	1
 5144              		.syntax unified
 5145              		.thumb
 5146              		.thumb_func
 5147              		.fpu fpv4-sp-d16
 5149              	SPI_DMAReceiveCplt:
 5150              	.LFB166:
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback.
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5151              		.loc 1 2569 0
 5152              		.cfi_startproc
 5153              		@ args = 0, pretend = 0, frame = 16
 5154              		@ frame_needed = 1, uses_anonymous_args = 0
 5155 0000 80B5     		push	{r7, lr}
 5156              	.LCFI166:
 5157              		.cfi_def_cfa_offset 8
 5158              		.cfi_offset 7, -8
 5159              		.cfi_offset 14, -4
 5160 0002 84B0     		sub	sp, sp, #16
 5161              	.LCFI167:
 5162              		.cfi_def_cfa_offset 24
 5163 0004 00AF     		add	r7, sp, #0
 5164              	.LCFI168:
 5165              		.cfi_def_cfa_register 7
 5166 0006 7860     		str	r0, [r7, #4]
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5167              		.loc 1 2570 0
 5168 0008 7B68     		ldr	r3, [r7, #4]
 5169 000a 9B6B     		ldr	r3, [r3, #56]
 5170 000c FB60     		str	r3, [r7, #12]
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 5171              		.loc 1 2571 0
 5172 000e 0023     		movs	r3, #0
 5173 0010 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccVrlOhd.s 			page 136


2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5174              		.loc 1 2577 0
 5175 0012 FFF7FEFF 		bl	HAL_GetTick
 5176 0016 B860     		str	r0, [r7, #8]
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 5177              		.loc 1 2580 0
 5178 0018 7B68     		ldr	r3, [r7, #4]
 5179 001a 1B68     		ldr	r3, [r3]
 5180 001c 1B68     		ldr	r3, [r3]
 5181 001e 03F48073 		and	r3, r3, #256
 5182 0022 B3F5807F 		cmp	r3, #256
 5183 0026 2AD0     		beq	.L267
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5184              		.loc 1 2583 0
 5185 0028 FB68     		ldr	r3, [r7, #12]
 5186 002a 1B68     		ldr	r3, [r3]
 5187 002c FA68     		ldr	r2, [r7, #12]
 5188 002e 1268     		ldr	r2, [r2]
 5189 0030 5268     		ldr	r2, [r2, #4]
 5190 0032 22F02002 		bic	r2, r2, #32
 5191 0036 5A60     		str	r2, [r3, #4]
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag */
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, SPI_DEFAULT_TIMEOUT, ti
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Error on the CRC reception */
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read CRC */
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = hspi->Instance->DR;
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, SPI_DEFAULT_TIMEOUT
ARM GAS  /tmp/ccVrlOhd.s 			page 137


2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* Error on the CRC reception */
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* To avoid GCC warning */
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           UNUSED(tmpreg);
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5192              		.loc 1 2624 0
 5193 0038 FB68     		ldr	r3, [r7, #12]
 5194 003a 1B68     		ldr	r3, [r3]
 5195 003c FA68     		ldr	r2, [r7, #12]
 5196 003e 1268     		ldr	r2, [r2]
 5197 0040 5268     		ldr	r2, [r2, #4]
 5198 0042 22F00302 		bic	r2, r2, #3
 5199 0046 5A60     		str	r2, [r3, #4]
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5200              		.loc 1 2627 0
 5201 0048 BA68     		ldr	r2, [r7, #8]
 5202 004a 6421     		movs	r1, #100
 5203 004c F868     		ldr	r0, [r7, #12]
 5204 004e FFF7FEFF 		bl	SPI_EndRxTransaction
 5205 0052 0346     		mov	r3, r0
 5206 0054 002B     		cmp	r3, #0
 5207 0056 02D0     		beq	.L268
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 5208              		.loc 1 2629 0
 5209 0058 FB68     		ldr	r3, [r7, #12]
 5210 005a 2022     		movs	r2, #32
 5211 005c 1A66     		str	r2, [r3, #96]
 5212              	.L268:
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5213              		.loc 1 2632 0
 5214 005e FB68     		ldr	r3, [r7, #12]
 5215 0060 0022     		movs	r2, #0
 5216 0062 A3F84620 		strh	r2, [r3, #70]	@ movhi
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5217              		.loc 1 2633 0
 5218 0066 FB68     		ldr	r3, [r7, #12]
 5219 0068 0122     		movs	r2, #1
 5220 006a 83F85D20 		strb	r2, [r3, #93]
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccVrlOhd.s 			page 138


2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5221              		.loc 1 2644 0
 5222 006e FB68     		ldr	r3, [r7, #12]
 5223 0070 1B6E     		ldr	r3, [r3, #96]
 5224 0072 002B     		cmp	r3, #0
 5225 0074 03D0     		beq	.L267
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5226              		.loc 1 2646 0
 5227 0076 F868     		ldr	r0, [r7, #12]
 5228 0078 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
 5229              		.loc 1 2647 0
 5230 007c 02E0     		b	.L266
 5231              	.L267:
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
 5232              		.loc 1 2650 0
 5233 007e F868     		ldr	r0, [r7, #12]
 5234 0080 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5235              	.L266:
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5236              		.loc 1 2651 0
 5237 0084 1037     		adds	r7, r7, #16
 5238              	.LCFI169:
 5239              		.cfi_def_cfa_offset 8
 5240 0086 BD46     		mov	sp, r7
 5241              	.LCFI170:
 5242              		.cfi_def_cfa_register 13
 5243              		@ sp needed
 5244 0088 80BD     		pop	{r7, pc}
 5245              		.cfi_endproc
 5246              	.LFE166:
 5248              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5249              		.align	1
 5250              		.syntax unified
 5251              		.thumb
 5252              		.thumb_func
 5253              		.fpu fpv4-sp-d16
 5255              	SPI_DMATransmitReceiveCplt:
 5256              	.LFB167:
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5257              		.loc 1 2660 0
ARM GAS  /tmp/ccVrlOhd.s 			page 139


 5258              		.cfi_startproc
 5259              		@ args = 0, pretend = 0, frame = 16
 5260              		@ frame_needed = 1, uses_anonymous_args = 0
 5261 0000 80B5     		push	{r7, lr}
 5262              	.LCFI171:
 5263              		.cfi_def_cfa_offset 8
 5264              		.cfi_offset 7, -8
 5265              		.cfi_offset 14, -4
 5266 0002 84B0     		sub	sp, sp, #16
 5267              	.LCFI172:
 5268              		.cfi_def_cfa_offset 24
 5269 0004 00AF     		add	r7, sp, #0
 5270              	.LCFI173:
 5271              		.cfi_def_cfa_register 7
 5272 0006 7860     		str	r0, [r7, #4]
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5273              		.loc 1 2661 0
 5274 0008 7B68     		ldr	r3, [r7, #4]
 5275 000a 9B6B     		ldr	r3, [r3, #56]
 5276 000c FB60     		str	r3, [r7, #12]
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 5277              		.loc 1 2662 0
 5278 000e 0023     		movs	r3, #0
 5279 0010 BB60     		str	r3, [r7, #8]
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO int16_t tmpreg = 0U;
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5280              		.loc 1 2667 0
 5281 0012 FFF7FEFF 		bl	HAL_GetTick
 5282 0016 B860     		str	r0, [r7, #8]
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 5283              		.loc 1 2670 0
 5284 0018 7B68     		ldr	r3, [r7, #4]
 5285 001a 1B68     		ldr	r3, [r3]
 5286 001c 1B68     		ldr	r3, [r3]
 5287 001e 03F48073 		and	r3, r3, #256
 5288 0022 B3F5807F 		cmp	r3, #256
 5289 0026 30D0     		beq	.L271
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5290              		.loc 1 2673 0
 5291 0028 FB68     		ldr	r3, [r7, #12]
 5292 002a 1B68     		ldr	r3, [r3]
 5293 002c FA68     		ldr	r2, [r7, #12]
 5294 002e 1268     		ldr	r2, [r2]
 5295 0030 5268     		ldr	r2, [r2, #4]
 5296 0032 22F02002 		bic	r2, r2, #32
 5297 0036 5A60     		str	r2, [r3, #4]
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
ARM GAS  /tmp/ccVrlOhd.s 			page 140


2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           tickstart) != HAL_OK)
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = hspi->Instance->DR;
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5298              		.loc 1 2708 0
 5299 0038 BA68     		ldr	r2, [r7, #8]
 5300 003a 6421     		movs	r1, #100
 5301 003c F868     		ldr	r0, [r7, #12]
 5302 003e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5303 0042 0346     		mov	r3, r0
 5304 0044 002B     		cmp	r3, #0
 5305 0046 05D0     		beq	.L272
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5306              		.loc 1 2710 0
 5307 0048 FB68     		ldr	r3, [r7, #12]
 5308 004a 1B6E     		ldr	r3, [r3, #96]
 5309 004c 43F02002 		orr	r2, r3, #32
 5310 0050 FB68     		ldr	r3, [r7, #12]
 5311 0052 1A66     		str	r2, [r3, #96]
 5312              	.L272:
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5313              		.loc 1 2714 0
 5314 0054 FB68     		ldr	r3, [r7, #12]
 5315 0056 1B68     		ldr	r3, [r3]
 5316 0058 FA68     		ldr	r2, [r7, #12]
 5317 005a 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccVrlOhd.s 			page 141


 5318 005c 5268     		ldr	r2, [r2, #4]
 5319 005e 22F00302 		bic	r2, r2, #3
 5320 0062 5A60     		str	r2, [r3, #4]
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5321              		.loc 1 2716 0
 5322 0064 FB68     		ldr	r3, [r7, #12]
 5323 0066 0022     		movs	r2, #0
 5324 0068 DA87     		strh	r2, [r3, #62]	@ movhi
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5325              		.loc 1 2717 0
 5326 006a FB68     		ldr	r3, [r7, #12]
 5327 006c 0022     		movs	r2, #0
 5328 006e A3F84620 		strh	r2, [r3, #70]	@ movhi
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5329              		.loc 1 2718 0
 5330 0072 FB68     		ldr	r3, [r7, #12]
 5331 0074 0122     		movs	r2, #1
 5332 0076 83F85D20 		strb	r2, [r3, #93]
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5333              		.loc 1 2729 0
 5334 007a FB68     		ldr	r3, [r7, #12]
 5335 007c 1B6E     		ldr	r3, [r3, #96]
 5336 007e 002B     		cmp	r3, #0
 5337 0080 03D0     		beq	.L271
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5338              		.loc 1 2731 0
 5339 0082 F868     		ldr	r0, [r7, #12]
 5340 0084 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
 5341              		.loc 1 2732 0
 5342 0088 02E0     		b	.L270
 5343              	.L271:
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
 5344              		.loc 1 2735 0
 5345 008a F868     		ldr	r0, [r7, #12]
 5346 008c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5347              	.L270:
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5348              		.loc 1 2736 0
 5349 0090 1037     		adds	r7, r7, #16
 5350              	.LCFI174:
 5351              		.cfi_def_cfa_offset 8
 5352 0092 BD46     		mov	sp, r7
ARM GAS  /tmp/ccVrlOhd.s 			page 142


 5353              	.LCFI175:
 5354              		.cfi_def_cfa_register 13
 5355              		@ sp needed
 5356 0094 80BD     		pop	{r7, pc}
 5357              		.cfi_endproc
 5358              	.LFE167:
 5360              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 5361              		.align	1
 5362              		.syntax unified
 5363              		.thumb
 5364              		.thumb_func
 5365              		.fpu fpv4-sp-d16
 5367              	SPI_DMAHalfTransmitCplt:
 5368              	.LFB168:
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5369              		.loc 1 2745 0
 5370              		.cfi_startproc
 5371              		@ args = 0, pretend = 0, frame = 16
 5372              		@ frame_needed = 1, uses_anonymous_args = 0
 5373 0000 80B5     		push	{r7, lr}
 5374              	.LCFI176:
 5375              		.cfi_def_cfa_offset 8
 5376              		.cfi_offset 7, -8
 5377              		.cfi_offset 14, -4
 5378 0002 84B0     		sub	sp, sp, #16
 5379              	.LCFI177:
 5380              		.cfi_def_cfa_offset 24
 5381 0004 00AF     		add	r7, sp, #0
 5382              	.LCFI178:
 5383              		.cfi_def_cfa_register 7
 5384 0006 7860     		str	r0, [r7, #4]
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5385              		.loc 1 2746 0
 5386 0008 7B68     		ldr	r3, [r7, #4]
 5387 000a 9B6B     		ldr	r3, [r3, #56]
 5388 000c FB60     		str	r3, [r7, #12]
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 5389              		.loc 1 2748 0
 5390 000e F868     		ldr	r0, [r7, #12]
 5391 0010 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5392              		.loc 1 2749 0
 5393 0014 00BF     		nop
 5394 0016 1037     		adds	r7, r7, #16
 5395              	.LCFI179:
 5396              		.cfi_def_cfa_offset 8
 5397 0018 BD46     		mov	sp, r7
 5398              	.LCFI180:
ARM GAS  /tmp/ccVrlOhd.s 			page 143


 5399              		.cfi_def_cfa_register 13
 5400              		@ sp needed
 5401 001a 80BD     		pop	{r7, pc}
 5402              		.cfi_endproc
 5403              	.LFE168:
 5405              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 5406              		.align	1
 5407              		.syntax unified
 5408              		.thumb
 5409              		.thumb_func
 5410              		.fpu fpv4-sp-d16
 5412              	SPI_DMAHalfReceiveCplt:
 5413              	.LFB169:
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5414              		.loc 1 2758 0
 5415              		.cfi_startproc
 5416              		@ args = 0, pretend = 0, frame = 16
 5417              		@ frame_needed = 1, uses_anonymous_args = 0
 5418 0000 80B5     		push	{r7, lr}
 5419              	.LCFI181:
 5420              		.cfi_def_cfa_offset 8
 5421              		.cfi_offset 7, -8
 5422              		.cfi_offset 14, -4
 5423 0002 84B0     		sub	sp, sp, #16
 5424              	.LCFI182:
 5425              		.cfi_def_cfa_offset 24
 5426 0004 00AF     		add	r7, sp, #0
 5427              	.LCFI183:
 5428              		.cfi_def_cfa_register 7
 5429 0006 7860     		str	r0, [r7, #4]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5430              		.loc 1 2759 0
 5431 0008 7B68     		ldr	r3, [r7, #4]
 5432 000a 9B6B     		ldr	r3, [r3, #56]
 5433 000c FB60     		str	r3, [r7, #12]
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 5434              		.loc 1 2761 0
 5435 000e F868     		ldr	r0, [r7, #12]
 5436 0010 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5437              		.loc 1 2762 0
 5438 0014 00BF     		nop
 5439 0016 1037     		adds	r7, r7, #16
 5440              	.LCFI184:
 5441              		.cfi_def_cfa_offset 8
 5442 0018 BD46     		mov	sp, r7
 5443              	.LCFI185:
 5444              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccVrlOhd.s 			page 144


 5445              		@ sp needed
 5446 001a 80BD     		pop	{r7, pc}
 5447              		.cfi_endproc
 5448              	.LFE169:
 5450              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 5451              		.align	1
 5452              		.syntax unified
 5453              		.thumb
 5454              		.thumb_func
 5455              		.fpu fpv4-sp-d16
 5457              	SPI_DMAHalfTransmitReceiveCplt:
 5458              	.LFB170:
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5459              		.loc 1 2771 0
 5460              		.cfi_startproc
 5461              		@ args = 0, pretend = 0, frame = 16
 5462              		@ frame_needed = 1, uses_anonymous_args = 0
 5463 0000 80B5     		push	{r7, lr}
 5464              	.LCFI186:
 5465              		.cfi_def_cfa_offset 8
 5466              		.cfi_offset 7, -8
 5467              		.cfi_offset 14, -4
 5468 0002 84B0     		sub	sp, sp, #16
 5469              	.LCFI187:
 5470              		.cfi_def_cfa_offset 24
 5471 0004 00AF     		add	r7, sp, #0
 5472              	.LCFI188:
 5473              		.cfi_def_cfa_register 7
 5474 0006 7860     		str	r0, [r7, #4]
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5475              		.loc 1 2772 0
 5476 0008 7B68     		ldr	r3, [r7, #4]
 5477 000a 9B6B     		ldr	r3, [r3, #56]
 5478 000c FB60     		str	r3, [r7, #12]
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 5479              		.loc 1 2774 0
 5480 000e F868     		ldr	r0, [r7, #12]
 5481 0010 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5482              		.loc 1 2775 0
 5483 0014 00BF     		nop
 5484 0016 1037     		adds	r7, r7, #16
 5485              	.LCFI189:
 5486              		.cfi_def_cfa_offset 8
 5487 0018 BD46     		mov	sp, r7
 5488              	.LCFI190:
 5489              		.cfi_def_cfa_register 13
 5490              		@ sp needed
ARM GAS  /tmp/ccVrlOhd.s 			page 145


 5491 001a 80BD     		pop	{r7, pc}
 5492              		.cfi_endproc
 5493              	.LFE170:
 5495              		.section	.text.SPI_DMAError,"ax",%progbits
 5496              		.align	1
 5497              		.syntax unified
 5498              		.thumb
 5499              		.thumb_func
 5500              		.fpu fpv4-sp-d16
 5502              	SPI_DMAError:
 5503              	.LFB171:
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5504              		.loc 1 2784 0
 5505              		.cfi_startproc
 5506              		@ args = 0, pretend = 0, frame = 16
 5507              		@ frame_needed = 1, uses_anonymous_args = 0
 5508 0000 80B5     		push	{r7, lr}
 5509              	.LCFI191:
 5510              		.cfi_def_cfa_offset 8
 5511              		.cfi_offset 7, -8
 5512              		.cfi_offset 14, -4
 5513 0002 84B0     		sub	sp, sp, #16
 5514              	.LCFI192:
 5515              		.cfi_def_cfa_offset 24
 5516 0004 00AF     		add	r7, sp, #0
 5517              	.LCFI193:
 5518              		.cfi_def_cfa_register 7
 5519 0006 7860     		str	r0, [r7, #4]
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5520              		.loc 1 2785 0
 5521 0008 7B68     		ldr	r3, [r7, #4]
 5522 000a 9B6B     		ldr	r3, [r3, #56]
 5523 000c FB60     		str	r3, [r7, #12]
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5524              		.loc 1 2788 0
 5525 000e FB68     		ldr	r3, [r7, #12]
 5526 0010 1B68     		ldr	r3, [r3]
 5527 0012 FA68     		ldr	r2, [r7, #12]
 5528 0014 1268     		ldr	r2, [r2]
 5529 0016 5268     		ldr	r2, [r2, #4]
 5530 0018 22F00302 		bic	r2, r2, #3
 5531 001c 5A60     		str	r2, [r3, #4]
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 5532              		.loc 1 2790 0
 5533 001e FB68     		ldr	r3, [r7, #12]
 5534 0020 1B6E     		ldr	r3, [r3, #96]
ARM GAS  /tmp/ccVrlOhd.s 			page 146


 5535 0022 43F01002 		orr	r2, r3, #16
 5536 0026 FB68     		ldr	r3, [r7, #12]
 5537 0028 1A66     		str	r2, [r3, #96]
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5538              		.loc 1 2791 0
 5539 002a FB68     		ldr	r3, [r7, #12]
 5540 002c 0122     		movs	r2, #1
 5541 002e 83F85D20 		strb	r2, [r3, #93]
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5542              		.loc 1 2792 0
 5543 0032 F868     		ldr	r0, [r7, #12]
 5544 0034 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5545              		.loc 1 2793 0
 5546 0038 00BF     		nop
 5547 003a 1037     		adds	r7, r7, #16
 5548              	.LCFI194:
 5549              		.cfi_def_cfa_offset 8
 5550 003c BD46     		mov	sp, r7
 5551              	.LCFI195:
 5552              		.cfi_def_cfa_register 13
 5553              		@ sp needed
 5554 003e 80BD     		pop	{r7, pc}
 5555              		.cfi_endproc
 5556              	.LFE171:
 5558              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5559              		.align	1
 5560              		.syntax unified
 5561              		.thumb
 5562              		.thumb_func
 5563              		.fpu fpv4-sp-d16
 5565              	SPI_DMAAbortOnError:
 5566              	.LFB172:
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5567              		.loc 1 2802 0
 5568              		.cfi_startproc
 5569              		@ args = 0, pretend = 0, frame = 16
 5570              		@ frame_needed = 1, uses_anonymous_args = 0
 5571 0000 80B5     		push	{r7, lr}
 5572              	.LCFI196:
 5573              		.cfi_def_cfa_offset 8
 5574              		.cfi_offset 7, -8
 5575              		.cfi_offset 14, -4
 5576 0002 84B0     		sub	sp, sp, #16
 5577              	.LCFI197:
 5578              		.cfi_def_cfa_offset 24
 5579 0004 00AF     		add	r7, sp, #0
 5580              	.LCFI198:
 5581              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccVrlOhd.s 			page 147


 5582 0006 7860     		str	r0, [r7, #4]
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5583              		.loc 1 2803 0
 5584 0008 7B68     		ldr	r3, [r7, #4]
 5585 000a 9B6B     		ldr	r3, [r3, #56]
 5586 000c FB60     		str	r3, [r7, #12]
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5587              		.loc 1 2804 0
 5588 000e FB68     		ldr	r3, [r7, #12]
 5589 0010 0022     		movs	r2, #0
 5590 0012 A3F84620 		strh	r2, [r3, #70]	@ movhi
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5591              		.loc 1 2805 0
 5592 0016 FB68     		ldr	r3, [r7, #12]
 5593 0018 0022     		movs	r2, #0
 5594 001a DA87     		strh	r2, [r3, #62]	@ movhi
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5595              		.loc 1 2807 0
 5596 001c F868     		ldr	r0, [r7, #12]
 5597 001e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5598              		.loc 1 2808 0
 5599 0022 00BF     		nop
 5600 0024 1037     		adds	r7, r7, #16
 5601              	.LCFI199:
 5602              		.cfi_def_cfa_offset 8
 5603 0026 BD46     		mov	sp, r7
 5604              	.LCFI200:
 5605              		.cfi_def_cfa_register 13
 5606              		@ sp needed
 5607 0028 80BD     		pop	{r7, pc}
 5608              		.cfi_endproc
 5609              	.LFE172:
 5611              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5612              		.align	1
 5613              		.syntax unified
 5614              		.thumb
 5615              		.thumb_func
 5616              		.fpu fpv4-sp-d16
 5618              	SPI_DMATxAbortCallback:
 5619              	.LFB173:
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5620              		.loc 1 2819 0
 5621              		.cfi_startproc
 5622              		@ args = 0, pretend = 0, frame = 24
 5623              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccVrlOhd.s 			page 148


 5624 0000 80B5     		push	{r7, lr}
 5625              	.LCFI201:
 5626              		.cfi_def_cfa_offset 8
 5627              		.cfi_offset 7, -8
 5628              		.cfi_offset 14, -4
 5629 0002 88B0     		sub	sp, sp, #32
 5630              	.LCFI202:
 5631              		.cfi_def_cfa_offset 40
 5632 0004 02AF     		add	r7, sp, #8
 5633              	.LCFI203:
 5634              		.cfi_def_cfa 7, 32
 5635 0006 7860     		str	r0, [r7, #4]
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5636              		.loc 1 2820 0
 5637 0008 7B68     		ldr	r3, [r7, #4]
 5638 000a 9B6B     		ldr	r3, [r3, #56]
 5639 000c 7B61     		str	r3, [r7, #20]
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 5640              		.loc 1 2822 0
 5641 000e 7B69     		ldr	r3, [r7, #20]
 5642 0010 5B6D     		ldr	r3, [r3, #84]
 5643 0012 0022     		movs	r2, #0
 5644 0014 1A65     		str	r2, [r3, #80]
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Tx DMA Request */
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5645              		.loc 1 2825 0
 5646 0016 7B69     		ldr	r3, [r7, #20]
 5647 0018 1B68     		ldr	r3, [r3]
 5648 001a 7A69     		ldr	r2, [r7, #20]
 5649 001c 1268     		ldr	r2, [r2]
 5650 001e 5268     		ldr	r2, [r2, #4]
 5651 0020 22F00202 		bic	r2, r2, #2
 5652 0024 5A60     		str	r2, [r3, #4]
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 5653              		.loc 1 2827 0
 5654 0026 FFF7FEFF 		bl	HAL_GetTick
 5655 002a 0346     		mov	r3, r0
 5656 002c 1A46     		mov	r2, r3
 5657 002e 6421     		movs	r1, #100
 5658 0030 7869     		ldr	r0, [r7, #20]
 5659 0032 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5660 0036 0346     		mov	r3, r0
 5661 0038 002B     		cmp	r3, #0
 5662 003a 02D0     		beq	.L280
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5663              		.loc 1 2829 0
 5664 003c 7B69     		ldr	r3, [r7, #20]
 5665 003e 4022     		movs	r2, #64
 5666 0040 1A66     		str	r2, [r3, #96]
 5667              	.L280:
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
ARM GAS  /tmp/ccVrlOhd.s 			page 149


2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 5668              		.loc 1 2833 0
 5669 0042 7B69     		ldr	r3, [r7, #20]
 5670 0044 1B68     		ldr	r3, [r3]
 5671 0046 7A69     		ldr	r2, [r7, #20]
 5672 0048 1268     		ldr	r2, [r2]
 5673 004a 1268     		ldr	r2, [r2]
 5674 004c 22F04002 		bic	r2, r2, #64
 5675 0050 1A60     		str	r2, [r3]
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 5676              		.loc 1 2836 0
 5677 0052 FFF7FEFF 		bl	HAL_GetTick
 5678 0056 0346     		mov	r3, r0
 5679 0058 0093     		str	r3, [sp]
 5680 005a 6423     		movs	r3, #100
 5681 005c 0022     		movs	r2, #0
 5682 005e 4FF4C061 		mov	r1, #1536
 5683 0062 7869     		ldr	r0, [r7, #20]
 5684 0064 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5685 0068 0346     		mov	r3, r0
 5686 006a 002B     		cmp	r3, #0
 5687 006c 02D0     		beq	.L281
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5688              		.loc 1 2838 0
 5689 006e 7B69     		ldr	r3, [r7, #20]
 5690 0070 4022     		movs	r2, #64
 5691 0072 1A66     		str	r2, [r3, #96]
 5692              	.L281:
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 5693              		.loc 1 2842 0
 5694 0074 7B69     		ldr	r3, [r7, #20]
 5695 0076 9B6D     		ldr	r3, [r3, #88]
 5696 0078 002B     		cmp	r3, #0
 5697 007a 04D0     		beq	.L282
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
 5698              		.loc 1 2844 0
 5699 007c 7B69     		ldr	r3, [r7, #20]
 5700 007e 9B6D     		ldr	r3, [r3, #88]
 5701 0080 1B6D     		ldr	r3, [r3, #80]
 5702 0082 002B     		cmp	r3, #0
 5703 0084 27D1     		bne	.L285
 5704              	.L282:
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5705              		.loc 1 2851 0
ARM GAS  /tmp/ccVrlOhd.s 			page 150


 5706 0086 7B69     		ldr	r3, [r7, #20]
 5707 0088 0022     		movs	r2, #0
 5708 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5709              		.loc 1 2852 0
 5710 008e 7B69     		ldr	r3, [r7, #20]
 5711 0090 0022     		movs	r2, #0
 5712 0092 DA87     		strh	r2, [r3, #62]	@ movhi
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5713              		.loc 1 2855 0
 5714 0094 7B69     		ldr	r3, [r7, #20]
 5715 0096 1B6E     		ldr	r3, [r3, #96]
 5716 0098 402B     		cmp	r3, #64
 5717 009a 02D0     		beq	.L284
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5718              		.loc 1 2858 0
 5719 009c 7B69     		ldr	r3, [r7, #20]
 5720 009e 0022     		movs	r2, #0
 5721 00a0 1A66     		str	r2, [r3, #96]
 5722              	.L284:
 5723              	.LBB12:
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5724              		.loc 1 2862 0
 5725 00a2 0023     		movs	r3, #0
 5726 00a4 3B61     		str	r3, [r7, #16]
 5727 00a6 7B69     		ldr	r3, [r7, #20]
 5728 00a8 1B68     		ldr	r3, [r3]
 5729 00aa DB68     		ldr	r3, [r3, #12]
 5730 00ac 3B61     		str	r3, [r7, #16]
 5731 00ae 7B69     		ldr	r3, [r7, #20]
 5732 00b0 1B68     		ldr	r3, [r3]
 5733 00b2 9B68     		ldr	r3, [r3, #8]
 5734 00b4 3B61     		str	r3, [r7, #16]
 5735 00b6 3B69     		ldr	r3, [r7, #16]
 5736              	.LBE12:
 5737              	.LBB13:
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5738              		.loc 1 2863 0
 5739 00b8 0023     		movs	r3, #0
 5740 00ba FB60     		str	r3, [r7, #12]
 5741 00bc 7B69     		ldr	r3, [r7, #20]
 5742 00be 1B68     		ldr	r3, [r3]
 5743 00c0 9B68     		ldr	r3, [r3, #8]
 5744 00c2 FB60     		str	r3, [r7, #12]
 5745 00c4 FB68     		ldr	r3, [r7, #12]
 5746              	.LBE13:
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5747              		.loc 1 2866 0
ARM GAS  /tmp/ccVrlOhd.s 			page 151


 5748 00c6 7B69     		ldr	r3, [r7, #20]
 5749 00c8 0122     		movs	r2, #1
 5750 00ca 83F85D20 		strb	r2, [r3, #93]
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5751              		.loc 1 2869 0
 5752 00ce 7869     		ldr	r0, [r7, #20]
 5753 00d0 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5754 00d4 00E0     		b	.L279
 5755              	.L285:
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5756              		.loc 1 2846 0
 5757 00d6 00BF     		nop
 5758              	.L279:
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5759              		.loc 1 2870 0
 5760 00d8 1837     		adds	r7, r7, #24
 5761              	.LCFI204:
 5762              		.cfi_def_cfa_offset 8
 5763 00da BD46     		mov	sp, r7
 5764              	.LCFI205:
 5765              		.cfi_def_cfa_register 13
 5766              		@ sp needed
 5767 00dc 80BD     		pop	{r7, pc}
 5768              		.cfi_endproc
 5769              	.LFE173:
 5771              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5772              		.align	1
 5773              		.syntax unified
 5774              		.thumb
 5775              		.thumb_func
 5776              		.fpu fpv4-sp-d16
 5778              	SPI_DMARxAbortCallback:
 5779              	.LFB174:
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5780              		.loc 1 2881 0
 5781              		.cfi_startproc
 5782              		@ args = 0, pretend = 0, frame = 24
 5783              		@ frame_needed = 1, uses_anonymous_args = 0
 5784 0000 80B5     		push	{r7, lr}
 5785              	.LCFI206:
 5786              		.cfi_def_cfa_offset 8
 5787              		.cfi_offset 7, -8
 5788              		.cfi_offset 14, -4
 5789 0002 88B0     		sub	sp, sp, #32
 5790              	.LCFI207:
ARM GAS  /tmp/ccVrlOhd.s 			page 152


 5791              		.cfi_def_cfa_offset 40
 5792 0004 02AF     		add	r7, sp, #8
 5793              	.LCFI208:
 5794              		.cfi_def_cfa 7, 32
 5795 0006 7860     		str	r0, [r7, #4]
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5796              		.loc 1 2882 0
 5797 0008 7B68     		ldr	r3, [r7, #4]
 5798 000a 9B6B     		ldr	r3, [r3, #56]
 5799 000c 7B61     		str	r3, [r7, #20]
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 5800              		.loc 1 2885 0
 5801 000e 7B69     		ldr	r3, [r7, #20]
 5802 0010 1B68     		ldr	r3, [r3]
 5803 0012 7A69     		ldr	r2, [r7, #20]
 5804 0014 1268     		ldr	r2, [r2]
 5805 0016 1268     		ldr	r2, [r2]
 5806 0018 22F04002 		bic	r2, r2, #64
 5807 001c 1A60     		str	r2, [r3]
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 5808              		.loc 1 2887 0
 5809 001e 7B69     		ldr	r3, [r7, #20]
 5810 0020 9B6D     		ldr	r3, [r3, #88]
 5811 0022 0022     		movs	r2, #0
 5812 0024 1A65     		str	r2, [r3, #80]
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Rx DMA Request */
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 5813              		.loc 1 2890 0
 5814 0026 7B69     		ldr	r3, [r7, #20]
 5815 0028 1B68     		ldr	r3, [r3]
 5816 002a 7A69     		ldr	r2, [r7, #20]
 5817 002c 1268     		ldr	r2, [r2]
 5818 002e 5268     		ldr	r2, [r2, #4]
 5819 0030 22F00102 		bic	r2, r2, #1
 5820 0034 5A60     		str	r2, [r3, #4]
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 5821              		.loc 1 2893 0
 5822 0036 FFF7FEFF 		bl	HAL_GetTick
 5823 003a 0346     		mov	r3, r0
 5824 003c 0093     		str	r3, [sp]
 5825 003e 6423     		movs	r3, #100
 5826 0040 0022     		movs	r2, #0
 5827 0042 8021     		movs	r1, #128
 5828 0044 7869     		ldr	r0, [r7, #20]
 5829 0046 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 5830 004a 0346     		mov	r3, r0
 5831 004c 002B     		cmp	r3, #0
 5832 004e 02D0     		beq	.L287
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5833              		.loc 1 2895 0
ARM GAS  /tmp/ccVrlOhd.s 			page 153


 5834 0050 7B69     		ldr	r3, [r7, #20]
 5835 0052 4022     		movs	r2, #64
 5836 0054 1A66     		str	r2, [r3, #96]
 5837              	.L287:
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 5838              		.loc 1 2899 0
 5839 0056 FFF7FEFF 		bl	HAL_GetTick
 5840 005a 0346     		mov	r3, r0
 5841 005c 0093     		str	r3, [sp]
 5842 005e 6423     		movs	r3, #100
 5843 0060 0022     		movs	r2, #0
 5844 0062 4FF4C061 		mov	r1, #1536
 5845 0066 7869     		ldr	r0, [r7, #20]
 5846 0068 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5847 006c 0346     		mov	r3, r0
 5848 006e 002B     		cmp	r3, #0
 5849 0070 02D0     		beq	.L288
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5850              		.loc 1 2901 0
 5851 0072 7B69     		ldr	r3, [r7, #20]
 5852 0074 4022     		movs	r2, #64
 5853 0076 1A66     		str	r2, [r3, #96]
 5854              	.L288:
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 5855              		.loc 1 2905 0
 5856 0078 7B69     		ldr	r3, [r7, #20]
 5857 007a 5B6D     		ldr	r3, [r3, #84]
 5858 007c 002B     		cmp	r3, #0
 5859 007e 04D0     		beq	.L289
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
 5860              		.loc 1 2907 0
 5861 0080 7B69     		ldr	r3, [r7, #20]
 5862 0082 5B6D     		ldr	r3, [r3, #84]
 5863 0084 1B6D     		ldr	r3, [r3, #80]
 5864 0086 002B     		cmp	r3, #0
 5865 0088 27D1     		bne	.L292
 5866              	.L289:
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5867              		.loc 1 2914 0
 5868 008a 7B69     		ldr	r3, [r7, #20]
 5869 008c 0022     		movs	r2, #0
 5870 008e A3F84620 		strh	r2, [r3, #70]	@ movhi
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
ARM GAS  /tmp/ccVrlOhd.s 			page 154


 5871              		.loc 1 2915 0
 5872 0092 7B69     		ldr	r3, [r7, #20]
 5873 0094 0022     		movs	r2, #0
 5874 0096 DA87     		strh	r2, [r3, #62]	@ movhi
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5875              		.loc 1 2918 0
 5876 0098 7B69     		ldr	r3, [r7, #20]
 5877 009a 1B6E     		ldr	r3, [r3, #96]
 5878 009c 402B     		cmp	r3, #64
 5879 009e 02D0     		beq	.L291
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5880              		.loc 1 2921 0
 5881 00a0 7B69     		ldr	r3, [r7, #20]
 5882 00a2 0022     		movs	r2, #0
 5883 00a4 1A66     		str	r2, [r3, #96]
 5884              	.L291:
 5885              	.LBB14:
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5886              		.loc 1 2925 0
 5887 00a6 0023     		movs	r3, #0
 5888 00a8 3B61     		str	r3, [r7, #16]
 5889 00aa 7B69     		ldr	r3, [r7, #20]
 5890 00ac 1B68     		ldr	r3, [r3]
 5891 00ae DB68     		ldr	r3, [r3, #12]
 5892 00b0 3B61     		str	r3, [r7, #16]
 5893 00b2 7B69     		ldr	r3, [r7, #20]
 5894 00b4 1B68     		ldr	r3, [r3]
 5895 00b6 9B68     		ldr	r3, [r3, #8]
 5896 00b8 3B61     		str	r3, [r7, #16]
 5897 00ba 3B69     		ldr	r3, [r7, #16]
 5898              	.LBE14:
 5899              	.LBB15:
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5900              		.loc 1 2926 0
 5901 00bc 0023     		movs	r3, #0
 5902 00be FB60     		str	r3, [r7, #12]
 5903 00c0 7B69     		ldr	r3, [r7, #20]
 5904 00c2 1B68     		ldr	r3, [r3]
 5905 00c4 9B68     		ldr	r3, [r3, #8]
 5906 00c6 FB60     		str	r3, [r7, #12]
 5907 00c8 FB68     		ldr	r3, [r7, #12]
 5908              	.LBE15:
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5909              		.loc 1 2929 0
 5910 00ca 7B69     		ldr	r3, [r7, #20]
 5911 00cc 0122     		movs	r2, #1
 5912 00ce 83F85D20 		strb	r2, [r3, #93]
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccVrlOhd.s 			page 155


2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5913              		.loc 1 2932 0
 5914 00d2 7869     		ldr	r0, [r7, #20]
 5915 00d4 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5916 00d8 00E0     		b	.L286
 5917              	.L292:
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5918              		.loc 1 2909 0
 5919 00da 00BF     		nop
 5920              	.L286:
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5921              		.loc 1 2933 0
 5922 00dc 1837     		adds	r7, r7, #24
 5923              	.LCFI209:
 5924              		.cfi_def_cfa_offset 8
 5925 00de BD46     		mov	sp, r7
 5926              	.LCFI210:
 5927              		.cfi_def_cfa_register 13
 5928              		@ sp needed
 5929 00e0 80BD     		pop	{r7, pc}
 5930              		.cfi_endproc
 5931              	.LFE174:
 5933              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5934              		.align	1
 5935              		.syntax unified
 5936              		.thumb
 5937              		.thumb_func
 5938              		.fpu fpv4-sp-d16
 5940              	SPI_2linesRxISR_8BIT:
 5941              	.LFB175:
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5942              		.loc 1 2942 0
 5943              		.cfi_startproc
 5944              		@ args = 0, pretend = 0, frame = 8
 5945              		@ frame_needed = 1, uses_anonymous_args = 0
 5946 0000 80B5     		push	{r7, lr}
 5947              	.LCFI211:
 5948              		.cfi_def_cfa_offset 8
 5949              		.cfi_offset 7, -8
 5950              		.cfi_offset 14, -4
 5951 0002 82B0     		sub	sp, sp, #8
 5952              	.LCFI212:
 5953              		.cfi_def_cfa_offset 16
 5954 0004 00AF     		add	r7, sp, #0
 5955              	.LCFI213:
 5956              		.cfi_def_cfa_register 7
 5957 0006 7860     		str	r0, [r7, #4]
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in packing mode */
ARM GAS  /tmp/ccVrlOhd.s 			page 156


2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
 5958              		.loc 1 2944 0
 5959 0008 7B68     		ldr	r3, [r7, #4]
 5960 000a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 5961 000e 9BB2     		uxth	r3, r3
 5962 0010 012B     		cmp	r3, #1
 5963 0012 23D9     		bls	.L294
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 5964              		.loc 1 2946 0
 5965 0014 7B68     		ldr	r3, [r7, #4]
 5966 0016 1B6C     		ldr	r3, [r3, #64]
 5967 0018 7A68     		ldr	r2, [r7, #4]
 5968 001a 1268     		ldr	r2, [r2]
 5969 001c D268     		ldr	r2, [r2, #12]
 5970 001e 92B2     		uxth	r2, r2
 5971 0020 1A80     		strh	r2, [r3]	@ movhi
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 5972              		.loc 1 2947 0
 5973 0022 7B68     		ldr	r3, [r7, #4]
 5974 0024 1B6C     		ldr	r3, [r3, #64]
 5975 0026 9A1C     		adds	r2, r3, #2
 5976 0028 7B68     		ldr	r3, [r7, #4]
 5977 002a 1A64     		str	r2, [r3, #64]
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 5978              		.loc 1 2948 0
 5979 002c 7B68     		ldr	r3, [r7, #4]
 5980 002e B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 5981 0032 9BB2     		uxth	r3, r3
 5982 0034 023B     		subs	r3, r3, #2
 5983 0036 9AB2     		uxth	r2, r3
 5984 0038 7B68     		ldr	r3, [r7, #4]
 5985 003a A3F84620 		strh	r2, [r3, #70]	@ movhi
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 5986              		.loc 1 2949 0
 5987 003e 7B68     		ldr	r3, [r7, #4]
 5988 0040 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 5989 0044 9BB2     		uxth	r3, r3
 5990 0046 012B     		cmp	r3, #1
 5991 0048 1CD1     		bne	.L296
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* set fiforxthreshold according the reception data length: 8bit */
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 5992              		.loc 1 2952 0
 5993 004a 7B68     		ldr	r3, [r7, #4]
 5994 004c 1B68     		ldr	r3, [r3]
 5995 004e 7A68     		ldr	r2, [r7, #4]
 5996 0050 1268     		ldr	r2, [r2]
 5997 0052 5268     		ldr	r2, [r2, #4]
 5998 0054 42F48052 		orr	r2, r2, #4096
 5999 0058 5A60     		str	r2, [r3, #4]
 6000 005a 13E0     		b	.L296
 6001              	.L294:
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
ARM GAS  /tmp/ccVrlOhd.s 			page 157


2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *hspi->pRxBuffPtr++ = *((__IO uint8_t *)&hspi->Instance->DR);
 6002              		.loc 1 2958 0
 6003 005c 7B68     		ldr	r3, [r7, #4]
 6004 005e 1B6C     		ldr	r3, [r3, #64]
 6005 0060 591C     		adds	r1, r3, #1
 6006 0062 7A68     		ldr	r2, [r7, #4]
 6007 0064 1164     		str	r1, [r2, #64]
 6008 0066 7A68     		ldr	r2, [r7, #4]
 6009 0068 1268     		ldr	r2, [r2]
 6010 006a 0C32     		adds	r2, r2, #12
 6011 006c 1278     		ldrb	r2, [r2]
 6012 006e D2B2     		uxtb	r2, r2
 6013 0070 1A70     		strb	r2, [r3]
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
 6014              		.loc 1 2959 0
 6015 0072 7B68     		ldr	r3, [r7, #4]
 6016 0074 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6017 0078 9BB2     		uxth	r3, r3
 6018 007a 013B     		subs	r3, r3, #1
 6019 007c 9AB2     		uxth	r2, r3
 6020 007e 7B68     		ldr	r3, [r7, #4]
 6021 0080 A3F84620 		strh	r2, [r3, #70]	@ movhi
 6022              	.L296:
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check end of the reception */
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6023              		.loc 1 2963 0
 6024 0084 7B68     		ldr	r3, [r7, #4]
 6025 0086 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6026 008a 9BB2     		uxth	r3, r3
 6027 008c 002B     		cmp	r3, #0
 6028 008e 0FD1     		bne	.L298
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 6029              		.loc 1 2975 0
 6030 0090 7B68     		ldr	r3, [r7, #4]
 6031 0092 1B68     		ldr	r3, [r3]
 6032 0094 7A68     		ldr	r2, [r7, #4]
 6033 0096 1268     		ldr	r2, [r2]
 6034 0098 5268     		ldr	r2, [r2, #4]
 6035 009a 22F06002 		bic	r2, r2, #96
 6036 009e 5A60     		str	r2, [r3, #4]
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6037              		.loc 1 2977 0
ARM GAS  /tmp/ccVrlOhd.s 			page 158


 6038 00a0 7B68     		ldr	r3, [r7, #4]
 6039 00a2 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6040 00a4 9BB2     		uxth	r3, r3
 6041 00a6 002B     		cmp	r3, #0
 6042 00a8 02D1     		bne	.L298
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6043              		.loc 1 2979 0
 6044 00aa 7868     		ldr	r0, [r7, #4]
 6045 00ac FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6046              	.L298:
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6047              		.loc 1 2982 0
 6048 00b0 00BF     		nop
 6049 00b2 0837     		adds	r7, r7, #8
 6050              	.LCFI214:
 6051              		.cfi_def_cfa_offset 8
 6052 00b4 BD46     		mov	sp, r7
 6053              	.LCFI215:
 6054              		.cfi_def_cfa_register 13
 6055              		@ sp needed
 6056 00b6 80BD     		pop	{r7, pc}
 6057              		.cfi_endproc
 6058              	.LFE175:
 6060              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 6061              		.align	1
 6062              		.syntax unified
 6063              		.thumb
 6064              		.thumb_func
 6065              		.fpu fpv4-sp-d16
 6067              	SPI_2linesTxISR_8BIT:
 6068              	.LFB176:
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint8_t tmpreg = 0U;
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check end of the reception */
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVrlOhd.s 			page 159


3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6069              		.loc 1 3024 0
 6070              		.cfi_startproc
 6071              		@ args = 0, pretend = 0, frame = 8
 6072              		@ frame_needed = 1, uses_anonymous_args = 0
 6073 0000 80B5     		push	{r7, lr}
 6074              	.LCFI216:
 6075              		.cfi_def_cfa_offset 8
 6076              		.cfi_offset 7, -8
 6077              		.cfi_offset 14, -4
 6078 0002 82B0     		sub	sp, sp, #8
 6079              	.LCFI217:
 6080              		.cfi_def_cfa_offset 16
 6081 0004 00AF     		add	r7, sp, #0
 6082              	.LCFI218:
 6083              		.cfi_def_cfa_register 7
 6084 0006 7860     		str	r0, [r7, #4]
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
 6085              		.loc 1 3026 0
 6086 0008 7B68     		ldr	r3, [r7, #4]
 6087 000a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6088 000c 9BB2     		uxth	r3, r3
 6089 000e 012B     		cmp	r3, #1
 6090 0010 12D9     		bls	.L300
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6091              		.loc 1 3028 0
 6092 0012 7B68     		ldr	r3, [r7, #4]
 6093 0014 1B68     		ldr	r3, [r3]
 6094 0016 7A68     		ldr	r2, [r7, #4]
 6095 0018 926B     		ldr	r2, [r2, #56]
 6096 001a 1288     		ldrh	r2, [r2]
 6097 001c DA60     		str	r2, [r3, #12]
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 6098              		.loc 1 3029 0
 6099 001e 7B68     		ldr	r3, [r7, #4]
 6100 0020 9B6B     		ldr	r3, [r3, #56]
 6101 0022 9A1C     		adds	r2, r3, #2
ARM GAS  /tmp/ccVrlOhd.s 			page 160


 6102 0024 7B68     		ldr	r3, [r7, #4]
 6103 0026 9A63     		str	r2, [r3, #56]
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 6104              		.loc 1 3030 0
 6105 0028 7B68     		ldr	r3, [r7, #4]
 6106 002a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6107 002c 9BB2     		uxth	r3, r3
 6108 002e 023B     		subs	r3, r3, #2
 6109 0030 9AB2     		uxth	r2, r3
 6110 0032 7B68     		ldr	r3, [r7, #4]
 6111 0034 DA87     		strh	r2, [r3, #62]	@ movhi
 6112 0036 11E0     		b	.L301
 6113              	.L300:
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 6114              		.loc 1 3035 0
 6115 0038 7B68     		ldr	r3, [r7, #4]
 6116 003a 1B68     		ldr	r3, [r3]
 6117 003c 03F10C02 		add	r2, r3, #12
 6118 0040 7B68     		ldr	r3, [r7, #4]
 6119 0042 9B6B     		ldr	r3, [r3, #56]
 6120 0044 581C     		adds	r0, r3, #1
 6121 0046 7968     		ldr	r1, [r7, #4]
 6122 0048 8863     		str	r0, [r1, #56]
 6123 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6124 004c 1370     		strb	r3, [r2]
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount--;
 6125              		.loc 1 3036 0
 6126 004e 7B68     		ldr	r3, [r7, #4]
 6127 0050 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6128 0052 9BB2     		uxth	r3, r3
 6129 0054 013B     		subs	r3, r3, #1
 6130 0056 9AB2     		uxth	r2, r3
 6131 0058 7B68     		ldr	r3, [r7, #4]
 6132 005a DA87     		strh	r2, [r3, #62]	@ movhi
 6133              	.L301:
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check the end of the transmission */
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6134              		.loc 1 3040 0
 6135 005c 7B68     		ldr	r3, [r7, #4]
 6136 005e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6137 0060 9BB2     		uxth	r3, r3
 6138 0062 002B     		cmp	r3, #0
 6139 0064 10D1     		bne	.L303
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
ARM GAS  /tmp/ccVrlOhd.s 			page 161


3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6140              		.loc 1 3054 0
 6141 0066 7B68     		ldr	r3, [r7, #4]
 6142 0068 1B68     		ldr	r3, [r3]
 6143 006a 7A68     		ldr	r2, [r7, #4]
 6144 006c 1268     		ldr	r2, [r2]
 6145 006e 5268     		ldr	r2, [r2, #4]
 6146 0070 22F08002 		bic	r2, r2, #128
 6147 0074 5A60     		str	r2, [r3, #4]
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6148              		.loc 1 3056 0
 6149 0076 7B68     		ldr	r3, [r7, #4]
 6150 0078 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6151 007c 9BB2     		uxth	r3, r3
 6152 007e 002B     		cmp	r3, #0
 6153 0080 02D1     		bne	.L303
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6154              		.loc 1 3058 0
 6155 0082 7868     		ldr	r0, [r7, #4]
 6156 0084 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6157              	.L303:
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6158              		.loc 1 3061 0
 6159 0088 00BF     		nop
 6160 008a 0837     		adds	r7, r7, #8
 6161              	.LCFI219:
 6162              		.cfi_def_cfa_offset 8
 6163 008c BD46     		mov	sp, r7
 6164              	.LCFI220:
 6165              		.cfi_def_cfa_register 13
 6166              		@ sp needed
 6167 008e 80BD     		pop	{r7, pc}
 6168              		.cfi_endproc
 6169              	.LFE176:
 6171              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 6172              		.align	1
 6173              		.syntax unified
 6174              		.thumb
 6175              		.thumb_func
 6176              		.fpu fpv4-sp-d16
 6178              	SPI_2linesRxISR_16BIT:
 6179              	.LFB177:
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccVrlOhd.s 			page 162


3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6180              		.loc 1 3070 0
 6181              		.cfi_startproc
 6182              		@ args = 0, pretend = 0, frame = 8
 6183              		@ frame_needed = 1, uses_anonymous_args = 0
 6184 0000 80B5     		push	{r7, lr}
 6185              	.LCFI221:
 6186              		.cfi_def_cfa_offset 8
 6187              		.cfi_offset 7, -8
 6188              		.cfi_offset 14, -4
 6189 0002 82B0     		sub	sp, sp, #8
 6190              	.LCFI222:
 6191              		.cfi_def_cfa_offset 16
 6192 0004 00AF     		add	r7, sp, #0
 6193              	.LCFI223:
 6194              		.cfi_def_cfa_register 7
 6195 0006 7860     		str	r0, [r7, #4]
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 6196              		.loc 1 3072 0
 6197 0008 7B68     		ldr	r3, [r7, #4]
 6198 000a 1B6C     		ldr	r3, [r3, #64]
 6199 000c 7A68     		ldr	r2, [r7, #4]
 6200 000e 1268     		ldr	r2, [r2]
 6201 0010 D268     		ldr	r2, [r2, #12]
 6202 0012 92B2     		uxth	r2, r2
 6203 0014 1A80     		strh	r2, [r3]	@ movhi
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6204              		.loc 1 3073 0
 6205 0016 7B68     		ldr	r3, [r7, #4]
 6206 0018 1B6C     		ldr	r3, [r3, #64]
 6207 001a 9A1C     		adds	r2, r3, #2
 6208 001c 7B68     		ldr	r3, [r7, #4]
 6209 001e 1A64     		str	r2, [r3, #64]
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 6210              		.loc 1 3074 0
 6211 0020 7B68     		ldr	r3, [r7, #4]
 6212 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6213 0026 9BB2     		uxth	r3, r3
 6214 0028 013B     		subs	r3, r3, #1
 6215 002a 9AB2     		uxth	r2, r3
 6216 002c 7B68     		ldr	r3, [r7, #4]
 6217 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6218              		.loc 1 3076 0
 6219 0032 7B68     		ldr	r3, [r7, #4]
 6220 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6221 0038 9BB2     		uxth	r3, r3
 6222 003a 002B     		cmp	r3, #0
 6223 003c 0FD1     		bne	.L306
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccVrlOhd.s 			page 163


3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE interrupt */
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
 6224              		.loc 1 3087 0
 6225 003e 7B68     		ldr	r3, [r7, #4]
 6226 0040 1B68     		ldr	r3, [r3]
 6227 0042 7A68     		ldr	r2, [r7, #4]
 6228 0044 1268     		ldr	r2, [r2]
 6229 0046 5268     		ldr	r2, [r2, #4]
 6230 0048 22F04002 		bic	r2, r2, #64
 6231 004c 5A60     		str	r2, [r3, #4]
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6232              		.loc 1 3089 0
 6233 004e 7B68     		ldr	r3, [r7, #4]
 6234 0050 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6235 0052 9BB2     		uxth	r3, r3
 6236 0054 002B     		cmp	r3, #0
 6237 0056 02D1     		bne	.L306
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6238              		.loc 1 3091 0
 6239 0058 7868     		ldr	r0, [r7, #4]
 6240 005a FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6241              	.L306:
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6242              		.loc 1 3094 0
 6243 005e 00BF     		nop
 6244 0060 0837     		adds	r7, r7, #8
 6245              	.LCFI224:
 6246              		.cfi_def_cfa_offset 8
 6247 0062 BD46     		mov	sp, r7
 6248              	.LCFI225:
 6249              		.cfi_def_cfa_register 13
 6250              		@ sp needed
 6251 0064 80BD     		pop	{r7, pc}
 6252              		.cfi_endproc
 6253              	.LFE177:
 6255              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 6256              		.align	1
 6257              		.syntax unified
 6258              		.thumb
 6259              		.thumb_func
 6260              		.fpu fpv4-sp-d16
 6262              	SPI_2linesTxISR_16BIT:
 6263              	.LFB178:
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccVrlOhd.s 			page 164


3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = hspi->Instance->DR;
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE interrupt */
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6264              		.loc 1 3128 0
 6265              		.cfi_startproc
 6266              		@ args = 0, pretend = 0, frame = 8
 6267              		@ frame_needed = 1, uses_anonymous_args = 0
 6268 0000 80B5     		push	{r7, lr}
 6269              	.LCFI226:
 6270              		.cfi_def_cfa_offset 8
 6271              		.cfi_offset 7, -8
 6272              		.cfi_offset 14, -4
 6273 0002 82B0     		sub	sp, sp, #8
 6274              	.LCFI227:
 6275              		.cfi_def_cfa_offset 16
 6276 0004 00AF     		add	r7, sp, #0
 6277              	.LCFI228:
 6278              		.cfi_def_cfa_register 7
 6279 0006 7860     		str	r0, [r7, #4]
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6280              		.loc 1 3130 0
 6281 0008 7B68     		ldr	r3, [r7, #4]
 6282 000a 1B68     		ldr	r3, [r3]
 6283 000c 7A68     		ldr	r2, [r7, #4]
 6284 000e 926B     		ldr	r2, [r2, #56]
 6285 0010 1288     		ldrh	r2, [r2]
 6286 0012 DA60     		str	r2, [r3, #12]
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6287              		.loc 1 3131 0
 6288 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 165


 6289 0016 9B6B     		ldr	r3, [r3, #56]
 6290 0018 9A1C     		adds	r2, r3, #2
 6291 001a 7B68     		ldr	r3, [r7, #4]
 6292 001c 9A63     		str	r2, [r3, #56]
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 6293              		.loc 1 3132 0
 6294 001e 7B68     		ldr	r3, [r7, #4]
 6295 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6296 0022 9BB2     		uxth	r3, r3
 6297 0024 013B     		subs	r3, r3, #1
 6298 0026 9AB2     		uxth	r2, r3
 6299 0028 7B68     		ldr	r3, [r7, #4]
 6300 002a DA87     		strh	r2, [r3, #62]	@ movhi
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6301              		.loc 1 3135 0
 6302 002c 7B68     		ldr	r3, [r7, #4]
 6303 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6304 0030 9BB2     		uxth	r3, r3
 6305 0032 002B     		cmp	r3, #0
 6306 0034 10D1     		bne	.L309
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6307              		.loc 1 3149 0
 6308 0036 7B68     		ldr	r3, [r7, #4]
 6309 0038 1B68     		ldr	r3, [r3]
 6310 003a 7A68     		ldr	r2, [r7, #4]
 6311 003c 1268     		ldr	r2, [r2]
 6312 003e 5268     		ldr	r2, [r2, #4]
 6313 0040 22F08002 		bic	r2, r2, #128
 6314 0044 5A60     		str	r2, [r3, #4]
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6315              		.loc 1 3151 0
 6316 0046 7B68     		ldr	r3, [r7, #4]
 6317 0048 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6318 004c 9BB2     		uxth	r3, r3
 6319 004e 002B     		cmp	r3, #0
 6320 0050 02D1     		bne	.L309
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6321              		.loc 1 3153 0
 6322 0052 7868     		ldr	r0, [r7, #4]
 6323 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
ARM GAS  /tmp/ccVrlOhd.s 			page 166


 6324              	.L309:
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6325              		.loc 1 3156 0
 6326 0058 00BF     		nop
 6327 005a 0837     		adds	r7, r7, #8
 6328              	.LCFI229:
 6329              		.cfi_def_cfa_offset 8
 6330 005c BD46     		mov	sp, r7
 6331              	.LCFI230:
 6332              		.cfi_def_cfa_register 13
 6333              		@ sp needed
 6334 005e 80BD     		pop	{r7, pc}
 6335              		.cfi_endproc
 6336              	.LFE178:
 6338              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 6339              		.align	1
 6340              		.syntax unified
 6341              		.thumb
 6342              		.thumb_func
 6343              		.fpu fpv4-sp-d16
 6345              	SPI_RxISR_8BIT:
 6346              	.LFB179:
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint8_t tmpreg = 0U;
3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccVrlOhd.s 			page 167


3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6347              		.loc 1 3191 0
 6348              		.cfi_startproc
 6349              		@ args = 0, pretend = 0, frame = 8
 6350              		@ frame_needed = 1, uses_anonymous_args = 0
 6351 0000 80B5     		push	{r7, lr}
 6352              	.LCFI231:
 6353              		.cfi_def_cfa_offset 8
 6354              		.cfi_offset 7, -8
 6355              		.cfi_offset 14, -4
 6356 0002 82B0     		sub	sp, sp, #8
 6357              	.LCFI232:
 6358              		.cfi_def_cfa_offset 16
 6359 0004 00AF     		add	r7, sp, #0
 6360              	.LCFI233:
 6361              		.cfi_def_cfa_register 7
 6362 0006 7860     		str	r0, [r7, #4]
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *hspi->pRxBuffPtr++ = (*(__IO uint8_t *)&hspi->Instance->DR);
 6363              		.loc 1 3192 0
 6364 0008 7B68     		ldr	r3, [r7, #4]
 6365 000a 1B6C     		ldr	r3, [r3, #64]
 6366 000c 591C     		adds	r1, r3, #1
 6367 000e 7A68     		ldr	r2, [r7, #4]
 6368 0010 1164     		str	r1, [r2, #64]
 6369 0012 7A68     		ldr	r2, [r7, #4]
 6370 0014 1268     		ldr	r2, [r2]
 6371 0016 0C32     		adds	r2, r2, #12
 6372 0018 1278     		ldrb	r2, [r2]
 6373 001a D2B2     		uxtb	r2, r2
 6374 001c 1A70     		strb	r2, [r3]
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 6375              		.loc 1 3193 0
 6376 001e 7B68     		ldr	r3, [r7, #4]
 6377 0020 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6378 0024 9BB2     		uxth	r3, r3
 6379 0026 013B     		subs	r3, r3, #1
 6380 0028 9AB2     		uxth	r2, r3
 6381 002a 7B68     		ldr	r3, [r7, #4]
 6382 002c A3F84620 		strh	r2, [r3, #70]	@ movhi
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6383              		.loc 1 3203 0
 6384 0030 7B68     		ldr	r3, [r7, #4]
 6385 0032 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6386 0036 9BB2     		uxth	r3, r3
 6387 0038 002B     		cmp	r3, #0
 6388 003a 02D1     		bne	.L312
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVrlOhd.s 			page 168


3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6389              		.loc 1 3212 0
 6390 003c 7868     		ldr	r0, [r7, #4]
 6391 003e FFF7FEFF 		bl	SPI_CloseRx_ISR
 6392              	.L312:
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6393              		.loc 1 3214 0
 6394 0042 00BF     		nop
 6395 0044 0837     		adds	r7, r7, #8
 6396              	.LCFI234:
 6397              		.cfi_def_cfa_offset 8
 6398 0046 BD46     		mov	sp, r7
 6399              	.LCFI235:
 6400              		.cfi_def_cfa_register 13
 6401              		@ sp needed
 6402 0048 80BD     		pop	{r7, pc}
 6403              		.cfi_endproc
 6404              	.LFE179:
 6406              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 6407              		.align	1
 6408              		.syntax unified
 6409              		.thumb
 6410              		.thumb_func
 6411              		.fpu fpv4-sp-d16
 6413              	SPI_RxISR_16BIT:
 6414              	.LFB180:
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = hspi->Instance->DR;
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
ARM GAS  /tmp/ccVrlOhd.s 			page 169


3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6415              		.loc 1 3247 0
 6416              		.cfi_startproc
 6417              		@ args = 0, pretend = 0, frame = 8
 6418              		@ frame_needed = 1, uses_anonymous_args = 0
 6419 0000 80B5     		push	{r7, lr}
 6420              	.LCFI236:
 6421              		.cfi_def_cfa_offset 8
 6422              		.cfi_offset 7, -8
 6423              		.cfi_offset 14, -4
 6424 0002 82B0     		sub	sp, sp, #8
 6425              	.LCFI237:
 6426              		.cfi_def_cfa_offset 16
 6427 0004 00AF     		add	r7, sp, #0
 6428              	.LCFI238:
 6429              		.cfi_def_cfa_register 7
 6430 0006 7860     		str	r0, [r7, #4]
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 6431              		.loc 1 3248 0
 6432 0008 7B68     		ldr	r3, [r7, #4]
 6433 000a 1B6C     		ldr	r3, [r3, #64]
 6434 000c 7A68     		ldr	r2, [r7, #4]
 6435 000e 1268     		ldr	r2, [r2]
 6436 0010 D268     		ldr	r2, [r2, #12]
 6437 0012 92B2     		uxth	r2, r2
 6438 0014 1A80     		strh	r2, [r3]	@ movhi
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6439              		.loc 1 3249 0
 6440 0016 7B68     		ldr	r3, [r7, #4]
 6441 0018 1B6C     		ldr	r3, [r3, #64]
 6442 001a 9A1C     		adds	r2, r3, #2
 6443 001c 7B68     		ldr	r3, [r7, #4]
 6444 001e 1A64     		str	r2, [r3, #64]
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 6445              		.loc 1 3250 0
 6446 0020 7B68     		ldr	r3, [r7, #4]
 6447 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6448 0026 9BB2     		uxth	r3, r3
 6449 0028 013B     		subs	r3, r3, #1
 6450 002a 9AB2     		uxth	r2, r3
 6451 002c 7B68     		ldr	r3, [r7, #4]
 6452 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
ARM GAS  /tmp/ccVrlOhd.s 			page 170


3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6453              		.loc 1 3260 0
 6454 0032 7B68     		ldr	r3, [r7, #4]
 6455 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6456 0038 9BB2     		uxth	r3, r3
 6457 003a 002B     		cmp	r3, #0
 6458 003c 02D1     		bne	.L315
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6459              		.loc 1 3269 0
 6460 003e 7868     		ldr	r0, [r7, #4]
 6461 0040 FFF7FEFF 		bl	SPI_CloseRx_ISR
 6462              	.L315:
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6463              		.loc 1 3271 0
 6464 0044 00BF     		nop
 6465 0046 0837     		adds	r7, r7, #8
 6466              	.LCFI239:
 6467              		.cfi_def_cfa_offset 8
 6468 0048 BD46     		mov	sp, r7
 6469              	.LCFI240:
 6470              		.cfi_def_cfa_register 13
 6471              		@ sp needed
 6472 004a 80BD     		pop	{r7, pc}
 6473              		.cfi_endproc
 6474              	.LFE180:
 6476              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 6477              		.align	1
 6478              		.syntax unified
 6479              		.thumb
 6480              		.thumb_func
 6481              		.fpu fpv4-sp-d16
 6483              	SPI_TxISR_8BIT:
 6484              	.LFB181:
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6485              		.loc 1 3280 0
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccVrlOhd.s 			page 171


 6488              		@ frame_needed = 1, uses_anonymous_args = 0
 6489 0000 80B5     		push	{r7, lr}
 6490              	.LCFI241:
 6491              		.cfi_def_cfa_offset 8
 6492              		.cfi_offset 7, -8
 6493              		.cfi_offset 14, -4
 6494 0002 82B0     		sub	sp, sp, #8
 6495              	.LCFI242:
 6496              		.cfi_def_cfa_offset 16
 6497 0004 00AF     		add	r7, sp, #0
 6498              	.LCFI243:
 6499              		.cfi_def_cfa_register 7
 6500 0006 7860     		str	r0, [r7, #4]
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 6501              		.loc 1 3281 0
 6502 0008 7B68     		ldr	r3, [r7, #4]
 6503 000a 1B68     		ldr	r3, [r3]
 6504 000c 03F10C02 		add	r2, r3, #12
 6505 0010 7B68     		ldr	r3, [r7, #4]
 6506 0012 9B6B     		ldr	r3, [r3, #56]
 6507 0014 581C     		adds	r0, r3, #1
 6508 0016 7968     		ldr	r1, [r7, #4]
 6509 0018 8863     		str	r0, [r1, #56]
 6510 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6511 001c 1370     		strb	r3, [r2]
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 6512              		.loc 1 3282 0
 6513 001e 7B68     		ldr	r3, [r7, #4]
 6514 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6515 0022 9BB2     		uxth	r3, r3
 6516 0024 013B     		subs	r3, r3, #1
 6517 0026 9AB2     		uxth	r2, r3
 6518 0028 7B68     		ldr	r3, [r7, #4]
 6519 002a DA87     		strh	r2, [r3, #62]	@ movhi
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6520              		.loc 1 3284 0
 6521 002c 7B68     		ldr	r3, [r7, #4]
 6522 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6523 0030 9BB2     		uxth	r3, r3
 6524 0032 002B     		cmp	r3, #0
 6525 0034 02D1     		bne	.L318
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6526              		.loc 1 3293 0
 6527 0036 7868     		ldr	r0, [r7, #4]
 6528 0038 FFF7FEFF 		bl	SPI_CloseTx_ISR
 6529              	.L318:
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
ARM GAS  /tmp/ccVrlOhd.s 			page 172


 6530              		.loc 1 3295 0
 6531 003c 00BF     		nop
 6532 003e 0837     		adds	r7, r7, #8
 6533              	.LCFI244:
 6534              		.cfi_def_cfa_offset 8
 6535 0040 BD46     		mov	sp, r7
 6536              	.LCFI245:
 6537              		.cfi_def_cfa_register 13
 6538              		@ sp needed
 6539 0042 80BD     		pop	{r7, pc}
 6540              		.cfi_endproc
 6541              	.LFE181:
 6543              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 6544              		.align	1
 6545              		.syntax unified
 6546              		.thumb
 6547              		.thumb_func
 6548              		.fpu fpv4-sp-d16
 6550              	SPI_TxISR_16BIT:
 6551              	.LFB182:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6552              		.loc 1 3304 0
 6553              		.cfi_startproc
 6554              		@ args = 0, pretend = 0, frame = 8
 6555              		@ frame_needed = 1, uses_anonymous_args = 0
 6556 0000 80B5     		push	{r7, lr}
 6557              	.LCFI246:
 6558              		.cfi_def_cfa_offset 8
 6559              		.cfi_offset 7, -8
 6560              		.cfi_offset 14, -4
 6561 0002 82B0     		sub	sp, sp, #8
 6562              	.LCFI247:
 6563              		.cfi_def_cfa_offset 16
 6564 0004 00AF     		add	r7, sp, #0
 6565              	.LCFI248:
 6566              		.cfi_def_cfa_register 7
 6567 0006 7860     		str	r0, [r7, #4]
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6568              		.loc 1 3306 0
 6569 0008 7B68     		ldr	r3, [r7, #4]
 6570 000a 1B68     		ldr	r3, [r3]
 6571 000c 7A68     		ldr	r2, [r7, #4]
 6572 000e 926B     		ldr	r2, [r2, #56]
 6573 0010 1288     		ldrh	r2, [r2]
 6574 0012 DA60     		str	r2, [r3, #12]
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6575              		.loc 1 3307 0
 6576 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 173


 6577 0016 9B6B     		ldr	r3, [r3, #56]
 6578 0018 9A1C     		adds	r2, r3, #2
 6579 001a 7B68     		ldr	r3, [r7, #4]
 6580 001c 9A63     		str	r2, [r3, #56]
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 6581              		.loc 1 3308 0
 6582 001e 7B68     		ldr	r3, [r7, #4]
 6583 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6584 0022 9BB2     		uxth	r3, r3
 6585 0024 013B     		subs	r3, r3, #1
 6586 0026 9AB2     		uxth	r2, r3
 6587 0028 7B68     		ldr	r3, [r7, #4]
 6588 002a DA87     		strh	r2, [r3, #62]	@ movhi
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6589              		.loc 1 3310 0
 6590 002c 7B68     		ldr	r3, [r7, #4]
 6591 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6592 0030 9BB2     		uxth	r3, r3
 6593 0032 002B     		cmp	r3, #0
 6594 0034 02D1     		bne	.L321
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6595              		.loc 1 3319 0
 6596 0036 7868     		ldr	r0, [r7, #4]
 6597 0038 FFF7FEFF 		bl	SPI_CloseTx_ISR
 6598              	.L321:
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6599              		.loc 1 3321 0
 6600 003c 00BF     		nop
 6601 003e 0837     		adds	r7, r7, #8
 6602              	.LCFI249:
 6603              		.cfi_def_cfa_offset 8
 6604 0040 BD46     		mov	sp, r7
 6605              	.LCFI250:
 6606              		.cfi_def_cfa_register 13
 6607              		@ sp needed
 6608 0042 80BD     		pop	{r7, pc}
 6609              		.cfi_endproc
 6610              	.LFE182:
 6612              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 6613              		.align	1
 6614              		.syntax unified
 6615              		.thumb
 6616              		.thumb_func
 6617              		.fpu fpv4-sp-d16
 6619              	SPI_WaitFlagStateUntilTimeout:
 6620              	.LFB183:
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccVrlOhd.s 			page 174


3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Handle SPI Communication Timeout.
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param hspi pointer to a SPI_HandleTypeDef structure that contains
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Flag SPI flag to check
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param State flag state to check
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Timeout Timeout duration
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Tickstart tick start value
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6621              		.loc 1 3335 0
 6622              		.cfi_startproc
 6623              		@ args = 4, pretend = 0, frame = 16
 6624              		@ frame_needed = 1, uses_anonymous_args = 0
 6625 0000 80B5     		push	{r7, lr}
 6626              	.LCFI251:
 6627              		.cfi_def_cfa_offset 8
 6628              		.cfi_offset 7, -8
 6629              		.cfi_offset 14, -4
 6630 0002 84B0     		sub	sp, sp, #16
 6631              	.LCFI252:
 6632              		.cfi_def_cfa_offset 24
 6633 0004 00AF     		add	r7, sp, #0
 6634              	.LCFI253:
 6635              		.cfi_def_cfa_register 7
 6636 0006 F860     		str	r0, [r7, #12]
 6637 0008 B960     		str	r1, [r7, #8]
 6638 000a 7A60     		str	r2, [r7, #4]
 6639 000c 3B60     		str	r3, [r7]
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Flag) != State)
 6640              		.loc 1 3336 0
 6641 000e 4DE0     		b	.L323
 6642              	.L329:
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 6643              		.loc 1 3338 0
 6644 0010 3B68     		ldr	r3, [r7]
 6645 0012 B3F1FF3F 		cmp	r3, #-1
 6646 0016 49D0     		beq	.L323
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) >= Timeout))
 6647              		.loc 1 3340 0
 6648 0018 3B68     		ldr	r3, [r7]
 6649 001a 002B     		cmp	r3, #0
 6650 001c 07D0     		beq	.L324
 6651              		.loc 1 3340 0 is_stmt 0 discriminator 1
 6652 001e FFF7FEFF 		bl	HAL_GetTick
 6653 0022 0246     		mov	r2, r0
 6654 0024 BB69     		ldr	r3, [r7, #24]
 6655 0026 D21A     		subs	r2, r2, r3
 6656 0028 3B68     		ldr	r3, [r7]
 6657 002a 9A42     		cmp	r2, r3
 6658 002c 3ED3     		bcc	.L323
 6659              	.L324:
ARM GAS  /tmp/ccVrlOhd.s 			page 175


3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         and slave for their respective CRC calculation */
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 6660              		.loc 1 3347 0 is_stmt 1
 6661 002e FB68     		ldr	r3, [r7, #12]
 6662 0030 1B68     		ldr	r3, [r3]
 6663 0032 FA68     		ldr	r2, [r7, #12]
 6664 0034 1268     		ldr	r2, [r2]
 6665 0036 5268     		ldr	r2, [r2, #4]
 6666 0038 22F0E002 		bic	r2, r2, #224
 6667 003c 5A60     		str	r2, [r3, #4]
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6668              		.loc 1 3349 0
 6669 003e FB68     		ldr	r3, [r7, #12]
 6670 0040 5B68     		ldr	r3, [r3, #4]
 6671 0042 B3F5827F 		cmp	r3, #260
 6672 0046 11D1     		bne	.L325
 6673              		.loc 1 3349 0 is_stmt 0 discriminator 1
 6674 0048 FB68     		ldr	r3, [r7, #12]
 6675 004a 9B68     		ldr	r3, [r3, #8]
 6676 004c B3F5004F 		cmp	r3, #32768
 6677 0050 04D0     		beq	.L326
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 6678              		.loc 1 3350 0 is_stmt 1
 6679 0052 FB68     		ldr	r3, [r7, #12]
 6680 0054 9B68     		ldr	r3, [r3, #8]
 6681 0056 B3F5806F 		cmp	r3, #1024
 6682 005a 07D1     		bne	.L325
 6683              	.L326:
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 6684              		.loc 1 3353 0
 6685 005c FB68     		ldr	r3, [r7, #12]
 6686 005e 1B68     		ldr	r3, [r3]
 6687 0060 FA68     		ldr	r2, [r7, #12]
 6688 0062 1268     		ldr	r2, [r2]
 6689 0064 1268     		ldr	r2, [r2]
 6690 0066 22F04002 		bic	r2, r2, #64
 6691 006a 1A60     		str	r2, [r3]
 6692              	.L325:
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 6693              		.loc 1 3357 0
 6694 006c FB68     		ldr	r3, [r7, #12]
 6695 006e 9B6A     		ldr	r3, [r3, #40]
 6696 0070 B3F5005F 		cmp	r3, #8192
 6697 0074 10D1     		bne	.L327
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
ARM GAS  /tmp/ccVrlOhd.s 			page 176


 6698              		.loc 1 3359 0
 6699 0076 FB68     		ldr	r3, [r7, #12]
 6700 0078 1A68     		ldr	r2, [r3]
 6701 007a FB68     		ldr	r3, [r7, #12]
 6702 007c 1B68     		ldr	r3, [r3]
 6703 007e 1968     		ldr	r1, [r3]
 6704 0080 4DF6FF73 		movw	r3, #57343
 6705 0084 0B40     		ands	r3, r3, r1
 6706 0086 1360     		str	r3, [r2]
 6707 0088 FB68     		ldr	r3, [r7, #12]
 6708 008a 1B68     		ldr	r3, [r3]
 6709 008c FA68     		ldr	r2, [r7, #12]
 6710 008e 1268     		ldr	r2, [r2]
 6711 0090 1268     		ldr	r2, [r2]
 6712 0092 42F40052 		orr	r2, r2, #8192
 6713 0096 1A60     		str	r2, [r3]
 6714              	.L327:
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 6715              		.loc 1 3362 0
 6716 0098 FB68     		ldr	r3, [r7, #12]
 6717 009a 0122     		movs	r2, #1
 6718 009c 83F85D20 		strb	r2, [r3, #93]
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 6719              		.loc 1 3365 0
 6720 00a0 FB68     		ldr	r3, [r7, #12]
 6721 00a2 0022     		movs	r2, #0
 6722 00a4 83F85C20 		strb	r2, [r3, #92]
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
 6723              		.loc 1 3367 0
 6724 00a8 0323     		movs	r3, #3
 6725 00aa 08E0     		b	.L328
 6726              	.L323:
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6727              		.loc 1 3336 0
 6728 00ac FB68     		ldr	r3, [r7, #12]
 6729 00ae 1B68     		ldr	r3, [r3]
 6730 00b0 9A68     		ldr	r2, [r3, #8]
 6731 00b2 BB68     		ldr	r3, [r7, #8]
 6732 00b4 1A40     		ands	r2, r2, r3
 6733 00b6 7B68     		ldr	r3, [r7, #4]
 6734 00b8 9A42     		cmp	r2, r3
 6735 00ba A9D1     		bne	.L329
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 6736              		.loc 1 3372 0
 6737 00bc 0023     		movs	r3, #0
 6738              	.L328:
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6739              		.loc 1 3373 0
ARM GAS  /tmp/ccVrlOhd.s 			page 177


 6740 00be 1846     		mov	r0, r3
 6741 00c0 1037     		adds	r7, r7, #16
 6742              	.LCFI254:
 6743              		.cfi_def_cfa_offset 8
 6744 00c2 BD46     		mov	sp, r7
 6745              	.LCFI255:
 6746              		.cfi_def_cfa_register 13
 6747              		@ sp needed
 6748 00c4 80BD     		pop	{r7, pc}
 6749              		.cfi_endproc
 6750              	.LFE183:
 6752              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 6753              		.align	1
 6754              		.syntax unified
 6755              		.thumb
 6756              		.thumb_func
 6757              		.fpu fpv4-sp-d16
 6759              	SPI_WaitFifoStateUntilTimeout:
 6760              	.LFB184:
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Handle SPI FIFO Communication Timeout.
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param hspi pointer to a SPI_HandleTypeDef structure that contains
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Fifo Fifo to check
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param State Fifo state to check
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Timeout Timeout duration
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Tickstart tick start value
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6761              		.loc 1 3387 0
 6762              		.cfi_startproc
 6763              		@ args = 4, pretend = 0, frame = 24
 6764              		@ frame_needed = 1, uses_anonymous_args = 0
 6765 0000 80B5     		push	{r7, lr}
 6766              	.LCFI256:
 6767              		.cfi_def_cfa_offset 8
 6768              		.cfi_offset 7, -8
 6769              		.cfi_offset 14, -4
 6770 0002 86B0     		sub	sp, sp, #24
 6771              	.LCFI257:
 6772              		.cfi_def_cfa_offset 32
 6773 0004 00AF     		add	r7, sp, #0
 6774              	.LCFI258:
 6775              		.cfi_def_cfa_register 7
 6776 0006 F860     		str	r0, [r7, #12]
 6777 0008 B960     		str	r1, [r7, #8]
 6778 000a 7A60     		str	r2, [r7, #4]
 6779 000c 3B60     		str	r3, [r7]
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint8_t tmpreg;
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 6780              		.loc 1 3390 0
 6781 000e 5BE0     		b	.L331
ARM GAS  /tmp/ccVrlOhd.s 			page 178


 6782              	.L338:
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 6783              		.loc 1 3392 0
 6784 0010 BB68     		ldr	r3, [r7, #8]
 6785 0012 B3F5C06F 		cmp	r3, #1536
 6786 0016 09D1     		bne	.L332
 6787              		.loc 1 3392 0 is_stmt 0 discriminator 1
 6788 0018 7B68     		ldr	r3, [r7, #4]
 6789 001a 002B     		cmp	r3, #0
 6790 001c 06D1     		bne	.L332
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
 6791              		.loc 1 3394 0 is_stmt 1
 6792 001e FB68     		ldr	r3, [r7, #12]
 6793 0020 1B68     		ldr	r3, [r3]
 6794 0022 0C33     		adds	r3, r3, #12
 6795 0024 1B78     		ldrb	r3, [r3]
 6796 0026 DBB2     		uxtb	r3, r3
 6797 0028 FB75     		strb	r3, [r7, #23]
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
 6798              		.loc 1 3396 0
 6799 002a FB7D     		ldrb	r3, [r7, #23]
 6800              	.L332:
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 6801              		.loc 1 3399 0
 6802 002c 3B68     		ldr	r3, [r7]
 6803 002e B3F1FF3F 		cmp	r3, #-1
 6804 0032 49D0     		beq	.L331
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout == 0) || ((HAL_GetTick() - Tickstart) >= Timeout))
 6805              		.loc 1 3401 0
 6806 0034 3B68     		ldr	r3, [r7]
 6807 0036 002B     		cmp	r3, #0
 6808 0038 07D0     		beq	.L333
 6809              		.loc 1 3401 0 is_stmt 0 discriminator 1
 6810 003a FFF7FEFF 		bl	HAL_GetTick
 6811 003e 0246     		mov	r2, r0
 6812 0040 3B6A     		ldr	r3, [r7, #32]
 6813 0042 D21A     		subs	r2, r2, r3
 6814 0044 3B68     		ldr	r3, [r7]
 6815 0046 9A42     		cmp	r2, r3
 6816 0048 3ED3     		bcc	.L331
 6817              	.L333:
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            and slave for their respective CRC calculation */
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 6818              		.loc 1 3408 0 is_stmt 1
 6819 004a FB68     		ldr	r3, [r7, #12]
 6820 004c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccVrlOhd.s 			page 179


 6821 004e FA68     		ldr	r2, [r7, #12]
 6822 0050 1268     		ldr	r2, [r2]
 6823 0052 5268     		ldr	r2, [r2, #4]
 6824 0054 22F0E002 		bic	r2, r2, #224
 6825 0058 5A60     		str	r2, [r3, #4]
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6826              		.loc 1 3410 0
 6827 005a FB68     		ldr	r3, [r7, #12]
 6828 005c 5B68     		ldr	r3, [r3, #4]
 6829 005e B3F5827F 		cmp	r3, #260
 6830 0062 11D1     		bne	.L334
 6831              		.loc 1 3410 0 is_stmt 0 discriminator 1
 6832 0064 FB68     		ldr	r3, [r7, #12]
 6833 0066 9B68     		ldr	r3, [r3, #8]
 6834 0068 B3F5004F 		cmp	r3, #32768
 6835 006c 04D0     		beq	.L335
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 6836              		.loc 1 3411 0 is_stmt 1
 6837 006e FB68     		ldr	r3, [r7, #12]
 6838 0070 9B68     		ldr	r3, [r3, #8]
 6839 0072 B3F5806F 		cmp	r3, #1024
 6840 0076 07D1     		bne	.L334
 6841              	.L335:
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 6842              		.loc 1 3414 0
 6843 0078 FB68     		ldr	r3, [r7, #12]
 6844 007a 1B68     		ldr	r3, [r3]
 6845 007c FA68     		ldr	r2, [r7, #12]
 6846 007e 1268     		ldr	r2, [r2]
 6847 0080 1268     		ldr	r2, [r2]
 6848 0082 22F04002 		bic	r2, r2, #64
 6849 0086 1A60     		str	r2, [r3]
 6850              	.L334:
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 6851              		.loc 1 3418 0
 6852 0088 FB68     		ldr	r3, [r7, #12]
 6853 008a 9B6A     		ldr	r3, [r3, #40]
 6854 008c B3F5005F 		cmp	r3, #8192
 6855 0090 10D1     		bne	.L336
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 6856              		.loc 1 3420 0
 6857 0092 FB68     		ldr	r3, [r7, #12]
 6858 0094 1A68     		ldr	r2, [r3]
 6859 0096 FB68     		ldr	r3, [r7, #12]
 6860 0098 1B68     		ldr	r3, [r3]
 6861 009a 1968     		ldr	r1, [r3]
 6862 009c 4DF6FF73 		movw	r3, #57343
 6863 00a0 0B40     		ands	r3, r3, r1
 6864 00a2 1360     		str	r3, [r2]
 6865 00a4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVrlOhd.s 			page 180


 6866 00a6 1B68     		ldr	r3, [r3]
 6867 00a8 FA68     		ldr	r2, [r7, #12]
 6868 00aa 1268     		ldr	r2, [r2]
 6869 00ac 1268     		ldr	r2, [r2]
 6870 00ae 42F40052 		orr	r2, r2, #8192
 6871 00b2 1A60     		str	r2, [r3]
 6872              	.L336:
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 6873              		.loc 1 3423 0
 6874 00b4 FB68     		ldr	r3, [r7, #12]
 6875 00b6 0122     		movs	r2, #1
 6876 00b8 83F85D20 		strb	r2, [r3, #93]
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 6877              		.loc 1 3426 0
 6878 00bc FB68     		ldr	r3, [r7, #12]
 6879 00be 0022     		movs	r2, #0
 6880 00c0 83F85C20 		strb	r2, [r3, #92]
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
 6881              		.loc 1 3428 0
 6882 00c4 0323     		movs	r3, #3
 6883 00c6 08E0     		b	.L337
 6884              	.L331:
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6885              		.loc 1 3390 0
 6886 00c8 FB68     		ldr	r3, [r7, #12]
 6887 00ca 1B68     		ldr	r3, [r3]
 6888 00cc 9A68     		ldr	r2, [r3, #8]
 6889 00ce BB68     		ldr	r3, [r7, #8]
 6890 00d0 1A40     		ands	r2, r2, r3
 6891 00d2 7B68     		ldr	r3, [r7, #4]
 6892 00d4 9A42     		cmp	r2, r3
 6893 00d6 9BD1     		bne	.L338
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 6894              		.loc 1 3433 0
 6895 00d8 0023     		movs	r3, #0
 6896              	.L337:
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6897              		.loc 1 3434 0
 6898 00da 1846     		mov	r0, r3
 6899 00dc 1837     		adds	r7, r7, #24
 6900              	.LCFI259:
 6901              		.cfi_def_cfa_offset 8
 6902 00de BD46     		mov	sp, r7
 6903              	.LCFI260:
 6904              		.cfi_def_cfa_register 13
 6905              		@ sp needed
 6906 00e0 80BD     		pop	{r7, pc}
 6907              		.cfi_endproc
ARM GAS  /tmp/ccVrlOhd.s 			page 181


 6908              	.LFE184:
 6910              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 6911              		.align	1
 6912              		.syntax unified
 6913              		.thumb
 6914              		.thumb_func
 6915              		.fpu fpv4-sp-d16
 6917              	SPI_EndRxTransaction:
 6918              	.LFB185:
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None.
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6919              		.loc 1 3445 0
 6920              		.cfi_startproc
 6921              		@ args = 0, pretend = 0, frame = 16
 6922              		@ frame_needed = 1, uses_anonymous_args = 0
 6923 0000 80B5     		push	{r7, lr}
 6924              	.LCFI261:
 6925              		.cfi_def_cfa_offset 8
 6926              		.cfi_offset 7, -8
 6927              		.cfi_offset 14, -4
 6928 0002 86B0     		sub	sp, sp, #24
 6929              	.LCFI262:
 6930              		.cfi_def_cfa_offset 32
 6931 0004 02AF     		add	r7, sp, #8
 6932              	.LCFI263:
 6933              		.cfi_def_cfa 7, 24
 6934 0006 F860     		str	r0, [r7, #12]
 6935 0008 B960     		str	r1, [r7, #8]
 6936 000a 7A60     		str	r2, [r7, #4]
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6937              		.loc 1 3446 0
 6938 000c FB68     		ldr	r3, [r7, #12]
 6939 000e 5B68     		ldr	r3, [r3, #4]
 6940 0010 B3F5827F 		cmp	r3, #260
 6941 0014 11D1     		bne	.L340
 6942              		.loc 1 3446 0 is_stmt 0 discriminator 1
 6943 0016 FB68     		ldr	r3, [r7, #12]
 6944 0018 9B68     		ldr	r3, [r3, #8]
 6945 001a B3F5004F 		cmp	r3, #32768
 6946 001e 04D0     		beq	.L341
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 6947              		.loc 1 3447 0 is_stmt 1
 6948 0020 FB68     		ldr	r3, [r7, #12]
 6949 0022 9B68     		ldr	r3, [r3, #8]
 6950 0024 B3F5806F 		cmp	r3, #1024
 6951 0028 07D1     		bne	.L340
 6952              	.L341:
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVrlOhd.s 			page 182


3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable SPI peripheral */
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 6953              		.loc 1 3450 0
 6954 002a FB68     		ldr	r3, [r7, #12]
 6955 002c 1B68     		ldr	r3, [r3]
 6956 002e FA68     		ldr	r2, [r7, #12]
 6957 0030 1268     		ldr	r2, [r2]
 6958 0032 1268     		ldr	r2, [r2]
 6959 0034 22F04002 		bic	r2, r2, #64
 6960 0038 1A60     		str	r2, [r3]
 6961              	.L340:
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 6962              		.loc 1 3454 0
 6963 003a 7B68     		ldr	r3, [r7, #4]
 6964 003c 0093     		str	r3, [sp]
 6965 003e BB68     		ldr	r3, [r7, #8]
 6966 0040 0022     		movs	r2, #0
 6967 0042 8021     		movs	r1, #128
 6968 0044 F868     		ldr	r0, [r7, #12]
 6969 0046 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6970 004a 0346     		mov	r3, r0
 6971 004c 002B     		cmp	r3, #0
 6972 004e 07D0     		beq	.L342
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6973              		.loc 1 3456 0
 6974 0050 FB68     		ldr	r3, [r7, #12]
 6975 0052 1B6E     		ldr	r3, [r3, #96]
 6976 0054 43F02002 		orr	r2, r3, #32
 6977 0058 FB68     		ldr	r3, [r7, #12]
 6978 005a 1A66     		str	r2, [r3, #96]
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 6979              		.loc 1 3457 0
 6980 005c 0323     		movs	r3, #3
 6981 005e 23E0     		b	.L343
 6982              	.L342:
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6983              		.loc 1 3460 0
 6984 0060 FB68     		ldr	r3, [r7, #12]
 6985 0062 5B68     		ldr	r3, [r3, #4]
 6986 0064 B3F5827F 		cmp	r3, #260
 6987 0068 1DD1     		bne	.L344
 6988              		.loc 1 3460 0 is_stmt 0 discriminator 1
 6989 006a FB68     		ldr	r3, [r7, #12]
 6990 006c 9B68     		ldr	r3, [r3, #8]
 6991 006e B3F5004F 		cmp	r3, #32768
 6992 0072 04D0     		beq	.L345
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 6993              		.loc 1 3461 0 is_stmt 1
 6994 0074 FB68     		ldr	r3, [r7, #12]
 6995 0076 9B68     		ldr	r3, [r3, #8]
 6996 0078 B3F5806F 		cmp	r3, #1024
ARM GAS  /tmp/ccVrlOhd.s 			page 183


 6997 007c 13D1     		bne	.L344
 6998              	.L345:
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
 6999              		.loc 1 3464 0
 7000 007e 7B68     		ldr	r3, [r7, #4]
 7001 0080 0093     		str	r3, [sp]
 7002 0082 BB68     		ldr	r3, [r7, #8]
 7003 0084 0022     		movs	r2, #0
 7004 0086 4FF4C061 		mov	r1, #1536
 7005 008a F868     		ldr	r0, [r7, #12]
 7006 008c FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7007 0090 0346     		mov	r3, r0
 7008 0092 002B     		cmp	r3, #0
 7009 0094 07D0     		beq	.L344
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7010              		.loc 1 3466 0
 7011 0096 FB68     		ldr	r3, [r7, #12]
 7012 0098 1B6E     		ldr	r3, [r3, #96]
 7013 009a 43F02002 		orr	r2, r3, #32
 7014 009e FB68     		ldr	r3, [r7, #12]
 7015 00a0 1A66     		str	r2, [r3, #96]
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 7016              		.loc 1 3467 0
 7017 00a2 0323     		movs	r3, #3
 7018 00a4 00E0     		b	.L343
 7019              	.L344:
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 7020              		.loc 1 3470 0
 7021 00a6 0023     		movs	r3, #0
 7022              	.L343:
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7023              		.loc 1 3471 0
 7024 00a8 1846     		mov	r0, r3
 7025 00aa 1037     		adds	r7, r7, #16
 7026              	.LCFI264:
 7027              		.cfi_def_cfa_offset 8
 7028 00ac BD46     		mov	sp, r7
 7029              	.LCFI265:
 7030              		.cfi_def_cfa_register 13
 7031              		@ sp needed
 7032 00ae 80BD     		pop	{r7, pc}
 7033              		.cfi_endproc
 7034              	.LFE185:
 7036              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 7037              		.align	1
 7038              		.syntax unified
 7039              		.thumb
 7040              		.thumb_func
 7041              		.fpu fpv4-sp-d16
 7043              	SPI_EndRxTxTransaction:
 7044              	.LFB186:
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccVrlOhd.s 			page 184


3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Handle the check of the RXTX or TX transaction complete.
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param hspi SPI handle
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Timeout Timeout duration
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Tickstart tick start value
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7045              		.loc 1 3480 0
 7046              		.cfi_startproc
 7047              		@ args = 0, pretend = 0, frame = 16
 7048              		@ frame_needed = 1, uses_anonymous_args = 0
 7049 0000 80B5     		push	{r7, lr}
 7050              	.LCFI266:
 7051              		.cfi_def_cfa_offset 8
 7052              		.cfi_offset 7, -8
 7053              		.cfi_offset 14, -4
 7054 0002 86B0     		sub	sp, sp, #24
 7055              	.LCFI267:
 7056              		.cfi_def_cfa_offset 32
 7057 0004 02AF     		add	r7, sp, #8
 7058              	.LCFI268:
 7059              		.cfi_def_cfa 7, 24
 7060 0006 F860     		str	r0, [r7, #12]
 7061 0008 B960     		str	r1, [r7, #8]
 7062 000a 7A60     		str	r2, [r7, #4]
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the TX fifo is empty */
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 7063              		.loc 1 3482 0
 7064 000c 7B68     		ldr	r3, [r7, #4]
 7065 000e 0093     		str	r3, [sp]
 7066 0010 BB68     		ldr	r3, [r7, #8]
 7067 0012 0022     		movs	r2, #0
 7068 0014 4FF4C051 		mov	r1, #6144
 7069 0018 F868     		ldr	r0, [r7, #12]
 7070 001a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7071 001e 0346     		mov	r3, r0
 7072 0020 002B     		cmp	r3, #0
 7073 0022 07D0     		beq	.L347
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7074              		.loc 1 3484 0
 7075 0024 FB68     		ldr	r3, [r7, #12]
 7076 0026 1B6E     		ldr	r3, [r3, #96]
 7077 0028 43F02002 		orr	r2, r3, #32
 7078 002c FB68     		ldr	r3, [r7, #12]
 7079 002e 1A66     		str	r2, [r3, #96]
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7080              		.loc 1 3485 0
 7081 0030 0323     		movs	r3, #3
 7082 0032 27E0     		b	.L348
 7083              	.L347:
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 7084              		.loc 1 3488 0
 7085 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVrlOhd.s 			page 185


 7086 0036 0093     		str	r3, [sp]
 7087 0038 BB68     		ldr	r3, [r7, #8]
 7088 003a 0022     		movs	r2, #0
 7089 003c 8021     		movs	r1, #128
 7090 003e F868     		ldr	r0, [r7, #12]
 7091 0040 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 7092 0044 0346     		mov	r3, r0
 7093 0046 002B     		cmp	r3, #0
 7094 0048 07D0     		beq	.L349
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7095              		.loc 1 3490 0
 7096 004a FB68     		ldr	r3, [r7, #12]
 7097 004c 1B6E     		ldr	r3, [r3, #96]
 7098 004e 43F02002 		orr	r2, r3, #32
 7099 0052 FB68     		ldr	r3, [r7, #12]
 7100 0054 1A66     		str	r2, [r3, #96]
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7101              		.loc 1 3491 0
 7102 0056 0323     		movs	r3, #3
 7103 0058 14E0     		b	.L348
 7104              	.L349:
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the RX fifo is empty */
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
 7105              		.loc 1 3494 0
 7106 005a 7B68     		ldr	r3, [r7, #4]
 7107 005c 0093     		str	r3, [sp]
 7108 005e BB68     		ldr	r3, [r7, #8]
 7109 0060 0022     		movs	r2, #0
 7110 0062 4FF4C061 		mov	r1, #1536
 7111 0066 F868     		ldr	r0, [r7, #12]
 7112 0068 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7113 006c 0346     		mov	r3, r0
 7114 006e 002B     		cmp	r3, #0
 7115 0070 07D0     		beq	.L350
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7116              		.loc 1 3496 0
 7117 0072 FB68     		ldr	r3, [r7, #12]
 7118 0074 1B6E     		ldr	r3, [r3, #96]
 7119 0076 43F02002 		orr	r2, r3, #32
 7120 007a FB68     		ldr	r3, [r7, #12]
 7121 007c 1A66     		str	r2, [r3, #96]
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7122              		.loc 1 3497 0
 7123 007e 0323     		movs	r3, #3
 7124 0080 00E0     		b	.L348
 7125              	.L350:
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 7126              		.loc 1 3499 0
 7127 0082 0023     		movs	r3, #0
 7128              	.L348:
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7129              		.loc 1 3500 0
 7130 0084 1846     		mov	r0, r3
ARM GAS  /tmp/ccVrlOhd.s 			page 186


 7131 0086 1037     		adds	r7, r7, #16
 7132              	.LCFI269:
 7133              		.cfi_def_cfa_offset 8
 7134 0088 BD46     		mov	sp, r7
 7135              	.LCFI270:
 7136              		.cfi_def_cfa_register 13
 7137              		@ sp needed
 7138 008a 80BD     		pop	{r7, pc}
 7139              		.cfi_endproc
 7140              	.LFE186:
 7142              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 7143              		.align	1
 7144              		.syntax unified
 7145              		.thumb
 7146              		.thumb_func
 7147              		.fpu fpv4-sp-d16
 7149              	SPI_CloseRxTx_ISR:
 7150              	.LFB187:
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7151              		.loc 1 3509 0
 7152              		.cfi_startproc
 7153              		@ args = 0, pretend = 0, frame = 16
 7154              		@ frame_needed = 1, uses_anonymous_args = 0
 7155 0000 80B5     		push	{r7, lr}
 7156              	.LCFI271:
 7157              		.cfi_def_cfa_offset 8
 7158              		.cfi_offset 7, -8
 7159              		.cfi_offset 14, -4
 7160 0002 84B0     		sub	sp, sp, #16
 7161              	.LCFI272:
 7162              		.cfi_def_cfa_offset 24
 7163 0004 00AF     		add	r7, sp, #0
 7164              	.LCFI273:
 7165              		.cfi_def_cfa_register 7
 7166 0006 7860     		str	r0, [r7, #4]
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7167              		.loc 1 3510 0
 7168 0008 0023     		movs	r3, #0
 7169 000a FB60     		str	r3, [r7, #12]
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7170              		.loc 1 3513 0
 7171 000c FFF7FEFF 		bl	HAL_GetTick
 7172 0010 F860     		str	r0, [r7, #12]
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable ERR interrupt */
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 7173              		.loc 1 3516 0
ARM GAS  /tmp/ccVrlOhd.s 			page 187


 7174 0012 7B68     		ldr	r3, [r7, #4]
 7175 0014 1B68     		ldr	r3, [r3]
 7176 0016 7A68     		ldr	r2, [r7, #4]
 7177 0018 1268     		ldr	r2, [r2]
 7178 001a 5268     		ldr	r2, [r2, #4]
 7179 001c 22F02002 		bic	r2, r2, #32
 7180 0020 5A60     		str	r2, [r3, #4]
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7181              		.loc 1 3519 0
 7182 0022 FA68     		ldr	r2, [r7, #12]
 7183 0024 6421     		movs	r1, #100
 7184 0026 7868     		ldr	r0, [r7, #4]
 7185 0028 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7186 002c 0346     		mov	r3, r0
 7187 002e 002B     		cmp	r3, #0
 7188 0030 05D0     		beq	.L352
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7189              		.loc 1 3521 0
 7190 0032 7B68     		ldr	r3, [r7, #4]
 7191 0034 1B6E     		ldr	r3, [r3, #96]
 7192 0036 43F02002 		orr	r2, r3, #32
 7193 003a 7B68     		ldr	r3, [r7, #4]
 7194 003c 1A66     		str	r2, [r3, #96]
 7195              	.L352:
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7196              		.loc 1 3536 0
 7197 003e 7B68     		ldr	r3, [r7, #4]
 7198 0040 1B6E     		ldr	r3, [r3, #96]
 7199 0042 002B     		cmp	r3, #0
 7200 0044 15D1     		bne	.L353
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 7201              		.loc 1 3538 0
 7202 0046 7B68     		ldr	r3, [r7, #4]
 7203 0048 93F85D30 		ldrb	r3, [r3, #93]
 7204 004c DBB2     		uxtb	r3, r3
 7205 004e 042B     		cmp	r3, #4
 7206 0050 07D1     		bne	.L354
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccVrlOhd.s 			page 188


 7207              		.loc 1 3540 0
 7208 0052 7B68     		ldr	r3, [r7, #4]
 7209 0054 0122     		movs	r2, #1
 7210 0056 83F85D20 		strb	r2, [r3, #93]
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 7211              		.loc 1 3541 0
 7212 005a 7868     		ldr	r0, [r7, #4]
 7213 005c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7214              		.loc 1 3557 0
 7215 0060 0EE0     		b	.L357
 7216              	.L354:
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 7217              		.loc 1 3545 0
 7218 0062 7B68     		ldr	r3, [r7, #4]
 7219 0064 0122     		movs	r2, #1
 7220 0066 83F85D20 		strb	r2, [r3, #93]
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 7221              		.loc 1 3546 0
 7222 006a 7868     		ldr	r0, [r7, #4]
 7223 006c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 7224              		.loc 1 3557 0
 7225 0070 06E0     		b	.L357
 7226              	.L353:
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 7227              		.loc 1 3551 0
 7228 0072 7B68     		ldr	r3, [r7, #4]
 7229 0074 0122     		movs	r2, #1
 7230 0076 83F85D20 		strb	r2, [r3, #93]
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 7231              		.loc 1 3552 0
 7232 007a 7868     		ldr	r0, [r7, #4]
 7233 007c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7234              	.L357:
 7235              		.loc 1 3557 0
 7236 0080 00BF     		nop
 7237 0082 1037     		adds	r7, r7, #16
 7238              	.LCFI274:
 7239              		.cfi_def_cfa_offset 8
 7240 0084 BD46     		mov	sp, r7
 7241              	.LCFI275:
 7242              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccVrlOhd.s 			page 189


 7243              		@ sp needed
 7244 0086 80BD     		pop	{r7, pc}
 7245              		.cfi_endproc
 7246              	.LFE187:
 7248              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 7249              		.align	1
 7250              		.syntax unified
 7251              		.thumb
 7252              		.thumb_func
 7253              		.fpu fpv4-sp-d16
 7255              	SPI_CloseRx_ISR:
 7256              	.LFB188:
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7257              		.loc 1 3566 0
 7258              		.cfi_startproc
 7259              		@ args = 0, pretend = 0, frame = 8
 7260              		@ frame_needed = 1, uses_anonymous_args = 0
 7261 0000 80B5     		push	{r7, lr}
 7262              	.LCFI276:
 7263              		.cfi_def_cfa_offset 8
 7264              		.cfi_offset 7, -8
 7265              		.cfi_offset 14, -4
 7266 0002 82B0     		sub	sp, sp, #8
 7267              	.LCFI277:
 7268              		.cfi_def_cfa_offset 16
 7269 0004 00AF     		add	r7, sp, #0
 7270              	.LCFI278:
 7271              		.cfi_def_cfa_register 7
 7272 0006 7860     		str	r0, [r7, #4]
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 7273              		.loc 1 3568 0
 7274 0008 7B68     		ldr	r3, [r7, #4]
 7275 000a 1B68     		ldr	r3, [r3]
 7276 000c 7A68     		ldr	r2, [r7, #4]
 7277 000e 1268     		ldr	r2, [r2]
 7278 0010 5268     		ldr	r2, [r2, #4]
 7279 0012 22F06002 		bic	r2, r2, #96
 7280 0016 5A60     		str	r2, [r3, #4]
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 7281              		.loc 1 3571 0
 7282 0018 FFF7FEFF 		bl	HAL_GetTick
 7283 001c 0346     		mov	r3, r0
 7284 001e 1A46     		mov	r2, r3
 7285 0020 6421     		movs	r1, #100
 7286 0022 7868     		ldr	r0, [r7, #4]
 7287 0024 FFF7FEFF 		bl	SPI_EndRxTransaction
ARM GAS  /tmp/ccVrlOhd.s 			page 190


 7288 0028 0346     		mov	r3, r0
 7289 002a 002B     		cmp	r3, #0
 7290 002c 05D0     		beq	.L359
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7291              		.loc 1 3573 0
 7292 002e 7B68     		ldr	r3, [r7, #4]
 7293 0030 1B6E     		ldr	r3, [r3, #96]
 7294 0032 43F02002 		orr	r2, r3, #32
 7295 0036 7B68     		ldr	r3, [r7, #4]
 7296 0038 1A66     		str	r2, [r3, #96]
 7297              	.L359:
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7298              		.loc 1 3575 0
 7299 003a 7B68     		ldr	r3, [r7, #4]
 7300 003c 0122     		movs	r2, #1
 7301 003e 83F85D20 		strb	r2, [r3, #93]
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7302              		.loc 1 3588 0
 7303 0042 7B68     		ldr	r3, [r7, #4]
 7304 0044 1B6E     		ldr	r3, [r3, #96]
 7305 0046 002B     		cmp	r3, #0
 7306 0048 03D1     		bne	.L360
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 7307              		.loc 1 3590 0
 7308 004a 7868     		ldr	r0, [r7, #4]
 7309 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7310              		.loc 1 3599 0
 7311 0050 02E0     		b	.L362
 7312              	.L360:
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 7313              		.loc 1 3594 0
 7314 0052 7868     		ldr	r0, [r7, #4]
 7315 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
ARM GAS  /tmp/ccVrlOhd.s 			page 191


 7316              	.L362:
 7317              		.loc 1 3599 0
 7318 0058 00BF     		nop
 7319 005a 0837     		adds	r7, r7, #8
 7320              	.LCFI279:
 7321              		.cfi_def_cfa_offset 8
 7322 005c BD46     		mov	sp, r7
 7323              	.LCFI280:
 7324              		.cfi_def_cfa_register 13
 7325              		@ sp needed
 7326 005e 80BD     		pop	{r7, pc}
 7327              		.cfi_endproc
 7328              	.LFE188:
 7330              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 7331              		.align	1
 7332              		.syntax unified
 7333              		.thumb
 7334              		.thumb_func
 7335              		.fpu fpv4-sp-d16
 7337              	SPI_CloseTx_ISR:
 7338              	.LFB189:
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7339              		.loc 1 3608 0
 7340              		.cfi_startproc
 7341              		@ args = 0, pretend = 0, frame = 16
 7342              		@ frame_needed = 1, uses_anonymous_args = 0
 7343 0000 80B5     		push	{r7, lr}
 7344              	.LCFI281:
 7345              		.cfi_def_cfa_offset 8
 7346              		.cfi_offset 7, -8
 7347              		.cfi_offset 14, -4
 7348 0002 84B0     		sub	sp, sp, #16
 7349              	.LCFI282:
 7350              		.cfi_def_cfa_offset 24
 7351 0004 00AF     		add	r7, sp, #0
 7352              	.LCFI283:
 7353              		.cfi_def_cfa_register 7
 7354 0006 7860     		str	r0, [r7, #4]
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7355              		.loc 1 3609 0
 7356 0008 0023     		movs	r3, #0
 7357 000a FB60     		str	r3, [r7, #12]
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7358              		.loc 1 3612 0
 7359 000c FFF7FEFF 		bl	HAL_GetTick
 7360 0010 F860     		str	r0, [r7, #12]
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccVrlOhd.s 			page 192


3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 7361              		.loc 1 3615 0
 7362 0012 7B68     		ldr	r3, [r7, #4]
 7363 0014 1B68     		ldr	r3, [r3]
 7364 0016 7A68     		ldr	r2, [r7, #4]
 7365 0018 1268     		ldr	r2, [r2]
 7366 001a 5268     		ldr	r2, [r2, #4]
 7367 001c 22F0A002 		bic	r2, r2, #160
 7368 0020 5A60     		str	r2, [r3, #4]
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7369              		.loc 1 3618 0
 7370 0022 FA68     		ldr	r2, [r7, #12]
 7371 0024 6421     		movs	r1, #100
 7372 0026 7868     		ldr	r0, [r7, #4]
 7373 0028 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7374 002c 0346     		mov	r3, r0
 7375 002e 002B     		cmp	r3, #0
 7376 0030 05D0     		beq	.L364
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7377              		.loc 1 3620 0
 7378 0032 7B68     		ldr	r3, [r7, #4]
 7379 0034 1B6E     		ldr	r3, [r3, #96]
 7380 0036 43F02002 		orr	r2, r3, #32
 7381 003a 7B68     		ldr	r3, [r7, #4]
 7382 003c 1A66     		str	r2, [r3, #96]
 7383              	.L364:
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7384              		.loc 1 3624 0
 7385 003e 7B68     		ldr	r3, [r7, #4]
 7386 0040 9B68     		ldr	r3, [r3, #8]
 7387 0042 002B     		cmp	r3, #0
 7388 0044 0AD1     		bne	.L365
 7389              	.LBB16:
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7390              		.loc 1 3626 0
 7391 0046 0023     		movs	r3, #0
 7392 0048 BB60     		str	r3, [r7, #8]
 7393 004a 7B68     		ldr	r3, [r7, #4]
 7394 004c 1B68     		ldr	r3, [r3]
 7395 004e DB68     		ldr	r3, [r3, #12]
 7396 0050 BB60     		str	r3, [r7, #8]
 7397 0052 7B68     		ldr	r3, [r7, #4]
 7398 0054 1B68     		ldr	r3, [r3]
 7399 0056 9B68     		ldr	r3, [r3, #8]
 7400 0058 BB60     		str	r3, [r7, #8]
 7401 005a BB68     		ldr	r3, [r7, #8]
 7402              	.L365:
 7403              	.LBE16:
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVrlOhd.s 			page 193


3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7404              		.loc 1 3629 0
 7405 005c 7B68     		ldr	r3, [r7, #4]
 7406 005e 0122     		movs	r2, #1
 7407 0060 83F85D20 		strb	r2, [r3, #93]
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 7408              		.loc 1 3630 0
 7409 0064 7B68     		ldr	r3, [r7, #4]
 7410 0066 1B6E     		ldr	r3, [r3, #96]
 7411 0068 002B     		cmp	r3, #0
 7412 006a 03D0     		beq	.L366
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 7413              		.loc 1 3632 0
 7414 006c 7868     		ldr	r0, [r7, #4]
 7415 006e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7416              		.loc 1 3638 0
 7417 0072 02E0     		b	.L368
 7418              	.L366:
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 7419              		.loc 1 3636 0
 7420 0074 7868     		ldr	r0, [r7, #4]
 7421 0076 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 7422              	.L368:
 7423              		.loc 1 3638 0
 7424 007a 00BF     		nop
 7425 007c 1037     		adds	r7, r7, #16
 7426              	.LCFI284:
 7427              		.cfi_def_cfa_offset 8
 7428 007e BD46     		mov	sp, r7
 7429              	.LCFI285:
 7430              		.cfi_def_cfa_register 13
 7431              		@ sp needed
 7432 0080 80BD     		pop	{r7, pc}
 7433              		.cfi_endproc
 7434              	.LFE189:
 7436              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 7437              		.align	1
 7438              		.syntax unified
 7439              		.thumb
 7440              		.thumb_func
 7441              		.fpu fpv4-sp-d16
 7443              	SPI_AbortRx_ISR:
 7444              	.LFB190:
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccVrlOhd.s 			page 194


3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7445              		.loc 1 3647 0
 7446              		.cfi_startproc
 7447              		@ args = 0, pretend = 0, frame = 16
 7448              		@ frame_needed = 1, uses_anonymous_args = 0
 7449 0000 80B5     		push	{r7, lr}
 7450              	.LCFI286:
 7451              		.cfi_def_cfa_offset 8
 7452              		.cfi_offset 7, -8
 7453              		.cfi_offset 14, -4
 7454 0002 86B0     		sub	sp, sp, #24
 7455              	.LCFI287:
 7456              		.cfi_def_cfa_offset 32
 7457 0004 02AF     		add	r7, sp, #8
 7458              	.LCFI288:
 7459              		.cfi_def_cfa 7, 24
 7460 0006 7860     		str	r0, [r7, #4]
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7461              		.loc 1 3648 0
 7462 0008 0023     		movs	r3, #0
 7463 000a FB60     		str	r3, [r7, #12]
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7464              		.loc 1 3651 0
 7465 000c FFF7FEFF 		bl	HAL_GetTick
 7466 0010 F860     		str	r0, [r7, #12]
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7467              		.loc 1 3654 0
 7468 0012 7B68     		ldr	r3, [r7, #4]
 7469 0014 1B68     		ldr	r3, [r3]
 7470 0016 7A68     		ldr	r2, [r7, #4]
 7471 0018 1268     		ldr	r2, [r2]
 7472 001a 1268     		ldr	r2, [r2]
 7473 001c 22F04002 		bic	r2, r2, #64
 7474 0020 1A60     		str	r2, [r3]
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 7475              		.loc 1 3657 0
 7476 0022 7B68     		ldr	r3, [r7, #4]
 7477 0024 1B68     		ldr	r3, [r3]
 7478 0026 7A68     		ldr	r2, [r7, #4]
 7479 0028 1268     		ldr	r2, [r2]
 7480 002a 5268     		ldr	r2, [r2, #4]
 7481 002c 22F0E002 		bic	r2, r2, #224
 7482 0030 5A60     		str	r2, [r3, #4]
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 7483              		.loc 1 3659 0
 7484 0032 0AE0     		b	.L370
 7485              	.L371:
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVrlOhd.s 			page 195


3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 7486              		.loc 1 3661 0
 7487 0034 FFF7FEFF 		bl	HAL_GetTick
 7488 0038 0246     		mov	r2, r0
 7489 003a FB68     		ldr	r3, [r7, #12]
 7490 003c D31A     		subs	r3, r2, r3
 7491 003e B3F1FF3F 		cmp	r3, #-1
 7492 0042 02D1     		bne	.L370
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7493              		.loc 1 3663 0
 7494 0044 7B68     		ldr	r3, [r7, #4]
 7495 0046 4022     		movs	r2, #64
 7496 0048 1A66     		str	r2, [r3, #96]
 7497              	.L370:
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 7498              		.loc 1 3659 0
 7499 004a 7B68     		ldr	r3, [r7, #4]
 7500 004c 1B68     		ldr	r3, [r3]
 7501 004e 5B68     		ldr	r3, [r3, #4]
 7502 0050 03F04003 		and	r3, r3, #64
 7503 0054 002B     		cmp	r3, #0
 7504 0056 EDD1     		bne	.L371
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 7505              		.loc 1 3668 0
 7506 0058 FFF7FEFF 		bl	HAL_GetTick
 7507 005c 0346     		mov	r3, r0
 7508 005e 0093     		str	r3, [sp]
 7509 0060 6423     		movs	r3, #100
 7510 0062 0022     		movs	r2, #0
 7511 0064 8021     		movs	r1, #128
 7512 0066 7868     		ldr	r0, [r7, #4]
 7513 0068 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 7514 006c 0346     		mov	r3, r0
 7515 006e 002B     		cmp	r3, #0
 7516 0070 02D0     		beq	.L372
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7517              		.loc 1 3670 0
 7518 0072 7B68     		ldr	r3, [r7, #4]
 7519 0074 4022     		movs	r2, #64
 7520 0076 1A66     		str	r2, [r3, #96]
 7521              	.L372:
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 7522              		.loc 1 3674 0
 7523 0078 FFF7FEFF 		bl	HAL_GetTick
 7524 007c 0346     		mov	r3, r0
 7525 007e 0093     		str	r3, [sp]
 7526 0080 6423     		movs	r3, #100
 7527 0082 0022     		movs	r2, #0
ARM GAS  /tmp/ccVrlOhd.s 			page 196


 7528 0084 4FF4C061 		mov	r1, #1536
 7529 0088 7868     		ldr	r0, [r7, #4]
 7530 008a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7531 008e 0346     		mov	r3, r0
 7532 0090 002B     		cmp	r3, #0
 7533 0092 02D0     		beq	.L373
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7534              		.loc 1 3676 0
 7535 0094 7B68     		ldr	r3, [r7, #4]
 7536 0096 4022     		movs	r2, #64
 7537 0098 1A66     		str	r2, [r3, #96]
 7538              	.L373:
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7539              		.loc 1 3679 0
 7540 009a 7B68     		ldr	r3, [r7, #4]
 7541 009c 0722     		movs	r2, #7
 7542 009e 83F85D20 		strb	r2, [r3, #93]
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7543              		.loc 1 3680 0
 7544 00a2 00BF     		nop
 7545 00a4 1037     		adds	r7, r7, #16
 7546              	.LCFI289:
 7547              		.cfi_def_cfa_offset 8
 7548 00a6 BD46     		mov	sp, r7
 7549              	.LCFI290:
 7550              		.cfi_def_cfa_register 13
 7551              		@ sp needed
 7552 00a8 80BD     		pop	{r7, pc}
 7553              		.cfi_endproc
 7554              	.LFE190:
 7556              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 7557              		.align	1
 7558              		.syntax unified
 7559              		.thumb
 7560              		.thumb_func
 7561              		.fpu fpv4-sp-d16
 7563              	SPI_AbortTx_ISR:
 7564              	.LFB191:
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7565              		.loc 1 3689 0
 7566              		.cfi_startproc
 7567              		@ args = 0, pretend = 0, frame = 16
 7568              		@ frame_needed = 1, uses_anonymous_args = 0
 7569 0000 80B5     		push	{r7, lr}
 7570              	.LCFI291:
 7571              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccVrlOhd.s 			page 197


 7572              		.cfi_offset 7, -8
 7573              		.cfi_offset 14, -4
 7574 0002 86B0     		sub	sp, sp, #24
 7575              	.LCFI292:
 7576              		.cfi_def_cfa_offset 32
 7577 0004 02AF     		add	r7, sp, #8
 7578              	.LCFI293:
 7579              		.cfi_def_cfa 7, 24
 7580 0006 7860     		str	r0, [r7, #4]
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7581              		.loc 1 3690 0
 7582 0008 0023     		movs	r3, #0
 7583 000a FB60     		str	r3, [r7, #12]
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7584              		.loc 1 3693 0
 7585 000c FFF7FEFF 		bl	HAL_GetTick
 7586 0010 F860     		str	r0, [r7, #12]
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 7587              		.loc 1 3696 0
 7588 0012 7B68     		ldr	r3, [r7, #4]
 7589 0014 1B68     		ldr	r3, [r3]
 7590 0016 7A68     		ldr	r2, [r7, #4]
 7591 0018 1268     		ldr	r2, [r2]
 7592 001a 5268     		ldr	r2, [r2, #4]
 7593 001c 22F0E002 		bic	r2, r2, #224
 7594 0020 5A60     		str	r2, [r3, #4]
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 7595              		.loc 1 3698 0
 7596 0022 0AE0     		b	.L375
 7597              	.L376:
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 7598              		.loc 1 3700 0
 7599 0024 FFF7FEFF 		bl	HAL_GetTick
 7600 0028 0246     		mov	r2, r0
 7601 002a FB68     		ldr	r3, [r7, #12]
 7602 002c D31A     		subs	r3, r2, r3
 7603 002e B3F1FF3F 		cmp	r3, #-1
 7604 0032 02D1     		bne	.L375
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7605              		.loc 1 3702 0
 7606 0034 7B68     		ldr	r3, [r7, #4]
 7607 0036 4022     		movs	r2, #64
 7608 0038 1A66     		str	r2, [r3, #96]
 7609              	.L375:
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 7610              		.loc 1 3698 0
 7611 003a 7B68     		ldr	r3, [r7, #4]
 7612 003c 1B68     		ldr	r3, [r3]
 7613 003e 5B68     		ldr	r3, [r3, #4]
 7614 0040 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/ccVrlOhd.s 			page 198


 7615 0044 002B     		cmp	r3, #0
 7616 0046 EDD1     		bne	.L376
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 7617              		.loc 1 3706 0
 7618 0048 FFF7FEFF 		bl	HAL_GetTick
 7619 004c 0346     		mov	r3, r0
 7620 004e 1A46     		mov	r2, r3
 7621 0050 6421     		movs	r1, #100
 7622 0052 7868     		ldr	r0, [r7, #4]
 7623 0054 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7624 0058 0346     		mov	r3, r0
 7625 005a 002B     		cmp	r3, #0
 7626 005c 02D0     		beq	.L377
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7627              		.loc 1 3708 0
 7628 005e 7B68     		ldr	r3, [r7, #4]
 7629 0060 4022     		movs	r2, #64
 7630 0062 1A66     		str	r2, [r3, #96]
 7631              	.L377:
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7632              		.loc 1 3712 0
 7633 0064 7B68     		ldr	r3, [r7, #4]
 7634 0066 1B68     		ldr	r3, [r3]
 7635 0068 7A68     		ldr	r2, [r7, #4]
 7636 006a 1268     		ldr	r2, [r2]
 7637 006c 1268     		ldr	r2, [r2]
 7638 006e 22F04002 		bic	r2, r2, #64
 7639 0072 1A60     		str	r2, [r3]
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 7640              		.loc 1 3715 0
 7641 0074 FFF7FEFF 		bl	HAL_GetTick
 7642 0078 0346     		mov	r3, r0
 7643 007a 0093     		str	r3, [sp]
 7644 007c 6423     		movs	r3, #100
 7645 007e 0022     		movs	r2, #0
 7646 0080 4FF4C061 		mov	r1, #1536
 7647 0084 7868     		ldr	r0, [r7, #4]
 7648 0086 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7649 008a 0346     		mov	r3, r0
 7650 008c 002B     		cmp	r3, #0
 7651 008e 02D0     		beq	.L378
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7652              		.loc 1 3717 0
 7653 0090 7B68     		ldr	r3, [r7, #4]
 7654 0092 4022     		movs	r2, #64
 7655 0094 1A66     		str	r2, [r3, #96]
 7656              	.L378:
ARM GAS  /tmp/ccVrlOhd.s 			page 199


3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7657              		.loc 1 3720 0
 7658 0096 7B68     		ldr	r3, [r7, #4]
 7659 0098 0722     		movs	r2, #7
 7660 009a 83F85D20 		strb	r2, [r3, #93]
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7661              		.loc 1 3721 0
 7662 009e 00BF     		nop
 7663 00a0 1037     		adds	r7, r7, #16
 7664              	.LCFI294:
 7665              		.cfi_def_cfa_offset 8
 7666 00a2 BD46     		mov	sp, r7
 7667              	.LCFI295:
 7668              		.cfi_def_cfa_register 13
 7669              		@ sp needed
 7670 00a4 80BD     		pop	{r7, pc}
 7671              		.cfi_endproc
 7672              	.LFE191:
 7674              		.text
 7675              	.Letext0:
 7676              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 7677              		.file 3 "/usr/include/newlib/sys/lock.h"
 7678              		.file 4 "/usr/include/newlib/sys/_types.h"
 7679              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 7680              		.file 6 "/usr/include/newlib/sys/reent.h"
 7681              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 7682              		.file 8 "Drivers/CMSIS/Include/core_cm7.h"
 7683              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 7684              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 7685              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 7686              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 7687              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 7688              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
ARM GAS  /tmp/ccVrlOhd.s 			page 200


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_spi.c
     /tmp/ccVrlOhd.s:18     .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccVrlOhd.s:25     .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccVrlOhd.s:296    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccVrlOhd.s:212    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccVrlOhd.s:219    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccVrlOhd.s:339    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccVrlOhd.s:289    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccVrlOhd.s:332    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccVrlOhd.s:375    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccVrlOhd.s:382    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccVrlOhd.s:7043   .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccVrlOhd.s:738    .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccVrlOhd.s:745    .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccVrlOhd.s:1116   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccVrlOhd.s:6917   .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccVrlOhd.s:1109   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccVrlOhd.s:1712   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccVrlOhd.s:1719   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccVrlOhd.s:1897   .text.HAL_SPI_Transmit_IT:0000000000000100 $d
     /tmp/ccVrlOhd.s:6550   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccVrlOhd.s:6483   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccVrlOhd.s:1903   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccVrlOhd.s:1910   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccVrlOhd.s:2136   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccVrlOhd.s:2123   .text.HAL_SPI_Receive_IT:0000000000000144 $d
     /tmp/ccVrlOhd.s:6413   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccVrlOhd.s:6345   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccVrlOhd.s:2129   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccVrlOhd.s:2372   .text.HAL_SPI_TransmitReceive_IT:000000000000015c $d
     /tmp/ccVrlOhd.s:6178   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccVrlOhd.s:6262   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccVrlOhd.s:5940   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccVrlOhd.s:6067   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccVrlOhd.s:2380   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccVrlOhd.s:2387   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccVrlOhd.s:2655   .text.HAL_SPI_Transmit_DMA:00000000000001ac $d
     /tmp/ccVrlOhd.s:5367   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccVrlOhd.s:5021   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccVrlOhd.s:5502   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccVrlOhd.s:2662   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccVrlOhd.s:2669   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccVrlOhd.s:2956   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccVrlOhd.s:2942   .text.HAL_SPI_Receive_DMA:00000000000001b4 $d
     /tmp/ccVrlOhd.s:5412   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccVrlOhd.s:5149   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccVrlOhd.s:2949   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccVrlOhd.s:3383   .text.HAL_SPI_TransmitReceive_DMA:00000000000002cc $d
     /tmp/ccVrlOhd.s:5457   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccVrlOhd.s:5255   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccVrlOhd.s:3392   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccVrlOhd.s:3399   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccVrlOhd.s:6759   .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
     /tmp/ccVrlOhd.s:6619   .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccVrlOhd.s:3704   .text.HAL_SPI_Abort:00000000000001f4 $d
     /tmp/ccVrlOhd.s:7563   .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
ARM GAS  /tmp/ccVrlOhd.s 			page 201


     /tmp/ccVrlOhd.s:7443   .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccVrlOhd.s:3710   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccVrlOhd.s:3717   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccVrlOhd.s:4886   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccVrlOhd.s:4066   .text.HAL_SPI_Abort_IT:0000000000000214 $d
     /tmp/ccVrlOhd.s:5618   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccVrlOhd.s:5778   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccVrlOhd.s:4074   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccVrlOhd.s:4081   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccVrlOhd.s:4145   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccVrlOhd.s:4152   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccVrlOhd.s:4216   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccVrlOhd.s:4223   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccVrlOhd.s:4291   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccVrlOhd.s:4298   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccVrlOhd.s:4843   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccVrlOhd.s:4573   .text.HAL_SPI_IRQHandler:00000000000001ac $d
     /tmp/ccVrlOhd.s:5565   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccVrlOhd.s:4578   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4585   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccVrlOhd.s:4621   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4628   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccVrlOhd.s:4664   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4671   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccVrlOhd.s:4707   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4714   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccVrlOhd.s:4750   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4757   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccVrlOhd.s:4793   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4800   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccVrlOhd.s:4836   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4879   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:4922   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccVrlOhd.s:4929   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccVrlOhd.s:4969   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccVrlOhd.s:4976   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
     /tmp/ccVrlOhd.s:5015   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccVrlOhd.s:5143   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccVrlOhd.s:5249   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccVrlOhd.s:5361   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccVrlOhd.s:5406   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccVrlOhd.s:5451   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccVrlOhd.s:5496   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccVrlOhd.s:5559   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccVrlOhd.s:5612   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:5772   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccVrlOhd.s:5934   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:7149   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccVrlOhd.s:6061   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:6172   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:6256   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:6339   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:7255   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccVrlOhd.s:6407   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:6477   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccVrlOhd.s:7337   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccVrlOhd.s:6544   .text.SPI_TxISR_16BIT:0000000000000000 $t
ARM GAS  /tmp/ccVrlOhd.s 			page 202


     /tmp/ccVrlOhd.s:6613   .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccVrlOhd.s:6753   .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/ccVrlOhd.s:6911   .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccVrlOhd.s:7037   .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccVrlOhd.s:7143   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccVrlOhd.s:7249   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccVrlOhd.s:7331   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccVrlOhd.s:7437   .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccVrlOhd.s:7557   .text.SPI_AbortTx_ISR:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
