ARM GAS  /tmp/ccKAjscX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_rtc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RTCEx_SetTimeStamp
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RTCEx_SetTimeStamp:
  26              	.LFB136:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @file    stm32f7xx_hal_rtc_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extension peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions 
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + Extension Control functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + Extension RTC features functions    
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   @verbatim
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ==============================================================================
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..] 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ================================
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..] 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTC_SetWakeUpTimer()
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer in interrupt mode 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         using the HAL_RTC_SetWakeUpTimer_IT() function.
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTC_GetWakeUpTimer() 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
ARM GAS  /tmp/ccKAjscX.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===============================
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enables the RTC TimeStamp using the HAL_RTC_SetTimeStamp() function.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         HAL_RTC_SetTimeStamp_IT() function.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===============================
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enables the RTC internal TimeStamp using the HAL_RTC_SetInternalTimeStamp() function.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ============================
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and Configure the Tamper filter count, trigger Edge 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level) 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTC_SetTamper() function. You can configure RTC Tamper
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTC_SetTamper_IT() function.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===========================================
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTC_BKUPWrite()
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.  
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTC_BKUPRead()
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****      
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    @endverbatim
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @attention
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * are permitted provided that the following conditions are met:
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      and/or other materials provided with the distribution.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      may be used to endorse or promote products derived from this software
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      without specific prior written permission.
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccKAjscX.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */ 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #include "stm32f7xx_hal.h"
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx RTCEx 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private functions ---------------------------------------------------------*/
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions RTCEx Exported Functions
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group1 RTC TimeStamp and Tamper functions
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets TimeStamp.
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature. 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         activated.
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccKAjscX.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC13: PC13 is selected as RTC TimeStamp Pin.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PI8: PI8 is selected as RTC TimeStamp Pin.  
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC1: PC1 is selected as RTC TimeStamp Pin.   
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
  28              		.loc 1 158 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
  46              		.loc 1 159 0
  47 000c 0023     		movs	r3, #0
  48 000e 7B61     		str	r3, [r7, #20]
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  49              		.loc 1 166 0
  50 0010 FB68     		ldr	r3, [r7, #12]
  51 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
  52 0014 012B     		cmp	r3, #1
  53 0016 01D1     		bne	.L2
  54              		.loc 1 166 0 is_stmt 0 discriminator 1
  55 0018 0223     		movs	r3, #2
  56 001a 3EE0     		b	.L3
  57              	.L2:
  58              		.loc 1 166 0 discriminator 2
  59 001c FB68     		ldr	r3, [r7, #12]
  60 001e 0122     		movs	r2, #1
  61 0020 1A77     		strb	r2, [r3, #28]
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccKAjscX.s 			page 5


  62              		.loc 1 168 0 is_stmt 1 discriminator 2
  63 0022 FB68     		ldr	r3, [r7, #12]
  64 0024 0222     		movs	r2, #2
  65 0026 5A77     		strb	r2, [r3, #29]
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  66              		.loc 1 171 0 discriminator 2
  67 0028 FB68     		ldr	r3, [r7, #12]
  68 002a 1B68     		ldr	r3, [r3]
  69 002c 9A68     		ldr	r2, [r3, #8]
  70 002e 1E4B     		ldr	r3, .L4
  71 0030 1340     		ands	r3, r3, r2
  72 0032 7B61     		str	r3, [r7, #20]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  73              		.loc 1 173 0 discriminator 2
  74 0034 7A69     		ldr	r2, [r7, #20]
  75 0036 BB68     		ldr	r3, [r7, #8]
  76 0038 1343     		orrs	r3, r3, r2
  77 003a 7B61     		str	r3, [r7, #20]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  78              		.loc 1 176 0 discriminator 2
  79 003c FB68     		ldr	r3, [r7, #12]
  80 003e 1B68     		ldr	r3, [r3]
  81 0040 CA22     		movs	r2, #202
  82 0042 5A62     		str	r2, [r3, #36]
  83 0044 FB68     		ldr	r3, [r7, #12]
  84 0046 1B68     		ldr	r3, [r3]
  85 0048 5322     		movs	r2, #83
  86 004a 5A62     		str	r2, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR &= (uint32_t)~RTC_OR_TSINSEL;
  87              		.loc 1 178 0 discriminator 2
  88 004c FB68     		ldr	r3, [r7, #12]
  89 004e 1B68     		ldr	r3, [r3]
  90 0050 FA68     		ldr	r2, [r7, #12]
  91 0052 1268     		ldr	r2, [r2]
  92 0054 D26C     		ldr	r2, [r2, #76]
  93 0056 22F00602 		bic	r2, r2, #6
  94 005a DA64     		str	r2, [r3, #76]
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR |= (uint32_t)(RTC_TimeStampPin); 
  95              		.loc 1 179 0 discriminator 2
  96 005c FB68     		ldr	r3, [r7, #12]
  97 005e 1B68     		ldr	r3, [r3]
  98 0060 FA68     		ldr	r2, [r7, #12]
  99 0062 1268     		ldr	r2, [r2]
 100 0064 D16C     		ldr	r1, [r2, #76]
 101 0066 7A68     		ldr	r2, [r7, #4]
 102 0068 0A43     		orrs	r2, r2, r1
 103 006a DA64     		str	r2, [r3, #76]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 104              		.loc 1 182 0 discriminator 2
ARM GAS  /tmp/ccKAjscX.s 			page 6


 105 006c FB68     		ldr	r3, [r7, #12]
 106 006e 1B68     		ldr	r3, [r3]
 107 0070 7A69     		ldr	r2, [r7, #20]
 108 0072 9A60     		str	r2, [r3, #8]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 109              		.loc 1 184 0 discriminator 2
 110 0074 FB68     		ldr	r3, [r7, #12]
 111 0076 1B68     		ldr	r3, [r3]
 112 0078 FA68     		ldr	r2, [r7, #12]
 113 007a 1268     		ldr	r2, [r2]
 114 007c 9268     		ldr	r2, [r2, #8]
 115 007e 42F40062 		orr	r2, r2, #2048
 116 0082 9A60     		str	r2, [r3, #8]
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);    
 117              		.loc 1 187 0 discriminator 2
 118 0084 FB68     		ldr	r3, [r7, #12]
 119 0086 1B68     		ldr	r3, [r3]
 120 0088 FF22     		movs	r2, #255
 121 008a 5A62     		str	r2, [r3, #36]
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 122              		.loc 1 190 0 discriminator 2
 123 008c FB68     		ldr	r3, [r7, #12]
 124 008e 0122     		movs	r2, #1
 125 0090 5A77     		strb	r2, [r3, #29]
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 126              		.loc 1 193 0 discriminator 2
 127 0092 FB68     		ldr	r3, [r7, #12]
 128 0094 0022     		movs	r2, #0
 129 0096 1A77     		strb	r2, [r3, #28]
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 130              		.loc 1 195 0 discriminator 2
 131 0098 0023     		movs	r3, #0
 132              	.L3:
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 133              		.loc 1 196 0
 134 009a 1846     		mov	r0, r3
 135 009c 1C37     		adds	r7, r7, #28
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 4
 138 009e BD46     		mov	sp, r7
 139              	.LCFI4:
 140              		.cfi_def_cfa_register 13
 141              		@ sp needed
 142 00a0 5DF8047B 		ldr	r7, [sp], #4
 143              	.LCFI5:
 144              		.cfi_restore 7
 145              		.cfi_def_cfa_offset 0
 146 00a4 7047     		bx	lr
 147              	.L5:
ARM GAS  /tmp/ccKAjscX.s 			page 7


 148 00a6 00BF     		.align	2
 149              	.L4:
 150 00a8 F7F7FFFF 		.word	-2057
 151              		.cfi_endproc
 152              	.LFE136:
 154              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 155              		.align	1
 156              		.global	HAL_RTCEx_SetTimeStamp_IT
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	HAL_RTCEx_SetTimeStamp_IT:
 163              	.LFB137:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets TimeStamp with Interrupt. 
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         activated.
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC13: PC13 is selected as RTC TimeStamp Pin.
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PI8: PI8 is selected as RTC TimeStamp Pin.  
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC1: PC1 is selected as RTC TimeStamp Pin.   
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 164              		.loc 1 218 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 24
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 80B4     		push	{r7}
 170              	.LCFI6:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0002 87B0     		sub	sp, sp, #28
 174              	.LCFI7:
 175              		.cfi_def_cfa_offset 32
 176 0004 00AF     		add	r7, sp, #0
 177              	.LCFI8:
 178              		.cfi_def_cfa_register 7
 179 0006 F860     		str	r0, [r7, #12]
 180 0008 B960     		str	r1, [r7, #8]
 181 000a 7A60     		str	r2, [r7, #4]
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 182              		.loc 1 219 0
 183 000c 0023     		movs	r3, #0
ARM GAS  /tmp/ccKAjscX.s 			page 8


 184 000e 7B61     		str	r3, [r7, #20]
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 185              		.loc 1 226 0
 186 0010 FB68     		ldr	r3, [r7, #12]
 187 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 188 0014 012B     		cmp	r3, #1
 189 0016 01D1     		bne	.L7
 190              		.loc 1 226 0 is_stmt 0 discriminator 1
 191 0018 0223     		movs	r3, #2
 192 001a 5BE0     		b	.L8
 193              	.L7:
 194              		.loc 1 226 0 discriminator 2
 195 001c FB68     		ldr	r3, [r7, #12]
 196 001e 0122     		movs	r2, #1
 197 0020 1A77     		strb	r2, [r3, #28]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 198              		.loc 1 228 0 is_stmt 1 discriminator 2
 199 0022 FB68     		ldr	r3, [r7, #12]
 200 0024 0222     		movs	r2, #2
 201 0026 5A77     		strb	r2, [r3, #29]
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 202              		.loc 1 231 0 discriminator 2
 203 0028 FB68     		ldr	r3, [r7, #12]
 204 002a 1B68     		ldr	r3, [r3]
 205 002c 9A68     		ldr	r2, [r3, #8]
 206 002e 2C4B     		ldr	r3, .L9
 207 0030 1340     		ands	r3, r3, r2
 208 0032 7B61     		str	r3, [r7, #20]
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 209              		.loc 1 233 0 discriminator 2
 210 0034 7A69     		ldr	r2, [r7, #20]
 211 0036 BB68     		ldr	r3, [r7, #8]
 212 0038 1343     		orrs	r3, r3, r2
 213 003a 7B61     		str	r3, [r7, #20]
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 214              		.loc 1 236 0 discriminator 2
 215 003c FB68     		ldr	r3, [r7, #12]
 216 003e 1B68     		ldr	r3, [r3]
 217 0040 CA22     		movs	r2, #202
 218 0042 5A62     		str	r2, [r3, #36]
 219 0044 FB68     		ldr	r3, [r7, #12]
 220 0046 1B68     		ldr	r3, [r3]
 221 0048 5322     		movs	r2, #83
 222 004a 5A62     		str	r2, [r3, #36]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
ARM GAS  /tmp/ccKAjscX.s 			page 9


 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 223              		.loc 1 239 0 discriminator 2
 224 004c FB68     		ldr	r3, [r7, #12]
 225 004e 1B68     		ldr	r3, [r3]
 226 0050 7A69     		ldr	r2, [r7, #20]
 227 0052 9A60     		str	r2, [r3, #8]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR &= (uint32_t)~RTC_OR_TSINSEL;
 228              		.loc 1 241 0 discriminator 2
 229 0054 FB68     		ldr	r3, [r7, #12]
 230 0056 1B68     		ldr	r3, [r3]
 231 0058 FA68     		ldr	r2, [r7, #12]
 232 005a 1268     		ldr	r2, [r2]
 233 005c D26C     		ldr	r2, [r2, #76]
 234 005e 22F00602 		bic	r2, r2, #6
 235 0062 DA64     		str	r2, [r3, #76]
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR |= (uint32_t)(RTC_TimeStampPin);
 236              		.loc 1 242 0 discriminator 2
 237 0064 FB68     		ldr	r3, [r7, #12]
 238 0066 1B68     		ldr	r3, [r3]
 239 0068 FA68     		ldr	r2, [r7, #12]
 240 006a 1268     		ldr	r2, [r2]
 241 006c D16C     		ldr	r1, [r2, #76]
 242 006e 7A68     		ldr	r2, [r7, #4]
 243 0070 0A43     		orrs	r2, r2, r1
 244 0072 DA64     		str	r2, [r3, #76]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear RTC Timestamp flag */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 245              		.loc 1 245 0 discriminator 2
 246 0074 FB68     		ldr	r3, [r7, #12]
 247 0076 1B68     		ldr	r3, [r3]
 248 0078 FA68     		ldr	r2, [r7, #12]
 249 007a 1268     		ldr	r2, [r2]
 250 007c D268     		ldr	r2, [r2, #12]
 251 007e D2B2     		uxtb	r2, r2
 252 0080 62F40862 		orn	r2, r2, #2176
 253 0084 DA60     		str	r2, [r3, #12]
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 254              		.loc 1 247 0 discriminator 2
 255 0086 FB68     		ldr	r3, [r7, #12]
 256 0088 1B68     		ldr	r3, [r3]
 257 008a FA68     		ldr	r2, [r7, #12]
 258 008c 1268     		ldr	r2, [r2]
 259 008e 9268     		ldr	r2, [r2, #8]
 260 0090 42F40062 		orr	r2, r2, #2048
 261 0094 9A60     		str	r2, [r3, #8]
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */ 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 262              		.loc 1 250 0 discriminator 2
 263 0096 FB68     		ldr	r3, [r7, #12]
 264 0098 1B68     		ldr	r3, [r3]
 265 009a FA68     		ldr	r2, [r7, #12]
 266 009c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccKAjscX.s 			page 10


 267 009e 9268     		ldr	r2, [r2, #8]
 268 00a0 42F40042 		orr	r2, r2, #32768
 269 00a4 9A60     		str	r2, [r3, #8]
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 270              		.loc 1 253 0 discriminator 2
 271 00a6 0F4A     		ldr	r2, .L9+4
 272 00a8 0E4B     		ldr	r3, .L9+4
 273 00aa 1B68     		ldr	r3, [r3]
 274 00ac 43F40013 		orr	r3, r3, #2097152
 275 00b0 1360     		str	r3, [r2]
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT;
 276              		.loc 1 255 0 discriminator 2
 277 00b2 0C4A     		ldr	r2, .L9+4
 278 00b4 0B4B     		ldr	r3, .L9+4
 279 00b6 9B68     		ldr	r3, [r3, #8]
 280 00b8 43F40013 		orr	r3, r3, #2097152
 281 00bc 9360     		str	r3, [r2, #8]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 282              		.loc 1 258 0 discriminator 2
 283 00be FB68     		ldr	r3, [r7, #12]
 284 00c0 1B68     		ldr	r3, [r3]
 285 00c2 FF22     		movs	r2, #255
 286 00c4 5A62     		str	r2, [r3, #36]
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;  
 287              		.loc 1 260 0 discriminator 2
 288 00c6 FB68     		ldr	r3, [r7, #12]
 289 00c8 0122     		movs	r2, #1
 290 00ca 5A77     		strb	r2, [r3, #29]
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 291              		.loc 1 263 0 discriminator 2
 292 00cc FB68     		ldr	r3, [r7, #12]
 293 00ce 0022     		movs	r2, #0
 294 00d0 1A77     		strb	r2, [r3, #28]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 295              		.loc 1 265 0 discriminator 2
 296 00d2 0023     		movs	r3, #0
 297              	.L8:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 298              		.loc 1 266 0
 299 00d4 1846     		mov	r0, r3
 300 00d6 1C37     		adds	r7, r7, #28
 301              	.LCFI9:
 302              		.cfi_def_cfa_offset 4
 303 00d8 BD46     		mov	sp, r7
 304              	.LCFI10:
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 00da 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccKAjscX.s 			page 11


 308              	.LCFI11:
 309              		.cfi_restore 7
 310              		.cfi_def_cfa_offset 0
 311 00de 7047     		bx	lr
 312              	.L10:
 313              		.align	2
 314              	.L9:
 315 00e0 F7F7FFFF 		.word	-2057
 316 00e4 003C0140 		.word	1073822720
 317              		.cfi_endproc
 318              	.LFE137:
 320              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_RTCEx_DeactivateTimeStamp
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	HAL_RTCEx_DeactivateTimeStamp:
 329              	.LFB138:
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates TimeStamp. 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 330              		.loc 1 275 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 16
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI12:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 85B0     		sub	sp, sp, #20
 340              	.LCFI13:
 341              		.cfi_def_cfa_offset 24
 342 0004 00AF     		add	r7, sp, #0
 343              	.LCFI14:
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 346              		.loc 1 276 0
 347 0008 0023     		movs	r3, #0
 348 000a FB60     		str	r3, [r7, #12]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 349              		.loc 1 279 0
 350 000c 7B68     		ldr	r3, [r7, #4]
 351 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 352 0010 012B     		cmp	r3, #1
 353 0012 01D1     		bne	.L12
ARM GAS  /tmp/ccKAjscX.s 			page 12


 354              		.loc 1 279 0 is_stmt 0 discriminator 1
 355 0014 0223     		movs	r3, #2
 356 0016 2AE0     		b	.L13
 357              	.L12:
 358              		.loc 1 279 0 discriminator 2
 359 0018 7B68     		ldr	r3, [r7, #4]
 360 001a 0122     		movs	r2, #1
 361 001c 1A77     		strb	r2, [r3, #28]
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 362              		.loc 1 281 0 is_stmt 1 discriminator 2
 363 001e 7B68     		ldr	r3, [r7, #4]
 364 0020 0222     		movs	r2, #2
 365 0022 5A77     		strb	r2, [r3, #29]
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 366              		.loc 1 284 0 discriminator 2
 367 0024 7B68     		ldr	r3, [r7, #4]
 368 0026 1B68     		ldr	r3, [r3]
 369 0028 CA22     		movs	r2, #202
 370 002a 5A62     		str	r2, [r3, #36]
 371 002c 7B68     		ldr	r3, [r7, #4]
 372 002e 1B68     		ldr	r3, [r3]
 373 0030 5322     		movs	r2, #83
 374 0032 5A62     		str	r2, [r3, #36]
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 375              		.loc 1 287 0 discriminator 2
 376 0034 7B68     		ldr	r3, [r7, #4]
 377 0036 1B68     		ldr	r3, [r3]
 378 0038 7A68     		ldr	r2, [r7, #4]
 379 003a 1268     		ldr	r2, [r2]
 380 003c 9268     		ldr	r2, [r2, #8]
 381 003e 22F40042 		bic	r2, r2, #32768
 382 0042 9A60     		str	r2, [r3, #8]
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 383              		.loc 1 290 0 discriminator 2
 384 0044 7B68     		ldr	r3, [r7, #4]
 385 0046 1B68     		ldr	r3, [r3]
 386 0048 9A68     		ldr	r2, [r3, #8]
 387 004a 0C4B     		ldr	r3, .L14
 388 004c 1340     		ands	r3, r3, r2
 389 004e FB60     		str	r3, [r7, #12]
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 390              		.loc 1 293 0 discriminator 2
 391 0050 7B68     		ldr	r3, [r7, #4]
 392 0052 1B68     		ldr	r3, [r3]
 393 0054 FA68     		ldr	r2, [r7, #12]
 394 0056 9A60     		str	r2, [r3, #8]
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
ARM GAS  /tmp/ccKAjscX.s 			page 13


 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 395              		.loc 1 296 0 discriminator 2
 396 0058 7B68     		ldr	r3, [r7, #4]
 397 005a 1B68     		ldr	r3, [r3]
 398 005c FF22     		movs	r2, #255
 399 005e 5A62     		str	r2, [r3, #36]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;  
 400              		.loc 1 298 0 discriminator 2
 401 0060 7B68     		ldr	r3, [r7, #4]
 402 0062 0122     		movs	r2, #1
 403 0064 5A77     		strb	r2, [r3, #29]
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 404              		.loc 1 301 0 discriminator 2
 405 0066 7B68     		ldr	r3, [r7, #4]
 406 0068 0022     		movs	r2, #0
 407 006a 1A77     		strb	r2, [r3, #28]
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 408              		.loc 1 303 0 discriminator 2
 409 006c 0023     		movs	r3, #0
 410              	.L13:
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 411              		.loc 1 304 0
 412 006e 1846     		mov	r0, r3
 413 0070 1437     		adds	r7, r7, #20
 414              	.LCFI15:
 415              		.cfi_def_cfa_offset 4
 416 0072 BD46     		mov	sp, r7
 417              	.LCFI16:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0074 5DF8047B 		ldr	r7, [sp], #4
 421              	.LCFI17:
 422              		.cfi_restore 7
 423              		.cfi_def_cfa_offset 0
 424 0078 7047     		bx	lr
 425              	.L15:
 426 007a 00BF     		.align	2
 427              	.L14:
 428 007c F7F7FFFF 		.word	-2057
 429              		.cfi_endproc
 430              	.LFE138:
 432              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 433              		.align	1
 434              		.global	HAL_RTCEx_SetInternalTimeStamp
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv4-sp-d16
 440              	HAL_RTCEx_SetInternalTimeStamp:
 441              	.LFB139:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Internal TimeStamp.
ARM GAS  /tmp/ccKAjscX.s 			page 14


 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 442              		.loc 1 314 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447 0000 80B4     		push	{r7}
 448              	.LCFI18:
 449              		.cfi_def_cfa_offset 4
 450              		.cfi_offset 7, -4
 451 0002 83B0     		sub	sp, sp, #12
 452              	.LCFI19:
 453              		.cfi_def_cfa_offset 16
 454 0004 00AF     		add	r7, sp, #0
 455              	.LCFI20:
 456              		.cfi_def_cfa_register 7
 457 0006 7860     		str	r0, [r7, #4]
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 458              		.loc 1 316 0
 459 0008 7B68     		ldr	r3, [r7, #4]
 460 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 461 000c 012B     		cmp	r3, #1
 462 000e 01D1     		bne	.L17
 463              		.loc 1 316 0 is_stmt 0 discriminator 1
 464 0010 0223     		movs	r3, #2
 465 0012 20E0     		b	.L18
 466              	.L17:
 467              		.loc 1 316 0 discriminator 2
 468 0014 7B68     		ldr	r3, [r7, #4]
 469 0016 0122     		movs	r2, #1
 470 0018 1A77     		strb	r2, [r3, #28]
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 471              		.loc 1 318 0 is_stmt 1 discriminator 2
 472 001a 7B68     		ldr	r3, [r7, #4]
 473 001c 0222     		movs	r2, #2
 474 001e 5A77     		strb	r2, [r3, #29]
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 475              		.loc 1 321 0 discriminator 2
 476 0020 7B68     		ldr	r3, [r7, #4]
 477 0022 1B68     		ldr	r3, [r3]
 478 0024 CA22     		movs	r2, #202
 479 0026 5A62     		str	r2, [r3, #36]
 480 0028 7B68     		ldr	r3, [r7, #4]
 481 002a 1B68     		ldr	r3, [r3]
 482 002c 5322     		movs	r2, #83
 483 002e 5A62     		str	r2, [r3, #36]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccKAjscX.s 			page 15


 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 484              		.loc 1 324 0 discriminator 2
 485 0030 7B68     		ldr	r3, [r7, #4]
 486 0032 1B68     		ldr	r3, [r3]
 487 0034 7A68     		ldr	r2, [r7, #4]
 488 0036 1268     		ldr	r2, [r2]
 489 0038 9268     		ldr	r2, [r2, #8]
 490 003a 42F08072 		orr	r2, r2, #16777216
 491 003e 9A60     		str	r2, [r3, #8]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 492              		.loc 1 327 0 discriminator 2
 493 0040 7B68     		ldr	r3, [r7, #4]
 494 0042 1B68     		ldr	r3, [r3]
 495 0044 FF22     		movs	r2, #255
 496 0046 5A62     		str	r2, [r3, #36]
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 497              		.loc 1 330 0 discriminator 2
 498 0048 7B68     		ldr	r3, [r7, #4]
 499 004a 0122     		movs	r2, #1
 500 004c 5A77     		strb	r2, [r3, #29]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 501              		.loc 1 333 0 discriminator 2
 502 004e 7B68     		ldr	r3, [r7, #4]
 503 0050 0022     		movs	r2, #0
 504 0052 1A77     		strb	r2, [r3, #28]
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 505              		.loc 1 335 0 discriminator 2
 506 0054 0023     		movs	r3, #0
 507              	.L18:
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 508              		.loc 1 336 0
 509 0056 1846     		mov	r0, r3
 510 0058 0C37     		adds	r7, r7, #12
 511              	.LCFI21:
 512              		.cfi_def_cfa_offset 4
 513 005a BD46     		mov	sp, r7
 514              	.LCFI22:
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 005c 5DF8047B 		ldr	r7, [sp], #4
 518              	.LCFI23:
 519              		.cfi_restore 7
 520              		.cfi_def_cfa_offset 0
 521 0060 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE139:
 525              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 526              		.align	1
 527              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
ARM GAS  /tmp/ccKAjscX.s 			page 16


 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv4-sp-d16
 533              	HAL_RTCEx_DeactivateInternalTimeStamp:
 534              	.LFB140:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates internal TimeStamp.
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 535              		.loc 1 345 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 8
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              	.LCFI24:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              	.LCFI25:
 546              		.cfi_def_cfa_offset 16
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI26:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 551              		.loc 1 347 0
 552 0008 7B68     		ldr	r3, [r7, #4]
 553 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 554 000c 012B     		cmp	r3, #1
 555 000e 01D1     		bne	.L20
 556              		.loc 1 347 0 is_stmt 0 discriminator 1
 557 0010 0223     		movs	r3, #2
 558 0012 20E0     		b	.L21
 559              	.L20:
 560              		.loc 1 347 0 discriminator 2
 561 0014 7B68     		ldr	r3, [r7, #4]
 562 0016 0122     		movs	r2, #1
 563 0018 1A77     		strb	r2, [r3, #28]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 564              		.loc 1 349 0 is_stmt 1 discriminator 2
 565 001a 7B68     		ldr	r3, [r7, #4]
 566 001c 0222     		movs	r2, #2
 567 001e 5A77     		strb	r2, [r3, #29]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 568              		.loc 1 352 0 discriminator 2
 569 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccKAjscX.s 			page 17


 570 0022 1B68     		ldr	r3, [r3]
 571 0024 CA22     		movs	r2, #202
 572 0026 5A62     		str	r2, [r3, #36]
 573 0028 7B68     		ldr	r3, [r7, #4]
 574 002a 1B68     		ldr	r3, [r3]
 575 002c 5322     		movs	r2, #83
 576 002e 5A62     		str	r2, [r3, #36]
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 577              		.loc 1 355 0 discriminator 2
 578 0030 7B68     		ldr	r3, [r7, #4]
 579 0032 1B68     		ldr	r3, [r3]
 580 0034 7A68     		ldr	r2, [r7, #4]
 581 0036 1268     		ldr	r2, [r2]
 582 0038 9268     		ldr	r2, [r2, #8]
 583 003a 22F08072 		bic	r2, r2, #16777216
 584 003e 9A60     		str	r2, [r3, #8]
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 585              		.loc 1 358 0 discriminator 2
 586 0040 7B68     		ldr	r3, [r7, #4]
 587 0042 1B68     		ldr	r3, [r3]
 588 0044 FF22     		movs	r2, #255
 589 0046 5A62     		str	r2, [r3, #36]
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 590              		.loc 1 360 0 discriminator 2
 591 0048 7B68     		ldr	r3, [r7, #4]
 592 004a 0122     		movs	r2, #1
 593 004c 5A77     		strb	r2, [r3, #29]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 594              		.loc 1 363 0 discriminator 2
 595 004e 7B68     		ldr	r3, [r7, #4]
 596 0050 0022     		movs	r2, #0
 597 0052 1A77     		strb	r2, [r3, #28]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 598              		.loc 1 365 0 discriminator 2
 599 0054 0023     		movs	r3, #0
 600              	.L21:
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 601              		.loc 1 366 0
 602 0056 1846     		mov	r0, r3
 603 0058 0C37     		adds	r7, r7, #12
 604              	.LCFI27:
 605              		.cfi_def_cfa_offset 4
 606 005a BD46     		mov	sp, r7
 607              	.LCFI28:
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 005c 5DF8047B 		ldr	r7, [sp], #4
 611              	.LCFI29:
 612              		.cfi_restore 7
ARM GAS  /tmp/ccKAjscX.s 			page 18


 613              		.cfi_def_cfa_offset 0
 614 0060 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE140:
 618              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 619              		.align	1
 620              		.global	HAL_RTCEx_GetTimeStamp
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
 626              	HAL_RTCEx_GetTimeStamp:
 627              	.LFB141:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Gets the RTC TimeStamp value.
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure  
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             FORMAT_BIN: Binary data format 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             FORMAT_BCD: BCD data format
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 628              		.loc 1 381 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 24
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              	.LCFI30:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 86B0     		sub	sp, sp, #24
 638              	.LCFI31:
 639              		.cfi_def_cfa_offset 32
 640 0004 00AF     		add	r7, sp, #0
 641              	.LCFI32:
 642              		.cfi_def_cfa_register 7
 643 0006 F860     		str	r0, [r7, #12]
 644 0008 B960     		str	r1, [r7, #8]
 645 000a 7A60     		str	r2, [r7, #4]
 646 000c 3B60     		str	r3, [r7]
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmptime = 0U, tmpdate = 0U;
 647              		.loc 1 382 0
 648 000e 0023     		movs	r3, #0
 649 0010 7B61     		str	r3, [r7, #20]
 650 0012 0023     		movs	r3, #0
 651 0014 3B61     		str	r3, [r7, #16]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccKAjscX.s 			page 19


 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 652              		.loc 1 388 0
 653 0016 FB68     		ldr	r3, [r7, #12]
 654 0018 1B68     		ldr	r3, [r3]
 655 001a 1A6B     		ldr	r2, [r3, #48]
 656 001c 464B     		ldr	r3, .L25
 657 001e 1340     		ands	r3, r3, r2
 658 0020 7B61     		str	r3, [r7, #20]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 659              		.loc 1 389 0
 660 0022 FB68     		ldr	r3, [r7, #12]
 661 0024 1B68     		ldr	r3, [r3]
 662 0026 5A6B     		ldr	r2, [r3, #52]
 663 0028 444B     		ldr	r3, .L25+4
 664 002a 1340     		ands	r3, r3, r2
 665 002c 3B61     		str	r3, [r7, #16]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 666              		.loc 1 392 0
 667 002e 7B69     		ldr	r3, [r7, #20]
 668 0030 1B0C     		lsrs	r3, r3, #16
 669 0032 DBB2     		uxtb	r3, r3
 670 0034 03F03F03 		and	r3, r3, #63
 671 0038 DAB2     		uxtb	r2, r3
 672 003a BB68     		ldr	r3, [r7, #8]
 673 003c 1A70     		strb	r2, [r3]
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8U);
 674              		.loc 1 393 0
 675 003e 7B69     		ldr	r3, [r7, #20]
 676 0040 1B0A     		lsrs	r3, r3, #8
 677 0042 DBB2     		uxtb	r3, r3
 678 0044 03F07F03 		and	r3, r3, #127
 679 0048 DAB2     		uxtb	r2, r3
 680 004a BB68     		ldr	r3, [r7, #8]
 681 004c 5A70     		strb	r2, [r3, #1]
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 682              		.loc 1 394 0
 683 004e 7B69     		ldr	r3, [r7, #20]
 684 0050 DBB2     		uxtb	r3, r3
 685 0052 03F07F03 		and	r3, r3, #127
 686 0056 DAB2     		uxtb	r2, r3
 687 0058 BB68     		ldr	r3, [r7, #8]
 688 005a 9A70     		strb	r2, [r3, #2]
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16U);  
 689              		.loc 1 395 0
 690 005c 7B69     		ldr	r3, [r7, #20]
 691 005e 1B0C     		lsrs	r3, r3, #16
 692 0060 DBB2     		uxtb	r3, r3
 693 0062 03F04003 		and	r3, r3, #64
 694 0066 DAB2     		uxtb	r2, r3
 695 0068 BB68     		ldr	r3, [r7, #8]
 696 006a 1A73     		strb	r2, [r3, #12]
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 697              		.loc 1 396 0
 698 006c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccKAjscX.s 			page 20


 699 006e 1B68     		ldr	r3, [r3]
 700 0070 9A6B     		ldr	r2, [r3, #56]
 701 0072 BB68     		ldr	r3, [r7, #8]
 702 0074 5A60     		str	r2, [r3, #4]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0U;
 703              		.loc 1 399 0
 704 0076 7B68     		ldr	r3, [r7, #4]
 705 0078 0022     		movs	r2, #0
 706 007a DA70     		strb	r2, [r3, #3]
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 707              		.loc 1 400 0
 708 007c 3B69     		ldr	r3, [r7, #16]
 709 007e 1B0A     		lsrs	r3, r3, #8
 710 0080 DBB2     		uxtb	r3, r3
 711 0082 03F01F03 		and	r3, r3, #31
 712 0086 DAB2     		uxtb	r2, r3
 713 0088 7B68     		ldr	r3, [r7, #4]
 714 008a 5A70     		strb	r2, [r3, #1]
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 715              		.loc 1 401 0
 716 008c 3B69     		ldr	r3, [r7, #16]
 717 008e DBB2     		uxtb	r3, r3
 718 0090 03F03F03 		and	r3, r3, #63
 719 0094 DAB2     		uxtb	r2, r3
 720 0096 7B68     		ldr	r3, [r7, #4]
 721 0098 9A70     		strb	r2, [r3, #2]
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13U);
 722              		.loc 1 402 0
 723 009a 3B69     		ldr	r3, [r7, #16]
 724 009c 5B0B     		lsrs	r3, r3, #13
 725 009e DBB2     		uxtb	r3, r3
 726 00a0 03F00703 		and	r3, r3, #7
 727 00a4 DAB2     		uxtb	r2, r3
 728 00a6 7B68     		ldr	r3, [r7, #4]
 729 00a8 1A70     		strb	r2, [r3]
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 730              		.loc 1 405 0
 731 00aa 3B68     		ldr	r3, [r7]
 732 00ac 002B     		cmp	r3, #0
 733 00ae 35D1     		bne	.L23
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 734              		.loc 1 408 0
 735 00b0 BB68     		ldr	r3, [r7, #8]
 736 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 00b4 1846     		mov	r0, r3
 738 00b6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 739 00ba 0346     		mov	r3, r0
 740 00bc 1A46     		mov	r2, r3
 741 00be BB68     		ldr	r3, [r7, #8]
 742 00c0 1A70     		strb	r2, [r3]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
ARM GAS  /tmp/ccKAjscX.s 			page 21


 743              		.loc 1 409 0
 744 00c2 BB68     		ldr	r3, [r7, #8]
 745 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 746 00c6 1846     		mov	r0, r3
 747 00c8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 748 00cc 0346     		mov	r3, r0
 749 00ce 1A46     		mov	r2, r3
 750 00d0 BB68     		ldr	r3, [r7, #8]
 751 00d2 5A70     		strb	r2, [r3, #1]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 752              		.loc 1 410 0
 753 00d4 BB68     		ldr	r3, [r7, #8]
 754 00d6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 755 00d8 1846     		mov	r0, r3
 756 00da FFF7FEFF 		bl	RTC_Bcd2ToByte
 757 00de 0346     		mov	r3, r0
 758 00e0 1A46     		mov	r2, r3
 759 00e2 BB68     		ldr	r3, [r7, #8]
 760 00e4 9A70     		strb	r2, [r3, #2]
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 761              		.loc 1 413 0
 762 00e6 7B68     		ldr	r3, [r7, #4]
 763 00e8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 764 00ea 1846     		mov	r0, r3
 765 00ec FFF7FEFF 		bl	RTC_Bcd2ToByte
 766 00f0 0346     		mov	r3, r0
 767 00f2 1A46     		mov	r2, r3
 768 00f4 7B68     		ldr	r3, [r7, #4]
 769 00f6 5A70     		strb	r2, [r3, #1]
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 770              		.loc 1 414 0
 771 00f8 7B68     		ldr	r3, [r7, #4]
 772 00fa 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 773 00fc 1846     		mov	r0, r3
 774 00fe FFF7FEFF 		bl	RTC_Bcd2ToByte
 775 0102 0346     		mov	r3, r0
 776 0104 1A46     		mov	r2, r3
 777 0106 7B68     		ldr	r3, [r7, #4]
 778 0108 9A70     		strb	r2, [r3, #2]
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 779              		.loc 1 415 0
 780 010a 7B68     		ldr	r3, [r7, #4]
 781 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 782 010e 1846     		mov	r0, r3
 783 0110 FFF7FEFF 		bl	RTC_Bcd2ToByte
 784 0114 0346     		mov	r3, r0
 785 0116 1A46     		mov	r2, r3
 786 0118 7B68     		ldr	r3, [r7, #4]
 787 011a 1A70     		strb	r2, [r3]
 788              	.L23:
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flag */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 789              		.loc 1 419 0
ARM GAS  /tmp/ccKAjscX.s 			page 22


 790 011c FB68     		ldr	r3, [r7, #12]
 791 011e 1B68     		ldr	r3, [r3]
 792 0120 FA68     		ldr	r2, [r7, #12]
 793 0122 1268     		ldr	r2, [r2]
 794 0124 D268     		ldr	r2, [r2, #12]
 795 0126 D2B2     		uxtb	r2, r2
 796 0128 62F40862 		orn	r2, r2, #2176
 797 012c DA60     		str	r2, [r3, #12]
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 798              		.loc 1 421 0
 799 012e 0023     		movs	r3, #0
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 800              		.loc 1 422 0
 801 0130 1846     		mov	r0, r3
 802 0132 1837     		adds	r7, r7, #24
 803              	.LCFI33:
 804              		.cfi_def_cfa_offset 8
 805 0134 BD46     		mov	sp, r7
 806              	.LCFI34:
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 0136 80BD     		pop	{r7, pc}
 810              	.L26:
 811              		.align	2
 812              	.L25:
 813 0138 7F7F7F00 		.word	8355711
 814 013c 3FFFFF00 		.word	16777023
 815              		.cfi_endproc
 816              	.LFE141:
 818              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 819              		.align	1
 820              		.global	HAL_RTCEx_SetTamper
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	HAL_RTCEx_SetTamper:
 827              	.LFB142:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Tamper
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers. 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 828              		.loc 1 433 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 16
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              	.LCFI35:
ARM GAS  /tmp/ccKAjscX.s 			page 23


 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 85B0     		sub	sp, sp, #20
 838              	.LCFI36:
 839              		.cfi_def_cfa_offset 24
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI37:
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 844 0008 3960     		str	r1, [r7]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 845              		.loc 1 434 0
 846 000a 0023     		movs	r3, #0
 847 000c FB60     		str	r3, [r7, #12]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));         
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 848              		.loc 1 448 0
 849 000e 7B68     		ldr	r3, [r7, #4]
 850 0010 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 851 0012 012B     		cmp	r3, #1
 852 0014 01D1     		bne	.L28
 853              		.loc 1 448 0 is_stmt 0 discriminator 1
 854 0016 0223     		movs	r3, #2
 855 0018 9EE0     		b	.L29
 856              	.L28:
 857              		.loc 1 448 0 discriminator 2
 858 001a 7B68     		ldr	r3, [r7, #4]
 859 001c 0122     		movs	r2, #1
 860 001e 1A77     		strb	r2, [r3, #28]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 861              		.loc 1 450 0 is_stmt 1 discriminator 2
 862 0020 7B68     		ldr	r3, [r7, #4]
 863 0022 0222     		movs	r2, #2
 864 0024 5A77     		strb	r2, [r3, #29]
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 865              		.loc 1 452 0 discriminator 2
 866 0026 3B68     		ldr	r3, [r7]
 867 0028 9B68     		ldr	r3, [r3, #8]
 868 002a 002B     		cmp	r3, #0
 869 002c 04D0     		beq	.L30
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U); 
 870              		.loc 1 454 0
ARM GAS  /tmp/ccKAjscX.s 			page 24


 871 002e 3B68     		ldr	r3, [r7]
 872 0030 1B68     		ldr	r3, [r3]
 873 0032 5A00     		lsls	r2, r3, #1
 874 0034 3B68     		ldr	r3, [r7]
 875 0036 9A60     		str	r2, [r3, #8]
 876              	.L30:
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 877              		.loc 1 457 0
 878 0038 3B68     		ldr	r3, [r7]
 879 003a DB68     		ldr	r3, [r3, #12]
 880 003c 002B     		cmp	r3, #0
 881 003e 26D0     		beq	.L31
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->NoErase = 0;
 882              		.loc 1 459 0
 883 0040 3B68     		ldr	r3, [r7]
 884 0042 0022     		movs	r2, #0
 885 0044 DA60     		str	r2, [r3, #12]
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 886              		.loc 1 460 0
 887 0046 3B68     		ldr	r3, [r7]
 888 0048 1B68     		ldr	r3, [r3]
 889 004a 03F00103 		and	r3, r3, #1
 890 004e 002B     		cmp	r3, #0
 891 0050 05D0     		beq	.L32
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP1NOERASE;
 892              		.loc 1 462 0
 893 0052 3B68     		ldr	r3, [r7]
 894 0054 DB68     		ldr	r3, [r3, #12]
 895 0056 43F40032 		orr	r2, r3, #131072
 896 005a 3B68     		ldr	r3, [r7]
 897 005c DA60     		str	r2, [r3, #12]
 898              	.L32:
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 899              		.loc 1 464 0
 900 005e 3B68     		ldr	r3, [r7]
 901 0060 1B68     		ldr	r3, [r3]
 902 0062 03F00803 		and	r3, r3, #8
 903 0066 002B     		cmp	r3, #0
 904 0068 05D0     		beq	.L33
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP2NOERASE;
 905              		.loc 1 466 0
 906 006a 3B68     		ldr	r3, [r7]
 907 006c DB68     		ldr	r3, [r3, #12]
 908 006e 43F48012 		orr	r2, r3, #1048576
 909 0072 3B68     		ldr	r3, [r7]
 910 0074 DA60     		str	r2, [r3, #12]
 911              	.L33:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 912              		.loc 1 468 0
 913 0076 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccKAjscX.s 			page 25


 914 0078 1B68     		ldr	r3, [r3]
 915 007a 03F02003 		and	r3, r3, #32
 916 007e 002B     		cmp	r3, #0
 917 0080 05D0     		beq	.L31
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP3NOERASE;
 918              		.loc 1 470 0
 919 0082 3B68     		ldr	r3, [r7]
 920 0084 DB68     		ldr	r3, [r3, #12]
 921 0086 43F40002 		orr	r2, r3, #8388608
 922 008a 3B68     		ldr	r3, [r7]
 923 008c DA60     		str	r2, [r3, #12]
 924              	.L31:
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 925              		.loc 1 474 0
 926 008e 3B68     		ldr	r3, [r7]
 927 0090 1B69     		ldr	r3, [r3, #16]
 928 0092 002B     		cmp	r3, #0
 929 0094 26D0     		beq	.L34
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->MaskFlag = 0;
 930              		.loc 1 476 0
 931 0096 3B68     		ldr	r3, [r7]
 932 0098 0022     		movs	r2, #0
 933 009a 1A61     		str	r2, [r3, #16]
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 934              		.loc 1 477 0
 935 009c 3B68     		ldr	r3, [r7]
 936 009e 1B68     		ldr	r3, [r3]
 937 00a0 03F00103 		and	r3, r3, #1
 938 00a4 002B     		cmp	r3, #0
 939 00a6 05D0     		beq	.L35
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP1MF;
 940              		.loc 1 479 0
 941 00a8 3B68     		ldr	r3, [r7]
 942 00aa 1B69     		ldr	r3, [r3, #16]
 943 00ac 43F48022 		orr	r2, r3, #262144
 944 00b0 3B68     		ldr	r3, [r7]
 945 00b2 1A61     		str	r2, [r3, #16]
 946              	.L35:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 947              		.loc 1 481 0
 948 00b4 3B68     		ldr	r3, [r7]
 949 00b6 1B68     		ldr	r3, [r3]
 950 00b8 03F00803 		and	r3, r3, #8
 951 00bc 002B     		cmp	r3, #0
 952 00be 05D0     		beq	.L36
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP2MF;
 953              		.loc 1 483 0
 954 00c0 3B68     		ldr	r3, [r7]
 955 00c2 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccKAjscX.s 			page 26


 956 00c4 43F40012 		orr	r2, r3, #2097152
 957 00c8 3B68     		ldr	r3, [r7]
 958 00ca 1A61     		str	r2, [r3, #16]
 959              	.L36:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 960              		.loc 1 485 0
 961 00cc 3B68     		ldr	r3, [r7]
 962 00ce 1B68     		ldr	r3, [r3]
 963 00d0 03F02003 		and	r3, r3, #32
 964 00d4 002B     		cmp	r3, #0
 965 00d6 05D0     		beq	.L34
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP3MF;
 966              		.loc 1 487 0
 967 00d8 3B68     		ldr	r3, [r7]
 968 00da 1B69     		ldr	r3, [r3, #16]
 969 00dc 43F08072 		orr	r2, r3, #16777216
 970 00e0 3B68     		ldr	r3, [r7]
 971 00e2 1A61     		str	r2, [r3, #16]
 972              	.L34:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger  | (uint32_t)sTamper->NoErase |\
 973              		.loc 1 491 0
 974 00e4 3B68     		ldr	r3, [r7]
 975 00e6 1A68     		ldr	r2, [r3]
 976 00e8 3B68     		ldr	r3, [r7]
 977 00ea 9B68     		ldr	r3, [r3, #8]
 978 00ec 1A43     		orrs	r2, r2, r3
 979 00ee 3B68     		ldr	r3, [r7]
 980 00f0 DB68     		ldr	r3, [r3, #12]
 981 00f2 1A43     		orrs	r2, r2, r3
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 982              		.loc 1 492 0
 983 00f4 3B68     		ldr	r3, [r7]
 984 00f6 1B69     		ldr	r3, [r3, #16]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 985              		.loc 1 491 0
 986 00f8 1A43     		orrs	r2, r2, r3
 987              		.loc 1 492 0
 988 00fa 3B68     		ldr	r3, [r7]
 989 00fc 5B69     		ldr	r3, [r3, #20]
 990 00fe 1A43     		orrs	r2, r2, r3
 991 0100 3B68     		ldr	r3, [r7]
 992 0102 9B69     		ldr	r3, [r3, #24]
 993 0104 1A43     		orrs	r2, r2, r3
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->PrechargeDuration | (uint32_t)sTamper->TamperPullUp | sTamper->TimeS
 994              		.loc 1 493 0
 995 0106 3B68     		ldr	r3, [r7]
 996 0108 DB69     		ldr	r3, [r3, #28]
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 997              		.loc 1 492 0
 998 010a 1A43     		orrs	r2, r2, r3
 999              		.loc 1 493 0
 1000 010c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccKAjscX.s 			page 27


 1001 010e 1B6A     		ldr	r3, [r3, #32]
 1002 0110 1A43     		orrs	r2, r2, r3
 1003 0112 3B68     		ldr	r3, [r7]
 1004 0114 5B6A     		ldr	r3, [r3, #36]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1005              		.loc 1 491 0
 1006 0116 1343     		orrs	r3, r3, r2
 1007 0118 FB60     		str	r3, [r7, #12]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1
 1008              		.loc 1 495 0
 1009 011a 7B68     		ldr	r3, [r7, #4]
 1010 011c 1A68     		ldr	r2, [r3]
 1011 011e 7B68     		ldr	r3, [r7, #4]
 1012 0120 1B68     		ldr	r3, [r3]
 1013 0122 196C     		ldr	r1, [r3, #64]
 1014 0124 3B68     		ldr	r3, [r7]
 1015 0126 1868     		ldr	r0, [r3]
 1016 0128 3B68     		ldr	r3, [r7]
 1017 012a 1B68     		ldr	r3, [r3]
 1018 012c 5B00     		lsls	r3, r3, #1
 1019 012e 1843     		orrs	r0, r0, r3
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPPUDIS | (uint32_t)RTC_TAMPCR_TAMPIE
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2IE | (uint32_t)RTC_TAMPCR_TAMP3IE 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2NOERASE | (uint32_t)RTC_TAMPCR_TAM
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2MF | (uint32_t)RTC_TAMPCR_TAMP3MF)
 1020              		.loc 1 500 0
 1021 0130 0C4B     		ldr	r3, .L37
 1022 0132 0343     		orrs	r3, r3, r0
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 1023              		.loc 1 495 0
 1024 0134 DB43     		mvns	r3, r3
 1025 0136 0B40     		ands	r3, r3, r1
 1026 0138 1364     		str	r3, [r2, #64]
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR |= tmpreg;      
 1027              		.loc 1 502 0
 1028 013a 7B68     		ldr	r3, [r7, #4]
 1029 013c 1B68     		ldr	r3, [r3]
 1030 013e 7A68     		ldr	r2, [r7, #4]
 1031 0140 1268     		ldr	r2, [r2]
 1032 0142 116C     		ldr	r1, [r2, #64]
 1033 0144 FA68     		ldr	r2, [r7, #12]
 1034 0146 0A43     		orrs	r2, r2, r1
 1035 0148 1A64     		str	r2, [r3, #64]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 1036              		.loc 1 504 0
 1037 014a 7B68     		ldr	r3, [r7, #4]
 1038 014c 0122     		movs	r2, #1
 1039 014e 5A77     		strb	r2, [r3, #29]
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1040              		.loc 1 507 0
 1041 0150 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccKAjscX.s 			page 28


 1042 0152 0022     		movs	r2, #0
 1043 0154 1A77     		strb	r2, [r3, #28]
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1044              		.loc 1 509 0
 1045 0156 0023     		movs	r3, #0
 1046              	.L29:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1047              		.loc 1 510 0
 1048 0158 1846     		mov	r0, r3
 1049 015a 1437     		adds	r7, r7, #20
 1050              	.LCFI38:
 1051              		.cfi_def_cfa_offset 4
 1052 015c BD46     		mov	sp, r7
 1053              	.LCFI39:
 1054              		.cfi_def_cfa_register 13
 1055              		@ sp needed
 1056 015e 5DF8047B 		ldr	r7, [sp], #4
 1057              	.LCFI40:
 1058              		.cfi_restore 7
 1059              		.cfi_def_cfa_offset 0
 1060 0162 7047     		bx	lr
 1061              	.L38:
 1062              		.align	2
 1063              	.L37:
 1064 0164 84FFFF01 		.word	33554308
 1065              		.cfi_endproc
 1066              	.LFE142:
 1068              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 1069              		.align	1
 1070              		.global	HAL_RTCEx_SetTamper_IT
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv4-sp-d16
 1076              	HAL_RTCEx_SetTamper_IT:
 1077              	.LFB143:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Tamper with interrupt.
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1078              		.loc 1 521 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 16
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
 1083 0000 80B4     		push	{r7}
 1084              	.LCFI41:
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
ARM GAS  /tmp/ccKAjscX.s 			page 29


 1087 0002 85B0     		sub	sp, sp, #20
 1088              	.LCFI42:
 1089              		.cfi_def_cfa_offset 24
 1090 0004 00AF     		add	r7, sp, #0
 1091              	.LCFI43:
 1092              		.cfi_def_cfa_register 7
 1093 0006 7860     		str	r0, [r7, #4]
 1094 0008 3960     		str	r1, [r7]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 1095              		.loc 1 522 0
 1096 000a 0023     		movs	r3, #0
 1097 000c FB60     		str	r3, [r7, #12]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));         
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1098              		.loc 1 537 0
 1099 000e 7B68     		ldr	r3, [r7, #4]
 1100 0010 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1101 0012 012B     		cmp	r3, #1
 1102 0014 01D1     		bne	.L40
 1103              		.loc 1 537 0 is_stmt 0 discriminator 1
 1104 0016 0223     		movs	r3, #2
 1105 0018 D2E0     		b	.L41
 1106              	.L40:
 1107              		.loc 1 537 0 discriminator 2
 1108 001a 7B68     		ldr	r3, [r7, #4]
 1109 001c 0122     		movs	r2, #1
 1110 001e 1A77     		strb	r2, [r3, #28]
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1111              		.loc 1 539 0 is_stmt 1 discriminator 2
 1112 0020 7B68     		ldr	r3, [r7, #4]
 1113 0022 0222     		movs	r2, #2
 1114 0024 5A77     		strb	r2, [r3, #29]
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger */
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 1115              		.loc 1 542 0 discriminator 2
 1116 0026 3B68     		ldr	r3, [r7]
 1117 0028 9B68     		ldr	r3, [r3, #8]
 1118 002a 002B     		cmp	r3, #0
 1119 002c 04D0     		beq	.L42
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1); 
 1120              		.loc 1 544 0
ARM GAS  /tmp/ccKAjscX.s 			page 30


 1121 002e 3B68     		ldr	r3, [r7]
 1122 0030 1B68     		ldr	r3, [r3]
 1123 0032 5A00     		lsls	r2, r3, #1
 1124 0034 3B68     		ldr	r3, [r7]
 1125 0036 9A60     		str	r2, [r3, #8]
 1126              	.L42:
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 1127              		.loc 1 547 0
 1128 0038 3B68     		ldr	r3, [r7]
 1129 003a DB68     		ldr	r3, [r3, #12]
 1130 003c 002B     		cmp	r3, #0
 1131 003e 26D0     		beq	.L43
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->NoErase = 0;
 1132              		.loc 1 549 0
 1133 0040 3B68     		ldr	r3, [r7]
 1134 0042 0022     		movs	r2, #0
 1135 0044 DA60     		str	r2, [r3, #12]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0)
 1136              		.loc 1 550 0
 1137 0046 3B68     		ldr	r3, [r7]
 1138 0048 1B68     		ldr	r3, [r3]
 1139 004a 03F00103 		and	r3, r3, #1
 1140 004e 002B     		cmp	r3, #0
 1141 0050 05D0     		beq	.L44
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP1NOERASE;
 1142              		.loc 1 552 0
 1143 0052 3B68     		ldr	r3, [r7]
 1144 0054 DB68     		ldr	r3, [r3, #12]
 1145 0056 43F40032 		orr	r2, r3, #131072
 1146 005a 3B68     		ldr	r3, [r7]
 1147 005c DA60     		str	r2, [r3, #12]
 1148              	.L44:
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0)
 1149              		.loc 1 554 0
 1150 005e 3B68     		ldr	r3, [r7]
 1151 0060 1B68     		ldr	r3, [r3]
 1152 0062 03F00803 		and	r3, r3, #8
 1153 0066 002B     		cmp	r3, #0
 1154 0068 05D0     		beq	.L45
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP2NOERASE;
 1155              		.loc 1 556 0
 1156 006a 3B68     		ldr	r3, [r7]
 1157 006c DB68     		ldr	r3, [r3, #12]
 1158 006e 43F48012 		orr	r2, r3, #1048576
 1159 0072 3B68     		ldr	r3, [r7]
 1160 0074 DA60     		str	r2, [r3, #12]
 1161              	.L45:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0)
 1162              		.loc 1 558 0
 1163 0076 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccKAjscX.s 			page 31


 1164 0078 1B68     		ldr	r3, [r3]
 1165 007a 03F02003 		and	r3, r3, #32
 1166 007e 002B     		cmp	r3, #0
 1167 0080 05D0     		beq	.L43
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP3NOERASE;
 1168              		.loc 1 560 0
 1169 0082 3B68     		ldr	r3, [r7]
 1170 0084 DB68     		ldr	r3, [r3, #12]
 1171 0086 43F40002 		orr	r2, r3, #8388608
 1172 008a 3B68     		ldr	r3, [r7]
 1173 008c DA60     		str	r2, [r3, #12]
 1174              	.L43:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 1175              		.loc 1 564 0
 1176 008e 3B68     		ldr	r3, [r7]
 1177 0090 1B69     		ldr	r3, [r3, #16]
 1178 0092 002B     		cmp	r3, #0
 1179 0094 26D0     		beq	.L46
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->MaskFlag = 0;
 1180              		.loc 1 566 0
 1181 0096 3B68     		ldr	r3, [r7]
 1182 0098 0022     		movs	r2, #0
 1183 009a 1A61     		str	r2, [r3, #16]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0)
 1184              		.loc 1 567 0
 1185 009c 3B68     		ldr	r3, [r7]
 1186 009e 1B68     		ldr	r3, [r3]
 1187 00a0 03F00103 		and	r3, r3, #1
 1188 00a4 002B     		cmp	r3, #0
 1189 00a6 05D0     		beq	.L47
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP1MF;
 1190              		.loc 1 569 0
 1191 00a8 3B68     		ldr	r3, [r7]
 1192 00aa 1B69     		ldr	r3, [r3, #16]
 1193 00ac 43F48022 		orr	r2, r3, #262144
 1194 00b0 3B68     		ldr	r3, [r7]
 1195 00b2 1A61     		str	r2, [r3, #16]
 1196              	.L47:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0)
 1197              		.loc 1 571 0
 1198 00b4 3B68     		ldr	r3, [r7]
 1199 00b6 1B68     		ldr	r3, [r3]
 1200 00b8 03F00803 		and	r3, r3, #8
 1201 00bc 002B     		cmp	r3, #0
 1202 00be 05D0     		beq	.L48
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP2MF;
 1203              		.loc 1 573 0
 1204 00c0 3B68     		ldr	r3, [r7]
 1205 00c2 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccKAjscX.s 			page 32


 1206 00c4 43F40012 		orr	r2, r3, #2097152
 1207 00c8 3B68     		ldr	r3, [r7]
 1208 00ca 1A61     		str	r2, [r3, #16]
 1209              	.L48:
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0)
 1210              		.loc 1 575 0
 1211 00cc 3B68     		ldr	r3, [r7]
 1212 00ce 1B68     		ldr	r3, [r3]
 1213 00d0 03F02003 		and	r3, r3, #32
 1214 00d4 002B     		cmp	r3, #0
 1215 00d6 05D0     		beq	.L46
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP3MF;
 1216              		.loc 1 577 0
 1217 00d8 3B68     		ldr	r3, [r7]
 1218 00da 1B69     		ldr	r3, [r3, #16]
 1219 00dc 43F08072 		orr	r2, r3, #16777216
 1220 00e0 3B68     		ldr	r3, [r7]
 1221 00e2 1A61     		str	r2, [r3, #16]
 1222              	.L46:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Interrupt | (uint32_t)sTamper->Trigger  
 1223              		.loc 1 581 0
 1224 00e4 3B68     		ldr	r3, [r7]
 1225 00e6 1A68     		ldr	r2, [r3]
 1226 00e8 3B68     		ldr	r3, [r7]
 1227 00ea 5B68     		ldr	r3, [r3, #4]
 1228 00ec 1A43     		orrs	r2, r2, r3
 1229 00ee 3B68     		ldr	r3, [r7]
 1230 00f0 9B68     		ldr	r3, [r3, #8]
 1231 00f2 1A43     		orrs	r2, r2, r3
 1232 00f4 3B68     		ldr	r3, [r7]
 1233 00f6 DB68     		ldr	r3, [r3, #12]
 1234 00f8 1A43     		orrs	r2, r2, r3
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1235              		.loc 1 582 0
 1236 00fa 3B68     		ldr	r3, [r7]
 1237 00fc 1B69     		ldr	r3, [r3, #16]
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1238              		.loc 1 581 0
 1239 00fe 1A43     		orrs	r2, r2, r3
 1240              		.loc 1 582 0
 1241 0100 3B68     		ldr	r3, [r7]
 1242 0102 5B69     		ldr	r3, [r3, #20]
 1243 0104 1A43     		orrs	r2, r2, r3
 1244 0106 3B68     		ldr	r3, [r7]
 1245 0108 9B69     		ldr	r3, [r3, #24]
 1246 010a 1A43     		orrs	r2, r2, r3
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->PrechargeDuration | (uint32_t)sTamper->TamperPullUp | sTamper->TimeS
 1247              		.loc 1 583 0
 1248 010c 3B68     		ldr	r3, [r7]
 1249 010e DB69     		ldr	r3, [r3, #28]
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1250              		.loc 1 582 0
ARM GAS  /tmp/ccKAjscX.s 			page 33


 1251 0110 1A43     		orrs	r2, r2, r3
 1252              		.loc 1 583 0
 1253 0112 3B68     		ldr	r3, [r7]
 1254 0114 1B6A     		ldr	r3, [r3, #32]
 1255 0116 1A43     		orrs	r2, r2, r3
 1256 0118 3B68     		ldr	r3, [r7]
 1257 011a 5B6A     		ldr	r3, [r3, #36]
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1258              		.loc 1 581 0
 1259 011c 1343     		orrs	r3, r3, r2
 1260 011e FB60     		str	r3, [r7, #12]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1
 1261              		.loc 1 585 0
 1262 0120 7B68     		ldr	r3, [r7, #4]
 1263 0122 1A68     		ldr	r2, [r3]
 1264 0124 7B68     		ldr	r3, [r7, #4]
 1265 0126 1B68     		ldr	r3, [r3]
 1266 0128 196C     		ldr	r1, [r3, #64]
 1267 012a 3B68     		ldr	r3, [r7]
 1268 012c 1868     		ldr	r0, [r3]
 1269 012e 3B68     		ldr	r3, [r7]
 1270 0130 1B68     		ldr	r3, [r3]
 1271 0132 5B00     		lsls	r3, r3, #1
 1272 0134 1843     		orrs	r0, r0, r3
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPPUDIS | (uint32_t)RTC_TAMPCR_TAMPIE
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2IE | (uint32_t)RTC_TAMPCR_TAMP3IE 
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2NOERASE | (uint32_t)RTC_TAMPCR_TAM
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2MF | (uint32_t)RTC_TAMPCR_TAMP3MF)
 1273              		.loc 1 590 0
 1274 0136 254B     		ldr	r3, .L52
 1275 0138 0343     		orrs	r3, r3, r0
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 1276              		.loc 1 585 0
 1277 013a DB43     		mvns	r3, r3
 1278 013c 0B40     		ands	r3, r3, r1
 1279 013e 1364     		str	r3, [r2, #64]
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR |= tmpreg;
 1280              		.loc 1 592 0
 1281 0140 7B68     		ldr	r3, [r7, #4]
 1282 0142 1B68     		ldr	r3, [r3]
 1283 0144 7A68     		ldr	r2, [r7, #4]
 1284 0146 1268     		ldr	r2, [r2]
 1285 0148 116C     		ldr	r1, [r2, #64]
 1286 014a FA68     		ldr	r2, [r7, #12]
 1287 014c 0A43     		orrs	r2, r2, r1
 1288 014e 1A64     		str	r2, [r3, #64]
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Tamper == RTC_TAMPER_1)
 1289              		.loc 1 594 0
 1290 0150 3B68     		ldr	r3, [r7]
 1291 0152 1B68     		ldr	r3, [r3]
 1292 0154 012B     		cmp	r3, #1
 1293 0156 09D1     		bne	.L49
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/ccKAjscX.s 			page 34


 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 1 flag */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 1294              		.loc 1 597 0
 1295 0158 7B68     		ldr	r3, [r7, #4]
 1296 015a 1B68     		ldr	r3, [r3]
 1297 015c 7A68     		ldr	r2, [r7, #4]
 1298 015e 1268     		ldr	r2, [r2]
 1299 0160 D268     		ldr	r2, [r2, #12]
 1300 0162 D2B2     		uxtb	r2, r2
 1301 0164 62F40252 		orn	r2, r2, #8320
 1302 0168 DA60     		str	r2, [r3, #12]
 1303 016a 16E0     		b	.L50
 1304              	.L49:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else if(sTamper->Tamper == RTC_TAMPER_2)
 1305              		.loc 1 599 0
 1306 016c 3B68     		ldr	r3, [r7]
 1307 016e 1B68     		ldr	r3, [r3]
 1308 0170 082B     		cmp	r3, #8
 1309 0172 09D1     		bne	.L51
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 2 flag */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);    
 1310              		.loc 1 602 0
 1311 0174 7B68     		ldr	r3, [r7, #4]
 1312 0176 1B68     		ldr	r3, [r3]
 1313 0178 7A68     		ldr	r2, [r7, #4]
 1314 017a 1268     		ldr	r2, [r2]
 1315 017c D268     		ldr	r2, [r2, #12]
 1316 017e D2B2     		uxtb	r2, r2
 1317 0180 62F48142 		orn	r2, r2, #16512
 1318 0184 DA60     		str	r2, [r3, #12]
 1319 0186 08E0     		b	.L50
 1320              	.L51:
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 3 flag */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);  
 1321              		.loc 1 607 0
 1322 0188 7B68     		ldr	r3, [r7, #4]
 1323 018a 1A68     		ldr	r2, [r3]
 1324 018c 7B68     		ldr	r3, [r7, #4]
 1325 018e 1B68     		ldr	r3, [r3]
 1326 0190 DB68     		ldr	r3, [r3, #12]
 1327 0192 D9B2     		uxtb	r1, r3
 1328 0194 0E4B     		ldr	r3, .L52+4
 1329 0196 0B43     		orrs	r3, r3, r1
 1330 0198 D360     		str	r3, [r2, #12]
 1331              	.L50:
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 1332              		.loc 1 611 0
 1333 019a 0E4A     		ldr	r2, .L52+8
 1334 019c 0D4B     		ldr	r3, .L52+8
ARM GAS  /tmp/ccKAjscX.s 			page 35


 1335 019e 1B68     		ldr	r3, [r3]
 1336 01a0 43F40013 		orr	r3, r3, #2097152
 1337 01a4 1360     		str	r3, [r2]
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT;
 1338              		.loc 1 613 0
 1339 01a6 0B4A     		ldr	r2, .L52+8
 1340 01a8 0A4B     		ldr	r3, .L52+8
 1341 01aa 9B68     		ldr	r3, [r3, #8]
 1342 01ac 43F40013 		orr	r3, r3, #2097152
 1343 01b0 9360     		str	r3, [r2, #8]
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 1344              		.loc 1 615 0
 1345 01b2 7B68     		ldr	r3, [r7, #4]
 1346 01b4 0122     		movs	r2, #1
 1347 01b6 5A77     		strb	r2, [r3, #29]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1348              		.loc 1 618 0
 1349 01b8 7B68     		ldr	r3, [r7, #4]
 1350 01ba 0022     		movs	r2, #0
 1351 01bc 1A77     		strb	r2, [r3, #28]
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1352              		.loc 1 620 0
 1353 01be 0023     		movs	r3, #0
 1354              	.L41:
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1355              		.loc 1 621 0
 1356 01c0 1846     		mov	r0, r3
 1357 01c2 1437     		adds	r7, r7, #20
 1358              	.LCFI44:
 1359              		.cfi_def_cfa_offset 4
 1360 01c4 BD46     		mov	sp, r7
 1361              	.LCFI45:
 1362              		.cfi_def_cfa_register 13
 1363              		@ sp needed
 1364 01c6 5DF8047B 		ldr	r7, [sp], #4
 1365              	.LCFI46:
 1366              		.cfi_restore 7
 1367              		.cfi_def_cfa_offset 0
 1368 01ca 7047     		bx	lr
 1369              	.L53:
 1370              		.align	2
 1371              	.L52:
 1372 01cc 84FFFF01 		.word	33554308
 1373 01d0 7F7FFFFF 		.word	-32897
 1374 01d4 003C0140 		.word	1073822720
 1375              		.cfi_endproc
 1376              	.LFE143:
 1378              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 1379              		.align	1
 1380              		.global	HAL_RTCEx_DeactivateTamper
 1381              		.syntax unified
 1382              		.thumb
ARM GAS  /tmp/ccKAjscX.s 			page 36


 1383              		.thumb_func
 1384              		.fpu fpv4-sp-d16
 1386              	HAL_RTCEx_DeactivateTamper:
 1387              	.LFB144:
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates Tamper.
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be RTC_Tamper_1 and/or RTC_TAMPER_2.
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1388              		.loc 1 632 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 8
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
 1393 0000 80B4     		push	{r7}
 1394              	.LCFI47:
 1395              		.cfi_def_cfa_offset 4
 1396              		.cfi_offset 7, -4
 1397 0002 83B0     		sub	sp, sp, #12
 1398              	.LCFI48:
 1399              		.cfi_def_cfa_offset 16
 1400 0004 00AF     		add	r7, sp, #0
 1401              	.LCFI49:
 1402              		.cfi_def_cfa_register 7
 1403 0006 7860     		str	r0, [r7, #4]
 1404 0008 3960     		str	r1, [r7]
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper)); 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1405              		.loc 1 636 0
 1406 000a 7B68     		ldr	r3, [r7, #4]
 1407 000c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1408 000e 012B     		cmp	r3, #1
 1409 0010 01D1     		bne	.L55
 1410              		.loc 1 636 0 is_stmt 0 discriminator 1
 1411 0012 0223     		movs	r3, #2
 1412 0014 3CE0     		b	.L56
 1413              	.L55:
 1414              		.loc 1 636 0 discriminator 2
 1415 0016 7B68     		ldr	r3, [r7, #4]
 1416 0018 0122     		movs	r2, #1
 1417 001a 1A77     		strb	r2, [r3, #28]
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1418              		.loc 1 638 0 is_stmt 1 discriminator 2
 1419 001c 7B68     		ldr	r3, [r7, #4]
 1420 001e 0222     		movs	r2, #2
 1421 0020 5A77     		strb	r2, [r3, #29]
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Disable the selected Tamper pin */
ARM GAS  /tmp/ccKAjscX.s 			page 37


 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~Tamper;
 1422              		.loc 1 641 0 discriminator 2
 1423 0022 7B68     		ldr	r3, [r7, #4]
 1424 0024 1B68     		ldr	r3, [r3]
 1425 0026 7A68     		ldr	r2, [r7, #4]
 1426 0028 1268     		ldr	r2, [r2]
 1427 002a 116C     		ldr	r1, [r2, #64]
 1428 002c 3A68     		ldr	r2, [r7]
 1429 002e D243     		mvns	r2, r2
 1430 0030 0A40     		ands	r2, r2, r1
 1431 0032 1A64     		str	r2, [r3, #64]
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0)
 1432              		.loc 1 643 0 discriminator 2
 1433 0034 3B68     		ldr	r3, [r7]
 1434 0036 03F00103 		and	r3, r3, #1
 1435 003a 002B     		cmp	r3, #0
 1436 003c 07D0     		beq	.L57
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper1 interrupt */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1);
 1437              		.loc 1 646 0
 1438 003e 7B68     		ldr	r3, [r7, #4]
 1439 0040 1A68     		ldr	r2, [r3]
 1440 0042 7B68     		ldr	r3, [r7, #4]
 1441 0044 1B68     		ldr	r3, [r3]
 1442 0046 196C     		ldr	r1, [r3, #64]
 1443 0048 144B     		ldr	r3, .L60
 1444 004a 0B40     		ands	r3, r3, r1
 1445 004c 1364     		str	r3, [r2, #64]
 1446              	.L57:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0)
 1447              		.loc 1 648 0
 1448 004e 3B68     		ldr	r3, [r7]
 1449 0050 03F00803 		and	r3, r3, #8
 1450 0054 002B     		cmp	r3, #0
 1451 0056 07D0     		beq	.L58
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2);
 1452              		.loc 1 651 0
 1453 0058 7B68     		ldr	r3, [r7, #4]
 1454 005a 1A68     		ldr	r2, [r3]
 1455 005c 7B68     		ldr	r3, [r7, #4]
 1456 005e 1B68     		ldr	r3, [r3]
 1457 0060 196C     		ldr	r1, [r3, #64]
 1458 0062 0F4B     		ldr	r3, .L60+4
 1459 0064 0B40     		ands	r3, r3, r1
 1460 0066 1364     		str	r3, [r2, #64]
 1461              	.L58:
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0)
 1462              		.loc 1 653 0
 1463 0068 3B68     		ldr	r3, [r7]
 1464 006a 03F02003 		and	r3, r3, #32
 1465 006e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccKAjscX.s 			page 38


 1466 0070 07D0     		beq	.L59
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3);
 1467              		.loc 1 656 0
 1468 0072 7B68     		ldr	r3, [r7, #4]
 1469 0074 1A68     		ldr	r2, [r3]
 1470 0076 7B68     		ldr	r3, [r7, #4]
 1471 0078 1B68     		ldr	r3, [r3]
 1472 007a 196C     		ldr	r1, [r3, #64]
 1473 007c 094B     		ldr	r3, .L60+8
 1474 007e 0B40     		ands	r3, r3, r1
 1475 0080 1364     		str	r3, [r2, #64]
 1476              	.L59:
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 1477              		.loc 1 659 0
 1478 0082 7B68     		ldr	r3, [r7, #4]
 1479 0084 0122     		movs	r2, #1
 1480 0086 5A77     		strb	r2, [r3, #29]
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */  
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1481              		.loc 1 662 0
 1482 0088 7B68     		ldr	r3, [r7, #4]
 1483 008a 0022     		movs	r2, #0
 1484 008c 1A77     		strb	r2, [r3, #28]
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 1485              		.loc 1 664 0
 1486 008e 0023     		movs	r3, #0
 1487              	.L56:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1488              		.loc 1 665 0
 1489 0090 1846     		mov	r0, r3
 1490 0092 0C37     		adds	r7, r7, #12
 1491              	.LCFI50:
 1492              		.cfi_def_cfa_offset 4
 1493 0094 BD46     		mov	sp, r7
 1494              	.LCFI51:
 1495              		.cfi_def_cfa_register 13
 1496              		@ sp needed
 1497 0096 5DF8047B 		ldr	r7, [sp], #4
 1498              	.LCFI52:
 1499              		.cfi_restore 7
 1500              		.cfi_def_cfa_offset 0
 1501 009a 7047     		bx	lr
 1502              	.L61:
 1503              		.align	2
 1504              	.L60:
 1505 009c FBFFFEFF 		.word	-65541
 1506 00a0 FBFFF7FF 		.word	-524293
 1507 00a4 FBFFBFFF 		.word	-4194309
 1508              		.cfi_endproc
 1509              	.LFE144:
 1511              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
ARM GAS  /tmp/ccKAjscX.s 			page 39


 1512              		.align	1
 1513              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1520              	.LFB145:
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles TimeStamp interrupt request.
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 1521              		.loc 1 674 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 8
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525 0000 80B5     		push	{r7, lr}
 1526              	.LCFI53:
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 7, -8
 1529              		.cfi_offset 14, -4
 1530 0002 82B0     		sub	sp, sp, #8
 1531              	.LCFI54:
 1532              		.cfi_def_cfa_offset 16
 1533 0004 00AF     		add	r7, sp, #0
 1534              	.LCFI55:
 1535              		.cfi_def_cfa_register 7
 1536 0006 7860     		str	r0, [r7, #4]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT(hrtc, RTC_IT_TS))
 1537              		.loc 1 675 0
 1538 0008 7B68     		ldr	r3, [r7, #4]
 1539 000a 1B68     		ldr	r3, [r3]
 1540 000c DB68     		ldr	r3, [r3, #12]
 1541 000e 03F40063 		and	r3, r3, #2048
 1542 0012 002B     		cmp	r3, #0
 1543 0014 12D0     		beq	.L63
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the status of the Interrupt */
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((uint32_t)(hrtc->Instance->CR & RTC_IT_TS) != (uint32_t)RESET)
 1544              		.loc 1 678 0
 1545 0016 7B68     		ldr	r3, [r7, #4]
 1546 0018 1B68     		ldr	r3, [r3]
 1547 001a 9B68     		ldr	r3, [r3, #8]
 1548 001c 03F40043 		and	r3, r3, #32768
 1549 0020 002B     		cmp	r3, #0
 1550 0022 0BD0     		beq	.L63
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        /* TIMESTAMP callback */ 
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         HAL_RTCEx_TimeStampEventCallback(hrtc);
 1551              		.loc 1 681 0
 1552 0024 7868     		ldr	r0, [r7, #4]
 1553 0026 FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
ARM GAS  /tmp/ccKAjscX.s 			page 40


 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc,RTC_FLAG_TSF);
 1554              		.loc 1 684 0
 1555 002a 7B68     		ldr	r3, [r7, #4]
 1556 002c 1B68     		ldr	r3, [r3]
 1557 002e 7A68     		ldr	r2, [r7, #4]
 1558 0030 1268     		ldr	r2, [r2]
 1559 0032 D268     		ldr	r2, [r2, #12]
 1560 0034 D2B2     		uxtb	r2, r2
 1561 0036 62F40862 		orn	r2, r2, #2176
 1562 003a DA60     		str	r2, [r3, #12]
 1563              	.L63:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F)== SET)
 1564              		.loc 1 689 0
 1565 003c 7B68     		ldr	r3, [r7, #4]
 1566 003e 1B68     		ldr	r3, [r3]
 1567 0040 DB68     		ldr	r3, [r3, #12]
 1568 0042 03F40053 		and	r3, r3, #8192
 1569 0046 002B     		cmp	r3, #0
 1570 0048 19D0     		beq	.L64
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the TAMPER Interrupt enable bit and pending bit */
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMPIE)) != (uint32_t)RESET) || \
 1571              		.loc 1 692 0
 1572 004a 7B68     		ldr	r3, [r7, #4]
 1573 004c 1B68     		ldr	r3, [r3]
 1574 004e 1B6C     		ldr	r3, [r3, #64]
 1575 0050 03F00403 		and	r3, r3, #4
 1576 0054 002B     		cmp	r3, #0
 1577 0056 06D1     		bne	.L65
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP1IE)) != (uint32_t)RESET))
 1578              		.loc 1 693 0 discriminator 1
 1579 0058 7B68     		ldr	r3, [r7, #4]
 1580 005a 1B68     		ldr	r3, [r3]
 1581 005c 1B6C     		ldr	r3, [r3, #64]
 1582 005e 03F48033 		and	r3, r3, #65536
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP1IE)) != (uint32_t)RESET))
 1583              		.loc 1 692 0 discriminator 1
 1584 0062 002B     		cmp	r3, #0
 1585 0064 0BD0     		beq	.L64
 1586              	.L65:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 1587              		.loc 1 696 0
 1588 0066 7868     		ldr	r0, [r7, #4]
 1589 0068 FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1590              		.loc 1 699 0
 1591 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccKAjscX.s 			page 41


 1592 006e 1B68     		ldr	r3, [r3]
 1593 0070 7A68     		ldr	r2, [r7, #4]
 1594 0072 1268     		ldr	r2, [r2]
 1595 0074 D268     		ldr	r2, [r2, #12]
 1596 0076 D2B2     		uxtb	r2, r2
 1597 0078 62F40252 		orn	r2, r2, #8320
 1598 007c DA60     		str	r2, [r3, #12]
 1599              	.L64:
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F)== SET)
 1600              		.loc 1 704 0
 1601 007e 7B68     		ldr	r3, [r7, #4]
 1602 0080 1B68     		ldr	r3, [r3]
 1603 0082 DB68     		ldr	r3, [r3, #12]
 1604 0084 03F48043 		and	r3, r3, #16384
 1605 0088 002B     		cmp	r3, #0
 1606 008a 19D0     		beq	.L66
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the TAMPER Interrupt enable bit and pending bit */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMPIE)) != (uint32_t)RESET) || \
 1607              		.loc 1 707 0
 1608 008c 7B68     		ldr	r3, [r7, #4]
 1609 008e 1B68     		ldr	r3, [r3]
 1610 0090 1B6C     		ldr	r3, [r3, #64]
 1611 0092 03F00403 		and	r3, r3, #4
 1612 0096 002B     		cmp	r3, #0
 1613 0098 06D1     		bne	.L67
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP2IE)) != (uint32_t)RESET))
 1614              		.loc 1 708 0 discriminator 1
 1615 009a 7B68     		ldr	r3, [r7, #4]
 1616 009c 1B68     		ldr	r3, [r3]
 1617 009e 1B6C     		ldr	r3, [r3, #64]
 1618 00a0 03F40023 		and	r3, r3, #524288
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP2IE)) != (uint32_t)RESET))
 1619              		.loc 1 707 0 discriminator 1
 1620 00a4 002B     		cmp	r3, #0
 1621 00a6 0BD0     		beq	.L66
 1622              	.L67:
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 1623              		.loc 1 711 0
 1624 00a8 7868     		ldr	r0, [r7, #4]
 1625 00aa FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1626              		.loc 1 714 0
 1627 00ae 7B68     		ldr	r3, [r7, #4]
 1628 00b0 1B68     		ldr	r3, [r3]
 1629 00b2 7A68     		ldr	r2, [r7, #4]
 1630 00b4 1268     		ldr	r2, [r2]
 1631 00b6 D268     		ldr	r2, [r2, #12]
 1632 00b8 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccKAjscX.s 			page 42


 1633 00ba 62F48142 		orn	r2, r2, #16512
 1634 00be DA60     		str	r2, [r3, #12]
 1635              	.L66:
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F)== SET)
 1636              		.loc 1 719 0
 1637 00c0 7B68     		ldr	r3, [r7, #4]
 1638 00c2 1B68     		ldr	r3, [r3]
 1639 00c4 DB68     		ldr	r3, [r3, #12]
 1640 00c6 03F40043 		and	r3, r3, #32768
 1641 00ca 002B     		cmp	r3, #0
 1642 00cc 19D0     		beq	.L68
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the TAMPER Interrupt enable bit and pending bit */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMPIE)) != (uint32_t)RESET) || \
 1643              		.loc 1 722 0
 1644 00ce 7B68     		ldr	r3, [r7, #4]
 1645 00d0 1B68     		ldr	r3, [r3]
 1646 00d2 1B6C     		ldr	r3, [r3, #64]
 1647 00d4 03F00403 		and	r3, r3, #4
 1648 00d8 002B     		cmp	r3, #0
 1649 00da 06D1     		bne	.L69
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP3IE)) != (uint32_t)RESET))
 1650              		.loc 1 723 0 discriminator 1
 1651 00dc 7B68     		ldr	r3, [r7, #4]
 1652 00de 1B68     		ldr	r3, [r3]
 1653 00e0 1B6C     		ldr	r3, [r3, #64]
 1654 00e2 03F48003 		and	r3, r3, #4194304
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP3IE)) != (uint32_t)RESET))
 1655              		.loc 1 722 0 discriminator 1
 1656 00e6 002B     		cmp	r3, #0
 1657 00e8 0BD0     		beq	.L68
 1658              	.L69:
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 1659              		.loc 1 726 0
 1660 00ea 7868     		ldr	r0, [r7, #4]
 1661 00ec FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 1662              		.loc 1 729 0
 1663 00f0 7B68     		ldr	r3, [r7, #4]
 1664 00f2 1A68     		ldr	r2, [r3]
 1665 00f4 7B68     		ldr	r3, [r7, #4]
 1666 00f6 1B68     		ldr	r3, [r3]
 1667 00f8 DB68     		ldr	r3, [r3, #12]
 1668 00fa D9B2     		uxtb	r1, r3
 1669 00fc 064B     		ldr	r3, .L70
 1670 00fe 0B43     		orrs	r3, r3, r1
 1671 0100 D360     		str	r3, [r2, #12]
 1672              	.L68:
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccKAjscX.s 			page 43


 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 1673              		.loc 1 734 0
 1674 0102 064B     		ldr	r3, .L70+4
 1675 0104 4FF40012 		mov	r2, #2097152
 1676 0108 5A61     		str	r2, [r3, #20]
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1677              		.loc 1 737 0
 1678 010a 7B68     		ldr	r3, [r7, #4]
 1679 010c 0122     		movs	r2, #1
 1680 010e 5A77     		strb	r2, [r3, #29]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1681              		.loc 1 738 0
 1682 0110 00BF     		nop
 1683 0112 0837     		adds	r7, r7, #8
 1684              	.LCFI56:
 1685              		.cfi_def_cfa_offset 8
 1686 0114 BD46     		mov	sp, r7
 1687              	.LCFI57:
 1688              		.cfi_def_cfa_register 13
 1689              		@ sp needed
 1690 0116 80BD     		pop	{r7, pc}
 1691              	.L71:
 1692              		.align	2
 1693              	.L70:
 1694 0118 7F7FFFFF 		.word	-32897
 1695 011c 003C0140 		.word	1073822720
 1696              		.cfi_endproc
 1697              	.LFE145:
 1699              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1700              		.align	1
 1701              		.weak	HAL_RTCEx_TimeStampEventCallback
 1702              		.syntax unified
 1703              		.thumb
 1704              		.thumb_func
 1705              		.fpu fpv4-sp-d16
 1707              	HAL_RTCEx_TimeStampEventCallback:
 1708              	.LFB146:
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback. 
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1709              		.loc 1 747 0
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 8
 1712              		@ frame_needed = 1, uses_anonymous_args = 0
 1713              		@ link register save eliminated.
 1714 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccKAjscX.s 			page 44


 1715              	.LCFI58:
 1716              		.cfi_def_cfa_offset 4
 1717              		.cfi_offset 7, -4
 1718 0002 83B0     		sub	sp, sp, #12
 1719              	.LCFI59:
 1720              		.cfi_def_cfa_offset 16
 1721 0004 00AF     		add	r7, sp, #0
 1722              	.LCFI60:
 1723              		.cfi_def_cfa_register 7
 1724 0006 7860     		str	r0, [r7, #4]
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_TimeStampEventCallback could be implemented in the user file
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1725              		.loc 1 754 0
 1726 0008 00BF     		nop
 1727 000a 0C37     		adds	r7, r7, #12
 1728              	.LCFI61:
 1729              		.cfi_def_cfa_offset 4
 1730 000c BD46     		mov	sp, r7
 1731              	.LCFI62:
 1732              		.cfi_def_cfa_register 13
 1733              		@ sp needed
 1734 000e 5DF8047B 		ldr	r7, [sp], #4
 1735              	.LCFI63:
 1736              		.cfi_restore 7
 1737              		.cfi_def_cfa_offset 0
 1738 0012 7047     		bx	lr
 1739              		.cfi_endproc
 1740              	.LFE146:
 1742              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1743              		.align	1
 1744              		.weak	HAL_RTCEx_Tamper1EventCallback
 1745              		.syntax unified
 1746              		.thumb
 1747              		.thumb_func
 1748              		.fpu fpv4-sp-d16
 1750              	HAL_RTCEx_Tamper1EventCallback:
 1751              	.LFB147:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback. 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1752              		.loc 1 763 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 8
 1755              		@ frame_needed = 1, uses_anonymous_args = 0
 1756              		@ link register save eliminated.
 1757 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccKAjscX.s 			page 45


 1758              	.LCFI64:
 1759              		.cfi_def_cfa_offset 4
 1760              		.cfi_offset 7, -4
 1761 0002 83B0     		sub	sp, sp, #12
 1762              	.LCFI65:
 1763              		.cfi_def_cfa_offset 16
 1764 0004 00AF     		add	r7, sp, #0
 1765              	.LCFI66:
 1766              		.cfi_def_cfa_register 7
 1767 0006 7860     		str	r0, [r7, #4]
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_Tamper1EventCallback could be implemented in the user file
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1768              		.loc 1 770 0
 1769 0008 00BF     		nop
 1770 000a 0C37     		adds	r7, r7, #12
 1771              	.LCFI67:
 1772              		.cfi_def_cfa_offset 4
 1773 000c BD46     		mov	sp, r7
 1774              	.LCFI68:
 1775              		.cfi_def_cfa_register 13
 1776              		@ sp needed
 1777 000e 5DF8047B 		ldr	r7, [sp], #4
 1778              	.LCFI69:
 1779              		.cfi_restore 7
 1780              		.cfi_def_cfa_offset 0
 1781 0012 7047     		bx	lr
 1782              		.cfi_endproc
 1783              	.LFE147:
 1785              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1786              		.align	1
 1787              		.weak	HAL_RTCEx_Tamper2EventCallback
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1791              		.fpu fpv4-sp-d16
 1793              	HAL_RTCEx_Tamper2EventCallback:
 1794              	.LFB148:
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback. 
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1795              		.loc 1 779 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 8
 1798              		@ frame_needed = 1, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
 1800 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccKAjscX.s 			page 46


 1801              	.LCFI70:
 1802              		.cfi_def_cfa_offset 4
 1803              		.cfi_offset 7, -4
 1804 0002 83B0     		sub	sp, sp, #12
 1805              	.LCFI71:
 1806              		.cfi_def_cfa_offset 16
 1807 0004 00AF     		add	r7, sp, #0
 1808              	.LCFI72:
 1809              		.cfi_def_cfa_register 7
 1810 0006 7860     		str	r0, [r7, #4]
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_Tamper2EventCallback could be implemented in the user file
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1811              		.loc 1 786 0
 1812 0008 00BF     		nop
 1813 000a 0C37     		adds	r7, r7, #12
 1814              	.LCFI73:
 1815              		.cfi_def_cfa_offset 4
 1816 000c BD46     		mov	sp, r7
 1817              	.LCFI74:
 1818              		.cfi_def_cfa_register 13
 1819              		@ sp needed
 1820 000e 5DF8047B 		ldr	r7, [sp], #4
 1821              	.LCFI75:
 1822              		.cfi_restore 7
 1823              		.cfi_def_cfa_offset 0
 1824 0012 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE148:
 1828              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1829              		.align	1
 1830              		.weak	HAL_RTCEx_Tamper3EventCallback
 1831              		.syntax unified
 1832              		.thumb
 1833              		.thumb_func
 1834              		.fpu fpv4-sp-d16
 1836              	HAL_RTCEx_Tamper3EventCallback:
 1837              	.LFB149:
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback. 
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1838              		.loc 1 794 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 8
 1841              		@ frame_needed = 1, uses_anonymous_args = 0
 1842              		@ link register save eliminated.
 1843 0000 80B4     		push	{r7}
 1844              	.LCFI76:
ARM GAS  /tmp/ccKAjscX.s 			page 47


 1845              		.cfi_def_cfa_offset 4
 1846              		.cfi_offset 7, -4
 1847 0002 83B0     		sub	sp, sp, #12
 1848              	.LCFI77:
 1849              		.cfi_def_cfa_offset 16
 1850 0004 00AF     		add	r7, sp, #0
 1851              	.LCFI78:
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1854              		.loc 1 801 0
 1855 0008 00BF     		nop
 1856 000a 0C37     		adds	r7, r7, #12
 1857              	.LCFI79:
 1858              		.cfi_def_cfa_offset 4
 1859 000c BD46     		mov	sp, r7
 1860              	.LCFI80:
 1861              		.cfi_def_cfa_register 13
 1862              		@ sp needed
 1863 000e 5DF8047B 		ldr	r7, [sp], #4
 1864              	.LCFI81:
 1865              		.cfi_restore 7
 1866              		.cfi_def_cfa_offset 0
 1867 0012 7047     		bx	lr
 1868              		.cfi_endproc
 1869              	.LFE149:
 1871              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1872              		.align	1
 1873              		.global	HAL_RTCEx_PollForTimeStampEvent
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu fpv4-sp-d16
 1879              	HAL_RTCEx_PollForTimeStampEvent:
 1880              	.LFB150:
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles TimeStamp polling request.
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** { 
 1881              		.loc 1 811 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 16
 1884              		@ frame_needed = 1, uses_anonymous_args = 0
 1885 0000 80B5     		push	{r7, lr}
 1886              	.LCFI82:
ARM GAS  /tmp/ccKAjscX.s 			page 48


 1887              		.cfi_def_cfa_offset 8
 1888              		.cfi_offset 7, -8
 1889              		.cfi_offset 14, -4
 1890 0002 84B0     		sub	sp, sp, #16
 1891              	.LCFI83:
 1892              		.cfi_def_cfa_offset 24
 1893 0004 00AF     		add	r7, sp, #0
 1894              	.LCFI84:
 1895              		.cfi_def_cfa_register 7
 1896 0006 7860     		str	r0, [r7, #4]
 1897 0008 3960     		str	r1, [r7]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 1898              		.loc 1 812 0
 1899 000a 0023     		movs	r3, #0
 1900 000c FB60     		str	r3, [r7, #12]
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1901              		.loc 1 815 0
 1902 000e FFF7FEFF 		bl	HAL_GetTick
 1903 0012 F860     		str	r0, [r7, #12]
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == RESET)
 1904              		.loc 1 817 0
 1905 0014 13E0     		b	.L77
 1906              	.L80:
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {	        
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1907              		.loc 1 819 0
 1908 0016 3B68     		ldr	r3, [r7]
 1909 0018 B3F1FF3F 		cmp	r3, #-1
 1910 001c 0FD0     		beq	.L77
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1911              		.loc 1 821 0
 1912 001e 3B68     		ldr	r3, [r7]
 1913 0020 002B     		cmp	r3, #0
 1914 0022 07D0     		beq	.L78
 1915              		.loc 1 821 0 is_stmt 0 discriminator 1
 1916 0024 FFF7FEFF 		bl	HAL_GetTick
 1917 0028 0246     		mov	r2, r0
 1918 002a FB68     		ldr	r3, [r7, #12]
 1919 002c D21A     		subs	r2, r2, r3
 1920 002e 3B68     		ldr	r3, [r7]
 1921 0030 9A42     		cmp	r2, r3
 1922 0032 04D9     		bls	.L77
 1923              	.L78:
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1924              		.loc 1 823 0 is_stmt 1
 1925 0034 7B68     		ldr	r3, [r7, #4]
 1926 0036 0322     		movs	r2, #3
 1927 0038 5A77     		strb	r2, [r3, #29]
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1928              		.loc 1 824 0
 1929 003a 0323     		movs	r3, #3
 1930 003c 1FE0     		b	.L79
ARM GAS  /tmp/ccKAjscX.s 			page 49


 1931              	.L77:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {	        
 1932              		.loc 1 817 0
 1933 003e 7B68     		ldr	r3, [r7, #4]
 1934 0040 1B68     		ldr	r3, [r3]
 1935 0042 DB68     		ldr	r3, [r3, #12]
 1936 0044 03F40063 		and	r3, r3, #2048
 1937 0048 002B     		cmp	r3, #0
 1938 004a E4D0     		beq	.L80
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 	
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != RESET)
 1939              		.loc 1 829 0
 1940 004c 7B68     		ldr	r3, [r7, #4]
 1941 004e 1B68     		ldr	r3, [r3]
 1942 0050 DB68     		ldr	r3, [r3, #12]
 1943 0052 03F48053 		and	r3, r3, #4096
 1944 0056 002B     		cmp	r3, #0
 1945 0058 0DD0     		beq	.L81
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear the TIMESTAMP OverRun Flag */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 1946              		.loc 1 832 0
 1947 005a 7B68     		ldr	r3, [r7, #4]
 1948 005c 1B68     		ldr	r3, [r3]
 1949 005e 7A68     		ldr	r2, [r7, #4]
 1950 0060 1268     		ldr	r2, [r2]
 1951 0062 D268     		ldr	r2, [r2, #12]
 1952 0064 D2B2     		uxtb	r2, r2
 1953 0066 62F48452 		orn	r2, r2, #4224
 1954 006a DA60     		str	r2, [r3, #12]
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Change TIMESTAMP state */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR; 
 1955              		.loc 1 835 0
 1956 006c 7B68     		ldr	r3, [r7, #4]
 1957 006e 0422     		movs	r2, #4
 1958 0070 5A77     		strb	r2, [r3, #29]
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR; 
 1959              		.loc 1 837 0
 1960 0072 0123     		movs	r3, #1
 1961 0074 03E0     		b	.L79
 1962              	.L81:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    }
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 	
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 1963              		.loc 1 841 0
 1964 0076 7B68     		ldr	r3, [r7, #4]
 1965 0078 0122     		movs	r2, #1
 1966 007a 5A77     		strb	r2, [r3, #29]
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 1967              		.loc 1 843 0
ARM GAS  /tmp/ccKAjscX.s 			page 50


 1968 007c 0023     		movs	r3, #0
 1969              	.L79:
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1970              		.loc 1 844 0
 1971 007e 1846     		mov	r0, r3
 1972 0080 1037     		adds	r7, r7, #16
 1973              	.LCFI85:
 1974              		.cfi_def_cfa_offset 8
 1975 0082 BD46     		mov	sp, r7
 1976              	.LCFI86:
 1977              		.cfi_def_cfa_register 13
 1978              		@ sp needed
 1979 0084 80BD     		pop	{r7, pc}
 1980              		.cfi_endproc
 1981              	.LFE150:
 1983              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 1984              		.align	1
 1985              		.global	HAL_RTCEx_PollForTamper1Event
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1989              		.fpu fpv4-sp-d16
 1991              	HAL_RTCEx_PollForTamper1Event:
 1992              	.LFB151:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper1 Polling.
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 1993              		.loc 1 854 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 16
 1996              		@ frame_needed = 1, uses_anonymous_args = 0
 1997 0000 80B5     		push	{r7, lr}
 1998              	.LCFI87:
 1999              		.cfi_def_cfa_offset 8
 2000              		.cfi_offset 7, -8
 2001              		.cfi_offset 14, -4
 2002 0002 84B0     		sub	sp, sp, #16
 2003              	.LCFI88:
 2004              		.cfi_def_cfa_offset 24
 2005 0004 00AF     		add	r7, sp, #0
 2006              	.LCFI89:
 2007              		.cfi_def_cfa_register 7
 2008 0006 7860     		str	r0, [r7, #4]
 2009 0008 3960     		str	r1, [r7]
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U; 
 2010              		.loc 1 855 0
 2011 000a 0023     		movs	r3, #0
 2012 000c FB60     		str	r3, [r7, #12]
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
ARM GAS  /tmp/ccKAjscX.s 			page 51


 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2013              		.loc 1 858 0
 2014 000e FFF7FEFF 		bl	HAL_GetTick
 2015 0012 F860     		str	r0, [r7, #12]
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F)== RESET)
 2016              		.loc 1 861 0
 2017 0014 13E0     		b	.L83
 2018              	.L86:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2019              		.loc 1 863 0
 2020 0016 3B68     		ldr	r3, [r7]
 2021 0018 B3F1FF3F 		cmp	r3, #-1
 2022 001c 0FD0     		beq	.L83
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 2023              		.loc 1 865 0
 2024 001e 3B68     		ldr	r3, [r7]
 2025 0020 002B     		cmp	r3, #0
 2026 0022 07D0     		beq	.L84
 2027              		.loc 1 865 0 is_stmt 0 discriminator 1
 2028 0024 FFF7FEFF 		bl	HAL_GetTick
 2029 0028 0246     		mov	r2, r0
 2030 002a FB68     		ldr	r3, [r7, #12]
 2031 002c D21A     		subs	r2, r2, r3
 2032 002e 3B68     		ldr	r3, [r7]
 2033 0030 9A42     		cmp	r2, r3
 2034 0032 04D9     		bls	.L83
 2035              	.L84:
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2036              		.loc 1 867 0 is_stmt 1
 2037 0034 7B68     		ldr	r3, [r7, #4]
 2038 0036 0322     		movs	r2, #3
 2039 0038 5A77     		strb	r2, [r3, #29]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2040              		.loc 1 868 0
 2041 003a 0323     		movs	r3, #3
 2042 003c 13E0     		b	.L85
 2043              	.L83:
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2044              		.loc 1 861 0
 2045 003e 7B68     		ldr	r3, [r7, #4]
 2046 0040 1B68     		ldr	r3, [r3]
 2047 0042 DB68     		ldr	r3, [r3, #12]
 2048 0044 03F40053 		and	r3, r3, #8192
 2049 0048 002B     		cmp	r3, #0
 2050 004a E4D0     		beq	.L86
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 2051              		.loc 1 874 0
ARM GAS  /tmp/ccKAjscX.s 			page 52


 2052 004c 7B68     		ldr	r3, [r7, #4]
 2053 004e 1B68     		ldr	r3, [r3]
 2054 0050 7A68     		ldr	r2, [r7, #4]
 2055 0052 1268     		ldr	r2, [r2]
 2056 0054 D268     		ldr	r2, [r2, #12]
 2057 0056 D2B2     		uxtb	r2, r2
 2058 0058 62F40252 		orn	r2, r2, #8320
 2059 005c DA60     		str	r2, [r3, #12]
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2060              		.loc 1 877 0
 2061 005e 7B68     		ldr	r3, [r7, #4]
 2062 0060 0122     		movs	r2, #1
 2063 0062 5A77     		strb	r2, [r3, #29]
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 2064              		.loc 1 879 0
 2065 0064 0023     		movs	r3, #0
 2066              	.L85:
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2067              		.loc 1 880 0
 2068 0066 1846     		mov	r0, r3
 2069 0068 1037     		adds	r7, r7, #16
 2070              	.LCFI90:
 2071              		.cfi_def_cfa_offset 8
 2072 006a BD46     		mov	sp, r7
 2073              	.LCFI91:
 2074              		.cfi_def_cfa_register 13
 2075              		@ sp needed
 2076 006c 80BD     		pop	{r7, pc}
 2077              		.cfi_endproc
 2078              	.LFE151:
 2080              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 2081              		.align	1
 2082              		.global	HAL_RTCEx_PollForTamper2Event
 2083              		.syntax unified
 2084              		.thumb
 2085              		.thumb_func
 2086              		.fpu fpv4-sp-d16
 2088              	HAL_RTCEx_PollForTamper2Event:
 2089              	.LFB152:
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper2 Polling.
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 2090              		.loc 1 890 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 16
 2093              		@ frame_needed = 1, uses_anonymous_args = 0
 2094 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccKAjscX.s 			page 53


 2095              	.LCFI92:
 2096              		.cfi_def_cfa_offset 8
 2097              		.cfi_offset 7, -8
 2098              		.cfi_offset 14, -4
 2099 0002 84B0     		sub	sp, sp, #16
 2100              	.LCFI93:
 2101              		.cfi_def_cfa_offset 24
 2102 0004 00AF     		add	r7, sp, #0
 2103              	.LCFI94:
 2104              		.cfi_def_cfa_register 7
 2105 0006 7860     		str	r0, [r7, #4]
 2106 0008 3960     		str	r1, [r7]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 2107              		.loc 1 891 0
 2108 000a 0023     		movs	r3, #0
 2109 000c FB60     		str	r3, [r7, #12]
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2110              		.loc 1 894 0
 2111 000e FFF7FEFF 		bl	HAL_GetTick
 2112 0012 F860     		str	r0, [r7, #12]
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == RESET)
 2113              		.loc 1 897 0
 2114 0014 13E0     		b	.L88
 2115              	.L91:
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2116              		.loc 1 899 0
 2117 0016 3B68     		ldr	r3, [r7]
 2118 0018 B3F1FF3F 		cmp	r3, #-1
 2119 001c 0FD0     		beq	.L88
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2120              		.loc 1 901 0
 2121 001e 3B68     		ldr	r3, [r7]
 2122 0020 002B     		cmp	r3, #0
 2123 0022 07D0     		beq	.L89
 2124              		.loc 1 901 0 is_stmt 0 discriminator 1
 2125 0024 FFF7FEFF 		bl	HAL_GetTick
 2126 0028 0246     		mov	r2, r0
 2127 002a FB68     		ldr	r3, [r7, #12]
 2128 002c D21A     		subs	r2, r2, r3
 2129 002e 3B68     		ldr	r3, [r7]
 2130 0030 9A42     		cmp	r2, r3
 2131 0032 04D9     		bls	.L88
 2132              	.L89:
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2133              		.loc 1 903 0 is_stmt 1
 2134 0034 7B68     		ldr	r3, [r7, #4]
 2135 0036 0322     		movs	r2, #3
 2136 0038 5A77     		strb	r2, [r3, #29]
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2137              		.loc 1 904 0
ARM GAS  /tmp/ccKAjscX.s 			page 54


 2138 003a 0323     		movs	r3, #3
 2139 003c 13E0     		b	.L90
 2140              	.L88:
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2141              		.loc 1 897 0
 2142 003e 7B68     		ldr	r3, [r7, #4]
 2143 0040 1B68     		ldr	r3, [r3]
 2144 0042 DB68     		ldr	r3, [r3, #12]
 2145 0044 03F48043 		and	r3, r3, #16384
 2146 0048 002B     		cmp	r3, #0
 2147 004a E4D0     		beq	.L91
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP2F);
 2148              		.loc 1 910 0
 2149 004c 7B68     		ldr	r3, [r7, #4]
 2150 004e 1B68     		ldr	r3, [r3]
 2151 0050 7A68     		ldr	r2, [r7, #4]
 2152 0052 1268     		ldr	r2, [r2]
 2153 0054 D268     		ldr	r2, [r2, #12]
 2154 0056 D2B2     		uxtb	r2, r2
 2155 0058 62F48142 		orn	r2, r2, #16512
 2156 005c DA60     		str	r2, [r3, #12]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2157              		.loc 1 913 0
 2158 005e 7B68     		ldr	r3, [r7, #4]
 2159 0060 0122     		movs	r2, #1
 2160 0062 5A77     		strb	r2, [r3, #29]
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2161              		.loc 1 915 0
 2162 0064 0023     		movs	r3, #0
 2163              	.L90:
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2164              		.loc 1 916 0
 2165 0066 1846     		mov	r0, r3
 2166 0068 1037     		adds	r7, r7, #16
 2167              	.LCFI95:
 2168              		.cfi_def_cfa_offset 8
 2169 006a BD46     		mov	sp, r7
 2170              	.LCFI96:
 2171              		.cfi_def_cfa_register 13
 2172              		@ sp needed
 2173 006c 80BD     		pop	{r7, pc}
 2174              		.cfi_endproc
 2175              	.LFE152:
 2177              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 2178              		.align	1
 2179              		.global	HAL_RTCEx_PollForTamper3Event
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
ARM GAS  /tmp/ccKAjscX.s 			page 55


 2183              		.fpu fpv4-sp-d16
 2185              	HAL_RTCEx_PollForTamper3Event:
 2186              	.LFB153:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper3 Polling.
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2187              		.loc 1 925 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 16
 2190              		@ frame_needed = 1, uses_anonymous_args = 0
 2191 0000 80B5     		push	{r7, lr}
 2192              	.LCFI97:
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 84B0     		sub	sp, sp, #16
 2197              	.LCFI98:
 2198              		.cfi_def_cfa_offset 24
 2199 0004 00AF     		add	r7, sp, #0
 2200              	.LCFI99:
 2201              		.cfi_def_cfa_register 7
 2202 0006 7860     		str	r0, [r7, #4]
 2203 0008 3960     		str	r1, [r7]
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2204              		.loc 1 926 0
 2205 000a FFF7FEFF 		bl	HAL_GetTick
 2206 000e F860     		str	r0, [r7, #12]
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == RESET)
 2207              		.loc 1 929 0
 2208 0010 13E0     		b	.L93
 2209              	.L96:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2210              		.loc 1 931 0
 2211 0012 3B68     		ldr	r3, [r7]
 2212 0014 B3F1FF3F 		cmp	r3, #-1
 2213 0018 0FD0     		beq	.L93
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2214              		.loc 1 933 0
 2215 001a 3B68     		ldr	r3, [r7]
 2216 001c 002B     		cmp	r3, #0
 2217 001e 07D0     		beq	.L94
 2218              		.loc 1 933 0 is_stmt 0 discriminator 1
 2219 0020 FFF7FEFF 		bl	HAL_GetTick
 2220 0024 0246     		mov	r2, r0
 2221 0026 FB68     		ldr	r3, [r7, #12]
 2222 0028 D21A     		subs	r2, r2, r3
 2223 002a 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccKAjscX.s 			page 56


 2224 002c 9A42     		cmp	r2, r3
 2225 002e 04D9     		bls	.L93
 2226              	.L94:
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2227              		.loc 1 935 0 is_stmt 1
 2228 0030 7B68     		ldr	r3, [r7, #4]
 2229 0032 0322     		movs	r2, #3
 2230 0034 5A77     		strb	r2, [r3, #29]
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2231              		.loc 1 936 0
 2232 0036 0323     		movs	r3, #3
 2233 0038 13E0     		b	.L95
 2234              	.L93:
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2235              		.loc 1 929 0
 2236 003a 7B68     		ldr	r3, [r7, #4]
 2237 003c 1B68     		ldr	r3, [r3]
 2238 003e DB68     		ldr	r3, [r3, #12]
 2239 0040 03F40043 		and	r3, r3, #32768
 2240 0044 002B     		cmp	r3, #0
 2241 0046 E4D0     		beq	.L96
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP3F);
 2242              		.loc 1 942 0
 2243 0048 7B68     		ldr	r3, [r7, #4]
 2244 004a 1A68     		ldr	r2, [r3]
 2245 004c 7B68     		ldr	r3, [r7, #4]
 2246 004e 1B68     		ldr	r3, [r3]
 2247 0050 DB68     		ldr	r3, [r3, #12]
 2248 0052 D9B2     		uxtb	r1, r3
 2249 0054 054B     		ldr	r3, .L97
 2250 0056 0B43     		orrs	r3, r3, r1
 2251 0058 D360     		str	r3, [r2, #12]
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2252              		.loc 1 945 0
 2253 005a 7B68     		ldr	r3, [r7, #4]
 2254 005c 0122     		movs	r2, #1
 2255 005e 5A77     		strb	r2, [r3, #29]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2256              		.loc 1 947 0
 2257 0060 0023     		movs	r3, #0
 2258              	.L95:
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2259              		.loc 1 948 0
 2260 0062 1846     		mov	r0, r3
 2261 0064 1037     		adds	r7, r7, #16
 2262              	.LCFI100:
 2263              		.cfi_def_cfa_offset 8
 2264 0066 BD46     		mov	sp, r7
ARM GAS  /tmp/ccKAjscX.s 			page 57


 2265              	.LCFI101:
 2266              		.cfi_def_cfa_register 13
 2267              		@ sp needed
 2268 0068 80BD     		pop	{r7, pc}
 2269              	.L98:
 2270 006a 00BF     		.align	2
 2271              	.L97:
 2272 006c 7F7FFFFF 		.word	-32897
 2273              		.cfi_endproc
 2274              	.LFE153:
 2276              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 2277              		.align	1
 2278              		.global	HAL_RTCEx_SetWakeUpTimer
 2279              		.syntax unified
 2280              		.thumb
 2281              		.thumb_func
 2282              		.fpu fpv4-sp-d16
 2284              	HAL_RTCEx_SetWakeUpTimer:
 2285              	.LFB154:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group2 RTC Wake-up functions
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   RTC Wake-up functions
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets wake up timer. 
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2286              		.loc 1 977 0
 2287              		.cfi_startproc
 2288              		@ args = 0, pretend = 0, frame = 24
 2289              		@ frame_needed = 1, uses_anonymous_args = 0
 2290 0000 80B5     		push	{r7, lr}
 2291              	.LCFI102:
 2292              		.cfi_def_cfa_offset 8
 2293              		.cfi_offset 7, -8
 2294              		.cfi_offset 14, -4
ARM GAS  /tmp/ccKAjscX.s 			page 58


 2295 0002 86B0     		sub	sp, sp, #24
 2296              	.LCFI103:
 2297              		.cfi_def_cfa_offset 32
 2298 0004 00AF     		add	r7, sp, #0
 2299              	.LCFI104:
 2300              		.cfi_def_cfa_register 7
 2301 0006 F860     		str	r0, [r7, #12]
 2302 0008 B960     		str	r1, [r7, #8]
 2303 000a 7A60     		str	r2, [r7, #4]
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 2304              		.loc 1 978 0
 2305 000c 0023     		movs	r3, #0
 2306 000e 7B61     		str	r3, [r7, #20]
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2307              		.loc 1 985 0
 2308 0010 FB68     		ldr	r3, [r7, #12]
 2309 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2310 0014 012B     		cmp	r3, #1
 2311 0016 01D1     		bne	.L100
 2312              		.loc 1 985 0 is_stmt 0 discriminator 1
 2313 0018 0223     		movs	r3, #2
 2314 001a 62E0     		b	.L101
 2315              	.L100:
 2316              		.loc 1 985 0 discriminator 2
 2317 001c FB68     		ldr	r3, [r7, #12]
 2318 001e 0122     		movs	r2, #1
 2319 0020 1A77     		strb	r2, [r3, #28]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2320              		.loc 1 987 0 is_stmt 1 discriminator 2
 2321 0022 FB68     		ldr	r3, [r7, #12]
 2322 0024 0222     		movs	r2, #2
 2323 0026 5A77     		strb	r2, [r3, #29]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2324              		.loc 1 990 0 discriminator 2
 2325 0028 FB68     		ldr	r3, [r7, #12]
 2326 002a 1B68     		ldr	r3, [r3]
 2327 002c CA22     		movs	r2, #202
 2328 002e 5A62     		str	r2, [r3, #36]
 2329 0030 FB68     		ldr	r3, [r7, #12]
 2330 0032 1B68     		ldr	r3, [r3]
 2331 0034 5322     		movs	r2, #83
 2332 0036 5A62     		str	r2, [r3, #36]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2333              		.loc 1 992 0 discriminator 2
 2334 0038 FB68     		ldr	r3, [r7, #12]
 2335 003a 1B68     		ldr	r3, [r3]
 2336 003c FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccKAjscX.s 			page 59


 2337 003e 1268     		ldr	r2, [r2]
 2338 0040 9268     		ldr	r2, [r2, #8]
 2339 0042 22F48062 		bic	r2, r2, #1024
 2340 0046 9A60     		str	r2, [r3, #8]
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2341              		.loc 1 995 0 discriminator 2
 2342 0048 FFF7FEFF 		bl	HAL_GetTick
 2343 004c 7861     		str	r0, [r7, #20]
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET)
 2344              		.loc 1 998 0 discriminator 2
 2345 004e FB68     		ldr	r3, [r7, #12]
 2346 0050 1B68     		ldr	r3, [r3]
 2347 0052 9B68     		ldr	r3, [r3, #8]
 2348 0054 03F48063 		and	r3, r3, #1024
 2349 0058 002B     		cmp	r3, #0
 2350 005a 1BD0     		beq	.L102
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 2351              		.loc 1 1001 0
 2352 005c 13E0     		b	.L103
 2353              	.L104:
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 2354              		.loc 1 1003 0
 2355 005e FFF7FEFF 		bl	HAL_GetTick
 2356 0062 0246     		mov	r2, r0
 2357 0064 7B69     		ldr	r3, [r7, #20]
 2358 0066 D31A     		subs	r3, r2, r3
 2359 0068 B3F57A7F 		cmp	r3, #1000
 2360 006c 0BD9     		bls	.L103
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2361              		.loc 1 1006 0
 2362 006e FB68     		ldr	r3, [r7, #12]
 2363 0070 1B68     		ldr	r3, [r3]
 2364 0072 FF22     		movs	r2, #255
 2365 0074 5A62     		str	r2, [r3, #36]
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 2366              		.loc 1 1008 0
 2367 0076 FB68     		ldr	r3, [r7, #12]
 2368 0078 0322     		movs	r2, #3
 2369 007a 5A77     		strb	r2, [r3, #29]
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */ 
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2370              		.loc 1 1011 0
 2371 007c FB68     		ldr	r3, [r7, #12]
 2372 007e 0022     		movs	r2, #0
 2373 0080 1A77     		strb	r2, [r3, #28]
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
ARM GAS  /tmp/ccKAjscX.s 			page 60


1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2374              		.loc 1 1013 0
 2375 0082 0323     		movs	r3, #3
 2376 0084 2DE0     		b	.L101
 2377              	.L103:
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 2378              		.loc 1 1001 0
 2379 0086 FB68     		ldr	r3, [r7, #12]
 2380 0088 1B68     		ldr	r3, [r3]
 2381 008a DB68     		ldr	r3, [r3, #12]
 2382 008c 03F00403 		and	r3, r3, #4
 2383 0090 002B     		cmp	r3, #0
 2384 0092 E4D0     		beq	.L104
 2385              	.L102:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }  
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 2386              		.loc 1 1019 0
 2387 0094 FB68     		ldr	r3, [r7, #12]
 2388 0096 1B68     		ldr	r3, [r3]
 2389 0098 FA68     		ldr	r2, [r7, #12]
 2390 009a 1268     		ldr	r2, [r2]
 2391 009c 9268     		ldr	r2, [r2, #8]
 2392 009e 22F00702 		bic	r2, r2, #7
 2393 00a2 9A60     		str	r2, [r3, #8]
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 2394              		.loc 1 1022 0
 2395 00a4 FB68     		ldr	r3, [r7, #12]
 2396 00a6 1B68     		ldr	r3, [r3]
 2397 00a8 FA68     		ldr	r2, [r7, #12]
 2398 00aa 1268     		ldr	r2, [r2]
 2399 00ac 9168     		ldr	r1, [r2, #8]
 2400 00ae 7A68     		ldr	r2, [r7, #4]
 2401 00b0 0A43     		orrs	r2, r2, r1
 2402 00b2 9A60     		str	r2, [r3, #8]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2403              		.loc 1 1025 0
 2404 00b4 FB68     		ldr	r3, [r7, #12]
 2405 00b6 1B68     		ldr	r3, [r3]
 2406 00b8 BA68     		ldr	r2, [r7, #8]
 2407 00ba 5A61     		str	r2, [r3, #20]
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);   
 2408              		.loc 1 1028 0
 2409 00bc FB68     		ldr	r3, [r7, #12]
 2410 00be 1B68     		ldr	r3, [r3]
 2411 00c0 FA68     		ldr	r2, [r7, #12]
 2412 00c2 1268     		ldr	r2, [r2]
 2413 00c4 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccKAjscX.s 			page 61


 2414 00c6 42F48062 		orr	r2, r2, #1024
 2415 00ca 9A60     		str	r2, [r3, #8]
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 2416              		.loc 1 1031 0
 2417 00cc FB68     		ldr	r3, [r7, #12]
 2418 00ce 1B68     		ldr	r3, [r3]
 2419 00d0 FF22     		movs	r2, #255
 2420 00d2 5A62     		str	r2, [r3, #36]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 2421              		.loc 1 1033 0
 2422 00d4 FB68     		ldr	r3, [r7, #12]
 2423 00d6 0122     		movs	r2, #1
 2424 00d8 5A77     		strb	r2, [r3, #29]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2425              		.loc 1 1036 0
 2426 00da FB68     		ldr	r3, [r7, #12]
 2427 00dc 0022     		movs	r2, #0
 2428 00de 1A77     		strb	r2, [r3, #28]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2429              		.loc 1 1038 0
 2430 00e0 0023     		movs	r3, #0
 2431              	.L101:
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2432              		.loc 1 1039 0
 2433 00e2 1846     		mov	r0, r3
 2434 00e4 1837     		adds	r7, r7, #24
 2435              	.LCFI105:
 2436              		.cfi_def_cfa_offset 8
 2437 00e6 BD46     		mov	sp, r7
 2438              	.LCFI106:
 2439              		.cfi_def_cfa_register 13
 2440              		@ sp needed
 2441 00e8 80BD     		pop	{r7, pc}
 2442              		.cfi_endproc
 2443              	.LFE154:
 2445              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 2446              		.align	1
 2447              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 2448              		.syntax unified
 2449              		.thumb
 2450              		.thumb_func
 2451              		.fpu fpv4-sp-d16
 2453              	HAL_RTCEx_SetWakeUpTimer_IT:
 2454              	.LFB155:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets wake up timer with interrupt
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
ARM GAS  /tmp/ccKAjscX.s 			page 62


1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2455              		.loc 1 1050 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 24
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459              		@ link register save eliminated.
 2460 0000 80B4     		push	{r7}
 2461              	.LCFI107:
 2462              		.cfi_def_cfa_offset 4
 2463              		.cfi_offset 7, -4
 2464 0002 87B0     		sub	sp, sp, #28
 2465              	.LCFI108:
 2466              		.cfi_def_cfa_offset 32
 2467 0004 00AF     		add	r7, sp, #0
 2468              	.LCFI109:
 2469              		.cfi_def_cfa_register 7
 2470 0006 F860     		str	r0, [r7, #12]
 2471 0008 B960     		str	r1, [r7, #8]
 2472 000a 7A60     		str	r2, [r7, #4]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __IO uint32_t count;
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2473              		.loc 1 1058 0
 2474 000c FB68     		ldr	r3, [r7, #12]
 2475 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2476 0010 012B     		cmp	r3, #1
 2477 0012 01D1     		bne	.L106
 2478              		.loc 1 1058 0 is_stmt 0 discriminator 1
 2479 0014 0223     		movs	r3, #2
 2480 0016 AEE0     		b	.L107
 2481              	.L106:
 2482              		.loc 1 1058 0 discriminator 2
 2483 0018 FB68     		ldr	r3, [r7, #12]
 2484 001a 0122     		movs	r2, #1
 2485 001c 1A77     		strb	r2, [r3, #28]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2486              		.loc 1 1060 0 is_stmt 1 discriminator 2
 2487 001e FB68     		ldr	r3, [r7, #12]
 2488 0020 0222     		movs	r2, #2
 2489 0022 5A77     		strb	r2, [r3, #29]
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2490              		.loc 1 1063 0 discriminator 2
 2491 0024 FB68     		ldr	r3, [r7, #12]
 2492 0026 1B68     		ldr	r3, [r3]
 2493 0028 CA22     		movs	r2, #202
 2494 002a 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccKAjscX.s 			page 63


 2495 002c FB68     		ldr	r3, [r7, #12]
 2496 002e 1B68     		ldr	r3, [r3]
 2497 0030 5322     		movs	r2, #83
 2498 0032 5A62     		str	r2, [r3, #36]
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2499              		.loc 1 1065 0 discriminator 2
 2500 0034 FB68     		ldr	r3, [r7, #12]
 2501 0036 1B68     		ldr	r3, [r3]
 2502 0038 FA68     		ldr	r2, [r7, #12]
 2503 003a 1268     		ldr	r2, [r2]
 2504 003c 9268     		ldr	r2, [r2, #8]
 2505 003e 22F48062 		bic	r2, r2, #1024
 2506 0042 9A60     		str	r2, [r3, #8]
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check RTC WUTWF flag is reset only when wake up timer enabled */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET)
 2507              		.loc 1 1068 0 discriminator 2
 2508 0044 FB68     		ldr	r3, [r7, #12]
 2509 0046 1B68     		ldr	r3, [r3]
 2510 0048 9B68     		ldr	r3, [r3, #8]
 2511 004a 03F48063 		and	r3, r3, #1024
 2512 004e 002B     		cmp	r3, #0
 2513 0050 22D0     		beq	.L108
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U);
 2514              		.loc 1 1071 0
 2515 0052 4C4B     		ldr	r3, .L113
 2516 0054 1B68     		ldr	r3, [r3]
 2517 0056 4C4A     		ldr	r2, .L113+4
 2518 0058 A2FB0323 		umull	r2, r3, r2, r3
 2519 005c DB0A     		lsrs	r3, r3, #11
 2520 005e 4FF47A72 		mov	r2, #1000
 2521 0062 02FB03F3 		mul	r3, r2, r3
 2522 0066 7B61     		str	r3, [r7, #20]
 2523              	.L110:
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     do
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if(count-- == 0U)
 2524              		.loc 1 1074 0
 2525 0068 7B69     		ldr	r3, [r7, #20]
 2526 006a 5A1E     		subs	r2, r3, #1
 2527 006c 7A61     		str	r2, [r7, #20]
 2528 006e 002B     		cmp	r3, #0
 2529 0070 0BD1     		bne	.L109
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2530              		.loc 1 1077 0
 2531 0072 FB68     		ldr	r3, [r7, #12]
 2532 0074 1B68     		ldr	r3, [r3]
 2533 0076 FF22     		movs	r2, #255
 2534 0078 5A62     		str	r2, [r3, #36]
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2535              		.loc 1 1079 0
ARM GAS  /tmp/ccKAjscX.s 			page 64


 2536 007a FB68     		ldr	r3, [r7, #12]
 2537 007c 0322     		movs	r2, #3
 2538 007e 5A77     		strb	r2, [r3, #29]
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2539              		.loc 1 1082 0
 2540 0080 FB68     		ldr	r3, [r7, #12]
 2541 0082 0022     		movs	r2, #0
 2542 0084 1A77     		strb	r2, [r3, #28]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2543              		.loc 1 1084 0
 2544 0086 0323     		movs	r3, #3
 2545 0088 75E0     		b	.L107
 2546              	.L109:
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET);
 2547              		.loc 1 1087 0
 2548 008a FB68     		ldr	r3, [r7, #12]
 2549 008c 1B68     		ldr	r3, [r3]
 2550 008e DB68     		ldr	r3, [r3, #12]
 2551 0090 03F00403 		and	r3, r3, #4
 2552 0094 002B     		cmp	r3, #0
 2553 0096 E7D1     		bne	.L110
 2554              	.L108:
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2555              		.loc 1 1090 0
 2556 0098 FB68     		ldr	r3, [r7, #12]
 2557 009a 1B68     		ldr	r3, [r3]
 2558 009c FA68     		ldr	r2, [r7, #12]
 2559 009e 1268     		ldr	r2, [r2]
 2560 00a0 9268     		ldr	r2, [r2, #8]
 2561 00a2 22F48062 		bic	r2, r2, #1024
 2562 00a6 9A60     		str	r2, [r3, #8]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U);
 2563              		.loc 1 1093 0
 2564 00a8 364B     		ldr	r3, .L113
 2565 00aa 1B68     		ldr	r3, [r3]
 2566 00ac 364A     		ldr	r2, .L113+4
 2567 00ae A2FB0323 		umull	r2, r3, r2, r3
 2568 00b2 DB0A     		lsrs	r3, r3, #11
 2569 00b4 4FF47A72 		mov	r2, #1000
 2570 00b8 02FB03F3 		mul	r3, r2, r3
 2571 00bc 7B61     		str	r3, [r7, #20]
 2572              	.L112:
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   do
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(count-- == 0U)
 2573              		.loc 1 1096 0
 2574 00be 7B69     		ldr	r3, [r7, #20]
 2575 00c0 5A1E     		subs	r2, r3, #1
ARM GAS  /tmp/ccKAjscX.s 			page 65


 2576 00c2 7A61     		str	r2, [r7, #20]
 2577 00c4 002B     		cmp	r3, #0
 2578 00c6 0BD1     		bne	.L111
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2579              		.loc 1 1099 0
 2580 00c8 FB68     		ldr	r3, [r7, #12]
 2581 00ca 1B68     		ldr	r3, [r3]
 2582 00cc FF22     		movs	r2, #255
 2583 00ce 5A62     		str	r2, [r3, #36]
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2584              		.loc 1 1101 0
 2585 00d0 FB68     		ldr	r3, [r7, #12]
 2586 00d2 0322     		movs	r2, #3
 2587 00d4 5A77     		strb	r2, [r3, #29]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2588              		.loc 1 1104 0
 2589 00d6 FB68     		ldr	r3, [r7, #12]
 2590 00d8 0022     		movs	r2, #0
 2591 00da 1A77     		strb	r2, [r3, #28]
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2592              		.loc 1 1106 0
 2593 00dc 0323     		movs	r3, #3
 2594 00de 4AE0     		b	.L107
 2595              	.L111:
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET);
 2596              		.loc 1 1109 0
 2597 00e0 FB68     		ldr	r3, [r7, #12]
 2598 00e2 1B68     		ldr	r3, [r3]
 2599 00e4 DB68     		ldr	r3, [r3, #12]
 2600 00e6 03F00403 		and	r3, r3, #4
 2601 00ea 002B     		cmp	r3, #0
 2602 00ec E7D0     		beq	.L112
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Wake-up Timer counter */
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2603              		.loc 1 1112 0
 2604 00ee FB68     		ldr	r3, [r7, #12]
 2605 00f0 1B68     		ldr	r3, [r3]
 2606 00f2 BA68     		ldr	r2, [r7, #8]
 2607 00f4 5A61     		str	r2, [r3, #20]
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 2608              		.loc 1 1115 0
 2609 00f6 FB68     		ldr	r3, [r7, #12]
 2610 00f8 1B68     		ldr	r3, [r3]
 2611 00fa FA68     		ldr	r2, [r7, #12]
 2612 00fc 1268     		ldr	r2, [r2]
 2613 00fe 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccKAjscX.s 			page 66


 2614 0100 22F00702 		bic	r2, r2, #7
 2615 0104 9A60     		str	r2, [r3, #8]
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 2616              		.loc 1 1118 0
 2617 0106 FB68     		ldr	r3, [r7, #12]
 2618 0108 1B68     		ldr	r3, [r3]
 2619 010a FA68     		ldr	r2, [r7, #12]
 2620 010c 1268     		ldr	r2, [r2]
 2621 010e 9168     		ldr	r1, [r2, #8]
 2622 0110 7A68     		ldr	r2, [r7, #4]
 2623 0112 0A43     		orrs	r2, r2, r1
 2624 0114 9A60     		str	r2, [r3, #8]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 2625              		.loc 1 1121 0
 2626 0116 1D4A     		ldr	r2, .L113+8
 2627 0118 1C4B     		ldr	r3, .L113+8
 2628 011a 1B68     		ldr	r3, [r3]
 2629 011c 43F48003 		orr	r3, r3, #4194304
 2630 0120 1360     		str	r3, [r2]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_WAKEUPTIMER_EVENT;
 2631              		.loc 1 1123 0
 2632 0122 1A4A     		ldr	r2, .L113+8
 2633 0124 194B     		ldr	r3, .L113+8
 2634 0126 9B68     		ldr	r3, [r3, #8]
 2635 0128 43F48003 		orr	r3, r3, #4194304
 2636 012c 9360     		str	r3, [r2, #8]
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear RTC Wake Up timer Flag */
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2637              		.loc 1 1126 0
 2638 012e FB68     		ldr	r3, [r7, #12]
 2639 0130 1B68     		ldr	r3, [r3]
 2640 0132 FA68     		ldr	r2, [r7, #12]
 2641 0134 1268     		ldr	r2, [r2]
 2642 0136 D268     		ldr	r2, [r2, #12]
 2643 0138 D2B2     		uxtb	r2, r2
 2644 013a 62F49062 		orn	r2, r2, #1152
 2645 013e DA60     		str	r2, [r3, #12]
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 2646              		.loc 1 1129 0
 2647 0140 FB68     		ldr	r3, [r7, #12]
 2648 0142 1B68     		ldr	r3, [r3]
 2649 0144 FA68     		ldr	r2, [r7, #12]
 2650 0146 1268     		ldr	r2, [r2]
 2651 0148 9268     		ldr	r2, [r2, #8]
 2652 014a 42F48042 		orr	r2, r2, #16384
 2653 014e 9A60     		str	r2, [r3, #8]
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
ARM GAS  /tmp/ccKAjscX.s 			page 67


 2654              		.loc 1 1132 0
 2655 0150 FB68     		ldr	r3, [r7, #12]
 2656 0152 1B68     		ldr	r3, [r3]
 2657 0154 FA68     		ldr	r2, [r7, #12]
 2658 0156 1268     		ldr	r2, [r2]
 2659 0158 9268     		ldr	r2, [r2, #8]
 2660 015a 42F48062 		orr	r2, r2, #1024
 2661 015e 9A60     		str	r2, [r3, #8]
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 2662              		.loc 1 1135 0
 2663 0160 FB68     		ldr	r3, [r7, #12]
 2664 0162 1B68     		ldr	r3, [r3]
 2665 0164 FF22     		movs	r2, #255
 2666 0166 5A62     		str	r2, [r3, #36]
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 2667              		.loc 1 1137 0
 2668 0168 FB68     		ldr	r3, [r7, #12]
 2669 016a 0122     		movs	r2, #1
 2670 016c 5A77     		strb	r2, [r3, #29]
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2671              		.loc 1 1140 0
 2672 016e FB68     		ldr	r3, [r7, #12]
 2673 0170 0022     		movs	r2, #0
 2674 0172 1A77     		strb	r2, [r3, #28]
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2675              		.loc 1 1142 0
 2676 0174 0023     		movs	r3, #0
 2677              	.L107:
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2678              		.loc 1 1143 0
 2679 0176 1846     		mov	r0, r3
 2680 0178 1C37     		adds	r7, r7, #28
 2681              	.LCFI110:
 2682              		.cfi_def_cfa_offset 4
 2683 017a BD46     		mov	sp, r7
 2684              	.LCFI111:
 2685              		.cfi_def_cfa_register 13
 2686              		@ sp needed
 2687 017c 5DF8047B 		ldr	r7, [sp], #4
 2688              	.LCFI112:
 2689              		.cfi_restore 7
 2690              		.cfi_def_cfa_offset 0
 2691 0180 7047     		bx	lr
 2692              	.L114:
 2693 0182 00BF     		.align	2
 2694              	.L113:
 2695 0184 00000000 		.word	SystemCoreClock
 2696 0188 D34D6210 		.word	274877907
 2697 018c 003C0140 		.word	1073822720
 2698              		.cfi_endproc
 2699              	.LFE155:
ARM GAS  /tmp/ccKAjscX.s 			page 68


 2701              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 2702              		.align	1
 2703              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 2704              		.syntax unified
 2705              		.thumb
 2706              		.thumb_func
 2707              		.fpu fpv4-sp-d16
 2709              	HAL_RTCEx_DeactivateWakeUpTimer:
 2710              	.LFB156:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates wake up timer counter.
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2711              		.loc 1 1152 0
 2712              		.cfi_startproc
 2713              		@ args = 0, pretend = 0, frame = 16
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715 0000 80B5     		push	{r7, lr}
 2716              	.LCFI113:
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 7, -8
 2719              		.cfi_offset 14, -4
 2720 0002 84B0     		sub	sp, sp, #16
 2721              	.LCFI114:
 2722              		.cfi_def_cfa_offset 24
 2723 0004 00AF     		add	r7, sp, #0
 2724              	.LCFI115:
 2725              		.cfi_def_cfa_register 7
 2726 0006 7860     		str	r0, [r7, #4]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 2727              		.loc 1 1153 0
 2728 0008 0023     		movs	r3, #0
 2729 000a FB60     		str	r3, [r7, #12]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2730              		.loc 1 1156 0
 2731 000c 7B68     		ldr	r3, [r7, #4]
 2732 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2733 0010 012B     		cmp	r3, #1
 2734 0012 01D1     		bne	.L116
 2735              		.loc 1 1156 0 is_stmt 0 discriminator 1
 2736 0014 0223     		movs	r3, #2
 2737 0016 47E0     		b	.L117
 2738              	.L116:
 2739              		.loc 1 1156 0 discriminator 2
 2740 0018 7B68     		ldr	r3, [r7, #4]
 2741 001a 0122     		movs	r2, #1
 2742 001c 1A77     		strb	r2, [r3, #28]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2743              		.loc 1 1158 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccKAjscX.s 			page 69


 2744 001e 7B68     		ldr	r3, [r7, #4]
 2745 0020 0222     		movs	r2, #2
 2746 0022 5A77     		strb	r2, [r3, #29]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2747              		.loc 1 1161 0 discriminator 2
 2748 0024 7B68     		ldr	r3, [r7, #4]
 2749 0026 1B68     		ldr	r3, [r3]
 2750 0028 CA22     		movs	r2, #202
 2751 002a 5A62     		str	r2, [r3, #36]
 2752 002c 7B68     		ldr	r3, [r7, #4]
 2753 002e 1B68     		ldr	r3, [r3]
 2754 0030 5322     		movs	r2, #83
 2755 0032 5A62     		str	r2, [r3, #36]
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2756              		.loc 1 1164 0 discriminator 2
 2757 0034 7B68     		ldr	r3, [r7, #4]
 2758 0036 1B68     		ldr	r3, [r3]
 2759 0038 7A68     		ldr	r2, [r7, #4]
 2760 003a 1268     		ldr	r2, [r2]
 2761 003c 9268     		ldr	r2, [r2, #8]
 2762 003e 22F48062 		bic	r2, r2, #1024
 2763 0042 9A60     		str	r2, [r3, #8]
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
 2764              		.loc 1 1167 0 discriminator 2
 2765 0044 7B68     		ldr	r3, [r7, #4]
 2766 0046 1B68     		ldr	r3, [r3]
 2767 0048 7A68     		ldr	r2, [r7, #4]
 2768 004a 1268     		ldr	r2, [r2]
 2769 004c 9268     		ldr	r2, [r2, #8]
 2770 004e 22F48042 		bic	r2, r2, #16384
 2771 0052 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2772              		.loc 1 1170 0 discriminator 2
 2773 0054 FFF7FEFF 		bl	HAL_GetTick
 2774 0058 F860     		str	r0, [r7, #12]
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 2775              		.loc 1 1173 0 discriminator 2
 2776 005a 13E0     		b	.L118
 2777              	.L119:
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 2778              		.loc 1 1175 0
 2779 005c FFF7FEFF 		bl	HAL_GetTick
 2780 0060 0246     		mov	r2, r0
 2781 0062 FB68     		ldr	r3, [r7, #12]
 2782 0064 D31A     		subs	r3, r2, r3
 2783 0066 B3F57A7F 		cmp	r3, #1000
ARM GAS  /tmp/ccKAjscX.s 			page 70


 2784 006a 0BD9     		bls	.L118
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2785              		.loc 1 1178 0
 2786 006c 7B68     		ldr	r3, [r7, #4]
 2787 006e 1B68     		ldr	r3, [r3]
 2788 0070 FF22     		movs	r2, #255
 2789 0072 5A62     		str	r2, [r3, #36]
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 2790              		.loc 1 1180 0
 2791 0074 7B68     		ldr	r3, [r7, #4]
 2792 0076 0322     		movs	r2, #3
 2793 0078 5A77     		strb	r2, [r3, #29]
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */ 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2794              		.loc 1 1183 0
 2795 007a 7B68     		ldr	r3, [r7, #4]
 2796 007c 0022     		movs	r2, #0
 2797 007e 1A77     		strb	r2, [r3, #28]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2798              		.loc 1 1185 0
 2799 0080 0323     		movs	r3, #3
 2800 0082 11E0     		b	.L117
 2801              	.L118:
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2802              		.loc 1 1173 0
 2803 0084 7B68     		ldr	r3, [r7, #4]
 2804 0086 1B68     		ldr	r3, [r3]
 2805 0088 DB68     		ldr	r3, [r3, #12]
 2806 008a 03F00403 		and	r3, r3, #4
 2807 008e 002B     		cmp	r3, #0
 2808 0090 E4D0     		beq	.L119
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }   
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2809              		.loc 1 1190 0
 2810 0092 7B68     		ldr	r3, [r7, #4]
 2811 0094 1B68     		ldr	r3, [r3]
 2812 0096 FF22     		movs	r2, #255
 2813 0098 5A62     		str	r2, [r3, #36]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 2814              		.loc 1 1192 0
 2815 009a 7B68     		ldr	r3, [r7, #4]
 2816 009c 0122     		movs	r2, #1
 2817 009e 5A77     		strb	r2, [r3, #29]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2818              		.loc 1 1195 0
 2819 00a0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccKAjscX.s 			page 71


 2820 00a2 0022     		movs	r2, #0
 2821 00a4 1A77     		strb	r2, [r3, #28]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2822              		.loc 1 1197 0
 2823 00a6 0023     		movs	r3, #0
 2824              	.L117:
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2825              		.loc 1 1198 0
 2826 00a8 1846     		mov	r0, r3
 2827 00aa 1037     		adds	r7, r7, #16
 2828              	.LCFI116:
 2829              		.cfi_def_cfa_offset 8
 2830 00ac BD46     		mov	sp, r7
 2831              	.LCFI117:
 2832              		.cfi_def_cfa_register 13
 2833              		@ sp needed
 2834 00ae 80BD     		pop	{r7, pc}
 2835              		.cfi_endproc
 2836              	.LFE156:
 2838              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2839              		.align	1
 2840              		.global	HAL_RTCEx_GetWakeUpTimer
 2841              		.syntax unified
 2842              		.thumb
 2843              		.thumb_func
 2844              		.fpu fpv4-sp-d16
 2846              	HAL_RTCEx_GetWakeUpTimer:
 2847              	.LFB157:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Gets wake up timer counter.
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval Counter value
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2848              		.loc 1 1207 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 8
 2851              		@ frame_needed = 1, uses_anonymous_args = 0
 2852              		@ link register save eliminated.
 2853 0000 80B4     		push	{r7}
 2854              	.LCFI118:
 2855              		.cfi_def_cfa_offset 4
 2856              		.cfi_offset 7, -4
 2857 0002 83B0     		sub	sp, sp, #12
 2858              	.LCFI119:
 2859              		.cfi_def_cfa_offset 16
 2860 0004 00AF     		add	r7, sp, #0
 2861              	.LCFI120:
 2862              		.cfi_def_cfa_register 7
 2863 0006 7860     		str	r0, [r7, #4]
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the counter value */
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT)); 
 2864              		.loc 1 1209 0
ARM GAS  /tmp/ccKAjscX.s 			page 72


 2865 0008 7B68     		ldr	r3, [r7, #4]
 2866 000a 1B68     		ldr	r3, [r3]
 2867 000c 5B69     		ldr	r3, [r3, #20]
 2868 000e 9BB2     		uxth	r3, r3
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2869              		.loc 1 1210 0
 2870 0010 1846     		mov	r0, r3
 2871 0012 0C37     		adds	r7, r7, #12
 2872              	.LCFI121:
 2873              		.cfi_def_cfa_offset 4
 2874 0014 BD46     		mov	sp, r7
 2875              	.LCFI122:
 2876              		.cfi_def_cfa_register 13
 2877              		@ sp needed
 2878 0016 5DF8047B 		ldr	r7, [sp], #4
 2879              	.LCFI123:
 2880              		.cfi_restore 7
 2881              		.cfi_def_cfa_offset 0
 2882 001a 7047     		bx	lr
 2883              		.cfi_endproc
 2884              	.LFE157:
 2886              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2887              		.align	1
 2888              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2892              		.fpu fpv4-sp-d16
 2894              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2895              	.LFB158:
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Wake Up Timer interrupt request.
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 2896              		.loc 1 1219 0
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 8
 2899              		@ frame_needed = 1, uses_anonymous_args = 0
 2900 0000 80B5     		push	{r7, lr}
 2901              	.LCFI124:
 2902              		.cfi_def_cfa_offset 8
 2903              		.cfi_offset 7, -8
 2904              		.cfi_offset 14, -4
 2905 0002 82B0     		sub	sp, sp, #8
 2906              	.LCFI125:
 2907              		.cfi_def_cfa_offset 16
 2908 0004 00AF     		add	r7, sp, #0
 2909              	.LCFI126:
 2910              		.cfi_def_cfa_register 7
 2911 0006 7860     		str	r0, [r7, #4]
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_WAKEUPTIMER_GET_IT(hrtc, RTC_IT_WUT))
 2912              		.loc 1 1220 0
ARM GAS  /tmp/ccKAjscX.s 			page 73


 2913 0008 7B68     		ldr	r3, [r7, #4]
 2914 000a 1B68     		ldr	r3, [r3]
 2915 000c DB68     		ldr	r3, [r3, #12]
 2916 000e 03F48063 		and	r3, r3, #1024
 2917 0012 002B     		cmp	r3, #0
 2918 0014 12D0     		beq	.L123
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the status of the Interrupt */
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((uint32_t)(hrtc->Instance->CR & RTC_IT_WUT) != (uint32_t)RESET)
 2919              		.loc 1 1223 0
 2920 0016 7B68     		ldr	r3, [r7, #4]
 2921 0018 1B68     		ldr	r3, [r3]
 2922 001a 9B68     		ldr	r3, [r3, #8]
 2923 001c 03F48043 		and	r3, r3, #16384
 2924 0020 002B     		cmp	r3, #0
 2925 0022 0BD0     		beq	.L123
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* WAKEUPTIMER callback */ 
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
 2926              		.loc 1 1226 0
 2927 0024 7868     		ldr	r0, [r7, #4]
 2928 0026 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the WAKEUPTIMER interrupt pending bit */
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2929              		.loc 1 1229 0
 2930 002a 7B68     		ldr	r3, [r7, #4]
 2931 002c 1B68     		ldr	r3, [r3]
 2932 002e 7A68     		ldr	r2, [r7, #4]
 2933 0030 1268     		ldr	r2, [r2]
 2934 0032 D268     		ldr	r2, [r2, #12]
 2935 0034 D2B2     		uxtb	r2, r2
 2936 0036 62F49062 		orn	r2, r2, #1152
 2937 003a DA60     		str	r2, [r3, #12]
 2938              	.L123:
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
 2939              		.loc 1 1234 0
 2940 003c 054B     		ldr	r3, .L124
 2941 003e 4FF48002 		mov	r2, #4194304
 2942 0042 5A61     		str	r2, [r3, #20]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2943              		.loc 1 1237 0
 2944 0044 7B68     		ldr	r3, [r7, #4]
 2945 0046 0122     		movs	r2, #1
 2946 0048 5A77     		strb	r2, [r3, #29]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2947              		.loc 1 1238 0
 2948 004a 00BF     		nop
 2949 004c 0837     		adds	r7, r7, #8
 2950              	.LCFI127:
 2951              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccKAjscX.s 			page 74


 2952 004e BD46     		mov	sp, r7
 2953              	.LCFI128:
 2954              		.cfi_def_cfa_register 13
 2955              		@ sp needed
 2956 0050 80BD     		pop	{r7, pc}
 2957              	.L125:
 2958 0052 00BF     		.align	2
 2959              	.L124:
 2960 0054 003C0140 		.word	1073822720
 2961              		.cfi_endproc
 2962              	.LFE158:
 2964              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 2965              		.align	1
 2966              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 2967              		.syntax unified
 2968              		.thumb
 2969              		.thumb_func
 2970              		.fpu fpv4-sp-d16
 2972              	HAL_RTCEx_WakeUpTimerEventCallback:
 2973              	.LFB159:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2974              		.loc 1 1247 0
 2975              		.cfi_startproc
 2976              		@ args = 0, pretend = 0, frame = 8
 2977              		@ frame_needed = 1, uses_anonymous_args = 0
 2978              		@ link register save eliminated.
 2979 0000 80B4     		push	{r7}
 2980              	.LCFI129:
 2981              		.cfi_def_cfa_offset 4
 2982              		.cfi_offset 7, -4
 2983 0002 83B0     		sub	sp, sp, #12
 2984              	.LCFI130:
 2985              		.cfi_def_cfa_offset 16
 2986 0004 00AF     		add	r7, sp, #0
 2987              	.LCFI131:
 2988              		.cfi_def_cfa_register 7
 2989 0006 7860     		str	r0, [r7, #4]
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_WakeUpTimerEventCallback could be implemented in the user file
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2990              		.loc 1 1254 0
 2991 0008 00BF     		nop
 2992 000a 0C37     		adds	r7, r7, #12
 2993              	.LCFI132:
 2994              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccKAjscX.s 			page 75


 2995 000c BD46     		mov	sp, r7
 2996              	.LCFI133:
 2997              		.cfi_def_cfa_register 13
 2998              		@ sp needed
 2999 000e 5DF8047B 		ldr	r7, [sp], #4
 3000              	.LCFI134:
 3001              		.cfi_restore 7
 3002              		.cfi_def_cfa_offset 0
 3003 0012 7047     		bx	lr
 3004              		.cfi_endproc
 3005              	.LFE159:
 3007              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 3008              		.align	1
 3009              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 3010              		.syntax unified
 3011              		.thumb
 3012              		.thumb_func
 3013              		.fpu fpv4-sp-d16
 3015              	HAL_RTCEx_PollForWakeUpTimerEvent:
 3016              	.LFB160:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Wake Up Timer Polling.
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 3017              		.loc 1 1264 0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 16
 3020              		@ frame_needed = 1, uses_anonymous_args = 0
 3021 0000 80B5     		push	{r7, lr}
 3022              	.LCFI135:
 3023              		.cfi_def_cfa_offset 8
 3024              		.cfi_offset 7, -8
 3025              		.cfi_offset 14, -4
 3026 0002 84B0     		sub	sp, sp, #16
 3027              	.LCFI136:
 3028              		.cfi_def_cfa_offset 24
 3029 0004 00AF     		add	r7, sp, #0
 3030              	.LCFI137:
 3031              		.cfi_def_cfa_register 7
 3032 0006 7860     		str	r0, [r7, #4]
 3033 0008 3960     		str	r1, [r7]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 3034              		.loc 1 1265 0
 3035 000a 0023     		movs	r3, #0
 3036 000c FB60     		str	r3, [r7, #12]
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3037              		.loc 1 1268 0
 3038 000e FFF7FEFF 		bl	HAL_GetTick
 3039 0012 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccKAjscX.s 			page 76


1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == RESET)
 3040              		.loc 1 1270 0
 3041 0014 13E0     		b	.L128
 3042              	.L131:
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 3043              		.loc 1 1272 0
 3044 0016 3B68     		ldr	r3, [r7]
 3045 0018 B3F1FF3F 		cmp	r3, #-1
 3046 001c 0FD0     		beq	.L128
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3047              		.loc 1 1274 0
 3048 001e 3B68     		ldr	r3, [r7]
 3049 0020 002B     		cmp	r3, #0
 3050 0022 07D0     		beq	.L129
 3051              		.loc 1 1274 0 is_stmt 0 discriminator 1
 3052 0024 FFF7FEFF 		bl	HAL_GetTick
 3053 0028 0246     		mov	r2, r0
 3054 002a FB68     		ldr	r3, [r7, #12]
 3055 002c D21A     		subs	r2, r2, r3
 3056 002e 3B68     		ldr	r3, [r7]
 3057 0030 9A42     		cmp	r2, r3
 3058 0032 04D9     		bls	.L128
 3059              	.L129:
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3060              		.loc 1 1276 0 is_stmt 1
 3061 0034 7B68     		ldr	r3, [r7, #4]
 3062 0036 0322     		movs	r2, #3
 3063 0038 5A77     		strb	r2, [r3, #29]
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3064              		.loc 1 1278 0
 3065 003a 0323     		movs	r3, #3
 3066 003c 13E0     		b	.L130
 3067              	.L128:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 3068              		.loc 1 1270 0
 3069 003e 7B68     		ldr	r3, [r7, #4]
 3070 0040 1B68     		ldr	r3, [r3]
 3071 0042 DB68     		ldr	r3, [r3, #12]
 3072 0044 03F48063 		and	r3, r3, #1024
 3073 0048 002B     		cmp	r3, #0
 3074 004a E4D0     		beq	.L131
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 3075              		.loc 1 1284 0
 3076 004c 7B68     		ldr	r3, [r7, #4]
 3077 004e 1B68     		ldr	r3, [r3]
 3078 0050 7A68     		ldr	r2, [r7, #4]
 3079 0052 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccKAjscX.s 			page 77


 3080 0054 D268     		ldr	r2, [r2, #12]
 3081 0056 D2B2     		uxtb	r2, r2
 3082 0058 62F49062 		orn	r2, r2, #1152
 3083 005c DA60     		str	r2, [r3, #12]
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3084              		.loc 1 1287 0
 3085 005e 7B68     		ldr	r3, [r7, #4]
 3086 0060 0122     		movs	r2, #1
 3087 0062 5A77     		strb	r2, [r3, #29]
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 3088              		.loc 1 1289 0
 3089 0064 0023     		movs	r3, #0
 3090              	.L130:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3091              		.loc 1 1290 0
 3092 0066 1846     		mov	r0, r3
 3093 0068 1037     		adds	r7, r7, #16
 3094              	.LCFI138:
 3095              		.cfi_def_cfa_offset 8
 3096 006a BD46     		mov	sp, r7
 3097              	.LCFI139:
 3098              		.cfi_def_cfa_register 13
 3099              		@ sp needed
 3100 006c 80BD     		pop	{r7, pc}
 3101              		.cfi_endproc
 3102              	.LFE160:
 3104              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 3105              		.align	1
 3106              		.global	HAL_RTCEx_BKUPWrite
 3107              		.syntax unified
 3108              		.thumb
 3109              		.thumb_func
 3110              		.fpu fpv4-sp-d16
 3112              	HAL_RTCEx_BKUPWrite:
 3113              	.LFB161:
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group3 Extension Peripheral Control functions 
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   Extension Peripheral Control functions 
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****               ##### Extension Peripheral Control functions #####
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     [..]
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
ARM GAS  /tmp/ccKAjscX.s 			page 78


1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Writes a data in a specified RTC Backup data register.
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                 specify the register.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified RTC Backup data register.                     
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3114              		.loc 1 1334 0
 3115              		.cfi_startproc
 3116              		@ args = 0, pretend = 0, frame = 24
 3117              		@ frame_needed = 1, uses_anonymous_args = 0
 3118              		@ link register save eliminated.
 3119 0000 80B4     		push	{r7}
 3120              	.LCFI140:
 3121              		.cfi_def_cfa_offset 4
 3122              		.cfi_offset 7, -4
 3123 0002 87B0     		sub	sp, sp, #28
 3124              	.LCFI141:
 3125              		.cfi_def_cfa_offset 32
 3126 0004 00AF     		add	r7, sp, #0
 3127              	.LCFI142:
 3128              		.cfi_def_cfa_register 7
 3129 0006 F860     		str	r0, [r7, #12]
 3130 0008 B960     		str	r1, [r7, #8]
 3131 000a 7A60     		str	r2, [r7, #4]
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmp = 0;
 3132              		.loc 1 1335 0
 3133 000c 0023     		movs	r3, #0
 3134 000e 7B61     		str	r3, [r7, #20]
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 3135              		.loc 1 1340 0
 3136 0010 FB68     		ldr	r3, [r7, #12]
 3137 0012 1B68     		ldr	r3, [r3]
 3138 0014 5033     		adds	r3, r3, #80
 3139 0016 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccKAjscX.s 			page 79


1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4);
 3140              		.loc 1 1341 0
 3141 0018 BB68     		ldr	r3, [r7, #8]
 3142 001a 9B00     		lsls	r3, r3, #2
 3143 001c 7A69     		ldr	r2, [r7, #20]
 3144 001e 1344     		add	r3, r3, r2
 3145 0020 7B61     		str	r3, [r7, #20]
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Write the specified register */
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 3146              		.loc 1 1344 0
 3147 0022 7B69     		ldr	r3, [r7, #20]
 3148 0024 7A68     		ldr	r2, [r7, #4]
 3149 0026 1A60     		str	r2, [r3]
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3150              		.loc 1 1345 0
 3151 0028 00BF     		nop
 3152 002a 1C37     		adds	r7, r7, #28
 3153              	.LCFI143:
 3154              		.cfi_def_cfa_offset 4
 3155 002c BD46     		mov	sp, r7
 3156              	.LCFI144:
 3157              		.cfi_def_cfa_register 13
 3158              		@ sp needed
 3159 002e 5DF8047B 		ldr	r7, [sp], #4
 3160              	.LCFI145:
 3161              		.cfi_restore 7
 3162              		.cfi_def_cfa_offset 0
 3163 0032 7047     		bx	lr
 3164              		.cfi_endproc
 3165              	.LFE161:
 3167              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 3168              		.align	1
 3169              		.global	HAL_RTCEx_BKUPRead
 3170              		.syntax unified
 3171              		.thumb
 3172              		.thumb_func
 3173              		.fpu fpv4-sp-d16
 3175              	HAL_RTCEx_BKUPRead:
 3176              	.LFB162:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                 specify the register.                   
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval Read value
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3177              		.loc 1 1357 0
 3178              		.cfi_startproc
 3179              		@ args = 0, pretend = 0, frame = 16
 3180              		@ frame_needed = 1, uses_anonymous_args = 0
 3181              		@ link register save eliminated.
ARM GAS  /tmp/ccKAjscX.s 			page 80


 3182 0000 80B4     		push	{r7}
 3183              	.LCFI146:
 3184              		.cfi_def_cfa_offset 4
 3185              		.cfi_offset 7, -4
 3186 0002 85B0     		sub	sp, sp, #20
 3187              	.LCFI147:
 3188              		.cfi_def_cfa_offset 24
 3189 0004 00AF     		add	r7, sp, #0
 3190              	.LCFI148:
 3191              		.cfi_def_cfa_register 7
 3192 0006 7860     		str	r0, [r7, #4]
 3193 0008 3960     		str	r1, [r7]
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmp = 0;
 3194              		.loc 1 1358 0
 3195 000a 0023     		movs	r3, #0
 3196 000c FB60     		str	r3, [r7, #12]
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 3197              		.loc 1 1363 0
 3198 000e 7B68     		ldr	r3, [r7, #4]
 3199 0010 1B68     		ldr	r3, [r3]
 3200 0012 5033     		adds	r3, r3, #80
 3201 0014 FB60     		str	r3, [r7, #12]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4);
 3202              		.loc 1 1364 0
 3203 0016 3B68     		ldr	r3, [r7]
 3204 0018 9B00     		lsls	r3, r3, #2
 3205 001a FA68     		ldr	r2, [r7, #12]
 3206 001c 1344     		add	r3, r3, r2
 3207 001e FB60     		str	r3, [r7, #12]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Read the specified register */
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 3208              		.loc 1 1367 0
 3209 0020 FB68     		ldr	r3, [r7, #12]
 3210 0022 1B68     		ldr	r3, [r3]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3211              		.loc 1 1368 0
 3212 0024 1846     		mov	r0, r3
 3213 0026 1437     		adds	r7, r7, #20
 3214              	.LCFI149:
 3215              		.cfi_def_cfa_offset 4
 3216 0028 BD46     		mov	sp, r7
 3217              	.LCFI150:
 3218              		.cfi_def_cfa_register 13
 3219              		@ sp needed
 3220 002a 5DF8047B 		ldr	r7, [sp], #4
 3221              	.LCFI151:
 3222              		.cfi_restore 7
 3223              		.cfi_def_cfa_offset 0
 3224 002e 7047     		bx	lr
 3225              		.cfi_endproc
 3226              	.LFE162:
 3228              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
ARM GAS  /tmp/ccKAjscX.s 			page 81


 3229              		.align	1
 3230              		.global	HAL_RTCEx_SetSmoothCalib
 3231              		.syntax unified
 3232              		.thumb
 3233              		.thumb_func
 3234              		.fpu fpv4-sp-d16
 3236              	HAL_RTCEx_SetSmoothCalib:
 3237              	.LFB163:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets the Smooth calibration parameters.
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.  
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulses every 2*11 pulses.
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmouthCalibMinusPulsesValue Select the value of CALM[80] bits.
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses 
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field 
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         SmouthCalibMinusPulsesValue must be equal to 0.  
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3238              		.loc 1 1391 0
 3239              		.cfi_startproc
 3240              		@ args = 0, pretend = 0, frame = 24
 3241              		@ frame_needed = 1, uses_anonymous_args = 0
 3242 0000 80B5     		push	{r7, lr}
 3243              	.LCFI152:
 3244              		.cfi_def_cfa_offset 8
 3245              		.cfi_offset 7, -8
 3246              		.cfi_offset 14, -4
 3247 0002 86B0     		sub	sp, sp, #24
 3248              	.LCFI153:
 3249              		.cfi_def_cfa_offset 32
 3250 0004 00AF     		add	r7, sp, #0
 3251              	.LCFI154:
 3252              		.cfi_def_cfa_register 7
 3253 0006 F860     		str	r0, [r7, #12]
 3254 0008 B960     		str	r1, [r7, #8]
 3255 000a 7A60     		str	r2, [r7, #4]
 3256 000c 3B60     		str	r3, [r7]
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 3257              		.loc 1 1392 0
 3258 000e 0023     		movs	r3, #0
 3259 0010 7B61     		str	r3, [r7, #20]
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
ARM GAS  /tmp/ccKAjscX.s 			page 82


1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmouthCalibMinusPulsesValue));
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3260              		.loc 1 1400 0
 3261 0012 FB68     		ldr	r3, [r7, #12]
 3262 0014 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3263 0016 012B     		cmp	r3, #1
 3264 0018 01D1     		bne	.L136
 3265              		.loc 1 1400 0 is_stmt 0 discriminator 1
 3266 001a 0223     		movs	r3, #2
 3267 001c 46E0     		b	.L137
 3268              	.L136:
 3269              		.loc 1 1400 0 discriminator 2
 3270 001e FB68     		ldr	r3, [r7, #12]
 3271 0020 0122     		movs	r2, #1
 3272 0022 1A77     		strb	r2, [r3, #28]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3273              		.loc 1 1402 0 is_stmt 1 discriminator 2
 3274 0024 FB68     		ldr	r3, [r7, #12]
 3275 0026 0222     		movs	r2, #2
 3276 0028 5A77     		strb	r2, [r3, #29]
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3277              		.loc 1 1405 0 discriminator 2
 3278 002a FB68     		ldr	r3, [r7, #12]
 3279 002c 1B68     		ldr	r3, [r3]
 3280 002e CA22     		movs	r2, #202
 3281 0030 5A62     		str	r2, [r3, #36]
 3282 0032 FB68     		ldr	r3, [r7, #12]
 3283 0034 1B68     		ldr	r3, [r3]
 3284 0036 5322     		movs	r2, #83
 3285 0038 5A62     		str	r2, [r3, #36]
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 3286              		.loc 1 1408 0 discriminator 2
 3287 003a FB68     		ldr	r3, [r7, #12]
 3288 003c 1B68     		ldr	r3, [r3]
 3289 003e DB68     		ldr	r3, [r3, #12]
 3290 0040 03F48033 		and	r3, r3, #65536
 3291 0044 002B     		cmp	r3, #0
 3292 0046 1ED0     		beq	.L138
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3293              		.loc 1 1411 0
 3294 0048 FFF7FEFF 		bl	HAL_GetTick
 3295 004c 7861     		str	r0, [r7, #20]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 3296              		.loc 1 1414 0
 3297 004e 13E0     		b	.L139
ARM GAS  /tmp/ccKAjscX.s 			page 83


 3298              	.L140:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 3299              		.loc 1 1416 0
 3300 0050 FFF7FEFF 		bl	HAL_GetTick
 3301 0054 0246     		mov	r2, r0
 3302 0056 7B69     		ldr	r3, [r7, #20]
 3303 0058 D31A     		subs	r3, r2, r3
 3304 005a B3F57A7F 		cmp	r3, #1000
 3305 005e 0BD9     		bls	.L139
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3306              		.loc 1 1419 0
 3307 0060 FB68     		ldr	r3, [r7, #12]
 3308 0062 1B68     		ldr	r3, [r3]
 3309 0064 FF22     		movs	r2, #255
 3310 0066 5A62     		str	r2, [r3, #36]
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Change RTC state */
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 3311              		.loc 1 1422 0
 3312 0068 FB68     		ldr	r3, [r7, #12]
 3313 006a 0322     		movs	r2, #3
 3314 006c 5A77     		strb	r2, [r3, #29]
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */ 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3315              		.loc 1 1425 0
 3316 006e FB68     		ldr	r3, [r7, #12]
 3317 0070 0022     		movs	r2, #0
 3318 0072 1A77     		strb	r2, [r3, #28]
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3319              		.loc 1 1427 0
 3320 0074 0323     		movs	r3, #3
 3321 0076 19E0     		b	.L137
 3322              	.L139:
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 3323              		.loc 1 1414 0
 3324 0078 FB68     		ldr	r3, [r7, #12]
 3325 007a 1B68     		ldr	r3, [r3]
 3326 007c DB68     		ldr	r3, [r3, #12]
 3327 007e 03F48033 		and	r3, r3, #65536
 3328 0082 002B     		cmp	r3, #0
 3329 0084 E4D1     		bne	.L140
 3330              	.L138:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)((uint32_t)SmoothCalibPeriod | (uint32_t)SmoothCalibPlusPulses |
 3331              		.loc 1 1433 0
 3332 0086 FB68     		ldr	r3, [r7, #12]
 3333 0088 1B68     		ldr	r3, [r3]
 3334 008a B968     		ldr	r1, [r7, #8]
ARM GAS  /tmp/ccKAjscX.s 			page 84


 3335 008c 7A68     		ldr	r2, [r7, #4]
 3336 008e 1143     		orrs	r1, r1, r2
 3337 0090 3A68     		ldr	r2, [r7]
 3338 0092 0A43     		orrs	r2, r2, r1
 3339 0094 DA63     		str	r2, [r3, #60]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3340              		.loc 1 1436 0
 3341 0096 FB68     		ldr	r3, [r7, #12]
 3342 0098 1B68     		ldr	r3, [r3]
 3343 009a FF22     		movs	r2, #255
 3344 009c 5A62     		str	r2, [r3, #36]
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3345              		.loc 1 1439 0
 3346 009e FB68     		ldr	r3, [r7, #12]
 3347 00a0 0122     		movs	r2, #1
 3348 00a2 5A77     		strb	r2, [r3, #29]
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3349              		.loc 1 1442 0
 3350 00a4 FB68     		ldr	r3, [r7, #12]
 3351 00a6 0022     		movs	r2, #0
 3352 00a8 1A77     		strb	r2, [r3, #28]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3353              		.loc 1 1444 0
 3354 00aa 0023     		movs	r3, #0
 3355              	.L137:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3356              		.loc 1 1445 0
 3357 00ac 1846     		mov	r0, r3
 3358 00ae 1837     		adds	r7, r7, #24
 3359              	.LCFI155:
 3360              		.cfi_def_cfa_offset 8
 3361 00b0 BD46     		mov	sp, r7
 3362              	.LCFI156:
 3363              		.cfi_def_cfa_register 13
 3364              		@ sp needed
 3365 00b2 80BD     		pop	{r7, pc}
 3366              		.cfi_endproc
 3367              	.LFE163:
 3369              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 3370              		.align	1
 3371              		.global	HAL_RTCEx_SetSynchroShift
 3372              		.syntax unified
 3373              		.thumb
 3374              		.thumb_func
 3375              		.fpu fpv4-sp-d16
 3377              	HAL_RTCEx_SetSynchroShift:
 3378              	.LFB164:
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Configures the Synchronization Shift Control Settings.
ARM GAS  /tmp/ccKAjscX.s 			page 85


1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register. 
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar. 
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3379              		.loc 1 1461 0
 3380              		.cfi_startproc
 3381              		@ args = 0, pretend = 0, frame = 24
 3382              		@ frame_needed = 1, uses_anonymous_args = 0
 3383 0000 80B5     		push	{r7, lr}
 3384              	.LCFI157:
 3385              		.cfi_def_cfa_offset 8
 3386              		.cfi_offset 7, -8
 3387              		.cfi_offset 14, -4
 3388 0002 86B0     		sub	sp, sp, #24
 3389              	.LCFI158:
 3390              		.cfi_def_cfa_offset 32
 3391 0004 00AF     		add	r7, sp, #0
 3392              	.LCFI159:
 3393              		.cfi_def_cfa_register 7
 3394 0006 F860     		str	r0, [r7, #12]
 3395 0008 B960     		str	r1, [r7, #8]
 3396 000a 7A60     		str	r2, [r7, #4]
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 3397              		.loc 1 1462 0
 3398 000c 0023     		movs	r3, #0
 3399 000e 7B61     		str	r3, [r7, #20]
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3400              		.loc 1 1469 0
 3401 0010 FB68     		ldr	r3, [r7, #12]
 3402 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3403 0014 012B     		cmp	r3, #1
 3404 0016 01D1     		bne	.L142
 3405              		.loc 1 1469 0 is_stmt 0 discriminator 1
 3406 0018 0223     		movs	r3, #2
 3407 001a 69E0     		b	.L143
 3408              	.L142:
 3409              		.loc 1 1469 0 discriminator 2
 3410 001c FB68     		ldr	r3, [r7, #12]
 3411 001e 0122     		movs	r2, #1
 3412 0020 1A77     		strb	r2, [r3, #28]
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccKAjscX.s 			page 86


 3413              		.loc 1 1471 0 is_stmt 1 discriminator 2
 3414 0022 FB68     		ldr	r3, [r7, #12]
 3415 0024 0222     		movs	r2, #2
 3416 0026 5A77     		strb	r2, [r3, #29]
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3417              		.loc 1 1474 0 discriminator 2
 3418 0028 FB68     		ldr	r3, [r7, #12]
 3419 002a 1B68     		ldr	r3, [r3]
 3420 002c CA22     		movs	r2, #202
 3421 002e 5A62     		str	r2, [r3, #36]
 3422 0030 FB68     		ldr	r3, [r7, #12]
 3423 0032 1B68     		ldr	r3, [r3]
 3424 0034 5322     		movs	r2, #83
 3425 0036 5A62     		str	r2, [r3, #36]
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3426              		.loc 1 1477 0 discriminator 2
 3427 0038 FFF7FEFF 		bl	HAL_GetTick
 3428 003c 7861     		str	r0, [r7, #20]
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != RESET)
 3429              		.loc 1 1480 0 discriminator 2
 3430 003e 13E0     		b	.L144
 3431              	.L145:
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 3432              		.loc 1 1482 0
 3433 0040 FFF7FEFF 		bl	HAL_GetTick
 3434 0044 0246     		mov	r2, r0
 3435 0046 7B69     		ldr	r3, [r7, #20]
 3436 0048 D31A     		subs	r3, r2, r3
 3437 004a B3F57A7F 		cmp	r3, #1000
 3438 004e 0BD9     		bls	.L144
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {  
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 3439              		.loc 1 1485 0
 3440 0050 FB68     		ldr	r3, [r7, #12]
 3441 0052 1B68     		ldr	r3, [r3]
 3442 0054 FF22     		movs	r2, #255
 3443 0056 5A62     		str	r2, [r3, #36]
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3444              		.loc 1 1487 0
 3445 0058 FB68     		ldr	r3, [r7, #12]
 3446 005a 0322     		movs	r2, #3
 3447 005c 5A77     		strb	r2, [r3, #29]
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */ 
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3448              		.loc 1 1490 0
 3449 005e FB68     		ldr	r3, [r7, #12]
 3450 0060 0022     		movs	r2, #0
ARM GAS  /tmp/ccKAjscX.s 			page 87


 3451 0062 1A77     		strb	r2, [r3, #28]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3452              		.loc 1 1492 0
 3453 0064 0323     		movs	r3, #3
 3454 0066 43E0     		b	.L143
 3455              	.L144:
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 3456              		.loc 1 1480 0
 3457 0068 FB68     		ldr	r3, [r7, #12]
 3458 006a 1B68     		ldr	r3, [r3]
 3459 006c DB68     		ldr	r3, [r3, #12]
 3460 006e 03F00803 		and	r3, r3, #8
 3461 0072 002B     		cmp	r3, #0
 3462 0074 E4D1     		bne	.L145
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == RESET)
 3463              		.loc 1 1497 0
 3464 0076 FB68     		ldr	r3, [r7, #12]
 3465 0078 1B68     		ldr	r3, [r3]
 3466 007a 9B68     		ldr	r3, [r3, #8]
 3467 007c 03F01003 		and	r3, r3, #16
 3468 0080 002B     		cmp	r3, #0
 3469 0082 1ED1     		bne	.L146
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
 3470              		.loc 1 1500 0
 3471 0084 FB68     		ldr	r3, [r7, #12]
 3472 0086 1B68     		ldr	r3, [r3]
 3473 0088 7968     		ldr	r1, [r7, #4]
 3474 008a BA68     		ldr	r2, [r7, #8]
 3475 008c 0A43     		orrs	r2, r2, r1
 3476 008e DA62     		str	r2, [r3, #44]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 3477              		.loc 1 1503 0
 3478 0090 FB68     		ldr	r3, [r7, #12]
 3479 0092 1B68     		ldr	r3, [r3]
 3480 0094 9B68     		ldr	r3, [r3, #8]
 3481 0096 03F02003 		and	r3, r3, #32
 3482 009a 002B     		cmp	r3, #0
 3483 009c 1DD1     		bne	.L147
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 3484              		.loc 1 1505 0
 3485 009e F868     		ldr	r0, [r7, #12]
 3486 00a0 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 3487 00a4 0346     		mov	r3, r0
 3488 00a6 002B     		cmp	r3, #0
 3489 00a8 17D0     		beq	.L147
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         {
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
ARM GAS  /tmp/ccKAjscX.s 			page 88


1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 3490              		.loc 1 1508 0
 3491 00aa FB68     		ldr	r3, [r7, #12]
 3492 00ac 1B68     		ldr	r3, [r3]
 3493 00ae FF22     		movs	r2, #255
 3494 00b0 5A62     		str	r2, [r3, #36]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 3495              		.loc 1 1510 0
 3496 00b2 FB68     		ldr	r3, [r7, #12]
 3497 00b4 0422     		movs	r2, #4
 3498 00b6 5A77     		strb	r2, [r3, #29]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           /* Process Unlocked */ 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
 3499              		.loc 1 1513 0
 3500 00b8 FB68     		ldr	r3, [r7, #12]
 3501 00ba 0022     		movs	r2, #0
 3502 00bc 1A77     		strb	r2, [r3, #28]
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           return HAL_ERROR;
 3503              		.loc 1 1515 0
 3504 00be 0123     		movs	r3, #1
 3505 00c0 16E0     		b	.L143
 3506              	.L146:
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         }
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     else
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3507              		.loc 1 1522 0
 3508 00c2 FB68     		ldr	r3, [r7, #12]
 3509 00c4 1B68     		ldr	r3, [r3]
 3510 00c6 FF22     		movs	r2, #255
 3511 00c8 5A62     		str	r2, [r3, #36]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Change RTC state */
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR; 
 3512              		.loc 1 1525 0
 3513 00ca FB68     		ldr	r3, [r7, #12]
 3514 00cc 0422     		movs	r2, #4
 3515 00ce 5A77     		strb	r2, [r3, #29]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */ 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 3516              		.loc 1 1528 0
 3517 00d0 FB68     		ldr	r3, [r7, #12]
 3518 00d2 0022     		movs	r2, #0
 3519 00d4 1A77     		strb	r2, [r3, #28]
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_ERROR;
 3520              		.loc 1 1530 0
 3521 00d6 0123     		movs	r3, #1
 3522 00d8 0AE0     		b	.L143
 3523              	.L147:
ARM GAS  /tmp/ccKAjscX.s 			page 89


1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3524              		.loc 1 1534 0
 3525 00da FB68     		ldr	r3, [r7, #12]
 3526 00dc 1B68     		ldr	r3, [r3]
 3527 00de FF22     		movs	r2, #255
 3528 00e0 5A62     		str	r2, [r3, #36]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3529              		.loc 1 1537 0
 3530 00e2 FB68     		ldr	r3, [r7, #12]
 3531 00e4 0122     		movs	r2, #1
 3532 00e6 5A77     		strb	r2, [r3, #29]
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3533              		.loc 1 1540 0
 3534 00e8 FB68     		ldr	r3, [r7, #12]
 3535 00ea 0022     		movs	r2, #0
 3536 00ec 1A77     		strb	r2, [r3, #28]
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3537              		.loc 1 1542 0
 3538 00ee 0023     		movs	r3, #0
 3539              	.L143:
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3540              		.loc 1 1543 0
 3541 00f0 1846     		mov	r0, r3
 3542 00f2 1837     		adds	r7, r7, #24
 3543              	.LCFI160:
 3544              		.cfi_def_cfa_offset 8
 3545 00f4 BD46     		mov	sp, r7
 3546              	.LCFI161:
 3547              		.cfi_def_cfa_register 13
 3548              		@ sp needed
 3549 00f6 80BD     		pop	{r7, pc}
 3550              		.cfi_endproc
 3551              	.LFE164:
 3553              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 3554              		.align	1
 3555              		.global	HAL_RTCEx_SetCalibrationOutPut
 3556              		.syntax unified
 3557              		.thumb
 3558              		.thumb_func
 3559              		.fpu fpv4-sp-d16
 3561              	HAL_RTCEx_SetCalibrationOutPut:
 3562              	.LFB165:
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Configures the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccKAjscX.s 			page 90


1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz. 
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3563              		.loc 1 1556 0
 3564              		.cfi_startproc
 3565              		@ args = 0, pretend = 0, frame = 8
 3566              		@ frame_needed = 1, uses_anonymous_args = 0
 3567              		@ link register save eliminated.
 3568 0000 80B4     		push	{r7}
 3569              	.LCFI162:
 3570              		.cfi_def_cfa_offset 4
 3571              		.cfi_offset 7, -4
 3572 0002 83B0     		sub	sp, sp, #12
 3573              	.LCFI163:
 3574              		.cfi_def_cfa_offset 16
 3575 0004 00AF     		add	r7, sp, #0
 3576              	.LCFI164:
 3577              		.cfi_def_cfa_register 7
 3578 0006 7860     		str	r0, [r7, #4]
 3579 0008 3960     		str	r1, [r7]
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3580              		.loc 1 1561 0
 3581 000a 7B68     		ldr	r3, [r7, #4]
 3582 000c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3583 000e 012B     		cmp	r3, #1
 3584 0010 01D1     		bne	.L149
 3585              		.loc 1 1561 0 is_stmt 0 discriminator 1
 3586 0012 0223     		movs	r3, #2
 3587 0014 30E0     		b	.L150
 3588              	.L149:
 3589              		.loc 1 1561 0 discriminator 2
 3590 0016 7B68     		ldr	r3, [r7, #4]
 3591 0018 0122     		movs	r2, #1
 3592 001a 1A77     		strb	r2, [r3, #28]
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3593              		.loc 1 1563 0 is_stmt 1 discriminator 2
 3594 001c 7B68     		ldr	r3, [r7, #4]
 3595 001e 0222     		movs	r2, #2
 3596 0020 5A77     		strb	r2, [r3, #29]
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3597              		.loc 1 1566 0 discriminator 2
 3598 0022 7B68     		ldr	r3, [r7, #4]
 3599 0024 1B68     		ldr	r3, [r3]
 3600 0026 CA22     		movs	r2, #202
 3601 0028 5A62     		str	r2, [r3, #36]
 3602 002a 7B68     		ldr	r3, [r7, #4]
 3603 002c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccKAjscX.s 			page 91


 3604 002e 5322     		movs	r2, #83
 3605 0030 5A62     		str	r2, [r3, #36]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear flags before config */
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 3606              		.loc 1 1569 0 discriminator 2
 3607 0032 7B68     		ldr	r3, [r7, #4]
 3608 0034 1B68     		ldr	r3, [r3]
 3609 0036 7A68     		ldr	r2, [r7, #4]
 3610 0038 1268     		ldr	r2, [r2]
 3611 003a 9268     		ldr	r2, [r2, #8]
 3612 003c 22F40022 		bic	r2, r2, #524288
 3613 0040 9A60     		str	r2, [r3, #8]
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 3614              		.loc 1 1572 0 discriminator 2
 3615 0042 7B68     		ldr	r3, [r7, #4]
 3616 0044 1B68     		ldr	r3, [r3]
 3617 0046 7A68     		ldr	r2, [r7, #4]
 3618 0048 1268     		ldr	r2, [r2]
 3619 004a 9168     		ldr	r1, [r2, #8]
 3620 004c 3A68     		ldr	r2, [r7]
 3621 004e 0A43     		orrs	r2, r2, r1
 3622 0050 9A60     		str	r2, [r3, #8]
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 3623              		.loc 1 1574 0 discriminator 2
 3624 0052 7B68     		ldr	r3, [r7, #4]
 3625 0054 1B68     		ldr	r3, [r3]
 3626 0056 7A68     		ldr	r2, [r7, #4]
 3627 0058 1268     		ldr	r2, [r2]
 3628 005a 9268     		ldr	r2, [r2, #8]
 3629 005c 42F40002 		orr	r2, r2, #8388608
 3630 0060 9A60     		str	r2, [r3, #8]
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3631              		.loc 1 1577 0 discriminator 2
 3632 0062 7B68     		ldr	r3, [r7, #4]
 3633 0064 1B68     		ldr	r3, [r3]
 3634 0066 FF22     		movs	r2, #255
 3635 0068 5A62     		str	r2, [r3, #36]
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3636              		.loc 1 1580 0 discriminator 2
 3637 006a 7B68     		ldr	r3, [r7, #4]
 3638 006c 0122     		movs	r2, #1
 3639 006e 5A77     		strb	r2, [r3, #29]
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3640              		.loc 1 1583 0 discriminator 2
 3641 0070 7B68     		ldr	r3, [r7, #4]
 3642 0072 0022     		movs	r2, #0
 3643 0074 1A77     		strb	r2, [r3, #28]
ARM GAS  /tmp/ccKAjscX.s 			page 92


1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3644              		.loc 1 1585 0 discriminator 2
 3645 0076 0023     		movs	r3, #0
 3646              	.L150:
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3647              		.loc 1 1586 0
 3648 0078 1846     		mov	r0, r3
 3649 007a 0C37     		adds	r7, r7, #12
 3650              	.LCFI165:
 3651              		.cfi_def_cfa_offset 4
 3652 007c BD46     		mov	sp, r7
 3653              	.LCFI166:
 3654              		.cfi_def_cfa_register 13
 3655              		@ sp needed
 3656 007e 5DF8047B 		ldr	r7, [sp], #4
 3657              	.LCFI167:
 3658              		.cfi_restore 7
 3659              		.cfi_def_cfa_offset 0
 3660 0082 7047     		bx	lr
 3661              		.cfi_endproc
 3662              	.LFE165:
 3664              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 3665              		.align	1
 3666              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 3667              		.syntax unified
 3668              		.thumb
 3669              		.thumb_func
 3670              		.fpu fpv4-sp-d16
 3672              	HAL_RTCEx_DeactivateCalibrationOutPut:
 3673              	.LFB166:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3674              		.loc 1 1595 0
 3675              		.cfi_startproc
 3676              		@ args = 0, pretend = 0, frame = 8
 3677              		@ frame_needed = 1, uses_anonymous_args = 0
 3678              		@ link register save eliminated.
 3679 0000 80B4     		push	{r7}
 3680              	.LCFI168:
 3681              		.cfi_def_cfa_offset 4
 3682              		.cfi_offset 7, -4
 3683 0002 83B0     		sub	sp, sp, #12
 3684              	.LCFI169:
 3685              		.cfi_def_cfa_offset 16
 3686 0004 00AF     		add	r7, sp, #0
 3687              	.LCFI170:
 3688              		.cfi_def_cfa_register 7
 3689 0006 7860     		str	r0, [r7, #4]
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
ARM GAS  /tmp/ccKAjscX.s 			page 93


1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3690              		.loc 1 1597 0
 3691 0008 7B68     		ldr	r3, [r7, #4]
 3692 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3693 000c 012B     		cmp	r3, #1
 3694 000e 01D1     		bne	.L152
 3695              		.loc 1 1597 0 is_stmt 0 discriminator 1
 3696 0010 0223     		movs	r3, #2
 3697 0012 20E0     		b	.L153
 3698              	.L152:
 3699              		.loc 1 1597 0 discriminator 2
 3700 0014 7B68     		ldr	r3, [r7, #4]
 3701 0016 0122     		movs	r2, #1
 3702 0018 1A77     		strb	r2, [r3, #28]
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3703              		.loc 1 1599 0 is_stmt 1 discriminator 2
 3704 001a 7B68     		ldr	r3, [r7, #4]
 3705 001c 0222     		movs	r2, #2
 3706 001e 5A77     		strb	r2, [r3, #29]
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3707              		.loc 1 1602 0 discriminator 2
 3708 0020 7B68     		ldr	r3, [r7, #4]
 3709 0022 1B68     		ldr	r3, [r3]
 3710 0024 CA22     		movs	r2, #202
 3711 0026 5A62     		str	r2, [r3, #36]
 3712 0028 7B68     		ldr	r3, [r7, #4]
 3713 002a 1B68     		ldr	r3, [r3]
 3714 002c 5322     		movs	r2, #83
 3715 002e 5A62     		str	r2, [r3, #36]
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 3716              		.loc 1 1604 0 discriminator 2
 3717 0030 7B68     		ldr	r3, [r7, #4]
 3718 0032 1B68     		ldr	r3, [r3]
 3719 0034 7A68     		ldr	r2, [r7, #4]
 3720 0036 1268     		ldr	r2, [r2]
 3721 0038 9268     		ldr	r2, [r2, #8]
 3722 003a 22F40002 		bic	r2, r2, #8388608
 3723 003e 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3724              		.loc 1 1607 0 discriminator 2
 3725 0040 7B68     		ldr	r3, [r7, #4]
 3726 0042 1B68     		ldr	r3, [r3]
 3727 0044 FF22     		movs	r2, #255
 3728 0046 5A62     		str	r2, [r3, #36]
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3729              		.loc 1 1610 0 discriminator 2
 3730 0048 7B68     		ldr	r3, [r7, #4]
 3731 004a 0122     		movs	r2, #1
 3732 004c 5A77     		strb	r2, [r3, #29]
ARM GAS  /tmp/ccKAjscX.s 			page 94


1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3733              		.loc 1 1613 0 discriminator 2
 3734 004e 7B68     		ldr	r3, [r7, #4]
 3735 0050 0022     		movs	r2, #0
 3736 0052 1A77     		strb	r2, [r3, #28]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3737              		.loc 1 1615 0 discriminator 2
 3738 0054 0023     		movs	r3, #0
 3739              	.L153:
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3740              		.loc 1 1616 0
 3741 0056 1846     		mov	r0, r3
 3742 0058 0C37     		adds	r7, r7, #12
 3743              	.LCFI171:
 3744              		.cfi_def_cfa_offset 4
 3745 005a BD46     		mov	sp, r7
 3746              	.LCFI172:
 3747              		.cfi_def_cfa_register 13
 3748              		@ sp needed
 3749 005c 5DF8047B 		ldr	r7, [sp], #4
 3750              	.LCFI173:
 3751              		.cfi_restore 7
 3752              		.cfi_def_cfa_offset 0
 3753 0060 7047     		bx	lr
 3754              		.cfi_endproc
 3755              	.LFE166:
 3757              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 3758              		.align	1
 3759              		.global	HAL_RTCEx_SetRefClock
 3760              		.syntax unified
 3761              		.thumb
 3762              		.thumb_func
 3763              		.fpu fpv4-sp-d16
 3765              	HAL_RTCEx_SetRefClock:
 3766              	.LFB167:
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Enables the RTC reference clock detection.
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3767              		.loc 1 1625 0
 3768              		.cfi_startproc
 3769              		@ args = 0, pretend = 0, frame = 8
 3770              		@ frame_needed = 1, uses_anonymous_args = 0
 3771 0000 80B5     		push	{r7, lr}
 3772              	.LCFI174:
 3773              		.cfi_def_cfa_offset 8
 3774              		.cfi_offset 7, -8
 3775              		.cfi_offset 14, -4
 3776 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccKAjscX.s 			page 95


 3777              	.LCFI175:
 3778              		.cfi_def_cfa_offset 16
 3779 0004 00AF     		add	r7, sp, #0
 3780              	.LCFI176:
 3781              		.cfi_def_cfa_register 7
 3782 0006 7860     		str	r0, [r7, #4]
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3783              		.loc 1 1627 0
 3784 0008 7B68     		ldr	r3, [r7, #4]
 3785 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3786 000c 012B     		cmp	r3, #1
 3787 000e 01D1     		bne	.L155
 3788              		.loc 1 1627 0 is_stmt 0 discriminator 1
 3789 0010 0223     		movs	r3, #2
 3790 0012 3AE0     		b	.L156
 3791              	.L155:
 3792              		.loc 1 1627 0 discriminator 2
 3793 0014 7B68     		ldr	r3, [r7, #4]
 3794 0016 0122     		movs	r2, #1
 3795 0018 1A77     		strb	r2, [r3, #28]
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3796              		.loc 1 1629 0 is_stmt 1 discriminator 2
 3797 001a 7B68     		ldr	r3, [r7, #4]
 3798 001c 0222     		movs	r2, #2
 3799 001e 5A77     		strb	r2, [r3, #29]
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3800              		.loc 1 1632 0 discriminator 2
 3801 0020 7B68     		ldr	r3, [r7, #4]
 3802 0022 1B68     		ldr	r3, [r3]
 3803 0024 CA22     		movs	r2, #202
 3804 0026 5A62     		str	r2, [r3, #36]
 3805 0028 7B68     		ldr	r3, [r7, #4]
 3806 002a 1B68     		ldr	r3, [r3]
 3807 002c 5322     		movs	r2, #83
 3808 002e 5A62     		str	r2, [r3, #36]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 3809              		.loc 1 1635 0 discriminator 2
 3810 0030 7868     		ldr	r0, [r7, #4]
 3811 0032 FFF7FEFF 		bl	RTC_EnterInitMode
 3812 0036 0346     		mov	r3, r0
 3813 0038 002B     		cmp	r3, #0
 3814 003a 0BD0     		beq	.L157
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 3815              		.loc 1 1638 0
 3816 003c 7B68     		ldr	r3, [r7, #4]
 3817 003e 1B68     		ldr	r3, [r3]
 3818 0040 FF22     		movs	r2, #255
 3819 0042 5A62     		str	r2, [r3, #36]
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
ARM GAS  /tmp/ccKAjscX.s 			page 96


1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3820              		.loc 1 1641 0
 3821 0044 7B68     		ldr	r3, [r7, #4]
 3822 0046 0422     		movs	r2, #4
 3823 0048 5A77     		strb	r2, [r3, #29]
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Process Unlocked */ 
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3824              		.loc 1 1644 0
 3825 004a 7B68     		ldr	r3, [r7, #4]
 3826 004c 0022     		movs	r2, #0
 3827 004e 1A77     		strb	r2, [r3, #28]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3828              		.loc 1 1646 0
 3829 0050 0123     		movs	r3, #1
 3830 0052 1AE0     		b	.L156
 3831              	.L157:
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 3832              		.loc 1 1650 0
 3833 0054 7B68     		ldr	r3, [r7, #4]
 3834 0056 1B68     		ldr	r3, [r3]
 3835 0058 7A68     		ldr	r2, [r7, #4]
 3836 005a 1268     		ldr	r2, [r2]
 3837 005c 9268     		ldr	r2, [r2, #8]
 3838 005e 42F01002 		orr	r2, r2, #16
 3839 0062 9A60     		str	r2, [r3, #8]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT; 
 3840              		.loc 1 1653 0
 3841 0064 7B68     		ldr	r3, [r7, #4]
 3842 0066 1B68     		ldr	r3, [r3]
 3843 0068 7A68     		ldr	r2, [r7, #4]
 3844 006a 1268     		ldr	r2, [r2]
 3845 006c D268     		ldr	r2, [r2, #12]
 3846 006e 22F08002 		bic	r2, r2, #128
 3847 0072 DA60     		str	r2, [r3, #12]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3848              		.loc 1 1657 0
 3849 0074 7B68     		ldr	r3, [r7, #4]
 3850 0076 1B68     		ldr	r3, [r3]
 3851 0078 FF22     		movs	r2, #255
 3852 007a 5A62     		str	r2, [r3, #36]
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    /* Change RTC state */
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3853              		.loc 1 1660 0
 3854 007c 7B68     		ldr	r3, [r7, #4]
 3855 007e 0122     		movs	r2, #1
ARM GAS  /tmp/ccKAjscX.s 			page 97


 3856 0080 5A77     		strb	r2, [r3, #29]
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3857              		.loc 1 1663 0
 3858 0082 7B68     		ldr	r3, [r7, #4]
 3859 0084 0022     		movs	r2, #0
 3860 0086 1A77     		strb	r2, [r3, #28]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3861              		.loc 1 1665 0
 3862 0088 0023     		movs	r3, #0
 3863              	.L156:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3864              		.loc 1 1666 0
 3865 008a 1846     		mov	r0, r3
 3866 008c 0837     		adds	r7, r7, #8
 3867              	.LCFI177:
 3868              		.cfi_def_cfa_offset 8
 3869 008e BD46     		mov	sp, r7
 3870              	.LCFI178:
 3871              		.cfi_def_cfa_register 13
 3872              		@ sp needed
 3873 0090 80BD     		pop	{r7, pc}
 3874              		.cfi_endproc
 3875              	.LFE167:
 3877              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 3878              		.align	1
 3879              		.global	HAL_RTCEx_DeactivateRefClock
 3880              		.syntax unified
 3881              		.thumb
 3882              		.thumb_func
 3883              		.fpu fpv4-sp-d16
 3885              	HAL_RTCEx_DeactivateRefClock:
 3886              	.LFB168:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** { 
 3887              		.loc 1 1675 0
 3888              		.cfi_startproc
 3889              		@ args = 0, pretend = 0, frame = 8
 3890              		@ frame_needed = 1, uses_anonymous_args = 0
 3891 0000 80B5     		push	{r7, lr}
 3892              	.LCFI179:
 3893              		.cfi_def_cfa_offset 8
 3894              		.cfi_offset 7, -8
 3895              		.cfi_offset 14, -4
 3896 0002 82B0     		sub	sp, sp, #8
 3897              	.LCFI180:
 3898              		.cfi_def_cfa_offset 16
 3899 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccKAjscX.s 			page 98


 3900              	.LCFI181:
 3901              		.cfi_def_cfa_register 7
 3902 0006 7860     		str	r0, [r7, #4]
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3903              		.loc 1 1677 0
 3904 0008 7B68     		ldr	r3, [r7, #4]
 3905 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3906 000c 012B     		cmp	r3, #1
 3907 000e 01D1     		bne	.L159
 3908              		.loc 1 1677 0 is_stmt 0 discriminator 1
 3909 0010 0223     		movs	r3, #2
 3910 0012 3AE0     		b	.L160
 3911              	.L159:
 3912              		.loc 1 1677 0 discriminator 2
 3913 0014 7B68     		ldr	r3, [r7, #4]
 3914 0016 0122     		movs	r2, #1
 3915 0018 1A77     		strb	r2, [r3, #28]
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3916              		.loc 1 1679 0 is_stmt 1 discriminator 2
 3917 001a 7B68     		ldr	r3, [r7, #4]
 3918 001c 0222     		movs	r2, #2
 3919 001e 5A77     		strb	r2, [r3, #29]
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3920              		.loc 1 1682 0 discriminator 2
 3921 0020 7B68     		ldr	r3, [r7, #4]
 3922 0022 1B68     		ldr	r3, [r3]
 3923 0024 CA22     		movs	r2, #202
 3924 0026 5A62     		str	r2, [r3, #36]
 3925 0028 7B68     		ldr	r3, [r7, #4]
 3926 002a 1B68     		ldr	r3, [r3]
 3927 002c 5322     		movs	r2, #83
 3928 002e 5A62     		str	r2, [r3, #36]
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 3929              		.loc 1 1685 0 discriminator 2
 3930 0030 7868     		ldr	r0, [r7, #4]
 3931 0032 FFF7FEFF 		bl	RTC_EnterInitMode
 3932 0036 0346     		mov	r3, r0
 3933 0038 002B     		cmp	r3, #0
 3934 003a 0BD0     		beq	.L161
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 3935              		.loc 1 1688 0
 3936 003c 7B68     		ldr	r3, [r7, #4]
 3937 003e 1B68     		ldr	r3, [r3]
 3938 0040 FF22     		movs	r2, #255
 3939 0042 5A62     		str	r2, [r3, #36]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3940              		.loc 1 1691 0
ARM GAS  /tmp/ccKAjscX.s 			page 99


 3941 0044 7B68     		ldr	r3, [r7, #4]
 3942 0046 0422     		movs	r2, #4
 3943 0048 5A77     		strb	r2, [r3, #29]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Process Unlocked */ 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3944              		.loc 1 1694 0
 3945 004a 7B68     		ldr	r3, [r7, #4]
 3946 004c 0022     		movs	r2, #0
 3947 004e 1A77     		strb	r2, [r3, #28]
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3948              		.loc 1 1696 0
 3949 0050 0123     		movs	r3, #1
 3950 0052 1AE0     		b	.L160
 3951              	.L161:
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 3952              		.loc 1 1700 0
 3953 0054 7B68     		ldr	r3, [r7, #4]
 3954 0056 1B68     		ldr	r3, [r3]
 3955 0058 7A68     		ldr	r2, [r7, #4]
 3956 005a 1268     		ldr	r2, [r2]
 3957 005c 9268     		ldr	r2, [r2, #8]
 3958 005e 22F01002 		bic	r2, r2, #16
 3959 0062 9A60     		str	r2, [r3, #8]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT; 
 3960              		.loc 1 1703 0
 3961 0064 7B68     		ldr	r3, [r7, #4]
 3962 0066 1B68     		ldr	r3, [r3]
 3963 0068 7A68     		ldr	r2, [r7, #4]
 3964 006a 1268     		ldr	r2, [r2]
 3965 006c D268     		ldr	r2, [r2, #12]
 3966 006e 22F08002 		bic	r2, r2, #128
 3967 0072 DA60     		str	r2, [r3, #12]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3968              		.loc 1 1707 0
 3969 0074 7B68     		ldr	r3, [r7, #4]
 3970 0076 1B68     		ldr	r3, [r3]
 3971 0078 FF22     		movs	r2, #255
 3972 007a 5A62     		str	r2, [r3, #36]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3973              		.loc 1 1710 0
 3974 007c 7B68     		ldr	r3, [r7, #4]
 3975 007e 0122     		movs	r2, #1
 3976 0080 5A77     		strb	r2, [r3, #29]
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
ARM GAS  /tmp/ccKAjscX.s 			page 100


1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3977              		.loc 1 1713 0
 3978 0082 7B68     		ldr	r3, [r7, #4]
 3979 0084 0022     		movs	r2, #0
 3980 0086 1A77     		strb	r2, [r3, #28]
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3981              		.loc 1 1715 0
 3982 0088 0023     		movs	r3, #0
 3983              	.L160:
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3984              		.loc 1 1716 0
 3985 008a 1846     		mov	r0, r3
 3986 008c 0837     		adds	r7, r7, #8
 3987              	.LCFI182:
 3988              		.cfi_def_cfa_offset 8
 3989 008e BD46     		mov	sp, r7
 3990              	.LCFI183:
 3991              		.cfi_def_cfa_register 13
 3992              		@ sp needed
 3993 0090 80BD     		pop	{r7, pc}
 3994              		.cfi_endproc
 3995              	.LFE168:
 3997              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 3998              		.align	1
 3999              		.global	HAL_RTCEx_EnableBypassShadow
 4000              		.syntax unified
 4001              		.thumb
 4002              		.thumb_func
 4003              		.fpu fpv4-sp-d16
 4005              	HAL_RTCEx_EnableBypassShadow:
 4006              	.LFB169:
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Enables the Bypass Shadow feature.
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.  
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 4007              		.loc 1 1727 0
 4008              		.cfi_startproc
 4009              		@ args = 0, pretend = 0, frame = 8
 4010              		@ frame_needed = 1, uses_anonymous_args = 0
 4011              		@ link register save eliminated.
 4012 0000 80B4     		push	{r7}
 4013              	.LCFI184:
 4014              		.cfi_def_cfa_offset 4
 4015              		.cfi_offset 7, -4
 4016 0002 83B0     		sub	sp, sp, #12
 4017              	.LCFI185:
 4018              		.cfi_def_cfa_offset 16
 4019 0004 00AF     		add	r7, sp, #0
 4020              	.LCFI186:
ARM GAS  /tmp/ccKAjscX.s 			page 101


 4021              		.cfi_def_cfa_register 7
 4022 0006 7860     		str	r0, [r7, #4]
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4023              		.loc 1 1729 0
 4024 0008 7B68     		ldr	r3, [r7, #4]
 4025 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 4026 000c 012B     		cmp	r3, #1
 4027 000e 01D1     		bne	.L163
 4028              		.loc 1 1729 0 is_stmt 0 discriminator 1
 4029 0010 0223     		movs	r3, #2
 4030 0012 20E0     		b	.L164
 4031              	.L163:
 4032              		.loc 1 1729 0 discriminator 2
 4033 0014 7B68     		ldr	r3, [r7, #4]
 4034 0016 0122     		movs	r2, #1
 4035 0018 1A77     		strb	r2, [r3, #28]
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4036              		.loc 1 1731 0 is_stmt 1 discriminator 2
 4037 001a 7B68     		ldr	r3, [r7, #4]
 4038 001c 0222     		movs	r2, #2
 4039 001e 5A77     		strb	r2, [r3, #29]
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4040              		.loc 1 1734 0 discriminator 2
 4041 0020 7B68     		ldr	r3, [r7, #4]
 4042 0022 1B68     		ldr	r3, [r3]
 4043 0024 CA22     		movs	r2, #202
 4044 0026 5A62     		str	r2, [r3, #36]
 4045 0028 7B68     		ldr	r3, [r7, #4]
 4046 002a 1B68     		ldr	r3, [r3]
 4047 002c 5322     		movs	r2, #83
 4048 002e 5A62     		str	r2, [r3, #36]
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 4049              		.loc 1 1737 0 discriminator 2
 4050 0030 7B68     		ldr	r3, [r7, #4]
 4051 0032 1B68     		ldr	r3, [r3]
 4052 0034 7A68     		ldr	r2, [r7, #4]
 4053 0036 1268     		ldr	r2, [r2]
 4054 0038 9268     		ldr	r2, [r2, #8]
 4055 003a 42F02002 		orr	r2, r2, #32
 4056 003e 9A60     		str	r2, [r3, #8]
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4057              		.loc 1 1740 0 discriminator 2
 4058 0040 7B68     		ldr	r3, [r7, #4]
 4059 0042 1B68     		ldr	r3, [r3]
 4060 0044 FF22     		movs	r2, #255
 4061 0046 5A62     		str	r2, [r3, #36]
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
ARM GAS  /tmp/ccKAjscX.s 			page 102


 4062              		.loc 1 1743 0 discriminator 2
 4063 0048 7B68     		ldr	r3, [r7, #4]
 4064 004a 0122     		movs	r2, #1
 4065 004c 5A77     		strb	r2, [r3, #29]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4066              		.loc 1 1746 0 discriminator 2
 4067 004e 7B68     		ldr	r3, [r7, #4]
 4068 0050 0022     		movs	r2, #0
 4069 0052 1A77     		strb	r2, [r3, #28]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 4070              		.loc 1 1748 0 discriminator 2
 4071 0054 0023     		movs	r3, #0
 4072              	.L164:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4073              		.loc 1 1749 0
 4074 0056 1846     		mov	r0, r3
 4075 0058 0C37     		adds	r7, r7, #12
 4076              	.LCFI187:
 4077              		.cfi_def_cfa_offset 4
 4078 005a BD46     		mov	sp, r7
 4079              	.LCFI188:
 4080              		.cfi_def_cfa_register 13
 4081              		@ sp needed
 4082 005c 5DF8047B 		ldr	r7, [sp], #4
 4083              	.LCFI189:
 4084              		.cfi_restore 7
 4085              		.cfi_def_cfa_offset 0
 4086 0060 7047     		bx	lr
 4087              		.cfi_endproc
 4088              	.LFE169:
 4090              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 4091              		.align	1
 4092              		.global	HAL_RTCEx_DisableBypassShadow
 4093              		.syntax unified
 4094              		.thumb
 4095              		.thumb_func
 4096              		.fpu fpv4-sp-d16
 4098              	HAL_RTCEx_DisableBypassShadow:
 4099              	.LFB170:
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Disables the Bypass Shadow feature.
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.  
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 4100              		.loc 1 1760 0
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 8
 4103              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccKAjscX.s 			page 103


 4104              		@ link register save eliminated.
 4105 0000 80B4     		push	{r7}
 4106              	.LCFI190:
 4107              		.cfi_def_cfa_offset 4
 4108              		.cfi_offset 7, -4
 4109 0002 83B0     		sub	sp, sp, #12
 4110              	.LCFI191:
 4111              		.cfi_def_cfa_offset 16
 4112 0004 00AF     		add	r7, sp, #0
 4113              	.LCFI192:
 4114              		.cfi_def_cfa_register 7
 4115 0006 7860     		str	r0, [r7, #4]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4116              		.loc 1 1762 0
 4117 0008 7B68     		ldr	r3, [r7, #4]
 4118 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 4119 000c 012B     		cmp	r3, #1
 4120 000e 01D1     		bne	.L166
 4121              		.loc 1 1762 0 is_stmt 0 discriminator 1
 4122 0010 0223     		movs	r3, #2
 4123 0012 20E0     		b	.L167
 4124              	.L166:
 4125              		.loc 1 1762 0 discriminator 2
 4126 0014 7B68     		ldr	r3, [r7, #4]
 4127 0016 0122     		movs	r2, #1
 4128 0018 1A77     		strb	r2, [r3, #28]
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4129              		.loc 1 1764 0 is_stmt 1 discriminator 2
 4130 001a 7B68     		ldr	r3, [r7, #4]
 4131 001c 0222     		movs	r2, #2
 4132 001e 5A77     		strb	r2, [r3, #29]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4133              		.loc 1 1767 0 discriminator 2
 4134 0020 7B68     		ldr	r3, [r7, #4]
 4135 0022 1B68     		ldr	r3, [r3]
 4136 0024 CA22     		movs	r2, #202
 4137 0026 5A62     		str	r2, [r3, #36]
 4138 0028 7B68     		ldr	r3, [r7, #4]
 4139 002a 1B68     		ldr	r3, [r3]
 4140 002c 5322     		movs	r2, #83
 4141 002e 5A62     		str	r2, [r3, #36]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 4142              		.loc 1 1770 0 discriminator 2
 4143 0030 7B68     		ldr	r3, [r7, #4]
 4144 0032 1B68     		ldr	r3, [r3]
 4145 0034 7A68     		ldr	r2, [r7, #4]
 4146 0036 1268     		ldr	r2, [r2]
 4147 0038 9268     		ldr	r2, [r2, #8]
 4148 003a 02F0DF02 		and	r2, r2, #223
 4149 003e 9A60     		str	r2, [r3, #8]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
ARM GAS  /tmp/ccKAjscX.s 			page 104


1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4150              		.loc 1 1773 0 discriminator 2
 4151 0040 7B68     		ldr	r3, [r7, #4]
 4152 0042 1B68     		ldr	r3, [r3]
 4153 0044 FF22     		movs	r2, #255
 4154 0046 5A62     		str	r2, [r3, #36]
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 4155              		.loc 1 1776 0 discriminator 2
 4156 0048 7B68     		ldr	r3, [r7, #4]
 4157 004a 0122     		movs	r2, #1
 4158 004c 5A77     		strb	r2, [r3, #29]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4159              		.loc 1 1779 0 discriminator 2
 4160 004e 7B68     		ldr	r3, [r7, #4]
 4161 0050 0022     		movs	r2, #0
 4162 0052 1A77     		strb	r2, [r3, #28]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 4163              		.loc 1 1781 0 discriminator 2
 4164 0054 0023     		movs	r3, #0
 4165              	.L167:
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4166              		.loc 1 1782 0
 4167 0056 1846     		mov	r0, r3
 4168 0058 0C37     		adds	r7, r7, #12
 4169              	.LCFI193:
 4170              		.cfi_def_cfa_offset 4
 4171 005a BD46     		mov	sp, r7
 4172              	.LCFI194:
 4173              		.cfi_def_cfa_register 13
 4174              		@ sp needed
 4175 005c 5DF8047B 		ldr	r7, [sp], #4
 4176              	.LCFI195:
 4177              		.cfi_restore 7
 4178              		.cfi_def_cfa_offset 0
 4179 0060 7047     		bx	lr
 4180              		.cfi_endproc
 4181              	.LFE170:
 4183              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 4184              		.align	1
 4185              		.weak	HAL_RTCEx_AlarmBEventCallback
 4186              		.syntax unified
 4187              		.thumb
 4188              		.thumb_func
 4189              		.fpu fpv4-sp-d16
 4191              	HAL_RTCEx_AlarmBEventCallback:
 4192              	.LFB171:
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccKAjscX.s 			page 105


1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /** @defgroup RTCEx_Group4 Extended features functions 
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief    Extended features functions  
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) RTC Alram B callback
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 4193              		.loc 1 1810 0
 4194              		.cfi_startproc
 4195              		@ args = 0, pretend = 0, frame = 8
 4196              		@ frame_needed = 1, uses_anonymous_args = 0
 4197              		@ link register save eliminated.
 4198 0000 80B4     		push	{r7}
 4199              	.LCFI196:
 4200              		.cfi_def_cfa_offset 4
 4201              		.cfi_offset 7, -4
 4202 0002 83B0     		sub	sp, sp, #12
 4203              	.LCFI197:
 4204              		.cfi_def_cfa_offset 16
 4205 0004 00AF     		add	r7, sp, #0
 4206              	.LCFI198:
 4207              		.cfi_def_cfa_register 7
 4208 0006 7860     		str	r0, [r7, #4]
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_AlarmBEventCallback could be implemented in the user file
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4209              		.loc 1 1817 0
 4210 0008 00BF     		nop
 4211 000a 0C37     		adds	r7, r7, #12
 4212              	.LCFI199:
 4213              		.cfi_def_cfa_offset 4
 4214 000c BD46     		mov	sp, r7
 4215              	.LCFI200:
 4216              		.cfi_def_cfa_register 13
 4217              		@ sp needed
 4218 000e 5DF8047B 		ldr	r7, [sp], #4
 4219              	.LCFI201:
ARM GAS  /tmp/ccKAjscX.s 			page 106


 4220              		.cfi_restore 7
 4221              		.cfi_def_cfa_offset 0
 4222 0012 7047     		bx	lr
 4223              		.cfi_endproc
 4224              	.LFE171:
 4226              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 4227              		.align	1
 4228              		.global	HAL_RTCEx_PollForAlarmBEvent
 4229              		.syntax unified
 4230              		.thumb
 4231              		.thumb_func
 4232              		.fpu fpv4-sp-d16
 4234              	HAL_RTCEx_PollForAlarmBEvent:
 4235              	.LFB172:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles AlarmB Polling request.
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 4236              		.loc 1 1827 0
 4237              		.cfi_startproc
 4238              		@ args = 0, pretend = 0, frame = 16
 4239              		@ frame_needed = 1, uses_anonymous_args = 0
 4240 0000 80B5     		push	{r7, lr}
 4241              	.LCFI202:
 4242              		.cfi_def_cfa_offset 8
 4243              		.cfi_offset 7, -8
 4244              		.cfi_offset 14, -4
 4245 0002 84B0     		sub	sp, sp, #16
 4246              	.LCFI203:
 4247              		.cfi_def_cfa_offset 24
 4248 0004 00AF     		add	r7, sp, #0
 4249              	.LCFI204:
 4250              		.cfi_def_cfa_register 7
 4251 0006 7860     		str	r0, [r7, #4]
 4252 0008 3960     		str	r1, [r7]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 4253              		.loc 1 1828 0
 4254 000a 0023     		movs	r3, #0
 4255 000c FB60     		str	r3, [r7, #12]
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 4256              		.loc 1 1831 0
 4257 000e FFF7FEFF 		bl	HAL_GetTick
 4258 0012 F860     		str	r0, [r7, #12]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == RESET)
 4259              		.loc 1 1833 0
 4260 0014 13E0     		b	.L170
 4261              	.L173:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/ccKAjscX.s 			page 107


1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 4262              		.loc 1 1835 0
 4263 0016 3B68     		ldr	r3, [r7]
 4264 0018 B3F1FF3F 		cmp	r3, #-1
 4265 001c 0FD0     		beq	.L170
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 4266              		.loc 1 1837 0
 4267 001e 3B68     		ldr	r3, [r7]
 4268 0020 002B     		cmp	r3, #0
 4269 0022 07D0     		beq	.L171
 4270              		.loc 1 1837 0 is_stmt 0 discriminator 1
 4271 0024 FFF7FEFF 		bl	HAL_GetTick
 4272 0028 0246     		mov	r2, r0
 4273 002a FB68     		ldr	r3, [r7, #12]
 4274 002c D21A     		subs	r2, r2, r3
 4275 002e 3B68     		ldr	r3, [r7]
 4276 0030 9A42     		cmp	r2, r3
 4277 0032 04D9     		bls	.L170
 4278              	.L171:
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 4279              		.loc 1 1839 0 is_stmt 1
 4280 0034 7B68     		ldr	r3, [r7, #4]
 4281 0036 0322     		movs	r2, #3
 4282 0038 5A77     		strb	r2, [r3, #29]
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 4283              		.loc 1 1840 0
 4284 003a 0323     		movs	r3, #3
 4285 003c 13E0     		b	.L172
 4286              	.L170:
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 4287              		.loc 1 1833 0
 4288 003e 7B68     		ldr	r3, [r7, #4]
 4289 0040 1B68     		ldr	r3, [r3]
 4290 0042 DB68     		ldr	r3, [r3, #12]
 4291 0044 03F40073 		and	r3, r3, #512
 4292 0048 002B     		cmp	r3, #0
 4293 004a E4D0     		beq	.L173
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 4294              		.loc 1 1846 0
 4295 004c 7B68     		ldr	r3, [r7, #4]
 4296 004e 1B68     		ldr	r3, [r3]
 4297 0050 7A68     		ldr	r2, [r7, #4]
 4298 0052 1268     		ldr	r2, [r2]
 4299 0054 D268     		ldr	r2, [r2, #12]
 4300 0056 D2B2     		uxtb	r2, r2
 4301 0058 62F42072 		orn	r2, r2, #640
 4302 005c DA60     		str	r2, [r3, #12]
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
ARM GAS  /tmp/ccKAjscX.s 			page 108


 4303              		.loc 1 1849 0
 4304 005e 7B68     		ldr	r3, [r7, #4]
 4305 0060 0122     		movs	r2, #1
 4306 0062 5A77     		strb	r2, [r3, #29]
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 4307              		.loc 1 1851 0
 4308 0064 0023     		movs	r3, #0
 4309              	.L172:
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4310              		.loc 1 1852 0
 4311 0066 1846     		mov	r0, r3
 4312 0068 1037     		adds	r7, r7, #16
 4313              	.LCFI205:
 4314              		.cfi_def_cfa_offset 8
 4315 006a BD46     		mov	sp, r7
 4316              	.LCFI206:
 4317              		.cfi_def_cfa_register 13
 4318              		@ sp needed
 4319 006c 80BD     		pop	{r7, pc}
 4320              		.cfi_endproc
 4321              	.LFE172:
 4323              		.text
 4324              	.Letext0:
 4325              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4326              		.file 3 "/usr/include/newlib/sys/lock.h"
 4327              		.file 4 "/usr/include/newlib/sys/_types.h"
 4328              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 4329              		.file 6 "/usr/include/newlib/sys/reent.h"
 4330              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 4331              		.file 8 "Drivers/CMSIS/Include/core_cm7.h"
 4332              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4333              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 4334              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4335              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4336              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 4337              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
ARM GAS  /tmp/ccKAjscX.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_rtc_ex.c
     /tmp/ccKAjscX.s:18     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccKAjscX.s:25     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccKAjscX.s:150    .text.HAL_RTCEx_SetTimeStamp:00000000000000a8 $d
     /tmp/ccKAjscX.s:155    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccKAjscX.s:162    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccKAjscX.s:315    .text.HAL_RTCEx_SetTimeStamp_IT:00000000000000e0 $d
     /tmp/ccKAjscX.s:321    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccKAjscX.s:328    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccKAjscX.s:428    .text.HAL_RTCEx_DeactivateTimeStamp:000000000000007c $d
     /tmp/ccKAjscX.s:433    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/ccKAjscX.s:440    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/ccKAjscX.s:526    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/ccKAjscX.s:533    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/ccKAjscX.s:619    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccKAjscX.s:626    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccKAjscX.s:813    .text.HAL_RTCEx_GetTimeStamp:0000000000000138 $d
     /tmp/ccKAjscX.s:819    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccKAjscX.s:826    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccKAjscX.s:1064   .text.HAL_RTCEx_SetTamper:0000000000000164 $d
     /tmp/ccKAjscX.s:1069   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccKAjscX.s:1076   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccKAjscX.s:1372   .text.HAL_RTCEx_SetTamper_IT:00000000000001cc $d
     /tmp/ccKAjscX.s:1379   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccKAjscX.s:1386   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccKAjscX.s:1505   .text.HAL_RTCEx_DeactivateTamper:000000000000009c $d
     /tmp/ccKAjscX.s:1512   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccKAjscX.s:1519   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccKAjscX.s:1707   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccKAjscX.s:1750   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccKAjscX.s:1793   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccKAjscX.s:1836   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/ccKAjscX.s:1694   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000118 $d
     /tmp/ccKAjscX.s:1700   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccKAjscX.s:1743   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccKAjscX.s:1786   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccKAjscX.s:1829   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/ccKAjscX.s:1872   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccKAjscX.s:1879   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccKAjscX.s:1984   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccKAjscX.s:1991   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccKAjscX.s:2081   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/ccKAjscX.s:2088   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccKAjscX.s:2178   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/ccKAjscX.s:2185   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/ccKAjscX.s:2272   .text.HAL_RTCEx_PollForTamper3Event:000000000000006c $d
     /tmp/ccKAjscX.s:2277   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccKAjscX.s:2284   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccKAjscX.s:2446   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccKAjscX.s:2453   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccKAjscX.s:2695   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000184 $d
     /tmp/ccKAjscX.s:2702   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccKAjscX.s:2709   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccKAjscX.s:2839   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccKAjscX.s:2846   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccKAjscX.s:2887   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
ARM GAS  /tmp/ccKAjscX.s 			page 110


     /tmp/ccKAjscX.s:2894   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccKAjscX.s:2972   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccKAjscX.s:2960   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000054 $d
     /tmp/ccKAjscX.s:2965   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccKAjscX.s:3008   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccKAjscX.s:3015   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccKAjscX.s:3105   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccKAjscX.s:3112   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccKAjscX.s:3168   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccKAjscX.s:3175   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/ccKAjscX.s:3229   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccKAjscX.s:3236   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccKAjscX.s:3370   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccKAjscX.s:3377   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/ccKAjscX.s:3554   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccKAjscX.s:3561   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccKAjscX.s:3665   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccKAjscX.s:3672   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccKAjscX.s:3758   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccKAjscX.s:3765   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccKAjscX.s:3878   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccKAjscX.s:3885   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccKAjscX.s:3998   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccKAjscX.s:4005   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccKAjscX.s:4091   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccKAjscX.s:4098   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccKAjscX.s:4184   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccKAjscX.s:4191   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccKAjscX.s:4227   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccKAjscX.s:4234   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
SystemCoreClock
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
