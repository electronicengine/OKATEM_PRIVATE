ARM GAS  /tmp/ccvy8ygO.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.section	.text.HAL_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	HAL_UART_Init:
  29              	.LFB138:
  30              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
ARM GAS  /tmp/ccvy8ygO.s 			page 2


  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   Tx/Rx parameters.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Three operation modes are available within this driver :
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =================================
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
ARM GAS  /tmp/ccvy8ygO.s 			page 3


  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      ==============================
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_IT : Clears the specified UART ISR flag
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      [..]
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
ARM GAS  /tmp/ccvy8ygO.s 			page 4


 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/ccvy8ygO.s 			page 5


 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  31              		.loc 1 242 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
ARM GAS  /tmp/ccvy8ygO.s 			page 6


  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
  47              		.loc 1 244 0
  48 0008 7B68     		ldr	r3, [r7, #4]
  49 000a 002B     		cmp	r3, #0
  50 000c 01D1     		bne	.L2
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  51              		.loc 1 246 0
  52 000e 0123     		movs	r3, #1
  53 0010 43E0     		b	.L3
  54              	.L2:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  55              		.loc 1 260 0
  56 0012 7B68     		ldr	r3, [r7, #4]
  57 0014 93F86930 		ldrb	r3, [r3, #105]
  58 0018 DBB2     		uxtb	r3, r3
  59 001a 002B     		cmp	r3, #0
  60 001c 06D1     		bne	.L4
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  61              		.loc 1 263 0
  62 001e 7B68     		ldr	r3, [r7, #4]
  63 0020 0022     		movs	r2, #0
  64 0022 83F86820 		strb	r2, [r3, #104]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  65              		.loc 1 266 0
  66 0026 7868     		ldr	r0, [r7, #4]
  67 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  68              	.L4:
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  69              		.loc 1 269 0
  70 002c 7B68     		ldr	r3, [r7, #4]
  71 002e 2422     		movs	r2, #36
  72 0030 83F86920 		strb	r2, [r3, #105]
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/ccvy8ygO.s 			page 7


 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  73              		.loc 1 272 0
  74 0034 7B68     		ldr	r3, [r7, #4]
  75 0036 1B68     		ldr	r3, [r3]
  76 0038 1A68     		ldr	r2, [r3]
  77 003a 7B68     		ldr	r3, [r7, #4]
  78 003c 1B68     		ldr	r3, [r3]
  79 003e 22F00102 		bic	r2, r2, #1
  80 0042 1A60     		str	r2, [r3]
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  81              		.loc 1 275 0
  82 0044 7868     		ldr	r0, [r7, #4]
  83 0046 FFF7FEFF 		bl	UART_SetConfig
  84 004a 0346     		mov	r3, r0
  85 004c 012B     		cmp	r3, #1
  86 004e 01D1     		bne	.L5
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  87              		.loc 1 277 0
  88 0050 0123     		movs	r3, #1
  89 0052 22E0     		b	.L3
  90              	.L5:
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  91              		.loc 1 280 0
  92 0054 7B68     		ldr	r3, [r7, #4]
  93 0056 5B6A     		ldr	r3, [r3, #36]
  94 0058 002B     		cmp	r3, #0
  95 005a 02D0     		beq	.L6
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 282 0
  97 005c 7868     		ldr	r0, [r7, #4]
  98 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 288 0
 101 0062 7B68     		ldr	r3, [r7, #4]
 102 0064 1B68     		ldr	r3, [r3]
 103 0066 5A68     		ldr	r2, [r3, #4]
 104 0068 7B68     		ldr	r3, [r7, #4]
 105 006a 1B68     		ldr	r3, [r3]
 106 006c 22F49042 		bic	r2, r2, #18432
 107 0070 5A60     		str	r2, [r3, #4]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 289 0
 109 0072 7B68     		ldr	r3, [r7, #4]
 110 0074 1B68     		ldr	r3, [r3]
 111 0076 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccvy8ygO.s 			page 8


 112 0078 7B68     		ldr	r3, [r7, #4]
 113 007a 1B68     		ldr	r3, [r3]
 114 007c 22F02A02 		bic	r2, r2, #42
 115 0080 9A60     		str	r2, [r3, #8]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 292 0
 117 0082 7B68     		ldr	r3, [r7, #4]
 118 0084 1B68     		ldr	r3, [r3]
 119 0086 1A68     		ldr	r2, [r3]
 120 0088 7B68     		ldr	r3, [r7, #4]
 121 008a 1B68     		ldr	r3, [r3]
 122 008c 42F00102 		orr	r2, r2, #1
 123 0090 1A60     		str	r2, [r3]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 124              		.loc 1 295 0
 125 0092 7868     		ldr	r0, [r7, #4]
 126 0094 FFF7FEFF 		bl	UART_CheckIdleState
 127 0098 0346     		mov	r3, r0
 128              	.L3:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 129              		.loc 1 296 0
 130 009a 1846     		mov	r0, r3
 131 009c 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 009e BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 00a0 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE138:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_HalfDuplex_Init:
 151              	.LFB139:
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 152              		.loc 1 305 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccvy8ygO.s 			page 9


 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 168              		.loc 1 307 0
 169 0008 7B68     		ldr	r3, [r7, #4]
 170 000a 002B     		cmp	r3, #0
 171 000c 01D1     		bne	.L8
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 172              		.loc 1 309 0
 173 000e 0123     		movs	r3, #1
 174 0010 4BE0     		b	.L9
 175              	.L8:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 176              		.loc 1 312 0
 177 0012 7B68     		ldr	r3, [r7, #4]
 178 0014 93F86930 		ldrb	r3, [r3, #105]
 179 0018 DBB2     		uxtb	r3, r3
 180 001a 002B     		cmp	r3, #0
 181 001c 06D1     		bne	.L10
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 182              		.loc 1 315 0
 183 001e 7B68     		ldr	r3, [r7, #4]
 184 0020 0022     		movs	r2, #0
 185 0022 83F86820 		strb	r2, [r3, #104]
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 186              		.loc 1 318 0
 187 0026 7868     		ldr	r0, [r7, #4]
 188 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 189              	.L10:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 190              		.loc 1 321 0
 191 002c 7B68     		ldr	r3, [r7, #4]
 192 002e 2422     		movs	r2, #36
 193 0030 83F86920 		strb	r2, [r3, #105]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/ccvy8ygO.s 			page 10


 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 194              		.loc 1 324 0
 195 0034 7B68     		ldr	r3, [r7, #4]
 196 0036 1B68     		ldr	r3, [r3]
 197 0038 1A68     		ldr	r2, [r3]
 198 003a 7B68     		ldr	r3, [r7, #4]
 199 003c 1B68     		ldr	r3, [r3]
 200 003e 22F00102 		bic	r2, r2, #1
 201 0042 1A60     		str	r2, [r3]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 202              		.loc 1 327 0
 203 0044 7868     		ldr	r0, [r7, #4]
 204 0046 FFF7FEFF 		bl	UART_SetConfig
 205 004a 0346     		mov	r3, r0
 206 004c 012B     		cmp	r3, #1
 207 004e 01D1     		bne	.L11
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 208              		.loc 1 329 0
 209 0050 0123     		movs	r3, #1
 210 0052 2AE0     		b	.L9
 211              	.L11:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 212              		.loc 1 332 0
 213 0054 7B68     		ldr	r3, [r7, #4]
 214 0056 5B6A     		ldr	r3, [r3, #36]
 215 0058 002B     		cmp	r3, #0
 216 005a 02D0     		beq	.L12
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 217              		.loc 1 334 0
 218 005c 7868     		ldr	r0, [r7, #4]
 219 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 220              	.L12:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 221              		.loc 1 340 0
 222 0062 7B68     		ldr	r3, [r7, #4]
 223 0064 1B68     		ldr	r3, [r3]
 224 0066 5A68     		ldr	r2, [r3, #4]
 225 0068 7B68     		ldr	r3, [r7, #4]
 226 006a 1B68     		ldr	r3, [r3]
 227 006c 22F49042 		bic	r2, r2, #18432
 228 0070 5A60     		str	r2, [r3, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 229              		.loc 1 341 0
 230 0072 7B68     		ldr	r3, [r7, #4]
 231 0074 1B68     		ldr	r3, [r3]
 232 0076 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccvy8ygO.s 			page 11


 233 0078 7B68     		ldr	r3, [r7, #4]
 234 007a 1B68     		ldr	r3, [r3]
 235 007c 22F02202 		bic	r2, r2, #34
 236 0080 9A60     		str	r2, [r3, #8]
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 237              		.loc 1 344 0
 238 0082 7B68     		ldr	r3, [r7, #4]
 239 0084 1B68     		ldr	r3, [r3]
 240 0086 9A68     		ldr	r2, [r3, #8]
 241 0088 7B68     		ldr	r3, [r7, #4]
 242 008a 1B68     		ldr	r3, [r3]
 243 008c 42F00802 		orr	r2, r2, #8
 244 0090 9A60     		str	r2, [r3, #8]
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 245              		.loc 1 347 0
 246 0092 7B68     		ldr	r3, [r7, #4]
 247 0094 1B68     		ldr	r3, [r3]
 248 0096 1A68     		ldr	r2, [r3]
 249 0098 7B68     		ldr	r3, [r7, #4]
 250 009a 1B68     		ldr	r3, [r3]
 251 009c 42F00102 		orr	r2, r2, #1
 252 00a0 1A60     		str	r2, [r3]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 253              		.loc 1 350 0
 254 00a2 7868     		ldr	r0, [r7, #4]
 255 00a4 FFF7FEFF 		bl	UART_CheckIdleState
 256 00a8 0346     		mov	r3, r0
 257              	.L9:
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 258              		.loc 1 351 0
 259 00aa 1846     		mov	r0, r3
 260 00ac 0837     		adds	r7, r7, #8
 261              	.LCFI8:
 262              		.cfi_def_cfa_offset 8
 263 00ae BD46     		mov	sp, r7
 264              	.LCFI9:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 00b0 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE139:
 271              		.section	.text.HAL_LIN_Init,"ax",%progbits
 272              		.align	1
 273              		.global	HAL_LIN_Init
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	HAL_LIN_Init:
 280              	.LFB140:
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 12


 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 281              		.loc 1 365 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 80B5     		push	{r7, lr}
 286              	.LCFI10:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              	.LCFI11:
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI12:
 295              		.cfi_def_cfa_register 7
 296 0006 7860     		str	r0, [r7, #4]
 297 0008 3960     		str	r1, [r7]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 298              		.loc 1 367 0
 299 000a 7B68     		ldr	r3, [r7, #4]
 300 000c 002B     		cmp	r3, #0
 301 000e 01D1     		bne	.L14
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 302              		.loc 1 369 0
 303 0010 0123     		movs	r3, #1
 304 0012 55E0     		b	.L15
 305              	.L14:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_LIN_WORD_LENGTH(huart->Init.WordLength));
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 306              		.loc 1 377 0
 307 0014 7B68     		ldr	r3, [r7, #4]
 308 0016 93F86930 		ldrb	r3, [r3, #105]
 309 001a DBB2     		uxtb	r3, r3
 310 001c 002B     		cmp	r3, #0
 311 001e 06D1     		bne	.L16
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccvy8ygO.s 			page 13


 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 312              		.loc 1 380 0
 313 0020 7B68     		ldr	r3, [r7, #4]
 314 0022 0022     		movs	r2, #0
 315 0024 83F86820 		strb	r2, [r3, #104]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 316              		.loc 1 383 0
 317 0028 7868     		ldr	r0, [r7, #4]
 318 002a FFF7FEFF 		bl	HAL_UART_MspInit
 319              	.L16:
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 320              		.loc 1 386 0
 321 002e 7B68     		ldr	r3, [r7, #4]
 322 0030 2422     		movs	r2, #36
 323 0032 83F86920 		strb	r2, [r3, #105]
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 324              		.loc 1 389 0
 325 0036 7B68     		ldr	r3, [r7, #4]
 326 0038 1B68     		ldr	r3, [r3]
 327 003a 1A68     		ldr	r2, [r3]
 328 003c 7B68     		ldr	r3, [r7, #4]
 329 003e 1B68     		ldr	r3, [r3]
 330 0040 22F00102 		bic	r2, r2, #1
 331 0044 1A60     		str	r2, [r3]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 332              		.loc 1 392 0
 333 0046 7868     		ldr	r0, [r7, #4]
 334 0048 FFF7FEFF 		bl	UART_SetConfig
 335 004c 0346     		mov	r3, r0
 336 004e 012B     		cmp	r3, #1
 337 0050 01D1     		bne	.L17
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 338              		.loc 1 394 0
 339 0052 0123     		movs	r3, #1
 340 0054 34E0     		b	.L15
 341              	.L17:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 342              		.loc 1 397 0
 343 0056 7B68     		ldr	r3, [r7, #4]
 344 0058 5B6A     		ldr	r3, [r3, #36]
 345 005a 002B     		cmp	r3, #0
 346 005c 02D0     		beq	.L18
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 347              		.loc 1 399 0
ARM GAS  /tmp/ccvy8ygO.s 			page 14


 348 005e 7868     		ldr	r0, [r7, #4]
 349 0060 FFF7FEFF 		bl	UART_AdvFeatureConfig
 350              	.L18:
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 351              		.loc 1 405 0
 352 0064 7B68     		ldr	r3, [r7, #4]
 353 0066 1B68     		ldr	r3, [r3]
 354 0068 5A68     		ldr	r2, [r3, #4]
 355 006a 7B68     		ldr	r3, [r7, #4]
 356 006c 1B68     		ldr	r3, [r3]
 357 006e 22F40062 		bic	r2, r2, #2048
 358 0072 5A60     		str	r2, [r3, #4]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 359              		.loc 1 406 0
 360 0074 7B68     		ldr	r3, [r7, #4]
 361 0076 1B68     		ldr	r3, [r3]
 362 0078 9A68     		ldr	r2, [r3, #8]
 363 007a 7B68     		ldr	r3, [r7, #4]
 364 007c 1B68     		ldr	r3, [r3]
 365 007e 22F02A02 		bic	r2, r2, #42
 366 0082 9A60     		str	r2, [r3, #8]
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 367              		.loc 1 409 0
 368 0084 7B68     		ldr	r3, [r7, #4]
 369 0086 1B68     		ldr	r3, [r3]
 370 0088 5A68     		ldr	r2, [r3, #4]
 371 008a 7B68     		ldr	r3, [r7, #4]
 372 008c 1B68     		ldr	r3, [r3]
 373 008e 42F48042 		orr	r2, r2, #16384
 374 0092 5A60     		str	r2, [r3, #4]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 375              		.loc 1 412 0
 376 0094 7B68     		ldr	r3, [r7, #4]
 377 0096 1B68     		ldr	r3, [r3]
 378 0098 5B68     		ldr	r3, [r3, #4]
 379 009a 23F02001 		bic	r1, r3, #32
 380 009e 7B68     		ldr	r3, [r7, #4]
 381 00a0 1B68     		ldr	r3, [r3]
 382 00a2 3A68     		ldr	r2, [r7]
 383 00a4 0A43     		orrs	r2, r2, r1
 384 00a6 5A60     		str	r2, [r3, #4]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 385              		.loc 1 415 0
 386 00a8 7B68     		ldr	r3, [r7, #4]
 387 00aa 1B68     		ldr	r3, [r3]
 388 00ac 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccvy8ygO.s 			page 15


 389 00ae 7B68     		ldr	r3, [r7, #4]
 390 00b0 1B68     		ldr	r3, [r3]
 391 00b2 42F00102 		orr	r2, r2, #1
 392 00b6 1A60     		str	r2, [r3]
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 393              		.loc 1 418 0
 394 00b8 7868     		ldr	r0, [r7, #4]
 395 00ba FFF7FEFF 		bl	UART_CheckIdleState
 396 00be 0346     		mov	r3, r0
 397              	.L15:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 398              		.loc 1 419 0
 399 00c0 1846     		mov	r0, r3
 400 00c2 0837     		adds	r7, r7, #8
 401              	.LCFI13:
 402              		.cfi_def_cfa_offset 8
 403 00c4 BD46     		mov	sp, r7
 404              	.LCFI14:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 00c6 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE140:
 411              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_MultiProcessor_Init
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	HAL_MultiProcessor_Init:
 420              	.LFB141:
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 421              		.loc 1 439 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccvy8ygO.s 			page 16


 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425 0000 80B5     		push	{r7, lr}
 426              	.LCFI15:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 84B0     		sub	sp, sp, #16
 431              	.LCFI16:
 432              		.cfi_def_cfa_offset 24
 433 0004 00AF     		add	r7, sp, #0
 434              	.LCFI17:
 435              		.cfi_def_cfa_register 7
 436 0006 F860     		str	r0, [r7, #12]
 437 0008 0B46     		mov	r3, r1
 438 000a 7A60     		str	r2, [r7, #4]
 439 000c FB72     		strb	r3, [r7, #11]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 440              		.loc 1 441 0
 441 000e FB68     		ldr	r3, [r7, #12]
 442 0010 002B     		cmp	r3, #0
 443 0012 01D1     		bne	.L20
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 444              		.loc 1 443 0
 445 0014 0123     		movs	r3, #1
 446 0016 5CE0     		b	.L21
 447              	.L20:
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 448              		.loc 1 449 0
 449 0018 FB68     		ldr	r3, [r7, #12]
 450 001a 93F86930 		ldrb	r3, [r3, #105]
 451 001e DBB2     		uxtb	r3, r3
 452 0020 002B     		cmp	r3, #0
 453 0022 06D1     		bne	.L22
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 454              		.loc 1 452 0
 455 0024 FB68     		ldr	r3, [r7, #12]
 456 0026 0022     		movs	r2, #0
 457 0028 83F86820 		strb	r2, [r3, #104]
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 458              		.loc 1 455 0
 459 002c F868     		ldr	r0, [r7, #12]
 460 002e FFF7FEFF 		bl	HAL_UART_MspInit
 461              	.L22:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccvy8ygO.s 			page 17


 462              		.loc 1 458 0
 463 0032 FB68     		ldr	r3, [r7, #12]
 464 0034 2422     		movs	r2, #36
 465 0036 83F86920 		strb	r2, [r3, #105]
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 466              		.loc 1 461 0
 467 003a FB68     		ldr	r3, [r7, #12]
 468 003c 1B68     		ldr	r3, [r3]
 469 003e 1A68     		ldr	r2, [r3]
 470 0040 FB68     		ldr	r3, [r7, #12]
 471 0042 1B68     		ldr	r3, [r3]
 472 0044 22F00102 		bic	r2, r2, #1
 473 0048 1A60     		str	r2, [r3]
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 474              		.loc 1 464 0
 475 004a F868     		ldr	r0, [r7, #12]
 476 004c FFF7FEFF 		bl	UART_SetConfig
 477 0050 0346     		mov	r3, r0
 478 0052 012B     		cmp	r3, #1
 479 0054 01D1     		bne	.L23
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 480              		.loc 1 466 0
 481 0056 0123     		movs	r3, #1
 482 0058 3BE0     		b	.L21
 483              	.L23:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 484              		.loc 1 469 0
 485 005a FB68     		ldr	r3, [r7, #12]
 486 005c 5B6A     		ldr	r3, [r3, #36]
 487 005e 002B     		cmp	r3, #0
 488 0060 02D0     		beq	.L24
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 489              		.loc 1 471 0
 490 0062 F868     		ldr	r0, [r7, #12]
 491 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 492              	.L24:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 493              		.loc 1 477 0
 494 0068 FB68     		ldr	r3, [r7, #12]
 495 006a 1B68     		ldr	r3, [r3]
 496 006c 5A68     		ldr	r2, [r3, #4]
 497 006e FB68     		ldr	r3, [r7, #12]
 498 0070 1B68     		ldr	r3, [r3]
 499 0072 22F49042 		bic	r2, r2, #18432
ARM GAS  /tmp/ccvy8ygO.s 			page 18


 500 0076 5A60     		str	r2, [r3, #4]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 501              		.loc 1 478 0
 502 0078 FB68     		ldr	r3, [r7, #12]
 503 007a 1B68     		ldr	r3, [r3]
 504 007c 9A68     		ldr	r2, [r3, #8]
 505 007e FB68     		ldr	r3, [r7, #12]
 506 0080 1B68     		ldr	r3, [r3]
 507 0082 22F02A02 		bic	r2, r2, #42
 508 0086 9A60     		str	r2, [r3, #8]
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 509              		.loc 1 480 0
 510 0088 7B68     		ldr	r3, [r7, #4]
 511 008a B3F5006F 		cmp	r3, #2048
 512 008e 0AD1     		bne	.L25
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 513              		.loc 1 483 0
 514 0090 FB68     		ldr	r3, [r7, #12]
 515 0092 1B68     		ldr	r3, [r3]
 516 0094 5B68     		ldr	r3, [r3, #4]
 517 0096 23F07F41 		bic	r1, r3, #-16777216
 518 009a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 519 009c 1A06     		lsls	r2, r3, #24
 520 009e FB68     		ldr	r3, [r7, #12]
 521 00a0 1B68     		ldr	r3, [r3]
 522 00a2 0A43     		orrs	r2, r2, r1
 523 00a4 5A60     		str	r2, [r3, #4]
 524              	.L25:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 525              		.loc 1 487 0
 526 00a6 FB68     		ldr	r3, [r7, #12]
 527 00a8 1B68     		ldr	r3, [r3]
 528 00aa 1B68     		ldr	r3, [r3]
 529 00ac 23F40061 		bic	r1, r3, #2048
 530 00b0 FB68     		ldr	r3, [r7, #12]
 531 00b2 1B68     		ldr	r3, [r3]
 532 00b4 7A68     		ldr	r2, [r7, #4]
 533 00b6 0A43     		orrs	r2, r2, r1
 534 00b8 1A60     		str	r2, [r3]
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 535              		.loc 1 490 0
 536 00ba FB68     		ldr	r3, [r7, #12]
 537 00bc 1B68     		ldr	r3, [r3]
 538 00be 1A68     		ldr	r2, [r3]
 539 00c0 FB68     		ldr	r3, [r7, #12]
 540 00c2 1B68     		ldr	r3, [r3]
 541 00c4 42F00102 		orr	r2, r2, #1
 542 00c8 1A60     		str	r2, [r3]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 19


 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 543              		.loc 1 493 0
 544 00ca F868     		ldr	r0, [r7, #12]
 545 00cc FFF7FEFF 		bl	UART_CheckIdleState
 546 00d0 0346     		mov	r3, r0
 547              	.L21:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 548              		.loc 1 494 0
 549 00d2 1846     		mov	r0, r3
 550 00d4 1037     		adds	r7, r7, #16
 551              	.LCFI18:
 552              		.cfi_def_cfa_offset 8
 553 00d6 BD46     		mov	sp, r7
 554              	.LCFI19:
 555              		.cfi_def_cfa_register 13
 556              		@ sp needed
 557 00d8 80BD     		pop	{r7, pc}
 558              		.cfi_endproc
 559              	.LFE141:
 561              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 562              		.align	1
 563              		.global	HAL_RS485Ex_Init
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	HAL_RS485Ex_Init:
 570              	.LFB142:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Polarity select the driver enable polarity.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AssertionTime Driver Enable assertion time:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the activation of the DE (Driver 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         signal and the beginning of the start bit. It is expressed in sample ti
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         units (1/8 or 1/16 bit time, depending on the oversampling rate)
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param DeassertionTime Driver Enable deassertion time:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         5-bit value defining the time between the end of the last stop bit, in 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         transmitted message, and the de-activation of the DE (Driver Enable) si
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         It is expressed in sample time units (1/8 or 1/16 bit time, depending o
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                         oversampling rate).
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 571              		.loc 1 517 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 24
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccvy8ygO.s 			page 20


 576              	.LCFI20:
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 86B0     		sub	sp, sp, #24
 581              	.LCFI21:
 582              		.cfi_def_cfa_offset 32
 583 0004 00AF     		add	r7, sp, #0
 584              	.LCFI22:
 585              		.cfi_def_cfa_register 7
 586 0006 F860     		str	r0, [r7, #12]
 587 0008 B960     		str	r1, [r7, #8]
 588 000a 7A60     		str	r2, [r7, #4]
 589 000c 3B60     		str	r3, [r7]
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp = 0x0;
 590              		.loc 1 518 0
 591 000e 0023     		movs	r3, #0
 592 0010 7B61     		str	r3, [r7, #20]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 593              		.loc 1 521 0
 594 0012 FB68     		ldr	r3, [r7, #12]
 595 0014 002B     		cmp	r3, #0
 596 0016 01D1     		bne	.L27
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 597              		.loc 1 523 0
 598 0018 0123     		movs	r3, #1
 599 001a 57E0     		b	.L28
 600              	.L27:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable UART instance */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable polarity */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable assertion time */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Driver Enable deassertion time */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 601              		.loc 1 537 0
 602 001c FB68     		ldr	r3, [r7, #12]
 603 001e 93F86930 		ldrb	r3, [r3, #105]
 604 0022 DBB2     		uxtb	r3, r3
 605 0024 002B     		cmp	r3, #0
 606 0026 06D1     		bne	.L29
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 607              		.loc 1 540 0
 608 0028 FB68     		ldr	r3, [r7, #12]
 609 002a 0022     		movs	r2, #0
ARM GAS  /tmp/ccvy8ygO.s 			page 21


 610 002c 83F86820 		strb	r2, [r3, #104]
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 611              		.loc 1 543 0
 612 0030 F868     		ldr	r0, [r7, #12]
 613 0032 FFF7FEFF 		bl	HAL_UART_MspInit
 614              	.L29:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 615              		.loc 1 546 0
 616 0036 FB68     		ldr	r3, [r7, #12]
 617 0038 2422     		movs	r2, #36
 618 003a 83F86920 		strb	r2, [r3, #105]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 619              		.loc 1 549 0
 620 003e FB68     		ldr	r3, [r7, #12]
 621 0040 1B68     		ldr	r3, [r3]
 622 0042 1A68     		ldr	r2, [r3]
 623 0044 FB68     		ldr	r3, [r7, #12]
 624 0046 1B68     		ldr	r3, [r3]
 625 0048 22F00102 		bic	r2, r2, #1
 626 004c 1A60     		str	r2, [r3]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 627              		.loc 1 552 0
 628 004e F868     		ldr	r0, [r7, #12]
 629 0050 FFF7FEFF 		bl	UART_SetConfig
 630 0054 0346     		mov	r3, r0
 631 0056 012B     		cmp	r3, #1
 632 0058 01D1     		bne	.L30
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 633              		.loc 1 554 0
 634 005a 0123     		movs	r3, #1
 635 005c 36E0     		b	.L28
 636              	.L30:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 637              		.loc 1 557 0
 638 005e FB68     		ldr	r3, [r7, #12]
 639 0060 5B6A     		ldr	r3, [r3, #36]
 640 0062 002B     		cmp	r3, #0
 641 0064 02D0     		beq	.L31
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 642              		.loc 1 559 0
 643 0066 F868     		ldr	r0, [r7, #12]
 644 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 645              	.L31:
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 22


 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 646              		.loc 1 563 0
 647 006c FB68     		ldr	r3, [r7, #12]
 648 006e 1B68     		ldr	r3, [r3]
 649 0070 9A68     		ldr	r2, [r3, #8]
 650 0072 FB68     		ldr	r3, [r7, #12]
 651 0074 1B68     		ldr	r3, [r3]
 652 0076 42F48042 		orr	r2, r2, #16384
 653 007a 9A60     		str	r2, [r3, #8]
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable polarity */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 654              		.loc 1 566 0
 655 007c FB68     		ldr	r3, [r7, #12]
 656 007e 1B68     		ldr	r3, [r3]
 657 0080 9B68     		ldr	r3, [r3, #8]
 658 0082 23F40041 		bic	r1, r3, #32768
 659 0086 FB68     		ldr	r3, [r7, #12]
 660 0088 1B68     		ldr	r3, [r3]
 661 008a BA68     		ldr	r2, [r7, #8]
 662 008c 0A43     		orrs	r2, r2, r1
 663 008e 9A60     		str	r2, [r3, #8]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Driver Enable assertion and deassertion times */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 664              		.loc 1 569 0
 665 0090 7B68     		ldr	r3, [r7, #4]
 666 0092 5B05     		lsls	r3, r3, #21
 667 0094 7B61     		str	r3, [r7, #20]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 668              		.loc 1 570 0
 669 0096 3B68     		ldr	r3, [r7]
 670 0098 1B04     		lsls	r3, r3, #16
 671 009a 7A69     		ldr	r2, [r7, #20]
 672 009c 1343     		orrs	r3, r3, r2
 673 009e 7B61     		str	r3, [r7, #20]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT|USART_CR1_DEAT), temp);
 674              		.loc 1 571 0
 675 00a0 FB68     		ldr	r3, [r7, #12]
 676 00a2 1B68     		ldr	r3, [r3]
 677 00a4 1A68     		ldr	r2, [r3]
 678 00a6 0B4B     		ldr	r3, .L32
 679 00a8 1340     		ands	r3, r3, r2
 680 00aa FA68     		ldr	r2, [r7, #12]
 681 00ac 1268     		ldr	r2, [r2]
 682 00ae 7969     		ldr	r1, [r7, #20]
 683 00b0 0B43     		orrs	r3, r3, r1
 684 00b2 1360     		str	r3, [r2]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 685              		.loc 1 574 0
 686 00b4 FB68     		ldr	r3, [r7, #12]
 687 00b6 1B68     		ldr	r3, [r3]
 688 00b8 1A68     		ldr	r2, [r3]
 689 00ba FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvy8ygO.s 			page 23


 690 00bc 1B68     		ldr	r3, [r3]
 691 00be 42F00102 		orr	r2, r2, #1
 692 00c2 1A60     		str	r2, [r3]
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 693              		.loc 1 577 0
 694 00c4 F868     		ldr	r0, [r7, #12]
 695 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 696 00ca 0346     		mov	r3, r0
 697              	.L28:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 698              		.loc 1 578 0
 699 00cc 1846     		mov	r0, r3
 700 00ce 1837     		adds	r7, r7, #24
 701              	.LCFI23:
 702              		.cfi_def_cfa_offset 8
 703 00d0 BD46     		mov	sp, r7
 704              	.LCFI24:
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
 707 00d2 80BD     		pop	{r7, pc}
 708              	.L33:
 709              		.align	2
 710              	.L32:
 711 00d4 FFFF00FC 		.word	-67043329
 712              		.cfi_endproc
 713              	.LFE142:
 715              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_UART_DeInit
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	HAL_UART_DeInit:
 724              	.LFB143:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 725              		.loc 1 586 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
 730              	.LCFI25:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 82B0     		sub	sp, sp, #8
 735              	.LCFI26:
 736              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccvy8ygO.s 			page 24


 737 0004 00AF     		add	r7, sp, #0
 738              	.LCFI27:
 739              		.cfi_def_cfa_register 7
 740 0006 7860     		str	r0, [r7, #4]
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 741              		.loc 1 588 0
 742 0008 7B68     		ldr	r3, [r7, #4]
 743 000a 002B     		cmp	r3, #0
 744 000c 01D1     		bne	.L35
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 745              		.loc 1 590 0
 746 000e 0123     		movs	r3, #1
 747 0010 2AE0     		b	.L36
 748              	.L35:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 749              		.loc 1 596 0
 750 0012 7B68     		ldr	r3, [r7, #4]
 751 0014 2422     		movs	r2, #36
 752 0016 83F86920 		strb	r2, [r3, #105]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 753              		.loc 1 599 0
 754 001a 7B68     		ldr	r3, [r7, #4]
 755 001c 1B68     		ldr	r3, [r3]
 756 001e 1A68     		ldr	r2, [r3]
 757 0020 7B68     		ldr	r3, [r7, #4]
 758 0022 1B68     		ldr	r3, [r3]
 759 0024 22F00102 		bic	r2, r2, #1
 760 0028 1A60     		str	r2, [r3]
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 761              		.loc 1 601 0
 762 002a 7B68     		ldr	r3, [r7, #4]
 763 002c 1B68     		ldr	r3, [r3]
 764 002e 0022     		movs	r2, #0
 765 0030 1A60     		str	r2, [r3]
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 766              		.loc 1 602 0
 767 0032 7B68     		ldr	r3, [r7, #4]
 768 0034 1B68     		ldr	r3, [r3]
 769 0036 0022     		movs	r2, #0
 770 0038 5A60     		str	r2, [r3, #4]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 771              		.loc 1 603 0
 772 003a 7B68     		ldr	r3, [r7, #4]
 773 003c 1B68     		ldr	r3, [r3]
 774 003e 0022     		movs	r2, #0
 775 0040 9A60     		str	r2, [r3, #8]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 25


 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 776              		.loc 1 606 0
 777 0042 7868     		ldr	r0, [r7, #4]
 778 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 779              		.loc 1 608 0
 780 0048 7B68     		ldr	r3, [r7, #4]
 781 004a 0022     		movs	r2, #0
 782 004c DA66     		str	r2, [r3, #108]
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 783              		.loc 1 609 0
 784 004e 7B68     		ldr	r3, [r7, #4]
 785 0050 0022     		movs	r2, #0
 786 0052 83F86920 		strb	r2, [r3, #105]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 787              		.loc 1 610 0
 788 0056 7B68     		ldr	r3, [r7, #4]
 789 0058 0022     		movs	r2, #0
 790 005a 83F86A20 		strb	r2, [r3, #106]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlock */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 791              		.loc 1 613 0
 792 005e 7B68     		ldr	r3, [r7, #4]
 793 0060 0022     		movs	r2, #0
 794 0062 83F86820 		strb	r2, [r3, #104]
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 795              		.loc 1 615 0
 796 0066 0023     		movs	r3, #0
 797              	.L36:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 798              		.loc 1 616 0
 799 0068 1846     		mov	r0, r3
 800 006a 0837     		adds	r7, r7, #8
 801              	.LCFI28:
 802              		.cfi_def_cfa_offset 8
 803 006c BD46     		mov	sp, r7
 804              	.LCFI29:
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 006e 80BD     		pop	{r7, pc}
 808              		.cfi_endproc
 809              	.LFE143:
 811              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 812              		.align	1
 813              		.weak	HAL_UART_MspInit
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	HAL_UART_MspInit:
 820              	.LFB144:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccvy8ygO.s 			page 26


 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP Init
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 821              		.loc 1 624 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826 0000 80B4     		push	{r7}
 827              	.LCFI30:
 828              		.cfi_def_cfa_offset 4
 829              		.cfi_offset 7, -4
 830 0002 83B0     		sub	sp, sp, #12
 831              	.LCFI31:
 832              		.cfi_def_cfa_offset 16
 833 0004 00AF     		add	r7, sp, #0
 834              	.LCFI32:
 835              		.cfi_def_cfa_register 7
 836 0006 7860     		str	r0, [r7, #4]
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 837              		.loc 1 631 0
 838 0008 00BF     		nop
 839 000a 0C37     		adds	r7, r7, #12
 840              	.LCFI33:
 841              		.cfi_def_cfa_offset 4
 842 000c BD46     		mov	sp, r7
 843              	.LCFI34:
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 000e 5DF8047B 		ldr	r7, [sp], #4
 847              	.LCFI35:
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 0012 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE144:
 854              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 855              		.align	1
 856              		.weak	HAL_UART_MspDeInit
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	HAL_UART_MspDeInit:
 863              	.LFB145:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART MSP DeInit
ARM GAS  /tmp/ccvy8ygO.s 			page 27


 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 864              		.loc 1 639 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              	.LCFI36:
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 83B0     		sub	sp, sp, #12
 874              	.LCFI37:
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              	.LCFI38:
 878              		.cfi_def_cfa_register 7
 879 0006 7860     		str	r0, [r7, #4]
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 880              		.loc 1 646 0
 881 0008 00BF     		nop
 882 000a 0C37     		adds	r7, r7, #12
 883              	.LCFI39:
 884              		.cfi_def_cfa_offset 4
 885 000c BD46     		mov	sp, r7
 886              	.LCFI40:
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 000e 5DF8047B 		ldr	r7, [sp], #4
 890              	.LCFI41:
 891              		.cfi_restore 7
 892              		.cfi_def_cfa_offset 0
 893 0012 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE145:
 897              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 898              		.align	1
 899              		.global	HAL_UART_Transmit
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	HAL_UART_Transmit:
 906              	.LFB146:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
ARM GAS  /tmp/ccvy8ygO.s 			page 28


 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Transmit_IT()
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) UART_Receive_IT()
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 29


 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 907              		.loc 1 717 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 24
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              	.LCFI42:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 88B0     		sub	sp, sp, #32
 917              	.LCFI43:
 918              		.cfi_def_cfa_offset 40
 919 0004 02AF     		add	r7, sp, #8
 920              	.LCFI44:
 921              		.cfi_def_cfa 7, 32
 922 0006 F860     		str	r0, [r7, #12]
 923 0008 B960     		str	r1, [r7, #8]
 924 000a 3B60     		str	r3, [r7]
 925 000c 1346     		mov	r3, r2	@ movhi
 926 000e FB80     		strh	r3, [r7, #6]	@ movhi
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 927              		.loc 1 719 0
 928 0010 0023     		movs	r3, #0
 929 0012 7B61     		str	r3, [r7, #20]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 930              		.loc 1 722 0
 931 0014 FB68     		ldr	r3, [r7, #12]
 932 0016 93F86930 		ldrb	r3, [r3, #105]
 933 001a DBB2     		uxtb	r3, r3
 934 001c 202B     		cmp	r3, #32
 935 001e 76D1     		bne	.L40
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 936              		.loc 1 724 0
 937 0020 BB68     		ldr	r3, [r7, #8]
 938 0022 002B     		cmp	r3, #0
 939 0024 02D0     		beq	.L41
 940              		.loc 1 724 0 is_stmt 0 discriminator 1
 941 0026 FB88     		ldrh	r3, [r7, #6]
 942 0028 002B     		cmp	r3, #0
 943 002a 01D1     		bne	.L42
 944              	.L41:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
ARM GAS  /tmp/ccvy8ygO.s 			page 30


 945              		.loc 1 726 0 is_stmt 1
 946 002c 0123     		movs	r3, #1
 947 002e 6FE0     		b	.L43
 948              	.L42:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 949              		.loc 1 730 0
 950 0030 FB68     		ldr	r3, [r7, #12]
 951 0032 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 952 0036 012B     		cmp	r3, #1
 953 0038 01D1     		bne	.L44
 954              		.loc 1 730 0 is_stmt 0 discriminator 1
 955 003a 0223     		movs	r3, #2
 956 003c 68E0     		b	.L43
 957              	.L44:
 958              		.loc 1 730 0 discriminator 2
 959 003e FB68     		ldr	r3, [r7, #12]
 960 0040 0122     		movs	r2, #1
 961 0042 83F86820 		strb	r2, [r3, #104]
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 962              		.loc 1 732 0 is_stmt 1 discriminator 2
 963 0046 FB68     		ldr	r3, [r7, #12]
 964 0048 0022     		movs	r2, #0
 965 004a DA66     		str	r2, [r3, #108]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 966              		.loc 1 733 0 discriminator 2
 967 004c FB68     		ldr	r3, [r7, #12]
 968 004e 2122     		movs	r2, #33
 969 0050 83F86920 		strb	r2, [r3, #105]
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 970              		.loc 1 736 0 discriminator 2
 971 0054 FFF7FEFF 		bl	HAL_GetTick
 972 0058 7861     		str	r0, [r7, #20]
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 973              		.loc 1 738 0 discriminator 2
 974 005a FB68     		ldr	r3, [r7, #12]
 975 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 976 005e A3F85020 		strh	r2, [r3, #80]	@ movhi
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 977              		.loc 1 739 0 discriminator 2
 978 0062 FB68     		ldr	r3, [r7, #12]
 979 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 980 0066 A3F85220 		strh	r2, [r3, #82]	@ movhi
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 981              		.loc 1 740 0 discriminator 2
 982 006a 33E0     		b	.L45
 983              	.L48:
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 984              		.loc 1 742 0
 985 006c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvy8ygO.s 			page 31


 986 006e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 987 0072 9BB2     		uxth	r3, r3
 988 0074 013B     		subs	r3, r3, #1
 989 0076 9AB2     		uxth	r2, r3
 990 0078 FB68     		ldr	r3, [r7, #12]
 991 007a A3F85220 		strh	r2, [r3, #82]	@ movhi
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 992              		.loc 1 743 0
 993 007e 3B68     		ldr	r3, [r7]
 994 0080 0093     		str	r3, [sp]
 995 0082 7B69     		ldr	r3, [r7, #20]
 996 0084 0022     		movs	r2, #0
 997 0086 8021     		movs	r1, #128
 998 0088 F868     		ldr	r0, [r7, #12]
 999 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1000 008e 0346     		mov	r3, r0
 1001 0090 002B     		cmp	r3, #0
 1002 0092 01D0     		beq	.L46
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1003              		.loc 1 745 0
 1004 0094 0323     		movs	r3, #3
 1005 0096 3BE0     		b	.L43
 1006              	.L46:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1007              		.loc 1 747 0
 1008 0098 FB68     		ldr	r3, [r7, #12]
 1009 009a 9B68     		ldr	r3, [r3, #8]
 1010 009c B3F5805F 		cmp	r3, #4096
 1011 00a0 11D1     		bne	.L47
 1012              		.loc 1 747 0 is_stmt 0 discriminator 1
 1013 00a2 FB68     		ldr	r3, [r7, #12]
 1014 00a4 1B69     		ldr	r3, [r3, #16]
 1015 00a6 002B     		cmp	r3, #0
 1016 00a8 0DD1     		bne	.L47
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 1017              		.loc 1 749 0 is_stmt 1
 1018 00aa BB68     		ldr	r3, [r7, #8]
 1019 00ac 3B61     		str	r3, [r7, #16]
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 1020              		.loc 1 750 0
 1021 00ae 3B69     		ldr	r3, [r7, #16]
 1022 00b0 1B88     		ldrh	r3, [r3]
 1023 00b2 1A46     		mov	r2, r3
 1024 00b4 FB68     		ldr	r3, [r7, #12]
 1025 00b6 1B68     		ldr	r3, [r3]
 1026 00b8 C2F30802 		ubfx	r2, r2, #0, #9
 1027 00bc 9A62     		str	r2, [r3, #40]
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData += 2;
 1028              		.loc 1 751 0
 1029 00be BB68     		ldr	r3, [r7, #8]
 1030 00c0 0233     		adds	r3, r3, #2
 1031 00c2 BB60     		str	r3, [r7, #8]
 1032 00c4 06E0     		b	.L45
 1033              	.L47:
ARM GAS  /tmp/ccvy8ygO.s 			page 32


 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 1034              		.loc 1 755 0
 1035 00c6 BB68     		ldr	r3, [r7, #8]
 1036 00c8 5A1C     		adds	r2, r3, #1
 1037 00ca BA60     		str	r2, [r7, #8]
 1038 00cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1039 00ce FB68     		ldr	r3, [r7, #12]
 1040 00d0 1B68     		ldr	r3, [r3]
 1041 00d2 9A62     		str	r2, [r3, #40]
 1042              	.L45:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1043              		.loc 1 740 0
 1044 00d4 FB68     		ldr	r3, [r7, #12]
 1045 00d6 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 1046 00da 9BB2     		uxth	r3, r3
 1047 00dc 002B     		cmp	r3, #0
 1048 00de C5D1     		bne	.L48
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1049              		.loc 1 758 0
 1050 00e0 3B68     		ldr	r3, [r7]
 1051 00e2 0093     		str	r3, [sp]
 1052 00e4 7B69     		ldr	r3, [r7, #20]
 1053 00e6 0022     		movs	r2, #0
 1054 00e8 4021     		movs	r1, #64
 1055 00ea F868     		ldr	r0, [r7, #12]
 1056 00ec FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1057 00f0 0346     		mov	r3, r0
 1058 00f2 002B     		cmp	r3, #0
 1059 00f4 01D0     		beq	.L49
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 1060              		.loc 1 760 0
 1061 00f6 0323     		movs	r3, #3
 1062 00f8 0AE0     		b	.L43
 1063              	.L49:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1064              		.loc 1 764 0
 1065 00fa FB68     		ldr	r3, [r7, #12]
 1066 00fc 2022     		movs	r2, #32
 1067 00fe 83F86920 		strb	r2, [r3, #105]
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1068              		.loc 1 767 0
 1069 0102 FB68     		ldr	r3, [r7, #12]
 1070 0104 0022     		movs	r2, #0
 1071 0106 83F86820 		strb	r2, [r3, #104]
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /tmp/ccvy8ygO.s 			page 33


 1072              		.loc 1 769 0
 1073 010a 0023     		movs	r3, #0
 1074 010c 00E0     		b	.L43
 1075              	.L40:
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1076              		.loc 1 773 0
 1077 010e 0223     		movs	r3, #2
 1078              	.L43:
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1079              		.loc 1 775 0
 1080 0110 1846     		mov	r0, r3
 1081 0112 1837     		adds	r7, r7, #24
 1082              	.LCFI45:
 1083              		.cfi_def_cfa_offset 8
 1084 0114 BD46     		mov	sp, r7
 1085              	.LCFI46:
 1086              		.cfi_def_cfa_register 13
 1087              		@ sp needed
 1088 0116 80BD     		pop	{r7, pc}
 1089              		.cfi_endproc
 1090              	.LFE146:
 1092              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1093              		.align	1
 1094              		.global	HAL_UART_Receive
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu fpv4-sp-d16
 1100              	HAL_UART_Receive:
 1101              	.LFB147:
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1102              		.loc 1 786 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 32
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              	.LCFI47:
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 7, -8
 1110              		.cfi_offset 14, -4
 1111 0002 8AB0     		sub	sp, sp, #40
 1112              	.LCFI48:
 1113              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/ccvy8ygO.s 			page 34


 1114 0004 02AF     		add	r7, sp, #8
 1115              	.LCFI49:
 1116              		.cfi_def_cfa 7, 40
 1117 0006 F860     		str	r0, [r7, #12]
 1118 0008 B960     		str	r1, [r7, #8]
 1119 000a 3B60     		str	r3, [r7]
 1120 000c 1346     		mov	r3, r2	@ movhi
 1121 000e FB80     		strh	r3, [r7, #6]	@ movhi
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1122              		.loc 1 789 0
 1123 0010 0023     		movs	r3, #0
 1124 0012 FB61     		str	r3, [r7, #28]
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1125              		.loc 1 792 0
 1126 0014 FB68     		ldr	r3, [r7, #12]
 1127 0016 93F86A30 		ldrb	r3, [r3, #106]
 1128 001a DBB2     		uxtb	r3, r3
 1129 001c 202B     		cmp	r3, #32
 1130 001e 40F0AC80 		bne	.L51
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1131              		.loc 1 794 0
 1132 0022 BB68     		ldr	r3, [r7, #8]
 1133 0024 002B     		cmp	r3, #0
 1134 0026 02D0     		beq	.L52
 1135              		.loc 1 794 0 is_stmt 0 discriminator 1
 1136 0028 FB88     		ldrh	r3, [r7, #6]
 1137 002a 002B     		cmp	r3, #0
 1138 002c 01D1     		bne	.L53
 1139              	.L52:
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 1140              		.loc 1 796 0 is_stmt 1
 1141 002e 0123     		movs	r3, #1
 1142 0030 A4E0     		b	.L54
 1143              	.L53:
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1144              		.loc 1 800 0
 1145 0032 FB68     		ldr	r3, [r7, #12]
 1146 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1147 0038 012B     		cmp	r3, #1
 1148 003a 01D1     		bne	.L55
 1149              		.loc 1 800 0 is_stmt 0 discriminator 1
 1150 003c 0223     		movs	r3, #2
 1151 003e 9DE0     		b	.L54
 1152              	.L55:
 1153              		.loc 1 800 0 discriminator 2
 1154 0040 FB68     		ldr	r3, [r7, #12]
 1155 0042 0122     		movs	r2, #1
 1156 0044 83F86820 		strb	r2, [r3, #104]
ARM GAS  /tmp/ccvy8ygO.s 			page 35


 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1157              		.loc 1 802 0 is_stmt 1 discriminator 2
 1158 0048 FB68     		ldr	r3, [r7, #12]
 1159 004a 0022     		movs	r2, #0
 1160 004c DA66     		str	r2, [r3, #108]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1161              		.loc 1 803 0 discriminator 2
 1162 004e FB68     		ldr	r3, [r7, #12]
 1163 0050 2222     		movs	r2, #34
 1164 0052 83F86A20 		strb	r2, [r3, #106]
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1165              		.loc 1 806 0 discriminator 2
 1166 0056 FFF7FEFF 		bl	HAL_GetTick
 1167 005a F861     		str	r0, [r7, #28]
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1168              		.loc 1 808 0 discriminator 2
 1169 005c FB68     		ldr	r3, [r7, #12]
 1170 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1171 0060 A3F85820 		strh	r2, [r3, #88]	@ movhi
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1172              		.loc 1 809 0 discriminator 2
 1173 0064 FB68     		ldr	r3, [r7, #12]
 1174 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1175 0068 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1176              		.loc 1 812 0 discriminator 2
 1177 006c FB68     		ldr	r3, [r7, #12]
 1178 006e 9B68     		ldr	r3, [r3, #8]
 1179 0070 B3F5805F 		cmp	r3, #4096
 1180 0074 0ED1     		bne	.L56
 1181              		.loc 1 812 0 is_stmt 0 discriminator 1
 1182 0076 FB68     		ldr	r3, [r7, #12]
 1183 0078 1B69     		ldr	r3, [r3, #16]
 1184 007a 002B     		cmp	r3, #0
 1185 007c 05D1     		bne	.L57
 1186              		.loc 1 812 0 discriminator 3
 1187 007e FB68     		ldr	r3, [r7, #12]
 1188 0080 40F2FF12 		movw	r2, #511
 1189 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1190 0088 28E0     		b	.L59
 1191              	.L57:
 1192              		.loc 1 812 0 discriminator 4
 1193 008a FB68     		ldr	r3, [r7, #12]
 1194 008c FF22     		movs	r2, #255
 1195 008e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1196 0092 23E0     		b	.L59
 1197              	.L56:
 1198              		.loc 1 812 0 discriminator 2
 1199 0094 FB68     		ldr	r3, [r7, #12]
 1200 0096 9B68     		ldr	r3, [r3, #8]
 1201 0098 002B     		cmp	r3, #0
ARM GAS  /tmp/ccvy8ygO.s 			page 36


 1202 009a 0DD1     		bne	.L60
 1203              		.loc 1 812 0 discriminator 5
 1204 009c FB68     		ldr	r3, [r7, #12]
 1205 009e 1B69     		ldr	r3, [r3, #16]
 1206 00a0 002B     		cmp	r3, #0
 1207 00a2 04D1     		bne	.L61
 1208              		.loc 1 812 0 discriminator 7
 1209 00a4 FB68     		ldr	r3, [r7, #12]
 1210 00a6 FF22     		movs	r2, #255
 1211 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1212 00ac 16E0     		b	.L59
 1213              	.L61:
 1214              		.loc 1 812 0 discriminator 8
 1215 00ae FB68     		ldr	r3, [r7, #12]
 1216 00b0 7F22     		movs	r2, #127
 1217 00b2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1218 00b6 11E0     		b	.L59
 1219              	.L60:
 1220              		.loc 1 812 0 discriminator 6
 1221 00b8 FB68     		ldr	r3, [r7, #12]
 1222 00ba 9B68     		ldr	r3, [r3, #8]
 1223 00bc B3F1805F 		cmp	r3, #268435456
 1224 00c0 0CD1     		bne	.L59
 1225              		.loc 1 812 0 discriminator 9
 1226 00c2 FB68     		ldr	r3, [r7, #12]
 1227 00c4 1B69     		ldr	r3, [r3, #16]
 1228 00c6 002B     		cmp	r3, #0
 1229 00c8 04D1     		bne	.L63
 1230              		.loc 1 812 0 discriminator 10
 1231 00ca FB68     		ldr	r3, [r7, #12]
 1232 00cc 7F22     		movs	r2, #127
 1233 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1234 00d2 03E0     		b	.L59
 1235              	.L63:
 1236              		.loc 1 812 0 discriminator 11
 1237 00d4 FB68     		ldr	r3, [r7, #12]
 1238 00d6 3F22     		movs	r2, #63
 1239 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1240              	.L59:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1241              		.loc 1 813 0 is_stmt 1
 1242 00dc FB68     		ldr	r3, [r7, #12]
 1243 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1244 00e2 7B83     		strh	r3, [r7, #26]	@ movhi
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 1245              		.loc 1 816 0
 1246 00e4 39E0     		b	.L64
 1247              	.L67:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 1248              		.loc 1 818 0
 1249 00e6 FB68     		ldr	r3, [r7, #12]
 1250 00e8 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1251 00ec 9BB2     		uxth	r3, r3
 1252 00ee 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccvy8ygO.s 			page 37


 1253 00f0 9AB2     		uxth	r2, r3
 1254 00f2 FB68     		ldr	r3, [r7, #12]
 1255 00f4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1256              		.loc 1 819 0
 1257 00f8 3B68     		ldr	r3, [r7]
 1258 00fa 0093     		str	r3, [sp]
 1259 00fc FB69     		ldr	r3, [r7, #28]
 1260 00fe 0022     		movs	r2, #0
 1261 0100 2021     		movs	r1, #32
 1262 0102 F868     		ldr	r0, [r7, #12]
 1263 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1264 0108 0346     		mov	r3, r0
 1265 010a 002B     		cmp	r3, #0
 1266 010c 01D0     		beq	.L65
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1267              		.loc 1 821 0
 1268 010e 0323     		movs	r3, #3
 1269 0110 34E0     		b	.L54
 1270              	.L65:
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1271              		.loc 1 823 0
 1272 0112 FB68     		ldr	r3, [r7, #12]
 1273 0114 9B68     		ldr	r3, [r3, #8]
 1274 0116 B3F5805F 		cmp	r3, #4096
 1275 011a 12D1     		bne	.L66
 1276              		.loc 1 823 0 is_stmt 0 discriminator 1
 1277 011c FB68     		ldr	r3, [r7, #12]
 1278 011e 1B69     		ldr	r3, [r3, #16]
 1279 0120 002B     		cmp	r3, #0
 1280 0122 0ED1     		bne	.L66
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1281              		.loc 1 825 0 is_stmt 1
 1282 0124 BB68     		ldr	r3, [r7, #8]
 1283 0126 7B61     		str	r3, [r7, #20]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1284              		.loc 1 826 0
 1285 0128 FB68     		ldr	r3, [r7, #12]
 1286 012a 1B68     		ldr	r3, [r3]
 1287 012c 5B6A     		ldr	r3, [r3, #36]
 1288 012e 9AB2     		uxth	r2, r3
 1289 0130 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1290 0132 1340     		ands	r3, r3, r2
 1291 0134 9AB2     		uxth	r2, r3
 1292 0136 7B69     		ldr	r3, [r7, #20]
 1293 0138 1A80     		strh	r2, [r3]	@ movhi
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pData +=2U;
 1294              		.loc 1 827 0
 1295 013a BB68     		ldr	r3, [r7, #8]
 1296 013c 0233     		adds	r3, r3, #2
 1297 013e BB60     		str	r3, [r7, #8]
 1298 0140 0BE0     		b	.L64
 1299              	.L66:
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
ARM GAS  /tmp/ccvy8ygO.s 			page 38


 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1300              		.loc 1 831 0
 1301 0142 FB68     		ldr	r3, [r7, #12]
 1302 0144 1B68     		ldr	r3, [r3]
 1303 0146 5B6A     		ldr	r3, [r3, #36]
 1304 0148 D9B2     		uxtb	r1, r3
 1305 014a 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1306 014c DAB2     		uxtb	r2, r3
 1307 014e BB68     		ldr	r3, [r7, #8]
 1308 0150 581C     		adds	r0, r3, #1
 1309 0152 B860     		str	r0, [r7, #8]
 1310 0154 0A40     		ands	r2, r2, r1
 1311 0156 D2B2     		uxtb	r2, r2
 1312 0158 1A70     		strb	r2, [r3]
 1313              	.L64:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1314              		.loc 1 816 0
 1315 015a FB68     		ldr	r3, [r7, #12]
 1316 015c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1317 0160 9BB2     		uxth	r3, r3
 1318 0162 002B     		cmp	r3, #0
 1319 0164 BFD1     		bne	.L67
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1320              		.loc 1 836 0
 1321 0166 FB68     		ldr	r3, [r7, #12]
 1322 0168 2022     		movs	r2, #32
 1323 016a 83F86A20 		strb	r2, [r3, #106]
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1324              		.loc 1 839 0
 1325 016e FB68     		ldr	r3, [r7, #12]
 1326 0170 0022     		movs	r2, #0
 1327 0172 83F86820 		strb	r2, [r3, #104]
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1328              		.loc 1 841 0
 1329 0176 0023     		movs	r3, #0
 1330 0178 00E0     		b	.L54
 1331              	.L51:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1332              		.loc 1 845 0
 1333 017a 0223     		movs	r3, #2
 1334              	.L54:
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1335              		.loc 1 847 0
 1336 017c 1846     		mov	r0, r3
ARM GAS  /tmp/ccvy8ygO.s 			page 39


 1337 017e 2037     		adds	r7, r7, #32
 1338              	.LCFI50:
 1339              		.cfi_def_cfa_offset 8
 1340 0180 BD46     		mov	sp, r7
 1341              	.LCFI51:
 1342              		.cfi_def_cfa_register 13
 1343              		@ sp needed
 1344 0182 80BD     		pop	{r7, pc}
 1345              		.cfi_endproc
 1346              	.LFE147:
 1348              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1349              		.align	1
 1350              		.global	HAL_UART_Transmit_IT
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1354              		.fpu fpv4-sp-d16
 1356              	HAL_UART_Transmit_IT:
 1357              	.LFB148:
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1358              		.loc 1 857 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 16
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362              		@ link register save eliminated.
 1363 0000 80B4     		push	{r7}
 1364              	.LCFI52:
 1365              		.cfi_def_cfa_offset 4
 1366              		.cfi_offset 7, -4
 1367 0002 85B0     		sub	sp, sp, #20
 1368              	.LCFI53:
 1369              		.cfi_def_cfa_offset 24
 1370 0004 00AF     		add	r7, sp, #0
 1371              	.LCFI54:
 1372              		.cfi_def_cfa_register 7
 1373 0006 F860     		str	r0, [r7, #12]
 1374 0008 B960     		str	r1, [r7, #8]
 1375 000a 1346     		mov	r3, r2
 1376 000c FB80     		strh	r3, [r7, #6]	@ movhi
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1377              		.loc 1 859 0
 1378 000e FB68     		ldr	r3, [r7, #12]
 1379 0010 93F86930 		ldrb	r3, [r3, #105]
 1380 0014 DBB2     		uxtb	r3, r3
 1381 0016 202B     		cmp	r3, #32
 1382 0018 32D1     		bne	.L69
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccvy8ygO.s 			page 40


 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1383              		.loc 1 861 0
 1384 001a BB68     		ldr	r3, [r7, #8]
 1385 001c 002B     		cmp	r3, #0
 1386 001e 02D0     		beq	.L70
 1387              		.loc 1 861 0 is_stmt 0 discriminator 1
 1388 0020 FB88     		ldrh	r3, [r7, #6]
 1389 0022 002B     		cmp	r3, #0
 1390 0024 01D1     		bne	.L71
 1391              	.L70:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1392              		.loc 1 863 0 is_stmt 1
 1393 0026 0123     		movs	r3, #1
 1394 0028 2BE0     		b	.L72
 1395              	.L71:
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1396              		.loc 1 867 0
 1397 002a FB68     		ldr	r3, [r7, #12]
 1398 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1399 0030 012B     		cmp	r3, #1
 1400 0032 01D1     		bne	.L73
 1401              		.loc 1 867 0 is_stmt 0 discriminator 1
 1402 0034 0223     		movs	r3, #2
 1403 0036 24E0     		b	.L72
 1404              	.L73:
 1405              		.loc 1 867 0 discriminator 2
 1406 0038 FB68     		ldr	r3, [r7, #12]
 1407 003a 0122     		movs	r2, #1
 1408 003c 83F86820 		strb	r2, [r3, #104]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1409              		.loc 1 869 0 is_stmt 1 discriminator 2
 1410 0040 FB68     		ldr	r3, [r7, #12]
 1411 0042 BA68     		ldr	r2, [r7, #8]
 1412 0044 DA64     		str	r2, [r3, #76]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 1413              		.loc 1 870 0 discriminator 2
 1414 0046 FB68     		ldr	r3, [r7, #12]
 1415 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1416 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1417              		.loc 1 871 0 discriminator 2
 1418 004e FB68     		ldr	r3, [r7, #12]
 1419 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1420 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1421              		.loc 1 873 0 discriminator 2
 1422 0056 FB68     		ldr	r3, [r7, #12]
 1423 0058 0022     		movs	r2, #0
 1424 005a DA66     		str	r2, [r3, #108]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1425              		.loc 1 874 0 discriminator 2
ARM GAS  /tmp/ccvy8ygO.s 			page 41


 1426 005c FB68     		ldr	r3, [r7, #12]
 1427 005e 2122     		movs	r2, #33
 1428 0060 83F86920 		strb	r2, [r3, #105]
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1429              		.loc 1 877 0 discriminator 2
 1430 0064 FB68     		ldr	r3, [r7, #12]
 1431 0066 0022     		movs	r2, #0
 1432 0068 83F86820 		strb	r2, [r3, #104]
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1433              		.loc 1 880 0 discriminator 2
 1434 006c FB68     		ldr	r3, [r7, #12]
 1435 006e 1B68     		ldr	r3, [r3]
 1436 0070 1A68     		ldr	r2, [r3]
 1437 0072 FB68     		ldr	r3, [r7, #12]
 1438 0074 1B68     		ldr	r3, [r3]
 1439 0076 42F08002 		orr	r2, r2, #128
 1440 007a 1A60     		str	r2, [r3]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1441              		.loc 1 882 0 discriminator 2
 1442 007c 0023     		movs	r3, #0
 1443 007e 00E0     		b	.L72
 1444              	.L69:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1445              		.loc 1 886 0
 1446 0080 0223     		movs	r3, #2
 1447              	.L72:
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1448              		.loc 1 888 0
 1449 0082 1846     		mov	r0, r3
 1450 0084 1437     		adds	r7, r7, #20
 1451              	.LCFI55:
 1452              		.cfi_def_cfa_offset 4
 1453 0086 BD46     		mov	sp, r7
 1454              	.LCFI56:
 1455              		.cfi_def_cfa_register 13
 1456              		@ sp needed
 1457 0088 5DF8047B 		ldr	r7, [sp], #4
 1458              	.LCFI57:
 1459              		.cfi_restore 7
 1460              		.cfi_def_cfa_offset 0
 1461 008c 7047     		bx	lr
 1462              		.cfi_endproc
 1463              	.LFE148:
 1465              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1466              		.align	1
 1467              		.global	HAL_UART_Receive_IT
 1468              		.syntax unified
 1469              		.thumb
ARM GAS  /tmp/ccvy8ygO.s 			page 42


 1470              		.thumb_func
 1471              		.fpu fpv4-sp-d16
 1473              	HAL_UART_Receive_IT:
 1474              	.LFB149:
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1475              		.loc 1 898 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 16
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479              		@ link register save eliminated.
 1480 0000 80B4     		push	{r7}
 1481              	.LCFI58:
 1482              		.cfi_def_cfa_offset 4
 1483              		.cfi_offset 7, -4
 1484 0002 85B0     		sub	sp, sp, #20
 1485              	.LCFI59:
 1486              		.cfi_def_cfa_offset 24
 1487 0004 00AF     		add	r7, sp, #0
 1488              	.LCFI60:
 1489              		.cfi_def_cfa_register 7
 1490 0006 F860     		str	r0, [r7, #12]
 1491 0008 B960     		str	r1, [r7, #8]
 1492 000a 1346     		mov	r3, r2
 1493 000c FB80     		strh	r3, [r7, #6]	@ movhi
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1494              		.loc 1 900 0
 1495 000e FB68     		ldr	r3, [r7, #12]
 1496 0010 93F86A30 		ldrb	r3, [r3, #106]
 1497 0014 DBB2     		uxtb	r3, r3
 1498 0016 202B     		cmp	r3, #32
 1499 0018 72D1     		bne	.L75
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1500              		.loc 1 902 0
 1501 001a BB68     		ldr	r3, [r7, #8]
 1502 001c 002B     		cmp	r3, #0
 1503 001e 02D0     		beq	.L76
 1504              		.loc 1 902 0 is_stmt 0 discriminator 1
 1505 0020 FB88     		ldrh	r3, [r7, #6]
 1506 0022 002B     		cmp	r3, #0
 1507 0024 01D1     		bne	.L77
 1508              	.L76:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1509              		.loc 1 904 0 is_stmt 1
 1510 0026 0123     		movs	r3, #1
 1511 0028 6BE0     		b	.L78
ARM GAS  /tmp/ccvy8ygO.s 			page 43


 1512              	.L77:
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1513              		.loc 1 908 0
 1514 002a FB68     		ldr	r3, [r7, #12]
 1515 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1516 0030 012B     		cmp	r3, #1
 1517 0032 01D1     		bne	.L79
 1518              		.loc 1 908 0 is_stmt 0 discriminator 1
 1519 0034 0223     		movs	r3, #2
 1520 0036 64E0     		b	.L78
 1521              	.L79:
 1522              		.loc 1 908 0 discriminator 2
 1523 0038 FB68     		ldr	r3, [r7, #12]
 1524 003a 0122     		movs	r2, #1
 1525 003c 83F86820 		strb	r2, [r3, #104]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1526              		.loc 1 910 0 is_stmt 1 discriminator 2
 1527 0040 FB68     		ldr	r3, [r7, #12]
 1528 0042 BA68     		ldr	r2, [r7, #8]
 1529 0044 5A65     		str	r2, [r3, #84]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1530              		.loc 1 911 0 discriminator 2
 1531 0046 FB68     		ldr	r3, [r7, #12]
 1532 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1533 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1534              		.loc 1 912 0 discriminator 2
 1535 004e FB68     		ldr	r3, [r7, #12]
 1536 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1537 0052 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1538              		.loc 1 915 0 discriminator 2
 1539 0056 FB68     		ldr	r3, [r7, #12]
 1540 0058 9B68     		ldr	r3, [r3, #8]
 1541 005a B3F5805F 		cmp	r3, #4096
 1542 005e 0ED1     		bne	.L80
 1543              		.loc 1 915 0 is_stmt 0 discriminator 1
 1544 0060 FB68     		ldr	r3, [r7, #12]
 1545 0062 1B69     		ldr	r3, [r3, #16]
 1546 0064 002B     		cmp	r3, #0
 1547 0066 05D1     		bne	.L81
 1548              		.loc 1 915 0 discriminator 3
 1549 0068 FB68     		ldr	r3, [r7, #12]
 1550 006a 40F2FF12 		movw	r2, #511
 1551 006e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1552 0072 28E0     		b	.L83
 1553              	.L81:
 1554              		.loc 1 915 0 discriminator 4
 1555 0074 FB68     		ldr	r3, [r7, #12]
 1556 0076 FF22     		movs	r2, #255
 1557 0078 A3F85C20 		strh	r2, [r3, #92]	@ movhi
ARM GAS  /tmp/ccvy8ygO.s 			page 44


 1558 007c 23E0     		b	.L83
 1559              	.L80:
 1560              		.loc 1 915 0 discriminator 2
 1561 007e FB68     		ldr	r3, [r7, #12]
 1562 0080 9B68     		ldr	r3, [r3, #8]
 1563 0082 002B     		cmp	r3, #0
 1564 0084 0DD1     		bne	.L84
 1565              		.loc 1 915 0 discriminator 5
 1566 0086 FB68     		ldr	r3, [r7, #12]
 1567 0088 1B69     		ldr	r3, [r3, #16]
 1568 008a 002B     		cmp	r3, #0
 1569 008c 04D1     		bne	.L85
 1570              		.loc 1 915 0 discriminator 7
 1571 008e FB68     		ldr	r3, [r7, #12]
 1572 0090 FF22     		movs	r2, #255
 1573 0092 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1574 0096 16E0     		b	.L83
 1575              	.L85:
 1576              		.loc 1 915 0 discriminator 8
 1577 0098 FB68     		ldr	r3, [r7, #12]
 1578 009a 7F22     		movs	r2, #127
 1579 009c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1580 00a0 11E0     		b	.L83
 1581              	.L84:
 1582              		.loc 1 915 0 discriminator 6
 1583 00a2 FB68     		ldr	r3, [r7, #12]
 1584 00a4 9B68     		ldr	r3, [r3, #8]
 1585 00a6 B3F1805F 		cmp	r3, #268435456
 1586 00aa 0CD1     		bne	.L83
 1587              		.loc 1 915 0 discriminator 9
 1588 00ac FB68     		ldr	r3, [r7, #12]
 1589 00ae 1B69     		ldr	r3, [r3, #16]
 1590 00b0 002B     		cmp	r3, #0
 1591 00b2 04D1     		bne	.L87
 1592              		.loc 1 915 0 discriminator 10
 1593 00b4 FB68     		ldr	r3, [r7, #12]
 1594 00b6 7F22     		movs	r2, #127
 1595 00b8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1596 00bc 03E0     		b	.L83
 1597              	.L87:
 1598              		.loc 1 915 0 discriminator 11
 1599 00be FB68     		ldr	r3, [r7, #12]
 1600 00c0 3F22     		movs	r2, #63
 1601 00c2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1602              	.L83:
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1603              		.loc 1 917 0 is_stmt 1
 1604 00c6 FB68     		ldr	r3, [r7, #12]
 1605 00c8 0022     		movs	r2, #0
 1606 00ca DA66     		str	r2, [r3, #108]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1607              		.loc 1 918 0
 1608 00cc FB68     		ldr	r3, [r7, #12]
 1609 00ce 2222     		movs	r2, #34
 1610 00d0 83F86A20 		strb	r2, [r3, #106]
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 45


 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1611              		.loc 1 921 0
 1612 00d4 FB68     		ldr	r3, [r7, #12]
 1613 00d6 0022     		movs	r2, #0
 1614 00d8 83F86820 		strb	r2, [r3, #104]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1615              		.loc 1 924 0
 1616 00dc FB68     		ldr	r3, [r7, #12]
 1617 00de 1B68     		ldr	r3, [r3]
 1618 00e0 9A68     		ldr	r2, [r3, #8]
 1619 00e2 FB68     		ldr	r3, [r7, #12]
 1620 00e4 1B68     		ldr	r3, [r3]
 1621 00e6 42F00102 		orr	r2, r2, #1
 1622 00ea 9A60     		str	r2, [r3, #8]
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1623              		.loc 1 927 0
 1624 00ec FB68     		ldr	r3, [r7, #12]
 1625 00ee 1B68     		ldr	r3, [r3]
 1626 00f0 1A68     		ldr	r2, [r3]
 1627 00f2 FB68     		ldr	r3, [r7, #12]
 1628 00f4 1B68     		ldr	r3, [r3]
 1629 00f6 42F49072 		orr	r2, r2, #288
 1630 00fa 1A60     		str	r2, [r3]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1631              		.loc 1 929 0
 1632 00fc 0023     		movs	r3, #0
 1633 00fe 00E0     		b	.L78
 1634              	.L75:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1635              		.loc 1 933 0
 1636 0100 0223     		movs	r3, #2
 1637              	.L78:
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1638              		.loc 1 935 0
 1639 0102 1846     		mov	r0, r3
 1640 0104 1437     		adds	r7, r7, #20
 1641              	.LCFI61:
 1642              		.cfi_def_cfa_offset 4
 1643 0106 BD46     		mov	sp, r7
 1644              	.LCFI62:
 1645              		.cfi_def_cfa_register 13
 1646              		@ sp needed
 1647 0108 5DF8047B 		ldr	r7, [sp], #4
 1648              	.LCFI63:
 1649              		.cfi_restore 7
 1650              		.cfi_def_cfa_offset 0
 1651 010c 7047     		bx	lr
ARM GAS  /tmp/ccvy8ygO.s 			page 46


 1652              		.cfi_endproc
 1653              	.LFE149:
 1655              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1656              		.align	1
 1657              		.global	HAL_UART_Transmit_DMA
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1661              		.fpu fpv4-sp-d16
 1663              	HAL_UART_Transmit_DMA:
 1664              	.LFB150:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be sent.
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1665              		.loc 1 945 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 24
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0000 80B5     		push	{r7, lr}
 1670              	.LCFI64:
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 7, -8
 1673              		.cfi_offset 14, -4
 1674 0002 86B0     		sub	sp, sp, #24
 1675              	.LCFI65:
 1676              		.cfi_def_cfa_offset 32
 1677 0004 00AF     		add	r7, sp, #0
 1678              	.LCFI66:
 1679              		.cfi_def_cfa_register 7
 1680 0006 F860     		str	r0, [r7, #12]
 1681 0008 B960     		str	r1, [r7, #8]
 1682 000a 1346     		mov	r3, r2
 1683 000c FB80     		strh	r3, [r7, #6]	@ movhi
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1684              		.loc 1 949 0
 1685 000e FB68     		ldr	r3, [r7, #12]
 1686 0010 93F86930 		ldrb	r3, [r3, #105]
 1687 0014 DBB2     		uxtb	r3, r3
 1688 0016 202B     		cmp	r3, #32
 1689 0018 54D1     		bne	.L89
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1690              		.loc 1 951 0
 1691 001a BB68     		ldr	r3, [r7, #8]
 1692 001c 002B     		cmp	r3, #0
 1693 001e 02D0     		beq	.L90
 1694              		.loc 1 951 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccvy8ygO.s 			page 47


 1695 0020 FB88     		ldrh	r3, [r7, #6]
 1696 0022 002B     		cmp	r3, #0
 1697 0024 01D1     		bne	.L91
 1698              	.L90:
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1699              		.loc 1 953 0 is_stmt 1
 1700 0026 0123     		movs	r3, #1
 1701 0028 4DE0     		b	.L92
 1702              	.L91:
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1703              		.loc 1 957 0
 1704 002a FB68     		ldr	r3, [r7, #12]
 1705 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1706 0030 012B     		cmp	r3, #1
 1707 0032 01D1     		bne	.L93
 1708              		.loc 1 957 0 is_stmt 0 discriminator 1
 1709 0034 0223     		movs	r3, #2
 1710 0036 46E0     		b	.L92
 1711              	.L93:
 1712              		.loc 1 957 0 discriminator 2
 1713 0038 FB68     		ldr	r3, [r7, #12]
 1714 003a 0122     		movs	r2, #1
 1715 003c 83F86820 		strb	r2, [r3, #104]
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1716              		.loc 1 959 0 is_stmt 1 discriminator 2
 1717 0040 BA68     		ldr	r2, [r7, #8]
 1718 0042 FB68     		ldr	r3, [r7, #12]
 1719 0044 DA64     		str	r2, [r3, #76]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize = Size;
 1720              		.loc 1 960 0 discriminator 2
 1721 0046 FB68     		ldr	r3, [r7, #12]
 1722 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1723 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1724              		.loc 1 961 0 discriminator 2
 1725 004e FB68     		ldr	r3, [r7, #12]
 1726 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1727 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1728              		.loc 1 963 0 discriminator 2
 1729 0056 FB68     		ldr	r3, [r7, #12]
 1730 0058 0022     		movs	r2, #0
 1731 005a DA66     		str	r2, [r3, #108]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1732              		.loc 1 964 0 discriminator 2
 1733 005c FB68     		ldr	r3, [r7, #12]
 1734 005e 2122     		movs	r2, #33
 1735 0060 83F86920 		strb	r2, [r3, #105]
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
ARM GAS  /tmp/ccvy8ygO.s 			page 48


 1736              		.loc 1 967 0 discriminator 2
 1737 0064 FB68     		ldr	r3, [r7, #12]
 1738 0066 1B6E     		ldr	r3, [r3, #96]
 1739 0068 194A     		ldr	r2, .L94
 1740 006a DA63     		str	r2, [r3, #60]
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1741              		.loc 1 970 0 discriminator 2
 1742 006c FB68     		ldr	r3, [r7, #12]
 1743 006e 1B6E     		ldr	r3, [r3, #96]
 1744 0070 184A     		ldr	r2, .L94+4
 1745 0072 1A64     		str	r2, [r3, #64]
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1746              		.loc 1 973 0 discriminator 2
 1747 0074 FB68     		ldr	r3, [r7, #12]
 1748 0076 1B6E     		ldr	r3, [r3, #96]
 1749 0078 174A     		ldr	r2, .L94+8
 1750 007a DA64     		str	r2, [r3, #76]
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1751              		.loc 1 976 0 discriminator 2
 1752 007c FB68     		ldr	r3, [r7, #12]
 1753 007e 1B6E     		ldr	r3, [r3, #96]
 1754 0080 0022     		movs	r2, #0
 1755 0082 1A65     		str	r2, [r3, #80]
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1756              		.loc 1 979 0 discriminator 2
 1757 0084 07F10803 		add	r3, r7, #8
 1758 0088 7B61     		str	r3, [r7, #20]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 1759              		.loc 1 980 0 discriminator 2
 1760 008a FB68     		ldr	r3, [r7, #12]
 1761 008c 186E     		ldr	r0, [r3, #96]
 1762 008e 7B69     		ldr	r3, [r7, #20]
 1763 0090 1968     		ldr	r1, [r3]
 1764 0092 FB68     		ldr	r3, [r7, #12]
 1765 0094 1B68     		ldr	r3, [r3]
 1766 0096 2833     		adds	r3, r3, #40
 1767 0098 1A46     		mov	r2, r3
 1768 009a FB88     		ldrh	r3, [r7, #6]
 1769 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_FLAG_TC);
 1770              		.loc 1 983 0 discriminator 2
 1771 00a0 FB68     		ldr	r3, [r7, #12]
 1772 00a2 1B68     		ldr	r3, [r3]
 1773 00a4 4022     		movs	r2, #64
 1774 00a6 1A62     		str	r2, [r3, #32]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccvy8ygO.s 			page 49


 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1775              		.loc 1 986 0 discriminator 2
 1776 00a8 FB68     		ldr	r3, [r7, #12]
 1777 00aa 0022     		movs	r2, #0
 1778 00ac 83F86820 		strb	r2, [r3, #104]
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1779              		.loc 1 990 0 discriminator 2
 1780 00b0 FB68     		ldr	r3, [r7, #12]
 1781 00b2 1B68     		ldr	r3, [r3]
 1782 00b4 9A68     		ldr	r2, [r3, #8]
 1783 00b6 FB68     		ldr	r3, [r7, #12]
 1784 00b8 1B68     		ldr	r3, [r3]
 1785 00ba 42F08002 		orr	r2, r2, #128
 1786 00be 9A60     		str	r2, [r3, #8]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1787              		.loc 1 992 0 discriminator 2
 1788 00c0 0023     		movs	r3, #0
 1789 00c2 00E0     		b	.L92
 1790              	.L89:
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1791              		.loc 1 996 0
 1792 00c4 0223     		movs	r3, #2
 1793              	.L92:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1794              		.loc 1 998 0
 1795 00c6 1846     		mov	r0, r3
 1796 00c8 1837     		adds	r7, r7, #24
 1797              	.LCFI67:
 1798              		.cfi_def_cfa_offset 8
 1799 00ca BD46     		mov	sp, r7
 1800              	.LCFI68:
 1801              		.cfi_def_cfa_register 13
 1802              		@ sp needed
 1803 00cc 80BD     		pop	{r7, pc}
 1804              	.L95:
 1805 00ce 00BF     		.align	2
 1806              	.L94:
 1807 00d0 00000000 		.word	UART_DMATransmitCplt
 1808 00d4 00000000 		.word	UART_DMATxHalfCplt
 1809 00d8 00000000 		.word	UART_DMAError
 1810              		.cfi_endproc
 1811              	.LFE150:
 1813              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1814              		.align	1
 1815              		.global	HAL_UART_Receive_DMA
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1819              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvy8ygO.s 			page 50


 1821              	HAL_UART_Receive_DMA:
 1822              	.LFB151:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData pointer to data buffer.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size amount of data to be received.
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1823              		.loc 1 1010 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 24
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827 0000 80B5     		push	{r7, lr}
 1828              	.LCFI69:
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 7, -8
 1831              		.cfi_offset 14, -4
 1832 0002 86B0     		sub	sp, sp, #24
 1833              	.LCFI70:
 1834              		.cfi_def_cfa_offset 32
 1835 0004 00AF     		add	r7, sp, #0
 1836              	.LCFI71:
 1837              		.cfi_def_cfa_register 7
 1838 0006 F860     		str	r0, [r7, #12]
 1839 0008 B960     		str	r1, [r7, #8]
 1840 000a 1346     		mov	r3, r2
 1841 000c FB80     		strh	r3, [r7, #6]	@ movhi
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t *tmp;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1842              		.loc 1 1014 0
 1843 000e FB68     		ldr	r3, [r7, #12]
 1844 0010 93F86A30 		ldrb	r3, [r3, #106]
 1845 0014 DBB2     		uxtb	r3, r3
 1846 0016 202B     		cmp	r3, #32
 1847 0018 5CD1     		bne	.L97
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1848              		.loc 1 1016 0
 1849 001a BB68     		ldr	r3, [r7, #8]
 1850 001c 002B     		cmp	r3, #0
 1851 001e 02D0     		beq	.L98
 1852              		.loc 1 1016 0 is_stmt 0 discriminator 1
 1853 0020 FB88     		ldrh	r3, [r7, #6]
 1854 0022 002B     		cmp	r3, #0
 1855 0024 01D1     		bne	.L99
 1856              	.L98:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1857              		.loc 1 1018 0 is_stmt 1
ARM GAS  /tmp/ccvy8ygO.s 			page 51


 1858 0026 0123     		movs	r3, #1
 1859 0028 55E0     		b	.L100
 1860              	.L99:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1861              		.loc 1 1022 0
 1862 002a FB68     		ldr	r3, [r7, #12]
 1863 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1864 0030 012B     		cmp	r3, #1
 1865 0032 01D1     		bne	.L101
 1866              		.loc 1 1022 0 is_stmt 0 discriminator 1
 1867 0034 0223     		movs	r3, #2
 1868 0036 4EE0     		b	.L100
 1869              	.L101:
 1870              		.loc 1 1022 0 discriminator 2
 1871 0038 FB68     		ldr	r3, [r7, #12]
 1872 003a 0122     		movs	r2, #1
 1873 003c 83F86820 		strb	r2, [r3, #104]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1874              		.loc 1 1024 0 is_stmt 1 discriminator 2
 1875 0040 BA68     		ldr	r2, [r7, #8]
 1876 0042 FB68     		ldr	r3, [r7, #12]
 1877 0044 5A65     		str	r2, [r3, #84]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize = Size;
 1878              		.loc 1 1025 0 discriminator 2
 1879 0046 FB68     		ldr	r3, [r7, #12]
 1880 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1881 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1882              		.loc 1 1027 0 discriminator 2
 1883 004e FB68     		ldr	r3, [r7, #12]
 1884 0050 0022     		movs	r2, #0
 1885 0052 DA66     		str	r2, [r3, #108]
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1886              		.loc 1 1028 0 discriminator 2
 1887 0054 FB68     		ldr	r3, [r7, #12]
 1888 0056 2222     		movs	r2, #34
 1889 0058 83F86A20 		strb	r2, [r3, #106]
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1890              		.loc 1 1031 0 discriminator 2
 1891 005c FB68     		ldr	r3, [r7, #12]
 1892 005e 5B6E     		ldr	r3, [r3, #100]
 1893 0060 1F4A     		ldr	r2, .L102
 1894 0062 DA63     		str	r2, [r3, #60]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1895              		.loc 1 1034 0 discriminator 2
 1896 0064 FB68     		ldr	r3, [r7, #12]
 1897 0066 5B6E     		ldr	r3, [r3, #100]
 1898 0068 1E4A     		ldr	r2, .L102+4
ARM GAS  /tmp/ccvy8ygO.s 			page 52


 1899 006a 1A64     		str	r2, [r3, #64]
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1900              		.loc 1 1037 0 discriminator 2
 1901 006c FB68     		ldr	r3, [r7, #12]
 1902 006e 5B6E     		ldr	r3, [r3, #100]
 1903 0070 1D4A     		ldr	r2, .L102+8
 1904 0072 DA64     		str	r2, [r3, #76]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1905              		.loc 1 1040 0 discriminator 2
 1906 0074 FB68     		ldr	r3, [r7, #12]
 1907 0076 5B6E     		ldr	r3, [r3, #100]
 1908 0078 0022     		movs	r2, #0
 1909 007a 1A65     		str	r2, [r3, #80]
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1910              		.loc 1 1043 0 discriminator 2
 1911 007c 07F10803 		add	r3, r7, #8
 1912 0080 7B61     		str	r3, [r7, #20]
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
 1913              		.loc 1 1044 0 discriminator 2
 1914 0082 FB68     		ldr	r3, [r7, #12]
 1915 0084 586E     		ldr	r0, [r3, #100]
 1916 0086 FB68     		ldr	r3, [r7, #12]
 1917 0088 1B68     		ldr	r3, [r3]
 1918 008a 2433     		adds	r3, r3, #36
 1919 008c 1946     		mov	r1, r3
 1920 008e 7B69     		ldr	r3, [r7, #20]
 1921 0090 1A68     		ldr	r2, [r3]
 1922 0092 FB88     		ldrh	r3, [r7, #6]
 1923 0094 FFF7FEFF 		bl	HAL_DMA_Start_IT
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1924              		.loc 1 1047 0 discriminator 2
 1925 0098 FB68     		ldr	r3, [r7, #12]
 1926 009a 0022     		movs	r2, #0
 1927 009c 83F86820 		strb	r2, [r3, #104]
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1928              		.loc 1 1050 0 discriminator 2
 1929 00a0 FB68     		ldr	r3, [r7, #12]
 1930 00a2 1B68     		ldr	r3, [r3]
 1931 00a4 1A68     		ldr	r2, [r3]
 1932 00a6 FB68     		ldr	r3, [r7, #12]
 1933 00a8 1B68     		ldr	r3, [r3]
 1934 00aa 42F48072 		orr	r2, r2, #256
 1935 00ae 1A60     		str	r2, [r3]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1936              		.loc 1 1053 0 discriminator 2
ARM GAS  /tmp/ccvy8ygO.s 			page 53


 1937 00b0 FB68     		ldr	r3, [r7, #12]
 1938 00b2 1B68     		ldr	r3, [r3]
 1939 00b4 9A68     		ldr	r2, [r3, #8]
 1940 00b6 FB68     		ldr	r3, [r7, #12]
 1941 00b8 1B68     		ldr	r3, [r3]
 1942 00ba 42F00102 		orr	r2, r2, #1
 1943 00be 9A60     		str	r2, [r3, #8]
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1944              		.loc 1 1057 0 discriminator 2
 1945 00c0 FB68     		ldr	r3, [r7, #12]
 1946 00c2 1B68     		ldr	r3, [r3]
 1947 00c4 9A68     		ldr	r2, [r3, #8]
 1948 00c6 FB68     		ldr	r3, [r7, #12]
 1949 00c8 1B68     		ldr	r3, [r3]
 1950 00ca 42F04002 		orr	r2, r2, #64
 1951 00ce 9A60     		str	r2, [r3, #8]
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1952              		.loc 1 1059 0 discriminator 2
 1953 00d0 0023     		movs	r3, #0
 1954 00d2 00E0     		b	.L100
 1955              	.L97:
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1956              		.loc 1 1063 0
 1957 00d4 0223     		movs	r3, #2
 1958              	.L100:
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1959              		.loc 1 1065 0
 1960 00d6 1846     		mov	r0, r3
 1961 00d8 1837     		adds	r7, r7, #24
 1962              	.LCFI72:
 1963              		.cfi_def_cfa_offset 8
 1964 00da BD46     		mov	sp, r7
 1965              	.LCFI73:
 1966              		.cfi_def_cfa_register 13
 1967              		@ sp needed
 1968 00dc 80BD     		pop	{r7, pc}
 1969              	.L103:
 1970 00de 00BF     		.align	2
 1971              	.L102:
 1972 00e0 00000000 		.word	UART_DMAReceiveCplt
 1973 00e4 00000000 		.word	UART_DMARxHalfCplt
 1974 00e8 00000000 		.word	UART_DMAError
 1975              		.cfi_endproc
 1976              	.LFE151:
 1978              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1979              		.align	1
 1980              		.global	HAL_UART_DMAPause
 1981              		.syntax unified
 1982              		.thumb
ARM GAS  /tmp/ccvy8ygO.s 			page 54


 1983              		.thumb_func
 1984              		.fpu fpv4-sp-d16
 1986              	HAL_UART_DMAPause:
 1987              	.LFB152:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1988              		.loc 1 1073 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 8
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 1993 0000 80B4     		push	{r7}
 1994              	.LCFI74:
 1995              		.cfi_def_cfa_offset 4
 1996              		.cfi_offset 7, -4
 1997 0002 83B0     		sub	sp, sp, #12
 1998              	.LCFI75:
 1999              		.cfi_def_cfa_offset 16
 2000 0004 00AF     		add	r7, sp, #0
 2001              	.LCFI76:
 2002              		.cfi_def_cfa_register 7
 2003 0006 7860     		str	r0, [r7, #4]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2004              		.loc 1 1075 0
 2005 0008 7B68     		ldr	r3, [r7, #4]
 2006 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2007 000e 012B     		cmp	r3, #1
 2008 0010 01D1     		bne	.L105
 2009              		.loc 1 1075 0 is_stmt 0 discriminator 1
 2010 0012 0223     		movs	r3, #2
 2011 0014 42E0     		b	.L106
 2012              	.L105:
 2013              		.loc 1 1075 0 discriminator 2
 2014 0016 7B68     		ldr	r3, [r7, #4]
 2015 0018 0122     		movs	r2, #1
 2016 001a 83F86820 		strb	r2, [r3, #104]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2017              		.loc 1 1077 0 is_stmt 1 discriminator 2
 2018 001e 7B68     		ldr	r3, [r7, #4]
 2019 0020 93F86930 		ldrb	r3, [r3, #105]
 2020 0024 DBB2     		uxtb	r3, r3
 2021 0026 212B     		cmp	r3, #33
 2022 0028 0ED1     		bne	.L107
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2023              		.loc 1 1078 0 discriminator 1
 2024 002a 7B68     		ldr	r3, [r7, #4]
 2025 002c 1B68     		ldr	r3, [r3]
 2026 002e 9B68     		ldr	r3, [r3, #8]
 2027 0030 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/ccvy8ygO.s 			page 55


1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2028              		.loc 1 1077 0 discriminator 1
 2029 0034 002B     		cmp	r3, #0
 2030 0036 07D0     		beq	.L107
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2031              		.loc 1 1081 0
 2032 0038 7B68     		ldr	r3, [r7, #4]
 2033 003a 1B68     		ldr	r3, [r3]
 2034 003c 9A68     		ldr	r2, [r3, #8]
 2035 003e 7B68     		ldr	r3, [r7, #4]
 2036 0040 1B68     		ldr	r3, [r3]
 2037 0042 22F08002 		bic	r2, r2, #128
 2038 0046 9A60     		str	r2, [r3, #8]
 2039              	.L107:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2040              		.loc 1 1083 0
 2041 0048 7B68     		ldr	r3, [r7, #4]
 2042 004a 93F86A30 		ldrb	r3, [r3, #106]
 2043 004e DBB2     		uxtb	r3, r3
 2044 0050 222B     		cmp	r3, #34
 2045 0052 1ED1     		bne	.L108
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2046              		.loc 1 1084 0 discriminator 1
 2047 0054 7B68     		ldr	r3, [r7, #4]
 2048 0056 1B68     		ldr	r3, [r3]
 2049 0058 9B68     		ldr	r3, [r3, #8]
 2050 005a 03F04003 		and	r3, r3, #64
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2051              		.loc 1 1083 0 discriminator 1
 2052 005e 002B     		cmp	r3, #0
 2053 0060 17D0     		beq	.L108
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2054              		.loc 1 1087 0
 2055 0062 7B68     		ldr	r3, [r7, #4]
 2056 0064 1B68     		ldr	r3, [r3]
 2057 0066 1A68     		ldr	r2, [r3]
 2058 0068 7B68     		ldr	r3, [r7, #4]
 2059 006a 1B68     		ldr	r3, [r3]
 2060 006c 22F48072 		bic	r2, r2, #256
 2061 0070 1A60     		str	r2, [r3]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2062              		.loc 1 1088 0
 2063 0072 7B68     		ldr	r3, [r7, #4]
 2064 0074 1B68     		ldr	r3, [r3]
 2065 0076 9A68     		ldr	r2, [r3, #8]
 2066 0078 7B68     		ldr	r3, [r7, #4]
 2067 007a 1B68     		ldr	r3, [r3]
 2068 007c 22F00102 		bic	r2, r2, #1
 2069 0080 9A60     		str	r2, [r3, #8]
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccvy8ygO.s 			page 56


 2070              		.loc 1 1091 0
 2071 0082 7B68     		ldr	r3, [r7, #4]
 2072 0084 1B68     		ldr	r3, [r3]
 2073 0086 9A68     		ldr	r2, [r3, #8]
 2074 0088 7B68     		ldr	r3, [r7, #4]
 2075 008a 1B68     		ldr	r3, [r3]
 2076 008c 22F04002 		bic	r2, r2, #64
 2077 0090 9A60     		str	r2, [r3, #8]
 2078              	.L108:
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2079              		.loc 1 1095 0
 2080 0092 7B68     		ldr	r3, [r7, #4]
 2081 0094 0022     		movs	r2, #0
 2082 0096 83F86820 		strb	r2, [r3, #104]
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2083              		.loc 1 1097 0
 2084 009a 0023     		movs	r3, #0
 2085              	.L106:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2086              		.loc 1 1098 0
 2087 009c 1846     		mov	r0, r3
 2088 009e 0C37     		adds	r7, r7, #12
 2089              	.LCFI77:
 2090              		.cfi_def_cfa_offset 4
 2091 00a0 BD46     		mov	sp, r7
 2092              	.LCFI78:
 2093              		.cfi_def_cfa_register 13
 2094              		@ sp needed
 2095 00a2 5DF8047B 		ldr	r7, [sp], #4
 2096              	.LCFI79:
 2097              		.cfi_restore 7
 2098              		.cfi_def_cfa_offset 0
 2099 00a6 7047     		bx	lr
 2100              		.cfi_endproc
 2101              	.LFE152:
 2103              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2104              		.align	1
 2105              		.global	HAL_UART_DMAResume
 2106              		.syntax unified
 2107              		.thumb
 2108              		.thumb_func
 2109              		.fpu fpv4-sp-d16
 2111              	HAL_UART_DMAResume:
 2112              	.LFB153:
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2113              		.loc 1 1106 0
ARM GAS  /tmp/ccvy8ygO.s 			page 57


 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 8
 2116              		@ frame_needed = 1, uses_anonymous_args = 0
 2117              		@ link register save eliminated.
 2118 0000 80B4     		push	{r7}
 2119              	.LCFI80:
 2120              		.cfi_def_cfa_offset 4
 2121              		.cfi_offset 7, -4
 2122 0002 83B0     		sub	sp, sp, #12
 2123              	.LCFI81:
 2124              		.cfi_def_cfa_offset 16
 2125 0004 00AF     		add	r7, sp, #0
 2126              	.LCFI82:
 2127              		.cfi_def_cfa_register 7
 2128 0006 7860     		str	r0, [r7, #4]
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2129              		.loc 1 1108 0
 2130 0008 7B68     		ldr	r3, [r7, #4]
 2131 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2132 000e 012B     		cmp	r3, #1
 2133 0010 01D1     		bne	.L110
 2134              		.loc 1 1108 0 is_stmt 0 discriminator 1
 2135 0012 0223     		movs	r3, #2
 2136 0014 43E0     		b	.L111
 2137              	.L110:
 2138              		.loc 1 1108 0 discriminator 2
 2139 0016 7B68     		ldr	r3, [r7, #4]
 2140 0018 0122     		movs	r2, #1
 2141 001a 83F86820 		strb	r2, [r3, #104]
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 2142              		.loc 1 1110 0 is_stmt 1 discriminator 2
 2143 001e 7B68     		ldr	r3, [r7, #4]
 2144 0020 93F86930 		ldrb	r3, [r3, #105]
 2145 0024 DBB2     		uxtb	r3, r3
 2146 0026 212B     		cmp	r3, #33
 2147 0028 07D1     		bne	.L112
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2148              		.loc 1 1113 0
 2149 002a 7B68     		ldr	r3, [r7, #4]
 2150 002c 1B68     		ldr	r3, [r3]
 2151 002e 9A68     		ldr	r2, [r3, #8]
 2152 0030 7B68     		ldr	r3, [r7, #4]
 2153 0032 1B68     		ldr	r3, [r3]
 2154 0034 42F08002 		orr	r2, r2, #128
 2155 0038 9A60     		str	r2, [r3, #8]
 2156              	.L112:
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 2157              		.loc 1 1115 0
 2158 003a 7B68     		ldr	r3, [r7, #4]
 2159 003c 93F86A30 		ldrb	r3, [r3, #106]
 2160 0040 DBB2     		uxtb	r3, r3
 2161 0042 222B     		cmp	r3, #34
ARM GAS  /tmp/ccvy8ygO.s 			page 58


 2162 0044 1BD1     		bne	.L113
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 2163              		.loc 1 1118 0
 2164 0046 7B68     		ldr	r3, [r7, #4]
 2165 0048 1B68     		ldr	r3, [r3]
 2166 004a 0822     		movs	r2, #8
 2167 004c 1A62     		str	r2, [r3, #32]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2168              		.loc 1 1121 0
 2169 004e 7B68     		ldr	r3, [r7, #4]
 2170 0050 1B68     		ldr	r3, [r3]
 2171 0052 1A68     		ldr	r2, [r3]
 2172 0054 7B68     		ldr	r3, [r7, #4]
 2173 0056 1B68     		ldr	r3, [r3]
 2174 0058 42F48072 		orr	r2, r2, #256
 2175 005c 1A60     		str	r2, [r3]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2176              		.loc 1 1122 0
 2177 005e 7B68     		ldr	r3, [r7, #4]
 2178 0060 1B68     		ldr	r3, [r3]
 2179 0062 9A68     		ldr	r2, [r3, #8]
 2180 0064 7B68     		ldr	r3, [r7, #4]
 2181 0066 1B68     		ldr	r3, [r3]
 2182 0068 42F00102 		orr	r2, r2, #1
 2183 006c 9A60     		str	r2, [r3, #8]
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2184              		.loc 1 1125 0
 2185 006e 7B68     		ldr	r3, [r7, #4]
 2186 0070 1B68     		ldr	r3, [r3]
 2187 0072 9A68     		ldr	r2, [r3, #8]
 2188 0074 7B68     		ldr	r3, [r7, #4]
 2189 0076 1B68     		ldr	r3, [r3]
 2190 0078 42F04002 		orr	r2, r2, #64
 2191 007c 9A60     		str	r2, [r3, #8]
 2192              	.L113:
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0U)
 2193              		.loc 1 1129 0
 2194 007e 7B68     		ldr	r3, [r7, #4]
 2195 0080 1B68     		ldr	r3, [r3]
 2196 0082 1B68     		ldr	r3, [r3]
 2197 0084 03F00103 		and	r3, r3, #1
 2198 0088 002B     		cmp	r3, #0
 2199 008a 07D1     		bne	.L114
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable UART peripheral */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
 2200              		.loc 1 1132 0
 2201 008c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 59


 2202 008e 1B68     		ldr	r3, [r3]
 2203 0090 1A68     		ldr	r2, [r3]
 2204 0092 7B68     		ldr	r3, [r7, #4]
 2205 0094 1B68     		ldr	r3, [r3]
 2206 0096 42F00102 		orr	r2, r2, #1
 2207 009a 1A60     		str	r2, [r3]
 2208              	.L114:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2209              		.loc 1 1135 0
 2210 009c 0023     		movs	r3, #0
 2211              	.L111:
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2212              		.loc 1 1136 0
 2213 009e 1846     		mov	r0, r3
 2214 00a0 0C37     		adds	r7, r7, #12
 2215              	.LCFI83:
 2216              		.cfi_def_cfa_offset 4
 2217 00a2 BD46     		mov	sp, r7
 2218              	.LCFI84:
 2219              		.cfi_def_cfa_register 13
 2220              		@ sp needed
 2221 00a4 5DF8047B 		ldr	r7, [sp], #4
 2222              	.LCFI85:
 2223              		.cfi_restore 7
 2224              		.cfi_def_cfa_offset 0
 2225 00a8 7047     		bx	lr
 2226              		.cfi_endproc
 2227              	.LFE153:
 2229              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2230              		.align	1
 2231              		.global	HAL_UART_DMAStop
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv4-sp-d16
 2237              	HAL_UART_DMAStop:
 2238              	.LFB154:
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2239              		.loc 1 1144 0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 8
 2242              		@ frame_needed = 1, uses_anonymous_args = 0
 2243 0000 80B5     		push	{r7, lr}
 2244              	.LCFI86:
 2245              		.cfi_def_cfa_offset 8
 2246              		.cfi_offset 7, -8
 2247              		.cfi_offset 14, -4
 2248 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccvy8ygO.s 			page 60


 2249              	.LCFI87:
 2250              		.cfi_def_cfa_offset 16
 2251 0004 00AF     		add	r7, sp, #0
 2252              	.LCFI88:
 2253              		.cfi_def_cfa_register 7
 2254 0006 7860     		str	r0, [r7, #4]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2255              		.loc 1 1153 0
 2256 0008 7B68     		ldr	r3, [r7, #4]
 2257 000a 93F86930 		ldrb	r3, [r3, #105]
 2258 000e DBB2     		uxtb	r3, r3
 2259 0010 212B     		cmp	r3, #33
 2260 0012 1AD1     		bne	.L116
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2261              		.loc 1 1154 0 discriminator 1
 2262 0014 7B68     		ldr	r3, [r7, #4]
 2263 0016 1B68     		ldr	r3, [r3]
 2264 0018 9B68     		ldr	r3, [r3, #8]
 2265 001a 03F08003 		and	r3, r3, #128
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2266              		.loc 1 1153 0 discriminator 1
 2267 001e 002B     		cmp	r3, #0
 2268 0020 13D0     		beq	.L116
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2269              		.loc 1 1156 0
 2270 0022 7B68     		ldr	r3, [r7, #4]
 2271 0024 1B68     		ldr	r3, [r3]
 2272 0026 9A68     		ldr	r2, [r3, #8]
 2273 0028 7B68     		ldr	r3, [r7, #4]
 2274 002a 1B68     		ldr	r3, [r3]
 2275 002c 22F08002 		bic	r2, r2, #128
 2276 0030 9A60     		str	r2, [r3, #8]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2277              		.loc 1 1159 0
 2278 0032 7B68     		ldr	r3, [r7, #4]
 2279 0034 1B6E     		ldr	r3, [r3, #96]
 2280 0036 002B     		cmp	r3, #0
 2281 0038 04D0     		beq	.L117
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2282              		.loc 1 1161 0
 2283 003a 7B68     		ldr	r3, [r7, #4]
 2284 003c 1B6E     		ldr	r3, [r3, #96]
 2285 003e 1846     		mov	r0, r3
 2286 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 2287              	.L117:
ARM GAS  /tmp/ccvy8ygO.s 			page 61


1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2288              		.loc 1 1164 0
 2289 0044 7868     		ldr	r0, [r7, #4]
 2290 0046 FFF7FEFF 		bl	UART_EndTxTransfer
 2291              	.L116:
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2292              		.loc 1 1168 0
 2293 004a 7B68     		ldr	r3, [r7, #4]
 2294 004c 93F86A30 		ldrb	r3, [r3, #106]
 2295 0050 DBB2     		uxtb	r3, r3
 2296 0052 222B     		cmp	r3, #34
 2297 0054 1AD1     		bne	.L118
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2298              		.loc 1 1169 0 discriminator 1
 2299 0056 7B68     		ldr	r3, [r7, #4]
 2300 0058 1B68     		ldr	r3, [r3]
 2301 005a 9B68     		ldr	r3, [r3, #8]
 2302 005c 03F04003 		and	r3, r3, #64
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2303              		.loc 1 1168 0 discriminator 1
 2304 0060 002B     		cmp	r3, #0
 2305 0062 13D0     		beq	.L118
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2306              		.loc 1 1171 0
 2307 0064 7B68     		ldr	r3, [r7, #4]
 2308 0066 1B68     		ldr	r3, [r3]
 2309 0068 9A68     		ldr	r2, [r3, #8]
 2310 006a 7B68     		ldr	r3, [r7, #4]
 2311 006c 1B68     		ldr	r3, [r3]
 2312 006e 22F04002 		bic	r2, r2, #64
 2313 0072 9A60     		str	r2, [r3, #8]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2314              		.loc 1 1174 0
 2315 0074 7B68     		ldr	r3, [r7, #4]
 2316 0076 5B6E     		ldr	r3, [r3, #100]
 2317 0078 002B     		cmp	r3, #0
 2318 007a 04D0     		beq	.L119
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2319              		.loc 1 1176 0
 2320 007c 7B68     		ldr	r3, [r7, #4]
 2321 007e 5B6E     		ldr	r3, [r3, #100]
 2322 0080 1846     		mov	r0, r3
 2323 0082 FFF7FEFF 		bl	HAL_DMA_Abort
 2324              	.L119:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2325              		.loc 1 1179 0
ARM GAS  /tmp/ccvy8ygO.s 			page 62


 2326 0086 7868     		ldr	r0, [r7, #4]
 2327 0088 FFF7FEFF 		bl	UART_EndRxTransfer
 2328              	.L118:
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2329              		.loc 1 1182 0
 2330 008c 0023     		movs	r3, #0
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2331              		.loc 1 1183 0
 2332 008e 1846     		mov	r0, r3
 2333 0090 0837     		adds	r7, r7, #8
 2334              	.LCFI89:
 2335              		.cfi_def_cfa_offset 8
 2336 0092 BD46     		mov	sp, r7
 2337              	.LCFI90:
 2338              		.cfi_def_cfa_register 13
 2339              		@ sp needed
 2340 0094 80BD     		pop	{r7, pc}
 2341              		.cfi_endproc
 2342              	.LFE154:
 2344              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2345              		.align	1
 2346              		.global	HAL_UART_IRQHandler
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2350              		.fpu fpv4-sp-d16
 2352              	HAL_UART_IRQHandler:
 2353              	.LFB155:
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2354              		.loc 1 1191 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 24
 2357              		@ frame_needed = 1, uses_anonymous_args = 0
 2358 0000 80B5     		push	{r7, lr}
 2359              	.LCFI91:
 2360              		.cfi_def_cfa_offset 8
 2361              		.cfi_offset 7, -8
 2362              		.cfi_offset 14, -4
 2363 0002 86B0     		sub	sp, sp, #24
 2364              	.LCFI92:
 2365              		.cfi_def_cfa_offset 32
 2366 0004 00AF     		add	r7, sp, #0
 2367              	.LCFI93:
 2368              		.cfi_def_cfa_register 7
 2369 0006 7860     		str	r0, [r7, #4]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2370              		.loc 1 1192 0
 2371 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 63


 2372 000a 1B68     		ldr	r3, [r3]
 2373 000c DB69     		ldr	r3, [r3, #28]
 2374 000e 7B61     		str	r3, [r7, #20]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2375              		.loc 1 1193 0
 2376 0010 7B68     		ldr	r3, [r7, #4]
 2377 0012 1B68     		ldr	r3, [r3]
 2378 0014 1B68     		ldr	r3, [r3]
 2379 0016 3B61     		str	r3, [r7, #16]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2380              		.loc 1 1194 0
 2381 0018 7B68     		ldr	r3, [r7, #4]
 2382 001a 1B68     		ldr	r3, [r3]
 2383 001c 9B68     		ldr	r3, [r3, #8]
 2384 001e FB60     		str	r3, [r7, #12]
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 2385              		.loc 1 1198 0
 2386 0020 7B69     		ldr	r3, [r7, #20]
 2387 0022 03F00F03 		and	r3, r3, #15
 2388 0026 BB60     		str	r3, [r7, #8]
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == RESET)
 2389              		.loc 1 1199 0
 2390 0028 BB68     		ldr	r3, [r7, #8]
 2391 002a 002B     		cmp	r3, #0
 2392 002c 0DD1     		bne	.L122
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2393              		.loc 1 1202 0
 2394 002e 7B69     		ldr	r3, [r7, #20]
 2395 0030 03F02003 		and	r3, r3, #32
 2396 0034 002B     		cmp	r3, #0
 2397 0036 08D0     		beq	.L122
 2398              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2399 0038 3B69     		ldr	r3, [r7, #16]
 2400 003a 03F02003 		and	r3, r3, #32
 2401 003e 002B     		cmp	r3, #0
 2402 0040 03D0     		beq	.L122
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       UART_Receive_IT(huart);
 2403              		.loc 1 1204 0 is_stmt 1
 2404 0042 7868     		ldr	r0, [r7, #4]
 2405 0044 FFF7FEFF 		bl	UART_Receive_IT
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 2406              		.loc 1 1205 0
 2407 0048 DAE0     		b	.L121
 2408              	.L122:
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(   (errorflags != RESET)
 2409              		.loc 1 1210 0
 2410 004a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvy8ygO.s 			page 64


 2411 004c 002B     		cmp	r3, #0
 2412 004e 00F0B980 		beq	.L124
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 2413              		.loc 1 1211 0
 2414 0052 FB68     		ldr	r3, [r7, #12]
 2415 0054 03F00103 		and	r3, r3, #1
 2416 0058 002B     		cmp	r3, #0
 2417 005a 05D1     		bne	.L125
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 2418              		.loc 1 1212 0
 2419 005c 3B69     		ldr	r3, [r7, #16]
 2420 005e 03F49073 		and	r3, r3, #288
 2421 0062 002B     		cmp	r3, #0
 2422 0064 00F0AE80 		beq	.L124
 2423              	.L125:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 2424              		.loc 1 1216 0
 2425 0068 7B69     		ldr	r3, [r7, #20]
 2426 006a 03F00103 		and	r3, r3, #1
 2427 006e 002B     		cmp	r3, #0
 2428 0070 0ED0     		beq	.L126
 2429              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2430 0072 3B69     		ldr	r3, [r7, #16]
 2431 0074 03F48073 		and	r3, r3, #256
 2432 0078 002B     		cmp	r3, #0
 2433 007a 09D0     		beq	.L126
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 2434              		.loc 1 1218 0 is_stmt 1
 2435 007c 7B68     		ldr	r3, [r7, #4]
 2436 007e 1B68     		ldr	r3, [r3]
 2437 0080 0122     		movs	r2, #1
 2438 0082 1A62     		str	r2, [r3, #32]
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 2439              		.loc 1 1220 0
 2440 0084 7B68     		ldr	r3, [r7, #4]
 2441 0086 DB6E     		ldr	r3, [r3, #108]
 2442 0088 43F00102 		orr	r2, r3, #1
 2443 008c 7B68     		ldr	r3, [r7, #4]
 2444 008e DA66     		str	r2, [r3, #108]
 2445              	.L126:
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2446              		.loc 1 1224 0
 2447 0090 7B69     		ldr	r3, [r7, #20]
 2448 0092 03F00203 		and	r3, r3, #2
 2449 0096 002B     		cmp	r3, #0
 2450 0098 0ED0     		beq	.L127
 2451              		.loc 1 1224 0 is_stmt 0 discriminator 1
 2452 009a FB68     		ldr	r3, [r7, #12]
 2453 009c 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccvy8ygO.s 			page 65


 2454 00a0 002B     		cmp	r3, #0
 2455 00a2 09D0     		beq	.L127
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 2456              		.loc 1 1226 0 is_stmt 1
 2457 00a4 7B68     		ldr	r3, [r7, #4]
 2458 00a6 1B68     		ldr	r3, [r3]
 2459 00a8 0222     		movs	r2, #2
 2460 00aa 1A62     		str	r2, [r3, #32]
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 2461              		.loc 1 1228 0
 2462 00ac 7B68     		ldr	r3, [r7, #4]
 2463 00ae DB6E     		ldr	r3, [r3, #108]
 2464 00b0 43F00402 		orr	r2, r3, #4
 2465 00b4 7B68     		ldr	r3, [r7, #4]
 2466 00b6 DA66     		str	r2, [r3, #108]
 2467              	.L127:
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2468              		.loc 1 1232 0
 2469 00b8 7B69     		ldr	r3, [r7, #20]
 2470 00ba 03F00403 		and	r3, r3, #4
 2471 00be 002B     		cmp	r3, #0
 2472 00c0 0ED0     		beq	.L128
 2473              		.loc 1 1232 0 is_stmt 0 discriminator 1
 2474 00c2 FB68     		ldr	r3, [r7, #12]
 2475 00c4 03F00103 		and	r3, r3, #1
 2476 00c8 002B     		cmp	r3, #0
 2477 00ca 09D0     		beq	.L128
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 2478              		.loc 1 1234 0 is_stmt 1
 2479 00cc 7B68     		ldr	r3, [r7, #4]
 2480 00ce 1B68     		ldr	r3, [r3]
 2481 00d0 0422     		movs	r2, #4
 2482 00d2 1A62     		str	r2, [r3, #32]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 2483              		.loc 1 1236 0
 2484 00d4 7B68     		ldr	r3, [r7, #4]
 2485 00d6 DB6E     		ldr	r3, [r3, #108]
 2486 00d8 43F00202 		orr	r2, r3, #2
 2487 00dc 7B68     		ldr	r3, [r7, #4]
 2488 00de DA66     		str	r2, [r3, #108]
 2489              	.L128:
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
 2490              		.loc 1 1240 0
 2491 00e0 7B69     		ldr	r3, [r7, #20]
 2492 00e2 03F00803 		and	r3, r3, #8
 2493 00e6 002B     		cmp	r3, #0
 2494 00e8 13D0     		beq	.L129
ARM GAS  /tmp/ccvy8ygO.s 			page 66


1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2495              		.loc 1 1241 0 discriminator 1
 2496 00ea 3B69     		ldr	r3, [r7, #16]
 2497 00ec 03F02003 		and	r3, r3, #32
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2498              		.loc 1 1240 0 discriminator 1
 2499 00f0 002B     		cmp	r3, #0
 2500 00f2 04D1     		bne	.L130
 2501              		.loc 1 1241 0
 2502 00f4 FB68     		ldr	r3, [r7, #12]
 2503 00f6 03F00103 		and	r3, r3, #1
 2504 00fa 002B     		cmp	r3, #0
 2505 00fc 09D0     		beq	.L129
 2506              	.L130:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 2507              		.loc 1 1243 0
 2508 00fe 7B68     		ldr	r3, [r7, #4]
 2509 0100 1B68     		ldr	r3, [r3]
 2510 0102 0822     		movs	r2, #8
 2511 0104 1A62     		str	r2, [r3, #32]
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 2512              		.loc 1 1245 0
 2513 0106 7B68     		ldr	r3, [r7, #4]
 2514 0108 DB6E     		ldr	r3, [r3, #108]
 2515 010a 43F00802 		orr	r2, r3, #8
 2516 010e 7B68     		ldr	r3, [r7, #4]
 2517 0110 DA66     		str	r2, [r3, #108]
 2518              	.L129:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2519              		.loc 1 1249 0
 2520 0112 7B68     		ldr	r3, [r7, #4]
 2521 0114 DB6E     		ldr	r3, [r3, #108]
 2522 0116 002B     		cmp	r3, #0
 2523 0118 71D0     		beq	.L141
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2524              		.loc 1 1252 0
 2525 011a 7B69     		ldr	r3, [r7, #20]
 2526 011c 03F02003 		and	r3, r3, #32
 2527 0120 002B     		cmp	r3, #0
 2528 0122 07D0     		beq	.L132
 2529              		.loc 1 1252 0 is_stmt 0 discriminator 1
 2530 0124 3B69     		ldr	r3, [r7, #16]
 2531 0126 03F02003 		and	r3, r3, #32
 2532 012a 002B     		cmp	r3, #0
 2533 012c 02D0     		beq	.L132
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_Receive_IT(huart);
 2534              		.loc 1 1254 0 is_stmt 1
 2535 012e 7868     		ldr	r0, [r7, #4]
 2536 0130 FFF7FEFF 		bl	UART_Receive_IT
ARM GAS  /tmp/ccvy8ygO.s 			page 67


 2537              	.L132:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          consider error as blocking */
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
 2538              		.loc 1 1259 0
 2539 0134 7B68     		ldr	r3, [r7, #4]
 2540 0136 DB6E     		ldr	r3, [r3, #108]
 2541 0138 03F00803 		and	r3, r3, #8
 2542 013c 002B     		cmp	r3, #0
 2543 013e 06D1     		bne	.L133
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2544              		.loc 1 1260 0 discriminator 1
 2545 0140 7B68     		ldr	r3, [r7, #4]
 2546 0142 1B68     		ldr	r3, [r3]
 2547 0144 9B68     		ldr	r3, [r3, #8]
 2548 0146 03F04003 		and	r3, r3, #64
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2549              		.loc 1 1259 0 discriminator 1
 2550 014a 002B     		cmp	r3, #0
 2551 014c 31D0     		beq	.L134
 2552              	.L133:
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 2553              		.loc 1 1265 0
 2554 014e 7868     		ldr	r0, [r7, #4]
 2555 0150 FFF7FEFF 		bl	UART_EndRxTransfer
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2556              		.loc 1 1268 0
 2557 0154 7B68     		ldr	r3, [r7, #4]
 2558 0156 1B68     		ldr	r3, [r3]
 2559 0158 9B68     		ldr	r3, [r3, #8]
 2560 015a 03F04003 		and	r3, r3, #64
 2561 015e 002B     		cmp	r3, #0
 2562 0160 23D0     		beq	.L135
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2563              		.loc 1 1270 0
 2564 0162 7B68     		ldr	r3, [r7, #4]
 2565 0164 1B68     		ldr	r3, [r3]
 2566 0166 9A68     		ldr	r2, [r3, #8]
 2567 0168 7B68     		ldr	r3, [r7, #4]
 2568 016a 1B68     		ldr	r3, [r3]
 2569 016c 22F04002 		bic	r2, r2, #64
 2570 0170 9A60     		str	r2, [r3, #8]
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 2571              		.loc 1 1273 0
 2572 0172 7B68     		ldr	r3, [r7, #4]
 2573 0174 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/ccvy8ygO.s 			page 68


 2574 0176 002B     		cmp	r3, #0
 2575 0178 13D0     		beq	.L136
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 2576              		.loc 1 1277 0
 2577 017a 7B68     		ldr	r3, [r7, #4]
 2578 017c 5B6E     		ldr	r3, [r3, #100]
 2579 017e 224A     		ldr	r2, .L143
 2580 0180 1A65     		str	r2, [r3, #80]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2581              		.loc 1 1280 0
 2582 0182 7B68     		ldr	r3, [r7, #4]
 2583 0184 5B6E     		ldr	r3, [r3, #100]
 2584 0186 1846     		mov	r0, r3
 2585 0188 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2586 018c 0346     		mov	r3, r0
 2587 018e 002B     		cmp	r3, #0
 2588 0190 16D0     		beq	.L142
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2589              		.loc 1 1283 0
 2590 0192 7B68     		ldr	r3, [r7, #4]
 2591 0194 5B6E     		ldr	r3, [r3, #100]
 2592 0196 1B6D     		ldr	r3, [r3, #80]
 2593 0198 7A68     		ldr	r2, [r7, #4]
 2594 019a 526E     		ldr	r2, [r2, #100]
 2595 019c 1046     		mov	r0, r2
 2596 019e 9847     		blx	r3
 2597              	.LVL0:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2598              		.loc 1 1268 0
 2599 01a0 0EE0     		b	.L142
 2600              	.L136:
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 2601              		.loc 1 1289 0
 2602 01a2 7868     		ldr	r0, [r7, #4]
 2603 01a4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2604              		.loc 1 1268 0
 2605 01a8 0AE0     		b	.L142
 2606              	.L135:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
ARM GAS  /tmp/ccvy8ygO.s 			page 69


 2607              		.loc 1 1295 0
 2608 01aa 7868     		ldr	r0, [r7, #4]
 2609 01ac FFF7FEFF 		bl	HAL_UART_ErrorCallback
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2610              		.loc 1 1268 0
 2611 01b0 06E0     		b	.L142
 2612              	.L134:
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 2613              		.loc 1 1302 0
 2614 01b2 7868     		ldr	r0, [r7, #4]
 2615 01b4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2616              		.loc 1 1303 0
 2617 01b8 7B68     		ldr	r3, [r7, #4]
 2618 01ba 0022     		movs	r2, #0
 2619 01bc DA66     		str	r2, [r3, #108]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2620              		.loc 1 1306 0
 2621 01be 1EE0     		b	.L141
 2622              	.L142:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 2623              		.loc 1 1268 0
 2624 01c0 00BF     		nop
 2625              		.loc 1 1306 0
 2626 01c2 1CE0     		b	.L141
 2627              	.L124:
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 2628              		.loc 1 1311 0
 2629 01c4 7B69     		ldr	r3, [r7, #20]
 2630 01c6 03F08003 		and	r3, r3, #128
 2631 01ca 002B     		cmp	r3, #0
 2632 01cc 08D0     		beq	.L140
 2633              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2634 01ce 3B69     		ldr	r3, [r7, #16]
 2635 01d0 03F08003 		and	r3, r3, #128
 2636 01d4 002B     		cmp	r3, #0
 2637 01d6 03D0     		beq	.L140
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2638              		.loc 1 1313 0 is_stmt 1
 2639 01d8 7868     		ldr	r0, [r7, #4]
 2640 01da FFF7FEFF 		bl	UART_Transmit_IT
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2641              		.loc 1 1314 0
 2642 01de 0FE0     		b	.L121
ARM GAS  /tmp/ccvy8ygO.s 			page 70


 2643              	.L140:
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 2644              		.loc 1 1318 0
 2645 01e0 7B69     		ldr	r3, [r7, #20]
 2646 01e2 03F04003 		and	r3, r3, #64
 2647 01e6 002B     		cmp	r3, #0
 2648 01e8 0AD0     		beq	.L121
 2649              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2650 01ea 3B69     		ldr	r3, [r7, #16]
 2651 01ec 03F04003 		and	r3, r3, #64
 2652 01f0 002B     		cmp	r3, #0
 2653 01f2 05D0     		beq	.L121
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2654              		.loc 1 1320 0 is_stmt 1
 2655 01f4 7868     		ldr	r0, [r7, #4]
 2656 01f6 FFF7FEFF 		bl	UART_EndTransmit_IT
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 2657              		.loc 1 1321 0
 2658 01fa 00BF     		nop
 2659 01fc 00E0     		b	.L121
 2660              	.L141:
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 2661              		.loc 1 1306 0
 2662 01fe 00BF     		nop
 2663              	.L121:
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2664              		.loc 1 1324 0
 2665 0200 1837     		adds	r7, r7, #24
 2666              	.LCFI94:
 2667              		.cfi_def_cfa_offset 8
 2668 0202 BD46     		mov	sp, r7
 2669              	.LCFI95:
 2670              		.cfi_def_cfa_register 13
 2671              		@ sp needed
 2672 0204 80BD     		pop	{r7, pc}
 2673              	.L144:
 2674 0206 00BF     		.align	2
 2675              	.L143:
 2676 0208 00000000 		.word	UART_DMAAbortOnError
 2677              		.cfi_endproc
 2678              	.LFE155:
 2680              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2681              		.align	1
 2682              		.global	UART_WaitOnFlagUntilTimeout
 2683              		.syntax unified
 2684              		.thumb
 2685              		.thumb_func
 2686              		.fpu fpv4-sp-d16
 2688              	UART_WaitOnFlagUntilTimeout:
 2689              	.LFB156:
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 71


1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Tickstart Tick start value
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Timeout Timeout duration
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2690              		.loc 1 1336 0
 2691              		.cfi_startproc
 2692              		@ args = 4, pretend = 0, frame = 16
 2693              		@ frame_needed = 1, uses_anonymous_args = 0
 2694 0000 80B5     		push	{r7, lr}
 2695              	.LCFI96:
 2696              		.cfi_def_cfa_offset 8
 2697              		.cfi_offset 7, -8
 2698              		.cfi_offset 14, -4
 2699 0002 84B0     		sub	sp, sp, #16
 2700              	.LCFI97:
 2701              		.cfi_def_cfa_offset 24
 2702 0004 00AF     		add	r7, sp, #0
 2703              	.LCFI98:
 2704              		.cfi_def_cfa_register 7
 2705 0006 F860     		str	r0, [r7, #12]
 2706 0008 B960     		str	r1, [r7, #8]
 2707 000a 3B60     		str	r3, [r7]
 2708 000c 1346     		mov	r3, r2
 2709 000e FB71     		strb	r3, [r7, #7]
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 2710              		.loc 1 1338 0
 2711 0010 2CE0     		b	.L146
 2712              	.L149:
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 2713              		.loc 1 1341 0
 2714 0012 BB69     		ldr	r3, [r7, #24]
 2715 0014 B3F1FF3F 		cmp	r3, #-1
 2716 0018 28D0     		beq	.L146
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick()-Tickstart) >=  Timeout))
 2717              		.loc 1 1343 0
 2718 001a BB69     		ldr	r3, [r7, #24]
 2719 001c 002B     		cmp	r3, #0
 2720 001e 07D0     		beq	.L147
 2721              		.loc 1 1343 0 is_stmt 0 discriminator 1
 2722 0020 FFF7FEFF 		bl	HAL_GetTick
 2723 0024 0246     		mov	r2, r0
 2724 0026 3B68     		ldr	r3, [r7]
 2725 0028 D31A     		subs	r3, r2, r3
 2726 002a BA69     		ldr	r2, [r7, #24]
 2727 002c 9A42     		cmp	r2, r3
 2728 002e 1DD8     		bhi	.L146
ARM GAS  /tmp/ccvy8ygO.s 			page 72


 2729              	.L147:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 2730              		.loc 1 1346 0 is_stmt 1
 2731 0030 FB68     		ldr	r3, [r7, #12]
 2732 0032 1B68     		ldr	r3, [r3]
 2733 0034 1A68     		ldr	r2, [r3]
 2734 0036 FB68     		ldr	r3, [r7, #12]
 2735 0038 1B68     		ldr	r3, [r3]
 2736 003a 22F4D072 		bic	r2, r2, #416
 2737 003e 1A60     		str	r2, [r3]
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2738              		.loc 1 1347 0
 2739 0040 FB68     		ldr	r3, [r7, #12]
 2740 0042 1B68     		ldr	r3, [r3]
 2741 0044 9A68     		ldr	r2, [r3, #8]
 2742 0046 FB68     		ldr	r3, [r7, #12]
 2743 0048 1B68     		ldr	r3, [r3]
 2744 004a 22F00102 		bic	r2, r2, #1
 2745 004e 9A60     		str	r2, [r3, #8]
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2746              		.loc 1 1349 0
 2747 0050 FB68     		ldr	r3, [r7, #12]
 2748 0052 2022     		movs	r2, #32
 2749 0054 83F86920 		strb	r2, [r3, #105]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2750              		.loc 1 1350 0
 2751 0058 FB68     		ldr	r3, [r7, #12]
 2752 005a 2022     		movs	r2, #32
 2753 005c 83F86A20 		strb	r2, [r3, #106]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Process Unlocked */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 2754              		.loc 1 1353 0
 2755 0060 FB68     		ldr	r3, [r7, #12]
 2756 0062 0022     		movs	r2, #0
 2757 0064 83F86820 		strb	r2, [r3, #104]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 2758              		.loc 1 1354 0
 2759 0068 0323     		movs	r3, #3
 2760 006a 0FE0     		b	.L148
 2761              	.L146:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 2762              		.loc 1 1338 0
 2763 006c FB68     		ldr	r3, [r7, #12]
 2764 006e 1B68     		ldr	r3, [r3]
 2765 0070 DA69     		ldr	r2, [r3, #28]
 2766 0072 BB68     		ldr	r3, [r7, #8]
 2767 0074 1340     		ands	r3, r3, r2
 2768 0076 BA68     		ldr	r2, [r7, #8]
 2769 0078 9A42     		cmp	r2, r3
 2770 007a 0CBF     		ite	eq
 2771 007c 0123     		moveq	r3, #1
 2772 007e 0023     		movne	r3, #0
 2773 0080 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccvy8ygO.s 			page 73


 2774 0082 1A46     		mov	r2, r3
 2775 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2776 0086 9A42     		cmp	r2, r3
 2777 0088 C3D0     		beq	.L149
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2778              		.loc 1 1358 0
 2779 008a 0023     		movs	r3, #0
 2780              	.L148:
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2781              		.loc 1 1359 0
 2782 008c 1846     		mov	r0, r3
 2783 008e 1037     		adds	r7, r7, #16
 2784              	.LCFI99:
 2785              		.cfi_def_cfa_offset 8
 2786 0090 BD46     		mov	sp, r7
 2787              	.LCFI100:
 2788              		.cfi_def_cfa_register 13
 2789              		@ sp needed
 2790 0092 80BD     		pop	{r7, pc}
 2791              		.cfi_endproc
 2792              	.LFE156:
 2794              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2795              		.align	1
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu fpv4-sp-d16
 2801              	UART_DMATransmitCplt:
 2802              	.LFB157:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2803              		.loc 1 1367 0
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 16
 2806              		@ frame_needed = 1, uses_anonymous_args = 0
 2807 0000 80B5     		push	{r7, lr}
 2808              	.LCFI101:
 2809              		.cfi_def_cfa_offset 8
 2810              		.cfi_offset 7, -8
 2811              		.cfi_offset 14, -4
 2812 0002 84B0     		sub	sp, sp, #16
 2813              	.LCFI102:
 2814              		.cfi_def_cfa_offset 24
 2815 0004 00AF     		add	r7, sp, #0
 2816              	.LCFI103:
 2817              		.cfi_def_cfa_register 7
 2818 0006 7860     		str	r0, [r7, #4]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
ARM GAS  /tmp/ccvy8ygO.s 			page 74


 2819              		.loc 1 1368 0
 2820 0008 7B68     		ldr	r3, [r7, #4]
 2821 000a 9B6B     		ldr	r3, [r3, #56]
 2822 000c FB60     		str	r3, [r7, #12]
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode*/
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 2823              		.loc 1 1371 0
 2824 000e 7B68     		ldr	r3, [r7, #4]
 2825 0010 1B68     		ldr	r3, [r3]
 2826 0012 1B68     		ldr	r3, [r3]
 2827 0014 03F48073 		and	r3, r3, #256
 2828 0018 002B     		cmp	r3, #0
 2829 001a 14D1     		bne	.L151
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 2830              		.loc 1 1373 0
 2831 001c FB68     		ldr	r3, [r7, #12]
 2832 001e 0022     		movs	r2, #0
 2833 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2834              		.loc 1 1377 0
 2835 0024 FB68     		ldr	r3, [r7, #12]
 2836 0026 1B68     		ldr	r3, [r3]
 2837 0028 9A68     		ldr	r2, [r3, #8]
 2838 002a FB68     		ldr	r3, [r7, #12]
 2839 002c 1B68     		ldr	r3, [r3]
 2840 002e 22F08002 		bic	r2, r2, #128
 2841 0032 9A60     		str	r2, [r3, #8]
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 2842              		.loc 1 1380 0
 2843 0034 FB68     		ldr	r3, [r7, #12]
 2844 0036 1B68     		ldr	r3, [r3]
 2845 0038 1A68     		ldr	r2, [r3]
 2846 003a FB68     		ldr	r3, [r7, #12]
 2847 003c 1B68     		ldr	r3, [r3]
 2848 003e 42F04002 		orr	r2, r2, #64
 2849 0042 1A60     		str	r2, [r3]
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2850              		.loc 1 1387 0
 2851 0044 02E0     		b	.L153
 2852              	.L151:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 2853              		.loc 1 1385 0
 2854 0046 F868     		ldr	r0, [r7, #12]
 2855 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
ARM GAS  /tmp/ccvy8ygO.s 			page 75


 2856              	.L153:
 2857              		.loc 1 1387 0
 2858 004c 00BF     		nop
 2859 004e 1037     		adds	r7, r7, #16
 2860              	.LCFI104:
 2861              		.cfi_def_cfa_offset 8
 2862 0050 BD46     		mov	sp, r7
 2863              	.LCFI105:
 2864              		.cfi_def_cfa_register 13
 2865              		@ sp needed
 2866 0052 80BD     		pop	{r7, pc}
 2867              		.cfi_endproc
 2868              	.LFE157:
 2870              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2871              		.align	1
 2872              		.syntax unified
 2873              		.thumb
 2874              		.thumb_func
 2875              		.fpu fpv4-sp-d16
 2877              	UART_DMATxHalfCplt:
 2878              	.LFB158:
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2879              		.loc 1 1395 0
 2880              		.cfi_startproc
 2881              		@ args = 0, pretend = 0, frame = 16
 2882              		@ frame_needed = 1, uses_anonymous_args = 0
 2883 0000 80B5     		push	{r7, lr}
 2884              	.LCFI106:
 2885              		.cfi_def_cfa_offset 8
 2886              		.cfi_offset 7, -8
 2887              		.cfi_offset 14, -4
 2888 0002 84B0     		sub	sp, sp, #16
 2889              	.LCFI107:
 2890              		.cfi_def_cfa_offset 24
 2891 0004 00AF     		add	r7, sp, #0
 2892              	.LCFI108:
 2893              		.cfi_def_cfa_register 7
 2894 0006 7860     		str	r0, [r7, #4]
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2895              		.loc 1 1396 0
 2896 0008 7B68     		ldr	r3, [r7, #4]
 2897 000a 9B6B     		ldr	r3, [r3, #56]
 2898 000c FB60     		str	r3, [r7, #12]
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 2899              		.loc 1 1398 0
 2900 000e F868     		ldr	r0, [r7, #12]
 2901 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2902              		.loc 1 1399 0
ARM GAS  /tmp/ccvy8ygO.s 			page 76


 2903 0014 00BF     		nop
 2904 0016 1037     		adds	r7, r7, #16
 2905              	.LCFI109:
 2906              		.cfi_def_cfa_offset 8
 2907 0018 BD46     		mov	sp, r7
 2908              	.LCFI110:
 2909              		.cfi_def_cfa_register 13
 2910              		@ sp needed
 2911 001a 80BD     		pop	{r7, pc}
 2912              		.cfi_endproc
 2913              	.LFE158:
 2915              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2916              		.align	1
 2917              		.syntax unified
 2918              		.thumb
 2919              		.thumb_func
 2920              		.fpu fpv4-sp-d16
 2922              	UART_DMAReceiveCplt:
 2923              	.LFB159:
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2924              		.loc 1 1407 0
 2925              		.cfi_startproc
 2926              		@ args = 0, pretend = 0, frame = 16
 2927              		@ frame_needed = 1, uses_anonymous_args = 0
 2928 0000 80B5     		push	{r7, lr}
 2929              	.LCFI111:
 2930              		.cfi_def_cfa_offset 8
 2931              		.cfi_offset 7, -8
 2932              		.cfi_offset 14, -4
 2933 0002 84B0     		sub	sp, sp, #16
 2934              	.LCFI112:
 2935              		.cfi_def_cfa_offset 24
 2936 0004 00AF     		add	r7, sp, #0
 2937              	.LCFI113:
 2938              		.cfi_def_cfa_register 7
 2939 0006 7860     		str	r0, [r7, #4]
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2940              		.loc 1 1408 0
 2941 0008 7B68     		ldr	r3, [r7, #4]
 2942 000a 9B6B     		ldr	r3, [r3, #56]
 2943 000c FB60     		str	r3, [r7, #12]
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 2944              		.loc 1 1411 0
 2945 000e 7B68     		ldr	r3, [r7, #4]
 2946 0010 1B68     		ldr	r3, [r3]
 2947 0012 1B68     		ldr	r3, [r3]
 2948 0014 03F48073 		and	r3, r3, #256
 2949 0018 002B     		cmp	r3, #0
ARM GAS  /tmp/ccvy8ygO.s 			page 77


 2950 001a 1FD1     		bne	.L156
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2951              		.loc 1 1413 0
 2952 001c FB68     		ldr	r3, [r7, #12]
 2953 001e 0022     		movs	r2, #0
 2954 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2955              		.loc 1 1416 0
 2956 0024 FB68     		ldr	r3, [r7, #12]
 2957 0026 1B68     		ldr	r3, [r3]
 2958 0028 1A68     		ldr	r2, [r3]
 2959 002a FB68     		ldr	r3, [r7, #12]
 2960 002c 1B68     		ldr	r3, [r3]
 2961 002e 22F48072 		bic	r2, r2, #256
 2962 0032 1A60     		str	r2, [r3]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2963              		.loc 1 1417 0
 2964 0034 FB68     		ldr	r3, [r7, #12]
 2965 0036 1B68     		ldr	r3, [r3]
 2966 0038 9A68     		ldr	r2, [r3, #8]
 2967 003a FB68     		ldr	r3, [r7, #12]
 2968 003c 1B68     		ldr	r3, [r3]
 2969 003e 22F00102 		bic	r2, r2, #1
 2970 0042 9A60     		str	r2, [r3, #8]
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2971              		.loc 1 1421 0
 2972 0044 FB68     		ldr	r3, [r7, #12]
 2973 0046 1B68     		ldr	r3, [r3]
 2974 0048 9A68     		ldr	r2, [r3, #8]
 2975 004a FB68     		ldr	r3, [r7, #12]
 2976 004c 1B68     		ldr	r3, [r3]
 2977 004e 22F04002 		bic	r2, r2, #64
 2978 0052 9A60     		str	r2, [r3, #8]
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	/* At end of Rx process, restore huart->RxState to Ready */
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2979              		.loc 1 1424 0
 2980 0054 FB68     		ldr	r3, [r7, #12]
 2981 0056 2022     		movs	r2, #32
 2982 0058 83F86A20 		strb	r2, [r3, #106]
 2983              	.L156:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 2984              		.loc 1 1426 0
 2985 005c F868     		ldr	r0, [r7, #12]
 2986 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2987              		.loc 1 1427 0
 2988 0062 00BF     		nop
 2989 0064 1037     		adds	r7, r7, #16
 2990              	.LCFI114:
ARM GAS  /tmp/ccvy8ygO.s 			page 78


 2991              		.cfi_def_cfa_offset 8
 2992 0066 BD46     		mov	sp, r7
 2993              	.LCFI115:
 2994              		.cfi_def_cfa_register 13
 2995              		@ sp needed
 2996 0068 80BD     		pop	{r7, pc}
 2997              		.cfi_endproc
 2998              	.LFE159:
 3000              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 3001              		.align	1
 3002              		.syntax unified
 3003              		.thumb
 3004              		.thumb_func
 3005              		.fpu fpv4-sp-d16
 3007              	UART_DMARxHalfCplt:
 3008              	.LFB160:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma  DMA handle
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3009              		.loc 1 1435 0
 3010              		.cfi_startproc
 3011              		@ args = 0, pretend = 0, frame = 16
 3012              		@ frame_needed = 1, uses_anonymous_args = 0
 3013 0000 80B5     		push	{r7, lr}
 3014              	.LCFI116:
 3015              		.cfi_def_cfa_offset 8
 3016              		.cfi_offset 7, -8
 3017              		.cfi_offset 14, -4
 3018 0002 84B0     		sub	sp, sp, #16
 3019              	.LCFI117:
 3020              		.cfi_def_cfa_offset 24
 3021 0004 00AF     		add	r7, sp, #0
 3022              	.LCFI118:
 3023              		.cfi_def_cfa_register 7
 3024 0006 7860     		str	r0, [r7, #4]
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3025              		.loc 1 1436 0
 3026 0008 7B68     		ldr	r3, [r7, #4]
 3027 000a 9B6B     		ldr	r3, [r3, #56]
 3028 000c FB60     		str	r3, [r7, #12]
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 3029              		.loc 1 1438 0
 3030 000e F868     		ldr	r0, [r7, #12]
 3031 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3032              		.loc 1 1439 0
 3033 0014 00BF     		nop
 3034 0016 1037     		adds	r7, r7, #16
 3035              	.LCFI119:
 3036              		.cfi_def_cfa_offset 8
 3037 0018 BD46     		mov	sp, r7
ARM GAS  /tmp/ccvy8ygO.s 			page 79


 3038              	.LCFI120:
 3039              		.cfi_def_cfa_register 13
 3040              		@ sp needed
 3041 001a 80BD     		pop	{r7, pc}
 3042              		.cfi_endproc
 3043              	.LFE160:
 3045              		.section	.text.UART_DMAError,"ax",%progbits
 3046              		.align	1
 3047              		.syntax unified
 3048              		.thumb
 3049              		.thumb_func
 3050              		.fpu fpv4-sp-d16
 3052              	UART_DMAError:
 3053              	.LFB161:
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3054              		.loc 1 1447 0
 3055              		.cfi_startproc
 3056              		@ args = 0, pretend = 0, frame = 16
 3057              		@ frame_needed = 1, uses_anonymous_args = 0
 3058 0000 80B5     		push	{r7, lr}
 3059              	.LCFI121:
 3060              		.cfi_def_cfa_offset 8
 3061              		.cfi_offset 7, -8
 3062              		.cfi_offset 14, -4
 3063 0002 84B0     		sub	sp, sp, #16
 3064              	.LCFI122:
 3065              		.cfi_def_cfa_offset 24
 3066 0004 00AF     		add	r7, sp, #0
 3067              	.LCFI123:
 3068              		.cfi_def_cfa_register 7
 3069 0006 7860     		str	r0, [r7, #4]
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3070              		.loc 1 1448 0
 3071 0008 7B68     		ldr	r3, [r7, #4]
 3072 000a 9B6B     		ldr	r3, [r3, #56]
 3073 000c FB60     		str	r3, [r7, #12]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3074              		.loc 1 1449 0
 3075 000e FB68     		ldr	r3, [r7, #12]
 3076 0010 0022     		movs	r2, #0
 3077 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3078              		.loc 1 1450 0
 3079 0016 FB68     		ldr	r3, [r7, #12]
 3080 0018 0022     		movs	r2, #0
 3081 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 3082              		.loc 1 1452 0
 3083 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccvy8ygO.s 			page 80


 3084 0020 93F86930 		ldrb	r3, [r3, #105]
 3085 0024 DBB2     		uxtb	r3, r3
 3086 0026 212B     		cmp	r3, #33
 3087 0028 09D1     		bne	.L159
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 3088              		.loc 1 1453 0
 3089 002a FB68     		ldr	r3, [r7, #12]
 3090 002c 1B68     		ldr	r3, [r3]
 3091 002e 9B68     		ldr	r3, [r3, #8]
 3092 0030 03F08003 		and	r3, r3, #128
 3093 0034 002B     		cmp	r3, #0
 3094 0036 02D0     		beq	.L159
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3095              		.loc 1 1455 0
 3096 0038 F868     		ldr	r0, [r7, #12]
 3097 003a FFF7FEFF 		bl	UART_EndTxTransfer
 3098              	.L159:
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 3099              		.loc 1 1459 0
 3100 003e FB68     		ldr	r3, [r7, #12]
 3101 0040 93F86A30 		ldrb	r3, [r3, #106]
 3102 0044 DBB2     		uxtb	r3, r3
 3103 0046 222B     		cmp	r3, #34
 3104 0048 09D1     		bne	.L160
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 3105              		.loc 1 1460 0
 3106 004a FB68     		ldr	r3, [r7, #12]
 3107 004c 1B68     		ldr	r3, [r3]
 3108 004e 9B68     		ldr	r3, [r3, #8]
 3109 0050 03F04003 		and	r3, r3, #64
 3110 0054 002B     		cmp	r3, #0
 3111 0056 02D0     		beq	.L160
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3112              		.loc 1 1462 0
 3113 0058 F868     		ldr	r0, [r7, #12]
 3114 005a FFF7FEFF 		bl	UART_EndRxTransfer
 3115              	.L160:
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->ErrorCode, HAL_UART_ERROR_DMA);
 3116              		.loc 1 1464 0
 3117 005e FB68     		ldr	r3, [r7, #12]
 3118 0060 DB6E     		ldr	r3, [r3, #108]
 3119 0062 43F01002 		orr	r2, r3, #16
 3120 0066 FB68     		ldr	r3, [r7, #12]
 3121 0068 DA66     		str	r2, [r3, #108]
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3122              		.loc 1 1465 0
 3123 006a F868     		ldr	r0, [r7, #12]
 3124 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3125              		.loc 1 1466 0
 3126 0070 00BF     		nop
ARM GAS  /tmp/ccvy8ygO.s 			page 81


 3127 0072 1037     		adds	r7, r7, #16
 3128              	.LCFI124:
 3129              		.cfi_def_cfa_offset 8
 3130 0074 BD46     		mov	sp, r7
 3131              	.LCFI125:
 3132              		.cfi_def_cfa_register 13
 3133              		@ sp needed
 3134 0076 80BD     		pop	{r7, pc}
 3135              		.cfi_endproc
 3136              	.LFE161:
 3138              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3139              		.align	1
 3140              		.syntax unified
 3141              		.thumb
 3142              		.thumb_func
 3143              		.fpu fpv4-sp-d16
 3145              	UART_DMAAbortOnError:
 3146              	.LFB162:
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication abort callback, when call by HAL services on Error
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure following error occurrence).
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3147              		.loc 1 1475 0
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 16
 3150              		@ frame_needed = 1, uses_anonymous_args = 0
 3151 0000 80B5     		push	{r7, lr}
 3152              	.LCFI126:
 3153              		.cfi_def_cfa_offset 8
 3154              		.cfi_offset 7, -8
 3155              		.cfi_offset 14, -4
 3156 0002 84B0     		sub	sp, sp, #16
 3157              	.LCFI127:
 3158              		.cfi_def_cfa_offset 24
 3159 0004 00AF     		add	r7, sp, #0
 3160              	.LCFI128:
 3161              		.cfi_def_cfa_register 7
 3162 0006 7860     		str	r0, [r7, #4]
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 3163              		.loc 1 1476 0
 3164 0008 7B68     		ldr	r3, [r7, #4]
 3165 000a 9B6B     		ldr	r3, [r3, #56]
 3166 000c FB60     		str	r3, [r7, #12]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3167              		.loc 1 1477 0
 3168 000e FB68     		ldr	r3, [r7, #12]
 3169 0010 0022     		movs	r2, #0
 3170 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3171              		.loc 1 1478 0
 3172 0016 FB68     		ldr	r3, [r7, #12]
 3173 0018 0022     		movs	r2, #0
ARM GAS  /tmp/ccvy8ygO.s 			page 82


 3174 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3175              		.loc 1 1480 0
 3176 001e F868     		ldr	r0, [r7, #12]
 3177 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3178              		.loc 1 1481 0
 3179 0024 00BF     		nop
 3180 0026 1037     		adds	r7, r7, #16
 3181              	.LCFI129:
 3182              		.cfi_def_cfa_offset 8
 3183 0028 BD46     		mov	sp, r7
 3184              	.LCFI130:
 3185              		.cfi_def_cfa_register 13
 3186              		@ sp needed
 3187 002a 80BD     		pop	{r7, pc}
 3188              		.cfi_endproc
 3189              	.LFE162:
 3191              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3192              		.align	1
 3193              		.weak	HAL_UART_TxCpltCallback
 3194              		.syntax unified
 3195              		.thumb
 3196              		.thumb_func
 3197              		.fpu fpv4-sp-d16
 3199              	HAL_UART_TxCpltCallback:
 3200              	.LFB163:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3201              		.loc 1 1489 0
 3202              		.cfi_startproc
 3203              		@ args = 0, pretend = 0, frame = 8
 3204              		@ frame_needed = 1, uses_anonymous_args = 0
 3205              		@ link register save eliminated.
 3206 0000 80B4     		push	{r7}
 3207              	.LCFI131:
 3208              		.cfi_def_cfa_offset 4
 3209              		.cfi_offset 7, -4
 3210 0002 83B0     		sub	sp, sp, #12
 3211              	.LCFI132:
 3212              		.cfi_def_cfa_offset 16
 3213 0004 00AF     		add	r7, sp, #0
 3214              	.LCFI133:
 3215              		.cfi_def_cfa_register 7
 3216 0006 7860     		str	r0, [r7, #4]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
ARM GAS  /tmp/ccvy8ygO.s 			page 83


1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3217              		.loc 1 1496 0
 3218 0008 00BF     		nop
 3219 000a 0C37     		adds	r7, r7, #12
 3220              	.LCFI134:
 3221              		.cfi_def_cfa_offset 4
 3222 000c BD46     		mov	sp, r7
 3223              	.LCFI135:
 3224              		.cfi_def_cfa_register 13
 3225              		@ sp needed
 3226 000e 5DF8047B 		ldr	r7, [sp], #4
 3227              	.LCFI136:
 3228              		.cfi_restore 7
 3229              		.cfi_def_cfa_offset 0
 3230 0012 7047     		bx	lr
 3231              		.cfi_endproc
 3232              	.LFE163:
 3234              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3235              		.align	1
 3236              		.weak	HAL_UART_TxHalfCpltCallback
 3237              		.syntax unified
 3238              		.thumb
 3239              		.thumb_func
 3240              		.fpu fpv4-sp-d16
 3242              	HAL_UART_TxHalfCpltCallback:
 3243              	.LFB164:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3244              		.loc 1 1504 0
 3245              		.cfi_startproc
 3246              		@ args = 0, pretend = 0, frame = 8
 3247              		@ frame_needed = 1, uses_anonymous_args = 0
 3248              		@ link register save eliminated.
 3249 0000 80B4     		push	{r7}
 3250              	.LCFI137:
 3251              		.cfi_def_cfa_offset 4
 3252              		.cfi_offset 7, -4
 3253 0002 83B0     		sub	sp, sp, #12
 3254              	.LCFI138:
 3255              		.cfi_def_cfa_offset 16
 3256 0004 00AF     		add	r7, sp, #0
 3257              	.LCFI139:
 3258              		.cfi_def_cfa_register 7
 3259 0006 7860     		str	r0, [r7, #4]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
ARM GAS  /tmp/ccvy8ygO.s 			page 84


1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3260              		.loc 1 1511 0
 3261 0008 00BF     		nop
 3262 000a 0C37     		adds	r7, r7, #12
 3263              	.LCFI140:
 3264              		.cfi_def_cfa_offset 4
 3265 000c BD46     		mov	sp, r7
 3266              	.LCFI141:
 3267              		.cfi_def_cfa_register 13
 3268              		@ sp needed
 3269 000e 5DF8047B 		ldr	r7, [sp], #4
 3270              	.LCFI142:
 3271              		.cfi_restore 7
 3272              		.cfi_def_cfa_offset 0
 3273 0012 7047     		bx	lr
 3274              		.cfi_endproc
 3275              	.LFE164:
 3277              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3278              		.align	1
 3279              		.weak	HAL_UART_RxCpltCallback
 3280              		.syntax unified
 3281              		.thumb
 3282              		.thumb_func
 3283              		.fpu fpv4-sp-d16
 3285              	HAL_UART_RxCpltCallback:
 3286              	.LFB165:
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3287              		.loc 1 1519 0
 3288              		.cfi_startproc
 3289              		@ args = 0, pretend = 0, frame = 8
 3290              		@ frame_needed = 1, uses_anonymous_args = 0
 3291              		@ link register save eliminated.
 3292 0000 80B4     		push	{r7}
 3293              	.LCFI143:
 3294              		.cfi_def_cfa_offset 4
 3295              		.cfi_offset 7, -4
 3296 0002 83B0     		sub	sp, sp, #12
 3297              	.LCFI144:
 3298              		.cfi_def_cfa_offset 16
 3299 0004 00AF     		add	r7, sp, #0
 3300              	.LCFI145:
 3301              		.cfi_def_cfa_register 7
 3302 0006 7860     		str	r0, [r7, #4]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
ARM GAS  /tmp/ccvy8ygO.s 			page 85


 3303              		.loc 1 1526 0
 3304 0008 00BF     		nop
 3305 000a 0C37     		adds	r7, r7, #12
 3306              	.LCFI146:
 3307              		.cfi_def_cfa_offset 4
 3308 000c BD46     		mov	sp, r7
 3309              	.LCFI147:
 3310              		.cfi_def_cfa_register 13
 3311              		@ sp needed
 3312 000e 5DF8047B 		ldr	r7, [sp], #4
 3313              	.LCFI148:
 3314              		.cfi_restore 7
 3315              		.cfi_def_cfa_offset 0
 3316 0012 7047     		bx	lr
 3317              		.cfi_endproc
 3318              	.LFE165:
 3320              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3321              		.align	1
 3322              		.weak	HAL_UART_RxHalfCpltCallback
 3323              		.syntax unified
 3324              		.thumb
 3325              		.thumb_func
 3326              		.fpu fpv4-sp-d16
 3328              	HAL_UART_RxHalfCpltCallback:
 3329              	.LFB166:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3330              		.loc 1 1534 0
 3331              		.cfi_startproc
 3332              		@ args = 0, pretend = 0, frame = 8
 3333              		@ frame_needed = 1, uses_anonymous_args = 0
 3334              		@ link register save eliminated.
 3335 0000 80B4     		push	{r7}
 3336              	.LCFI149:
 3337              		.cfi_def_cfa_offset 4
 3338              		.cfi_offset 7, -4
 3339 0002 83B0     		sub	sp, sp, #12
 3340              	.LCFI150:
 3341              		.cfi_def_cfa_offset 16
 3342 0004 00AF     		add	r7, sp, #0
 3343              	.LCFI151:
 3344              		.cfi_def_cfa_register 7
 3345 0006 7860     		str	r0, [r7, #4]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3346              		.loc 1 1541 0
ARM GAS  /tmp/ccvy8ygO.s 			page 86


 3347 0008 00BF     		nop
 3348 000a 0C37     		adds	r7, r7, #12
 3349              	.LCFI152:
 3350              		.cfi_def_cfa_offset 4
 3351 000c BD46     		mov	sp, r7
 3352              	.LCFI153:
 3353              		.cfi_def_cfa_register 13
 3354              		@ sp needed
 3355 000e 5DF8047B 		ldr	r7, [sp], #4
 3356              	.LCFI154:
 3357              		.cfi_restore 7
 3358              		.cfi_def_cfa_offset 0
 3359 0012 7047     		bx	lr
 3360              		.cfi_endproc
 3361              	.LFE166:
 3363              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3364              		.align	1
 3365              		.weak	HAL_UART_ErrorCallback
 3366              		.syntax unified
 3367              		.thumb
 3368              		.thumb_func
 3369              		.fpu fpv4-sp-d16
 3371              	HAL_UART_ErrorCallback:
 3372              	.LFB167:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART error callbacks
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3373              		.loc 1 1549 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 8
 3376              		@ frame_needed = 1, uses_anonymous_args = 0
 3377              		@ link register save eliminated.
 3378 0000 80B4     		push	{r7}
 3379              	.LCFI155:
 3380              		.cfi_def_cfa_offset 4
 3381              		.cfi_offset 7, -4
 3382 0002 83B0     		sub	sp, sp, #12
 3383              	.LCFI156:
 3384              		.cfi_def_cfa_offset 16
 3385 0004 00AF     		add	r7, sp, #0
 3386              	.LCFI157:
 3387              		.cfi_def_cfa_register 7
 3388 0006 7860     		str	r0, [r7, #4]
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3389              		.loc 1 1556 0
 3390 0008 00BF     		nop
ARM GAS  /tmp/ccvy8ygO.s 			page 87


 3391 000a 0C37     		adds	r7, r7, #12
 3392              	.LCFI158:
 3393              		.cfi_def_cfa_offset 4
 3394 000c BD46     		mov	sp, r7
 3395              	.LCFI159:
 3396              		.cfi_def_cfa_register 13
 3397              		@ sp needed
 3398 000e 5DF8047B 		ldr	r7, [sp], #4
 3399              	.LCFI160:
 3400              		.cfi_restore 7
 3401              		.cfi_def_cfa_offset 0
 3402 0012 7047     		bx	lr
 3403              		.cfi_endproc
 3404              	.LFE167:
 3406              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3407              		.align	1
 3408              		.syntax unified
 3409              		.thumb
 3410              		.thumb_func
 3411              		.fpu fpv4-sp-d16
 3413              	UART_Transmit_IT:
 3414              	.LFB168:
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3415              		.loc 1 1566 0
 3416              		.cfi_startproc
 3417              		@ args = 0, pretend = 0, frame = 16
 3418              		@ frame_needed = 1, uses_anonymous_args = 0
 3419              		@ link register save eliminated.
 3420 0000 80B4     		push	{r7}
 3421              	.LCFI161:
 3422              		.cfi_def_cfa_offset 4
 3423              		.cfi_offset 7, -4
 3424 0002 85B0     		sub	sp, sp, #20
 3425              	.LCFI162:
 3426              		.cfi_def_cfa_offset 24
 3427 0004 00AF     		add	r7, sp, #0
 3428              	.LCFI163:
 3429              		.cfi_def_cfa_register 7
 3430 0006 7860     		str	r0, [r7, #4]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3431              		.loc 1 1570 0
 3432 0008 7B68     		ldr	r3, [r7, #4]
 3433 000a 93F86930 		ldrb	r3, [r3, #105]
 3434 000e DBB2     		uxtb	r3, r3
 3435 0010 212B     		cmp	r3, #33
ARM GAS  /tmp/ccvy8ygO.s 			page 88


 3436 0012 45D1     		bne	.L168
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 3437              		.loc 1 1573 0
 3438 0014 7B68     		ldr	r3, [r7, #4]
 3439 0016 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 3440 001a 9BB2     		uxth	r3, r3
 3441 001c 002B     		cmp	r3, #0
 3442 001e 11D1     		bne	.L169
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 3443              		.loc 1 1576 0
 3444 0020 7B68     		ldr	r3, [r7, #4]
 3445 0022 1B68     		ldr	r3, [r3]
 3446 0024 1A68     		ldr	r2, [r3]
 3447 0026 7B68     		ldr	r3, [r7, #4]
 3448 0028 1B68     		ldr	r3, [r3]
 3449 002a 22F08002 		bic	r2, r2, #128
 3450 002e 1A60     		str	r2, [r3]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3451              		.loc 1 1579 0
 3452 0030 7B68     		ldr	r3, [r7, #4]
 3453 0032 1B68     		ldr	r3, [r3]
 3454 0034 1A68     		ldr	r2, [r3]
 3455 0036 7B68     		ldr	r3, [r7, #4]
 3456 0038 1B68     		ldr	r3, [r3]
 3457 003a 42F04002 		orr	r2, r2, #64
 3458 003e 1A60     		str	r2, [r3]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3459              		.loc 1 1581 0
 3460 0040 0023     		movs	r3, #0
 3461 0042 2EE0     		b	.L170
 3462              	.L169:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 3463              		.loc 1 1585 0
 3464 0044 7B68     		ldr	r3, [r7, #4]
 3465 0046 9B68     		ldr	r3, [r3, #8]
 3466 0048 B3F5805F 		cmp	r3, #4096
 3467 004c 14D1     		bne	.L171
 3468              		.loc 1 1585 0 is_stmt 0 discriminator 1
 3469 004e 7B68     		ldr	r3, [r7, #4]
 3470 0050 1B69     		ldr	r3, [r3, #16]
 3471 0052 002B     		cmp	r3, #0
 3472 0054 10D1     		bne	.L171
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 3473              		.loc 1 1587 0 is_stmt 1
 3474 0056 7B68     		ldr	r3, [r7, #4]
 3475 0058 DB6C     		ldr	r3, [r3, #76]
ARM GAS  /tmp/ccvy8ygO.s 			page 89


 3476 005a FB60     		str	r3, [r7, #12]
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3477              		.loc 1 1588 0
 3478 005c FB68     		ldr	r3, [r7, #12]
 3479 005e 1B88     		ldrh	r3, [r3]
 3480 0060 1A46     		mov	r2, r3
 3481 0062 7B68     		ldr	r3, [r7, #4]
 3482 0064 1B68     		ldr	r3, [r3]
 3483 0066 C2F30802 		ubfx	r2, r2, #0, #9
 3484 006a 9A62     		str	r2, [r3, #40]
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 3485              		.loc 1 1589 0
 3486 006c 7B68     		ldr	r3, [r7, #4]
 3487 006e DB6C     		ldr	r3, [r3, #76]
 3488 0070 9A1C     		adds	r2, r3, #2
 3489 0072 7B68     		ldr	r3, [r7, #4]
 3490 0074 DA64     		str	r2, [r3, #76]
 3491 0076 08E0     		b	.L172
 3492              	.L171:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 3493              		.loc 1 1593 0
 3494 0078 7B68     		ldr	r3, [r7, #4]
 3495 007a DB6C     		ldr	r3, [r3, #76]
 3496 007c 591C     		adds	r1, r3, #1
 3497 007e 7A68     		ldr	r2, [r7, #4]
 3498 0080 D164     		str	r1, [r2, #76]
 3499 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3500 0084 7B68     		ldr	r3, [r7, #4]
 3501 0086 1B68     		ldr	r3, [r3]
 3502 0088 9A62     		str	r2, [r3, #40]
 3503              	.L172:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 3504              		.loc 1 1596 0
 3505 008a 7B68     		ldr	r3, [r7, #4]
 3506 008c B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 3507 0090 9BB2     		uxth	r3, r3
 3508 0092 013B     		subs	r3, r3, #1
 3509 0094 9AB2     		uxth	r2, r3
 3510 0096 7B68     		ldr	r3, [r7, #4]
 3511 0098 A3F85220 		strh	r2, [r3, #82]	@ movhi
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3512              		.loc 1 1598 0
 3513 009c 0023     		movs	r3, #0
 3514 009e 00E0     		b	.L170
 3515              	.L168:
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 3516              		.loc 1 1603 0
ARM GAS  /tmp/ccvy8ygO.s 			page 90


 3517 00a0 0223     		movs	r3, #2
 3518              	.L170:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3519              		.loc 1 1605 0
 3520 00a2 1846     		mov	r0, r3
 3521 00a4 1437     		adds	r7, r7, #20
 3522              	.LCFI164:
 3523              		.cfi_def_cfa_offset 4
 3524 00a6 BD46     		mov	sp, r7
 3525              	.LCFI165:
 3526              		.cfi_def_cfa_register 13
 3527              		@ sp needed
 3528 00a8 5DF8047B 		ldr	r7, [sp], #4
 3529              	.LCFI166:
 3530              		.cfi_restore 7
 3531              		.cfi_def_cfa_offset 0
 3532 00ac 7047     		bx	lr
 3533              		.cfi_endproc
 3534              	.LFE168:
 3536              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3537              		.align	1
 3538              		.syntax unified
 3539              		.thumb
 3540              		.thumb_func
 3541              		.fpu fpv4-sp-d16
 3543              	UART_EndTransmit_IT:
 3544              	.LFB169:
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3545              		.loc 1 1614 0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 8
 3548              		@ frame_needed = 1, uses_anonymous_args = 0
 3549 0000 80B5     		push	{r7, lr}
 3550              	.LCFI167:
 3551              		.cfi_def_cfa_offset 8
 3552              		.cfi_offset 7, -8
 3553              		.cfi_offset 14, -4
 3554 0002 82B0     		sub	sp, sp, #8
 3555              	.LCFI168:
 3556              		.cfi_def_cfa_offset 16
 3557 0004 00AF     		add	r7, sp, #0
 3558              	.LCFI169:
 3559              		.cfi_def_cfa_register 7
 3560 0006 7860     		str	r0, [r7, #4]
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3561              		.loc 1 1616 0
 3562 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 91


 3563 000a 1B68     		ldr	r3, [r3]
 3564 000c 1A68     		ldr	r2, [r3]
 3565 000e 7B68     		ldr	r3, [r7, #4]
 3566 0010 1B68     		ldr	r3, [r3]
 3567 0012 22F04002 		bic	r2, r2, #64
 3568 0016 1A60     		str	r2, [r3]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3569              		.loc 1 1619 0
 3570 0018 7B68     		ldr	r3, [r7, #4]
 3571 001a 2022     		movs	r2, #32
 3572 001c 83F86920 		strb	r2, [r3, #105]
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3573              		.loc 1 1621 0
 3574 0020 7868     		ldr	r0, [r7, #4]
 3575 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3576              		.loc 1 1623 0
 3577 0026 0023     		movs	r3, #0
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3578              		.loc 1 1624 0
 3579 0028 1846     		mov	r0, r3
 3580 002a 0837     		adds	r7, r7, #8
 3581              	.LCFI170:
 3582              		.cfi_def_cfa_offset 8
 3583 002c BD46     		mov	sp, r7
 3584              	.LCFI171:
 3585              		.cfi_def_cfa_register 13
 3586              		@ sp needed
 3587 002e 80BD     		pop	{r7, pc}
 3588              		.cfi_endproc
 3589              	.LFE169:
 3591              		.section	.text.UART_Receive_IT,"ax",%progbits
 3592              		.align	1
 3593              		.syntax unified
 3594              		.thumb
 3595              		.thumb_func
 3596              		.fpu fpv4-sp-d16
 3598              	UART_Receive_IT:
 3599              	.LFB170:
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Function called under interruption only, once
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3600              		.loc 1 1634 0
 3601              		.cfi_startproc
 3602              		@ args = 0, pretend = 0, frame = 16
 3603              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccvy8ygO.s 			page 92


 3604 0000 90B5     		push	{r4, r7, lr}
 3605              	.LCFI172:
 3606              		.cfi_def_cfa_offset 12
 3607              		.cfi_offset 4, -12
 3608              		.cfi_offset 7, -8
 3609              		.cfi_offset 14, -4
 3610 0002 85B0     		sub	sp, sp, #20
 3611              	.LCFI173:
 3612              		.cfi_def_cfa_offset 32
 3613 0004 00AF     		add	r7, sp, #0
 3614              	.LCFI174:
 3615              		.cfi_def_cfa_register 7
 3616 0006 7860     		str	r0, [r7, #4]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t* tmp;
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 3617              		.loc 1 1636 0
 3618 0008 7B68     		ldr	r3, [r7, #4]
 3619 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 3620 000e FB81     		strh	r3, [r7, #14]	@ movhi
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 3621              		.loc 1 1639 0
 3622 0010 7B68     		ldr	r3, [r7, #4]
 3623 0012 93F86A30 		ldrb	r3, [r3, #106]
 3624 0016 DBB2     		uxtb	r3, r3
 3625 0018 222B     		cmp	r3, #34
 3626 001a 4FD1     		bne	.L176
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 3627              		.loc 1 1642 0
 3628 001c 7B68     		ldr	r3, [r7, #4]
 3629 001e 9B68     		ldr	r3, [r3, #8]
 3630 0020 B3F5805F 		cmp	r3, #4096
 3631 0024 15D1     		bne	.L177
 3632              		.loc 1 1642 0 is_stmt 0 discriminator 1
 3633 0026 7B68     		ldr	r3, [r7, #4]
 3634 0028 1B69     		ldr	r3, [r3, #16]
 3635 002a 002B     		cmp	r3, #0
 3636 002c 11D1     		bne	.L177
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 3637              		.loc 1 1644 0 is_stmt 1
 3638 002e 7B68     		ldr	r3, [r7, #4]
 3639 0030 5B6D     		ldr	r3, [r3, #84]
 3640 0032 BB60     		str	r3, [r7, #8]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 3641              		.loc 1 1645 0
 3642 0034 7B68     		ldr	r3, [r7, #4]
 3643 0036 1B68     		ldr	r3, [r3]
 3644 0038 5B6A     		ldr	r3, [r3, #36]
 3645 003a 9AB2     		uxth	r2, r3
 3646 003c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3647 003e 1340     		ands	r3, r3, r2
 3648 0040 9AB2     		uxth	r2, r3
 3649 0042 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccvy8ygO.s 			page 93


 3650 0044 1A80     		strh	r2, [r3]	@ movhi
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 3651              		.loc 1 1646 0
 3652 0046 7B68     		ldr	r3, [r7, #4]
 3653 0048 5B6D     		ldr	r3, [r3, #84]
 3654 004a 9A1C     		adds	r2, r3, #2
 3655 004c 7B68     		ldr	r3, [r7, #4]
 3656 004e 5A65     		str	r2, [r3, #84]
 3657 0050 0DE0     		b	.L178
 3658              	.L177:
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 3659              		.loc 1 1650 0
 3660 0052 7B68     		ldr	r3, [r7, #4]
 3661 0054 1B68     		ldr	r3, [r3]
 3662 0056 5B6A     		ldr	r3, [r3, #36]
 3663 0058 D9B2     		uxtb	r1, r3
 3664 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 3665 005c DAB2     		uxtb	r2, r3
 3666 005e 7B68     		ldr	r3, [r7, #4]
 3667 0060 5B6D     		ldr	r3, [r3, #84]
 3668 0062 5C1C     		adds	r4, r3, #1
 3669 0064 7868     		ldr	r0, [r7, #4]
 3670 0066 4465     		str	r4, [r0, #84]
 3671 0068 0A40     		ands	r2, r2, r1
 3672 006a D2B2     		uxtb	r2, r2
 3673 006c 1A70     		strb	r2, [r3]
 3674              	.L178:
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 3675              		.loc 1 1653 0
 3676 006e 7B68     		ldr	r3, [r7, #4]
 3677 0070 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 3678 0074 9BB2     		uxth	r3, r3
 3679 0076 013B     		subs	r3, r3, #1
 3680 0078 9BB2     		uxth	r3, r3
 3681 007a 7A68     		ldr	r2, [r7, #4]
 3682 007c 1946     		mov	r1, r3	@ movhi
 3683 007e A2F85A10 		strh	r1, [r2, #90]	@ movhi
 3684 0082 002B     		cmp	r3, #0
 3685 0084 18D1     		bne	.L179
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3686              		.loc 1 1656 0
 3687 0086 7B68     		ldr	r3, [r7, #4]
 3688 0088 1B68     		ldr	r3, [r3]
 3689 008a 1A68     		ldr	r2, [r3]
 3690 008c 7B68     		ldr	r3, [r7, #4]
 3691 008e 1B68     		ldr	r3, [r3]
 3692 0090 22F49072 		bic	r2, r2, #288
 3693 0094 1A60     		str	r2, [r3]
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
ARM GAS  /tmp/ccvy8ygO.s 			page 94


1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3694              		.loc 1 1659 0
 3695 0096 7B68     		ldr	r3, [r7, #4]
 3696 0098 1B68     		ldr	r3, [r3]
 3697 009a 9A68     		ldr	r2, [r3, #8]
 3698 009c 7B68     		ldr	r3, [r7, #4]
 3699 009e 1B68     		ldr	r3, [r3]
 3700 00a0 22F00102 		bic	r2, r2, #1
 3701 00a4 9A60     		str	r2, [r3, #8]
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3702              		.loc 1 1662 0
 3703 00a6 7B68     		ldr	r3, [r7, #4]
 3704 00a8 2022     		movs	r2, #32
 3705 00aa 83F86A20 		strb	r2, [r3, #106]
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 3706              		.loc 1 1664 0
 3707 00ae 7868     		ldr	r0, [r7, #4]
 3708 00b0 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_OK;
 3709              		.loc 1 1666 0
 3710 00b4 0023     		movs	r3, #0
 3711 00b6 0AE0     		b	.L180
 3712              	.L179:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 3713              		.loc 1 1669 0
 3714 00b8 0023     		movs	r3, #0
 3715 00ba 08E0     		b	.L180
 3716              	.L176:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3717              		.loc 1 1674 0
 3718 00bc 7B68     		ldr	r3, [r7, #4]
 3719 00be 1B68     		ldr	r3, [r3]
 3720 00c0 9A69     		ldr	r2, [r3, #24]
 3721 00c2 7B68     		ldr	r3, [r7, #4]
 3722 00c4 1B68     		ldr	r3, [r3]
 3723 00c6 42F00802 		orr	r2, r2, #8
 3724 00ca 9A61     		str	r2, [r3, #24]
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 3725              		.loc 1 1676 0
 3726 00cc 0223     		movs	r3, #2
 3727              	.L180:
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3728              		.loc 1 1678 0
 3729 00ce 1846     		mov	r0, r3
 3730 00d0 1437     		adds	r7, r7, #20
ARM GAS  /tmp/ccvy8ygO.s 			page 95


 3731              	.LCFI175:
 3732              		.cfi_def_cfa_offset 12
 3733 00d2 BD46     		mov	sp, r7
 3734              	.LCFI176:
 3735              		.cfi_def_cfa_register 13
 3736              		@ sp needed
 3737 00d4 90BD     		pop	{r4, r7, pc}
 3738              		.cfi_endproc
 3739              	.LFE170:
 3741              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 3742              		.align	1
 3743              		.syntax unified
 3744              		.thumb
 3745              		.thumb_func
 3746              		.fpu fpv4-sp-d16
 3748              	UART_EndTxTransfer:
 3749              	.LFB171:
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3750              		.loc 1 1686 0
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 8
 3753              		@ frame_needed = 1, uses_anonymous_args = 0
 3754              		@ link register save eliminated.
 3755 0000 80B4     		push	{r7}
 3756              	.LCFI177:
 3757              		.cfi_def_cfa_offset 4
 3758              		.cfi_offset 7, -4
 3759 0002 83B0     		sub	sp, sp, #12
 3760              	.LCFI178:
 3761              		.cfi_def_cfa_offset 16
 3762 0004 00AF     		add	r7, sp, #0
 3763              	.LCFI179:
 3764              		.cfi_def_cfa_register 7
 3765 0006 7860     		str	r0, [r7, #4]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3766              		.loc 1 1688 0
 3767 0008 7B68     		ldr	r3, [r7, #4]
 3768 000a 1B68     		ldr	r3, [r3]
 3769 000c 1A68     		ldr	r2, [r3]
 3770 000e 7B68     		ldr	r3, [r7, #4]
 3771 0010 1B68     		ldr	r3, [r3]
 3772 0012 22F0C002 		bic	r2, r2, #192
 3773 0016 1A60     		str	r2, [r3]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3774              		.loc 1 1691 0
 3775 0018 7B68     		ldr	r3, [r7, #4]
 3776 001a 2022     		movs	r2, #32
ARM GAS  /tmp/ccvy8ygO.s 			page 96


 3777 001c 83F86920 		strb	r2, [r3, #105]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3778              		.loc 1 1692 0
 3779 0020 00BF     		nop
 3780 0022 0C37     		adds	r7, r7, #12
 3781              	.LCFI180:
 3782              		.cfi_def_cfa_offset 4
 3783 0024 BD46     		mov	sp, r7
 3784              	.LCFI181:
 3785              		.cfi_def_cfa_register 13
 3786              		@ sp needed
 3787 0026 5DF8047B 		ldr	r7, [sp], #4
 3788              	.LCFI182:
 3789              		.cfi_restore 7
 3790              		.cfi_def_cfa_offset 0
 3791 002a 7047     		bx	lr
 3792              		.cfi_endproc
 3793              	.LFE171:
 3795              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 3796              		.align	1
 3797              		.syntax unified
 3798              		.thumb
 3799              		.thumb_func
 3800              		.fpu fpv4-sp-d16
 3802              	UART_EndRxTransfer:
 3803              	.LFB172:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3804              		.loc 1 1701 0
 3805              		.cfi_startproc
 3806              		@ args = 0, pretend = 0, frame = 8
 3807              		@ frame_needed = 1, uses_anonymous_args = 0
 3808              		@ link register save eliminated.
 3809 0000 80B4     		push	{r7}
 3810              	.LCFI183:
 3811              		.cfi_def_cfa_offset 4
 3812              		.cfi_offset 7, -4
 3813 0002 83B0     		sub	sp, sp, #12
 3814              	.LCFI184:
 3815              		.cfi_def_cfa_offset 16
 3816 0004 00AF     		add	r7, sp, #0
 3817              	.LCFI185:
 3818              		.cfi_def_cfa_register 7
 3819 0006 7860     		str	r0, [r7, #4]
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3820              		.loc 1 1703 0
 3821 0008 7B68     		ldr	r3, [r7, #4]
 3822 000a 1B68     		ldr	r3, [r3]
 3823 000c 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccvy8ygO.s 			page 97


 3824 000e 7B68     		ldr	r3, [r7, #4]
 3825 0010 1B68     		ldr	r3, [r3]
 3826 0012 22F49072 		bic	r2, r2, #288
 3827 0016 1A60     		str	r2, [r3]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3828              		.loc 1 1704 0
 3829 0018 7B68     		ldr	r3, [r7, #4]
 3830 001a 1B68     		ldr	r3, [r3]
 3831 001c 9A68     		ldr	r2, [r3, #8]
 3832 001e 7B68     		ldr	r3, [r7, #4]
 3833 0020 1B68     		ldr	r3, [r3]
 3834 0022 22F00102 		bic	r2, r2, #1
 3835 0026 9A60     		str	r2, [r3, #8]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3836              		.loc 1 1707 0
 3837 0028 7B68     		ldr	r3, [r7, #4]
 3838 002a 2022     		movs	r2, #32
 3839 002c 83F86A20 		strb	r2, [r3, #106]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3840              		.loc 1 1708 0
 3841 0030 00BF     		nop
 3842 0032 0C37     		adds	r7, r7, #12
 3843              	.LCFI186:
 3844              		.cfi_def_cfa_offset 4
 3845 0034 BD46     		mov	sp, r7
 3846              	.LCFI187:
 3847              		.cfi_def_cfa_register 13
 3848              		@ sp needed
 3849 0036 5DF8047B 		ldr	r7, [sp], #4
 3850              	.LCFI188:
 3851              		.cfi_restore 7
 3852              		.cfi_def_cfa_offset 0
 3853 003a 7047     		bx	lr
 3854              		.cfi_endproc
 3855              	.LFE172:
 3857              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3858              		.align	1
 3859              		.global	HAL_MultiProcessor_EnableMuteMode
 3860              		.syntax unified
 3861              		.thumb
 3862              		.thumb_func
 3863              		.fpu fpv4-sp-d16
 3865              	HAL_MultiProcessor_EnableMuteMode:
 3866              	.LFB173:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
ARM GAS  /tmp/ccvy8ygO.s 			page 98


1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_GetState() API is helpful to check in run-time the state of the UART peripheral.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 	 (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3867              		.loc 1 1747 0
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 8
 3870              		@ frame_needed = 1, uses_anonymous_args = 0
 3871 0000 80B5     		push	{r7, lr}
 3872              	.LCFI189:
 3873              		.cfi_def_cfa_offset 8
 3874              		.cfi_offset 7, -8
 3875              		.cfi_offset 14, -4
 3876 0002 82B0     		sub	sp, sp, #8
 3877              	.LCFI190:
 3878              		.cfi_def_cfa_offset 16
 3879 0004 00AF     		add	r7, sp, #0
 3880              	.LCFI191:
 3881              		.cfi_def_cfa_register 7
 3882 0006 7860     		str	r0, [r7, #4]
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3883              		.loc 1 1749 0
 3884 0008 7B68     		ldr	r3, [r7, #4]
 3885 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3886 000e 012B     		cmp	r3, #1
 3887 0010 01D1     		bne	.L184
 3888              		.loc 1 1749 0 is_stmt 0 discriminator 1
 3889 0012 0223     		movs	r3, #2
 3890 0014 17E0     		b	.L185
 3891              	.L184:
 3892              		.loc 1 1749 0 discriminator 2
 3893 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 99


 3894 0018 0122     		movs	r2, #1
 3895 001a 83F86820 		strb	r2, [r3, #104]
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3896              		.loc 1 1751 0 is_stmt 1 discriminator 2
 3897 001e 7B68     		ldr	r3, [r7, #4]
 3898 0020 2422     		movs	r2, #36
 3899 0022 83F86920 		strb	r2, [r3, #105]
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 3900              		.loc 1 1754 0 discriminator 2
 3901 0026 7B68     		ldr	r3, [r7, #4]
 3902 0028 1B68     		ldr	r3, [r3]
 3903 002a 1A68     		ldr	r2, [r3]
 3904 002c 7B68     		ldr	r3, [r7, #4]
 3905 002e 1B68     		ldr	r3, [r3]
 3906 0030 42F40052 		orr	r2, r2, #8192
 3907 0034 1A60     		str	r2, [r3]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3908              		.loc 1 1756 0 discriminator 2
 3909 0036 7B68     		ldr	r3, [r7, #4]
 3910 0038 2022     		movs	r2, #32
 3911 003a 83F86920 		strb	r2, [r3, #105]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3912              		.loc 1 1758 0 discriminator 2
 3913 003e 7868     		ldr	r0, [r7, #4]
 3914 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3915 0044 0346     		mov	r3, r0
 3916              	.L185:
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3917              		.loc 1 1759 0
 3918 0046 1846     		mov	r0, r3
 3919 0048 0837     		adds	r7, r7, #8
 3920              	.LCFI192:
 3921              		.cfi_def_cfa_offset 8
 3922 004a BD46     		mov	sp, r7
 3923              	.LCFI193:
 3924              		.cfi_def_cfa_register 13
 3925              		@ sp needed
 3926 004c 80BD     		pop	{r7, pc}
 3927              		.cfi_endproc
 3928              	.LFE173:
 3930              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3931              		.align	1
 3932              		.global	HAL_MultiProcessor_DisableMuteMode
 3933              		.syntax unified
 3934              		.thumb
 3935              		.thumb_func
 3936              		.fpu fpv4-sp-d16
 3938              	HAL_MultiProcessor_DisableMuteMode:
 3939              	.LFB174:
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
ARM GAS  /tmp/ccvy8ygO.s 			page 100


1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3940              		.loc 1 1768 0
 3941              		.cfi_startproc
 3942              		@ args = 0, pretend = 0, frame = 8
 3943              		@ frame_needed = 1, uses_anonymous_args = 0
 3944 0000 80B5     		push	{r7, lr}
 3945              	.LCFI194:
 3946              		.cfi_def_cfa_offset 8
 3947              		.cfi_offset 7, -8
 3948              		.cfi_offset 14, -4
 3949 0002 82B0     		sub	sp, sp, #8
 3950              	.LCFI195:
 3951              		.cfi_def_cfa_offset 16
 3952 0004 00AF     		add	r7, sp, #0
 3953              	.LCFI196:
 3954              		.cfi_def_cfa_register 7
 3955 0006 7860     		str	r0, [r7, #4]
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3956              		.loc 1 1770 0
 3957 0008 7B68     		ldr	r3, [r7, #4]
 3958 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3959 000e 012B     		cmp	r3, #1
 3960 0010 01D1     		bne	.L187
 3961              		.loc 1 1770 0 is_stmt 0 discriminator 1
 3962 0012 0223     		movs	r3, #2
 3963 0014 17E0     		b	.L188
 3964              	.L187:
 3965              		.loc 1 1770 0 discriminator 2
 3966 0016 7B68     		ldr	r3, [r7, #4]
 3967 0018 0122     		movs	r2, #1
 3968 001a 83F86820 		strb	r2, [r3, #104]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3969              		.loc 1 1772 0 is_stmt 1 discriminator 2
 3970 001e 7B68     		ldr	r3, [r7, #4]
 3971 0020 2422     		movs	r2, #36
 3972 0022 83F86920 		strb	r2, [r3, #105]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 3973              		.loc 1 1775 0 discriminator 2
 3974 0026 7B68     		ldr	r3, [r7, #4]
 3975 0028 1B68     		ldr	r3, [r3]
 3976 002a 1A68     		ldr	r2, [r3]
 3977 002c 7B68     		ldr	r3, [r7, #4]
 3978 002e 1B68     		ldr	r3, [r3]
 3979 0030 22F40052 		bic	r2, r2, #8192
 3980 0034 1A60     		str	r2, [r3]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3981              		.loc 1 1777 0 discriminator 2
ARM GAS  /tmp/ccvy8ygO.s 			page 101


 3982 0036 7B68     		ldr	r3, [r7, #4]
 3983 0038 2022     		movs	r2, #32
 3984 003a 83F86920 		strb	r2, [r3, #105]
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3985              		.loc 1 1779 0 discriminator 2
 3986 003e 7868     		ldr	r0, [r7, #4]
 3987 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3988 0044 0346     		mov	r3, r0
 3989              	.L188:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3990              		.loc 1 1780 0
 3991 0046 1846     		mov	r0, r3
 3992 0048 0837     		adds	r7, r7, #8
 3993              	.LCFI197:
 3994              		.cfi_def_cfa_offset 8
 3995 004a BD46     		mov	sp, r7
 3996              	.LCFI198:
 3997              		.cfi_def_cfa_register 13
 3998              		@ sp needed
 3999 004c 80BD     		pop	{r7, pc}
 4000              		.cfi_endproc
 4001              	.LFE174:
 4003              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4004              		.align	1
 4005              		.global	HAL_MultiProcessor_EnterMuteMode
 4006              		.syntax unified
 4007              		.thumb
 4008              		.thumb_func
 4009              		.fpu fpv4-sp-d16
 4011              	HAL_MultiProcessor_EnterMuteMode:
 4012              	.LFB175:
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4013              		.loc 1 1789 0
 4014              		.cfi_startproc
 4015              		@ args = 0, pretend = 0, frame = 8
 4016              		@ frame_needed = 1, uses_anonymous_args = 0
 4017              		@ link register save eliminated.
 4018 0000 80B4     		push	{r7}
 4019              	.LCFI199:
 4020              		.cfi_def_cfa_offset 4
 4021              		.cfi_offset 7, -4
 4022 0002 83B0     		sub	sp, sp, #12
 4023              	.LCFI200:
 4024              		.cfi_def_cfa_offset 16
 4025 0004 00AF     		add	r7, sp, #0
 4026              	.LCFI201:
 4027              		.cfi_def_cfa_register 7
 4028 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 102


1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4029              		.loc 1 1790 0
 4030 0008 7B68     		ldr	r3, [r7, #4]
 4031 000a 1B68     		ldr	r3, [r3]
 4032 000c 9A69     		ldr	r2, [r3, #24]
 4033 000e 7B68     		ldr	r3, [r7, #4]
 4034 0010 1B68     		ldr	r3, [r3]
 4035 0012 42F00402 		orr	r2, r2, #4
 4036 0016 9A61     		str	r2, [r3, #24]
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4037              		.loc 1 1791 0
 4038 0018 00BF     		nop
 4039 001a 0C37     		adds	r7, r7, #12
 4040              	.LCFI202:
 4041              		.cfi_def_cfa_offset 4
 4042 001c BD46     		mov	sp, r7
 4043              	.LCFI203:
 4044              		.cfi_def_cfa_register 13
 4045              		@ sp needed
 4046 001e 5DF8047B 		ldr	r7, [sp], #4
 4047              	.LCFI204:
 4048              		.cfi_restore 7
 4049              		.cfi_def_cfa_offset 0
 4050 0022 7047     		bx	lr
 4051              		.cfi_endproc
 4052              	.LFE175:
 4054              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4055              		.align	1
 4056              		.global	HAL_UART_GetState
 4057              		.syntax unified
 4058              		.thumb
 4059              		.thumb_func
 4060              		.fpu fpv4-sp-d16
 4062              	HAL_UART_GetState:
 4063              	.LFB176:
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief return the UART state
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4064              		.loc 1 1801 0
 4065              		.cfi_startproc
 4066              		@ args = 0, pretend = 0, frame = 16
 4067              		@ frame_needed = 1, uses_anonymous_args = 0
 4068              		@ link register save eliminated.
 4069 0000 80B4     		push	{r7}
 4070              	.LCFI205:
 4071              		.cfi_def_cfa_offset 4
 4072              		.cfi_offset 7, -4
 4073 0002 85B0     		sub	sp, sp, #20
 4074              	.LCFI206:
 4075              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccvy8ygO.s 			page 103


 4076 0004 00AF     		add	r7, sp, #0
 4077              	.LCFI207:
 4078              		.cfi_def_cfa_register 7
 4079 0006 7860     		str	r0, [r7, #4]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4080              		.loc 1 1802 0
 4081 0008 0023     		movs	r3, #0
 4082 000a FB60     		str	r3, [r7, #12]
 4083 000c 0023     		movs	r3, #0
 4084 000e BB60     		str	r3, [r7, #8]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 4085              		.loc 1 1803 0
 4086 0010 7B68     		ldr	r3, [r7, #4]
 4087 0012 93F86930 		ldrb	r3, [r3, #105]
 4088 0016 DBB2     		uxtb	r3, r3
 4089 0018 FB60     		str	r3, [r7, #12]
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 4090              		.loc 1 1804 0
 4091 001a 7B68     		ldr	r3, [r7, #4]
 4092 001c 93F86A30 		ldrb	r3, [r3, #106]
 4093 0020 DBB2     		uxtb	r3, r3
 4094 0022 BB60     		str	r3, [r7, #8]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4095              		.loc 1 1806 0
 4096 0024 FB68     		ldr	r3, [r7, #12]
 4097 0026 DAB2     		uxtb	r2, r3
 4098 0028 BB68     		ldr	r3, [r7, #8]
 4099 002a DBB2     		uxtb	r3, r3
 4100 002c 1343     		orrs	r3, r3, r2
 4101 002e DBB2     		uxtb	r3, r3
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4102              		.loc 1 1807 0
 4103 0030 1846     		mov	r0, r3
 4104 0032 1437     		adds	r7, r7, #20
 4105              	.LCFI208:
 4106              		.cfi_def_cfa_offset 4
 4107 0034 BD46     		mov	sp, r7
 4108              	.LCFI209:
 4109              		.cfi_def_cfa_register 13
 4110              		@ sp needed
 4111 0036 5DF8047B 		ldr	r7, [sp], #4
 4112              	.LCFI210:
 4113              		.cfi_restore 7
 4114              		.cfi_def_cfa_offset 0
 4115 003a 7047     		bx	lr
 4116              		.cfi_endproc
 4117              	.LFE176:
 4119              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4120              		.align	1
 4121              		.global	HAL_UART_GetError
 4122              		.syntax unified
 4123              		.thumb
 4124              		.thumb_func
 4125              		.fpu fpv4-sp-d16
 4127              	HAL_UART_GetError:
 4128              	.LFB177:
ARM GAS  /tmp/ccvy8ygO.s 			page 104


1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @brief  Return the UART error code
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *              the configuration information for the specified UART.
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** * @retval UART Error Code
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4129              		.loc 1 1816 0
 4130              		.cfi_startproc
 4131              		@ args = 0, pretend = 0, frame = 8
 4132              		@ frame_needed = 1, uses_anonymous_args = 0
 4133              		@ link register save eliminated.
 4134 0000 80B4     		push	{r7}
 4135              	.LCFI211:
 4136              		.cfi_def_cfa_offset 4
 4137              		.cfi_offset 7, -4
 4138 0002 83B0     		sub	sp, sp, #12
 4139              	.LCFI212:
 4140              		.cfi_def_cfa_offset 16
 4141 0004 00AF     		add	r7, sp, #0
 4142              	.LCFI213:
 4143              		.cfi_def_cfa_register 7
 4144 0006 7860     		str	r0, [r7, #4]
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 4145              		.loc 1 1817 0
 4146 0008 7B68     		ldr	r3, [r7, #4]
 4147 000a DB6E     		ldr	r3, [r3, #108]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4148              		.loc 1 1818 0
 4149 000c 1846     		mov	r0, r3
 4150 000e 0C37     		adds	r7, r7, #12
 4151              	.LCFI214:
 4152              		.cfi_def_cfa_offset 4
 4153 0010 BD46     		mov	sp, r7
 4154              	.LCFI215:
 4155              		.cfi_def_cfa_register 13
 4156              		@ sp needed
 4157 0012 5DF8047B 		ldr	r7, [sp], #4
 4158              	.LCFI216:
 4159              		.cfi_restore 7
 4160              		.cfi_def_cfa_offset 0
 4161 0016 7047     		bx	lr
 4162              		.cfi_endproc
 4163              	.LFE177:
 4165              		.section	.text.UART_SetConfig,"ax",%progbits
 4166              		.align	1
 4167              		.global	UART_SetConfig
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4171              		.fpu fpv4-sp-d16
 4173              	UART_SetConfig:
 4174              	.LFB178:
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccvy8ygO.s 			page 105


1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4175              		.loc 1 1826 0
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 24
 4178              		@ frame_needed = 1, uses_anonymous_args = 0
 4179 0000 80B5     		push	{r7, lr}
 4180              	.LCFI217:
 4181              		.cfi_def_cfa_offset 8
 4182              		.cfi_offset 7, -8
 4183              		.cfi_offset 14, -4
 4184 0002 86B0     		sub	sp, sp, #24
 4185              	.LCFI218:
 4186              		.cfi_def_cfa_offset 32
 4187 0004 00AF     		add	r7, sp, #0
 4188              	.LCFI219:
 4189              		.cfi_def_cfa_register 7
 4190 0006 7860     		str	r0, [r7, #4]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 4191              		.loc 1 1827 0
 4192 0008 0023     		movs	r3, #0
 4193 000a FB60     		str	r3, [r7, #12]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 4194              		.loc 1 1828 0
 4195 000c 1023     		movs	r3, #16
 4196 000e FB75     		strb	r3, [r7, #23]
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 4197              		.loc 1 1829 0
 4198 0010 0023     		movs	r3, #0
 4199 0012 7B81     		strh	r3, [r7, #10]	@ movhi
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
 4200              		.loc 1 1830 0
 4201 0014 0023     		movs	r3, #0
 4202 0016 BB82     		strh	r3, [r7, #20]	@ movhi
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4203              		.loc 1 1831 0
 4204 0018 0023     		movs	r3, #0
 4205 001a FB74     		strb	r3, [r7, #19]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
ARM GAS  /tmp/ccvy8ygO.s 			page 106


1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4206              		.loc 1 1850 0
 4207 001c 7B68     		ldr	r3, [r7, #4]
 4208 001e 9A68     		ldr	r2, [r3, #8]
 4209 0020 7B68     		ldr	r3, [r7, #4]
 4210 0022 1B69     		ldr	r3, [r3, #16]
 4211 0024 1A43     		orrs	r2, r2, r3
 4212 0026 7B68     		ldr	r3, [r7, #4]
 4213 0028 5B69     		ldr	r3, [r3, #20]
 4214 002a 1A43     		orrs	r2, r2, r3
 4215 002c 7B68     		ldr	r3, [r7, #4]
 4216 002e DB69     		ldr	r3, [r3, #28]
 4217 0030 1343     		orrs	r3, r3, r2
 4218 0032 FB60     		str	r3, [r7, #12]
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 4219              		.loc 1 1851 0
 4220 0034 7B68     		ldr	r3, [r7, #4]
 4221 0036 1B68     		ldr	r3, [r3]
 4222 0038 1A68     		ldr	r2, [r3]
 4223 003a AD4B     		ldr	r3, .L278
 4224 003c 1340     		ands	r3, r3, r2
 4225 003e 7A68     		ldr	r2, [r7, #4]
 4226 0040 1268     		ldr	r2, [r2]
 4227 0042 F968     		ldr	r1, [r7, #12]
 4228 0044 0B43     		orrs	r3, r3, r1
 4229 0046 1360     		str	r3, [r2]
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * to huart->Init.StopBits value */
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4230              		.loc 1 1856 0
 4231 0048 7B68     		ldr	r3, [r7, #4]
 4232 004a 1B68     		ldr	r3, [r3]
 4233 004c 5B68     		ldr	r3, [r3, #4]
 4234 004e 23F44051 		bic	r1, r3, #12288
 4235 0052 7B68     		ldr	r3, [r7, #4]
 4236 0054 DA68     		ldr	r2, [r3, #12]
 4237 0056 7B68     		ldr	r3, [r7, #4]
 4238 0058 1B68     		ldr	r3, [r3]
 4239 005a 0A43     		orrs	r2, r2, r1
 4240 005c 5A60     		str	r2, [r3, #4]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 4241              		.loc 1 1864 0
 4242 005e 7B68     		ldr	r3, [r7, #4]
 4243 0060 9A69     		ldr	r2, [r3, #24]
 4244 0062 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 107


 4245 0064 1B6A     		ldr	r3, [r3, #32]
 4246 0066 1343     		orrs	r3, r3, r2
 4247 0068 FB60     		str	r3, [r7, #12]
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 4248              		.loc 1 1865 0
 4249 006a 7B68     		ldr	r3, [r7, #4]
 4250 006c 1B68     		ldr	r3, [r3]
 4251 006e 9B68     		ldr	r3, [r3, #8]
 4252 0070 23F43061 		bic	r1, r3, #2816
 4253 0074 7B68     		ldr	r3, [r7, #4]
 4254 0076 1B68     		ldr	r3, [r3]
 4255 0078 FA68     		ldr	r2, [r7, #12]
 4256 007a 0A43     		orrs	r2, r2, r1
 4257 007c 9A60     		str	r2, [r3, #8]
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4258              		.loc 1 1868 0
 4259 007e 7B68     		ldr	r3, [r7, #4]
 4260 0080 1B68     		ldr	r3, [r3]
 4261 0082 9C4A     		ldr	r2, .L278+4
 4262 0084 9342     		cmp	r3, r2
 4263 0086 1FD1     		bne	.L195
 4264              		.loc 1 1868 0 is_stmt 0 discriminator 1
 4265 0088 9B4B     		ldr	r3, .L278+8
 4266 008a D3F89030 		ldr	r3, [r3, #144]
 4267 008e 03F00303 		and	r3, r3, #3
 4268 0092 032B     		cmp	r3, #3
 4269 0094 00F22981 		bhi	.L276
 4270 0098 01A2     		adr	r2, .L198
 4271 009a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4272 009e 00BF     		.p2align 2
 4273              	.L198:
 4274 00a0 B1000000 		.word	.L197+1
 4275 00a4 BD000000 		.word	.L199+1
 4276 00a8 B7000000 		.word	.L200+1
 4277 00ac C3000000 		.word	.L201+1
 4278              		.p2align 1
 4279              	.L197:
 4280              		.loc 1 1868 0 discriminator 4
 4281 00b0 0123     		movs	r3, #1
 4282 00b2 FB75     		strb	r3, [r7, #23]
 4283 00b4 19E1     		b	.L276
 4284              	.L200:
 4285              		.loc 1 1868 0 discriminator 6
 4286 00b6 0223     		movs	r3, #2
 4287 00b8 FB75     		strb	r3, [r7, #23]
 4288 00ba 16E1     		b	.L276
 4289              	.L199:
 4290              		.loc 1 1868 0 discriminator 5
 4291 00bc 0423     		movs	r3, #4
 4292 00be FB75     		strb	r3, [r7, #23]
 4293 00c0 13E1     		b	.L276
 4294              	.L201:
 4295              		.loc 1 1868 0 discriminator 7
 4296 00c2 0823     		movs	r3, #8
 4297 00c4 FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/ccvy8ygO.s 			page 108


 4298 00c6 10E1     		b	.L276
 4299              	.L195:
 4300              		.loc 1 1868 0 discriminator 2
 4301 00c8 7B68     		ldr	r3, [r7, #4]
 4302 00ca 1B68     		ldr	r3, [r3]
 4303 00cc 8B4A     		ldr	r2, .L278+12
 4304 00ce 9342     		cmp	r3, r2
 4305 00d0 30D1     		bne	.L204
 4306              		.loc 1 1868 0 discriminator 13
 4307 00d2 894B     		ldr	r3, .L278+8
 4308 00d4 D3F89030 		ldr	r3, [r3, #144]
 4309 00d8 03F00C03 		and	r3, r3, #12
 4310 00dc 0C2B     		cmp	r3, #12
 4311 00de 00F20481 		bhi	.L276
 4312 00e2 01A2     		adr	r2, .L207
 4313 00e4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4314              		.p2align 2
 4315              	.L207:
 4316 00e8 1D010000 		.word	.L206+1
 4317 00ec EB020000 		.word	.L276+1
 4318 00f0 EB020000 		.word	.L276+1
 4319 00f4 EB020000 		.word	.L276+1
 4320 00f8 29010000 		.word	.L208+1
 4321 00fc EB020000 		.word	.L276+1
 4322 0100 EB020000 		.word	.L276+1
 4323 0104 EB020000 		.word	.L276+1
 4324 0108 23010000 		.word	.L209+1
 4325 010c EB020000 		.word	.L276+1
 4326 0110 EB020000 		.word	.L276+1
 4327 0114 EB020000 		.word	.L276+1
 4328 0118 2F010000 		.word	.L210+1
 4329              		.p2align 1
 4330              	.L206:
 4331              		.loc 1 1868 0 discriminator 16
 4332 011c 0023     		movs	r3, #0
 4333 011e FB75     		strb	r3, [r7, #23]
 4334 0120 E3E0     		b	.L276
 4335              	.L209:
 4336              		.loc 1 1868 0 discriminator 18
 4337 0122 0223     		movs	r3, #2
 4338 0124 FB75     		strb	r3, [r7, #23]
 4339 0126 E0E0     		b	.L276
 4340              	.L208:
 4341              		.loc 1 1868 0 discriminator 17
 4342 0128 0423     		movs	r3, #4
 4343 012a FB75     		strb	r3, [r7, #23]
 4344 012c DDE0     		b	.L276
 4345              	.L210:
 4346              		.loc 1 1868 0 discriminator 19
 4347 012e 0823     		movs	r3, #8
 4348 0130 FB75     		strb	r3, [r7, #23]
 4349 0132 DAE0     		b	.L276
 4350              	.L204:
 4351              		.loc 1 1868 0 discriminator 14
 4352 0134 7B68     		ldr	r3, [r7, #4]
 4353 0136 1B68     		ldr	r3, [r3]
 4354 0138 714A     		ldr	r2, .L278+16
ARM GAS  /tmp/ccvy8ygO.s 			page 109


 4355 013a 9342     		cmp	r3, r2
 4356 013c 1CD1     		bne	.L212
 4357              		.loc 1 1868 0 discriminator 25
 4358 013e 6E4B     		ldr	r3, .L278+8
 4359 0140 D3F89030 		ldr	r3, [r3, #144]
 4360 0144 03F03003 		and	r3, r3, #48
 4361 0148 102B     		cmp	r3, #16
 4362 014a 0FD0     		beq	.L214
 4363 014c 102B     		cmp	r3, #16
 4364 014e 02D8     		bhi	.L215
 4365 0150 002B     		cmp	r3, #0
 4366 0152 05D0     		beq	.L216
 4367 0154 C9E0     		b	.L276
 4368              	.L215:
 4369 0156 202B     		cmp	r3, #32
 4370 0158 05D0     		beq	.L217
 4371 015a 302B     		cmp	r3, #48
 4372 015c 09D0     		beq	.L218
 4373 015e C4E0     		b	.L276
 4374              	.L216:
 4375              		.loc 1 1868 0 discriminator 28
 4376 0160 0023     		movs	r3, #0
 4377 0162 FB75     		strb	r3, [r7, #23]
 4378 0164 C1E0     		b	.L276
 4379              	.L217:
 4380              		.loc 1 1868 0 discriminator 30
 4381 0166 0223     		movs	r3, #2
 4382 0168 FB75     		strb	r3, [r7, #23]
 4383 016a BEE0     		b	.L276
 4384              	.L214:
 4385              		.loc 1 1868 0 discriminator 29
 4386 016c 0423     		movs	r3, #4
 4387 016e FB75     		strb	r3, [r7, #23]
 4388 0170 BBE0     		b	.L276
 4389              	.L218:
 4390              		.loc 1 1868 0 discriminator 31
 4391 0172 0823     		movs	r3, #8
 4392 0174 FB75     		strb	r3, [r7, #23]
 4393 0176 B8E0     		b	.L276
 4394              	.L212:
 4395              		.loc 1 1868 0 discriminator 26
 4396 0178 7B68     		ldr	r3, [r7, #4]
 4397 017a 1B68     		ldr	r3, [r3]
 4398 017c 614A     		ldr	r2, .L278+20
 4399 017e 9342     		cmp	r3, r2
 4400 0180 1CD1     		bne	.L220
 4401              		.loc 1 1868 0 discriminator 37
 4402 0182 5D4B     		ldr	r3, .L278+8
 4403 0184 D3F89030 		ldr	r3, [r3, #144]
 4404 0188 03F0C003 		and	r3, r3, #192
 4405 018c 402B     		cmp	r3, #64
 4406 018e 0FD0     		beq	.L222
 4407 0190 402B     		cmp	r3, #64
 4408 0192 02D8     		bhi	.L223
 4409 0194 002B     		cmp	r3, #0
 4410 0196 05D0     		beq	.L224
 4411 0198 A7E0     		b	.L276
ARM GAS  /tmp/ccvy8ygO.s 			page 110


 4412              	.L223:
 4413 019a 802B     		cmp	r3, #128
 4414 019c 05D0     		beq	.L225
 4415 019e C02B     		cmp	r3, #192
 4416 01a0 09D0     		beq	.L226
 4417 01a2 A2E0     		b	.L276
 4418              	.L224:
 4419              		.loc 1 1868 0 discriminator 40
 4420 01a4 0023     		movs	r3, #0
 4421 01a6 FB75     		strb	r3, [r7, #23]
 4422 01a8 9FE0     		b	.L276
 4423              	.L225:
 4424              		.loc 1 1868 0 discriminator 42
 4425 01aa 0223     		movs	r3, #2
 4426 01ac FB75     		strb	r3, [r7, #23]
 4427 01ae 9CE0     		b	.L276
 4428              	.L222:
 4429              		.loc 1 1868 0 discriminator 41
 4430 01b0 0423     		movs	r3, #4
 4431 01b2 FB75     		strb	r3, [r7, #23]
 4432 01b4 99E0     		b	.L276
 4433              	.L226:
 4434              		.loc 1 1868 0 discriminator 43
 4435 01b6 0823     		movs	r3, #8
 4436 01b8 FB75     		strb	r3, [r7, #23]
 4437 01ba 96E0     		b	.L276
 4438              	.L220:
 4439              		.loc 1 1868 0 discriminator 38
 4440 01bc 7B68     		ldr	r3, [r7, #4]
 4441 01be 1B68     		ldr	r3, [r3]
 4442 01c0 514A     		ldr	r2, .L278+24
 4443 01c2 9342     		cmp	r3, r2
 4444 01c4 20D1     		bne	.L228
 4445              		.loc 1 1868 0 discriminator 49
 4446 01c6 4C4B     		ldr	r3, .L278+8
 4447 01c8 D3F89030 		ldr	r3, [r3, #144]
 4448 01cc 03F44073 		and	r3, r3, #768
 4449 01d0 B3F5807F 		cmp	r3, #256
 4450 01d4 12D0     		beq	.L230
 4451 01d6 B3F5807F 		cmp	r3, #256
 4452 01da 02D8     		bhi	.L231
 4453 01dc 002B     		cmp	r3, #0
 4454 01de 07D0     		beq	.L232
 4455 01e0 83E0     		b	.L276
 4456              	.L231:
 4457 01e2 B3F5007F 		cmp	r3, #512
 4458 01e6 06D0     		beq	.L233
 4459 01e8 B3F5407F 		cmp	r3, #768
 4460 01ec 09D0     		beq	.L234
 4461 01ee 7CE0     		b	.L276
 4462              	.L232:
 4463              		.loc 1 1868 0 discriminator 52
 4464 01f0 0023     		movs	r3, #0
 4465 01f2 FB75     		strb	r3, [r7, #23]
 4466 01f4 79E0     		b	.L276
 4467              	.L233:
 4468              		.loc 1 1868 0 discriminator 54
ARM GAS  /tmp/ccvy8ygO.s 			page 111


 4469 01f6 0223     		movs	r3, #2
 4470 01f8 FB75     		strb	r3, [r7, #23]
 4471 01fa 76E0     		b	.L276
 4472              	.L230:
 4473              		.loc 1 1868 0 discriminator 53
 4474 01fc 0423     		movs	r3, #4
 4475 01fe FB75     		strb	r3, [r7, #23]
 4476 0200 73E0     		b	.L276
 4477              	.L234:
 4478              		.loc 1 1868 0 discriminator 55
 4479 0202 0823     		movs	r3, #8
 4480 0204 FB75     		strb	r3, [r7, #23]
 4481 0206 70E0     		b	.L276
 4482              	.L228:
 4483              		.loc 1 1868 0 discriminator 50
 4484 0208 7B68     		ldr	r3, [r7, #4]
 4485 020a 1B68     		ldr	r3, [r3]
 4486 020c 3F4A     		ldr	r2, .L278+28
 4487 020e 9342     		cmp	r3, r2
 4488 0210 20D1     		bne	.L236
 4489              		.loc 1 1868 0 discriminator 61
 4490 0212 394B     		ldr	r3, .L278+8
 4491 0214 D3F89030 		ldr	r3, [r3, #144]
 4492 0218 03F44063 		and	r3, r3, #3072
 4493 021c B3F5806F 		cmp	r3, #1024
 4494 0220 12D0     		beq	.L238
 4495 0222 B3F5806F 		cmp	r3, #1024
 4496 0226 02D8     		bhi	.L239
 4497 0228 002B     		cmp	r3, #0
 4498 022a 07D0     		beq	.L240
 4499 022c 5DE0     		b	.L276
 4500              	.L239:
 4501 022e B3F5006F 		cmp	r3, #2048
 4502 0232 06D0     		beq	.L241
 4503 0234 B3F5406F 		cmp	r3, #3072
 4504 0238 09D0     		beq	.L242
 4505 023a 56E0     		b	.L276
 4506              	.L240:
 4507              		.loc 1 1868 0 discriminator 64
 4508 023c 0123     		movs	r3, #1
 4509 023e FB75     		strb	r3, [r7, #23]
 4510 0240 53E0     		b	.L276
 4511              	.L241:
 4512              		.loc 1 1868 0 discriminator 66
 4513 0242 0223     		movs	r3, #2
 4514 0244 FB75     		strb	r3, [r7, #23]
 4515 0246 50E0     		b	.L276
 4516              	.L238:
 4517              		.loc 1 1868 0 discriminator 65
 4518 0248 0423     		movs	r3, #4
 4519 024a FB75     		strb	r3, [r7, #23]
 4520 024c 4DE0     		b	.L276
 4521              	.L242:
 4522              		.loc 1 1868 0 discriminator 67
 4523 024e 0823     		movs	r3, #8
 4524 0250 FB75     		strb	r3, [r7, #23]
 4525 0252 4AE0     		b	.L276
ARM GAS  /tmp/ccvy8ygO.s 			page 112


 4526              	.L236:
 4527              		.loc 1 1868 0 discriminator 62
 4528 0254 7B68     		ldr	r3, [r7, #4]
 4529 0256 1B68     		ldr	r3, [r3]
 4530 0258 2D4A     		ldr	r2, .L278+32
 4531 025a 9342     		cmp	r3, r2
 4532 025c 20D1     		bne	.L244
 4533              		.loc 1 1868 0 discriminator 73
 4534 025e 264B     		ldr	r3, .L278+8
 4535 0260 D3F89030 		ldr	r3, [r3, #144]
 4536 0264 03F44053 		and	r3, r3, #12288
 4537 0268 B3F5805F 		cmp	r3, #4096
 4538 026c 12D0     		beq	.L246
 4539 026e B3F5805F 		cmp	r3, #4096
 4540 0272 02D8     		bhi	.L247
 4541 0274 002B     		cmp	r3, #0
 4542 0276 07D0     		beq	.L248
 4543 0278 37E0     		b	.L276
 4544              	.L247:
 4545 027a B3F5005F 		cmp	r3, #8192
 4546 027e 06D0     		beq	.L249
 4547 0280 B3F5405F 		cmp	r3, #12288
 4548 0284 09D0     		beq	.L250
 4549 0286 30E0     		b	.L276
 4550              	.L248:
 4551              		.loc 1 1868 0 discriminator 76
 4552 0288 0023     		movs	r3, #0
 4553 028a FB75     		strb	r3, [r7, #23]
 4554 028c 2DE0     		b	.L276
 4555              	.L249:
 4556              		.loc 1 1868 0 discriminator 78
 4557 028e 0223     		movs	r3, #2
 4558 0290 FB75     		strb	r3, [r7, #23]
 4559 0292 2AE0     		b	.L276
 4560              	.L246:
 4561              		.loc 1 1868 0 discriminator 77
 4562 0294 0423     		movs	r3, #4
 4563 0296 FB75     		strb	r3, [r7, #23]
 4564 0298 27E0     		b	.L276
 4565              	.L250:
 4566              		.loc 1 1868 0 discriminator 79
 4567 029a 0823     		movs	r3, #8
 4568 029c FB75     		strb	r3, [r7, #23]
 4569 029e 24E0     		b	.L276
 4570              	.L244:
 4571              		.loc 1 1868 0 discriminator 74
 4572 02a0 7B68     		ldr	r3, [r7, #4]
 4573 02a2 1B68     		ldr	r3, [r3]
 4574 02a4 1B4A     		ldr	r2, .L278+36
 4575 02a6 9342     		cmp	r3, r2
 4576 02a8 36D1     		bne	.L277
 4577              		.loc 1 1868 0 discriminator 85
 4578 02aa 134B     		ldr	r3, .L278+8
 4579 02ac D3F89030 		ldr	r3, [r3, #144]
 4580 02b0 03F44043 		and	r3, r3, #49152
 4581 02b4 B3F5804F 		cmp	r3, #16384
 4582 02b8 12D0     		beq	.L253
ARM GAS  /tmp/ccvy8ygO.s 			page 113


 4583 02ba B3F5804F 		cmp	r3, #16384
 4584 02be 02D8     		bhi	.L254
 4585 02c0 002B     		cmp	r3, #0
 4586 02c2 07D0     		beq	.L255
 4587 02c4 11E0     		b	.L276
 4588              	.L254:
 4589 02c6 B3F5004F 		cmp	r3, #32768
 4590 02ca 06D0     		beq	.L256
 4591 02cc B3F5404F 		cmp	r3, #49152
 4592 02d0 09D0     		beq	.L257
 4593 02d2 0AE0     		b	.L276
 4594              	.L255:
 4595              		.loc 1 1868 0 discriminator 87
 4596 02d4 0023     		movs	r3, #0
 4597 02d6 FB75     		strb	r3, [r7, #23]
 4598 02d8 07E0     		b	.L276
 4599              	.L256:
 4600              		.loc 1 1868 0 discriminator 89
 4601 02da 0223     		movs	r3, #2
 4602 02dc FB75     		strb	r3, [r7, #23]
 4603 02de 04E0     		b	.L276
 4604              	.L253:
 4605              		.loc 1 1868 0 discriminator 88
 4606 02e0 0423     		movs	r3, #4
 4607 02e2 FB75     		strb	r3, [r7, #23]
 4608 02e4 01E0     		b	.L276
 4609              	.L257:
 4610              		.loc 1 1868 0 discriminator 90
 4611 02e6 0823     		movs	r3, #8
 4612 02e8 FB75     		strb	r3, [r7, #23]
 4613              	.L276:
 4614              		.loc 1 1868 0
 4615 02ea 00BF     		nop
 4616 02ec 15E0     		b	.L203
 4617              	.L279:
 4618 02ee 00BF     		.align	2
 4619              	.L278:
 4620 02f0 F369FFEF 		.word	-268473869
 4621 02f4 00100140 		.word	1073811456
 4622 02f8 00380240 		.word	1073887232
 4623 02fc 00440040 		.word	1073759232
 4624 0300 00480040 		.word	1073760256
 4625 0304 004C0040 		.word	1073761280
 4626 0308 00500040 		.word	1073762304
 4627 030c 00140140 		.word	1073812480
 4628 0310 00780040 		.word	1073772544
 4629 0314 007C0040 		.word	1073773568
 4630              	.L277:
 4631 0318 00BF     		nop
 4632              	.L203:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4633              		.loc 1 1871 0 is_stmt 1
 4634 031a 7B68     		ldr	r3, [r7, #4]
 4635 031c DB69     		ldr	r3, [r3, #28]
 4636 031e B3F5004F 		cmp	r3, #32768
ARM GAS  /tmp/ccvy8ygO.s 			page 114


 4637 0322 6CD1     		bne	.L258
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 4638              		.loc 1 1873 0
 4639 0324 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4640 0326 082B     		cmp	r3, #8
 4641 0328 54D8     		bhi	.L259
 4642 032a 01A2     		adr	r2, .L261
 4643 032c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4644              		.p2align 2
 4645              	.L261:
 4646 0330 55030000 		.word	.L260+1
 4647 0334 71030000 		.word	.L262+1
 4648 0338 8D030000 		.word	.L263+1
 4649 033c D5030000 		.word	.L259+1
 4650 0340 A3030000 		.word	.L264+1
 4651 0344 D5030000 		.word	.L259+1
 4652 0348 D5030000 		.word	.L259+1
 4653 034c D5030000 		.word	.L259+1
 4654 0350 BF030000 		.word	.L265+1
 4655              		.p2align 1
 4656              	.L260:
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4657              		.loc 1 1876 0
 4658 0354 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4659 0358 0346     		mov	r3, r0
 4660 035a 5A00     		lsls	r2, r3, #1
 4661 035c 7B68     		ldr	r3, [r7, #4]
 4662 035e 5B68     		ldr	r3, [r3, #4]
 4663 0360 5B08     		lsrs	r3, r3, #1
 4664 0362 1A44     		add	r2, r2, r3
 4665 0364 7B68     		ldr	r3, [r7, #4]
 4666 0366 5B68     		ldr	r3, [r3, #4]
 4667 0368 B2FBF3F3 		udiv	r3, r2, r3
 4668 036c BB82     		strh	r3, [r7, #20]	@ movhi
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4669              		.loc 1 1877 0
 4670 036e 34E0     		b	.L266
 4671              	.L262:
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 4672              		.loc 1 1879 0
 4673 0370 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4674 0374 0346     		mov	r3, r0
 4675 0376 5A00     		lsls	r2, r3, #1
 4676 0378 7B68     		ldr	r3, [r7, #4]
 4677 037a 5B68     		ldr	r3, [r3, #4]
 4678 037c 5B08     		lsrs	r3, r3, #1
 4679 037e 1A44     		add	r2, r2, r3
 4680 0380 7B68     		ldr	r3, [r7, #4]
 4681 0382 5B68     		ldr	r3, [r3, #4]
 4682 0384 B2FBF3F3 		udiv	r3, r2, r3
 4683 0388 BB82     		strh	r3, [r7, #20]	@ movhi
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4684              		.loc 1 1880 0
ARM GAS  /tmp/ccvy8ygO.s 			page 115


 4685 038a 26E0     		b	.L266
 4686              	.L263:
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 4687              		.loc 1 1882 0
 4688 038c 7B68     		ldr	r3, [r7, #4]
 4689 038e 5B68     		ldr	r3, [r3, #4]
 4690 0390 5A08     		lsrs	r2, r3, #1
 4691 0392 514B     		ldr	r3, .L280
 4692 0394 1344     		add	r3, r3, r2
 4693 0396 7A68     		ldr	r2, [r7, #4]
 4694 0398 5268     		ldr	r2, [r2, #4]
 4695 039a B3FBF2F3 		udiv	r3, r3, r2
 4696 039e BB82     		strh	r3, [r7, #20]	@ movhi
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4697              		.loc 1 1883 0
 4698 03a0 1BE0     		b	.L266
 4699              	.L264:
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 4700              		.loc 1 1885 0
 4701 03a2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4702 03a6 0346     		mov	r3, r0
 4703 03a8 5A00     		lsls	r2, r3, #1
 4704 03aa 7B68     		ldr	r3, [r7, #4]
 4705 03ac 5B68     		ldr	r3, [r3, #4]
 4706 03ae 5B08     		lsrs	r3, r3, #1
 4707 03b0 1A44     		add	r2, r2, r3
 4708 03b2 7B68     		ldr	r3, [r7, #4]
 4709 03b4 5B68     		ldr	r3, [r3, #4]
 4710 03b6 B2FBF3F3 		udiv	r3, r2, r3
 4711 03ba BB82     		strh	r3, [r7, #20]	@ movhi
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4712              		.loc 1 1886 0
 4713 03bc 0DE0     		b	.L266
 4714              	.L265:
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 4715              		.loc 1 1888 0
 4716 03be 7B68     		ldr	r3, [r7, #4]
 4717 03c0 5B68     		ldr	r3, [r3, #4]
 4718 03c2 5B08     		lsrs	r3, r3, #1
 4719 03c4 03F58032 		add	r2, r3, #65536
 4720 03c8 7B68     		ldr	r3, [r7, #4]
 4721 03ca 5B68     		ldr	r3, [r3, #4]
 4722 03cc B2FBF3F3 		udiv	r3, r2, r3
 4723 03d0 BB82     		strh	r3, [r7, #20]	@ movhi
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4724              		.loc 1 1889 0
 4725 03d2 02E0     		b	.L266
 4726              	.L259:
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 4727              		.loc 1 1892 0
 4728 03d4 0123     		movs	r3, #1
 4729 03d6 FB74     		strb	r3, [r7, #19]
ARM GAS  /tmp/ccvy8ygO.s 			page 116


1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4730              		.loc 1 1893 0
 4731 03d8 00BF     		nop
 4732              	.L266:
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
 4733              		.loc 1 1896 0
 4734 03da BB8A     		ldrh	r3, [r7, #20]	@ movhi
 4735 03dc 23F00F03 		bic	r3, r3, #15
 4736 03e0 7B81     		strh	r3, [r7, #10]	@ movhi
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4737              		.loc 1 1897 0
 4738 03e2 BB8A     		ldrh	r3, [r7, #20]
 4739 03e4 5B10     		asrs	r3, r3, #1
 4740 03e6 9BB2     		uxth	r3, r3
 4741 03e8 03F00703 		and	r3, r3, #7
 4742 03ec 9AB2     		uxth	r2, r3
 4743 03ee 7B89     		ldrh	r3, [r7, #10]	@ movhi
 4744 03f0 1343     		orrs	r3, r3, r2
 4745 03f2 7B81     		strh	r3, [r7, #10]	@ movhi
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 4746              		.loc 1 1898 0
 4747 03f4 7B68     		ldr	r3, [r7, #4]
 4748 03f6 1B68     		ldr	r3, [r3]
 4749 03f8 7A89     		ldrh	r2, [r7, #10]
 4750 03fa DA60     		str	r2, [r3, #12]
 4751 03fc 67E0     		b	.L267
 4752              	.L258:
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 4753              		.loc 1 1902 0
 4754 03fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4755 0400 082B     		cmp	r3, #8
 4756 0402 61D8     		bhi	.L268
 4757 0404 01A2     		adr	r2, .L270
 4758 0406 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4759 040a 00BF     		.p2align 2
 4760              	.L270:
 4761 040c 31040000 		.word	.L269+1
 4762 0410 51040000 		.word	.L271+1
 4763 0414 71040000 		.word	.L272+1
 4764 0418 C9040000 		.word	.L268+1
 4765 041c 8D040000 		.word	.L273+1
 4766 0420 C9040000 		.word	.L268+1
 4767 0424 C9040000 		.word	.L268+1
 4768 0428 C9040000 		.word	.L268+1
 4769 042c AD040000 		.word	.L274+1
 4770              		.p2align 1
 4771              	.L269:
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 4772              		.loc 1 1905 0
 4773 0430 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
ARM GAS  /tmp/ccvy8ygO.s 			page 117


 4774 0434 0246     		mov	r2, r0
 4775 0436 7B68     		ldr	r3, [r7, #4]
 4776 0438 5B68     		ldr	r3, [r3, #4]
 4777 043a 5B08     		lsrs	r3, r3, #1
 4778 043c 1A44     		add	r2, r2, r3
 4779 043e 7B68     		ldr	r3, [r7, #4]
 4780 0440 5B68     		ldr	r3, [r3, #4]
 4781 0442 B2FBF3F3 		udiv	r3, r2, r3
 4782 0446 9AB2     		uxth	r2, r3
 4783 0448 7B68     		ldr	r3, [r7, #4]
 4784 044a 1B68     		ldr	r3, [r3]
 4785 044c DA60     		str	r2, [r3, #12]
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4786              		.loc 1 1906 0
 4787 044e 3EE0     		b	.L267
 4788              	.L271:
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 4789              		.loc 1 1908 0
 4790 0450 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4791 0454 0246     		mov	r2, r0
 4792 0456 7B68     		ldr	r3, [r7, #4]
 4793 0458 5B68     		ldr	r3, [r3, #4]
 4794 045a 5B08     		lsrs	r3, r3, #1
 4795 045c 1A44     		add	r2, r2, r3
 4796 045e 7B68     		ldr	r3, [r7, #4]
 4797 0460 5B68     		ldr	r3, [r3, #4]
 4798 0462 B2FBF3F3 		udiv	r3, r2, r3
 4799 0466 9AB2     		uxth	r2, r3
 4800 0468 7B68     		ldr	r3, [r7, #4]
 4801 046a 1B68     		ldr	r3, [r3]
 4802 046c DA60     		str	r2, [r3, #12]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4803              		.loc 1 1909 0
 4804 046e 2EE0     		b	.L267
 4805              	.L272:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 4806              		.loc 1 1911 0
 4807 0470 7B68     		ldr	r3, [r7, #4]
 4808 0472 5B68     		ldr	r3, [r3, #4]
 4809 0474 5A08     		lsrs	r2, r3, #1
 4810 0476 194B     		ldr	r3, .L280+4
 4811 0478 1344     		add	r3, r3, r2
 4812 047a 7A68     		ldr	r2, [r7, #4]
 4813 047c 5268     		ldr	r2, [r2, #4]
 4814 047e B3FBF2F3 		udiv	r3, r3, r2
 4815 0482 9AB2     		uxth	r2, r3
 4816 0484 7B68     		ldr	r3, [r7, #4]
 4817 0486 1B68     		ldr	r3, [r3]
 4818 0488 DA60     		str	r2, [r3, #12]
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4819              		.loc 1 1912 0
 4820 048a 20E0     		b	.L267
 4821              	.L273:
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
ARM GAS  /tmp/ccvy8ygO.s 			page 118


 4822              		.loc 1 1914 0
 4823 048c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4824 0490 0246     		mov	r2, r0
 4825 0492 7B68     		ldr	r3, [r7, #4]
 4826 0494 5B68     		ldr	r3, [r3, #4]
 4827 0496 5B08     		lsrs	r3, r3, #1
 4828 0498 1A44     		add	r2, r2, r3
 4829 049a 7B68     		ldr	r3, [r7, #4]
 4830 049c 5B68     		ldr	r3, [r3, #4]
 4831 049e B2FBF3F3 		udiv	r3, r2, r3
 4832 04a2 9AB2     		uxth	r2, r3
 4833 04a4 7B68     		ldr	r3, [r7, #4]
 4834 04a6 1B68     		ldr	r3, [r3]
 4835 04a8 DA60     		str	r2, [r3, #12]
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4836              		.loc 1 1915 0
 4837 04aa 10E0     		b	.L267
 4838              	.L274:
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 4839              		.loc 1 1917 0
 4840 04ac 7B68     		ldr	r3, [r7, #4]
 4841 04ae 5B68     		ldr	r3, [r3, #4]
 4842 04b0 5B08     		lsrs	r3, r3, #1
 4843 04b2 03F50042 		add	r2, r3, #32768
 4844 04b6 7B68     		ldr	r3, [r7, #4]
 4845 04b8 5B68     		ldr	r3, [r3, #4]
 4846 04ba B2FBF3F3 		udiv	r3, r2, r3
 4847 04be 9AB2     		uxth	r2, r3
 4848 04c0 7B68     		ldr	r3, [r7, #4]
 4849 04c2 1B68     		ldr	r3, [r3]
 4850 04c4 DA60     		str	r2, [r3, #12]
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4851              		.loc 1 1918 0
 4852 04c6 02E0     		b	.L267
 4853              	.L268:
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     default:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 4854              		.loc 1 1921 0
 4855 04c8 0123     		movs	r3, #1
 4856 04ca FB74     		strb	r3, [r7, #19]
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       break;
 4857              		.loc 1 1922 0
 4858 04cc 00BF     		nop
 4859              	.L267:
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
 4860              		.loc 1 1926 0
 4861 04ce FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4862              		.loc 1 1928 0
 4863 04d0 1846     		mov	r0, r3
 4864 04d2 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccvy8ygO.s 			page 119


 4865              	.LCFI220:
 4866              		.cfi_def_cfa_offset 8
 4867 04d4 BD46     		mov	sp, r7
 4868              	.LCFI221:
 4869              		.cfi_def_cfa_register 13
 4870              		@ sp needed
 4871 04d6 80BD     		pop	{r7, pc}
 4872              	.L281:
 4873              		.align	2
 4874              	.L280:
 4875 04d8 0048E801 		.word	32000000
 4876 04dc 0024F400 		.word	16000000
 4877              		.cfi_endproc
 4878              	.LFE178:
 4880              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4881              		.align	1
 4882              		.global	UART_AdvFeatureConfig
 4883              		.syntax unified
 4884              		.thumb
 4885              		.thumb_func
 4886              		.fpu fpv4-sp-d16
 4888              	UART_AdvFeatureConfig:
 4889              	.LFB179:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4890              		.loc 1 1937 0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 8
 4893              		@ frame_needed = 1, uses_anonymous_args = 0
 4894              		@ link register save eliminated.
 4895 0000 80B4     		push	{r7}
 4896              	.LCFI222:
 4897              		.cfi_def_cfa_offset 4
 4898              		.cfi_offset 7, -4
 4899 0002 83B0     		sub	sp, sp, #12
 4900              	.LCFI223:
 4901              		.cfi_def_cfa_offset 16
 4902 0004 00AF     		add	r7, sp, #0
 4903              	.LCFI224:
 4904              		.cfi_def_cfa_register 7
 4905 0006 7860     		str	r0, [r7, #4]
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 4906              		.loc 1 1942 0
 4907 0008 7B68     		ldr	r3, [r7, #4]
 4908 000a 5B6A     		ldr	r3, [r3, #36]
 4909 000c 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccvy8ygO.s 			page 120


 4910 0010 002B     		cmp	r3, #0
 4911 0012 0AD0     		beq	.L283
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 4912              		.loc 1 1945 0
 4913 0014 7B68     		ldr	r3, [r7, #4]
 4914 0016 1B68     		ldr	r3, [r3]
 4915 0018 5B68     		ldr	r3, [r3, #4]
 4916 001a 23F40031 		bic	r1, r3, #131072
 4917 001e 7B68     		ldr	r3, [r7, #4]
 4918 0020 9A6A     		ldr	r2, [r3, #40]
 4919 0022 7B68     		ldr	r3, [r7, #4]
 4920 0024 1B68     		ldr	r3, [r3]
 4921 0026 0A43     		orrs	r2, r2, r1
 4922 0028 5A60     		str	r2, [r3, #4]
 4923              	.L283:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 4924              		.loc 1 1949 0
 4925 002a 7B68     		ldr	r3, [r7, #4]
 4926 002c 5B6A     		ldr	r3, [r3, #36]
 4927 002e 03F00203 		and	r3, r3, #2
 4928 0032 002B     		cmp	r3, #0
 4929 0034 0AD0     		beq	.L284
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 4930              		.loc 1 1952 0
 4931 0036 7B68     		ldr	r3, [r7, #4]
 4932 0038 1B68     		ldr	r3, [r3]
 4933 003a 5B68     		ldr	r3, [r3, #4]
 4934 003c 23F48031 		bic	r1, r3, #65536
 4935 0040 7B68     		ldr	r3, [r7, #4]
 4936 0042 DA6A     		ldr	r2, [r3, #44]
 4937 0044 7B68     		ldr	r3, [r7, #4]
 4938 0046 1B68     		ldr	r3, [r3]
 4939 0048 0A43     		orrs	r2, r2, r1
 4940 004a 5A60     		str	r2, [r3, #4]
 4941              	.L284:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 4942              		.loc 1 1956 0
 4943 004c 7B68     		ldr	r3, [r7, #4]
 4944 004e 5B6A     		ldr	r3, [r3, #36]
 4945 0050 03F00403 		and	r3, r3, #4
 4946 0054 002B     		cmp	r3, #0
 4947 0056 0AD0     		beq	.L285
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 4948              		.loc 1 1959 0
 4949 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 121


 4950 005a 1B68     		ldr	r3, [r3]
 4951 005c 5B68     		ldr	r3, [r3, #4]
 4952 005e 23F48021 		bic	r1, r3, #262144
 4953 0062 7B68     		ldr	r3, [r7, #4]
 4954 0064 1A6B     		ldr	r2, [r3, #48]
 4955 0066 7B68     		ldr	r3, [r7, #4]
 4956 0068 1B68     		ldr	r3, [r3]
 4957 006a 0A43     		orrs	r2, r2, r1
 4958 006c 5A60     		str	r2, [r3, #4]
 4959              	.L285:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 4960              		.loc 1 1963 0
 4961 006e 7B68     		ldr	r3, [r7, #4]
 4962 0070 5B6A     		ldr	r3, [r3, #36]
 4963 0072 03F00803 		and	r3, r3, #8
 4964 0076 002B     		cmp	r3, #0
 4965 0078 0AD0     		beq	.L286
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 4966              		.loc 1 1966 0
 4967 007a 7B68     		ldr	r3, [r7, #4]
 4968 007c 1B68     		ldr	r3, [r3]
 4969 007e 5B68     		ldr	r3, [r3, #4]
 4970 0080 23F40041 		bic	r1, r3, #32768
 4971 0084 7B68     		ldr	r3, [r7, #4]
 4972 0086 5A6B     		ldr	r2, [r3, #52]
 4973 0088 7B68     		ldr	r3, [r7, #4]
 4974 008a 1B68     		ldr	r3, [r3]
 4975 008c 0A43     		orrs	r2, r2, r1
 4976 008e 5A60     		str	r2, [r3, #4]
 4977              	.L286:
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 4978              		.loc 1 1970 0
 4979 0090 7B68     		ldr	r3, [r7, #4]
 4980 0092 5B6A     		ldr	r3, [r3, #36]
 4981 0094 03F01003 		and	r3, r3, #16
 4982 0098 002B     		cmp	r3, #0
 4983 009a 0AD0     		beq	.L287
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 4984              		.loc 1 1973 0
 4985 009c 7B68     		ldr	r3, [r7, #4]
 4986 009e 1B68     		ldr	r3, [r3]
 4987 00a0 9B68     		ldr	r3, [r3, #8]
 4988 00a2 23F48051 		bic	r1, r3, #4096
 4989 00a6 7B68     		ldr	r3, [r7, #4]
 4990 00a8 9A6B     		ldr	r2, [r3, #56]
 4991 00aa 7B68     		ldr	r3, [r7, #4]
 4992 00ac 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvy8ygO.s 			page 122


 4993 00ae 0A43     		orrs	r2, r2, r1
 4994 00b0 9A60     		str	r2, [r3, #8]
 4995              	.L287:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 4996              		.loc 1 1977 0
 4997 00b2 7B68     		ldr	r3, [r7, #4]
 4998 00b4 5B6A     		ldr	r3, [r3, #36]
 4999 00b6 03F02003 		and	r3, r3, #32
 5000 00ba 002B     		cmp	r3, #0
 5001 00bc 0AD0     		beq	.L288
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5002              		.loc 1 1980 0
 5003 00be 7B68     		ldr	r3, [r7, #4]
 5004 00c0 1B68     		ldr	r3, [r3]
 5005 00c2 9B68     		ldr	r3, [r3, #8]
 5006 00c4 23F40051 		bic	r1, r3, #8192
 5007 00c8 7B68     		ldr	r3, [r7, #4]
 5008 00ca DA6B     		ldr	r2, [r3, #60]
 5009 00cc 7B68     		ldr	r3, [r7, #4]
 5010 00ce 1B68     		ldr	r3, [r3]
 5011 00d0 0A43     		orrs	r2, r2, r1
 5012 00d2 9A60     		str	r2, [r3, #8]
 5013              	.L288:
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5014              		.loc 1 1984 0
 5015 00d4 7B68     		ldr	r3, [r7, #4]
 5016 00d6 5B6A     		ldr	r3, [r3, #36]
 5017 00d8 03F04003 		and	r3, r3, #64
 5018 00dc 002B     		cmp	r3, #0
 5019 00de 1AD0     		beq	.L289
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5020              		.loc 1 1987 0
 5021 00e0 7B68     		ldr	r3, [r7, #4]
 5022 00e2 1B68     		ldr	r3, [r3]
 5023 00e4 5B68     		ldr	r3, [r3, #4]
 5024 00e6 23F48011 		bic	r1, r3, #1048576
 5025 00ea 7B68     		ldr	r3, [r7, #4]
 5026 00ec 1A6C     		ldr	r2, [r3, #64]
 5027 00ee 7B68     		ldr	r3, [r7, #4]
 5028 00f0 1B68     		ldr	r3, [r3]
 5029 00f2 0A43     		orrs	r2, r2, r1
 5030 00f4 5A60     		str	r2, [r3, #4]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5031              		.loc 1 1989 0
 5032 00f6 7B68     		ldr	r3, [r7, #4]
 5033 00f8 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccvy8ygO.s 			page 123


 5034 00fa B3F5801F 		cmp	r3, #1048576
 5035 00fe 0AD1     		bne	.L289
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5036              		.loc 1 1992 0
 5037 0100 7B68     		ldr	r3, [r7, #4]
 5038 0102 1B68     		ldr	r3, [r3]
 5039 0104 5B68     		ldr	r3, [r3, #4]
 5040 0106 23F4C001 		bic	r1, r3, #6291456
 5041 010a 7B68     		ldr	r3, [r7, #4]
 5042 010c 5A6C     		ldr	r2, [r3, #68]
 5043 010e 7B68     		ldr	r3, [r7, #4]
 5044 0110 1B68     		ldr	r3, [r3]
 5045 0112 0A43     		orrs	r2, r2, r1
 5046 0114 5A60     		str	r2, [r3, #4]
 5047              	.L289:
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5048              		.loc 1 1997 0
 5049 0116 7B68     		ldr	r3, [r7, #4]
 5050 0118 5B6A     		ldr	r3, [r3, #36]
 5051 011a 03F08003 		and	r3, r3, #128
 5052 011e 002B     		cmp	r3, #0
 5053 0120 0AD0     		beq	.L291
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5054              		.loc 1 2000 0
 5055 0122 7B68     		ldr	r3, [r7, #4]
 5056 0124 1B68     		ldr	r3, [r3]
 5057 0126 5B68     		ldr	r3, [r3, #4]
 5058 0128 23F40021 		bic	r1, r3, #524288
 5059 012c 7B68     		ldr	r3, [r7, #4]
 5060 012e 9A6C     		ldr	r2, [r3, #72]
 5061 0130 7B68     		ldr	r3, [r7, #4]
 5062 0132 1B68     		ldr	r3, [r3]
 5063 0134 0A43     		orrs	r2, r2, r1
 5064 0136 5A60     		str	r2, [r3, #4]
 5065              	.L291:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5066              		.loc 1 2002 0
 5067 0138 00BF     		nop
 5068 013a 0C37     		adds	r7, r7, #12
 5069              	.LCFI225:
 5070              		.cfi_def_cfa_offset 4
 5071 013c BD46     		mov	sp, r7
 5072              	.LCFI226:
 5073              		.cfi_def_cfa_register 13
 5074              		@ sp needed
 5075 013e 5DF8047B 		ldr	r7, [sp], #4
 5076              	.LCFI227:
 5077              		.cfi_restore 7
ARM GAS  /tmp/ccvy8ygO.s 			page 124


 5078              		.cfi_def_cfa_offset 0
 5079 0142 7047     		bx	lr
 5080              		.cfi_endproc
 5081              	.LFE179:
 5083              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5084              		.align	1
 5085              		.global	UART_CheckIdleState
 5086              		.syntax unified
 5087              		.thumb
 5088              		.thumb_func
 5089              		.fpu fpv4-sp-d16
 5091              	UART_CheckIdleState:
 5092              	.LFB180:
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart uart handle
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5093              		.loc 1 2012 0
 5094              		.cfi_startproc
 5095              		@ args = 0, pretend = 0, frame = 16
 5096              		@ frame_needed = 1, uses_anonymous_args = 0
 5097 0000 80B5     		push	{r7, lr}
 5098              	.LCFI228:
 5099              		.cfi_def_cfa_offset 8
 5100              		.cfi_offset 7, -8
 5101              		.cfi_offset 14, -4
 5102 0002 86B0     		sub	sp, sp, #24
 5103              	.LCFI229:
 5104              		.cfi_def_cfa_offset 32
 5105 0004 02AF     		add	r7, sp, #8
 5106              	.LCFI230:
 5107              		.cfi_def_cfa 7, 24
 5108 0006 7860     		str	r0, [r7, #4]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 5109              		.loc 1 2013 0
 5110 0008 0023     		movs	r3, #0
 5111 000a FB60     		str	r3, [r7, #12]
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5112              		.loc 1 2016 0
 5113 000c 7B68     		ldr	r3, [r7, #4]
 5114 000e 0022     		movs	r2, #0
 5115 0010 DA66     		str	r2, [r3, #108]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5116              		.loc 1 2019 0
 5117 0012 FFF7FEFF 		bl	HAL_GetTick
 5118 0016 F860     		str	r0, [r7, #12]
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  /tmp/ccvy8ygO.s 			page 125


2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 5119              		.loc 1 2022 0
 5120 0018 7B68     		ldr	r3, [r7, #4]
 5121 001a 1B68     		ldr	r3, [r3]
 5122 001c 1B68     		ldr	r3, [r3]
 5123 001e 03F00803 		and	r3, r3, #8
 5124 0022 082B     		cmp	r3, #8
 5125 0024 0ED1     		bne	.L293
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 5126              		.loc 1 2025 0
 5127 0026 6FF07E43 		mvn	r3, #-33554432
 5128 002a 0093     		str	r3, [sp]
 5129 002c FB68     		ldr	r3, [r7, #12]
 5130 002e 0022     		movs	r2, #0
 5131 0030 4FF40011 		mov	r1, #2097152
 5132 0034 7868     		ldr	r0, [r7, #4]
 5133 0036 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5134 003a 0346     		mov	r3, r0
 5135 003c 002B     		cmp	r3, #0
 5136 003e 01D0     		beq	.L293
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout Occurred */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 5137              		.loc 1 2028 0
 5138 0040 0323     		movs	r3, #3
 5139 0042 0CE0     		b	.L294
 5140              	.L293:
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 5141              		.loc 1 2033 0
 5142 0044 7B68     		ldr	r3, [r7, #4]
 5143 0046 2022     		movs	r2, #32
 5144 0048 83F86920 		strb	r2, [r3, #105]
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 5145              		.loc 1 2034 0
 5146 004c 7B68     		ldr	r3, [r7, #4]
 5147 004e 2022     		movs	r2, #32
 5148 0050 83F86A20 		strb	r2, [r3, #106]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5149              		.loc 1 2037 0
 5150 0054 7B68     		ldr	r3, [r7, #4]
 5151 0056 0022     		movs	r2, #0
 5152 0058 83F86820 		strb	r2, [r3, #104]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5153              		.loc 1 2039 0
 5154 005c 0023     		movs	r3, #0
 5155              	.L294:
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
ARM GAS  /tmp/ccvy8ygO.s 			page 126


 5156              		.loc 1 2040 0
 5157 005e 1846     		mov	r0, r3
 5158 0060 1037     		adds	r7, r7, #16
 5159              	.LCFI231:
 5160              		.cfi_def_cfa_offset 8
 5161 0062 BD46     		mov	sp, r7
 5162              	.LCFI232:
 5163              		.cfi_def_cfa_register 13
 5164              		@ sp needed
 5165 0064 80BD     		pop	{r7, pc}
 5166              		.cfi_endproc
 5167              	.LFE180:
 5169              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5170              		.align	1
 5171              		.global	HAL_HalfDuplex_EnableTransmitter
 5172              		.syntax unified
 5173              		.thumb
 5174              		.thumb_func
 5175              		.fpu fpv4-sp-d16
 5177              	HAL_HalfDuplex_EnableTransmitter:
 5178              	.LFB181:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5179              		.loc 1 2049 0
 5180              		.cfi_startproc
 5181              		@ args = 0, pretend = 0, frame = 8
 5182              		@ frame_needed = 1, uses_anonymous_args = 0
 5183              		@ link register save eliminated.
 5184 0000 80B4     		push	{r7}
 5185              	.LCFI233:
 5186              		.cfi_def_cfa_offset 4
 5187              		.cfi_offset 7, -4
 5188 0002 83B0     		sub	sp, sp, #12
 5189              	.LCFI234:
 5190              		.cfi_def_cfa_offset 16
 5191 0004 00AF     		add	r7, sp, #0
 5192              	.LCFI235:
 5193              		.cfi_def_cfa_register 7
 5194 0006 7860     		str	r0, [r7, #4]
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5195              		.loc 1 2051 0
 5196 0008 7B68     		ldr	r3, [r7, #4]
 5197 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5198 000e 012B     		cmp	r3, #1
 5199 0010 01D1     		bne	.L296
 5200              		.loc 1 2051 0 is_stmt 0 discriminator 1
 5201 0012 0223     		movs	r3, #2
 5202 0014 20E0     		b	.L297
 5203              	.L296:
ARM GAS  /tmp/ccvy8ygO.s 			page 127


 5204              		.loc 1 2051 0 discriminator 2
 5205 0016 7B68     		ldr	r3, [r7, #4]
 5206 0018 0122     		movs	r2, #1
 5207 001a 83F86820 		strb	r2, [r3, #104]
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5208              		.loc 1 2052 0 is_stmt 1 discriminator 2
 5209 001e 7B68     		ldr	r3, [r7, #4]
 5210 0020 2422     		movs	r2, #36
 5211 0022 83F86920 		strb	r2, [r3, #105]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5212              		.loc 1 2055 0 discriminator 2
 5213 0026 7B68     		ldr	r3, [r7, #4]
 5214 0028 1B68     		ldr	r3, [r3]
 5215 002a 1A68     		ldr	r2, [r3]
 5216 002c 7B68     		ldr	r3, [r7, #4]
 5217 002e 1B68     		ldr	r3, [r3]
 5218 0030 22F00C02 		bic	r2, r2, #12
 5219 0034 1A60     		str	r2, [r3]
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 5220              		.loc 1 2057 0 discriminator 2
 5221 0036 7B68     		ldr	r3, [r7, #4]
 5222 0038 1B68     		ldr	r3, [r3]
 5223 003a 1A68     		ldr	r2, [r3]
 5224 003c 7B68     		ldr	r3, [r7, #4]
 5225 003e 1B68     		ldr	r3, [r3]
 5226 0040 42F00802 		orr	r2, r2, #8
 5227 0044 1A60     		str	r2, [r3]
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 5228              		.loc 1 2059 0 discriminator 2
 5229 0046 7B68     		ldr	r3, [r7, #4]
 5230 0048 2022     		movs	r2, #32
 5231 004a 83F86920 		strb	r2, [r3, #105]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5232              		.loc 1 2061 0 discriminator 2
 5233 004e 7B68     		ldr	r3, [r7, #4]
 5234 0050 0022     		movs	r2, #0
 5235 0052 83F86820 		strb	r2, [r3, #104]
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5236              		.loc 1 2063 0 discriminator 2
 5237 0056 0023     		movs	r3, #0
 5238              	.L297:
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5239              		.loc 1 2064 0
 5240 0058 1846     		mov	r0, r3
 5241 005a 0C37     		adds	r7, r7, #12
 5242              	.LCFI236:
 5243              		.cfi_def_cfa_offset 4
 5244 005c BD46     		mov	sp, r7
 5245              	.LCFI237:
 5246              		.cfi_def_cfa_register 13
 5247              		@ sp needed
ARM GAS  /tmp/ccvy8ygO.s 			page 128


 5248 005e 5DF8047B 		ldr	r7, [sp], #4
 5249              	.LCFI238:
 5250              		.cfi_restore 7
 5251              		.cfi_def_cfa_offset 0
 5252 0062 7047     		bx	lr
 5253              		.cfi_endproc
 5254              	.LFE181:
 5256              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5257              		.align	1
 5258              		.global	HAL_HalfDuplex_EnableReceiver
 5259              		.syntax unified
 5260              		.thumb
 5261              		.thumb_func
 5262              		.fpu fpv4-sp-d16
 5264              	HAL_HalfDuplex_EnableReceiver:
 5265              	.LFB182:
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5266              		.loc 1 2072 0
 5267              		.cfi_startproc
 5268              		@ args = 0, pretend = 0, frame = 8
 5269              		@ frame_needed = 1, uses_anonymous_args = 0
 5270              		@ link register save eliminated.
 5271 0000 80B4     		push	{r7}
 5272              	.LCFI239:
 5273              		.cfi_def_cfa_offset 4
 5274              		.cfi_offset 7, -4
 5275 0002 83B0     		sub	sp, sp, #12
 5276              	.LCFI240:
 5277              		.cfi_def_cfa_offset 16
 5278 0004 00AF     		add	r7, sp, #0
 5279              	.LCFI241:
 5280              		.cfi_def_cfa_register 7
 5281 0006 7860     		str	r0, [r7, #4]
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5282              		.loc 1 2074 0
 5283 0008 7B68     		ldr	r3, [r7, #4]
 5284 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5285 000e 012B     		cmp	r3, #1
 5286 0010 01D1     		bne	.L299
 5287              		.loc 1 2074 0 is_stmt 0 discriminator 1
 5288 0012 0223     		movs	r3, #2
 5289 0014 20E0     		b	.L300
 5290              	.L299:
 5291              		.loc 1 2074 0 discriminator 2
 5292 0016 7B68     		ldr	r3, [r7, #4]
 5293 0018 0122     		movs	r2, #1
 5294 001a 83F86820 		strb	r2, [r3, #104]
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5295              		.loc 1 2075 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccvy8ygO.s 			page 129


 5296 001e 7B68     		ldr	r3, [r7, #4]
 5297 0020 2422     		movs	r2, #36
 5298 0022 83F86920 		strb	r2, [r3, #105]
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5299              		.loc 1 2078 0 discriminator 2
 5300 0026 7B68     		ldr	r3, [r7, #4]
 5301 0028 1B68     		ldr	r3, [r3]
 5302 002a 1A68     		ldr	r2, [r3]
 5303 002c 7B68     		ldr	r3, [r7, #4]
 5304 002e 1B68     		ldr	r3, [r3]
 5305 0030 22F00C02 		bic	r2, r2, #12
 5306 0034 1A60     		str	r2, [r3]
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 5307              		.loc 1 2080 0 discriminator 2
 5308 0036 7B68     		ldr	r3, [r7, #4]
 5309 0038 1B68     		ldr	r3, [r3]
 5310 003a 1A68     		ldr	r2, [r3]
 5311 003c 7B68     		ldr	r3, [r7, #4]
 5312 003e 1B68     		ldr	r3, [r3]
 5313 0040 42F00402 		orr	r2, r2, #4
 5314 0044 1A60     		str	r2, [r3]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5315              		.loc 1 2082 0 discriminator 2
 5316 0046 7B68     		ldr	r3, [r7, #4]
 5317 0048 2022     		movs	r2, #32
 5318 004a 83F86920 		strb	r2, [r3, #105]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5319              		.loc 1 2084 0 discriminator 2
 5320 004e 7B68     		ldr	r3, [r7, #4]
 5321 0050 0022     		movs	r2, #0
 5322 0052 83F86820 		strb	r2, [r3, #104]
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5323              		.loc 1 2086 0 discriminator 2
 5324 0056 0023     		movs	r3, #0
 5325              	.L300:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5326              		.loc 1 2087 0
 5327 0058 1846     		mov	r0, r3
 5328 005a 0C37     		adds	r7, r7, #12
 5329              	.LCFI242:
 5330              		.cfi_def_cfa_offset 4
 5331 005c BD46     		mov	sp, r7
 5332              	.LCFI243:
 5333              		.cfi_def_cfa_register 13
 5334              		@ sp needed
 5335 005e 5DF8047B 		ldr	r7, [sp], #4
 5336              	.LCFI244:
 5337              		.cfi_restore 7
 5338              		.cfi_def_cfa_offset 0
 5339 0062 7047     		bx	lr
 5340              		.cfi_endproc
ARM GAS  /tmp/ccvy8ygO.s 			page 130


 5341              	.LFE182:
 5343              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5344              		.align	1
 5345              		.global	HAL_LIN_SendBreak
 5346              		.syntax unified
 5347              		.thumb
 5348              		.thumb_func
 5349              		.fpu fpv4-sp-d16
 5351              	HAL_LIN_SendBreak:
 5352              	.LFB183:
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmits break characters.
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5353              		.loc 1 2096 0
 5354              		.cfi_startproc
 5355              		@ args = 0, pretend = 0, frame = 8
 5356              		@ frame_needed = 1, uses_anonymous_args = 0
 5357              		@ link register save eliminated.
 5358 0000 80B4     		push	{r7}
 5359              	.LCFI245:
 5360              		.cfi_def_cfa_offset 4
 5361              		.cfi_offset 7, -4
 5362 0002 83B0     		sub	sp, sp, #12
 5363              	.LCFI246:
 5364              		.cfi_def_cfa_offset 16
 5365 0004 00AF     		add	r7, sp, #0
 5366              	.LCFI247:
 5367              		.cfi_def_cfa_register 7
 5368 0006 7860     		str	r0, [r7, #4]
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Locked */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5369              		.loc 1 2101 0
 5370 0008 7B68     		ldr	r3, [r7, #4]
 5371 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 5372 000e 012B     		cmp	r3, #1
 5373 0010 01D1     		bne	.L302
 5374              		.loc 1 2101 0 is_stmt 0 discriminator 1
 5375 0012 0223     		movs	r3, #2
 5376 0014 18E0     		b	.L303
 5377              	.L302:
 5378              		.loc 1 2101 0 discriminator 2
 5379 0016 7B68     		ldr	r3, [r7, #4]
 5380 0018 0122     		movs	r2, #1
 5381 001a 83F86820 		strb	r2, [r3, #104]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5382              		.loc 1 2103 0 is_stmt 1 discriminator 2
 5383 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccvy8ygO.s 			page 131


 5384 0020 2422     		movs	r2, #36
 5385 0022 83F86920 		strb	r2, [r3, #105]
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
 5386              		.loc 1 2106 0 discriminator 2
 5387 0026 7B68     		ldr	r3, [r7, #4]
 5388 0028 1B68     		ldr	r3, [r3]
 5389 002a 9A69     		ldr	r2, [r3, #24]
 5390 002c 7B68     		ldr	r3, [r7, #4]
 5391 002e 1B68     		ldr	r3, [r3]
 5392 0030 42F00202 		orr	r2, r2, #2
 5393 0034 9A61     		str	r2, [r3, #24]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5394              		.loc 1 2108 0 discriminator 2
 5395 0036 7B68     		ldr	r3, [r7, #4]
 5396 0038 2022     		movs	r2, #32
 5397 003a 83F86920 		strb	r2, [r3, #105]
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process Unlocked */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5398              		.loc 1 2111 0 discriminator 2
 5399 003e 7B68     		ldr	r3, [r7, #4]
 5400 0040 0022     		movs	r2, #0
 5401 0042 83F86820 		strb	r2, [r3, #104]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 5402              		.loc 1 2113 0 discriminator 2
 5403 0046 0023     		movs	r3, #0
 5404              	.L303:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5405              		.loc 1 2114 0
 5406 0048 1846     		mov	r0, r3
 5407 004a 0C37     		adds	r7, r7, #12
 5408              	.LCFI248:
 5409              		.cfi_def_cfa_offset 4
 5410 004c BD46     		mov	sp, r7
 5411              	.LCFI249:
 5412              		.cfi_def_cfa_register 13
 5413              		@ sp needed
 5414 004e 5DF8047B 		ldr	r7, [sp], #4
 5415              	.LCFI250:
 5416              		.cfi_restore 7
 5417              		.cfi_def_cfa_offset 0
 5418 0052 7047     		bx	lr
 5419              		.cfi_endproc
 5420              	.LFE183:
 5422              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 5423              		.align	1
 5424              		.global	HAL_MultiProcessorEx_AddressLength_Set
 5425              		.syntax unified
 5426              		.thumb
 5427              		.thumb_func
 5428              		.fpu fpv4-sp-d16
 5430              	HAL_MultiProcessorEx_AddressLength_Set:
 5431              	.LFB184:
ARM GAS  /tmp/ccvy8ygO.s 			page 132


2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        long).
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param AddressLength this parameter can be one of the following values:
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5432              		.loc 1 2130 0
 5433              		.cfi_startproc
 5434              		@ args = 0, pretend = 0, frame = 8
 5435              		@ frame_needed = 1, uses_anonymous_args = 0
 5436 0000 80B5     		push	{r7, lr}
 5437              	.LCFI251:
 5438              		.cfi_def_cfa_offset 8
 5439              		.cfi_offset 7, -8
 5440              		.cfi_offset 14, -4
 5441 0002 82B0     		sub	sp, sp, #8
 5442              	.LCFI252:
 5443              		.cfi_def_cfa_offset 16
 5444 0004 00AF     		add	r7, sp, #0
 5445              	.LCFI253:
 5446              		.cfi_def_cfa_register 7
 5447 0006 7860     		str	r0, [r7, #4]
 5448 0008 3960     		str	r1, [r7]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if(huart == NULL)
 5449              		.loc 1 2132 0
 5450 000a 7B68     		ldr	r3, [r7, #4]
 5451 000c 002B     		cmp	r3, #0
 5452 000e 01D1     		bne	.L305
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 5453              		.loc 1 2134 0
 5454 0010 0123     		movs	r3, #1
 5455 0012 21E0     		b	.L306
 5456              	.L305:
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the address length parameter */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5457              		.loc 1 2140 0
 5458 0014 7B68     		ldr	r3, [r7, #4]
 5459 0016 2422     		movs	r2, #36
 5460 0018 83F86920 		strb	r2, [r3, #105]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/ccvy8ygO.s 			page 133


2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 5461              		.loc 1 2143 0
 5462 001c 7B68     		ldr	r3, [r7, #4]
 5463 001e 1B68     		ldr	r3, [r3]
 5464 0020 1A68     		ldr	r2, [r3]
 5465 0022 7B68     		ldr	r3, [r7, #4]
 5466 0024 1B68     		ldr	r3, [r3]
 5467 0026 22F00102 		bic	r2, r2, #1
 5468 002a 1A60     		str	r2, [r3]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the address length */
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 5469              		.loc 1 2146 0
 5470 002c 7B68     		ldr	r3, [r7, #4]
 5471 002e 1B68     		ldr	r3, [r3]
 5472 0030 5B68     		ldr	r3, [r3, #4]
 5473 0032 23F01001 		bic	r1, r3, #16
 5474 0036 7B68     		ldr	r3, [r7, #4]
 5475 0038 1B68     		ldr	r3, [r3]
 5476 003a 3A68     		ldr	r2, [r7]
 5477 003c 0A43     		orrs	r2, r2, r1
 5478 003e 5A60     		str	r2, [r3, #4]
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Peripheral */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 5479              		.loc 1 2149 0
 5480 0040 7B68     		ldr	r3, [r7, #4]
 5481 0042 1B68     		ldr	r3, [r3]
 5482 0044 1A68     		ldr	r2, [r3]
 5483 0046 7B68     		ldr	r3, [r7, #4]
 5484 0048 1B68     		ldr	r3, [r3]
 5485 004a 42F00102 		orr	r2, r2, #1
 5486 004e 1A60     		str	r2, [r3]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 5487              		.loc 1 2152 0
 5488 0050 7868     		ldr	r0, [r7, #4]
 5489 0052 FFF7FEFF 		bl	UART_CheckIdleState
 5490 0056 0346     		mov	r3, r0
 5491              	.L306:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5492              		.loc 1 2153 0
 5493 0058 1846     		mov	r0, r3
 5494 005a 0837     		adds	r7, r7, #8
 5495              	.LCFI254:
 5496              		.cfi_def_cfa_offset 8
 5497 005c BD46     		mov	sp, r7
 5498              	.LCFI255:
 5499              		.cfi_def_cfa_register 13
 5500              		@ sp needed
 5501 005e 80BD     		pop	{r7, pc}
 5502              		.cfi_endproc
 5503              	.LFE184:
 5505              		.text
 5506              	.Letext0:
 5507              		.file 2 "/usr/include/newlib/machine/_default_types.h"
ARM GAS  /tmp/ccvy8ygO.s 			page 134


 5508              		.file 3 "/usr/include/newlib/sys/lock.h"
 5509              		.file 4 "/usr/include/newlib/sys/_types.h"
 5510              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 5511              		.file 6 "/usr/include/newlib/sys/reent.h"
 5512              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 5513              		.file 8 "Inc/main.h"
 5514              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 5515              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 5516              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 5517              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 5518              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 5519              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 5520              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  /tmp/ccvy8ygO.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_uart.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
     /tmp/ccvy8ygO.s:21     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccvy8ygO.s:28     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccvy8ygO.s:819    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccvy8ygO.s:4173   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccvy8ygO.s:4888   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccvy8ygO.s:5091   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccvy8ygO.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccvy8ygO.s:150    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccvy8ygO.s:272    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccvy8ygO.s:279    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccvy8ygO.s:412    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccvy8ygO.s:419    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccvy8ygO.s:562    .text.HAL_RS485Ex_Init:0000000000000000 $t
     /tmp/ccvy8ygO.s:569    .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
     /tmp/ccvy8ygO.s:711    .text.HAL_RS485Ex_Init:00000000000000d4 $d
     /tmp/ccvy8ygO.s:716    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccvy8ygO.s:723    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccvy8ygO.s:862    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccvy8ygO.s:812    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccvy8ygO.s:855    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccvy8ygO.s:898    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccvy8ygO.s:905    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccvy8ygO.s:2688   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccvy8ygO.s:1093   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccvy8ygO.s:1100   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccvy8ygO.s:1349   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccvy8ygO.s:1356   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccvy8ygO.s:1466   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccvy8ygO.s:1473   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccvy8ygO.s:1656   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccvy8ygO.s:1663   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccvy8ygO.s:1807   .text.HAL_UART_Transmit_DMA:00000000000000d0 $d
     /tmp/ccvy8ygO.s:2801   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccvy8ygO.s:2877   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccvy8ygO.s:3052   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccvy8ygO.s:1814   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccvy8ygO.s:1821   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccvy8ygO.s:1972   .text.HAL_UART_Receive_DMA:00000000000000e0 $d
     /tmp/ccvy8ygO.s:2922   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccvy8ygO.s:3007   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccvy8ygO.s:1979   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccvy8ygO.s:1986   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccvy8ygO.s:2104   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccvy8ygO.s:2111   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccvy8ygO.s:2230   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccvy8ygO.s:2237   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccvy8ygO.s:3748   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccvy8ygO.s:3802   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccvy8ygO.s:2345   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccvy8ygO.s:2352   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccvy8ygO.s:3598   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccvy8ygO.s:3371   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
ARM GAS  /tmp/ccvy8ygO.s 			page 136


     /tmp/ccvy8ygO.s:3413   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccvy8ygO.s:3543   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccvy8ygO.s:2676   .text.HAL_UART_IRQHandler:0000000000000208 $d
     /tmp/ccvy8ygO.s:3145   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccvy8ygO.s:2681   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccvy8ygO.s:2795   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccvy8ygO.s:3199   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccvy8ygO.s:2871   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccvy8ygO.s:3242   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccvy8ygO.s:2916   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccvy8ygO.s:3285   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccvy8ygO.s:3001   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccvy8ygO.s:3328   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccvy8ygO.s:3046   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccvy8ygO.s:3139   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccvy8ygO.s:3192   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccvy8ygO.s:3235   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccvy8ygO.s:3278   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccvy8ygO.s:3321   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccvy8ygO.s:3364   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccvy8ygO.s:3407   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccvy8ygO.s:3537   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccvy8ygO.s:3592   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccvy8ygO.s:3742   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccvy8ygO.s:3796   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccvy8ygO.s:3858   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccvy8ygO.s:3865   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccvy8ygO.s:3931   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccvy8ygO.s:3938   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccvy8ygO.s:4004   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccvy8ygO.s:4011   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccvy8ygO.s:4055   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccvy8ygO.s:4062   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccvy8ygO.s:4120   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccvy8ygO.s:4127   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccvy8ygO.s:4166   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccvy8ygO.s:4274   .text.UART_SetConfig:00000000000000a0 $d
     /tmp/ccvy8ygO.s:4278   .text.UART_SetConfig:00000000000000b0 $t
     /tmp/ccvy8ygO.s:4316   .text.UART_SetConfig:00000000000000e8 $d
     /tmp/ccvy8ygO.s:4329   .text.UART_SetConfig:000000000000011c $t
     /tmp/ccvy8ygO.s:4620   .text.UART_SetConfig:00000000000002f0 $d
     /tmp/ccvy8ygO.s:4631   .text.UART_SetConfig:0000000000000318 $t
     /tmp/ccvy8ygO.s:4646   .text.UART_SetConfig:0000000000000330 $d
     /tmp/ccvy8ygO.s:4655   .text.UART_SetConfig:0000000000000354 $t
     /tmp/ccvy8ygO.s:4761   .text.UART_SetConfig:000000000000040c $d
     /tmp/ccvy8ygO.s:4770   .text.UART_SetConfig:0000000000000430 $t
     /tmp/ccvy8ygO.s:4875   .text.UART_SetConfig:00000000000004d8 $d
     /tmp/ccvy8ygO.s:4881   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccvy8ygO.s:5084   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccvy8ygO.s:5170   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccvy8ygO.s:5177   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccvy8ygO.s:5257   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccvy8ygO.s:5264   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccvy8ygO.s:5344   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccvy8ygO.s:5351   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccvy8ygO.s:5423   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
     /tmp/ccvy8ygO.s:5430   .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
ARM GAS  /tmp/ccvy8ygO.s 			page 137



UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
