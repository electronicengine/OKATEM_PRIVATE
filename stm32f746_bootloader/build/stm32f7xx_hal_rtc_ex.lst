ARM GAS  /tmp/cc2l9dGw.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_rtc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_RTCEx_SetTimeStamp
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	HAL_RTCEx_SetTimeStamp:
  29              	.LFB138:
  30              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @file    stm32f7xx_hal_rtc_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extension peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions 
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + Extension Control functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *           + Extension RTC features functions    
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   @verbatim
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ==============================================================================
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..] 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ================================
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..] 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTC_SetWakeUpTimer()
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer in interrupt mode 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         using the HAL_RTC_SetWakeUpTimer_IT() function.
ARM GAS  /tmp/cc2l9dGw.s 			page 2


  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTC_GetWakeUpTimer() 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===============================
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enables the RTC TimeStamp using the HAL_RTC_SetTimeStamp() function.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         HAL_RTC_SetTimeStamp_IT() function.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===============================
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enables the RTC internal TimeStamp using the HAL_RTC_SetInternalTimeStamp() function.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ============================
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and Configure the Tamper filter count, trigger Edge 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level) 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTC_SetTamper() function. You can configure RTC Tamper
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTC_SetTamper_IT() function.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ===========================================
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   [..]
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTC_BKUPWrite()
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.  
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTC_BKUPRead()
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         function.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****      
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    @endverbatim
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @attention
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * are permitted provided that the following conditions are met:
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      and/or other materials provided with the distribution.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      may be used to endorse or promote products derived from this software
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *      without specific prior written permission.
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  /tmp/cc2l9dGw.s 			page 3


  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   ******************************************************************************
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */ 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #include "stm32f7xx_hal.h"
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx RTCEx 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Private functions ---------------------------------------------------------*/
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Exported_Functions RTCEx Exported Functions
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group1 RTC TimeStamp and Tamper functions
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets TimeStamp.
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature. 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
ARM GAS  /tmp/cc2l9dGw.s 			page 4


 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         activated.
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC13: PC13 is selected as RTC TimeStamp Pin.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PI8: PI8 is selected as RTC TimeStamp Pin.  
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC1: PC1 is selected as RTC TimeStamp Pin.   
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
  31              		.loc 1 158 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 24
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36 0000 80B4     		push	{r7}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 7, -4
  40 0002 87B0     		sub	sp, sp, #28
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 32
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 F860     		str	r0, [r7, #12]
  47 0008 B960     		str	r1, [r7, #8]
  48 000a 7A60     		str	r2, [r7, #4]
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
  49              		.loc 1 159 0
  50 000c 0023     		movs	r3, #0
  51 000e 7B61     		str	r3, [r7, #20]
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  52              		.loc 1 166 0
  53 0010 FB68     		ldr	r3, [r7, #12]
  54 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
  55 0014 012B     		cmp	r3, #1
  56 0016 01D1     		bne	.L2
  57              		.loc 1 166 0 is_stmt 0 discriminator 1
  58 0018 0223     		movs	r3, #2
  59 001a 3EE0     		b	.L3
  60              	.L2:
  61              		.loc 1 166 0 discriminator 2
  62 001c FB68     		ldr	r3, [r7, #12]
  63 001e 0122     		movs	r2, #1
ARM GAS  /tmp/cc2l9dGw.s 			page 5


  64 0020 1A77     		strb	r2, [r3, #28]
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  65              		.loc 1 168 0 is_stmt 1 discriminator 2
  66 0022 FB68     		ldr	r3, [r7, #12]
  67 0024 0222     		movs	r2, #2
  68 0026 5A77     		strb	r2, [r3, #29]
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  69              		.loc 1 171 0 discriminator 2
  70 0028 FB68     		ldr	r3, [r7, #12]
  71 002a 1B68     		ldr	r3, [r3]
  72 002c 9A68     		ldr	r2, [r3, #8]
  73 002e 1E4B     		ldr	r3, .L4
  74 0030 1340     		ands	r3, r3, r2
  75 0032 7B61     		str	r3, [r7, #20]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  76              		.loc 1 173 0 discriminator 2
  77 0034 7A69     		ldr	r2, [r7, #20]
  78 0036 BB68     		ldr	r3, [r7, #8]
  79 0038 1343     		orrs	r3, r3, r2
  80 003a 7B61     		str	r3, [r7, #20]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  81              		.loc 1 176 0 discriminator 2
  82 003c FB68     		ldr	r3, [r7, #12]
  83 003e 1B68     		ldr	r3, [r3]
  84 0040 CA22     		movs	r2, #202
  85 0042 5A62     		str	r2, [r3, #36]
  86 0044 FB68     		ldr	r3, [r7, #12]
  87 0046 1B68     		ldr	r3, [r3]
  88 0048 5322     		movs	r2, #83
  89 004a 5A62     		str	r2, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR &= (uint32_t)~RTC_OR_TSINSEL;
  90              		.loc 1 178 0 discriminator 2
  91 004c FB68     		ldr	r3, [r7, #12]
  92 004e 1B68     		ldr	r3, [r3]
  93 0050 DA6C     		ldr	r2, [r3, #76]
  94 0052 FB68     		ldr	r3, [r7, #12]
  95 0054 1B68     		ldr	r3, [r3]
  96 0056 22F00602 		bic	r2, r2, #6
  97 005a DA64     		str	r2, [r3, #76]
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR |= (uint32_t)(RTC_TimeStampPin); 
  98              		.loc 1 179 0 discriminator 2
  99 005c FB68     		ldr	r3, [r7, #12]
 100 005e 1B68     		ldr	r3, [r3]
 101 0060 D96C     		ldr	r1, [r3, #76]
 102 0062 FB68     		ldr	r3, [r7, #12]
 103 0064 1B68     		ldr	r3, [r3]
 104 0066 7A68     		ldr	r2, [r7, #4]
 105 0068 0A43     		orrs	r2, r2, r1
 106 006a DA64     		str	r2, [r3, #76]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
ARM GAS  /tmp/cc2l9dGw.s 			page 6


 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 107              		.loc 1 182 0 discriminator 2
 108 006c FB68     		ldr	r3, [r7, #12]
 109 006e 1B68     		ldr	r3, [r3]
 110 0070 7A69     		ldr	r2, [r7, #20]
 111 0072 9A60     		str	r2, [r3, #8]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 112              		.loc 1 184 0 discriminator 2
 113 0074 FB68     		ldr	r3, [r7, #12]
 114 0076 1B68     		ldr	r3, [r3]
 115 0078 9A68     		ldr	r2, [r3, #8]
 116 007a FB68     		ldr	r3, [r7, #12]
 117 007c 1B68     		ldr	r3, [r3]
 118 007e 42F40062 		orr	r2, r2, #2048
 119 0082 9A60     		str	r2, [r3, #8]
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);    
 120              		.loc 1 187 0 discriminator 2
 121 0084 FB68     		ldr	r3, [r7, #12]
 122 0086 1B68     		ldr	r3, [r3]
 123 0088 FF22     		movs	r2, #255
 124 008a 5A62     		str	r2, [r3, #36]
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 125              		.loc 1 190 0 discriminator 2
 126 008c FB68     		ldr	r3, [r7, #12]
 127 008e 0122     		movs	r2, #1
 128 0090 5A77     		strb	r2, [r3, #29]
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 129              		.loc 1 193 0 discriminator 2
 130 0092 FB68     		ldr	r3, [r7, #12]
 131 0094 0022     		movs	r2, #0
 132 0096 1A77     		strb	r2, [r3, #28]
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 133              		.loc 1 195 0 discriminator 2
 134 0098 0023     		movs	r3, #0
 135              	.L3:
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 136              		.loc 1 196 0
 137 009a 1846     		mov	r0, r3
 138 009c 1C37     		adds	r7, r7, #28
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 4
 141 009e BD46     		mov	sp, r7
 142              	.LCFI4:
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 00a0 5DF8047B 		ldr	r7, [sp], #4
 146              	.LCFI5:
 147              		.cfi_restore 7
ARM GAS  /tmp/cc2l9dGw.s 			page 7


 148              		.cfi_def_cfa_offset 0
 149 00a4 7047     		bx	lr
 150              	.L5:
 151 00a6 00BF     		.align	2
 152              	.L4:
 153 00a8 F7F7FFFF 		.word	-2057
 154              		.cfi_endproc
 155              	.LFE138:
 157              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 158              		.align	1
 159              		.global	HAL_RTCEx_SetTimeStamp_IT
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	HAL_RTCEx_SetTimeStamp_IT:
 166              	.LFB139:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets TimeStamp with Interrupt. 
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         activated.
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC13: PC13 is selected as RTC TimeStamp Pin.
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PI8: PI8 is selected as RTC TimeStamp Pin.  
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_PC1: PC1 is selected as RTC TimeStamp Pin.   
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 167              		.loc 1 218 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 24
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              	.LCFI6:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 87B0     		sub	sp, sp, #28
 177              	.LCFI7:
 178              		.cfi_def_cfa_offset 32
 179 0004 00AF     		add	r7, sp, #0
 180              	.LCFI8:
 181              		.cfi_def_cfa_register 7
 182 0006 F860     		str	r0, [r7, #12]
 183 0008 B960     		str	r1, [r7, #8]
 184 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/cc2l9dGw.s 			page 8


 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 185              		.loc 1 219 0
 186 000c 0023     		movs	r3, #0
 187 000e 7B61     		str	r3, [r7, #20]
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 188              		.loc 1 226 0
 189 0010 FB68     		ldr	r3, [r7, #12]
 190 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 191 0014 012B     		cmp	r3, #1
 192 0016 01D1     		bne	.L7
 193              		.loc 1 226 0 is_stmt 0 discriminator 1
 194 0018 0223     		movs	r3, #2
 195 001a 5BE0     		b	.L8
 196              	.L7:
 197              		.loc 1 226 0 discriminator 2
 198 001c FB68     		ldr	r3, [r7, #12]
 199 001e 0122     		movs	r2, #1
 200 0020 1A77     		strb	r2, [r3, #28]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 201              		.loc 1 228 0 is_stmt 1 discriminator 2
 202 0022 FB68     		ldr	r3, [r7, #12]
 203 0024 0222     		movs	r2, #2
 204 0026 5A77     		strb	r2, [r3, #29]
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 205              		.loc 1 231 0 discriminator 2
 206 0028 FB68     		ldr	r3, [r7, #12]
 207 002a 1B68     		ldr	r3, [r3]
 208 002c 9A68     		ldr	r2, [r3, #8]
 209 002e 2C4B     		ldr	r3, .L9
 210 0030 1340     		ands	r3, r3, r2
 211 0032 7B61     		str	r3, [r7, #20]
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 212              		.loc 1 233 0 discriminator 2
 213 0034 7A69     		ldr	r2, [r7, #20]
 214 0036 BB68     		ldr	r3, [r7, #8]
 215 0038 1343     		orrs	r3, r3, r2
 216 003a 7B61     		str	r3, [r7, #20]
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 217              		.loc 1 236 0 discriminator 2
 218 003c FB68     		ldr	r3, [r7, #12]
 219 003e 1B68     		ldr	r3, [r3]
 220 0040 CA22     		movs	r2, #202
 221 0042 5A62     		str	r2, [r3, #36]
 222 0044 FB68     		ldr	r3, [r7, #12]
 223 0046 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 9


 224 0048 5322     		movs	r2, #83
 225 004a 5A62     		str	r2, [r3, #36]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 226              		.loc 1 239 0 discriminator 2
 227 004c FB68     		ldr	r3, [r7, #12]
 228 004e 1B68     		ldr	r3, [r3]
 229 0050 7A69     		ldr	r2, [r7, #20]
 230 0052 9A60     		str	r2, [r3, #8]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR &= (uint32_t)~RTC_OR_TSINSEL;
 231              		.loc 1 241 0 discriminator 2
 232 0054 FB68     		ldr	r3, [r7, #12]
 233 0056 1B68     		ldr	r3, [r3]
 234 0058 DA6C     		ldr	r2, [r3, #76]
 235 005a FB68     		ldr	r3, [r7, #12]
 236 005c 1B68     		ldr	r3, [r3]
 237 005e 22F00602 		bic	r2, r2, #6
 238 0062 DA64     		str	r2, [r3, #76]
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->OR |= (uint32_t)(RTC_TimeStampPin);
 239              		.loc 1 242 0 discriminator 2
 240 0064 FB68     		ldr	r3, [r7, #12]
 241 0066 1B68     		ldr	r3, [r3]
 242 0068 D96C     		ldr	r1, [r3, #76]
 243 006a FB68     		ldr	r3, [r7, #12]
 244 006c 1B68     		ldr	r3, [r3]
 245 006e 7A68     		ldr	r2, [r7, #4]
 246 0070 0A43     		orrs	r2, r2, r1
 247 0072 DA64     		str	r2, [r3, #76]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear RTC Timestamp flag */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 248              		.loc 1 245 0 discriminator 2
 249 0074 FB68     		ldr	r3, [r7, #12]
 250 0076 1B68     		ldr	r3, [r3]
 251 0078 DB68     		ldr	r3, [r3, #12]
 252 007a DAB2     		uxtb	r2, r3
 253 007c FB68     		ldr	r3, [r7, #12]
 254 007e 1B68     		ldr	r3, [r3]
 255 0080 62F40862 		orn	r2, r2, #2176
 256 0084 DA60     		str	r2, [r3, #12]
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 257              		.loc 1 247 0 discriminator 2
 258 0086 FB68     		ldr	r3, [r7, #12]
 259 0088 1B68     		ldr	r3, [r3]
 260 008a 9A68     		ldr	r2, [r3, #8]
 261 008c FB68     		ldr	r3, [r7, #12]
 262 008e 1B68     		ldr	r3, [r3]
 263 0090 42F40062 		orr	r2, r2, #2048
 264 0094 9A60     		str	r2, [r3, #8]
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */ 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 265              		.loc 1 250 0 discriminator 2
 266 0096 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 10


 267 0098 1B68     		ldr	r3, [r3]
 268 009a 9A68     		ldr	r2, [r3, #8]
 269 009c FB68     		ldr	r3, [r7, #12]
 270 009e 1B68     		ldr	r3, [r3]
 271 00a0 42F40042 		orr	r2, r2, #32768
 272 00a4 9A60     		str	r2, [r3, #8]
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 273              		.loc 1 253 0 discriminator 2
 274 00a6 0F4B     		ldr	r3, .L9+4
 275 00a8 1B68     		ldr	r3, [r3]
 276 00aa 0E4A     		ldr	r2, .L9+4
 277 00ac 43F40013 		orr	r3, r3, #2097152
 278 00b0 1360     		str	r3, [r2]
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT;
 279              		.loc 1 255 0 discriminator 2
 280 00b2 0C4B     		ldr	r3, .L9+4
 281 00b4 9B68     		ldr	r3, [r3, #8]
 282 00b6 0B4A     		ldr	r2, .L9+4
 283 00b8 43F40013 		orr	r3, r3, #2097152
 284 00bc 9360     		str	r3, [r2, #8]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 285              		.loc 1 258 0 discriminator 2
 286 00be FB68     		ldr	r3, [r7, #12]
 287 00c0 1B68     		ldr	r3, [r3]
 288 00c2 FF22     		movs	r2, #255
 289 00c4 5A62     		str	r2, [r3, #36]
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;  
 290              		.loc 1 260 0 discriminator 2
 291 00c6 FB68     		ldr	r3, [r7, #12]
 292 00c8 0122     		movs	r2, #1
 293 00ca 5A77     		strb	r2, [r3, #29]
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 294              		.loc 1 263 0 discriminator 2
 295 00cc FB68     		ldr	r3, [r7, #12]
 296 00ce 0022     		movs	r2, #0
 297 00d0 1A77     		strb	r2, [r3, #28]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 298              		.loc 1 265 0 discriminator 2
 299 00d2 0023     		movs	r3, #0
 300              	.L8:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 301              		.loc 1 266 0
 302 00d4 1846     		mov	r0, r3
 303 00d6 1C37     		adds	r7, r7, #28
 304              	.LCFI9:
 305              		.cfi_def_cfa_offset 4
 306 00d8 BD46     		mov	sp, r7
 307              	.LCFI10:
ARM GAS  /tmp/cc2l9dGw.s 			page 11


 308              		.cfi_def_cfa_register 13
 309              		@ sp needed
 310 00da 5DF8047B 		ldr	r7, [sp], #4
 311              	.LCFI11:
 312              		.cfi_restore 7
 313              		.cfi_def_cfa_offset 0
 314 00de 7047     		bx	lr
 315              	.L10:
 316              		.align	2
 317              	.L9:
 318 00e0 F7F7FFFF 		.word	-2057
 319 00e4 003C0140 		.word	1073822720
 320              		.cfi_endproc
 321              	.LFE139:
 323              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 324              		.align	1
 325              		.global	HAL_RTCEx_DeactivateTimeStamp
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	HAL_RTCEx_DeactivateTimeStamp:
 332              	.LFB140:
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates TimeStamp. 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 333              		.loc 1 275 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 16
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI12:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 85B0     		sub	sp, sp, #20
 343              	.LCFI13:
 344              		.cfi_def_cfa_offset 24
 345 0004 00AF     		add	r7, sp, #0
 346              	.LCFI14:
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 349              		.loc 1 276 0
 350 0008 0023     		movs	r3, #0
 351 000a FB60     		str	r3, [r7, #12]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 352              		.loc 1 279 0
 353 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc2l9dGw.s 			page 12


 354 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 355 0010 012B     		cmp	r3, #1
 356 0012 01D1     		bne	.L12
 357              		.loc 1 279 0 is_stmt 0 discriminator 1
 358 0014 0223     		movs	r3, #2
 359 0016 2AE0     		b	.L13
 360              	.L12:
 361              		.loc 1 279 0 discriminator 2
 362 0018 7B68     		ldr	r3, [r7, #4]
 363 001a 0122     		movs	r2, #1
 364 001c 1A77     		strb	r2, [r3, #28]
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 365              		.loc 1 281 0 is_stmt 1 discriminator 2
 366 001e 7B68     		ldr	r3, [r7, #4]
 367 0020 0222     		movs	r2, #2
 368 0022 5A77     		strb	r2, [r3, #29]
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 369              		.loc 1 284 0 discriminator 2
 370 0024 7B68     		ldr	r3, [r7, #4]
 371 0026 1B68     		ldr	r3, [r3]
 372 0028 CA22     		movs	r2, #202
 373 002a 5A62     		str	r2, [r3, #36]
 374 002c 7B68     		ldr	r3, [r7, #4]
 375 002e 1B68     		ldr	r3, [r3]
 376 0030 5322     		movs	r2, #83
 377 0032 5A62     		str	r2, [r3, #36]
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 378              		.loc 1 287 0 discriminator 2
 379 0034 7B68     		ldr	r3, [r7, #4]
 380 0036 1B68     		ldr	r3, [r3]
 381 0038 9A68     		ldr	r2, [r3, #8]
 382 003a 7B68     		ldr	r3, [r7, #4]
 383 003c 1B68     		ldr	r3, [r3]
 384 003e 22F40042 		bic	r2, r2, #32768
 385 0042 9A60     		str	r2, [r3, #8]
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 386              		.loc 1 290 0 discriminator 2
 387 0044 7B68     		ldr	r3, [r7, #4]
 388 0046 1B68     		ldr	r3, [r3]
 389 0048 9A68     		ldr	r2, [r3, #8]
 390 004a 0C4B     		ldr	r3, .L14
 391 004c 1340     		ands	r3, r3, r2
 392 004e FB60     		str	r3, [r7, #12]
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 393              		.loc 1 293 0 discriminator 2
 394 0050 7B68     		ldr	r3, [r7, #4]
 395 0052 1B68     		ldr	r3, [r3]
 396 0054 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 13


 397 0056 9A60     		str	r2, [r3, #8]
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 398              		.loc 1 296 0 discriminator 2
 399 0058 7B68     		ldr	r3, [r7, #4]
 400 005a 1B68     		ldr	r3, [r3]
 401 005c FF22     		movs	r2, #255
 402 005e 5A62     		str	r2, [r3, #36]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;  
 403              		.loc 1 298 0 discriminator 2
 404 0060 7B68     		ldr	r3, [r7, #4]
 405 0062 0122     		movs	r2, #1
 406 0064 5A77     		strb	r2, [r3, #29]
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 407              		.loc 1 301 0 discriminator 2
 408 0066 7B68     		ldr	r3, [r7, #4]
 409 0068 0022     		movs	r2, #0
 410 006a 1A77     		strb	r2, [r3, #28]
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 411              		.loc 1 303 0 discriminator 2
 412 006c 0023     		movs	r3, #0
 413              	.L13:
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 414              		.loc 1 304 0
 415 006e 1846     		mov	r0, r3
 416 0070 1437     		adds	r7, r7, #20
 417              	.LCFI15:
 418              		.cfi_def_cfa_offset 4
 419 0072 BD46     		mov	sp, r7
 420              	.LCFI16:
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 0074 5DF8047B 		ldr	r7, [sp], #4
 424              	.LCFI17:
 425              		.cfi_restore 7
 426              		.cfi_def_cfa_offset 0
 427 0078 7047     		bx	lr
 428              	.L15:
 429 007a 00BF     		.align	2
 430              	.L14:
 431 007c F7F7FFFF 		.word	-2057
 432              		.cfi_endproc
 433              	.LFE140:
 435              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_RTCEx_SetInternalTimeStamp
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_RTCEx_SetInternalTimeStamp:
 444              	.LFB141:
ARM GAS  /tmp/cc2l9dGw.s 			page 14


 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Internal TimeStamp.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 445              		.loc 1 314 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450 0000 80B4     		push	{r7}
 451              	.LCFI18:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              	.LCFI19:
 456              		.cfi_def_cfa_offset 16
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI20:
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 461              		.loc 1 316 0
 462 0008 7B68     		ldr	r3, [r7, #4]
 463 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 464 000c 012B     		cmp	r3, #1
 465 000e 01D1     		bne	.L17
 466              		.loc 1 316 0 is_stmt 0 discriminator 1
 467 0010 0223     		movs	r3, #2
 468 0012 20E0     		b	.L18
 469              	.L17:
 470              		.loc 1 316 0 discriminator 2
 471 0014 7B68     		ldr	r3, [r7, #4]
 472 0016 0122     		movs	r2, #1
 473 0018 1A77     		strb	r2, [r3, #28]
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 474              		.loc 1 318 0 is_stmt 1 discriminator 2
 475 001a 7B68     		ldr	r3, [r7, #4]
 476 001c 0222     		movs	r2, #2
 477 001e 5A77     		strb	r2, [r3, #29]
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 478              		.loc 1 321 0 discriminator 2
 479 0020 7B68     		ldr	r3, [r7, #4]
 480 0022 1B68     		ldr	r3, [r3]
 481 0024 CA22     		movs	r2, #202
 482 0026 5A62     		str	r2, [r3, #36]
 483 0028 7B68     		ldr	r3, [r7, #4]
 484 002a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 15


 485 002c 5322     		movs	r2, #83
 486 002e 5A62     		str	r2, [r3, #36]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 487              		.loc 1 324 0 discriminator 2
 488 0030 7B68     		ldr	r3, [r7, #4]
 489 0032 1B68     		ldr	r3, [r3]
 490 0034 9A68     		ldr	r2, [r3, #8]
 491 0036 7B68     		ldr	r3, [r7, #4]
 492 0038 1B68     		ldr	r3, [r3]
 493 003a 42F08072 		orr	r2, r2, #16777216
 494 003e 9A60     		str	r2, [r3, #8]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 495              		.loc 1 327 0 discriminator 2
 496 0040 7B68     		ldr	r3, [r7, #4]
 497 0042 1B68     		ldr	r3, [r3]
 498 0044 FF22     		movs	r2, #255
 499 0046 5A62     		str	r2, [r3, #36]
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 500              		.loc 1 330 0 discriminator 2
 501 0048 7B68     		ldr	r3, [r7, #4]
 502 004a 0122     		movs	r2, #1
 503 004c 5A77     		strb	r2, [r3, #29]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 504              		.loc 1 333 0 discriminator 2
 505 004e 7B68     		ldr	r3, [r7, #4]
 506 0050 0022     		movs	r2, #0
 507 0052 1A77     		strb	r2, [r3, #28]
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 508              		.loc 1 335 0 discriminator 2
 509 0054 0023     		movs	r3, #0
 510              	.L18:
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 511              		.loc 1 336 0
 512 0056 1846     		mov	r0, r3
 513 0058 0C37     		adds	r7, r7, #12
 514              	.LCFI21:
 515              		.cfi_def_cfa_offset 4
 516 005a BD46     		mov	sp, r7
 517              	.LCFI22:
 518              		.cfi_def_cfa_register 13
 519              		@ sp needed
 520 005c 5DF8047B 		ldr	r7, [sp], #4
 521              	.LCFI23:
 522              		.cfi_restore 7
 523              		.cfi_def_cfa_offset 0
 524 0060 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE141:
ARM GAS  /tmp/cc2l9dGw.s 			page 16


 528              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu fpv4-sp-d16
 536              	HAL_RTCEx_DeactivateInternalTimeStamp:
 537              	.LFB142:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates internal TimeStamp.
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 538              		.loc 1 345 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 8
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              	.LCFI24:
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 83B0     		sub	sp, sp, #12
 548              	.LCFI25:
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              	.LCFI26:
 552              		.cfi_def_cfa_register 7
 553 0006 7860     		str	r0, [r7, #4]
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 554              		.loc 1 347 0
 555 0008 7B68     		ldr	r3, [r7, #4]
 556 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 557 000c 012B     		cmp	r3, #1
 558 000e 01D1     		bne	.L20
 559              		.loc 1 347 0 is_stmt 0 discriminator 1
 560 0010 0223     		movs	r3, #2
 561 0012 20E0     		b	.L21
 562              	.L20:
 563              		.loc 1 347 0 discriminator 2
 564 0014 7B68     		ldr	r3, [r7, #4]
 565 0016 0122     		movs	r2, #1
 566 0018 1A77     		strb	r2, [r3, #28]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 567              		.loc 1 349 0 is_stmt 1 discriminator 2
 568 001a 7B68     		ldr	r3, [r7, #4]
 569 001c 0222     		movs	r2, #2
 570 001e 5A77     		strb	r2, [r3, #29]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
ARM GAS  /tmp/cc2l9dGw.s 			page 17


 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 571              		.loc 1 352 0 discriminator 2
 572 0020 7B68     		ldr	r3, [r7, #4]
 573 0022 1B68     		ldr	r3, [r3]
 574 0024 CA22     		movs	r2, #202
 575 0026 5A62     		str	r2, [r3, #36]
 576 0028 7B68     		ldr	r3, [r7, #4]
 577 002a 1B68     		ldr	r3, [r3]
 578 002c 5322     		movs	r2, #83
 579 002e 5A62     		str	r2, [r3, #36]
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 580              		.loc 1 355 0 discriminator 2
 581 0030 7B68     		ldr	r3, [r7, #4]
 582 0032 1B68     		ldr	r3, [r3]
 583 0034 9A68     		ldr	r2, [r3, #8]
 584 0036 7B68     		ldr	r3, [r7, #4]
 585 0038 1B68     		ldr	r3, [r3]
 586 003a 22F08072 		bic	r2, r2, #16777216
 587 003e 9A60     		str	r2, [r3, #8]
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 588              		.loc 1 358 0 discriminator 2
 589 0040 7B68     		ldr	r3, [r7, #4]
 590 0042 1B68     		ldr	r3, [r3]
 591 0044 FF22     		movs	r2, #255
 592 0046 5A62     		str	r2, [r3, #36]
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 593              		.loc 1 360 0 discriminator 2
 594 0048 7B68     		ldr	r3, [r7, #4]
 595 004a 0122     		movs	r2, #1
 596 004c 5A77     		strb	r2, [r3, #29]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 597              		.loc 1 363 0 discriminator 2
 598 004e 7B68     		ldr	r3, [r7, #4]
 599 0050 0022     		movs	r2, #0
 600 0052 1A77     		strb	r2, [r3, #28]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 601              		.loc 1 365 0 discriminator 2
 602 0054 0023     		movs	r3, #0
 603              	.L21:
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 604              		.loc 1 366 0
 605 0056 1846     		mov	r0, r3
 606 0058 0C37     		adds	r7, r7, #12
 607              	.LCFI27:
 608              		.cfi_def_cfa_offset 4
 609 005a BD46     		mov	sp, r7
 610              	.LCFI28:
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
ARM GAS  /tmp/cc2l9dGw.s 			page 18


 613 005c 5DF8047B 		ldr	r7, [sp], #4
 614              	.LCFI29:
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 0060 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE142:
 621              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 622              		.align	1
 623              		.global	HAL_RTCEx_GetTimeStamp
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	HAL_RTCEx_GetTimeStamp:
 630              	.LFB143:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Gets the RTC TimeStamp value.
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure  
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             FORMAT_BIN: Binary data format 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             FORMAT_BCD: BCD data format
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 631              		.loc 1 381 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 24
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              	.LCFI30:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 86B0     		sub	sp, sp, #24
 641              	.LCFI31:
 642              		.cfi_def_cfa_offset 32
 643 0004 00AF     		add	r7, sp, #0
 644              	.LCFI32:
 645              		.cfi_def_cfa_register 7
 646 0006 F860     		str	r0, [r7, #12]
 647 0008 B960     		str	r1, [r7, #8]
 648 000a 7A60     		str	r2, [r7, #4]
 649 000c 3B60     		str	r3, [r7]
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmptime = 0U, tmpdate = 0U;
 650              		.loc 1 382 0
 651 000e 0023     		movs	r3, #0
 652 0010 7B61     		str	r3, [r7, #20]
 653 0012 0023     		movs	r3, #0
 654 0014 3B61     		str	r3, [r7, #16]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cc2l9dGw.s 			page 19


 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 655              		.loc 1 388 0
 656 0016 FB68     		ldr	r3, [r7, #12]
 657 0018 1B68     		ldr	r3, [r3]
 658 001a 1A6B     		ldr	r2, [r3, #48]
 659 001c 464B     		ldr	r3, .L25
 660 001e 1340     		ands	r3, r3, r2
 661 0020 7B61     		str	r3, [r7, #20]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 662              		.loc 1 389 0
 663 0022 FB68     		ldr	r3, [r7, #12]
 664 0024 1B68     		ldr	r3, [r3]
 665 0026 5A6B     		ldr	r2, [r3, #52]
 666 0028 444B     		ldr	r3, .L25+4
 667 002a 1340     		ands	r3, r3, r2
 668 002c 3B61     		str	r3, [r7, #16]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 669              		.loc 1 392 0
 670 002e 7B69     		ldr	r3, [r7, #20]
 671 0030 1B0C     		lsrs	r3, r3, #16
 672 0032 DBB2     		uxtb	r3, r3
 673 0034 03F03F03 		and	r3, r3, #63
 674 0038 DAB2     		uxtb	r2, r3
 675 003a BB68     		ldr	r3, [r7, #8]
 676 003c 1A70     		strb	r2, [r3]
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8U);
 677              		.loc 1 393 0
 678 003e 7B69     		ldr	r3, [r7, #20]
 679 0040 1B0A     		lsrs	r3, r3, #8
 680 0042 DBB2     		uxtb	r3, r3
 681 0044 03F07F03 		and	r3, r3, #127
 682 0048 DAB2     		uxtb	r2, r3
 683 004a BB68     		ldr	r3, [r7, #8]
 684 004c 5A70     		strb	r2, [r3, #1]
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 685              		.loc 1 394 0
 686 004e 7B69     		ldr	r3, [r7, #20]
 687 0050 DBB2     		uxtb	r3, r3
 688 0052 03F07F03 		and	r3, r3, #127
 689 0056 DAB2     		uxtb	r2, r3
 690 0058 BB68     		ldr	r3, [r7, #8]
 691 005a 9A70     		strb	r2, [r3, #2]
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16U);  
 692              		.loc 1 395 0
 693 005c 7B69     		ldr	r3, [r7, #20]
 694 005e 1B0C     		lsrs	r3, r3, #16
 695 0060 DBB2     		uxtb	r3, r3
 696 0062 03F04003 		and	r3, r3, #64
 697 0066 DAB2     		uxtb	r2, r3
 698 0068 BB68     		ldr	r3, [r7, #8]
 699 006a 1A73     		strb	r2, [r3, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 20


 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 700              		.loc 1 396 0
 701 006c FB68     		ldr	r3, [r7, #12]
 702 006e 1B68     		ldr	r3, [r3]
 703 0070 9A6B     		ldr	r2, [r3, #56]
 704 0072 BB68     		ldr	r3, [r7, #8]
 705 0074 5A60     		str	r2, [r3, #4]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0U;
 706              		.loc 1 399 0
 707 0076 7B68     		ldr	r3, [r7, #4]
 708 0078 0022     		movs	r2, #0
 709 007a DA70     		strb	r2, [r3, #3]
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 710              		.loc 1 400 0
 711 007c 3B69     		ldr	r3, [r7, #16]
 712 007e 1B0A     		lsrs	r3, r3, #8
 713 0080 DBB2     		uxtb	r3, r3
 714 0082 03F01F03 		and	r3, r3, #31
 715 0086 DAB2     		uxtb	r2, r3
 716 0088 7B68     		ldr	r3, [r7, #4]
 717 008a 5A70     		strb	r2, [r3, #1]
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 718              		.loc 1 401 0
 719 008c 3B69     		ldr	r3, [r7, #16]
 720 008e DBB2     		uxtb	r3, r3
 721 0090 03F03F03 		and	r3, r3, #63
 722 0094 DAB2     		uxtb	r2, r3
 723 0096 7B68     		ldr	r3, [r7, #4]
 724 0098 9A70     		strb	r2, [r3, #2]
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13U);
 725              		.loc 1 402 0
 726 009a 3B69     		ldr	r3, [r7, #16]
 727 009c 5B0B     		lsrs	r3, r3, #13
 728 009e DBB2     		uxtb	r3, r3
 729 00a0 03F00703 		and	r3, r3, #7
 730 00a4 DAB2     		uxtb	r2, r3
 731 00a6 7B68     		ldr	r3, [r7, #4]
 732 00a8 1A70     		strb	r2, [r3]
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 733              		.loc 1 405 0
 734 00aa 3B68     		ldr	r3, [r7]
 735 00ac 002B     		cmp	r3, #0
 736 00ae 35D1     		bne	.L23
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 737              		.loc 1 408 0
 738 00b0 BB68     		ldr	r3, [r7, #8]
 739 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 740 00b4 1846     		mov	r0, r3
 741 00b6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 742 00ba 0346     		mov	r3, r0
 743 00bc 1A46     		mov	r2, r3
ARM GAS  /tmp/cc2l9dGw.s 			page 21


 744 00be BB68     		ldr	r3, [r7, #8]
 745 00c0 1A70     		strb	r2, [r3]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 746              		.loc 1 409 0
 747 00c2 BB68     		ldr	r3, [r7, #8]
 748 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 749 00c6 1846     		mov	r0, r3
 750 00c8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 751 00cc 0346     		mov	r3, r0
 752 00ce 1A46     		mov	r2, r3
 753 00d0 BB68     		ldr	r3, [r7, #8]
 754 00d2 5A70     		strb	r2, [r3, #1]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 755              		.loc 1 410 0
 756 00d4 BB68     		ldr	r3, [r7, #8]
 757 00d6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 758 00d8 1846     		mov	r0, r3
 759 00da FFF7FEFF 		bl	RTC_Bcd2ToByte
 760 00de 0346     		mov	r3, r0
 761 00e0 1A46     		mov	r2, r3
 762 00e2 BB68     		ldr	r3, [r7, #8]
 763 00e4 9A70     		strb	r2, [r3, #2]
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 764              		.loc 1 413 0
 765 00e6 7B68     		ldr	r3, [r7, #4]
 766 00e8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 767 00ea 1846     		mov	r0, r3
 768 00ec FFF7FEFF 		bl	RTC_Bcd2ToByte
 769 00f0 0346     		mov	r3, r0
 770 00f2 1A46     		mov	r2, r3
 771 00f4 7B68     		ldr	r3, [r7, #4]
 772 00f6 5A70     		strb	r2, [r3, #1]
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 773              		.loc 1 414 0
 774 00f8 7B68     		ldr	r3, [r7, #4]
 775 00fa 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 776 00fc 1846     		mov	r0, r3
 777 00fe FFF7FEFF 		bl	RTC_Bcd2ToByte
 778 0102 0346     		mov	r3, r0
 779 0104 1A46     		mov	r2, r3
 780 0106 7B68     		ldr	r3, [r7, #4]
 781 0108 9A70     		strb	r2, [r3, #2]
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 782              		.loc 1 415 0
 783 010a 7B68     		ldr	r3, [r7, #4]
 784 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 010e 1846     		mov	r0, r3
 786 0110 FFF7FEFF 		bl	RTC_Bcd2ToByte
 787 0114 0346     		mov	r3, r0
 788 0116 1A46     		mov	r2, r3
 789 0118 7B68     		ldr	r3, [r7, #4]
 790 011a 1A70     		strb	r2, [r3]
 791              	.L23:
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
ARM GAS  /tmp/cc2l9dGw.s 			page 22


 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flag */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 792              		.loc 1 419 0
 793 011c FB68     		ldr	r3, [r7, #12]
 794 011e 1B68     		ldr	r3, [r3]
 795 0120 DB68     		ldr	r3, [r3, #12]
 796 0122 DAB2     		uxtb	r2, r3
 797 0124 FB68     		ldr	r3, [r7, #12]
 798 0126 1B68     		ldr	r3, [r3]
 799 0128 62F40862 		orn	r2, r2, #2176
 800 012c DA60     		str	r2, [r3, #12]
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 801              		.loc 1 421 0
 802 012e 0023     		movs	r3, #0
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 803              		.loc 1 422 0
 804 0130 1846     		mov	r0, r3
 805 0132 1837     		adds	r7, r7, #24
 806              	.LCFI33:
 807              		.cfi_def_cfa_offset 8
 808 0134 BD46     		mov	sp, r7
 809              	.LCFI34:
 810              		.cfi_def_cfa_register 13
 811              		@ sp needed
 812 0136 80BD     		pop	{r7, pc}
 813              	.L26:
 814              		.align	2
 815              	.L25:
 816 0138 7F7F7F00 		.word	8355711
 817 013c 3FFFFF00 		.word	16777023
 818              		.cfi_endproc
 819              	.LFE143:
 821              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 822              		.align	1
 823              		.global	HAL_RTCEx_SetTamper
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv4-sp-d16
 829              	HAL_RTCEx_SetTamper:
 830              	.LFB144:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Tamper
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers. 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 831              		.loc 1 433 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 16
 834              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc2l9dGw.s 			page 23


 835              		@ link register save eliminated.
 836 0000 80B4     		push	{r7}
 837              	.LCFI35:
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              	.LCFI36:
 842              		.cfi_def_cfa_offset 24
 843 0004 00AF     		add	r7, sp, #0
 844              	.LCFI37:
 845              		.cfi_def_cfa_register 7
 846 0006 7860     		str	r0, [r7, #4]
 847 0008 3960     		str	r1, [r7]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 848              		.loc 1 434 0
 849 000a 0023     		movs	r3, #0
 850 000c FB60     		str	r3, [r7, #12]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));         
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 851              		.loc 1 448 0
 852 000e 7B68     		ldr	r3, [r7, #4]
 853 0010 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 854 0012 012B     		cmp	r3, #1
 855 0014 01D1     		bne	.L28
 856              		.loc 1 448 0 is_stmt 0 discriminator 1
 857 0016 0223     		movs	r3, #2
 858 0018 9EE0     		b	.L29
 859              	.L28:
 860              		.loc 1 448 0 discriminator 2
 861 001a 7B68     		ldr	r3, [r7, #4]
 862 001c 0122     		movs	r2, #1
 863 001e 1A77     		strb	r2, [r3, #28]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 864              		.loc 1 450 0 is_stmt 1 discriminator 2
 865 0020 7B68     		ldr	r3, [r7, #4]
 866 0022 0222     		movs	r2, #2
 867 0024 5A77     		strb	r2, [r3, #29]
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 868              		.loc 1 452 0 discriminator 2
 869 0026 3B68     		ldr	r3, [r7]
 870 0028 9B68     		ldr	r3, [r3, #8]
 871 002a 002B     		cmp	r3, #0
 872 002c 04D0     		beq	.L30
ARM GAS  /tmp/cc2l9dGw.s 			page 24


 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U); 
 873              		.loc 1 454 0
 874 002e 3B68     		ldr	r3, [r7]
 875 0030 1B68     		ldr	r3, [r3]
 876 0032 5A00     		lsls	r2, r3, #1
 877 0034 3B68     		ldr	r3, [r7]
 878 0036 9A60     		str	r2, [r3, #8]
 879              	.L30:
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 880              		.loc 1 457 0
 881 0038 3B68     		ldr	r3, [r7]
 882 003a DB68     		ldr	r3, [r3, #12]
 883 003c 002B     		cmp	r3, #0
 884 003e 26D0     		beq	.L31
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->NoErase = 0;
 885              		.loc 1 459 0
 886 0040 3B68     		ldr	r3, [r7]
 887 0042 0022     		movs	r2, #0
 888 0044 DA60     		str	r2, [r3, #12]
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 889              		.loc 1 460 0
 890 0046 3B68     		ldr	r3, [r7]
 891 0048 1B68     		ldr	r3, [r3]
 892 004a 03F00103 		and	r3, r3, #1
 893 004e 002B     		cmp	r3, #0
 894 0050 05D0     		beq	.L32
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP1NOERASE;
 895              		.loc 1 462 0
 896 0052 3B68     		ldr	r3, [r7]
 897 0054 DB68     		ldr	r3, [r3, #12]
 898 0056 43F40032 		orr	r2, r3, #131072
 899 005a 3B68     		ldr	r3, [r7]
 900 005c DA60     		str	r2, [r3, #12]
 901              	.L32:
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 902              		.loc 1 464 0
 903 005e 3B68     		ldr	r3, [r7]
 904 0060 1B68     		ldr	r3, [r3]
 905 0062 03F00803 		and	r3, r3, #8
 906 0066 002B     		cmp	r3, #0
 907 0068 05D0     		beq	.L33
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP2NOERASE;
 908              		.loc 1 466 0
 909 006a 3B68     		ldr	r3, [r7]
 910 006c DB68     		ldr	r3, [r3, #12]
 911 006e 43F48012 		orr	r2, r3, #1048576
 912 0072 3B68     		ldr	r3, [r7]
 913 0074 DA60     		str	r2, [r3, #12]
 914              	.L33:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/cc2l9dGw.s 			page 25


 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 915              		.loc 1 468 0
 916 0076 3B68     		ldr	r3, [r7]
 917 0078 1B68     		ldr	r3, [r3]
 918 007a 03F02003 		and	r3, r3, #32
 919 007e 002B     		cmp	r3, #0
 920 0080 05D0     		beq	.L31
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP3NOERASE;
 921              		.loc 1 470 0
 922 0082 3B68     		ldr	r3, [r7]
 923 0084 DB68     		ldr	r3, [r3, #12]
 924 0086 43F40002 		orr	r2, r3, #8388608
 925 008a 3B68     		ldr	r3, [r7]
 926 008c DA60     		str	r2, [r3, #12]
 927              	.L31:
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 928              		.loc 1 474 0
 929 008e 3B68     		ldr	r3, [r7]
 930 0090 1B69     		ldr	r3, [r3, #16]
 931 0092 002B     		cmp	r3, #0
 932 0094 26D0     		beq	.L34
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->MaskFlag = 0;
 933              		.loc 1 476 0
 934 0096 3B68     		ldr	r3, [r7]
 935 0098 0022     		movs	r2, #0
 936 009a 1A61     		str	r2, [r3, #16]
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 937              		.loc 1 477 0
 938 009c 3B68     		ldr	r3, [r7]
 939 009e 1B68     		ldr	r3, [r3]
 940 00a0 03F00103 		and	r3, r3, #1
 941 00a4 002B     		cmp	r3, #0
 942 00a6 05D0     		beq	.L35
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP1MF;
 943              		.loc 1 479 0
 944 00a8 3B68     		ldr	r3, [r7]
 945 00aa 1B69     		ldr	r3, [r3, #16]
 946 00ac 43F48022 		orr	r2, r3, #262144
 947 00b0 3B68     		ldr	r3, [r7]
 948 00b2 1A61     		str	r2, [r3, #16]
 949              	.L35:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 950              		.loc 1 481 0
 951 00b4 3B68     		ldr	r3, [r7]
 952 00b6 1B68     		ldr	r3, [r3]
 953 00b8 03F00803 		and	r3, r3, #8
 954 00bc 002B     		cmp	r3, #0
 955 00be 05D0     		beq	.L36
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP2MF;
ARM GAS  /tmp/cc2l9dGw.s 			page 26


 956              		.loc 1 483 0
 957 00c0 3B68     		ldr	r3, [r7]
 958 00c2 1B69     		ldr	r3, [r3, #16]
 959 00c4 43F40012 		orr	r2, r3, #2097152
 960 00c8 3B68     		ldr	r3, [r7]
 961 00ca 1A61     		str	r2, [r3, #16]
 962              	.L36:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 963              		.loc 1 485 0
 964 00cc 3B68     		ldr	r3, [r7]
 965 00ce 1B68     		ldr	r3, [r3]
 966 00d0 03F02003 		and	r3, r3, #32
 967 00d4 002B     		cmp	r3, #0
 968 00d6 05D0     		beq	.L34
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP3MF;
 969              		.loc 1 487 0
 970 00d8 3B68     		ldr	r3, [r7]
 971 00da 1B69     		ldr	r3, [r3, #16]
 972 00dc 43F08072 		orr	r2, r3, #16777216
 973 00e0 3B68     		ldr	r3, [r7]
 974 00e2 1A61     		str	r2, [r3, #16]
 975              	.L34:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger  | (uint32_t)sTamper->NoErase |\
 976              		.loc 1 491 0
 977 00e4 3B68     		ldr	r3, [r7]
 978 00e6 1A68     		ldr	r2, [r3]
 979 00e8 3B68     		ldr	r3, [r7]
 980 00ea 9B68     		ldr	r3, [r3, #8]
 981 00ec 1A43     		orrs	r2, r2, r3
 982 00ee 3B68     		ldr	r3, [r7]
 983 00f0 DB68     		ldr	r3, [r3, #12]
 984 00f2 1A43     		orrs	r2, r2, r3
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 985              		.loc 1 492 0
 986 00f4 3B68     		ldr	r3, [r7]
 987 00f6 1B69     		ldr	r3, [r3, #16]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 988              		.loc 1 491 0
 989 00f8 1A43     		orrs	r2, r2, r3
 990              		.loc 1 492 0
 991 00fa 3B68     		ldr	r3, [r7]
 992 00fc 5B69     		ldr	r3, [r3, #20]
 993 00fe 1A43     		orrs	r2, r2, r3
 994 0100 3B68     		ldr	r3, [r7]
 995 0102 9B69     		ldr	r3, [r3, #24]
 996 0104 1A43     		orrs	r2, r2, r3
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->PrechargeDuration | (uint32_t)sTamper->TamperPullUp | sTamper->TimeS
 997              		.loc 1 493 0
 998 0106 3B68     		ldr	r3, [r7]
 999 0108 DB69     		ldr	r3, [r3, #28]
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1000              		.loc 1 492 0
ARM GAS  /tmp/cc2l9dGw.s 			page 27


 1001 010a 1A43     		orrs	r2, r2, r3
 1002              		.loc 1 493 0
 1003 010c 3B68     		ldr	r3, [r7]
 1004 010e 1B6A     		ldr	r3, [r3, #32]
 1005 0110 1A43     		orrs	r2, r2, r3
 1006 0112 3B68     		ldr	r3, [r7]
 1007 0114 5B6A     		ldr	r3, [r3, #36]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1008              		.loc 1 491 0
 1009 0116 1343     		orrs	r3, r3, r2
 1010 0118 FB60     		str	r3, [r7, #12]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1
 1011              		.loc 1 495 0
 1012 011a 7B68     		ldr	r3, [r7, #4]
 1013 011c 1B68     		ldr	r3, [r3]
 1014 011e 196C     		ldr	r1, [r3, #64]
 1015 0120 3B68     		ldr	r3, [r7]
 1016 0122 1A68     		ldr	r2, [r3]
 1017 0124 3B68     		ldr	r3, [r7]
 1018 0126 1B68     		ldr	r3, [r3]
 1019 0128 5B00     		lsls	r3, r3, #1
 1020 012a 1A43     		orrs	r2, r2, r3
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPPUDIS | (uint32_t)RTC_TAMPCR_TAMPIE
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2IE | (uint32_t)RTC_TAMPCR_TAMP3IE 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2NOERASE | (uint32_t)RTC_TAMPCR_TAM
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2MF | (uint32_t)RTC_TAMPCR_TAMP3MF)
 1021              		.loc 1 500 0
 1022 012c 0D4B     		ldr	r3, .L37
 1023 012e 1343     		orrs	r3, r3, r2
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 1024              		.loc 1 495 0
 1025 0130 DA43     		mvns	r2, r3
 1026 0132 7B68     		ldr	r3, [r7, #4]
 1027 0134 1B68     		ldr	r3, [r3]
 1028 0136 0A40     		ands	r2, r2, r1
 1029 0138 1A64     		str	r2, [r3, #64]
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR |= tmpreg;      
 1030              		.loc 1 502 0
 1031 013a 7B68     		ldr	r3, [r7, #4]
 1032 013c 1B68     		ldr	r3, [r3]
 1033 013e 196C     		ldr	r1, [r3, #64]
 1034 0140 7B68     		ldr	r3, [r7, #4]
 1035 0142 1B68     		ldr	r3, [r3]
 1036 0144 FA68     		ldr	r2, [r7, #12]
 1037 0146 0A43     		orrs	r2, r2, r1
 1038 0148 1A64     		str	r2, [r3, #64]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 1039              		.loc 1 504 0
 1040 014a 7B68     		ldr	r3, [r7, #4]
 1041 014c 0122     		movs	r2, #1
 1042 014e 5A77     		strb	r2, [r3, #29]
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
ARM GAS  /tmp/cc2l9dGw.s 			page 28


 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1043              		.loc 1 507 0
 1044 0150 7B68     		ldr	r3, [r7, #4]
 1045 0152 0022     		movs	r2, #0
 1046 0154 1A77     		strb	r2, [r3, #28]
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1047              		.loc 1 509 0
 1048 0156 0023     		movs	r3, #0
 1049              	.L29:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1050              		.loc 1 510 0
 1051 0158 1846     		mov	r0, r3
 1052 015a 1437     		adds	r7, r7, #20
 1053              	.LCFI38:
 1054              		.cfi_def_cfa_offset 4
 1055 015c BD46     		mov	sp, r7
 1056              	.LCFI39:
 1057              		.cfi_def_cfa_register 13
 1058              		@ sp needed
 1059 015e 5DF8047B 		ldr	r7, [sp], #4
 1060              	.LCFI40:
 1061              		.cfi_restore 7
 1062              		.cfi_def_cfa_offset 0
 1063 0162 7047     		bx	lr
 1064              	.L38:
 1065              		.align	2
 1066              	.L37:
 1067 0164 84FFFF01 		.word	33554308
 1068              		.cfi_endproc
 1069              	.LFE144:
 1071              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 1072              		.align	1
 1073              		.global	HAL_RTCEx_SetTamper_IT
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	HAL_RTCEx_SetTamper_IT:
 1080              	.LFB145:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets Tamper with interrupt.
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1081              		.loc 1 521 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 16
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc2l9dGw.s 			page 29


 1087              	.LCFI41:
 1088              		.cfi_def_cfa_offset 4
 1089              		.cfi_offset 7, -4
 1090 0002 85B0     		sub	sp, sp, #20
 1091              	.LCFI42:
 1092              		.cfi_def_cfa_offset 24
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI43:
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 1097 0008 3960     		str	r1, [r7]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0;
 1098              		.loc 1 522 0
 1099 000a 0023     		movs	r3, #0
 1100 000c FB60     		str	r3, [r7, #12]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));         
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1101              		.loc 1 537 0
 1102 000e 7B68     		ldr	r3, [r7, #4]
 1103 0010 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1104 0012 012B     		cmp	r3, #1
 1105 0014 01D1     		bne	.L40
 1106              		.loc 1 537 0 is_stmt 0 discriminator 1
 1107 0016 0223     		movs	r3, #2
 1108 0018 D2E0     		b	.L41
 1109              	.L40:
 1110              		.loc 1 537 0 discriminator 2
 1111 001a 7B68     		ldr	r3, [r7, #4]
 1112 001c 0122     		movs	r2, #1
 1113 001e 1A77     		strb	r2, [r3, #28]
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1114              		.loc 1 539 0 is_stmt 1 discriminator 2
 1115 0020 7B68     		ldr	r3, [r7, #4]
 1116 0022 0222     		movs	r2, #2
 1117 0024 5A77     		strb	r2, [r3, #29]
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger */
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 1118              		.loc 1 542 0 discriminator 2
 1119 0026 3B68     		ldr	r3, [r7]
 1120 0028 9B68     		ldr	r3, [r3, #8]
 1121 002a 002B     		cmp	r3, #0
 1122 002c 04D0     		beq	.L42
ARM GAS  /tmp/cc2l9dGw.s 			page 30


 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1); 
 1123              		.loc 1 544 0
 1124 002e 3B68     		ldr	r3, [r7]
 1125 0030 1B68     		ldr	r3, [r3]
 1126 0032 5A00     		lsls	r2, r3, #1
 1127 0034 3B68     		ldr	r3, [r7]
 1128 0036 9A60     		str	r2, [r3, #8]
 1129              	.L42:
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 1130              		.loc 1 547 0
 1131 0038 3B68     		ldr	r3, [r7]
 1132 003a DB68     		ldr	r3, [r3, #12]
 1133 003c 002B     		cmp	r3, #0
 1134 003e 26D0     		beq	.L43
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   { 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->NoErase = 0;
 1135              		.loc 1 549 0
 1136 0040 3B68     		ldr	r3, [r7]
 1137 0042 0022     		movs	r2, #0
 1138 0044 DA60     		str	r2, [r3, #12]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0)
 1139              		.loc 1 550 0
 1140 0046 3B68     		ldr	r3, [r7]
 1141 0048 1B68     		ldr	r3, [r3]
 1142 004a 03F00103 		and	r3, r3, #1
 1143 004e 002B     		cmp	r3, #0
 1144 0050 05D0     		beq	.L44
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP1NOERASE;
 1145              		.loc 1 552 0
 1146 0052 3B68     		ldr	r3, [r7]
 1147 0054 DB68     		ldr	r3, [r3, #12]
 1148 0056 43F40032 		orr	r2, r3, #131072
 1149 005a 3B68     		ldr	r3, [r7]
 1150 005c DA60     		str	r2, [r3, #12]
 1151              	.L44:
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0)
 1152              		.loc 1 554 0
 1153 005e 3B68     		ldr	r3, [r7]
 1154 0060 1B68     		ldr	r3, [r3]
 1155 0062 03F00803 		and	r3, r3, #8
 1156 0066 002B     		cmp	r3, #0
 1157 0068 05D0     		beq	.L45
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP2NOERASE;
 1158              		.loc 1 556 0
 1159 006a 3B68     		ldr	r3, [r7]
 1160 006c DB68     		ldr	r3, [r3, #12]
 1161 006e 43F48012 		orr	r2, r3, #1048576
 1162 0072 3B68     		ldr	r3, [r7]
 1163 0074 DA60     		str	r2, [r3, #12]
 1164              	.L45:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/cc2l9dGw.s 			page 31


 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0)
 1165              		.loc 1 558 0
 1166 0076 3B68     		ldr	r3, [r7]
 1167 0078 1B68     		ldr	r3, [r3]
 1168 007a 03F02003 		and	r3, r3, #32
 1169 007e 002B     		cmp	r3, #0
 1170 0080 05D0     		beq	.L43
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->NoErase |= RTC_TAMPCR_TAMP3NOERASE;
 1171              		.loc 1 560 0
 1172 0082 3B68     		ldr	r3, [r7]
 1173 0084 DB68     		ldr	r3, [r3, #12]
 1174 0086 43F40002 		orr	r2, r3, #8388608
 1175 008a 3B68     		ldr	r3, [r7]
 1176 008c DA60     		str	r2, [r3, #12]
 1177              	.L43:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 1178              		.loc 1 564 0
 1179 008e 3B68     		ldr	r3, [r7]
 1180 0090 1B69     		ldr	r3, [r3, #16]
 1181 0092 002B     		cmp	r3, #0
 1182 0094 26D0     		beq	.L46
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     sTamper->MaskFlag = 0;
 1183              		.loc 1 566 0
 1184 0096 3B68     		ldr	r3, [r7]
 1185 0098 0022     		movs	r2, #0
 1186 009a 1A61     		str	r2, [r3, #16]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_1) != 0)
 1187              		.loc 1 567 0
 1188 009c 3B68     		ldr	r3, [r7]
 1189 009e 1B68     		ldr	r3, [r3]
 1190 00a0 03F00103 		and	r3, r3, #1
 1191 00a4 002B     		cmp	r3, #0
 1192 00a6 05D0     		beq	.L47
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP1MF;
 1193              		.loc 1 569 0
 1194 00a8 3B68     		ldr	r3, [r7]
 1195 00aa 1B69     		ldr	r3, [r3, #16]
 1196 00ac 43F48022 		orr	r2, r3, #262144
 1197 00b0 3B68     		ldr	r3, [r7]
 1198 00b2 1A61     		str	r2, [r3, #16]
 1199              	.L47:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_2) != 0)
 1200              		.loc 1 571 0
 1201 00b4 3B68     		ldr	r3, [r7]
 1202 00b6 1B68     		ldr	r3, [r3]
 1203 00b8 03F00803 		and	r3, r3, #8
 1204 00bc 002B     		cmp	r3, #0
 1205 00be 05D0     		beq	.L48
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP2MF;
ARM GAS  /tmp/cc2l9dGw.s 			page 32


 1206              		.loc 1 573 0
 1207 00c0 3B68     		ldr	r3, [r7]
 1208 00c2 1B69     		ldr	r3, [r3, #16]
 1209 00c4 43F40012 		orr	r2, r3, #2097152
 1210 00c8 3B68     		ldr	r3, [r7]
 1211 00ca 1A61     		str	r2, [r3, #16]
 1212              	.L48:
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((sTamper->Tamper & RTC_TAMPER_3) != 0)
 1213              		.loc 1 575 0
 1214 00cc 3B68     		ldr	r3, [r7]
 1215 00ce 1B68     		ldr	r3, [r3]
 1216 00d0 03F02003 		and	r3, r3, #32
 1217 00d4 002B     		cmp	r3, #0
 1218 00d6 05D0     		beq	.L46
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       sTamper->MaskFlag |= RTC_TAMPCR_TAMP3MF;
 1219              		.loc 1 577 0
 1220 00d8 3B68     		ldr	r3, [r7]
 1221 00da 1B69     		ldr	r3, [r3, #16]
 1222 00dc 43F08072 		orr	r2, r3, #16777216
 1223 00e0 3B68     		ldr	r3, [r7]
 1224 00e2 1A61     		str	r2, [r3, #16]
 1225              	.L46:
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Interrupt | (uint32_t)sTamper->Trigger  
 1226              		.loc 1 581 0
 1227 00e4 3B68     		ldr	r3, [r7]
 1228 00e6 1A68     		ldr	r2, [r3]
 1229 00e8 3B68     		ldr	r3, [r7]
 1230 00ea 5B68     		ldr	r3, [r3, #4]
 1231 00ec 1A43     		orrs	r2, r2, r3
 1232 00ee 3B68     		ldr	r3, [r7]
 1233 00f0 9B68     		ldr	r3, [r3, #8]
 1234 00f2 1A43     		orrs	r2, r2, r3
 1235 00f4 3B68     		ldr	r3, [r7]
 1236 00f6 DB68     		ldr	r3, [r3, #12]
 1237 00f8 1A43     		orrs	r2, r2, r3
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1238              		.loc 1 582 0
 1239 00fa 3B68     		ldr	r3, [r7]
 1240 00fc 1B69     		ldr	r3, [r3, #16]
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1241              		.loc 1 581 0
 1242 00fe 1A43     		orrs	r2, r2, r3
 1243              		.loc 1 582 0
 1244 0100 3B68     		ldr	r3, [r7]
 1245 0102 5B69     		ldr	r3, [r3, #20]
 1246 0104 1A43     		orrs	r2, r2, r3
 1247 0106 3B68     		ldr	r3, [r7]
 1248 0108 9B69     		ldr	r3, [r3, #24]
 1249 010a 1A43     		orrs	r2, r2, r3
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->PrechargeDuration | (uint32_t)sTamper->TamperPullUp | sTamper->TimeS
 1250              		.loc 1 583 0
 1251 010c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cc2l9dGw.s 			page 33


 1252 010e DB69     		ldr	r3, [r3, #28]
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1253              		.loc 1 582 0
 1254 0110 1A43     		orrs	r2, r2, r3
 1255              		.loc 1 583 0
 1256 0112 3B68     		ldr	r3, [r7]
 1257 0114 1B6A     		ldr	r3, [r3, #32]
 1258 0116 1A43     		orrs	r2, r2, r3
 1259 0118 3B68     		ldr	r3, [r7]
 1260 011a 5B6A     		ldr	r3, [r3, #36]
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             (uint32_t)sTamper->MaskFlag | (uint32_t)sTamper->Filter | (uint32_t)sTamper->SamplingFr
 1261              		.loc 1 581 0
 1262 011c 1343     		orrs	r3, r3, r2
 1263 011e FB60     		str	r3, [r7, #12]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1
 1264              		.loc 1 585 0
 1265 0120 7B68     		ldr	r3, [r7, #4]
 1266 0122 1B68     		ldr	r3, [r3]
 1267 0124 196C     		ldr	r1, [r3, #64]
 1268 0126 3B68     		ldr	r3, [r7]
 1269 0128 1A68     		ldr	r2, [r3]
 1270 012a 3B68     		ldr	r3, [r7]
 1271 012c 1B68     		ldr	r3, [r3]
 1272 012e 5B00     		lsls	r3, r3, #1
 1273 0130 1A43     		orrs	r2, r2, r3
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPPUDIS | (uint32_t)RTC_TAMPCR_TAMPIE
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2IE | (uint32_t)RTC_TAMPCR_TAMP3IE 
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2NOERASE | (uint32_t)RTC_TAMPCR_TAM
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMP2MF | (uint32_t)RTC_TAMPCR_TAMP3MF)
 1274              		.loc 1 590 0
 1275 0132 264B     		ldr	r3, .L52
 1276 0134 1343     		orrs	r3, r3, r2
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAMPCR_TAMPFREQ | (uint32_t)RTC_TAMPCR_TAMPFLT
 1277              		.loc 1 585 0
 1278 0136 DA43     		mvns	r2, r3
 1279 0138 7B68     		ldr	r3, [r7, #4]
 1280 013a 1B68     		ldr	r3, [r3]
 1281 013c 0A40     		ands	r2, r2, r1
 1282 013e 1A64     		str	r2, [r3, #64]
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR |= tmpreg;
 1283              		.loc 1 592 0
 1284 0140 7B68     		ldr	r3, [r7, #4]
 1285 0142 1B68     		ldr	r3, [r3]
 1286 0144 196C     		ldr	r1, [r3, #64]
 1287 0146 7B68     		ldr	r3, [r7, #4]
 1288 0148 1B68     		ldr	r3, [r3]
 1289 014a FA68     		ldr	r2, [r7, #12]
 1290 014c 0A43     		orrs	r2, r2, r1
 1291 014e 1A64     		str	r2, [r3, #64]
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(sTamper->Tamper == RTC_TAMPER_1)
 1292              		.loc 1 594 0
 1293 0150 3B68     		ldr	r3, [r7]
 1294 0152 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 34


 1295 0154 012B     		cmp	r3, #1
 1296 0156 09D1     		bne	.L49
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 1 flag */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 1297              		.loc 1 597 0
 1298 0158 7B68     		ldr	r3, [r7, #4]
 1299 015a 1B68     		ldr	r3, [r3]
 1300 015c DB68     		ldr	r3, [r3, #12]
 1301 015e DAB2     		uxtb	r2, r3
 1302 0160 7B68     		ldr	r3, [r7, #4]
 1303 0162 1B68     		ldr	r3, [r3]
 1304 0164 62F40252 		orn	r2, r2, #8320
 1305 0168 DA60     		str	r2, [r3, #12]
 1306 016a 16E0     		b	.L50
 1307              	.L49:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else if(sTamper->Tamper == RTC_TAMPER_2)
 1308              		.loc 1 599 0
 1309 016c 3B68     		ldr	r3, [r7]
 1310 016e 1B68     		ldr	r3, [r3]
 1311 0170 082B     		cmp	r3, #8
 1312 0172 09D1     		bne	.L51
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 2 flag */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);    
 1313              		.loc 1 602 0
 1314 0174 7B68     		ldr	r3, [r7, #4]
 1315 0176 1B68     		ldr	r3, [r3]
 1316 0178 DB68     		ldr	r3, [r3, #12]
 1317 017a DAB2     		uxtb	r2, r3
 1318 017c 7B68     		ldr	r3, [r7, #4]
 1319 017e 1B68     		ldr	r3, [r3]
 1320 0180 62F48142 		orn	r2, r2, #16512
 1321 0184 DA60     		str	r2, [r3, #12]
 1322 0186 08E0     		b	.L50
 1323              	.L51:
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear RTC Tamper 3 flag */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);  
 1324              		.loc 1 607 0
 1325 0188 7B68     		ldr	r3, [r7, #4]
 1326 018a 1B68     		ldr	r3, [r3]
 1327 018c DB68     		ldr	r3, [r3, #12]
 1328 018e D9B2     		uxtb	r1, r3
 1329 0190 7B68     		ldr	r3, [r7, #4]
 1330 0192 1A68     		ldr	r2, [r3]
 1331 0194 0E4B     		ldr	r3, .L52+4
 1332 0196 0B43     		orrs	r3, r3, r1
 1333 0198 D360     		str	r3, [r2, #12]
 1334              	.L50:
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
ARM GAS  /tmp/cc2l9dGw.s 			page 35


 1335              		.loc 1 611 0
 1336 019a 0E4B     		ldr	r3, .L52+8
 1337 019c 1B68     		ldr	r3, [r3]
 1338 019e 0D4A     		ldr	r2, .L52+8
 1339 01a0 43F40013 		orr	r3, r3, #2097152
 1340 01a4 1360     		str	r3, [r2]
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT;
 1341              		.loc 1 613 0
 1342 01a6 0B4B     		ldr	r3, .L52+8
 1343 01a8 9B68     		ldr	r3, [r3, #8]
 1344 01aa 0A4A     		ldr	r2, .L52+8
 1345 01ac 43F40013 		orr	r3, r3, #2097152
 1346 01b0 9360     		str	r3, [r2, #8]
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 1347              		.loc 1 615 0
 1348 01b2 7B68     		ldr	r3, [r7, #4]
 1349 01b4 0122     		movs	r2, #1
 1350 01b6 5A77     		strb	r2, [r3, #29]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1351              		.loc 1 618 0
 1352 01b8 7B68     		ldr	r3, [r7, #4]
 1353 01ba 0022     		movs	r2, #0
 1354 01bc 1A77     		strb	r2, [r3, #28]
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 1355              		.loc 1 620 0
 1356 01be 0023     		movs	r3, #0
 1357              	.L41:
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1358              		.loc 1 621 0
 1359 01c0 1846     		mov	r0, r3
 1360 01c2 1437     		adds	r7, r7, #20
 1361              	.LCFI44:
 1362              		.cfi_def_cfa_offset 4
 1363 01c4 BD46     		mov	sp, r7
 1364              	.LCFI45:
 1365              		.cfi_def_cfa_register 13
 1366              		@ sp needed
 1367 01c6 5DF8047B 		ldr	r7, [sp], #4
 1368              	.LCFI46:
 1369              		.cfi_restore 7
 1370              		.cfi_def_cfa_offset 0
 1371 01ca 7047     		bx	lr
 1372              	.L53:
 1373              		.align	2
 1374              	.L52:
 1375 01cc 84FFFF01 		.word	33554308
 1376 01d0 7F7FFFFF 		.word	-32897
 1377 01d4 003C0140 		.word	1073822720
 1378              		.cfi_endproc
 1379              	.LFE145:
 1381              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 1382              		.align	1
ARM GAS  /tmp/cc2l9dGw.s 			page 36


 1383              		.global	HAL_RTCEx_DeactivateTamper
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv4-sp-d16
 1389              	HAL_RTCEx_DeactivateTamper:
 1390              	.LFB146:
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates Tamper.
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be RTC_Tamper_1 and/or RTC_TAMPER_2.
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1391              		.loc 1 632 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 8
 1394              		@ frame_needed = 1, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396 0000 80B4     		push	{r7}
 1397              	.LCFI47:
 1398              		.cfi_def_cfa_offset 4
 1399              		.cfi_offset 7, -4
 1400 0002 83B0     		sub	sp, sp, #12
 1401              	.LCFI48:
 1402              		.cfi_def_cfa_offset 16
 1403 0004 00AF     		add	r7, sp, #0
 1404              	.LCFI49:
 1405              		.cfi_def_cfa_register 7
 1406 0006 7860     		str	r0, [r7, #4]
 1407 0008 3960     		str	r1, [r7]
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper)); 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1408              		.loc 1 636 0
 1409 000a 7B68     		ldr	r3, [r7, #4]
 1410 000c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1411 000e 012B     		cmp	r3, #1
 1412 0010 01D1     		bne	.L55
 1413              		.loc 1 636 0 is_stmt 0 discriminator 1
 1414 0012 0223     		movs	r3, #2
 1415 0014 3CE0     		b	.L56
 1416              	.L55:
 1417              		.loc 1 636 0 discriminator 2
 1418 0016 7B68     		ldr	r3, [r7, #4]
 1419 0018 0122     		movs	r2, #1
 1420 001a 1A77     		strb	r2, [r3, #28]
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1421              		.loc 1 638 0 is_stmt 1 discriminator 2
 1422 001c 7B68     		ldr	r3, [r7, #4]
 1423 001e 0222     		movs	r2, #2
ARM GAS  /tmp/cc2l9dGw.s 			page 37


 1424 0020 5A77     		strb	r2, [r3, #29]
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /* Disable the selected Tamper pin */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= (uint32_t)~Tamper;
 1425              		.loc 1 641 0 discriminator 2
 1426 0022 7B68     		ldr	r3, [r7, #4]
 1427 0024 1B68     		ldr	r3, [r3]
 1428 0026 196C     		ldr	r1, [r3, #64]
 1429 0028 3B68     		ldr	r3, [r7]
 1430 002a DA43     		mvns	r2, r3
 1431 002c 7B68     		ldr	r3, [r7, #4]
 1432 002e 1B68     		ldr	r3, [r3]
 1433 0030 0A40     		ands	r2, r2, r1
 1434 0032 1A64     		str	r2, [r3, #64]
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0)
 1435              		.loc 1 643 0 discriminator 2
 1436 0034 3B68     		ldr	r3, [r7]
 1437 0036 03F00103 		and	r3, r3, #1
 1438 003a 002B     		cmp	r3, #0
 1439 003c 07D0     		beq	.L57
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper1 interrupt */
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1);
 1440              		.loc 1 646 0
 1441 003e 7B68     		ldr	r3, [r7, #4]
 1442 0040 1B68     		ldr	r3, [r3]
 1443 0042 196C     		ldr	r1, [r3, #64]
 1444 0044 7B68     		ldr	r3, [r7, #4]
 1445 0046 1A68     		ldr	r2, [r3]
 1446 0048 144B     		ldr	r3, .L60
 1447 004a 0B40     		ands	r3, r3, r1
 1448 004c 1364     		str	r3, [r2, #64]
 1449              	.L57:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0)
 1450              		.loc 1 648 0
 1451 004e 3B68     		ldr	r3, [r7]
 1452 0050 03F00803 		and	r3, r3, #8
 1453 0054 002B     		cmp	r3, #0
 1454 0056 07D0     		beq	.L58
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2);
 1455              		.loc 1 651 0
 1456 0058 7B68     		ldr	r3, [r7, #4]
 1457 005a 1B68     		ldr	r3, [r3]
 1458 005c 196C     		ldr	r1, [r3, #64]
 1459 005e 7B68     		ldr	r3, [r7, #4]
 1460 0060 1A68     		ldr	r2, [r3]
 1461 0062 0F4B     		ldr	r3, .L60+4
 1462 0064 0B40     		ands	r3, r3, r1
 1463 0066 1364     		str	r3, [r2, #64]
 1464              	.L58:
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0)
 1465              		.loc 1 653 0
ARM GAS  /tmp/cc2l9dGw.s 			page 38


 1466 0068 3B68     		ldr	r3, [r7]
 1467 006a 03F02003 		and	r3, r3, #32
 1468 006e 002B     		cmp	r3, #0
 1469 0070 07D0     		beq	.L59
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= (uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3);
 1470              		.loc 1 656 0
 1471 0072 7B68     		ldr	r3, [r7, #4]
 1472 0074 1B68     		ldr	r3, [r3]
 1473 0076 196C     		ldr	r1, [r3, #64]
 1474 0078 7B68     		ldr	r3, [r7, #4]
 1475 007a 1A68     		ldr	r2, [r3]
 1476 007c 094B     		ldr	r3, .L60+8
 1477 007e 0B40     		ands	r3, r3, r1
 1478 0080 1364     		str	r3, [r2, #64]
 1479              	.L59:
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 1480              		.loc 1 659 0
 1481 0082 7B68     		ldr	r3, [r7, #4]
 1482 0084 0122     		movs	r2, #1
 1483 0086 5A77     		strb	r2, [r3, #29]
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */  
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1484              		.loc 1 662 0
 1485 0088 7B68     		ldr	r3, [r7, #4]
 1486 008a 0022     		movs	r2, #0
 1487 008c 1A77     		strb	r2, [r3, #28]
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 1488              		.loc 1 664 0
 1489 008e 0023     		movs	r3, #0
 1490              	.L56:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1491              		.loc 1 665 0
 1492 0090 1846     		mov	r0, r3
 1493 0092 0C37     		adds	r7, r7, #12
 1494              	.LCFI50:
 1495              		.cfi_def_cfa_offset 4
 1496 0094 BD46     		mov	sp, r7
 1497              	.LCFI51:
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 0096 5DF8047B 		ldr	r7, [sp], #4
 1501              	.LCFI52:
 1502              		.cfi_restore 7
 1503              		.cfi_def_cfa_offset 0
 1504 009a 7047     		bx	lr
 1505              	.L61:
 1506              		.align	2
 1507              	.L60:
 1508 009c FBFFFEFF 		.word	-65541
 1509 00a0 FBFFF7FF 		.word	-524293
 1510 00a4 FBFFBFFF 		.word	-4194309
ARM GAS  /tmp/cc2l9dGw.s 			page 39


 1511              		.cfi_endproc
 1512              	.LFE146:
 1514              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 1515              		.align	1
 1516              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv4-sp-d16
 1522              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1523              	.LFB147:
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles TimeStamp interrupt request.
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 1524              		.loc 1 674 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 8
 1527              		@ frame_needed = 1, uses_anonymous_args = 0
 1528 0000 80B5     		push	{r7, lr}
 1529              	.LCFI53:
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 7, -8
 1532              		.cfi_offset 14, -4
 1533 0002 82B0     		sub	sp, sp, #8
 1534              	.LCFI54:
 1535              		.cfi_def_cfa_offset 16
 1536 0004 00AF     		add	r7, sp, #0
 1537              	.LCFI55:
 1538              		.cfi_def_cfa_register 7
 1539 0006 7860     		str	r0, [r7, #4]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT(hrtc, RTC_IT_TS))
 1540              		.loc 1 675 0
 1541 0008 7B68     		ldr	r3, [r7, #4]
 1542 000a 1B68     		ldr	r3, [r3]
 1543 000c DB68     		ldr	r3, [r3, #12]
 1544 000e 03F40063 		and	r3, r3, #2048
 1545 0012 002B     		cmp	r3, #0
 1546 0014 12D0     		beq	.L63
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the status of the Interrupt */
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((uint32_t)(hrtc->Instance->CR & RTC_IT_TS) != (uint32_t)RESET)
 1547              		.loc 1 678 0
 1548 0016 7B68     		ldr	r3, [r7, #4]
 1549 0018 1B68     		ldr	r3, [r3]
 1550 001a 9B68     		ldr	r3, [r3, #8]
 1551 001c 03F40043 		and	r3, r3, #32768
 1552 0020 002B     		cmp	r3, #0
 1553 0022 0BD0     		beq	.L63
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        /* TIMESTAMP callback */ 
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         HAL_RTCEx_TimeStampEventCallback(hrtc);
ARM GAS  /tmp/cc2l9dGw.s 			page 40


 1554              		.loc 1 681 0
 1555 0024 7868     		ldr	r0, [r7, #4]
 1556 0026 FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc,RTC_FLAG_TSF);
 1557              		.loc 1 684 0
 1558 002a 7B68     		ldr	r3, [r7, #4]
 1559 002c 1B68     		ldr	r3, [r3]
 1560 002e DB68     		ldr	r3, [r3, #12]
 1561 0030 DAB2     		uxtb	r2, r3
 1562 0032 7B68     		ldr	r3, [r7, #4]
 1563 0034 1B68     		ldr	r3, [r3]
 1564 0036 62F40862 		orn	r2, r2, #2176
 1565 003a DA60     		str	r2, [r3, #12]
 1566              	.L63:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F)== SET)
 1567              		.loc 1 689 0
 1568 003c 7B68     		ldr	r3, [r7, #4]
 1569 003e 1B68     		ldr	r3, [r3]
 1570 0040 DB68     		ldr	r3, [r3, #12]
 1571 0042 03F40053 		and	r3, r3, #8192
 1572 0046 002B     		cmp	r3, #0
 1573 0048 19D0     		beq	.L64
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the TAMPER Interrupt enable bit and pending bit */
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMPIE)) != (uint32_t)RESET) || \
 1574              		.loc 1 692 0
 1575 004a 7B68     		ldr	r3, [r7, #4]
 1576 004c 1B68     		ldr	r3, [r3]
 1577 004e 1B6C     		ldr	r3, [r3, #64]
 1578 0050 03F00403 		and	r3, r3, #4
 1579 0054 002B     		cmp	r3, #0
 1580 0056 06D1     		bne	.L65
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP1IE)) != (uint32_t)RESET))
 1581              		.loc 1 693 0 discriminator 1
 1582 0058 7B68     		ldr	r3, [r7, #4]
 1583 005a 1B68     		ldr	r3, [r3]
 1584 005c 1B6C     		ldr	r3, [r3, #64]
 1585 005e 03F48033 		and	r3, r3, #65536
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP1IE)) != (uint32_t)RESET))
 1586              		.loc 1 692 0 discriminator 1
 1587 0062 002B     		cmp	r3, #0
 1588 0064 0BD0     		beq	.L64
 1589              	.L65:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 1590              		.loc 1 696 0
 1591 0066 7868     		ldr	r0, [r7, #4]
 1592 0068 FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
ARM GAS  /tmp/cc2l9dGw.s 			page 41


 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1593              		.loc 1 699 0
 1594 006c 7B68     		ldr	r3, [r7, #4]
 1595 006e 1B68     		ldr	r3, [r3]
 1596 0070 DB68     		ldr	r3, [r3, #12]
 1597 0072 DAB2     		uxtb	r2, r3
 1598 0074 7B68     		ldr	r3, [r7, #4]
 1599 0076 1B68     		ldr	r3, [r3]
 1600 0078 62F40252 		orn	r2, r2, #8320
 1601 007c DA60     		str	r2, [r3, #12]
 1602              	.L64:
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F)== SET)
 1603              		.loc 1 704 0
 1604 007e 7B68     		ldr	r3, [r7, #4]
 1605 0080 1B68     		ldr	r3, [r3]
 1606 0082 DB68     		ldr	r3, [r3, #12]
 1607 0084 03F48043 		and	r3, r3, #16384
 1608 0088 002B     		cmp	r3, #0
 1609 008a 19D0     		beq	.L66
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the TAMPER Interrupt enable bit and pending bit */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMPIE)) != (uint32_t)RESET) || \
 1610              		.loc 1 707 0
 1611 008c 7B68     		ldr	r3, [r7, #4]
 1612 008e 1B68     		ldr	r3, [r3]
 1613 0090 1B6C     		ldr	r3, [r3, #64]
 1614 0092 03F00403 		and	r3, r3, #4
 1615 0096 002B     		cmp	r3, #0
 1616 0098 06D1     		bne	.L67
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP2IE)) != (uint32_t)RESET))
 1617              		.loc 1 708 0 discriminator 1
 1618 009a 7B68     		ldr	r3, [r7, #4]
 1619 009c 1B68     		ldr	r3, [r3]
 1620 009e 1B6C     		ldr	r3, [r3, #64]
 1621 00a0 03F40023 		and	r3, r3, #524288
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP2IE)) != (uint32_t)RESET))
 1622              		.loc 1 707 0 discriminator 1
 1623 00a4 002B     		cmp	r3, #0
 1624 00a6 0BD0     		beq	.L66
 1625              	.L67:
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 1626              		.loc 1 711 0
 1627 00a8 7868     		ldr	r0, [r7, #4]
 1628 00aa FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1629              		.loc 1 714 0
 1630 00ae 7B68     		ldr	r3, [r7, #4]
 1631 00b0 1B68     		ldr	r3, [r3]
 1632 00b2 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 42


 1633 00b4 DAB2     		uxtb	r2, r3
 1634 00b6 7B68     		ldr	r3, [r7, #4]
 1635 00b8 1B68     		ldr	r3, [r3]
 1636 00ba 62F48142 		orn	r2, r2, #16512
 1637 00be DA60     		str	r2, [r3, #12]
 1638              	.L66:
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F)== SET)
 1639              		.loc 1 719 0
 1640 00c0 7B68     		ldr	r3, [r7, #4]
 1641 00c2 1B68     		ldr	r3, [r3]
 1642 00c4 DB68     		ldr	r3, [r3, #12]
 1643 00c6 03F40043 		and	r3, r3, #32768
 1644 00ca 002B     		cmp	r3, #0
 1645 00cc 19D0     		beq	.L68
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the TAMPER Interrupt enable bit and pending bit */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMPIE)) != (uint32_t)RESET) || \
 1646              		.loc 1 722 0
 1647 00ce 7B68     		ldr	r3, [r7, #4]
 1648 00d0 1B68     		ldr	r3, [r3]
 1649 00d2 1B6C     		ldr	r3, [r3, #64]
 1650 00d4 03F00403 		and	r3, r3, #4
 1651 00d8 002B     		cmp	r3, #0
 1652 00da 06D1     		bne	.L69
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP3IE)) != (uint32_t)RESET))
 1653              		.loc 1 723 0 discriminator 1
 1654 00dc 7B68     		ldr	r3, [r7, #4]
 1655 00de 1B68     		ldr	r3, [r3]
 1656 00e0 1B6C     		ldr	r3, [r3, #64]
 1657 00e2 03F48003 		and	r3, r3, #4194304
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****        (((hrtc->Instance->TAMPCR & RTC_TAMPCR_TAMP3IE)) != (uint32_t)RESET))
 1658              		.loc 1 722 0 discriminator 1
 1659 00e6 002B     		cmp	r3, #0
 1660 00e8 0BD0     		beq	.L68
 1661              	.L69:
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Tamper callback */
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 1662              		.loc 1 726 0
 1663 00ea 7868     		ldr	r0, [r7, #4]
 1664 00ec FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the Tamper interrupt pending bit */
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 1665              		.loc 1 729 0
 1666 00f0 7B68     		ldr	r3, [r7, #4]
 1667 00f2 1B68     		ldr	r3, [r3]
 1668 00f4 DB68     		ldr	r3, [r3, #12]
 1669 00f6 D9B2     		uxtb	r1, r3
 1670 00f8 7B68     		ldr	r3, [r7, #4]
 1671 00fa 1A68     		ldr	r2, [r3]
 1672 00fc 064B     		ldr	r3, .L70
 1673 00fe 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/cc2l9dGw.s 			page 43


 1674 0100 D360     		str	r3, [r2, #12]
 1675              	.L68:
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 1676              		.loc 1 734 0
 1677 0102 064B     		ldr	r3, .L70+4
 1678 0104 4FF40012 		mov	r2, #2097152
 1679 0108 5A61     		str	r2, [r3, #20]
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1680              		.loc 1 737 0
 1681 010a 7B68     		ldr	r3, [r7, #4]
 1682 010c 0122     		movs	r2, #1
 1683 010e 5A77     		strb	r2, [r3, #29]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1684              		.loc 1 738 0
 1685 0110 00BF     		nop
 1686 0112 0837     		adds	r7, r7, #8
 1687              	.LCFI56:
 1688              		.cfi_def_cfa_offset 8
 1689 0114 BD46     		mov	sp, r7
 1690              	.LCFI57:
 1691              		.cfi_def_cfa_register 13
 1692              		@ sp needed
 1693 0116 80BD     		pop	{r7, pc}
 1694              	.L71:
 1695              		.align	2
 1696              	.L70:
 1697 0118 7F7FFFFF 		.word	-32897
 1698 011c 003C0140 		.word	1073822720
 1699              		.cfi_endproc
 1700              	.LFE147:
 1702              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1703              		.align	1
 1704              		.weak	HAL_RTCEx_TimeStampEventCallback
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu fpv4-sp-d16
 1710              	HAL_RTCEx_TimeStampEventCallback:
 1711              	.LFB148:
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback. 
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1712              		.loc 1 747 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc2l9dGw.s 			page 44


 1715              		@ frame_needed = 1, uses_anonymous_args = 0
 1716              		@ link register save eliminated.
 1717 0000 80B4     		push	{r7}
 1718              	.LCFI58:
 1719              		.cfi_def_cfa_offset 4
 1720              		.cfi_offset 7, -4
 1721 0002 83B0     		sub	sp, sp, #12
 1722              	.LCFI59:
 1723              		.cfi_def_cfa_offset 16
 1724 0004 00AF     		add	r7, sp, #0
 1725              	.LCFI60:
 1726              		.cfi_def_cfa_register 7
 1727 0006 7860     		str	r0, [r7, #4]
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_TimeStampEventCallback could be implemented in the user file
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1728              		.loc 1 754 0
 1729 0008 00BF     		nop
 1730 000a 0C37     		adds	r7, r7, #12
 1731              	.LCFI61:
 1732              		.cfi_def_cfa_offset 4
 1733 000c BD46     		mov	sp, r7
 1734              	.LCFI62:
 1735              		.cfi_def_cfa_register 13
 1736              		@ sp needed
 1737 000e 5DF8047B 		ldr	r7, [sp], #4
 1738              	.LCFI63:
 1739              		.cfi_restore 7
 1740              		.cfi_def_cfa_offset 0
 1741 0012 7047     		bx	lr
 1742              		.cfi_endproc
 1743              	.LFE148:
 1745              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1746              		.align	1
 1747              		.weak	HAL_RTCEx_Tamper1EventCallback
 1748              		.syntax unified
 1749              		.thumb
 1750              		.thumb_func
 1751              		.fpu fpv4-sp-d16
 1753              	HAL_RTCEx_Tamper1EventCallback:
 1754              	.LFB149:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback. 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1755              		.loc 1 763 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc2l9dGw.s 			page 45


 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
 1760 0000 80B4     		push	{r7}
 1761              	.LCFI64:
 1762              		.cfi_def_cfa_offset 4
 1763              		.cfi_offset 7, -4
 1764 0002 83B0     		sub	sp, sp, #12
 1765              	.LCFI65:
 1766              		.cfi_def_cfa_offset 16
 1767 0004 00AF     		add	r7, sp, #0
 1768              	.LCFI66:
 1769              		.cfi_def_cfa_register 7
 1770 0006 7860     		str	r0, [r7, #4]
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_Tamper1EventCallback could be implemented in the user file
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1771              		.loc 1 770 0
 1772 0008 00BF     		nop
 1773 000a 0C37     		adds	r7, r7, #12
 1774              	.LCFI67:
 1775              		.cfi_def_cfa_offset 4
 1776 000c BD46     		mov	sp, r7
 1777              	.LCFI68:
 1778              		.cfi_def_cfa_register 13
 1779              		@ sp needed
 1780 000e 5DF8047B 		ldr	r7, [sp], #4
 1781              	.LCFI69:
 1782              		.cfi_restore 7
 1783              		.cfi_def_cfa_offset 0
 1784 0012 7047     		bx	lr
 1785              		.cfi_endproc
 1786              	.LFE149:
 1788              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1789              		.align	1
 1790              		.weak	HAL_RTCEx_Tamper2EventCallback
 1791              		.syntax unified
 1792              		.thumb
 1793              		.thumb_func
 1794              		.fpu fpv4-sp-d16
 1796              	HAL_RTCEx_Tamper2EventCallback:
 1797              	.LFB150:
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback. 
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1798              		.loc 1 779 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc2l9dGw.s 			page 46


 1801              		@ frame_needed = 1, uses_anonymous_args = 0
 1802              		@ link register save eliminated.
 1803 0000 80B4     		push	{r7}
 1804              	.LCFI70:
 1805              		.cfi_def_cfa_offset 4
 1806              		.cfi_offset 7, -4
 1807 0002 83B0     		sub	sp, sp, #12
 1808              	.LCFI71:
 1809              		.cfi_def_cfa_offset 16
 1810 0004 00AF     		add	r7, sp, #0
 1811              	.LCFI72:
 1812              		.cfi_def_cfa_register 7
 1813 0006 7860     		str	r0, [r7, #4]
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_Tamper2EventCallback could be implemented in the user file
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1814              		.loc 1 786 0
 1815 0008 00BF     		nop
 1816 000a 0C37     		adds	r7, r7, #12
 1817              	.LCFI73:
 1818              		.cfi_def_cfa_offset 4
 1819 000c BD46     		mov	sp, r7
 1820              	.LCFI74:
 1821              		.cfi_def_cfa_register 13
 1822              		@ sp needed
 1823 000e 5DF8047B 		ldr	r7, [sp], #4
 1824              	.LCFI75:
 1825              		.cfi_restore 7
 1826              		.cfi_def_cfa_offset 0
 1827 0012 7047     		bx	lr
 1828              		.cfi_endproc
 1829              	.LFE150:
 1831              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1832              		.align	1
 1833              		.weak	HAL_RTCEx_Tamper3EventCallback
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1837              		.fpu fpv4-sp-d16
 1839              	HAL_RTCEx_Tamper3EventCallback:
 1840              	.LFB151:
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback. 
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 1841              		.loc 1 794 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc2l9dGw.s 			page 47


 1845              		@ link register save eliminated.
 1846 0000 80B4     		push	{r7}
 1847              	.LCFI76:
 1848              		.cfi_def_cfa_offset 4
 1849              		.cfi_offset 7, -4
 1850 0002 83B0     		sub	sp, sp, #12
 1851              	.LCFI77:
 1852              		.cfi_def_cfa_offset 16
 1853 0004 00AF     		add	r7, sp, #0
 1854              	.LCFI78:
 1855              		.cfi_def_cfa_register 7
 1856 0006 7860     		str	r0, [r7, #4]
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1857              		.loc 1 801 0
 1858 0008 00BF     		nop
 1859 000a 0C37     		adds	r7, r7, #12
 1860              	.LCFI79:
 1861              		.cfi_def_cfa_offset 4
 1862 000c BD46     		mov	sp, r7
 1863              	.LCFI80:
 1864              		.cfi_def_cfa_register 13
 1865              		@ sp needed
 1866 000e 5DF8047B 		ldr	r7, [sp], #4
 1867              	.LCFI81:
 1868              		.cfi_restore 7
 1869              		.cfi_def_cfa_offset 0
 1870 0012 7047     		bx	lr
 1871              		.cfi_endproc
 1872              	.LFE151:
 1874              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1875              		.align	1
 1876              		.global	HAL_RTCEx_PollForTimeStampEvent
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv4-sp-d16
 1882              	HAL_RTCEx_PollForTimeStampEvent:
 1883              	.LFB152:
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles TimeStamp polling request.
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** { 
 1884              		.loc 1 811 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc2l9dGw.s 			page 48


 1887              		@ frame_needed = 1, uses_anonymous_args = 0
 1888 0000 80B5     		push	{r7, lr}
 1889              	.LCFI82:
 1890              		.cfi_def_cfa_offset 8
 1891              		.cfi_offset 7, -8
 1892              		.cfi_offset 14, -4
 1893 0002 84B0     		sub	sp, sp, #16
 1894              	.LCFI83:
 1895              		.cfi_def_cfa_offset 24
 1896 0004 00AF     		add	r7, sp, #0
 1897              	.LCFI84:
 1898              		.cfi_def_cfa_register 7
 1899 0006 7860     		str	r0, [r7, #4]
 1900 0008 3960     		str	r1, [r7]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 1901              		.loc 1 812 0
 1902 000a 0023     		movs	r3, #0
 1903 000c FB60     		str	r3, [r7, #12]
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1904              		.loc 1 815 0
 1905 000e FFF7FEFF 		bl	HAL_GetTick
 1906 0012 F860     		str	r0, [r7, #12]
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == RESET)
 1907              		.loc 1 817 0
 1908 0014 13E0     		b	.L77
 1909              	.L80:
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {	        
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1910              		.loc 1 819 0
 1911 0016 3B68     		ldr	r3, [r7]
 1912 0018 B3F1FF3F 		cmp	r3, #-1
 1913 001c 0FD0     		beq	.L77
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1914              		.loc 1 821 0
 1915 001e 3B68     		ldr	r3, [r7]
 1916 0020 002B     		cmp	r3, #0
 1917 0022 07D0     		beq	.L78
 1918              		.loc 1 821 0 is_stmt 0 discriminator 1
 1919 0024 FFF7FEFF 		bl	HAL_GetTick
 1920 0028 0246     		mov	r2, r0
 1921 002a FB68     		ldr	r3, [r7, #12]
 1922 002c D31A     		subs	r3, r2, r3
 1923 002e 3A68     		ldr	r2, [r7]
 1924 0030 9A42     		cmp	r2, r3
 1925 0032 04D2     		bcs	.L77
 1926              	.L78:
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1927              		.loc 1 823 0 is_stmt 1
 1928 0034 7B68     		ldr	r3, [r7, #4]
 1929 0036 0322     		movs	r2, #3
 1930 0038 5A77     		strb	r2, [r3, #29]
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/cc2l9dGw.s 			page 49


 1931              		.loc 1 824 0
 1932 003a 0323     		movs	r3, #3
 1933 003c 1FE0     		b	.L79
 1934              	.L77:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {	        
 1935              		.loc 1 817 0
 1936 003e 7B68     		ldr	r3, [r7, #4]
 1937 0040 1B68     		ldr	r3, [r3]
 1938 0042 DB68     		ldr	r3, [r3, #12]
 1939 0044 03F40063 		and	r3, r3, #2048
 1940 0048 002B     		cmp	r3, #0
 1941 004a E4D0     		beq	.L80
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 	
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != RESET)
 1942              		.loc 1 829 0
 1943 004c 7B68     		ldr	r3, [r7, #4]
 1944 004e 1B68     		ldr	r3, [r3]
 1945 0050 DB68     		ldr	r3, [r3, #12]
 1946 0052 03F48053 		and	r3, r3, #4096
 1947 0056 002B     		cmp	r3, #0
 1948 0058 0DD0     		beq	.L81
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Clear the TIMESTAMP OverRun Flag */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 1949              		.loc 1 832 0
 1950 005a 7B68     		ldr	r3, [r7, #4]
 1951 005c 1B68     		ldr	r3, [r3]
 1952 005e DB68     		ldr	r3, [r3, #12]
 1953 0060 DAB2     		uxtb	r2, r3
 1954 0062 7B68     		ldr	r3, [r7, #4]
 1955 0064 1B68     		ldr	r3, [r3]
 1956 0066 62F48452 		orn	r2, r2, #4224
 1957 006a DA60     		str	r2, [r3, #12]
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Change TIMESTAMP state */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR; 
 1958              		.loc 1 835 0
 1959 006c 7B68     		ldr	r3, [r7, #4]
 1960 006e 0422     		movs	r2, #4
 1961 0070 5A77     		strb	r2, [r3, #29]
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR; 
 1962              		.loc 1 837 0
 1963 0072 0123     		movs	r3, #1
 1964 0074 03E0     		b	.L79
 1965              	.L81:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    }
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 	
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 1966              		.loc 1 841 0
 1967 0076 7B68     		ldr	r3, [r7, #4]
 1968 0078 0122     		movs	r2, #1
 1969 007a 5A77     		strb	r2, [r3, #29]
ARM GAS  /tmp/cc2l9dGw.s 			page 50


 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 1970              		.loc 1 843 0
 1971 007c 0023     		movs	r3, #0
 1972              	.L79:
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 1973              		.loc 1 844 0
 1974 007e 1846     		mov	r0, r3
 1975 0080 1037     		adds	r7, r7, #16
 1976              	.LCFI85:
 1977              		.cfi_def_cfa_offset 8
 1978 0082 BD46     		mov	sp, r7
 1979              	.LCFI86:
 1980              		.cfi_def_cfa_register 13
 1981              		@ sp needed
 1982 0084 80BD     		pop	{r7, pc}
 1983              		.cfi_endproc
 1984              	.LFE152:
 1986              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 1987              		.align	1
 1988              		.global	HAL_RTCEx_PollForTamper1Event
 1989              		.syntax unified
 1990              		.thumb
 1991              		.thumb_func
 1992              		.fpu fpv4-sp-d16
 1994              	HAL_RTCEx_PollForTamper1Event:
 1995              	.LFB153:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper1 Polling.
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 1996              		.loc 1 854 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 16
 1999              		@ frame_needed = 1, uses_anonymous_args = 0
 2000 0000 80B5     		push	{r7, lr}
 2001              	.LCFI87:
 2002              		.cfi_def_cfa_offset 8
 2003              		.cfi_offset 7, -8
 2004              		.cfi_offset 14, -4
 2005 0002 84B0     		sub	sp, sp, #16
 2006              	.LCFI88:
 2007              		.cfi_def_cfa_offset 24
 2008 0004 00AF     		add	r7, sp, #0
 2009              	.LCFI89:
 2010              		.cfi_def_cfa_register 7
 2011 0006 7860     		str	r0, [r7, #4]
 2012 0008 3960     		str	r1, [r7]
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U; 
 2013              		.loc 1 855 0
 2014 000a 0023     		movs	r3, #0
ARM GAS  /tmp/cc2l9dGw.s 			page 51


 2015 000c FB60     		str	r3, [r7, #12]
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2016              		.loc 1 858 0
 2017 000e FFF7FEFF 		bl	HAL_GetTick
 2018 0012 F860     		str	r0, [r7, #12]
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F)== RESET)
 2019              		.loc 1 861 0
 2020 0014 13E0     		b	.L83
 2021              	.L86:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2022              		.loc 1 863 0
 2023 0016 3B68     		ldr	r3, [r7]
 2024 0018 B3F1FF3F 		cmp	r3, #-1
 2025 001c 0FD0     		beq	.L83
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 2026              		.loc 1 865 0
 2027 001e 3B68     		ldr	r3, [r7]
 2028 0020 002B     		cmp	r3, #0
 2029 0022 07D0     		beq	.L84
 2030              		.loc 1 865 0 is_stmt 0 discriminator 1
 2031 0024 FFF7FEFF 		bl	HAL_GetTick
 2032 0028 0246     		mov	r2, r0
 2033 002a FB68     		ldr	r3, [r7, #12]
 2034 002c D31A     		subs	r3, r2, r3
 2035 002e 3A68     		ldr	r2, [r7]
 2036 0030 9A42     		cmp	r2, r3
 2037 0032 04D2     		bcs	.L83
 2038              	.L84:
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2039              		.loc 1 867 0 is_stmt 1
 2040 0034 7B68     		ldr	r3, [r7, #4]
 2041 0036 0322     		movs	r2, #3
 2042 0038 5A77     		strb	r2, [r3, #29]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2043              		.loc 1 868 0
 2044 003a 0323     		movs	r3, #3
 2045 003c 13E0     		b	.L85
 2046              	.L83:
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2047              		.loc 1 861 0
 2048 003e 7B68     		ldr	r3, [r7, #4]
 2049 0040 1B68     		ldr	r3, [r3]
 2050 0042 DB68     		ldr	r3, [r3, #12]
 2051 0044 03F40053 		and	r3, r3, #8192
 2052 0048 002B     		cmp	r3, #0
 2053 004a E4D0     		beq	.L86
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
ARM GAS  /tmp/cc2l9dGw.s 			page 52


 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 2054              		.loc 1 874 0
 2055 004c 7B68     		ldr	r3, [r7, #4]
 2056 004e 1B68     		ldr	r3, [r3]
 2057 0050 DB68     		ldr	r3, [r3, #12]
 2058 0052 DAB2     		uxtb	r2, r3
 2059 0054 7B68     		ldr	r3, [r7, #4]
 2060 0056 1B68     		ldr	r3, [r3]
 2061 0058 62F40252 		orn	r2, r2, #8320
 2062 005c DA60     		str	r2, [r3, #12]
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2063              		.loc 1 877 0
 2064 005e 7B68     		ldr	r3, [r7, #4]
 2065 0060 0122     		movs	r2, #1
 2066 0062 5A77     		strb	r2, [r3, #29]
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 2067              		.loc 1 879 0
 2068 0064 0023     		movs	r3, #0
 2069              	.L85:
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2070              		.loc 1 880 0
 2071 0066 1846     		mov	r0, r3
 2072 0068 1037     		adds	r7, r7, #16
 2073              	.LCFI90:
 2074              		.cfi_def_cfa_offset 8
 2075 006a BD46     		mov	sp, r7
 2076              	.LCFI91:
 2077              		.cfi_def_cfa_register 13
 2078              		@ sp needed
 2079 006c 80BD     		pop	{r7, pc}
 2080              		.cfi_endproc
 2081              	.LFE153:
 2083              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 2084              		.align	1
 2085              		.global	HAL_RTCEx_PollForTamper2Event
 2086              		.syntax unified
 2087              		.thumb
 2088              		.thumb_func
 2089              		.fpu fpv4-sp-d16
 2091              	HAL_RTCEx_PollForTamper2Event:
 2092              	.LFB154:
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper2 Polling.
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 2093              		.loc 1 890 0
 2094              		.cfi_startproc
ARM GAS  /tmp/cc2l9dGw.s 			page 53


 2095              		@ args = 0, pretend = 0, frame = 16
 2096              		@ frame_needed = 1, uses_anonymous_args = 0
 2097 0000 80B5     		push	{r7, lr}
 2098              	.LCFI92:
 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 7, -8
 2101              		.cfi_offset 14, -4
 2102 0002 84B0     		sub	sp, sp, #16
 2103              	.LCFI93:
 2104              		.cfi_def_cfa_offset 24
 2105 0004 00AF     		add	r7, sp, #0
 2106              	.LCFI94:
 2107              		.cfi_def_cfa_register 7
 2108 0006 7860     		str	r0, [r7, #4]
 2109 0008 3960     		str	r1, [r7]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 2110              		.loc 1 891 0
 2111 000a 0023     		movs	r3, #0
 2112 000c FB60     		str	r3, [r7, #12]
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2113              		.loc 1 894 0
 2114 000e FFF7FEFF 		bl	HAL_GetTick
 2115 0012 F860     		str	r0, [r7, #12]
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == RESET)
 2116              		.loc 1 897 0
 2117 0014 13E0     		b	.L88
 2118              	.L91:
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2119              		.loc 1 899 0
 2120 0016 3B68     		ldr	r3, [r7]
 2121 0018 B3F1FF3F 		cmp	r3, #-1
 2122 001c 0FD0     		beq	.L88
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2123              		.loc 1 901 0
 2124 001e 3B68     		ldr	r3, [r7]
 2125 0020 002B     		cmp	r3, #0
 2126 0022 07D0     		beq	.L89
 2127              		.loc 1 901 0 is_stmt 0 discriminator 1
 2128 0024 FFF7FEFF 		bl	HAL_GetTick
 2129 0028 0246     		mov	r2, r0
 2130 002a FB68     		ldr	r3, [r7, #12]
 2131 002c D31A     		subs	r3, r2, r3
 2132 002e 3A68     		ldr	r2, [r7]
 2133 0030 9A42     		cmp	r2, r3
 2134 0032 04D2     		bcs	.L88
 2135              	.L89:
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2136              		.loc 1 903 0 is_stmt 1
 2137 0034 7B68     		ldr	r3, [r7, #4]
 2138 0036 0322     		movs	r2, #3
ARM GAS  /tmp/cc2l9dGw.s 			page 54


 2139 0038 5A77     		strb	r2, [r3, #29]
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2140              		.loc 1 904 0
 2141 003a 0323     		movs	r3, #3
 2142 003c 13E0     		b	.L90
 2143              	.L88:
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2144              		.loc 1 897 0
 2145 003e 7B68     		ldr	r3, [r7, #4]
 2146 0040 1B68     		ldr	r3, [r3]
 2147 0042 DB68     		ldr	r3, [r3, #12]
 2148 0044 03F48043 		and	r3, r3, #16384
 2149 0048 002B     		cmp	r3, #0
 2150 004a E4D0     		beq	.L91
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP2F);
 2151              		.loc 1 910 0
 2152 004c 7B68     		ldr	r3, [r7, #4]
 2153 004e 1B68     		ldr	r3, [r3]
 2154 0050 DB68     		ldr	r3, [r3, #12]
 2155 0052 DAB2     		uxtb	r2, r3
 2156 0054 7B68     		ldr	r3, [r7, #4]
 2157 0056 1B68     		ldr	r3, [r3]
 2158 0058 62F48142 		orn	r2, r2, #16512
 2159 005c DA60     		str	r2, [r3, #12]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2160              		.loc 1 913 0
 2161 005e 7B68     		ldr	r3, [r7, #4]
 2162 0060 0122     		movs	r2, #1
 2163 0062 5A77     		strb	r2, [r3, #29]
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2164              		.loc 1 915 0
 2165 0064 0023     		movs	r3, #0
 2166              	.L90:
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2167              		.loc 1 916 0
 2168 0066 1846     		mov	r0, r3
 2169 0068 1037     		adds	r7, r7, #16
 2170              	.LCFI95:
 2171              		.cfi_def_cfa_offset 8
 2172 006a BD46     		mov	sp, r7
 2173              	.LCFI96:
 2174              		.cfi_def_cfa_register 13
 2175              		@ sp needed
 2176 006c 80BD     		pop	{r7, pc}
 2177              		.cfi_endproc
 2178              	.LFE154:
 2180              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 2181              		.align	1
 2182              		.global	HAL_RTCEx_PollForTamper3Event
ARM GAS  /tmp/cc2l9dGw.s 			page 55


 2183              		.syntax unified
 2184              		.thumb
 2185              		.thumb_func
 2186              		.fpu fpv4-sp-d16
 2188              	HAL_RTCEx_PollForTamper3Event:
 2189              	.LFB155:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Tamper3 Polling.
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2190              		.loc 1 925 0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 16
 2193              		@ frame_needed = 1, uses_anonymous_args = 0
 2194 0000 80B5     		push	{r7, lr}
 2195              	.LCFI97:
 2196              		.cfi_def_cfa_offset 8
 2197              		.cfi_offset 7, -8
 2198              		.cfi_offset 14, -4
 2199 0002 84B0     		sub	sp, sp, #16
 2200              	.LCFI98:
 2201              		.cfi_def_cfa_offset 24
 2202 0004 00AF     		add	r7, sp, #0
 2203              	.LCFI99:
 2204              		.cfi_def_cfa_register 7
 2205 0006 7860     		str	r0, [r7, #4]
 2206 0008 3960     		str	r1, [r7]
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2207              		.loc 1 926 0
 2208 000a FFF7FEFF 		bl	HAL_GetTick
 2209 000e F860     		str	r0, [r7, #12]
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == RESET)
 2210              		.loc 1 929 0
 2211 0010 13E0     		b	.L93
 2212              	.L96:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2213              		.loc 1 931 0
 2214 0012 3B68     		ldr	r3, [r7]
 2215 0014 B3F1FF3F 		cmp	r3, #-1
 2216 0018 0FD0     		beq	.L93
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2217              		.loc 1 933 0
 2218 001a 3B68     		ldr	r3, [r7]
 2219 001c 002B     		cmp	r3, #0
 2220 001e 07D0     		beq	.L94
 2221              		.loc 1 933 0 is_stmt 0 discriminator 1
 2222 0020 FFF7FEFF 		bl	HAL_GetTick
 2223 0024 0246     		mov	r2, r0
ARM GAS  /tmp/cc2l9dGw.s 			page 56


 2224 0026 FB68     		ldr	r3, [r7, #12]
 2225 0028 D31A     		subs	r3, r2, r3
 2226 002a 3A68     		ldr	r2, [r7]
 2227 002c 9A42     		cmp	r2, r3
 2228 002e 04D2     		bcs	.L93
 2229              	.L94:
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2230              		.loc 1 935 0 is_stmt 1
 2231 0030 7B68     		ldr	r3, [r7, #4]
 2232 0032 0322     		movs	r2, #3
 2233 0034 5A77     		strb	r2, [r3, #29]
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2234              		.loc 1 936 0
 2235 0036 0323     		movs	r3, #3
 2236 0038 13E0     		b	.L95
 2237              	.L93:
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2238              		.loc 1 929 0
 2239 003a 7B68     		ldr	r3, [r7, #4]
 2240 003c 1B68     		ldr	r3, [r3]
 2241 003e DB68     		ldr	r3, [r3, #12]
 2242 0040 03F40043 		and	r3, r3, #32768
 2243 0044 002B     		cmp	r3, #0
 2244 0046 E4D0     		beq	.L96
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP3F);
 2245              		.loc 1 942 0
 2246 0048 7B68     		ldr	r3, [r7, #4]
 2247 004a 1B68     		ldr	r3, [r3]
 2248 004c DB68     		ldr	r3, [r3, #12]
 2249 004e D9B2     		uxtb	r1, r3
 2250 0050 7B68     		ldr	r3, [r7, #4]
 2251 0052 1A68     		ldr	r2, [r3]
 2252 0054 054B     		ldr	r3, .L97
 2253 0056 0B43     		orrs	r3, r3, r1
 2254 0058 D360     		str	r3, [r2, #12]
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2255              		.loc 1 945 0
 2256 005a 7B68     		ldr	r3, [r7, #4]
 2257 005c 0122     		movs	r2, #1
 2258 005e 5A77     		strb	r2, [r3, #29]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2259              		.loc 1 947 0
 2260 0060 0023     		movs	r3, #0
 2261              	.L95:
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2262              		.loc 1 948 0
 2263 0062 1846     		mov	r0, r3
 2264 0064 1037     		adds	r7, r7, #16
ARM GAS  /tmp/cc2l9dGw.s 			page 57


 2265              	.LCFI100:
 2266              		.cfi_def_cfa_offset 8
 2267 0066 BD46     		mov	sp, r7
 2268              	.LCFI101:
 2269              		.cfi_def_cfa_register 13
 2270              		@ sp needed
 2271 0068 80BD     		pop	{r7, pc}
 2272              	.L98:
 2273 006a 00BF     		.align	2
 2274              	.L97:
 2275 006c 7F7FFFFF 		.word	-32897
 2276              		.cfi_endproc
 2277              	.LFE155:
 2279              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 2280              		.align	1
 2281              		.global	HAL_RTCEx_SetWakeUpTimer
 2282              		.syntax unified
 2283              		.thumb
 2284              		.thumb_func
 2285              		.fpu fpv4-sp-d16
 2287              	HAL_RTCEx_SetWakeUpTimer:
 2288              	.LFB156:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group2 RTC Wake-up functions
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   RTC Wake-up functions
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets wake up timer. 
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2289              		.loc 1 977 0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 24
 2292              		@ frame_needed = 1, uses_anonymous_args = 0
 2293 0000 80B5     		push	{r7, lr}
 2294              	.LCFI102:
ARM GAS  /tmp/cc2l9dGw.s 			page 58


 2295              		.cfi_def_cfa_offset 8
 2296              		.cfi_offset 7, -8
 2297              		.cfi_offset 14, -4
 2298 0002 86B0     		sub	sp, sp, #24
 2299              	.LCFI103:
 2300              		.cfi_def_cfa_offset 32
 2301 0004 00AF     		add	r7, sp, #0
 2302              	.LCFI104:
 2303              		.cfi_def_cfa_register 7
 2304 0006 F860     		str	r0, [r7, #12]
 2305 0008 B960     		str	r1, [r7, #8]
 2306 000a 7A60     		str	r2, [r7, #4]
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 2307              		.loc 1 978 0
 2308 000c 0023     		movs	r3, #0
 2309 000e 7B61     		str	r3, [r7, #20]
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2310              		.loc 1 985 0
 2311 0010 FB68     		ldr	r3, [r7, #12]
 2312 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2313 0014 012B     		cmp	r3, #1
 2314 0016 01D1     		bne	.L100
 2315              		.loc 1 985 0 is_stmt 0 discriminator 1
 2316 0018 0223     		movs	r3, #2
 2317 001a 62E0     		b	.L101
 2318              	.L100:
 2319              		.loc 1 985 0 discriminator 2
 2320 001c FB68     		ldr	r3, [r7, #12]
 2321 001e 0122     		movs	r2, #1
 2322 0020 1A77     		strb	r2, [r3, #28]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2323              		.loc 1 987 0 is_stmt 1 discriminator 2
 2324 0022 FB68     		ldr	r3, [r7, #12]
 2325 0024 0222     		movs	r2, #2
 2326 0026 5A77     		strb	r2, [r3, #29]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2327              		.loc 1 990 0 discriminator 2
 2328 0028 FB68     		ldr	r3, [r7, #12]
 2329 002a 1B68     		ldr	r3, [r3]
 2330 002c CA22     		movs	r2, #202
 2331 002e 5A62     		str	r2, [r3, #36]
 2332 0030 FB68     		ldr	r3, [r7, #12]
 2333 0032 1B68     		ldr	r3, [r3]
 2334 0034 5322     		movs	r2, #83
 2335 0036 5A62     		str	r2, [r3, #36]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2336              		.loc 1 992 0 discriminator 2
ARM GAS  /tmp/cc2l9dGw.s 			page 59


 2337 0038 FB68     		ldr	r3, [r7, #12]
 2338 003a 1B68     		ldr	r3, [r3]
 2339 003c 9A68     		ldr	r2, [r3, #8]
 2340 003e FB68     		ldr	r3, [r7, #12]
 2341 0040 1B68     		ldr	r3, [r3]
 2342 0042 22F48062 		bic	r2, r2, #1024
 2343 0046 9A60     		str	r2, [r3, #8]
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2344              		.loc 1 995 0 discriminator 2
 2345 0048 FFF7FEFF 		bl	HAL_GetTick
 2346 004c 7861     		str	r0, [r7, #20]
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET)
 2347              		.loc 1 998 0 discriminator 2
 2348 004e FB68     		ldr	r3, [r7, #12]
 2349 0050 1B68     		ldr	r3, [r3]
 2350 0052 9B68     		ldr	r3, [r3, #8]
 2351 0054 03F48063 		and	r3, r3, #1024
 2352 0058 002B     		cmp	r3, #0
 2353 005a 1BD0     		beq	.L102
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 2354              		.loc 1 1001 0
 2355 005c 13E0     		b	.L103
 2356              	.L104:
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 2357              		.loc 1 1003 0
 2358 005e FFF7FEFF 		bl	HAL_GetTick
 2359 0062 0246     		mov	r2, r0
 2360 0064 7B69     		ldr	r3, [r7, #20]
 2361 0066 D31A     		subs	r3, r2, r3
 2362 0068 B3F57A7F 		cmp	r3, #1000
 2363 006c 0BD9     		bls	.L103
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2364              		.loc 1 1006 0
 2365 006e FB68     		ldr	r3, [r7, #12]
 2366 0070 1B68     		ldr	r3, [r3]
 2367 0072 FF22     		movs	r2, #255
 2368 0074 5A62     		str	r2, [r3, #36]
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 2369              		.loc 1 1008 0
 2370 0076 FB68     		ldr	r3, [r7, #12]
 2371 0078 0322     		movs	r2, #3
 2372 007a 5A77     		strb	r2, [r3, #29]
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */ 
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2373              		.loc 1 1011 0
 2374 007c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 60


 2375 007e 0022     		movs	r2, #0
 2376 0080 1A77     		strb	r2, [r3, #28]
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2377              		.loc 1 1013 0
 2378 0082 0323     		movs	r3, #3
 2379 0084 2DE0     		b	.L101
 2380              	.L103:
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 2381              		.loc 1 1001 0
 2382 0086 FB68     		ldr	r3, [r7, #12]
 2383 0088 1B68     		ldr	r3, [r3]
 2384 008a DB68     		ldr	r3, [r3, #12]
 2385 008c 03F00403 		and	r3, r3, #4
 2386 0090 002B     		cmp	r3, #0
 2387 0092 E4D0     		beq	.L104
 2388              	.L102:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }  
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 2389              		.loc 1 1019 0
 2390 0094 FB68     		ldr	r3, [r7, #12]
 2391 0096 1B68     		ldr	r3, [r3]
 2392 0098 9A68     		ldr	r2, [r3, #8]
 2393 009a FB68     		ldr	r3, [r7, #12]
 2394 009c 1B68     		ldr	r3, [r3]
 2395 009e 22F00702 		bic	r2, r2, #7
 2396 00a2 9A60     		str	r2, [r3, #8]
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 2397              		.loc 1 1022 0
 2398 00a4 FB68     		ldr	r3, [r7, #12]
 2399 00a6 1B68     		ldr	r3, [r3]
 2400 00a8 9968     		ldr	r1, [r3, #8]
 2401 00aa FB68     		ldr	r3, [r7, #12]
 2402 00ac 1B68     		ldr	r3, [r3]
 2403 00ae 7A68     		ldr	r2, [r7, #4]
 2404 00b0 0A43     		orrs	r2, r2, r1
 2405 00b2 9A60     		str	r2, [r3, #8]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2406              		.loc 1 1025 0
 2407 00b4 FB68     		ldr	r3, [r7, #12]
 2408 00b6 1B68     		ldr	r3, [r3]
 2409 00b8 BA68     		ldr	r2, [r7, #8]
 2410 00ba 5A61     		str	r2, [r3, #20]
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);   
 2411              		.loc 1 1028 0
 2412 00bc FB68     		ldr	r3, [r7, #12]
 2413 00be 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 61


 2414 00c0 9A68     		ldr	r2, [r3, #8]
 2415 00c2 FB68     		ldr	r3, [r7, #12]
 2416 00c4 1B68     		ldr	r3, [r3]
 2417 00c6 42F48062 		orr	r2, r2, #1024
 2418 00ca 9A60     		str	r2, [r3, #8]
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 2419              		.loc 1 1031 0
 2420 00cc FB68     		ldr	r3, [r7, #12]
 2421 00ce 1B68     		ldr	r3, [r3]
 2422 00d0 FF22     		movs	r2, #255
 2423 00d2 5A62     		str	r2, [r3, #36]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 2424              		.loc 1 1033 0
 2425 00d4 FB68     		ldr	r3, [r7, #12]
 2426 00d6 0122     		movs	r2, #1
 2427 00d8 5A77     		strb	r2, [r3, #29]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2428              		.loc 1 1036 0
 2429 00da FB68     		ldr	r3, [r7, #12]
 2430 00dc 0022     		movs	r2, #0
 2431 00de 1A77     		strb	r2, [r3, #28]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2432              		.loc 1 1038 0
 2433 00e0 0023     		movs	r3, #0
 2434              	.L101:
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2435              		.loc 1 1039 0
 2436 00e2 1846     		mov	r0, r3
 2437 00e4 1837     		adds	r7, r7, #24
 2438              	.LCFI105:
 2439              		.cfi_def_cfa_offset 8
 2440 00e6 BD46     		mov	sp, r7
 2441              	.LCFI106:
 2442              		.cfi_def_cfa_register 13
 2443              		@ sp needed
 2444 00e8 80BD     		pop	{r7, pc}
 2445              		.cfi_endproc
 2446              	.LFE156:
 2448              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 2449              		.align	1
 2450              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 2451              		.syntax unified
 2452              		.thumb
 2453              		.thumb_func
 2454              		.fpu fpv4-sp-d16
 2456              	HAL_RTCEx_SetWakeUpTimer_IT:
 2457              	.LFB157:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets wake up timer with interrupt
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
ARM GAS  /tmp/cc2l9dGw.s 			page 62


1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2458              		.loc 1 1050 0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 24
 2461              		@ frame_needed = 1, uses_anonymous_args = 0
 2462              		@ link register save eliminated.
 2463 0000 80B4     		push	{r7}
 2464              	.LCFI107:
 2465              		.cfi_def_cfa_offset 4
 2466              		.cfi_offset 7, -4
 2467 0002 87B0     		sub	sp, sp, #28
 2468              	.LCFI108:
 2469              		.cfi_def_cfa_offset 32
 2470 0004 00AF     		add	r7, sp, #0
 2471              	.LCFI109:
 2472              		.cfi_def_cfa_register 7
 2473 0006 F860     		str	r0, [r7, #12]
 2474 0008 B960     		str	r1, [r7, #8]
 2475 000a 7A60     		str	r2, [r7, #4]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __IO uint32_t count;
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2476              		.loc 1 1058 0
 2477 000c FB68     		ldr	r3, [r7, #12]
 2478 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2479 0010 012B     		cmp	r3, #1
 2480 0012 01D1     		bne	.L106
 2481              		.loc 1 1058 0 is_stmt 0 discriminator 1
 2482 0014 0223     		movs	r3, #2
 2483 0016 AEE0     		b	.L107
 2484              	.L106:
 2485              		.loc 1 1058 0 discriminator 2
 2486 0018 FB68     		ldr	r3, [r7, #12]
 2487 001a 0122     		movs	r2, #1
 2488 001c 1A77     		strb	r2, [r3, #28]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2489              		.loc 1 1060 0 is_stmt 1 discriminator 2
 2490 001e FB68     		ldr	r3, [r7, #12]
 2491 0020 0222     		movs	r2, #2
 2492 0022 5A77     		strb	r2, [r3, #29]
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2493              		.loc 1 1063 0 discriminator 2
 2494 0024 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 63


 2495 0026 1B68     		ldr	r3, [r3]
 2496 0028 CA22     		movs	r2, #202
 2497 002a 5A62     		str	r2, [r3, #36]
 2498 002c FB68     		ldr	r3, [r7, #12]
 2499 002e 1B68     		ldr	r3, [r3]
 2500 0030 5322     		movs	r2, #83
 2501 0032 5A62     		str	r2, [r3, #36]
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2502              		.loc 1 1065 0 discriminator 2
 2503 0034 FB68     		ldr	r3, [r7, #12]
 2504 0036 1B68     		ldr	r3, [r3]
 2505 0038 9A68     		ldr	r2, [r3, #8]
 2506 003a FB68     		ldr	r3, [r7, #12]
 2507 003c 1B68     		ldr	r3, [r3]
 2508 003e 22F48062 		bic	r2, r2, #1024
 2509 0042 9A60     		str	r2, [r3, #8]
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check RTC WUTWF flag is reset only when wake up timer enabled */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET)
 2510              		.loc 1 1068 0 discriminator 2
 2511 0044 FB68     		ldr	r3, [r7, #12]
 2512 0046 1B68     		ldr	r3, [r3]
 2513 0048 9B68     		ldr	r3, [r3, #8]
 2514 004a 03F48063 		and	r3, r3, #1024
 2515 004e 002B     		cmp	r3, #0
 2516 0050 22D0     		beq	.L108
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U);
 2517              		.loc 1 1071 0
 2518 0052 4C4B     		ldr	r3, .L113
 2519 0054 1B68     		ldr	r3, [r3]
 2520 0056 4C4A     		ldr	r2, .L113+4
 2521 0058 A2FB0323 		umull	r2, r3, r2, r3
 2522 005c DB0A     		lsrs	r3, r3, #11
 2523 005e 4FF47A72 		mov	r2, #1000
 2524 0062 02FB03F3 		mul	r3, r2, r3
 2525 0066 7B61     		str	r3, [r7, #20]
 2526              	.L110:
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     do
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if(count-- == 0U)
 2527              		.loc 1 1074 0
 2528 0068 7B69     		ldr	r3, [r7, #20]
 2529 006a 5A1E     		subs	r2, r3, #1
 2530 006c 7A61     		str	r2, [r7, #20]
 2531 006e 002B     		cmp	r3, #0
 2532 0070 0BD1     		bne	.L109
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2533              		.loc 1 1077 0
 2534 0072 FB68     		ldr	r3, [r7, #12]
 2535 0074 1B68     		ldr	r3, [r3]
 2536 0076 FF22     		movs	r2, #255
 2537 0078 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cc2l9dGw.s 			page 64


1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2538              		.loc 1 1079 0
 2539 007a FB68     		ldr	r3, [r7, #12]
 2540 007c 0322     		movs	r2, #3
 2541 007e 5A77     		strb	r2, [r3, #29]
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2542              		.loc 1 1082 0
 2543 0080 FB68     		ldr	r3, [r7, #12]
 2544 0082 0022     		movs	r2, #0
 2545 0084 1A77     		strb	r2, [r3, #28]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2546              		.loc 1 1084 0
 2547 0086 0323     		movs	r3, #3
 2548 0088 75E0     		b	.L107
 2549              	.L109:
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET);
 2550              		.loc 1 1087 0
 2551 008a FB68     		ldr	r3, [r7, #12]
 2552 008c 1B68     		ldr	r3, [r3]
 2553 008e DB68     		ldr	r3, [r3, #12]
 2554 0090 03F00403 		and	r3, r3, #4
 2555 0094 002B     		cmp	r3, #0
 2556 0096 E7D1     		bne	.L110
 2557              	.L108:
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2558              		.loc 1 1090 0
 2559 0098 FB68     		ldr	r3, [r7, #12]
 2560 009a 1B68     		ldr	r3, [r3]
 2561 009c 9A68     		ldr	r2, [r3, #8]
 2562 009e FB68     		ldr	r3, [r7, #12]
 2563 00a0 1B68     		ldr	r3, [r3]
 2564 00a2 22F48062 		bic	r2, r2, #1024
 2565 00a6 9A60     		str	r2, [r3, #8]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U);
 2566              		.loc 1 1093 0
 2567 00a8 364B     		ldr	r3, .L113
 2568 00aa 1B68     		ldr	r3, [r3]
 2569 00ac 364A     		ldr	r2, .L113+4
 2570 00ae A2FB0323 		umull	r2, r3, r2, r3
 2571 00b2 DB0A     		lsrs	r3, r3, #11
 2572 00b4 4FF47A72 		mov	r2, #1000
 2573 00b8 02FB03F3 		mul	r3, r2, r3
 2574 00bc 7B61     		str	r3, [r7, #20]
 2575              	.L112:
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   do
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(count-- == 0U)
ARM GAS  /tmp/cc2l9dGw.s 			page 65


 2576              		.loc 1 1096 0
 2577 00be 7B69     		ldr	r3, [r7, #20]
 2578 00c0 5A1E     		subs	r2, r3, #1
 2579 00c2 7A61     		str	r2, [r7, #20]
 2580 00c4 002B     		cmp	r3, #0
 2581 00c6 0BD1     		bne	.L111
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2582              		.loc 1 1099 0
 2583 00c8 FB68     		ldr	r3, [r7, #12]
 2584 00ca 1B68     		ldr	r3, [r3]
 2585 00cc FF22     		movs	r2, #255
 2586 00ce 5A62     		str	r2, [r3, #36]
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2587              		.loc 1 1101 0
 2588 00d0 FB68     		ldr	r3, [r7, #12]
 2589 00d2 0322     		movs	r2, #3
 2590 00d4 5A77     		strb	r2, [r3, #29]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2591              		.loc 1 1104 0
 2592 00d6 FB68     		ldr	r3, [r7, #12]
 2593 00d8 0022     		movs	r2, #0
 2594 00da 1A77     		strb	r2, [r3, #28]
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2595              		.loc 1 1106 0
 2596 00dc 0323     		movs	r3, #3
 2597 00de 4AE0     		b	.L107
 2598              	.L111:
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET);
 2599              		.loc 1 1109 0
 2600 00e0 FB68     		ldr	r3, [r7, #12]
 2601 00e2 1B68     		ldr	r3, [r3]
 2602 00e4 DB68     		ldr	r3, [r3, #12]
 2603 00e6 03F00403 		and	r3, r3, #4
 2604 00ea 002B     		cmp	r3, #0
 2605 00ec E7D0     		beq	.L112
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Wake-up Timer counter */
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2606              		.loc 1 1112 0
 2607 00ee FB68     		ldr	r3, [r7, #12]
 2608 00f0 1B68     		ldr	r3, [r3]
 2609 00f2 BA68     		ldr	r2, [r7, #8]
 2610 00f4 5A61     		str	r2, [r3, #20]
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 2611              		.loc 1 1115 0
 2612 00f6 FB68     		ldr	r3, [r7, #12]
 2613 00f8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 66


 2614 00fa 9A68     		ldr	r2, [r3, #8]
 2615 00fc FB68     		ldr	r3, [r7, #12]
 2616 00fe 1B68     		ldr	r3, [r3]
 2617 0100 22F00702 		bic	r2, r2, #7
 2618 0104 9A60     		str	r2, [r3, #8]
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the clock source */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 2619              		.loc 1 1118 0
 2620 0106 FB68     		ldr	r3, [r7, #12]
 2621 0108 1B68     		ldr	r3, [r3]
 2622 010a 9968     		ldr	r1, [r3, #8]
 2623 010c FB68     		ldr	r3, [r7, #12]
 2624 010e 1B68     		ldr	r3, [r3]
 2625 0110 7A68     		ldr	r2, [r7, #4]
 2626 0112 0A43     		orrs	r2, r2, r1
 2627 0114 9A60     		str	r2, [r3, #8]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 2628              		.loc 1 1121 0
 2629 0116 1D4B     		ldr	r3, .L113+8
 2630 0118 1B68     		ldr	r3, [r3]
 2631 011a 1C4A     		ldr	r2, .L113+8
 2632 011c 43F48003 		orr	r3, r3, #4194304
 2633 0120 1360     		str	r3, [r2]
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   EXTI->RTSR |= RTC_EXTI_LINE_WAKEUPTIMER_EVENT;
 2634              		.loc 1 1123 0
 2635 0122 1A4B     		ldr	r3, .L113+8
 2636 0124 9B68     		ldr	r3, [r3, #8]
 2637 0126 194A     		ldr	r2, .L113+8
 2638 0128 43F48003 		orr	r3, r3, #4194304
 2639 012c 9360     		str	r3, [r2, #8]
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear RTC Wake Up timer Flag */
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2640              		.loc 1 1126 0
 2641 012e FB68     		ldr	r3, [r7, #12]
 2642 0130 1B68     		ldr	r3, [r3]
 2643 0132 DB68     		ldr	r3, [r3, #12]
 2644 0134 DAB2     		uxtb	r2, r3
 2645 0136 FB68     		ldr	r3, [r7, #12]
 2646 0138 1B68     		ldr	r3, [r3]
 2647 013a 62F49062 		orn	r2, r2, #1152
 2648 013e DA60     		str	r2, [r3, #12]
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 2649              		.loc 1 1129 0
 2650 0140 FB68     		ldr	r3, [r7, #12]
 2651 0142 1B68     		ldr	r3, [r3]
 2652 0144 9A68     		ldr	r2, [r3, #8]
 2653 0146 FB68     		ldr	r3, [r7, #12]
 2654 0148 1B68     		ldr	r3, [r3]
 2655 014a 42F48042 		orr	r2, r2, #16384
 2656 014e 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc2l9dGw.s 			page 67


1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 2657              		.loc 1 1132 0
 2658 0150 FB68     		ldr	r3, [r7, #12]
 2659 0152 1B68     		ldr	r3, [r3]
 2660 0154 9A68     		ldr	r2, [r3, #8]
 2661 0156 FB68     		ldr	r3, [r7, #12]
 2662 0158 1B68     		ldr	r3, [r3]
 2663 015a 42F48062 		orr	r2, r2, #1024
 2664 015e 9A60     		str	r2, [r3, #8]
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 2665              		.loc 1 1135 0
 2666 0160 FB68     		ldr	r3, [r7, #12]
 2667 0162 1B68     		ldr	r3, [r3]
 2668 0164 FF22     		movs	r2, #255
 2669 0166 5A62     		str	r2, [r3, #36]
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 2670              		.loc 1 1137 0
 2671 0168 FB68     		ldr	r3, [r7, #12]
 2672 016a 0122     		movs	r2, #1
 2673 016c 5A77     		strb	r2, [r3, #29]
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2674              		.loc 1 1140 0
 2675 016e FB68     		ldr	r3, [r7, #12]
 2676 0170 0022     		movs	r2, #0
 2677 0172 1A77     		strb	r2, [r3, #28]
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2678              		.loc 1 1142 0
 2679 0174 0023     		movs	r3, #0
 2680              	.L107:
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2681              		.loc 1 1143 0
 2682 0176 1846     		mov	r0, r3
 2683 0178 1C37     		adds	r7, r7, #28
 2684              	.LCFI110:
 2685              		.cfi_def_cfa_offset 4
 2686 017a BD46     		mov	sp, r7
 2687              	.LCFI111:
 2688              		.cfi_def_cfa_register 13
 2689              		@ sp needed
 2690 017c 5DF8047B 		ldr	r7, [sp], #4
 2691              	.LCFI112:
 2692              		.cfi_restore 7
 2693              		.cfi_def_cfa_offset 0
 2694 0180 7047     		bx	lr
 2695              	.L114:
 2696 0182 00BF     		.align	2
 2697              	.L113:
 2698 0184 00000000 		.word	SystemCoreClock
 2699 0188 D34D6210 		.word	274877907
ARM GAS  /tmp/cc2l9dGw.s 			page 68


 2700 018c 003C0140 		.word	1073822720
 2701              		.cfi_endproc
 2702              	.LFE157:
 2704              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 2705              		.align	1
 2706              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 2707              		.syntax unified
 2708              		.thumb
 2709              		.thumb_func
 2710              		.fpu fpv4-sp-d16
 2712              	HAL_RTCEx_DeactivateWakeUpTimer:
 2713              	.LFB158:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates wake up timer counter.
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2714              		.loc 1 1152 0
 2715              		.cfi_startproc
 2716              		@ args = 0, pretend = 0, frame = 16
 2717              		@ frame_needed = 1, uses_anonymous_args = 0
 2718 0000 80B5     		push	{r7, lr}
 2719              	.LCFI113:
 2720              		.cfi_def_cfa_offset 8
 2721              		.cfi_offset 7, -8
 2722              		.cfi_offset 14, -4
 2723 0002 84B0     		sub	sp, sp, #16
 2724              	.LCFI114:
 2725              		.cfi_def_cfa_offset 24
 2726 0004 00AF     		add	r7, sp, #0
 2727              	.LCFI115:
 2728              		.cfi_def_cfa_register 7
 2729 0006 7860     		str	r0, [r7, #4]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 2730              		.loc 1 1153 0
 2731 0008 0023     		movs	r3, #0
 2732 000a FB60     		str	r3, [r7, #12]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2733              		.loc 1 1156 0
 2734 000c 7B68     		ldr	r3, [r7, #4]
 2735 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2736 0010 012B     		cmp	r3, #1
 2737 0012 01D1     		bne	.L116
 2738              		.loc 1 1156 0 is_stmt 0 discriminator 1
 2739 0014 0223     		movs	r3, #2
 2740 0016 47E0     		b	.L117
 2741              	.L116:
 2742              		.loc 1 1156 0 discriminator 2
 2743 0018 7B68     		ldr	r3, [r7, #4]
 2744 001a 0122     		movs	r2, #1
 2745 001c 1A77     		strb	r2, [r3, #28]
ARM GAS  /tmp/cc2l9dGw.s 			page 69


1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2746              		.loc 1 1158 0 is_stmt 1 discriminator 2
 2747 001e 7B68     		ldr	r3, [r7, #4]
 2748 0020 0222     		movs	r2, #2
 2749 0022 5A77     		strb	r2, [r3, #29]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2750              		.loc 1 1161 0 discriminator 2
 2751 0024 7B68     		ldr	r3, [r7, #4]
 2752 0026 1B68     		ldr	r3, [r3]
 2753 0028 CA22     		movs	r2, #202
 2754 002a 5A62     		str	r2, [r3, #36]
 2755 002c 7B68     		ldr	r3, [r7, #4]
 2756 002e 1B68     		ldr	r3, [r3]
 2757 0030 5322     		movs	r2, #83
 2758 0032 5A62     		str	r2, [r3, #36]
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2759              		.loc 1 1164 0 discriminator 2
 2760 0034 7B68     		ldr	r3, [r7, #4]
 2761 0036 1B68     		ldr	r3, [r3]
 2762 0038 9A68     		ldr	r2, [r3, #8]
 2763 003a 7B68     		ldr	r3, [r7, #4]
 2764 003c 1B68     		ldr	r3, [r3]
 2765 003e 22F48062 		bic	r2, r2, #1024
 2766 0042 9A60     		str	r2, [r3, #8]
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
 2767              		.loc 1 1167 0 discriminator 2
 2768 0044 7B68     		ldr	r3, [r7, #4]
 2769 0046 1B68     		ldr	r3, [r3]
 2770 0048 9A68     		ldr	r2, [r3, #8]
 2771 004a 7B68     		ldr	r3, [r7, #4]
 2772 004c 1B68     		ldr	r3, [r3]
 2773 004e 22F48042 		bic	r2, r2, #16384
 2774 0052 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2775              		.loc 1 1170 0 discriminator 2
 2776 0054 FFF7FEFF 		bl	HAL_GetTick
 2777 0058 F860     		str	r0, [r7, #12]
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 2778              		.loc 1 1173 0 discriminator 2
 2779 005a 13E0     		b	.L118
 2780              	.L119:
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 2781              		.loc 1 1175 0
 2782 005c FFF7FEFF 		bl	HAL_GetTick
 2783 0060 0246     		mov	r2, r0
ARM GAS  /tmp/cc2l9dGw.s 			page 70


 2784 0062 FB68     		ldr	r3, [r7, #12]
 2785 0064 D31A     		subs	r3, r2, r3
 2786 0066 B3F57A7F 		cmp	r3, #1000
 2787 006a 0BD9     		bls	.L118
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2788              		.loc 1 1178 0
 2789 006c 7B68     		ldr	r3, [r7, #4]
 2790 006e 1B68     		ldr	r3, [r3]
 2791 0070 FF22     		movs	r2, #255
 2792 0072 5A62     		str	r2, [r3, #36]
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 2793              		.loc 1 1180 0
 2794 0074 7B68     		ldr	r3, [r7, #4]
 2795 0076 0322     		movs	r2, #3
 2796 0078 5A77     		strb	r2, [r3, #29]
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */ 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2797              		.loc 1 1183 0
 2798 007a 7B68     		ldr	r3, [r7, #4]
 2799 007c 0022     		movs	r2, #0
 2800 007e 1A77     		strb	r2, [r3, #28]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2801              		.loc 1 1185 0
 2802 0080 0323     		movs	r3, #3
 2803 0082 11E0     		b	.L117
 2804              	.L118:
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 2805              		.loc 1 1173 0
 2806 0084 7B68     		ldr	r3, [r7, #4]
 2807 0086 1B68     		ldr	r3, [r3]
 2808 0088 DB68     		ldr	r3, [r3, #12]
 2809 008a 03F00403 		and	r3, r3, #4
 2810 008e 002B     		cmp	r3, #0
 2811 0090 E4D0     		beq	.L119
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }   
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2812              		.loc 1 1190 0
 2813 0092 7B68     		ldr	r3, [r7, #4]
 2814 0094 1B68     		ldr	r3, [r3]
 2815 0096 FF22     		movs	r2, #255
 2816 0098 5A62     		str	r2, [r3, #36]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;   
 2817              		.loc 1 1192 0
 2818 009a 7B68     		ldr	r3, [r7, #4]
 2819 009c 0122     		movs	r2, #1
 2820 009e 5A77     		strb	r2, [r3, #29]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
ARM GAS  /tmp/cc2l9dGw.s 			page 71


1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2821              		.loc 1 1195 0
 2822 00a0 7B68     		ldr	r3, [r7, #4]
 2823 00a2 0022     		movs	r2, #0
 2824 00a4 1A77     		strb	r2, [r3, #28]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 2825              		.loc 1 1197 0
 2826 00a6 0023     		movs	r3, #0
 2827              	.L117:
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2828              		.loc 1 1198 0
 2829 00a8 1846     		mov	r0, r3
 2830 00aa 1037     		adds	r7, r7, #16
 2831              	.LCFI116:
 2832              		.cfi_def_cfa_offset 8
 2833 00ac BD46     		mov	sp, r7
 2834              	.LCFI117:
 2835              		.cfi_def_cfa_register 13
 2836              		@ sp needed
 2837 00ae 80BD     		pop	{r7, pc}
 2838              		.cfi_endproc
 2839              	.LFE158:
 2841              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2842              		.align	1
 2843              		.global	HAL_RTCEx_GetWakeUpTimer
 2844              		.syntax unified
 2845              		.thumb
 2846              		.thumb_func
 2847              		.fpu fpv4-sp-d16
 2849              	HAL_RTCEx_GetWakeUpTimer:
 2850              	.LFB159:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Gets wake up timer counter.
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval Counter value
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2851              		.loc 1 1207 0
 2852              		.cfi_startproc
 2853              		@ args = 0, pretend = 0, frame = 8
 2854              		@ frame_needed = 1, uses_anonymous_args = 0
 2855              		@ link register save eliminated.
 2856 0000 80B4     		push	{r7}
 2857              	.LCFI118:
 2858              		.cfi_def_cfa_offset 4
 2859              		.cfi_offset 7, -4
 2860 0002 83B0     		sub	sp, sp, #12
 2861              	.LCFI119:
 2862              		.cfi_def_cfa_offset 16
 2863 0004 00AF     		add	r7, sp, #0
 2864              	.LCFI120:
 2865              		.cfi_def_cfa_register 7
 2866 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc2l9dGw.s 			page 72


1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get the counter value */
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT)); 
 2867              		.loc 1 1209 0
 2868 0008 7B68     		ldr	r3, [r7, #4]
 2869 000a 1B68     		ldr	r3, [r3]
 2870 000c 5B69     		ldr	r3, [r3, #20]
 2871 000e 9BB2     		uxth	r3, r3
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2872              		.loc 1 1210 0
 2873 0010 1846     		mov	r0, r3
 2874 0012 0C37     		adds	r7, r7, #12
 2875              	.LCFI121:
 2876              		.cfi_def_cfa_offset 4
 2877 0014 BD46     		mov	sp, r7
 2878              	.LCFI122:
 2879              		.cfi_def_cfa_register 13
 2880              		@ sp needed
 2881 0016 5DF8047B 		ldr	r7, [sp], #4
 2882              	.LCFI123:
 2883              		.cfi_restore 7
 2884              		.cfi_def_cfa_offset 0
 2885 001a 7047     		bx	lr
 2886              		.cfi_endproc
 2887              	.LFE159:
 2889              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2890              		.align	1
 2891              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu fpv4-sp-d16
 2897              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2898              	.LFB160:
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Wake Up Timer interrupt request.
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 2899              		.loc 1 1219 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 8
 2902              		@ frame_needed = 1, uses_anonymous_args = 0
 2903 0000 80B5     		push	{r7, lr}
 2904              	.LCFI124:
 2905              		.cfi_def_cfa_offset 8
 2906              		.cfi_offset 7, -8
 2907              		.cfi_offset 14, -4
 2908 0002 82B0     		sub	sp, sp, #8
 2909              	.LCFI125:
 2910              		.cfi_def_cfa_offset 16
 2911 0004 00AF     		add	r7, sp, #0
 2912              	.LCFI126:
 2913              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc2l9dGw.s 			page 73


 2914 0006 7860     		str	r0, [r7, #4]
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(__HAL_RTC_WAKEUPTIMER_GET_IT(hrtc, RTC_IT_WUT))
 2915              		.loc 1 1220 0
 2916 0008 7B68     		ldr	r3, [r7, #4]
 2917 000a 1B68     		ldr	r3, [r3]
 2918 000c DB68     		ldr	r3, [r3, #12]
 2919 000e 03F48063 		and	r3, r3, #1024
 2920 0012 002B     		cmp	r3, #0
 2921 0014 12D0     		beq	.L123
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Get the status of the Interrupt */
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((uint32_t)(hrtc->Instance->CR & RTC_IT_WUT) != (uint32_t)RESET)
 2922              		.loc 1 1223 0
 2923 0016 7B68     		ldr	r3, [r7, #4]
 2924 0018 1B68     		ldr	r3, [r3]
 2925 001a 9B68     		ldr	r3, [r3, #8]
 2926 001c 03F48043 		and	r3, r3, #16384
 2927 0020 002B     		cmp	r3, #0
 2928 0022 0BD0     		beq	.L123
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* WAKEUPTIMER callback */ 
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
 2929              		.loc 1 1226 0
 2930 0024 7868     		ldr	r0, [r7, #4]
 2931 0026 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Clear the WAKEUPTIMER interrupt pending bit */
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2932              		.loc 1 1229 0
 2933 002a 7B68     		ldr	r3, [r7, #4]
 2934 002c 1B68     		ldr	r3, [r3]
 2935 002e DB68     		ldr	r3, [r3, #12]
 2936 0030 DAB2     		uxtb	r2, r3
 2937 0032 7B68     		ldr	r3, [r7, #4]
 2938 0034 1B68     		ldr	r3, [r3]
 2939 0036 62F49062 		orn	r2, r2, #1152
 2940 003a DA60     		str	r2, [r3, #12]
 2941              	.L123:
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
 2942              		.loc 1 1234 0
 2943 003c 054B     		ldr	r3, .L124
 2944 003e 4FF48002 		mov	r2, #4194304
 2945 0042 5A61     		str	r2, [r3, #20]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2946              		.loc 1 1237 0
 2947 0044 7B68     		ldr	r3, [r7, #4]
 2948 0046 0122     		movs	r2, #1
 2949 0048 5A77     		strb	r2, [r3, #29]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2950              		.loc 1 1238 0
 2951 004a 00BF     		nop
ARM GAS  /tmp/cc2l9dGw.s 			page 74


 2952 004c 0837     		adds	r7, r7, #8
 2953              	.LCFI127:
 2954              		.cfi_def_cfa_offset 8
 2955 004e BD46     		mov	sp, r7
 2956              	.LCFI128:
 2957              		.cfi_def_cfa_register 13
 2958              		@ sp needed
 2959 0050 80BD     		pop	{r7, pc}
 2960              	.L125:
 2961 0052 00BF     		.align	2
 2962              	.L124:
 2963 0054 003C0140 		.word	1073822720
 2964              		.cfi_endproc
 2965              	.LFE160:
 2967              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 2968              		.align	1
 2969              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2973              		.fpu fpv4-sp-d16
 2975              	HAL_RTCEx_WakeUpTimerEventCallback:
 2976              	.LFB161:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 2977              		.loc 1 1247 0
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 8
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981              		@ link register save eliminated.
 2982 0000 80B4     		push	{r7}
 2983              	.LCFI129:
 2984              		.cfi_def_cfa_offset 4
 2985              		.cfi_offset 7, -4
 2986 0002 83B0     		sub	sp, sp, #12
 2987              	.LCFI130:
 2988              		.cfi_def_cfa_offset 16
 2989 0004 00AF     		add	r7, sp, #0
 2990              	.LCFI131:
 2991              		.cfi_def_cfa_register 7
 2992 0006 7860     		str	r0, [r7, #4]
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_WakeUpTimerEventCallback could be implemented in the user file
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 2993              		.loc 1 1254 0
 2994 0008 00BF     		nop
ARM GAS  /tmp/cc2l9dGw.s 			page 75


 2995 000a 0C37     		adds	r7, r7, #12
 2996              	.LCFI132:
 2997              		.cfi_def_cfa_offset 4
 2998 000c BD46     		mov	sp, r7
 2999              	.LCFI133:
 3000              		.cfi_def_cfa_register 13
 3001              		@ sp needed
 3002 000e 5DF8047B 		ldr	r7, [sp], #4
 3003              	.LCFI134:
 3004              		.cfi_restore 7
 3005              		.cfi_def_cfa_offset 0
 3006 0012 7047     		bx	lr
 3007              		.cfi_endproc
 3008              	.LFE161:
 3010              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 3011              		.align	1
 3012              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 3013              		.syntax unified
 3014              		.thumb
 3015              		.thumb_func
 3016              		.fpu fpv4-sp-d16
 3018              	HAL_RTCEx_PollForWakeUpTimerEvent:
 3019              	.LFB162:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles Wake Up Timer Polling.
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 3020              		.loc 1 1264 0
 3021              		.cfi_startproc
 3022              		@ args = 0, pretend = 0, frame = 16
 3023              		@ frame_needed = 1, uses_anonymous_args = 0
 3024 0000 80B5     		push	{r7, lr}
 3025              	.LCFI135:
 3026              		.cfi_def_cfa_offset 8
 3027              		.cfi_offset 7, -8
 3028              		.cfi_offset 14, -4
 3029 0002 84B0     		sub	sp, sp, #16
 3030              	.LCFI136:
 3031              		.cfi_def_cfa_offset 24
 3032 0004 00AF     		add	r7, sp, #0
 3033              	.LCFI137:
 3034              		.cfi_def_cfa_register 7
 3035 0006 7860     		str	r0, [r7, #4]
 3036 0008 3960     		str	r1, [r7]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 3037              		.loc 1 1265 0
 3038 000a 0023     		movs	r3, #0
 3039 000c FB60     		str	r3, [r7, #12]
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/cc2l9dGw.s 			page 76


 3040              		.loc 1 1268 0
 3041 000e FFF7FEFF 		bl	HAL_GetTick
 3042 0012 F860     		str	r0, [r7, #12]
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == RESET)
 3043              		.loc 1 1270 0
 3044 0014 13E0     		b	.L128
 3045              	.L131:
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 3046              		.loc 1 1272 0
 3047 0016 3B68     		ldr	r3, [r7]
 3048 0018 B3F1FF3F 		cmp	r3, #-1
 3049 001c 0FD0     		beq	.L128
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3050              		.loc 1 1274 0
 3051 001e 3B68     		ldr	r3, [r7]
 3052 0020 002B     		cmp	r3, #0
 3053 0022 07D0     		beq	.L129
 3054              		.loc 1 1274 0 is_stmt 0 discriminator 1
 3055 0024 FFF7FEFF 		bl	HAL_GetTick
 3056 0028 0246     		mov	r2, r0
 3057 002a FB68     		ldr	r3, [r7, #12]
 3058 002c D31A     		subs	r3, r2, r3
 3059 002e 3A68     		ldr	r2, [r7]
 3060 0030 9A42     		cmp	r2, r3
 3061 0032 04D2     		bcs	.L128
 3062              	.L129:
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3063              		.loc 1 1276 0 is_stmt 1
 3064 0034 7B68     		ldr	r3, [r7, #4]
 3065 0036 0322     		movs	r2, #3
 3066 0038 5A77     		strb	r2, [r3, #29]
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3067              		.loc 1 1278 0
 3068 003a 0323     		movs	r3, #3
 3069 003c 13E0     		b	.L130
 3070              	.L128:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 3071              		.loc 1 1270 0
 3072 003e 7B68     		ldr	r3, [r7, #4]
 3073 0040 1B68     		ldr	r3, [r3]
 3074 0042 DB68     		ldr	r3, [r3, #12]
 3075 0044 03F48063 		and	r3, r3, #1024
 3076 0048 002B     		cmp	r3, #0
 3077 004a E4D0     		beq	.L131
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 3078              		.loc 1 1284 0
 3079 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc2l9dGw.s 			page 77


 3080 004e 1B68     		ldr	r3, [r3]
 3081 0050 DB68     		ldr	r3, [r3, #12]
 3082 0052 DAB2     		uxtb	r2, r3
 3083 0054 7B68     		ldr	r3, [r7, #4]
 3084 0056 1B68     		ldr	r3, [r3]
 3085 0058 62F49062 		orn	r2, r2, #1152
 3086 005c DA60     		str	r2, [r3, #12]
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3087              		.loc 1 1287 0
 3088 005e 7B68     		ldr	r3, [r7, #4]
 3089 0060 0122     		movs	r2, #1
 3090 0062 5A77     		strb	r2, [r3, #29]
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 3091              		.loc 1 1289 0
 3092 0064 0023     		movs	r3, #0
 3093              	.L130:
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3094              		.loc 1 1290 0
 3095 0066 1846     		mov	r0, r3
 3096 0068 1037     		adds	r7, r7, #16
 3097              	.LCFI138:
 3098              		.cfi_def_cfa_offset 8
 3099 006a BD46     		mov	sp, r7
 3100              	.LCFI139:
 3101              		.cfi_def_cfa_register 13
 3102              		@ sp needed
 3103 006c 80BD     		pop	{r7, pc}
 3104              		.cfi_endproc
 3105              	.LFE162:
 3107              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 3108              		.align	1
 3109              		.global	HAL_RTCEx_BKUPWrite
 3110              		.syntax unified
 3111              		.thumb
 3112              		.thumb_func
 3113              		.fpu fpv4-sp-d16
 3115              	HAL_RTCEx_BKUPWrite:
 3116              	.LFB163:
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /** @defgroup RTCEx_Group3 Extension Peripheral Control functions 
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief   Extension Peripheral Control functions 
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****               ##### Extension Peripheral Control functions #####
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     [..]
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
ARM GAS  /tmp/cc2l9dGw.s 			page 78


1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Writes a data in a specified RTC Backup data register.
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                 specify the register.
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified RTC Backup data register.                     
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3117              		.loc 1 1334 0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 24
 3120              		@ frame_needed = 1, uses_anonymous_args = 0
 3121              		@ link register save eliminated.
 3122 0000 80B4     		push	{r7}
 3123              	.LCFI140:
 3124              		.cfi_def_cfa_offset 4
 3125              		.cfi_offset 7, -4
 3126 0002 87B0     		sub	sp, sp, #28
 3127              	.LCFI141:
 3128              		.cfi_def_cfa_offset 32
 3129 0004 00AF     		add	r7, sp, #0
 3130              	.LCFI142:
 3131              		.cfi_def_cfa_register 7
 3132 0006 F860     		str	r0, [r7, #12]
 3133 0008 B960     		str	r1, [r7, #8]
 3134 000a 7A60     		str	r2, [r7, #4]
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmp = 0;
 3135              		.loc 1 1335 0
 3136 000c 0023     		movs	r3, #0
 3137 000e 7B61     		str	r3, [r7, #20]
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 3138              		.loc 1 1340 0
 3139 0010 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 79


 3140 0012 1B68     		ldr	r3, [r3]
 3141 0014 5033     		adds	r3, r3, #80
 3142 0016 7B61     		str	r3, [r7, #20]
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4);
 3143              		.loc 1 1341 0
 3144 0018 BB68     		ldr	r3, [r7, #8]
 3145 001a 9B00     		lsls	r3, r3, #2
 3146 001c 7A69     		ldr	r2, [r7, #20]
 3147 001e 1344     		add	r3, r3, r2
 3148 0020 7B61     		str	r3, [r7, #20]
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Write the specified register */
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 3149              		.loc 1 1344 0
 3150 0022 7B69     		ldr	r3, [r7, #20]
 3151 0024 7A68     		ldr	r2, [r7, #4]
 3152 0026 1A60     		str	r2, [r3]
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3153              		.loc 1 1345 0
 3154 0028 00BF     		nop
 3155 002a 1C37     		adds	r7, r7, #28
 3156              	.LCFI143:
 3157              		.cfi_def_cfa_offset 4
 3158 002c BD46     		mov	sp, r7
 3159              	.LCFI144:
 3160              		.cfi_def_cfa_register 13
 3161              		@ sp needed
 3162 002e 5DF8047B 		ldr	r7, [sp], #4
 3163              	.LCFI145:
 3164              		.cfi_restore 7
 3165              		.cfi_def_cfa_offset 0
 3166 0032 7047     		bx	lr
 3167              		.cfi_endproc
 3168              	.LFE163:
 3170              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 3171              		.align	1
 3172              		.global	HAL_RTCEx_BKUPRead
 3173              		.syntax unified
 3174              		.thumb
 3175              		.thumb_func
 3176              		.fpu fpv4-sp-d16
 3178              	HAL_RTCEx_BKUPRead:
 3179              	.LFB164:
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC. 
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                                 specify the register.                   
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval Read value
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3180              		.loc 1 1357 0
 3181              		.cfi_startproc
ARM GAS  /tmp/cc2l9dGw.s 			page 80


 3182              		@ args = 0, pretend = 0, frame = 16
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184              		@ link register save eliminated.
 3185 0000 80B4     		push	{r7}
 3186              	.LCFI146:
 3187              		.cfi_def_cfa_offset 4
 3188              		.cfi_offset 7, -4
 3189 0002 85B0     		sub	sp, sp, #20
 3190              	.LCFI147:
 3191              		.cfi_def_cfa_offset 24
 3192 0004 00AF     		add	r7, sp, #0
 3193              	.LCFI148:
 3194              		.cfi_def_cfa_register 7
 3195 0006 7860     		str	r0, [r7, #4]
 3196 0008 3960     		str	r1, [r7]
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tmp = 0;
 3197              		.loc 1 1358 0
 3198 000a 0023     		movs	r3, #0
 3199 000c FB60     		str	r3, [r7, #12]
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 3200              		.loc 1 1363 0
 3201 000e 7B68     		ldr	r3, [r7, #4]
 3202 0010 1B68     		ldr	r3, [r3]
 3203 0012 5033     		adds	r3, r3, #80
 3204 0014 FB60     		str	r3, [r7, #12]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4);
 3205              		.loc 1 1364 0
 3206 0016 3B68     		ldr	r3, [r7]
 3207 0018 9B00     		lsls	r3, r3, #2
 3208 001a FA68     		ldr	r2, [r7, #12]
 3209 001c 1344     		add	r3, r3, r2
 3210 001e FB60     		str	r3, [r7, #12]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Read the specified register */
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 3211              		.loc 1 1367 0
 3212 0020 FB68     		ldr	r3, [r7, #12]
 3213 0022 1B68     		ldr	r3, [r3]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3214              		.loc 1 1368 0
 3215 0024 1846     		mov	r0, r3
 3216 0026 1437     		adds	r7, r7, #20
 3217              	.LCFI149:
 3218              		.cfi_def_cfa_offset 4
 3219 0028 BD46     		mov	sp, r7
 3220              	.LCFI150:
 3221              		.cfi_def_cfa_register 13
 3222              		@ sp needed
 3223 002a 5DF8047B 		ldr	r7, [sp], #4
 3224              	.LCFI151:
 3225              		.cfi_restore 7
 3226              		.cfi_def_cfa_offset 0
 3227 002e 7047     		bx	lr
ARM GAS  /tmp/cc2l9dGw.s 			page 81


 3228              		.cfi_endproc
 3229              	.LFE164:
 3231              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 3232              		.align	1
 3233              		.global	HAL_RTCEx_SetSmoothCalib
 3234              		.syntax unified
 3235              		.thumb
 3236              		.thumb_func
 3237              		.fpu fpv4-sp-d16
 3239              	HAL_RTCEx_SetSmoothCalib:
 3240              	.LFB165:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Sets the Smooth calibration parameters.
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.  
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulses every 2*11 pulses.
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  SmouthCalibMinusPulsesValue Select the value of CALM[80] bits.
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses 
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field 
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         SmouthCalibMinusPulsesValue must be equal to 0.  
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3241              		.loc 1 1391 0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 24
 3244              		@ frame_needed = 1, uses_anonymous_args = 0
 3245 0000 80B5     		push	{r7, lr}
 3246              	.LCFI152:
 3247              		.cfi_def_cfa_offset 8
 3248              		.cfi_offset 7, -8
 3249              		.cfi_offset 14, -4
 3250 0002 86B0     		sub	sp, sp, #24
 3251              	.LCFI153:
 3252              		.cfi_def_cfa_offset 32
 3253 0004 00AF     		add	r7, sp, #0
 3254              	.LCFI154:
 3255              		.cfi_def_cfa_register 7
 3256 0006 F860     		str	r0, [r7, #12]
 3257 0008 B960     		str	r1, [r7, #8]
 3258 000a 7A60     		str	r2, [r7, #4]
 3259 000c 3B60     		str	r3, [r7]
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 3260              		.loc 1 1392 0
 3261 000e 0023     		movs	r3, #0
 3262 0010 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/cc2l9dGw.s 			page 82


1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmouthCalibMinusPulsesValue));
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3263              		.loc 1 1400 0
 3264 0012 FB68     		ldr	r3, [r7, #12]
 3265 0014 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3266 0016 012B     		cmp	r3, #1
 3267 0018 01D1     		bne	.L136
 3268              		.loc 1 1400 0 is_stmt 0 discriminator 1
 3269 001a 0223     		movs	r3, #2
 3270 001c 47E0     		b	.L137
 3271              	.L136:
 3272              		.loc 1 1400 0 discriminator 2
 3273 001e FB68     		ldr	r3, [r7, #12]
 3274 0020 0122     		movs	r2, #1
 3275 0022 1A77     		strb	r2, [r3, #28]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3276              		.loc 1 1402 0 is_stmt 1 discriminator 2
 3277 0024 FB68     		ldr	r3, [r7, #12]
 3278 0026 0222     		movs	r2, #2
 3279 0028 5A77     		strb	r2, [r3, #29]
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3280              		.loc 1 1405 0 discriminator 2
 3281 002a FB68     		ldr	r3, [r7, #12]
 3282 002c 1B68     		ldr	r3, [r3]
 3283 002e CA22     		movs	r2, #202
 3284 0030 5A62     		str	r2, [r3, #36]
 3285 0032 FB68     		ldr	r3, [r7, #12]
 3286 0034 1B68     		ldr	r3, [r3]
 3287 0036 5322     		movs	r2, #83
 3288 0038 5A62     		str	r2, [r3, #36]
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 3289              		.loc 1 1408 0 discriminator 2
 3290 003a FB68     		ldr	r3, [r7, #12]
 3291 003c 1B68     		ldr	r3, [r3]
 3292 003e DB68     		ldr	r3, [r3, #12]
 3293 0040 03F48033 		and	r3, r3, #65536
 3294 0044 002B     		cmp	r3, #0
 3295 0046 1ED0     		beq	.L138
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3296              		.loc 1 1411 0
 3297 0048 FFF7FEFF 		bl	HAL_GetTick
 3298 004c 7861     		str	r0, [r7, #20]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
ARM GAS  /tmp/cc2l9dGw.s 			page 83


1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 3299              		.loc 1 1414 0
 3300 004e 13E0     		b	.L139
 3301              	.L140:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 3302              		.loc 1 1416 0
 3303 0050 FFF7FEFF 		bl	HAL_GetTick
 3304 0054 0246     		mov	r2, r0
 3305 0056 7B69     		ldr	r3, [r7, #20]
 3306 0058 D31A     		subs	r3, r2, r3
 3307 005a B3F57A7F 		cmp	r3, #1000
 3308 005e 0BD9     		bls	.L139
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3309              		.loc 1 1419 0
 3310 0060 FB68     		ldr	r3, [r7, #12]
 3311 0062 1B68     		ldr	r3, [r3]
 3312 0064 FF22     		movs	r2, #255
 3313 0066 5A62     		str	r2, [r3, #36]
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Change RTC state */
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 3314              		.loc 1 1422 0
 3315 0068 FB68     		ldr	r3, [r7, #12]
 3316 006a 0322     		movs	r2, #3
 3317 006c 5A77     		strb	r2, [r3, #29]
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */ 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3318              		.loc 1 1425 0
 3319 006e FB68     		ldr	r3, [r7, #12]
 3320 0070 0022     		movs	r2, #0
 3321 0072 1A77     		strb	r2, [r3, #28]
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3322              		.loc 1 1427 0
 3323 0074 0323     		movs	r3, #3
 3324 0076 1AE0     		b	.L137
 3325              	.L139:
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 3326              		.loc 1 1414 0
 3327 0078 FB68     		ldr	r3, [r7, #12]
 3328 007a 1B68     		ldr	r3, [r3]
 3329 007c DB68     		ldr	r3, [r3, #12]
 3330 007e 03F48033 		and	r3, r3, #65536
 3331 0082 002B     		cmp	r3, #0
 3332 0084 E4D1     		bne	.L140
 3333              	.L138:
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)((uint32_t)SmoothCalibPeriod | (uint32_t)SmoothCalibPlusPulses |
 3334              		.loc 1 1433 0
ARM GAS  /tmp/cc2l9dGw.s 			page 84


 3335 0086 BA68     		ldr	r2, [r7, #8]
 3336 0088 7B68     		ldr	r3, [r7, #4]
 3337 008a 42EA0301 		orr	r1, r2, r3
 3338 008e FB68     		ldr	r3, [r7, #12]
 3339 0090 1B68     		ldr	r3, [r3]
 3340 0092 3A68     		ldr	r2, [r7]
 3341 0094 0A43     		orrs	r2, r2, r1
 3342 0096 DA63     		str	r2, [r3, #60]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3343              		.loc 1 1436 0
 3344 0098 FB68     		ldr	r3, [r7, #12]
 3345 009a 1B68     		ldr	r3, [r3]
 3346 009c FF22     		movs	r2, #255
 3347 009e 5A62     		str	r2, [r3, #36]
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3348              		.loc 1 1439 0
 3349 00a0 FB68     		ldr	r3, [r7, #12]
 3350 00a2 0122     		movs	r2, #1
 3351 00a4 5A77     		strb	r2, [r3, #29]
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3352              		.loc 1 1442 0
 3353 00a6 FB68     		ldr	r3, [r7, #12]
 3354 00a8 0022     		movs	r2, #0
 3355 00aa 1A77     		strb	r2, [r3, #28]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3356              		.loc 1 1444 0
 3357 00ac 0023     		movs	r3, #0
 3358              	.L137:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3359              		.loc 1 1445 0
 3360 00ae 1846     		mov	r0, r3
 3361 00b0 1837     		adds	r7, r7, #24
 3362              	.LCFI155:
 3363              		.cfi_def_cfa_offset 8
 3364 00b2 BD46     		mov	sp, r7
 3365              	.LCFI156:
 3366              		.cfi_def_cfa_register 13
 3367              		@ sp needed
 3368 00b4 80BD     		pop	{r7, pc}
 3369              		.cfi_endproc
 3370              	.LFE165:
 3372              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 3373              		.align	1
 3374              		.global	HAL_RTCEx_SetSynchroShift
 3375              		.syntax unified
 3376              		.thumb
 3377              		.thumb_func
 3378              		.fpu fpv4-sp-d16
 3380              	HAL_RTCEx_SetSynchroShift:
 3381              	.LFB166:
ARM GAS  /tmp/cc2l9dGw.s 			page 85


1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Configures the Synchronization Shift Control Settings.
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register. 
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar. 
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3382              		.loc 1 1461 0
 3383              		.cfi_startproc
 3384              		@ args = 0, pretend = 0, frame = 24
 3385              		@ frame_needed = 1, uses_anonymous_args = 0
 3386 0000 80B5     		push	{r7, lr}
 3387              	.LCFI157:
 3388              		.cfi_def_cfa_offset 8
 3389              		.cfi_offset 7, -8
 3390              		.cfi_offset 14, -4
 3391 0002 86B0     		sub	sp, sp, #24
 3392              	.LCFI158:
 3393              		.cfi_def_cfa_offset 32
 3394 0004 00AF     		add	r7, sp, #0
 3395              	.LCFI159:
 3396              		.cfi_def_cfa_register 7
 3397 0006 F860     		str	r0, [r7, #12]
 3398 0008 B960     		str	r1, [r7, #8]
 3399 000a 7A60     		str	r2, [r7, #4]
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0;
 3400              		.loc 1 1462 0
 3401 000c 0023     		movs	r3, #0
 3402 000e 7B61     		str	r3, [r7, #20]
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3403              		.loc 1 1469 0
 3404 0010 FB68     		ldr	r3, [r7, #12]
 3405 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3406 0014 012B     		cmp	r3, #1
 3407 0016 01D1     		bne	.L142
 3408              		.loc 1 1469 0 is_stmt 0 discriminator 1
 3409 0018 0223     		movs	r3, #2
 3410 001a 69E0     		b	.L143
 3411              	.L142:
 3412              		.loc 1 1469 0 discriminator 2
 3413 001c FB68     		ldr	r3, [r7, #12]
 3414 001e 0122     		movs	r2, #1
ARM GAS  /tmp/cc2l9dGw.s 			page 86


 3415 0020 1A77     		strb	r2, [r3, #28]
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3416              		.loc 1 1471 0 is_stmt 1 discriminator 2
 3417 0022 FB68     		ldr	r3, [r7, #12]
 3418 0024 0222     		movs	r2, #2
 3419 0026 5A77     		strb	r2, [r3, #29]
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3420              		.loc 1 1474 0 discriminator 2
 3421 0028 FB68     		ldr	r3, [r7, #12]
 3422 002a 1B68     		ldr	r3, [r3]
 3423 002c CA22     		movs	r2, #202
 3424 002e 5A62     		str	r2, [r3, #36]
 3425 0030 FB68     		ldr	r3, [r7, #12]
 3426 0032 1B68     		ldr	r3, [r3]
 3427 0034 5322     		movs	r2, #83
 3428 0036 5A62     		str	r2, [r3, #36]
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3429              		.loc 1 1477 0 discriminator 2
 3430 0038 FFF7FEFF 		bl	HAL_GetTick
 3431 003c 7861     		str	r0, [r7, #20]
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != RESET)
 3432              		.loc 1 1480 0 discriminator 2
 3433 003e 13E0     		b	.L144
 3434              	.L145:
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 3435              		.loc 1 1482 0
 3436 0040 FFF7FEFF 		bl	HAL_GetTick
 3437 0044 0246     		mov	r2, r0
 3438 0046 7B69     		ldr	r3, [r7, #20]
 3439 0048 D31A     		subs	r3, r2, r3
 3440 004a B3F57A7F 		cmp	r3, #1000
 3441 004e 0BD9     		bls	.L144
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {  
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 3442              		.loc 1 1485 0
 3443 0050 FB68     		ldr	r3, [r7, #12]
 3444 0052 1B68     		ldr	r3, [r3]
 3445 0054 FF22     		movs	r2, #255
 3446 0056 5A62     		str	r2, [r3, #36]
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3447              		.loc 1 1487 0
 3448 0058 FB68     		ldr	r3, [r7, #12]
 3449 005a 0322     		movs	r2, #3
 3450 005c 5A77     		strb	r2, [r3, #29]
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         /* Process Unlocked */ 
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/cc2l9dGw.s 			page 87


 3451              		.loc 1 1490 0
 3452 005e FB68     		ldr	r3, [r7, #12]
 3453 0060 0022     		movs	r2, #0
 3454 0062 1A77     		strb	r2, [r3, #28]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3455              		.loc 1 1492 0
 3456 0064 0323     		movs	r3, #3
 3457 0066 43E0     		b	.L143
 3458              	.L144:
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
 3459              		.loc 1 1480 0
 3460 0068 FB68     		ldr	r3, [r7, #12]
 3461 006a 1B68     		ldr	r3, [r3]
 3462 006c DB68     		ldr	r3, [r3, #12]
 3463 006e 03F00803 		and	r3, r3, #8
 3464 0072 002B     		cmp	r3, #0
 3465 0074 E4D1     		bne	.L145
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == RESET)
 3466              		.loc 1 1497 0
 3467 0076 FB68     		ldr	r3, [r7, #12]
 3468 0078 1B68     		ldr	r3, [r3]
 3469 007a 9B68     		ldr	r3, [r3, #8]
 3470 007c 03F01003 		and	r3, r3, #16
 3471 0080 002B     		cmp	r3, #0
 3472 0082 1ED1     		bne	.L146
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
 3473              		.loc 1 1500 0
 3474 0084 FB68     		ldr	r3, [r7, #12]
 3475 0086 1B68     		ldr	r3, [r3]
 3476 0088 7968     		ldr	r1, [r7, #4]
 3477 008a BA68     		ldr	r2, [r7, #8]
 3478 008c 0A43     		orrs	r2, r2, r1
 3479 008e DA62     		str	r2, [r3, #44]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 3480              		.loc 1 1503 0
 3481 0090 FB68     		ldr	r3, [r7, #12]
 3482 0092 1B68     		ldr	r3, [r3]
 3483 0094 9B68     		ldr	r3, [r3, #8]
 3484 0096 03F02003 		and	r3, r3, #32
 3485 009a 002B     		cmp	r3, #0
 3486 009c 1DD1     		bne	.L147
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 3487              		.loc 1 1505 0
 3488 009e F868     		ldr	r0, [r7, #12]
 3489 00a0 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 3490 00a4 0346     		mov	r3, r0
 3491 00a6 002B     		cmp	r3, #0
ARM GAS  /tmp/cc2l9dGw.s 			page 88


 3492 00a8 17D0     		beq	.L147
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         {
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 3493              		.loc 1 1508 0
 3494 00aa FB68     		ldr	r3, [r7, #12]
 3495 00ac 1B68     		ldr	r3, [r3]
 3496 00ae FF22     		movs	r2, #255
 3497 00b0 5A62     		str	r2, [r3, #36]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 3498              		.loc 1 1510 0
 3499 00b2 FB68     		ldr	r3, [r7, #12]
 3500 00b4 0422     		movs	r2, #4
 3501 00b6 5A77     		strb	r2, [r3, #29]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           /* Process Unlocked */ 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
 3502              		.loc 1 1513 0
 3503 00b8 FB68     		ldr	r3, [r7, #12]
 3504 00ba 0022     		movs	r2, #0
 3505 00bc 1A77     		strb	r2, [r3, #28]
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****           return HAL_ERROR;
 3506              		.loc 1 1515 0
 3507 00be 0123     		movs	r3, #1
 3508 00c0 16E0     		b	.L143
 3509              	.L146:
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         }
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     else
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3510              		.loc 1 1522 0
 3511 00c2 FB68     		ldr	r3, [r7, #12]
 3512 00c4 1B68     		ldr	r3, [r3]
 3513 00c6 FF22     		movs	r2, #255
 3514 00c8 5A62     		str	r2, [r3, #36]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Change RTC state */
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR; 
 3515              		.loc 1 1525 0
 3516 00ca FB68     		ldr	r3, [r7, #12]
 3517 00cc 0422     		movs	r2, #4
 3518 00ce 5A77     		strb	r2, [r3, #29]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       /* Process Unlocked */ 
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 3519              		.loc 1 1528 0
 3520 00d0 FB68     		ldr	r3, [r7, #12]
 3521 00d2 0022     		movs	r2, #0
 3522 00d4 1A77     		strb	r2, [r3, #28]
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       return HAL_ERROR;
 3523              		.loc 1 1530 0
ARM GAS  /tmp/cc2l9dGw.s 			page 89


 3524 00d6 0123     		movs	r3, #1
 3525 00d8 0AE0     		b	.L143
 3526              	.L147:
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3527              		.loc 1 1534 0
 3528 00da FB68     		ldr	r3, [r7, #12]
 3529 00dc 1B68     		ldr	r3, [r3]
 3530 00de FF22     		movs	r2, #255
 3531 00e0 5A62     		str	r2, [r3, #36]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3532              		.loc 1 1537 0
 3533 00e2 FB68     		ldr	r3, [r7, #12]
 3534 00e4 0122     		movs	r2, #1
 3535 00e6 5A77     		strb	r2, [r3, #29]
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3536              		.loc 1 1540 0
 3537 00e8 FB68     		ldr	r3, [r7, #12]
 3538 00ea 0022     		movs	r2, #0
 3539 00ec 1A77     		strb	r2, [r3, #28]
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3540              		.loc 1 1542 0
 3541 00ee 0023     		movs	r3, #0
 3542              	.L143:
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3543              		.loc 1 1543 0
 3544 00f0 1846     		mov	r0, r3
 3545 00f2 1837     		adds	r7, r7, #24
 3546              	.LCFI160:
 3547              		.cfi_def_cfa_offset 8
 3548 00f4 BD46     		mov	sp, r7
 3549              	.LCFI161:
 3550              		.cfi_def_cfa_register 13
 3551              		@ sp needed
 3552 00f6 80BD     		pop	{r7, pc}
 3553              		.cfi_endproc
 3554              	.LFE166:
 3556              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 3557              		.align	1
 3558              		.global	HAL_RTCEx_SetCalibrationOutPut
 3559              		.syntax unified
 3560              		.thumb
 3561              		.thumb_func
 3562              		.fpu fpv4-sp-d16
 3564              	HAL_RTCEx_SetCalibrationOutPut:
 3565              	.LFB167:
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Configures the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
ARM GAS  /tmp/cc2l9dGw.s 			page 90


1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz. 
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3566              		.loc 1 1556 0
 3567              		.cfi_startproc
 3568              		@ args = 0, pretend = 0, frame = 8
 3569              		@ frame_needed = 1, uses_anonymous_args = 0
 3570              		@ link register save eliminated.
 3571 0000 80B4     		push	{r7}
 3572              	.LCFI162:
 3573              		.cfi_def_cfa_offset 4
 3574              		.cfi_offset 7, -4
 3575 0002 83B0     		sub	sp, sp, #12
 3576              	.LCFI163:
 3577              		.cfi_def_cfa_offset 16
 3578 0004 00AF     		add	r7, sp, #0
 3579              	.LCFI164:
 3580              		.cfi_def_cfa_register 7
 3581 0006 7860     		str	r0, [r7, #4]
 3582 0008 3960     		str	r1, [r7]
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Check the parameters */
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3583              		.loc 1 1561 0
 3584 000a 7B68     		ldr	r3, [r7, #4]
 3585 000c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3586 000e 012B     		cmp	r3, #1
 3587 0010 01D1     		bne	.L149
 3588              		.loc 1 1561 0 is_stmt 0 discriminator 1
 3589 0012 0223     		movs	r3, #2
 3590 0014 30E0     		b	.L150
 3591              	.L149:
 3592              		.loc 1 1561 0 discriminator 2
 3593 0016 7B68     		ldr	r3, [r7, #4]
 3594 0018 0122     		movs	r2, #1
 3595 001a 1A77     		strb	r2, [r3, #28]
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3596              		.loc 1 1563 0 is_stmt 1 discriminator 2
 3597 001c 7B68     		ldr	r3, [r7, #4]
 3598 001e 0222     		movs	r2, #2
 3599 0020 5A77     		strb	r2, [r3, #29]
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3600              		.loc 1 1566 0 discriminator 2
 3601 0022 7B68     		ldr	r3, [r7, #4]
 3602 0024 1B68     		ldr	r3, [r3]
 3603 0026 CA22     		movs	r2, #202
ARM GAS  /tmp/cc2l9dGw.s 			page 91


 3604 0028 5A62     		str	r2, [r3, #36]
 3605 002a 7B68     		ldr	r3, [r7, #4]
 3606 002c 1B68     		ldr	r3, [r3]
 3607 002e 5322     		movs	r2, #83
 3608 0030 5A62     		str	r2, [r3, #36]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear flags before config */
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 3609              		.loc 1 1569 0 discriminator 2
 3610 0032 7B68     		ldr	r3, [r7, #4]
 3611 0034 1B68     		ldr	r3, [r3]
 3612 0036 9A68     		ldr	r2, [r3, #8]
 3613 0038 7B68     		ldr	r3, [r7, #4]
 3614 003a 1B68     		ldr	r3, [r3]
 3615 003c 22F40022 		bic	r2, r2, #524288
 3616 0040 9A60     		str	r2, [r3, #8]
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 3617              		.loc 1 1572 0 discriminator 2
 3618 0042 7B68     		ldr	r3, [r7, #4]
 3619 0044 1B68     		ldr	r3, [r3]
 3620 0046 9968     		ldr	r1, [r3, #8]
 3621 0048 7B68     		ldr	r3, [r7, #4]
 3622 004a 1B68     		ldr	r3, [r3]
 3623 004c 3A68     		ldr	r2, [r7]
 3624 004e 0A43     		orrs	r2, r2, r1
 3625 0050 9A60     		str	r2, [r3, #8]
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 3626              		.loc 1 1574 0 discriminator 2
 3627 0052 7B68     		ldr	r3, [r7, #4]
 3628 0054 1B68     		ldr	r3, [r3]
 3629 0056 9A68     		ldr	r2, [r3, #8]
 3630 0058 7B68     		ldr	r3, [r7, #4]
 3631 005a 1B68     		ldr	r3, [r3]
 3632 005c 42F40002 		orr	r2, r2, #8388608
 3633 0060 9A60     		str	r2, [r3, #8]
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3634              		.loc 1 1577 0 discriminator 2
 3635 0062 7B68     		ldr	r3, [r7, #4]
 3636 0064 1B68     		ldr	r3, [r3]
 3637 0066 FF22     		movs	r2, #255
 3638 0068 5A62     		str	r2, [r3, #36]
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3639              		.loc 1 1580 0 discriminator 2
 3640 006a 7B68     		ldr	r3, [r7, #4]
 3641 006c 0122     		movs	r2, #1
 3642 006e 5A77     		strb	r2, [r3, #29]
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3643              		.loc 1 1583 0 discriminator 2
ARM GAS  /tmp/cc2l9dGw.s 			page 92


 3644 0070 7B68     		ldr	r3, [r7, #4]
 3645 0072 0022     		movs	r2, #0
 3646 0074 1A77     		strb	r2, [r3, #28]
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3647              		.loc 1 1585 0 discriminator 2
 3648 0076 0023     		movs	r3, #0
 3649              	.L150:
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3650              		.loc 1 1586 0
 3651 0078 1846     		mov	r0, r3
 3652 007a 0C37     		adds	r7, r7, #12
 3653              	.LCFI165:
 3654              		.cfi_def_cfa_offset 4
 3655 007c BD46     		mov	sp, r7
 3656              	.LCFI166:
 3657              		.cfi_def_cfa_register 13
 3658              		@ sp needed
 3659 007e 5DF8047B 		ldr	r7, [sp], #4
 3660              	.LCFI167:
 3661              		.cfi_restore 7
 3662              		.cfi_def_cfa_offset 0
 3663 0082 7047     		bx	lr
 3664              		.cfi_endproc
 3665              	.LFE167:
 3667              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 3668              		.align	1
 3669              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 3670              		.syntax unified
 3671              		.thumb
 3672              		.thumb_func
 3673              		.fpu fpv4-sp-d16
 3675              	HAL_RTCEx_DeactivateCalibrationOutPut:
 3676              	.LFB168:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Deactivates the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3677              		.loc 1 1595 0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 8
 3680              		@ frame_needed = 1, uses_anonymous_args = 0
 3681              		@ link register save eliminated.
 3682 0000 80B4     		push	{r7}
 3683              	.LCFI168:
 3684              		.cfi_def_cfa_offset 4
 3685              		.cfi_offset 7, -4
 3686 0002 83B0     		sub	sp, sp, #12
 3687              	.LCFI169:
 3688              		.cfi_def_cfa_offset 16
 3689 0004 00AF     		add	r7, sp, #0
 3690              	.LCFI170:
ARM GAS  /tmp/cc2l9dGw.s 			page 93


 3691              		.cfi_def_cfa_register 7
 3692 0006 7860     		str	r0, [r7, #4]
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3693              		.loc 1 1597 0
 3694 0008 7B68     		ldr	r3, [r7, #4]
 3695 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3696 000c 012B     		cmp	r3, #1
 3697 000e 01D1     		bne	.L152
 3698              		.loc 1 1597 0 is_stmt 0 discriminator 1
 3699 0010 0223     		movs	r3, #2
 3700 0012 20E0     		b	.L153
 3701              	.L152:
 3702              		.loc 1 1597 0 discriminator 2
 3703 0014 7B68     		ldr	r3, [r7, #4]
 3704 0016 0122     		movs	r2, #1
 3705 0018 1A77     		strb	r2, [r3, #28]
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3706              		.loc 1 1599 0 is_stmt 1 discriminator 2
 3707 001a 7B68     		ldr	r3, [r7, #4]
 3708 001c 0222     		movs	r2, #2
 3709 001e 5A77     		strb	r2, [r3, #29]
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3710              		.loc 1 1602 0 discriminator 2
 3711 0020 7B68     		ldr	r3, [r7, #4]
 3712 0022 1B68     		ldr	r3, [r3]
 3713 0024 CA22     		movs	r2, #202
 3714 0026 5A62     		str	r2, [r3, #36]
 3715 0028 7B68     		ldr	r3, [r7, #4]
 3716 002a 1B68     		ldr	r3, [r3]
 3717 002c 5322     		movs	r2, #83
 3718 002e 5A62     		str	r2, [r3, #36]
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 3719              		.loc 1 1604 0 discriminator 2
 3720 0030 7B68     		ldr	r3, [r7, #4]
 3721 0032 1B68     		ldr	r3, [r3]
 3722 0034 9A68     		ldr	r2, [r3, #8]
 3723 0036 7B68     		ldr	r3, [r7, #4]
 3724 0038 1B68     		ldr	r3, [r3]
 3725 003a 22F40002 		bic	r2, r2, #8388608
 3726 003e 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3727              		.loc 1 1607 0 discriminator 2
 3728 0040 7B68     		ldr	r3, [r7, #4]
 3729 0042 1B68     		ldr	r3, [r3]
 3730 0044 FF22     		movs	r2, #255
 3731 0046 5A62     		str	r2, [r3, #36]
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3732              		.loc 1 1610 0 discriminator 2
ARM GAS  /tmp/cc2l9dGw.s 			page 94


 3733 0048 7B68     		ldr	r3, [r7, #4]
 3734 004a 0122     		movs	r2, #1
 3735 004c 5A77     		strb	r2, [r3, #29]
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3736              		.loc 1 1613 0 discriminator 2
 3737 004e 7B68     		ldr	r3, [r7, #4]
 3738 0050 0022     		movs	r2, #0
 3739 0052 1A77     		strb	r2, [r3, #28]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3740              		.loc 1 1615 0 discriminator 2
 3741 0054 0023     		movs	r3, #0
 3742              	.L153:
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3743              		.loc 1 1616 0
 3744 0056 1846     		mov	r0, r3
 3745 0058 0C37     		adds	r7, r7, #12
 3746              	.LCFI171:
 3747              		.cfi_def_cfa_offset 4
 3748 005a BD46     		mov	sp, r7
 3749              	.LCFI172:
 3750              		.cfi_def_cfa_register 13
 3751              		@ sp needed
 3752 005c 5DF8047B 		ldr	r7, [sp], #4
 3753              	.LCFI173:
 3754              		.cfi_restore 7
 3755              		.cfi_def_cfa_offset 0
 3756 0060 7047     		bx	lr
 3757              		.cfi_endproc
 3758              	.LFE168:
 3760              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 3761              		.align	1
 3762              		.global	HAL_RTCEx_SetRefClock
 3763              		.syntax unified
 3764              		.thumb
 3765              		.thumb_func
 3766              		.fpu fpv4-sp-d16
 3768              	HAL_RTCEx_SetRefClock:
 3769              	.LFB169:
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Enables the RTC reference clock detection.
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 3770              		.loc 1 1625 0
 3771              		.cfi_startproc
 3772              		@ args = 0, pretend = 0, frame = 8
 3773              		@ frame_needed = 1, uses_anonymous_args = 0
 3774 0000 80B5     		push	{r7, lr}
 3775              	.LCFI174:
 3776              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc2l9dGw.s 			page 95


 3777              		.cfi_offset 7, -8
 3778              		.cfi_offset 14, -4
 3779 0002 82B0     		sub	sp, sp, #8
 3780              	.LCFI175:
 3781              		.cfi_def_cfa_offset 16
 3782 0004 00AF     		add	r7, sp, #0
 3783              	.LCFI176:
 3784              		.cfi_def_cfa_register 7
 3785 0006 7860     		str	r0, [r7, #4]
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3786              		.loc 1 1627 0
 3787 0008 7B68     		ldr	r3, [r7, #4]
 3788 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3789 000c 012B     		cmp	r3, #1
 3790 000e 01D1     		bne	.L155
 3791              		.loc 1 1627 0 is_stmt 0 discriminator 1
 3792 0010 0223     		movs	r3, #2
 3793 0012 3AE0     		b	.L156
 3794              	.L155:
 3795              		.loc 1 1627 0 discriminator 2
 3796 0014 7B68     		ldr	r3, [r7, #4]
 3797 0016 0122     		movs	r2, #1
 3798 0018 1A77     		strb	r2, [r3, #28]
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3799              		.loc 1 1629 0 is_stmt 1 discriminator 2
 3800 001a 7B68     		ldr	r3, [r7, #4]
 3801 001c 0222     		movs	r2, #2
 3802 001e 5A77     		strb	r2, [r3, #29]
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3803              		.loc 1 1632 0 discriminator 2
 3804 0020 7B68     		ldr	r3, [r7, #4]
 3805 0022 1B68     		ldr	r3, [r3]
 3806 0024 CA22     		movs	r2, #202
 3807 0026 5A62     		str	r2, [r3, #36]
 3808 0028 7B68     		ldr	r3, [r7, #4]
 3809 002a 1B68     		ldr	r3, [r3]
 3810 002c 5322     		movs	r2, #83
 3811 002e 5A62     		str	r2, [r3, #36]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 3812              		.loc 1 1635 0 discriminator 2
 3813 0030 7868     		ldr	r0, [r7, #4]
 3814 0032 FFF7FEFF 		bl	RTC_EnterInitMode
 3815 0036 0346     		mov	r3, r0
 3816 0038 002B     		cmp	r3, #0
 3817 003a 0BD0     		beq	.L157
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 3818              		.loc 1 1638 0
 3819 003c 7B68     		ldr	r3, [r7, #4]
 3820 003e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 96


 3821 0040 FF22     		movs	r2, #255
 3822 0042 5A62     		str	r2, [r3, #36]
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3823              		.loc 1 1641 0
 3824 0044 7B68     		ldr	r3, [r7, #4]
 3825 0046 0422     		movs	r2, #4
 3826 0048 5A77     		strb	r2, [r3, #29]
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Process Unlocked */ 
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3827              		.loc 1 1644 0
 3828 004a 7B68     		ldr	r3, [r7, #4]
 3829 004c 0022     		movs	r2, #0
 3830 004e 1A77     		strb	r2, [r3, #28]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3831              		.loc 1 1646 0
 3832 0050 0123     		movs	r3, #1
 3833 0052 1AE0     		b	.L156
 3834              	.L157:
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 3835              		.loc 1 1650 0
 3836 0054 7B68     		ldr	r3, [r7, #4]
 3837 0056 1B68     		ldr	r3, [r3]
 3838 0058 9A68     		ldr	r2, [r3, #8]
 3839 005a 7B68     		ldr	r3, [r7, #4]
 3840 005c 1B68     		ldr	r3, [r3]
 3841 005e 42F01002 		orr	r2, r2, #16
 3842 0062 9A60     		str	r2, [r3, #8]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT; 
 3843              		.loc 1 1653 0
 3844 0064 7B68     		ldr	r3, [r7, #4]
 3845 0066 1B68     		ldr	r3, [r3]
 3846 0068 DA68     		ldr	r2, [r3, #12]
 3847 006a 7B68     		ldr	r3, [r7, #4]
 3848 006c 1B68     		ldr	r3, [r3]
 3849 006e 22F08002 		bic	r2, r2, #128
 3850 0072 DA60     		str	r2, [r3, #12]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3851              		.loc 1 1657 0
 3852 0074 7B68     		ldr	r3, [r7, #4]
 3853 0076 1B68     		ldr	r3, [r3]
 3854 0078 FF22     		movs	r2, #255
 3855 007a 5A62     		str	r2, [r3, #36]
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    /* Change RTC state */
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
ARM GAS  /tmp/cc2l9dGw.s 			page 97


 3856              		.loc 1 1660 0
 3857 007c 7B68     		ldr	r3, [r7, #4]
 3858 007e 0122     		movs	r2, #1
 3859 0080 5A77     		strb	r2, [r3, #29]
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3860              		.loc 1 1663 0
 3861 0082 7B68     		ldr	r3, [r7, #4]
 3862 0084 0022     		movs	r2, #0
 3863 0086 1A77     		strb	r2, [r3, #28]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3864              		.loc 1 1665 0
 3865 0088 0023     		movs	r3, #0
 3866              	.L156:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3867              		.loc 1 1666 0
 3868 008a 1846     		mov	r0, r3
 3869 008c 0837     		adds	r7, r7, #8
 3870              	.LCFI177:
 3871              		.cfi_def_cfa_offset 8
 3872 008e BD46     		mov	sp, r7
 3873              	.LCFI178:
 3874              		.cfi_def_cfa_register 13
 3875              		@ sp needed
 3876 0090 80BD     		pop	{r7, pc}
 3877              		.cfi_endproc
 3878              	.LFE169:
 3880              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 3881              		.align	1
 3882              		.global	HAL_RTCEx_DeactivateRefClock
 3883              		.syntax unified
 3884              		.thumb
 3885              		.thumb_func
 3886              		.fpu fpv4-sp-d16
 3888              	HAL_RTCEx_DeactivateRefClock:
 3889              	.LFB170:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.    
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** { 
 3890              		.loc 1 1675 0
 3891              		.cfi_startproc
 3892              		@ args = 0, pretend = 0, frame = 8
 3893              		@ frame_needed = 1, uses_anonymous_args = 0
 3894 0000 80B5     		push	{r7, lr}
 3895              	.LCFI179:
 3896              		.cfi_def_cfa_offset 8
 3897              		.cfi_offset 7, -8
 3898              		.cfi_offset 14, -4
 3899 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/cc2l9dGw.s 			page 98


 3900              	.LCFI180:
 3901              		.cfi_def_cfa_offset 16
 3902 0004 00AF     		add	r7, sp, #0
 3903              	.LCFI181:
 3904              		.cfi_def_cfa_register 7
 3905 0006 7860     		str	r0, [r7, #4]
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3906              		.loc 1 1677 0
 3907 0008 7B68     		ldr	r3, [r7, #4]
 3908 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3909 000c 012B     		cmp	r3, #1
 3910 000e 01D1     		bne	.L159
 3911              		.loc 1 1677 0 is_stmt 0 discriminator 1
 3912 0010 0223     		movs	r3, #2
 3913 0012 3AE0     		b	.L160
 3914              	.L159:
 3915              		.loc 1 1677 0 discriminator 2
 3916 0014 7B68     		ldr	r3, [r7, #4]
 3917 0016 0122     		movs	r2, #1
 3918 0018 1A77     		strb	r2, [r3, #28]
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3919              		.loc 1 1679 0 is_stmt 1 discriminator 2
 3920 001a 7B68     		ldr	r3, [r7, #4]
 3921 001c 0222     		movs	r2, #2
 3922 001e 5A77     		strb	r2, [r3, #29]
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3923              		.loc 1 1682 0 discriminator 2
 3924 0020 7B68     		ldr	r3, [r7, #4]
 3925 0022 1B68     		ldr	r3, [r3]
 3926 0024 CA22     		movs	r2, #202
 3927 0026 5A62     		str	r2, [r3, #36]
 3928 0028 7B68     		ldr	r3, [r7, #4]
 3929 002a 1B68     		ldr	r3, [r3]
 3930 002c 5322     		movs	r2, #83
 3931 002e 5A62     		str	r2, [r3, #36]
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 3932              		.loc 1 1685 0 discriminator 2
 3933 0030 7868     		ldr	r0, [r7, #4]
 3934 0032 FFF7FEFF 		bl	RTC_EnterInitMode
 3935 0036 0346     		mov	r3, r0
 3936 0038 002B     		cmp	r3, #0
 3937 003a 0BD0     		beq	.L161
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 3938              		.loc 1 1688 0
 3939 003c 7B68     		ldr	r3, [r7, #4]
 3940 003e 1B68     		ldr	r3, [r3]
 3941 0040 FF22     		movs	r2, #255
 3942 0042 5A62     		str	r2, [r3, #36]
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
ARM GAS  /tmp/cc2l9dGw.s 			page 99


1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Set RTC state*/
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3943              		.loc 1 1691 0
 3944 0044 7B68     		ldr	r3, [r7, #4]
 3945 0046 0422     		movs	r2, #4
 3946 0048 5A77     		strb	r2, [r3, #29]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Process Unlocked */ 
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3947              		.loc 1 1694 0
 3948 004a 7B68     		ldr	r3, [r7, #4]
 3949 004c 0022     		movs	r2, #0
 3950 004e 1A77     		strb	r2, [r3, #28]
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3951              		.loc 1 1696 0
 3952 0050 0123     		movs	r3, #1
 3953 0052 1AE0     		b	.L160
 3954              	.L161:
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   } 
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   else
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 3955              		.loc 1 1700 0
 3956 0054 7B68     		ldr	r3, [r7, #4]
 3957 0056 1B68     		ldr	r3, [r3]
 3958 0058 9A68     		ldr	r2, [r3, #8]
 3959 005a 7B68     		ldr	r3, [r7, #4]
 3960 005c 1B68     		ldr	r3, [r3]
 3961 005e 22F01002 		bic	r2, r2, #16
 3962 0062 9A60     		str	r2, [r3, #8]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT; 
 3963              		.loc 1 1703 0
 3964 0064 7B68     		ldr	r3, [r7, #4]
 3965 0066 1B68     		ldr	r3, [r3]
 3966 0068 DA68     		ldr	r2, [r3, #12]
 3967 006a 7B68     		ldr	r3, [r7, #4]
 3968 006c 1B68     		ldr	r3, [r3]
 3969 006e 22F08002 		bic	r2, r2, #128
 3970 0072 DA60     		str	r2, [r3, #12]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3971              		.loc 1 1707 0
 3972 0074 7B68     		ldr	r3, [r7, #4]
 3973 0076 1B68     		ldr	r3, [r3]
 3974 0078 FF22     		movs	r2, #255
 3975 007a 5A62     		str	r2, [r3, #36]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3976              		.loc 1 1710 0
 3977 007c 7B68     		ldr	r3, [r7, #4]
 3978 007e 0122     		movs	r2, #1
ARM GAS  /tmp/cc2l9dGw.s 			page 100


 3979 0080 5A77     		strb	r2, [r3, #29]
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3980              		.loc 1 1713 0
 3981 0082 7B68     		ldr	r3, [r7, #4]
 3982 0084 0022     		movs	r2, #0
 3983 0086 1A77     		strb	r2, [r3, #28]
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 3984              		.loc 1 1715 0
 3985 0088 0023     		movs	r3, #0
 3986              	.L160:
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 3987              		.loc 1 1716 0
 3988 008a 1846     		mov	r0, r3
 3989 008c 0837     		adds	r7, r7, #8
 3990              	.LCFI182:
 3991              		.cfi_def_cfa_offset 8
 3992 008e BD46     		mov	sp, r7
 3993              	.LCFI183:
 3994              		.cfi_def_cfa_register 13
 3995              		@ sp needed
 3996 0090 80BD     		pop	{r7, pc}
 3997              		.cfi_endproc
 3998              	.LFE170:
 4000              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 4001              		.align	1
 4002              		.global	HAL_RTCEx_EnableBypassShadow
 4003              		.syntax unified
 4004              		.thumb
 4005              		.thumb_func
 4006              		.fpu fpv4-sp-d16
 4008              	HAL_RTCEx_EnableBypassShadow:
 4009              	.LFB171:
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Enables the Bypass Shadow feature.
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.  
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 4010              		.loc 1 1727 0
 4011              		.cfi_startproc
 4012              		@ args = 0, pretend = 0, frame = 8
 4013              		@ frame_needed = 1, uses_anonymous_args = 0
 4014              		@ link register save eliminated.
 4015 0000 80B4     		push	{r7}
 4016              	.LCFI184:
 4017              		.cfi_def_cfa_offset 4
 4018              		.cfi_offset 7, -4
 4019 0002 83B0     		sub	sp, sp, #12
 4020              	.LCFI185:
ARM GAS  /tmp/cc2l9dGw.s 			page 101


 4021              		.cfi_def_cfa_offset 16
 4022 0004 00AF     		add	r7, sp, #0
 4023              	.LCFI186:
 4024              		.cfi_def_cfa_register 7
 4025 0006 7860     		str	r0, [r7, #4]
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4026              		.loc 1 1729 0
 4027 0008 7B68     		ldr	r3, [r7, #4]
 4028 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 4029 000c 012B     		cmp	r3, #1
 4030 000e 01D1     		bne	.L163
 4031              		.loc 1 1729 0 is_stmt 0 discriminator 1
 4032 0010 0223     		movs	r3, #2
 4033 0012 20E0     		b	.L164
 4034              	.L163:
 4035              		.loc 1 1729 0 discriminator 2
 4036 0014 7B68     		ldr	r3, [r7, #4]
 4037 0016 0122     		movs	r2, #1
 4038 0018 1A77     		strb	r2, [r3, #28]
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4039              		.loc 1 1731 0 is_stmt 1 discriminator 2
 4040 001a 7B68     		ldr	r3, [r7, #4]
 4041 001c 0222     		movs	r2, #2
 4042 001e 5A77     		strb	r2, [r3, #29]
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4043              		.loc 1 1734 0 discriminator 2
 4044 0020 7B68     		ldr	r3, [r7, #4]
 4045 0022 1B68     		ldr	r3, [r3]
 4046 0024 CA22     		movs	r2, #202
 4047 0026 5A62     		str	r2, [r3, #36]
 4048 0028 7B68     		ldr	r3, [r7, #4]
 4049 002a 1B68     		ldr	r3, [r3]
 4050 002c 5322     		movs	r2, #83
 4051 002e 5A62     		str	r2, [r3, #36]
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 4052              		.loc 1 1737 0 discriminator 2
 4053 0030 7B68     		ldr	r3, [r7, #4]
 4054 0032 1B68     		ldr	r3, [r3]
 4055 0034 9A68     		ldr	r2, [r3, #8]
 4056 0036 7B68     		ldr	r3, [r7, #4]
 4057 0038 1B68     		ldr	r3, [r3]
 4058 003a 42F02002 		orr	r2, r2, #32
 4059 003e 9A60     		str	r2, [r3, #8]
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4060              		.loc 1 1740 0 discriminator 2
 4061 0040 7B68     		ldr	r3, [r7, #4]
 4062 0042 1B68     		ldr	r3, [r3]
 4063 0044 FF22     		movs	r2, #255
 4064 0046 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cc2l9dGw.s 			page 102


1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 4065              		.loc 1 1743 0 discriminator 2
 4066 0048 7B68     		ldr	r3, [r7, #4]
 4067 004a 0122     		movs	r2, #1
 4068 004c 5A77     		strb	r2, [r3, #29]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4069              		.loc 1 1746 0 discriminator 2
 4070 004e 7B68     		ldr	r3, [r7, #4]
 4071 0050 0022     		movs	r2, #0
 4072 0052 1A77     		strb	r2, [r3, #28]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 4073              		.loc 1 1748 0 discriminator 2
 4074 0054 0023     		movs	r3, #0
 4075              	.L164:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4076              		.loc 1 1749 0
 4077 0056 1846     		mov	r0, r3
 4078 0058 0C37     		adds	r7, r7, #12
 4079              	.LCFI187:
 4080              		.cfi_def_cfa_offset 4
 4081 005a BD46     		mov	sp, r7
 4082              	.LCFI188:
 4083              		.cfi_def_cfa_register 13
 4084              		@ sp needed
 4085 005c 5DF8047B 		ldr	r7, [sp], #4
 4086              	.LCFI189:
 4087              		.cfi_restore 7
 4088              		.cfi_def_cfa_offset 0
 4089 0060 7047     		bx	lr
 4090              		.cfi_endproc
 4091              	.LFE171:
 4093              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 4094              		.align	1
 4095              		.global	HAL_RTCEx_DisableBypassShadow
 4096              		.syntax unified
 4097              		.thumb
 4098              		.thumb_func
 4099              		.fpu fpv4-sp-d16
 4101              	HAL_RTCEx_DisableBypassShadow:
 4102              	.LFB172:
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Disables the Bypass Shadow feature.
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.  
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 4103              		.loc 1 1760 0
ARM GAS  /tmp/cc2l9dGw.s 			page 103


 4104              		.cfi_startproc
 4105              		@ args = 0, pretend = 0, frame = 8
 4106              		@ frame_needed = 1, uses_anonymous_args = 0
 4107              		@ link register save eliminated.
 4108 0000 80B4     		push	{r7}
 4109              	.LCFI190:
 4110              		.cfi_def_cfa_offset 4
 4111              		.cfi_offset 7, -4
 4112 0002 83B0     		sub	sp, sp, #12
 4113              	.LCFI191:
 4114              		.cfi_def_cfa_offset 16
 4115 0004 00AF     		add	r7, sp, #0
 4116              	.LCFI192:
 4117              		.cfi_def_cfa_register 7
 4118 0006 7860     		str	r0, [r7, #4]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Locked */ 
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4119              		.loc 1 1762 0
 4120 0008 7B68     		ldr	r3, [r7, #4]
 4121 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 4122 000c 012B     		cmp	r3, #1
 4123 000e 01D1     		bne	.L166
 4124              		.loc 1 1762 0 is_stmt 0 discriminator 1
 4125 0010 0223     		movs	r3, #2
 4126 0012 20E0     		b	.L167
 4127              	.L166:
 4128              		.loc 1 1762 0 discriminator 2
 4129 0014 7B68     		ldr	r3, [r7, #4]
 4130 0016 0122     		movs	r2, #1
 4131 0018 1A77     		strb	r2, [r3, #28]
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4132              		.loc 1 1764 0 is_stmt 1 discriminator 2
 4133 001a 7B68     		ldr	r3, [r7, #4]
 4134 001c 0222     		movs	r2, #2
 4135 001e 5A77     		strb	r2, [r3, #29]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4136              		.loc 1 1767 0 discriminator 2
 4137 0020 7B68     		ldr	r3, [r7, #4]
 4138 0022 1B68     		ldr	r3, [r3]
 4139 0024 CA22     		movs	r2, #202
 4140 0026 5A62     		str	r2, [r3, #36]
 4141 0028 7B68     		ldr	r3, [r7, #4]
 4142 002a 1B68     		ldr	r3, [r3]
 4143 002c 5322     		movs	r2, #83
 4144 002e 5A62     		str	r2, [r3, #36]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 4145              		.loc 1 1770 0 discriminator 2
 4146 0030 7B68     		ldr	r3, [r7, #4]
 4147 0032 1B68     		ldr	r3, [r3]
 4148 0034 9A68     		ldr	r2, [r3, #8]
 4149 0036 7B68     		ldr	r3, [r7, #4]
 4150 0038 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2l9dGw.s 			page 104


 4151 003a 02F0DF02 		and	r2, r2, #223
 4152 003e 9A60     		str	r2, [r3, #8]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4153              		.loc 1 1773 0 discriminator 2
 4154 0040 7B68     		ldr	r3, [r7, #4]
 4155 0042 1B68     		ldr	r3, [r3]
 4156 0044 FF22     		movs	r2, #255
 4157 0046 5A62     		str	r2, [r3, #36]
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 4158              		.loc 1 1776 0 discriminator 2
 4159 0048 7B68     		ldr	r3, [r7, #4]
 4160 004a 0122     		movs	r2, #1
 4161 004c 5A77     		strb	r2, [r3, #29]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Process Unlocked */ 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4162              		.loc 1 1779 0 discriminator 2
 4163 004e 7B68     		ldr	r3, [r7, #4]
 4164 0050 0022     		movs	r2, #0
 4165 0052 1A77     		strb	r2, [r3, #28]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK;
 4166              		.loc 1 1781 0 discriminator 2
 4167 0054 0023     		movs	r3, #0
 4168              	.L167:
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4169              		.loc 1 1782 0
 4170 0056 1846     		mov	r0, r3
 4171 0058 0C37     		adds	r7, r7, #12
 4172              	.LCFI193:
 4173              		.cfi_def_cfa_offset 4
 4174 005a BD46     		mov	sp, r7
 4175              	.LCFI194:
 4176              		.cfi_def_cfa_register 13
 4177              		@ sp needed
 4178 005c 5DF8047B 		ldr	r7, [sp], #4
 4179              	.LCFI195:
 4180              		.cfi_restore 7
 4181              		.cfi_def_cfa_offset 0
 4182 0060 7047     		bx	lr
 4183              		.cfi_endproc
 4184              	.LFE172:
 4186              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 4187              		.align	1
 4188              		.weak	HAL_RTCEx_AlarmBEventCallback
 4189              		.syntax unified
 4190              		.thumb
 4191              		.thumb_func
 4192              		.fpu fpv4-sp-d16
 4194              	HAL_RTCEx_AlarmBEventCallback:
 4195              	.LFB173:
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
ARM GAS  /tmp/cc2l9dGw.s 			page 105


1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @}
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /** @defgroup RTCEx_Group4 Extended features functions 
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *  @brief    Extended features functions  
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  *
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @verbatim   
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****  ===============================================================================  
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) RTC Alram B callback
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****                
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** @endverbatim
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @{
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval None
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {
 4196              		.loc 1 1810 0
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 8
 4199              		@ frame_needed = 1, uses_anonymous_args = 0
 4200              		@ link register save eliminated.
 4201 0000 80B4     		push	{r7}
 4202              	.LCFI196:
 4203              		.cfi_def_cfa_offset 4
 4204              		.cfi_offset 7, -4
 4205 0002 83B0     		sub	sp, sp, #12
 4206              	.LCFI197:
 4207              		.cfi_def_cfa_offset 16
 4208 0004 00AF     		add	r7, sp, #0
 4209              	.LCFI198:
 4210              		.cfi_def_cfa_register 7
 4211 0006 7860     		str	r0, [r7, #4]
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****             the HAL_RTC_AlarmBEventCallback could be implemented in the user file
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****    */
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4212              		.loc 1 1817 0
 4213 0008 00BF     		nop
 4214 000a 0C37     		adds	r7, r7, #12
 4215              	.LCFI199:
 4216              		.cfi_def_cfa_offset 4
 4217 000c BD46     		mov	sp, r7
 4218              	.LCFI200:
 4219              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc2l9dGw.s 			page 106


 4220              		@ sp needed
 4221 000e 5DF8047B 		ldr	r7, [sp], #4
 4222              	.LCFI201:
 4223              		.cfi_restore 7
 4224              		.cfi_def_cfa_offset 0
 4225 0012 7047     		bx	lr
 4226              		.cfi_endproc
 4227              	.LFE173:
 4229              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 4230              		.align	1
 4231              		.global	HAL_RTCEx_PollForAlarmBEvent
 4232              		.syntax unified
 4233              		.thumb
 4234              		.thumb_func
 4235              		.fpu fpv4-sp-d16
 4237              	HAL_RTCEx_PollForAlarmBEvent:
 4238              	.LFB174:
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** /**
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @brief  This function handles AlarmB Polling request.
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   * @retval HAL status
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   */
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** {  
 4239              		.loc 1 1827 0
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 16
 4242              		@ frame_needed = 1, uses_anonymous_args = 0
 4243 0000 80B5     		push	{r7, lr}
 4244              	.LCFI202:
 4245              		.cfi_def_cfa_offset 8
 4246              		.cfi_offset 7, -8
 4247              		.cfi_offset 14, -4
 4248 0002 84B0     		sub	sp, sp, #16
 4249              	.LCFI203:
 4250              		.cfi_def_cfa_offset 24
 4251 0004 00AF     		add	r7, sp, #0
 4252              	.LCFI204:
 4253              		.cfi_def_cfa_register 7
 4254 0006 7860     		str	r0, [r7, #4]
 4255 0008 3960     		str	r1, [r7]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   uint32_t tickstart = 0; 
 4256              		.loc 1 1828 0
 4257 000a 0023     		movs	r3, #0
 4258 000c FB60     		str	r3, [r7, #12]
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Get tick */
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 4259              		.loc 1 1831 0
 4260 000e FFF7FEFF 		bl	HAL_GetTick
 4261 0012 F860     		str	r0, [r7, #12]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** 
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == RESET)
 4262              		.loc 1 1833 0
ARM GAS  /tmp/cc2l9dGw.s 			page 107


 4263 0014 13E0     		b	.L170
 4264              	.L173:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 4265              		.loc 1 1835 0
 4266 0016 3B68     		ldr	r3, [r7]
 4267 0018 B3F1FF3F 		cmp	r3, #-1
 4268 001c 0FD0     		beq	.L170
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     {
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 4269              		.loc 1 1837 0
 4270 001e 3B68     		ldr	r3, [r7]
 4271 0020 002B     		cmp	r3, #0
 4272 0022 07D0     		beq	.L171
 4273              		.loc 1 1837 0 is_stmt 0 discriminator 1
 4274 0024 FFF7FEFF 		bl	HAL_GetTick
 4275 0028 0246     		mov	r2, r0
 4276 002a FB68     		ldr	r3, [r7, #12]
 4277 002c D31A     		subs	r3, r2, r3
 4278 002e 3A68     		ldr	r2, [r7]
 4279 0030 9A42     		cmp	r2, r3
 4280 0032 04D2     		bcs	.L170
 4281              	.L171:
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       {
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 4282              		.loc 1 1839 0 is_stmt 1
 4283 0034 7B68     		ldr	r3, [r7, #4]
 4284 0036 0322     		movs	r2, #3
 4285 0038 5A77     		strb	r2, [r3, #29]
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 4286              		.loc 1 1840 0
 4287 003a 0323     		movs	r3, #3
 4288 003c 13E0     		b	.L172
 4289              	.L170:
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   {
 4290              		.loc 1 1833 0
 4291 003e 7B68     		ldr	r3, [r7, #4]
 4292 0040 1B68     		ldr	r3, [r3]
 4293 0042 DB68     		ldr	r3, [r3, #12]
 4294 0044 03F40073 		and	r3, r3, #512
 4295 0048 002B     		cmp	r3, #0
 4296 004a E4D0     		beq	.L173
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****       }
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****     }
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   }
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 4297              		.loc 1 1846 0
 4298 004c 7B68     		ldr	r3, [r7, #4]
 4299 004e 1B68     		ldr	r3, [r3]
 4300 0050 DB68     		ldr	r3, [r3, #12]
 4301 0052 DAB2     		uxtb	r2, r3
 4302 0054 7B68     		ldr	r3, [r7, #4]
 4303 0056 1B68     		ldr	r3, [r3]
 4304 0058 62F42072 		orn	r2, r2, #640
 4305 005c DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cc2l9dGw.s 			page 108


1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   /* Change RTC state */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 4306              		.loc 1 1849 0
 4307 005e 7B68     		ldr	r3, [r7, #4]
 4308 0060 0122     		movs	r2, #1
 4309 0062 5A77     		strb	r2, [r3, #29]
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c ****   return HAL_OK; 
 4310              		.loc 1 1851 0
 4311 0064 0023     		movs	r3, #0
 4312              	.L172:
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c **** }
 4313              		.loc 1 1852 0
 4314 0066 1846     		mov	r0, r3
 4315 0068 1037     		adds	r7, r7, #16
 4316              	.LCFI205:
 4317              		.cfi_def_cfa_offset 8
 4318 006a BD46     		mov	sp, r7
 4319              	.LCFI206:
 4320              		.cfi_def_cfa_register 13
 4321              		@ sp needed
 4322 006c 80BD     		pop	{r7, pc}
 4323              		.cfi_endproc
 4324              	.LFE174:
 4326              		.text
 4327              	.Letext0:
 4328              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4329              		.file 3 "/usr/include/newlib/sys/lock.h"
 4330              		.file 4 "/usr/include/newlib/sys/_types.h"
 4331              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 4332              		.file 6 "/usr/include/newlib/sys/reent.h"
 4333              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 4334              		.file 8 "Inc/main.h"
 4335              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 4336              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4337              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 4338              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4339              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4340              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 4341              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
ARM GAS  /tmp/cc2l9dGw.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_rtc_ex.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
     /tmp/cc2l9dGw.s:21     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/cc2l9dGw.s:28     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/cc2l9dGw.s:153    .text.HAL_RTCEx_SetTimeStamp:00000000000000a8 $d
     /tmp/cc2l9dGw.s:158    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/cc2l9dGw.s:165    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/cc2l9dGw.s:318    .text.HAL_RTCEx_SetTimeStamp_IT:00000000000000e0 $d
     /tmp/cc2l9dGw.s:324    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/cc2l9dGw.s:331    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/cc2l9dGw.s:431    .text.HAL_RTCEx_DeactivateTimeStamp:000000000000007c $d
     /tmp/cc2l9dGw.s:436    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/cc2l9dGw.s:443    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/cc2l9dGw.s:529    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/cc2l9dGw.s:536    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/cc2l9dGw.s:622    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/cc2l9dGw.s:629    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/cc2l9dGw.s:816    .text.HAL_RTCEx_GetTimeStamp:0000000000000138 $d
     /tmp/cc2l9dGw.s:822    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/cc2l9dGw.s:829    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/cc2l9dGw.s:1067   .text.HAL_RTCEx_SetTamper:0000000000000164 $d
     /tmp/cc2l9dGw.s:1072   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/cc2l9dGw.s:1079   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/cc2l9dGw.s:1375   .text.HAL_RTCEx_SetTamper_IT:00000000000001cc $d
     /tmp/cc2l9dGw.s:1382   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/cc2l9dGw.s:1389   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/cc2l9dGw.s:1508   .text.HAL_RTCEx_DeactivateTamper:000000000000009c $d
     /tmp/cc2l9dGw.s:1515   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/cc2l9dGw.s:1522   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/cc2l9dGw.s:1710   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/cc2l9dGw.s:1753   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/cc2l9dGw.s:1796   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/cc2l9dGw.s:1839   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/cc2l9dGw.s:1697   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000118 $d
     /tmp/cc2l9dGw.s:1703   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/cc2l9dGw.s:1746   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/cc2l9dGw.s:1789   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/cc2l9dGw.s:1832   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/cc2l9dGw.s:1875   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/cc2l9dGw.s:1882   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/cc2l9dGw.s:1987   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/cc2l9dGw.s:1994   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/cc2l9dGw.s:2084   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/cc2l9dGw.s:2091   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/cc2l9dGw.s:2181   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/cc2l9dGw.s:2188   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/cc2l9dGw.s:2275   .text.HAL_RTCEx_PollForTamper3Event:000000000000006c $d
     /tmp/cc2l9dGw.s:2280   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/cc2l9dGw.s:2287   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/cc2l9dGw.s:2449   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/cc2l9dGw.s:2456   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/cc2l9dGw.s:2698   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000184 $d
     /tmp/cc2l9dGw.s:2705   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/cc2l9dGw.s:2712   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
ARM GAS  /tmp/cc2l9dGw.s 			page 110


     /tmp/cc2l9dGw.s:2842   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/cc2l9dGw.s:2849   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/cc2l9dGw.s:2890   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
     /tmp/cc2l9dGw.s:2897   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/cc2l9dGw.s:2975   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/cc2l9dGw.s:2963   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000054 $d
     /tmp/cc2l9dGw.s:2968   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/cc2l9dGw.s:3011   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/cc2l9dGw.s:3018   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/cc2l9dGw.s:3108   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/cc2l9dGw.s:3115   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/cc2l9dGw.s:3171   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/cc2l9dGw.s:3178   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/cc2l9dGw.s:3232   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/cc2l9dGw.s:3239   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/cc2l9dGw.s:3373   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/cc2l9dGw.s:3380   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/cc2l9dGw.s:3557   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/cc2l9dGw.s:3564   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/cc2l9dGw.s:3668   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/cc2l9dGw.s:3675   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/cc2l9dGw.s:3761   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/cc2l9dGw.s:3768   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/cc2l9dGw.s:3881   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/cc2l9dGw.s:3888   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/cc2l9dGw.s:4001   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/cc2l9dGw.s:4008   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/cc2l9dGw.s:4094   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/cc2l9dGw.s:4101   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/cc2l9dGw.s:4187   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/cc2l9dGw.s:4194   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/cc2l9dGw.s:4230   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/cc2l9dGw.s:4237   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
SystemCoreClock
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
