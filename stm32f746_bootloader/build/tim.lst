ARM GAS  /tmp/ccWml4XH.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM2_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_TIM2_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_TIM2_Init:
  27              	.LFB138:
  28              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccWml4XH.s 			page 2


  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** #include "motor.h"
  43:Src/tim.c     **** 
  44:Src/tim.c     **** /* USER CODE BEGIN 0 */
  45:Src/tim.c     **** 
  46:Src/tim.c     **** /* USER CODE END 0 */
  47:Src/tim.c     **** 
  48:Src/tim.c     **** TIM_HandleTypeDef htim2;
  49:Src/tim.c     **** TIM_HandleTypeDef htim3;
  50:Src/tim.c     **** TIM_HandleTypeDef htim13;
  51:Src/tim.c     **** TIM_HandleTypeDef htim14;
  52:Src/tim.c     **** 
  53:Src/tim.c     **** /* TIM2 init function */
  54:Src/tim.c     **** void MX_TIM2_Init(void)
  55:Src/tim.c     **** {
  29              		.loc 1 55 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  56:Src/tim.c     ****     TIM_ClockConfigTypeDef sClockSourceConfig;
  57:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
  58:Src/tim.c     **** 
  59:Src/tim.c     ****     htim2.Instance = TIM2;
  33              		.loc 1 59 0
  34 0000 194B     		ldr	r3, .L18
  60:Src/tim.c     ****     htim2.Init.Prescaler = 2000;
  61:Src/tim.c     ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  35              		.loc 1 61 0
  36 0002 0022     		movs	r2, #0
  62:Src/tim.c     ****     htim2.Init.Period = 200;
  37              		.loc 1 62 0
  38 0004 C821     		movs	r1, #200
  63:Src/tim.c     ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  64:Src/tim.c     ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  65:Src/tim.c     ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  39              		.loc 1 65 0
  40 0006 1846     		mov	r0, r3
  55:Src/tim.c     ****     TIM_ClockConfigTypeDef sClockSourceConfig;
  41              		.loc 1 55 0
  42 0008 30B5     		push	{r4, r5, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 12
  45              		.cfi_offset 4, -12
  46              		.cfi_offset 5, -8
  47              		.cfi_offset 14, -4
  59:Src/tim.c     ****     htim2.Init.Prescaler = 2000;
  48              		.loc 1 59 0
ARM GAS  /tmp/ccWml4XH.s 			page 3


  49 000a 4FF08045 		mov	r5, #1073741824
  60:Src/tim.c     ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  50              		.loc 1 60 0
  51 000e 4FF4FA64 		mov	r4, #2000
  55:Src/tim.c     ****     TIM_ClockConfigTypeDef sClockSourceConfig;
  52              		.loc 1 55 0
  53 0012 89B0     		sub	sp, sp, #36
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 48
  63:Src/tim.c     ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  56              		.loc 1 63 0
  57 0014 1A61     		str	r2, [r3, #16]
  64:Src/tim.c     ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  58              		.loc 1 64 0
  59 0016 9A61     		str	r2, [r3, #24]
  60:Src/tim.c     ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  60              		.loc 1 60 0
  61 0018 C3E90054 		strd	r5, r4, [r3]
  61:Src/tim.c     ****     htim2.Init.Period = 200;
  62              		.loc 1 61 0
  63 001c C3E90221 		strd	r2, r1, [r3, #8]
  64              		.loc 1 65 0
  65 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
  66              	.LVL0:
  67 0024 D8B9     		cbnz	r0, .L16
  68              	.L2:
  66:Src/tim.c     ****     {
  67:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
  68:Src/tim.c     ****     }
  69:Src/tim.c     **** 
  70:Src/tim.c     ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  69              		.loc 1 70 0
  70 0026 4FF48053 		mov	r3, #4096
  71 002a 08A9     		add	r1, sp, #32
  71:Src/tim.c     ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  72              		.loc 1 71 0
  73 002c 0E48     		ldr	r0, .L18
  70:Src/tim.c     ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  74              		.loc 1 70 0
  75 002e 41F8103D 		str	r3, [r1, #-16]!
  76              		.loc 1 71 0
  77 0032 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  78              	.LVL1:
  79 0036 68B9     		cbnz	r0, .L17
  80              	.L3:
  72:Src/tim.c     ****     {
  73:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
  74:Src/tim.c     ****     }
  75:Src/tim.c     **** 
  76:Src/tim.c     ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  81              		.loc 1 76 0
  82 0038 0023     		movs	r3, #0
  77:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  78:Src/tim.c     ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  83              		.loc 1 78 0
  84 003a 01A9     		add	r1, sp, #4
  85 003c 0A48     		ldr	r0, .L18
ARM GAS  /tmp/ccWml4XH.s 			page 4


  76:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  86              		.loc 1 76 0
  87 003e 0193     		str	r3, [sp, #4]
  77:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  88              		.loc 1 77 0
  89 0040 0393     		str	r3, [sp, #12]
  90              		.loc 1 78 0
  91 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  92              	.LVL2:
  93 0046 18B1     		cbz	r0, .L1
  79:Src/tim.c     ****     {
  80:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
  94              		.loc 1 80 0
  95 0048 5021     		movs	r1, #80
  96 004a 0848     		ldr	r0, .L18+4
  97 004c FFF7FEFF 		bl	_Error_Handler
  98              	.LVL3:
  99              	.L1:
  81:Src/tim.c     ****     }
  82:Src/tim.c     **** 
  83:Src/tim.c     **** }
 100              		.loc 1 83 0
 101 0050 09B0     		add	sp, sp, #36
 102              	.LCFI2:
 103              		.cfi_remember_state
 104              		.cfi_def_cfa_offset 12
 105              		@ sp needed
 106 0052 30BD     		pop	{r4, r5, pc}
 107              	.L17:
 108              	.LCFI3:
 109              		.cfi_restore_state
  73:Src/tim.c     ****     }
 110              		.loc 1 73 0
 111 0054 4921     		movs	r1, #73
 112 0056 0548     		ldr	r0, .L18+4
 113 0058 FFF7FEFF 		bl	_Error_Handler
 114              	.LVL4:
 115 005c ECE7     		b	.L3
 116              	.L16:
  67:Src/tim.c     ****     }
 117              		.loc 1 67 0
 118 005e 4321     		movs	r1, #67
 119 0060 0248     		ldr	r0, .L18+4
 120 0062 FFF7FEFF 		bl	_Error_Handler
 121              	.LVL5:
 122 0066 DEE7     		b	.L2
 123              	.L19:
 124              		.align	2
 125              	.L18:
 126 0068 00000000 		.word	htim2
 127 006c 00000000 		.word	.LC0
 128              		.cfi_endproc
 129              	.LFE138:
 131              		.section	.text.MX_TIM3_Init,"ax",%progbits
 132              		.align	1
 133              		.p2align 2,,3
 134              		.global	MX_TIM3_Init
ARM GAS  /tmp/ccWml4XH.s 			page 5


 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	MX_TIM3_Init:
 141              	.LFB139:
  84:Src/tim.c     **** 
  85:Src/tim.c     **** 
  86:Src/tim.c     **** /* TIM3 init function */
  87:Src/tim.c     **** void MX_TIM3_Init(void)
  88:Src/tim.c     **** {
 142              		.loc 1 88 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 64
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 30B5     		push	{r4, r5, lr}
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 12
 149              		.cfi_offset 4, -12
 150              		.cfi_offset 5, -8
 151              		.cfi_offset 14, -4
  89:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
  90:Src/tim.c     ****     TIM_OC_InitTypeDef sConfigOC;
  91:Src/tim.c     **** 
  92:Src/tim.c     ****     htim3.Instance = TIM3;
 152              		.loc 1 92 0
 153 0002 364C     		ldr	r4, .L48
  93:Src/tim.c     ****     htim3.Init.Prescaler = 3240;
  94:Src/tim.c     ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 154              		.loc 1 94 0
 155 0004 0023     		movs	r3, #0
  93:Src/tim.c     ****     htim3.Init.Prescaler = 3240;
 156              		.loc 1 93 0
 157 0006 40F6A841 		movw	r1, #3240
  92:Src/tim.c     ****     htim3.Init.Prescaler = 3240;
 158              		.loc 1 92 0
 159 000a 354D     		ldr	r5, .L48+4
  95:Src/tim.c     ****     htim3.Init.Period = 200;
 160              		.loc 1 95 0
 161 000c C822     		movs	r2, #200
  88:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
 162              		.loc 1 88 0
 163 000e 91B0     		sub	sp, sp, #68
 164              	.LCFI5:
 165              		.cfi_def_cfa_offset 80
  96:Src/tim.c     ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  97:Src/tim.c     ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  98:Src/tim.c     ****     if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 166              		.loc 1 98 0
 167 0010 2046     		mov	r0, r4
  96:Src/tim.c     ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 168              		.loc 1 96 0
 169 0012 2361     		str	r3, [r4, #16]
  97:Src/tim.c     ****     if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 170              		.loc 1 97 0
 171 0014 A361     		str	r3, [r4, #24]
  93:Src/tim.c     ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccWml4XH.s 			page 6


 172              		.loc 1 93 0
 173 0016 C4E90051 		strd	r5, r1, [r4]
  94:Src/tim.c     ****     htim3.Init.Period = 200;
 174              		.loc 1 94 0
 175 001a C4E90232 		strd	r3, r2, [r4, #8]
 176              		.loc 1 98 0
 177 001e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 178              	.LVL6:
 179 0022 0028     		cmp	r0, #0
 180 0024 33D1     		bne	.L42
 181              	.L21:
  99:Src/tim.c     ****     {
 100:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 101:Src/tim.c     ****     }
 102:Src/tim.c     **** 
 103:Src/tim.c     ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 182              		.loc 1 103 0
 183 0026 0023     		movs	r3, #0
 104:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 105:Src/tim.c     ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 184              		.loc 1 105 0
 185 0028 01A9     		add	r1, sp, #4
 186 002a 2C48     		ldr	r0, .L48
 103:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 187              		.loc 1 103 0
 188 002c 0193     		str	r3, [sp, #4]
 104:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 189              		.loc 1 104 0
 190 002e 0393     		str	r3, [sp, #12]
 191              		.loc 1 105 0
 192 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 193              	.LVL7:
 194 0034 30BB     		cbnz	r0, .L43
 195              	.L22:
 106:Src/tim.c     ****     {
 107:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 108:Src/tim.c     ****     }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 111:Src/tim.c     ****     sConfigOC.Pulse = 0;
 196              		.loc 1 111 0
 197 0036 0023     		movs	r3, #0
 110:Src/tim.c     ****     sConfigOC.Pulse = 0;
 198              		.loc 1 110 0
 199 0038 6025     		movs	r5, #96
 112:Src/tim.c     ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 113:Src/tim.c     ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 114:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 200              		.loc 1 114 0
 201 003a 2848     		ldr	r0, .L48
 202 003c 09A9     		add	r1, sp, #36
 203 003e 1A46     		mov	r2, r3
 113:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 204              		.loc 1 113 0
 205 0040 0D93     		str	r3, [sp, #52]
 110:Src/tim.c     ****     sConfigOC.Pulse = 0;
 206              		.loc 1 110 0
ARM GAS  /tmp/ccWml4XH.s 			page 7


 207 0042 0995     		str	r5, [sp, #36]
 112:Src/tim.c     ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 208              		.loc 1 112 0
 209 0044 CDE90A33 		strd	r3, r3, [sp, #40]
 210              		.loc 1 114 0
 211 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 212              	.LVL8:
 213 004c A8B9     		cbnz	r0, .L44
 214              	.L23:
 115:Src/tim.c     ****     {
 116:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 117:Src/tim.c     ****     }
 118:Src/tim.c     **** 
 119:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 215              		.loc 1 119 0
 216 004e 09A9     		add	r1, sp, #36
 217 0050 0422     		movs	r2, #4
 218 0052 2248     		ldr	r0, .L48
 219 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 220              	.LVL9:
 221 0058 18B1     		cbz	r0, .L24
 120:Src/tim.c     ****     {
 121:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 222              		.loc 1 121 0
 223 005a 7921     		movs	r1, #121
 224 005c 2148     		ldr	r0, .L48+8
 225 005e FFF7FEFF 		bl	_Error_Handler
 226              	.LVL10:
 227              	.L24:
 228              	.LBB6:
 229              	.LBB7:
 122:Src/tim.c     ****     }
 123:Src/tim.c     **** 
 124:Src/tim.c     ****     HAL_TIM_MspPostInit(&htim3);
 125:Src/tim.c     **** 
 126:Src/tim.c     **** }
 127:Src/tim.c     **** /* TIM13 init function */
 128:Src/tim.c     **** void MX_TIM13_Init(void)
 129:Src/tim.c     **** {
 130:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   htim13.Instance = TIM13;
 133:Src/tim.c     ****   htim13.Init.Prescaler = 3242;
 134:Src/tim.c     ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 135:Src/tim.c     ****   htim13.Init.Period = 200;
 136:Src/tim.c     ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 137:Src/tim.c     ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 138:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 139:Src/tim.c     ****   {
 140:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 141:Src/tim.c     ****   }
 142:Src/tim.c     **** 
 143:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 144:Src/tim.c     ****   {
 145:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 146:Src/tim.c     ****   }
 147:Src/tim.c     **** 
ARM GAS  /tmp/ccWml4XH.s 			page 8


 148:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 149:Src/tim.c     ****   sConfigOC.Pulse = 0;
 150:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 151:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 152:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 153:Src/tim.c     ****   {
 154:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 155:Src/tim.c     ****   }
 156:Src/tim.c     **** 
 157:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim13);
 158:Src/tim.c     **** 
 159:Src/tim.c     **** }
 160:Src/tim.c     **** /* TIM14 init function */
 161:Src/tim.c     **** void MX_TIM14_Init(void)
 162:Src/tim.c     **** {
 163:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 164:Src/tim.c     **** 
 165:Src/tim.c     ****   htim14.Instance = TIM14;
 166:Src/tim.c     ****   htim14.Init.Prescaler = 3242;
 167:Src/tim.c     ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 168:Src/tim.c     ****   htim14.Init.Period = 200;
 169:Src/tim.c     ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 170:Src/tim.c     ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 171:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 172:Src/tim.c     ****   {
 173:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 174:Src/tim.c     ****   }
 175:Src/tim.c     **** 
 176:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 177:Src/tim.c     ****   {
 178:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 179:Src/tim.c     ****   }
 180:Src/tim.c     **** 
 181:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 182:Src/tim.c     ****   sConfigOC.Pulse = 0;
 183:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 184:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 185:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 186:Src/tim.c     ****   {
 187:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 188:Src/tim.c     ****   }
 189:Src/tim.c     **** 
 190:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim14);
 191:Src/tim.c     **** 
 192:Src/tim.c     **** }
 193:Src/tim.c     **** 
 194:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 195:Src/tim.c     **** {
 196:Src/tim.c     **** 
 197:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 198:Src/tim.c     ****   {
 199:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 200:Src/tim.c     **** 
 201:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 202:Src/tim.c     ****     /* TIM2 clock enable */
 203:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 204:Src/tim.c     **** 
ARM GAS  /tmp/ccWml4XH.s 			page 9


 205:Src/tim.c     ****     /* TIM2 interrupt Init */
 206:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 207:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 208:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 209:Src/tim.c     **** 
 210:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 211:Src/tim.c     ****   }
 212:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 213:Src/tim.c     ****   {
 214:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 0 */
 215:Src/tim.c     **** 
 216:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 0 */
 217:Src/tim.c     ****     /* TIM13 clock enable */
 218:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_ENABLE();
 219:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 220:Src/tim.c     **** 
 221:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 1 */
 222:Src/tim.c     ****   }
 223:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 224:Src/tim.c     ****   {
 225:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 0 */
 226:Src/tim.c     **** 
 227:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 0 */
 228:Src/tim.c     ****     /* TIM14 clock enable */
 229:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_ENABLE();
 230:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 231:Src/tim.c     **** 
 232:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 1 */
 233:Src/tim.c     ****   }
 234:Src/tim.c     **** }
 235:Src/tim.c     **** 
 236:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 237:Src/tim.c     **** {
 238:Src/tim.c     **** 
 239:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 240:Src/tim.c     ****   {
 241:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 242:Src/tim.c     **** 
 243:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 244:Src/tim.c     ****     /* TIM3 clock enable */
 245:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 246:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 247:Src/tim.c     **** 
 248:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 249:Src/tim.c     ****   }
 250:Src/tim.c     **** }
 251:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 252:Src/tim.c     **** {
 253:Src/tim.c     **** 
 254:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 255:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 230              		.loc 1 255 0
 231 0062 2368     		ldr	r3, [r4]
 232 0064 1E4A     		ldr	r2, .L48+4
 233 0066 9342     		cmp	r3, r2
 234 0068 16D0     		beq	.L45
 256:Src/tim.c     ****   {
ARM GAS  /tmp/ccWml4XH.s 			page 10


 257:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 258:Src/tim.c     **** 
 259:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 260:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 261:Src/tim.c     ****     PC6     ------> TIM3_CH1
 262:Src/tim.c     ****     PC7     ------> TIM3_CH2 
 263:Src/tim.c     ****     */
 264:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 265:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 266:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 267:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 268:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 269:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 270:Src/tim.c     **** 
 271:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 272:Src/tim.c     **** 
 273:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 274:Src/tim.c     ****   }
 275:Src/tim.c     ****   else if(timHandle->Instance==TIM13)
 235              		.loc 1 275 0
 236 006a 1F4A     		ldr	r2, .L48+12
 237 006c 9342     		cmp	r3, r2
 238 006e 31D0     		beq	.L46
 276:Src/tim.c     ****   {
 277:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 0 */
 278:Src/tim.c     **** 
 279:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 0 */
 280:Src/tim.c     ****   
 281:Src/tim.c     ****     /**TIM13 GPIO Configuration    
 282:Src/tim.c     ****     PF8     ------> TIM13_CH1 
 283:Src/tim.c     ****     */
 284:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 285:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 286:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 287:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 288:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 289:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 290:Src/tim.c     **** 
 291:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 1 */
 292:Src/tim.c     **** 
 293:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 1 */
 294:Src/tim.c     ****   }
 295:Src/tim.c     ****   else if(timHandle->Instance==TIM14)
 239              		.loc 1 295 0
 240 0070 1E4A     		ldr	r2, .L48+16
 241 0072 9342     		cmp	r3, r2
 242 0074 1ED0     		beq	.L47
 243              	.LBE7:
 244              	.LBE6:
 126:Src/tim.c     **** /* TIM13 init function */
 245              		.loc 1 126 0
 246 0076 11B0     		add	sp, sp, #68
 247              	.LCFI6:
 248              		.cfi_remember_state
 249              		.cfi_def_cfa_offset 12
 250              		@ sp needed
 251 0078 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccWml4XH.s 			page 11


 252              	.LVL11:
 253              	.L44:
 254              	.LCFI7:
 255              		.cfi_restore_state
 116:Src/tim.c     ****     }
 256              		.loc 1 116 0
 257 007a 7421     		movs	r1, #116
 258 007c 1948     		ldr	r0, .L48+8
 259 007e FFF7FEFF 		bl	_Error_Handler
 260              	.LVL12:
 261 0082 E4E7     		b	.L23
 262              	.L43:
 107:Src/tim.c     ****     }
 263              		.loc 1 107 0
 264 0084 6B21     		movs	r1, #107
 265 0086 1748     		ldr	r0, .L48+8
 266 0088 FFF7FEFF 		bl	_Error_Handler
 267              	.LVL13:
 268 008c D3E7     		b	.L22
 269              	.L42:
 100:Src/tim.c     ****     }
 270              		.loc 1 100 0
 271 008e 6421     		movs	r1, #100
 272 0090 1448     		ldr	r0, .L48+8
 273 0092 FFF7FEFF 		bl	_Error_Handler
 274              	.LVL14:
 275 0096 C6E7     		b	.L21
 276              	.LVL15:
 277              	.L45:
 278              	.LBB13:
 279              	.LBB10:
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 280              		.loc 1 265 0
 281 0098 0222     		movs	r2, #2
 266:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 282              		.loc 1 266 0
 283 009a 0023     		movs	r3, #0
 264:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 284              		.loc 1 264 0
 285 009c C024     		movs	r4, #192
 269:Src/tim.c     **** 
 286              		.loc 1 269 0
 287 009e 04A9     		add	r1, sp, #16
 288 00a0 1348     		ldr	r0, .L48+20
 268:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 289              		.loc 1 268 0
 290 00a2 0892     		str	r2, [sp, #32]
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 291              		.loc 1 265 0
 292 00a4 CDE90442 		strd	r4, r2, [sp, #16]
 267:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 293              		.loc 1 267 0
 294 00a8 CDE90633 		strd	r3, r3, [sp, #24]
 269:Src/tim.c     **** 
 295              		.loc 1 269 0
 296 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL16:
ARM GAS  /tmp/ccWml4XH.s 			page 12


 298              	.LBE10:
 299              	.LBE13:
 126:Src/tim.c     **** /* TIM13 init function */
 300              		.loc 1 126 0
 301 00b0 11B0     		add	sp, sp, #68
 302              	.LCFI8:
 303              		.cfi_remember_state
 304              		.cfi_def_cfa_offset 12
 305              		@ sp needed
 306 00b2 30BD     		pop	{r4, r5, pc}
 307              	.L47:
 308              	.LCFI9:
 309              		.cfi_restore_state
 310              	.LBB14:
 311              	.LBB11:
 296:Src/tim.c     ****   {
 297:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 0 */
 298:Src/tim.c     **** 
 299:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 0 */
 300:Src/tim.c     ****   
 301:Src/tim.c     ****     /**TIM14 GPIO Configuration    
 302:Src/tim.c     ****     PF9     ------> TIM14_CH1 
 303:Src/tim.c     ****     */
 304:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 312              		.loc 1 304 0
 313 00b4 4FF40075 		mov	r5, #512
 314              	.L41:
 305:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 306:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 315              		.loc 1 306 0
 316 00b8 0023     		movs	r3, #0
 307:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 308:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 317              		.loc 1 308 0
 318 00ba 0922     		movs	r2, #9
 305:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 319              		.loc 1 305 0
 320 00bc 0224     		movs	r4, #2
 309:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 321              		.loc 1 309 0
 322 00be 04A9     		add	r1, sp, #16
 323 00c0 0C48     		ldr	r0, .L48+24
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 324              		.loc 1 308 0
 325 00c2 0892     		str	r2, [sp, #32]
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 326              		.loc 1 305 0
 327 00c4 CDE90454 		strd	r5, r4, [sp, #16]
 307:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 328              		.loc 1 307 0
 329 00c8 CDE90633 		strd	r3, r3, [sp, #24]
 330              		.loc 1 309 0
 331 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 332              	.LVL17:
 333              	.LBE11:
 334              	.LBE14:
 126:Src/tim.c     **** /* TIM13 init function */
ARM GAS  /tmp/ccWml4XH.s 			page 13


 335              		.loc 1 126 0
 336 00d0 11B0     		add	sp, sp, #68
 337              	.LCFI10:
 338              		.cfi_remember_state
 339              		.cfi_def_cfa_offset 12
 340              		@ sp needed
 341 00d2 30BD     		pop	{r4, r5, pc}
 342              	.LVL18:
 343              	.L46:
 344              	.LCFI11:
 345              		.cfi_restore_state
 346              	.LBB15:
 347              	.LBB12:
 348              	.LBB8:
 349              	.LBB9:
 284:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 350              		.loc 1 284 0
 351 00d4 4FF48075 		mov	r5, #256
 352 00d8 EEE7     		b	.L41
 353              	.L49:
 354 00da 00BF     		.align	2
 355              	.L48:
 356 00dc 00000000 		.word	htim3
 357 00e0 00040040 		.word	1073742848
 358 00e4 00000000 		.word	.LC0
 359 00e8 001C0040 		.word	1073748992
 360 00ec 00200040 		.word	1073750016
 361 00f0 00080240 		.word	1073874944
 362 00f4 00140240 		.word	1073878016
 363              	.LBE9:
 364              	.LBE8:
 365              	.LBE12:
 366              	.LBE15:
 367              		.cfi_endproc
 368              	.LFE139:
 370              		.section	.text.MX_TIM13_Init,"ax",%progbits
 371              		.align	1
 372              		.p2align 2,,3
 373              		.global	MX_TIM13_Init
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv4-sp-d16
 379              	MX_TIM13_Init:
 380              	.LFB140:
 129:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 381              		.loc 1 129 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 48
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 30B5     		push	{r4, r5, lr}
 386              	.LCFI12:
 387              		.cfi_def_cfa_offset 12
 388              		.cfi_offset 4, -12
 389              		.cfi_offset 5, -8
 390              		.cfi_offset 14, -4
 132:Src/tim.c     ****   htim13.Init.Prescaler = 3242;
ARM GAS  /tmp/ccWml4XH.s 			page 14


 391              		.loc 1 132 0
 392 0002 2E4C     		ldr	r4, .L73
 134:Src/tim.c     ****   htim13.Init.Period = 200;
 393              		.loc 1 134 0
 394 0004 0023     		movs	r3, #0
 133:Src/tim.c     ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 395              		.loc 1 133 0
 396 0006 40F6AA41 		movw	r1, #3242
 132:Src/tim.c     ****   htim13.Init.Prescaler = 3242;
 397              		.loc 1 132 0
 398 000a 2D4D     		ldr	r5, .L73+4
 135:Src/tim.c     ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 399              		.loc 1 135 0
 400 000c C822     		movs	r2, #200
 129:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 401              		.loc 1 129 0
 402 000e 8DB0     		sub	sp, sp, #52
 403              	.LCFI13:
 404              		.cfi_def_cfa_offset 64
 138:Src/tim.c     ****   {
 405              		.loc 1 138 0
 406 0010 2046     		mov	r0, r4
 136:Src/tim.c     ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 407              		.loc 1 136 0
 408 0012 2361     		str	r3, [r4, #16]
 137:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 409              		.loc 1 137 0
 410 0014 A361     		str	r3, [r4, #24]
 133:Src/tim.c     ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 411              		.loc 1 133 0
 412 0016 C4E90051 		strd	r5, r1, [r4]
 134:Src/tim.c     ****   htim13.Init.Period = 200;
 413              		.loc 1 134 0
 414 001a C4E90232 		strd	r3, r2, [r4, #8]
 138:Src/tim.c     ****   {
 415              		.loc 1 138 0
 416 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 417              	.LVL19:
 418 0022 20BB     		cbnz	r0, .L68
 419              	.L51:
 143:Src/tim.c     ****   {
 420              		.loc 1 143 0
 421 0024 2548     		ldr	r0, .L73
 422 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 423              	.LVL20:
 424 002a D8B9     		cbnz	r0, .L69
 425              	.L52:
 149:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 426              		.loc 1 149 0
 427 002c 0023     		movs	r3, #0
 148:Src/tim.c     ****   sConfigOC.Pulse = 0;
 428              		.loc 1 148 0
 429 002e 6025     		movs	r5, #96
 152:Src/tim.c     ****   {
 430              		.loc 1 152 0
 431 0030 05A9     		add	r1, sp, #20
 432 0032 2248     		ldr	r0, .L73
ARM GAS  /tmp/ccWml4XH.s 			page 15


 433 0034 1A46     		mov	r2, r3
 151:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 434              		.loc 1 151 0
 435 0036 0993     		str	r3, [sp, #36]
 148:Src/tim.c     ****   sConfigOC.Pulse = 0;
 436              		.loc 1 148 0
 437 0038 0595     		str	r5, [sp, #20]
 150:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 438              		.loc 1 150 0
 439 003a CDE90633 		strd	r3, r3, [sp, #24]
 152:Src/tim.c     ****   {
 440              		.loc 1 152 0
 441 003e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 442              	.LVL21:
 443 0042 18B1     		cbz	r0, .L53
 154:Src/tim.c     ****   }
 444              		.loc 1 154 0
 445 0044 9A21     		movs	r1, #154
 446 0046 1F48     		ldr	r0, .L73+8
 447 0048 FFF7FEFF 		bl	_Error_Handler
 448              	.LVL22:
 449              	.L53:
 450              	.LBB20:
 451              	.LBB21:
 255:Src/tim.c     ****   {
 452              		.loc 1 255 0
 453 004c 2368     		ldr	r3, [r4]
 454 004e 1E4A     		ldr	r2, .L73+12
 455 0050 9342     		cmp	r3, r2
 456 0052 11D0     		beq	.L70
 275:Src/tim.c     ****   {
 457              		.loc 1 275 0
 458 0054 1A4A     		ldr	r2, .L73+4
 459 0056 9342     		cmp	r3, r2
 460 0058 2CD0     		beq	.L71
 295:Src/tim.c     ****   {
 461              		.loc 1 295 0
 462 005a 1C4A     		ldr	r2, .L73+16
 463 005c 9342     		cmp	r3, r2
 464 005e 19D0     		beq	.L72
 465              	.LBE21:
 466              	.LBE20:
 159:Src/tim.c     **** /* TIM14 init function */
 467              		.loc 1 159 0
 468 0060 0DB0     		add	sp, sp, #52
 469              	.LCFI14:
 470              		.cfi_remember_state
 471              		.cfi_def_cfa_offset 12
 472              		@ sp needed
 473 0062 30BD     		pop	{r4, r5, pc}
 474              	.LVL23:
 475              	.L69:
 476              	.LCFI15:
 477              		.cfi_restore_state
 145:Src/tim.c     ****   }
 478              		.loc 1 145 0
 479 0064 9121     		movs	r1, #145
ARM GAS  /tmp/ccWml4XH.s 			page 16


 480 0066 1748     		ldr	r0, .L73+8
 481 0068 FFF7FEFF 		bl	_Error_Handler
 482              	.LVL24:
 483 006c DEE7     		b	.L52
 484              	.L68:
 140:Src/tim.c     ****   }
 485              		.loc 1 140 0
 486 006e 8C21     		movs	r1, #140
 487 0070 1448     		ldr	r0, .L73+8
 488 0072 FFF7FEFF 		bl	_Error_Handler
 489              	.LVL25:
 490 0076 D5E7     		b	.L51
 491              	.LVL26:
 492              	.L70:
 493              	.LBB27:
 494              	.LBB24:
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 495              		.loc 1 265 0
 496 0078 0222     		movs	r2, #2
 266:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 497              		.loc 1 266 0
 498 007a 0023     		movs	r3, #0
 264:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 499              		.loc 1 264 0
 500 007c C024     		movs	r4, #192
 269:Src/tim.c     **** 
 501              		.loc 1 269 0
 502 007e 6946     		mov	r1, sp
 503 0080 1348     		ldr	r0, .L73+20
 268:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 504              		.loc 1 268 0
 505 0082 0492     		str	r2, [sp, #16]
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 506              		.loc 1 265 0
 507 0084 CDE90042 		strd	r4, r2, [sp]
 267:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 508              		.loc 1 267 0
 509 0088 CDE90233 		strd	r3, r3, [sp, #8]
 269:Src/tim.c     **** 
 510              		.loc 1 269 0
 511 008c FFF7FEFF 		bl	HAL_GPIO_Init
 512              	.LVL27:
 513              	.LBE24:
 514              	.LBE27:
 159:Src/tim.c     **** /* TIM14 init function */
 515              		.loc 1 159 0
 516 0090 0DB0     		add	sp, sp, #52
 517              	.LCFI16:
 518              		.cfi_remember_state
 519              		.cfi_def_cfa_offset 12
 520              		@ sp needed
 521 0092 30BD     		pop	{r4, r5, pc}
 522              	.L72:
 523              	.LCFI17:
 524              		.cfi_restore_state
 525              	.LBB28:
 526              	.LBB25:
ARM GAS  /tmp/ccWml4XH.s 			page 17


 304:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 527              		.loc 1 304 0
 528 0094 4FF40075 		mov	r5, #512
 529              	.L67:
 306:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 530              		.loc 1 306 0
 531 0098 0023     		movs	r3, #0
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 532              		.loc 1 308 0
 533 009a 0922     		movs	r2, #9
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 534              		.loc 1 305 0
 535 009c 0224     		movs	r4, #2
 536              		.loc 1 309 0
 537 009e 6946     		mov	r1, sp
 538 00a0 0C48     		ldr	r0, .L73+24
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 539              		.loc 1 308 0
 540 00a2 0492     		str	r2, [sp, #16]
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 541              		.loc 1 305 0
 542 00a4 CDE90054 		strd	r5, r4, [sp]
 307:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 543              		.loc 1 307 0
 544 00a8 CDE90233 		strd	r3, r3, [sp, #8]
 545              		.loc 1 309 0
 546 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 547              	.LVL28:
 548              	.LBE25:
 549              	.LBE28:
 159:Src/tim.c     **** /* TIM14 init function */
 550              		.loc 1 159 0
 551 00b0 0DB0     		add	sp, sp, #52
 552              	.LCFI18:
 553              		.cfi_remember_state
 554              		.cfi_def_cfa_offset 12
 555              		@ sp needed
 556 00b2 30BD     		pop	{r4, r5, pc}
 557              	.LVL29:
 558              	.L71:
 559              	.LCFI19:
 560              		.cfi_restore_state
 561              	.LBB29:
 562              	.LBB26:
 563              	.LBB22:
 564              	.LBB23:
 284:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 565              		.loc 1 284 0
 566 00b4 4FF48075 		mov	r5, #256
 567 00b8 EEE7     		b	.L67
 568              	.L74:
 569 00ba 00BF     		.align	2
 570              	.L73:
 571 00bc 00000000 		.word	htim13
 572 00c0 001C0040 		.word	1073748992
 573 00c4 00000000 		.word	.LC0
 574 00c8 00040040 		.word	1073742848
ARM GAS  /tmp/ccWml4XH.s 			page 18


 575 00cc 00200040 		.word	1073750016
 576 00d0 00080240 		.word	1073874944
 577 00d4 00140240 		.word	1073878016
 578              	.LBE23:
 579              	.LBE22:
 580              	.LBE26:
 581              	.LBE29:
 582              		.cfi_endproc
 583              	.LFE140:
 585              		.section	.text.MX_TIM14_Init,"ax",%progbits
 586              		.align	1
 587              		.p2align 2,,3
 588              		.global	MX_TIM14_Init
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	MX_TIM14_Init:
 595              	.LFB141:
 162:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 596              		.loc 1 162 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 48
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 30B5     		push	{r4, r5, lr}
 601              	.LCFI20:
 602              		.cfi_def_cfa_offset 12
 603              		.cfi_offset 4, -12
 604              		.cfi_offset 5, -8
 605              		.cfi_offset 14, -4
 165:Src/tim.c     ****   htim14.Init.Prescaler = 3242;
 606              		.loc 1 165 0
 607 0002 2E4C     		ldr	r4, .L98
 167:Src/tim.c     ****   htim14.Init.Period = 200;
 608              		.loc 1 167 0
 609 0004 0023     		movs	r3, #0
 166:Src/tim.c     ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 610              		.loc 1 166 0
 611 0006 40F6AA41 		movw	r1, #3242
 165:Src/tim.c     ****   htim14.Init.Prescaler = 3242;
 612              		.loc 1 165 0
 613 000a 2D4D     		ldr	r5, .L98+4
 168:Src/tim.c     ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 614              		.loc 1 168 0
 615 000c C822     		movs	r2, #200
 162:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 616              		.loc 1 162 0
 617 000e 8DB0     		sub	sp, sp, #52
 618              	.LCFI21:
 619              		.cfi_def_cfa_offset 64
 171:Src/tim.c     ****   {
 620              		.loc 1 171 0
 621 0010 2046     		mov	r0, r4
 169:Src/tim.c     ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 622              		.loc 1 169 0
 623 0012 2361     		str	r3, [r4, #16]
 170:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
ARM GAS  /tmp/ccWml4XH.s 			page 19


 624              		.loc 1 170 0
 625 0014 A361     		str	r3, [r4, #24]
 166:Src/tim.c     ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 626              		.loc 1 166 0
 627 0016 C4E90051 		strd	r5, r1, [r4]
 167:Src/tim.c     ****   htim14.Init.Period = 200;
 628              		.loc 1 167 0
 629 001a C4E90232 		strd	r3, r2, [r4, #8]
 171:Src/tim.c     ****   {
 630              		.loc 1 171 0
 631 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 632              	.LVL30:
 633 0022 20BB     		cbnz	r0, .L93
 634              	.L76:
 176:Src/tim.c     ****   {
 635              		.loc 1 176 0
 636 0024 2548     		ldr	r0, .L98
 637 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 638              	.LVL31:
 639 002a D8B9     		cbnz	r0, .L94
 640              	.L77:
 182:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 641              		.loc 1 182 0
 642 002c 0023     		movs	r3, #0
 181:Src/tim.c     ****   sConfigOC.Pulse = 0;
 643              		.loc 1 181 0
 644 002e 6025     		movs	r5, #96
 185:Src/tim.c     ****   {
 645              		.loc 1 185 0
 646 0030 05A9     		add	r1, sp, #20
 647 0032 2248     		ldr	r0, .L98
 648 0034 1A46     		mov	r2, r3
 184:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 649              		.loc 1 184 0
 650 0036 0993     		str	r3, [sp, #36]
 181:Src/tim.c     ****   sConfigOC.Pulse = 0;
 651              		.loc 1 181 0
 652 0038 0595     		str	r5, [sp, #20]
 183:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 653              		.loc 1 183 0
 654 003a CDE90633 		strd	r3, r3, [sp, #24]
 185:Src/tim.c     ****   {
 655              		.loc 1 185 0
 656 003e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 657              	.LVL32:
 658 0042 18B1     		cbz	r0, .L78
 187:Src/tim.c     ****   }
 659              		.loc 1 187 0
 660 0044 BB21     		movs	r1, #187
 661 0046 1F48     		ldr	r0, .L98+8
 662 0048 FFF7FEFF 		bl	_Error_Handler
 663              	.LVL33:
 664              	.L78:
 665              	.LBB34:
 666              	.LBB35:
 255:Src/tim.c     ****   {
 667              		.loc 1 255 0
ARM GAS  /tmp/ccWml4XH.s 			page 20


 668 004c 2368     		ldr	r3, [r4]
 669 004e 1E4A     		ldr	r2, .L98+12
 670 0050 9342     		cmp	r3, r2
 671 0052 11D0     		beq	.L95
 275:Src/tim.c     ****   {
 672              		.loc 1 275 0
 673 0054 1D4A     		ldr	r2, .L98+16
 674 0056 9342     		cmp	r3, r2
 675 0058 2CD0     		beq	.L96
 295:Src/tim.c     ****   {
 676              		.loc 1 295 0
 677 005a 194A     		ldr	r2, .L98+4
 678 005c 9342     		cmp	r3, r2
 679 005e 19D0     		beq	.L97
 680              	.LBE35:
 681              	.LBE34:
 192:Src/tim.c     **** 
 682              		.loc 1 192 0
 683 0060 0DB0     		add	sp, sp, #52
 684              	.LCFI22:
 685              		.cfi_remember_state
 686              		.cfi_def_cfa_offset 12
 687              		@ sp needed
 688 0062 30BD     		pop	{r4, r5, pc}
 689              	.LVL34:
 690              	.L94:
 691              	.LCFI23:
 692              		.cfi_restore_state
 178:Src/tim.c     ****   }
 693              		.loc 1 178 0
 694 0064 B221     		movs	r1, #178
 695 0066 1748     		ldr	r0, .L98+8
 696 0068 FFF7FEFF 		bl	_Error_Handler
 697              	.LVL35:
 698 006c DEE7     		b	.L77
 699              	.L93:
 173:Src/tim.c     ****   }
 700              		.loc 1 173 0
 701 006e AD21     		movs	r1, #173
 702 0070 1448     		ldr	r0, .L98+8
 703 0072 FFF7FEFF 		bl	_Error_Handler
 704              	.LVL36:
 705 0076 D5E7     		b	.L76
 706              	.LVL37:
 707              	.L95:
 708              	.LBB41:
 709              	.LBB38:
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 710              		.loc 1 265 0
 711 0078 0222     		movs	r2, #2
 266:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 712              		.loc 1 266 0
 713 007a 0023     		movs	r3, #0
 264:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 714              		.loc 1 264 0
 715 007c C024     		movs	r4, #192
 269:Src/tim.c     **** 
ARM GAS  /tmp/ccWml4XH.s 			page 21


 716              		.loc 1 269 0
 717 007e 6946     		mov	r1, sp
 718 0080 1348     		ldr	r0, .L98+20
 268:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 719              		.loc 1 268 0
 720 0082 0492     		str	r2, [sp, #16]
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 721              		.loc 1 265 0
 722 0084 CDE90042 		strd	r4, r2, [sp]
 267:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 723              		.loc 1 267 0
 724 0088 CDE90233 		strd	r3, r3, [sp, #8]
 269:Src/tim.c     **** 
 725              		.loc 1 269 0
 726 008c FFF7FEFF 		bl	HAL_GPIO_Init
 727              	.LVL38:
 728              	.LBE38:
 729              	.LBE41:
 192:Src/tim.c     **** 
 730              		.loc 1 192 0
 731 0090 0DB0     		add	sp, sp, #52
 732              	.LCFI24:
 733              		.cfi_remember_state
 734              		.cfi_def_cfa_offset 12
 735              		@ sp needed
 736 0092 30BD     		pop	{r4, r5, pc}
 737              	.L97:
 738              	.LCFI25:
 739              		.cfi_restore_state
 740              	.LBB42:
 741              	.LBB39:
 304:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 742              		.loc 1 304 0
 743 0094 4FF40075 		mov	r5, #512
 744              	.L92:
 306:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 745              		.loc 1 306 0
 746 0098 0023     		movs	r3, #0
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 747              		.loc 1 308 0
 748 009a 0922     		movs	r2, #9
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 749              		.loc 1 305 0
 750 009c 0224     		movs	r4, #2
 751              		.loc 1 309 0
 752 009e 6946     		mov	r1, sp
 753 00a0 0C48     		ldr	r0, .L98+24
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 754              		.loc 1 308 0
 755 00a2 0492     		str	r2, [sp, #16]
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 756              		.loc 1 305 0
 757 00a4 CDE90054 		strd	r5, r4, [sp]
 307:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 758              		.loc 1 307 0
 759 00a8 CDE90233 		strd	r3, r3, [sp, #8]
 760              		.loc 1 309 0
ARM GAS  /tmp/ccWml4XH.s 			page 22


 761 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 762              	.LVL39:
 763              	.LBE39:
 764              	.LBE42:
 192:Src/tim.c     **** 
 765              		.loc 1 192 0
 766 00b0 0DB0     		add	sp, sp, #52
 767              	.LCFI26:
 768              		.cfi_remember_state
 769              		.cfi_def_cfa_offset 12
 770              		@ sp needed
 771 00b2 30BD     		pop	{r4, r5, pc}
 772              	.LVL40:
 773              	.L96:
 774              	.LCFI27:
 775              		.cfi_restore_state
 776              	.LBB43:
 777              	.LBB40:
 778              	.LBB36:
 779              	.LBB37:
 284:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 780              		.loc 1 284 0
 781 00b4 4FF48075 		mov	r5, #256
 782 00b8 EEE7     		b	.L92
 783              	.L99:
 784 00ba 00BF     		.align	2
 785              	.L98:
 786 00bc 00000000 		.word	htim14
 787 00c0 00200040 		.word	1073750016
 788 00c4 00000000 		.word	.LC0
 789 00c8 00040040 		.word	1073742848
 790 00cc 001C0040 		.word	1073748992
 791 00d0 00080240 		.word	1073874944
 792 00d4 00140240 		.word	1073878016
 793              	.LBE37:
 794              	.LBE36:
 795              	.LBE40:
 796              	.LBE43:
 797              		.cfi_endproc
 798              	.LFE141:
 800              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 801              		.align	1
 802              		.p2align 2,,3
 803              		.global	HAL_TIM_Base_MspInit
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	HAL_TIM_Base_MspInit:
 810              	.LFB142:
 195:Src/tim.c     **** 
 811              		.loc 1 195 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 16
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              	.LVL41:
 197:Src/tim.c     ****   {
ARM GAS  /tmp/ccWml4XH.s 			page 23


 816              		.loc 1 197 0
 817 0000 0368     		ldr	r3, [r0]
 818 0002 B3F1804F 		cmp	r3, #1073741824
 195:Src/tim.c     **** 
 819              		.loc 1 195 0
 820 0006 10B5     		push	{r4, lr}
 821              	.LCFI28:
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 4, -8
 824              		.cfi_offset 14, -4
 825 0008 84B0     		sub	sp, sp, #16
 826              	.LCFI29:
 827              		.cfi_def_cfa_offset 24
 197:Src/tim.c     ****   {
 828              		.loc 1 197 0
 829 000a 1FD0     		beq	.L105
 212:Src/tim.c     ****   {
 830              		.loc 1 212 0
 831 000c 1A4A     		ldr	r2, .L108
 832 000e 9342     		cmp	r3, r2
 833 0010 10D0     		beq	.L106
 223:Src/tim.c     ****   {
 834              		.loc 1 223 0
 835 0012 1A4A     		ldr	r2, .L108+4
 836 0014 9342     		cmp	r3, r2
 837 0016 01D0     		beq	.L107
 234:Src/tim.c     **** 
 838              		.loc 1 234 0
 839 0018 04B0     		add	sp, sp, #16
 840              	.LCFI30:
 841              		.cfi_remember_state
 842              		.cfi_def_cfa_offset 8
 843              		@ sp needed
 844 001a 10BD     		pop	{r4, pc}
 845              	.L107:
 846              	.LCFI31:
 847              		.cfi_restore_state
 848              	.LBB44:
 229:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 849              		.loc 1 229 0
 850 001c 184B     		ldr	r3, .L108+8
 851 001e 1A6C     		ldr	r2, [r3, #64]
 852 0020 42F48072 		orr	r2, r2, #256
 853 0024 1A64     		str	r2, [r3, #64]
 854 0026 1B6C     		ldr	r3, [r3, #64]
 855 0028 03F48073 		and	r3, r3, #256
 856 002c 0393     		str	r3, [sp, #12]
 857 002e 039B     		ldr	r3, [sp, #12]
 858              	.LBE44:
 234:Src/tim.c     **** 
 859              		.loc 1 234 0
 860 0030 04B0     		add	sp, sp, #16
 861              	.LCFI32:
 862              		.cfi_remember_state
 863              		.cfi_def_cfa_offset 8
 864              		@ sp needed
 865 0032 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccWml4XH.s 			page 24


 866              	.L106:
 867              	.LCFI33:
 868              		.cfi_restore_state
 869              	.LBB45:
 218:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 870              		.loc 1 218 0
 871 0034 124B     		ldr	r3, .L108+8
 872 0036 1A6C     		ldr	r2, [r3, #64]
 873 0038 42F08002 		orr	r2, r2, #128
 874 003c 1A64     		str	r2, [r3, #64]
 875 003e 1B6C     		ldr	r3, [r3, #64]
 876 0040 03F08003 		and	r3, r3, #128
 877 0044 0293     		str	r3, [sp, #8]
 878 0046 029B     		ldr	r3, [sp, #8]
 879              	.LBE45:
 234:Src/tim.c     **** 
 880              		.loc 1 234 0
 881 0048 04B0     		add	sp, sp, #16
 882              	.LCFI34:
 883              		.cfi_remember_state
 884              		.cfi_def_cfa_offset 8
 885              		@ sp needed
 886 004a 10BD     		pop	{r4, pc}
 887              	.L105:
 888              	.LCFI35:
 889              		.cfi_restore_state
 890              	.LBB46:
 203:Src/tim.c     **** 
 891              		.loc 1 203 0
 892 004c 03F50E33 		add	r3, r3, #145408
 893              	.LBE46:
 206:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 894              		.loc 1 206 0
 895 0050 0022     		movs	r2, #0
 896 0052 1C20     		movs	r0, #28
 897              	.LVL42:
 898              	.LBB47:
 203:Src/tim.c     **** 
 899              		.loc 1 203 0
 900 0054 1C6C     		ldr	r4, [r3, #64]
 901              	.LBE47:
 206:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 902              		.loc 1 206 0
 903 0056 1146     		mov	r1, r2
 904              	.LBB48:
 203:Src/tim.c     **** 
 905              		.loc 1 203 0
 906 0058 44F00104 		orr	r4, r4, #1
 907 005c 1C64     		str	r4, [r3, #64]
 908 005e 1B6C     		ldr	r3, [r3, #64]
 909 0060 03F00103 		and	r3, r3, #1
 910 0064 0193     		str	r3, [sp, #4]
 911 0066 019B     		ldr	r3, [sp, #4]
 912              	.LBE48:
 206:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 913              		.loc 1 206 0
 914 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccWml4XH.s 			page 25


 915              	.LVL43:
 207:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 916              		.loc 1 207 0
 917 006c 1C20     		movs	r0, #28
 234:Src/tim.c     **** 
 918              		.loc 1 234 0
 919 006e 04B0     		add	sp, sp, #16
 920              	.LCFI36:
 921              		.cfi_def_cfa_offset 8
 922              		@ sp needed
 923 0070 BDE81040 		pop	{r4, lr}
 924              	.LCFI37:
 925              		.cfi_restore 14
 926              		.cfi_restore 4
 927              		.cfi_def_cfa_offset 0
 207:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 928              		.loc 1 207 0
 929 0074 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 930              	.LVL44:
 931              	.L109:
 932              		.align	2
 933              	.L108:
 934 0078 001C0040 		.word	1073748992
 935 007c 00200040 		.word	1073750016
 936 0080 00380240 		.word	1073887232
 937              		.cfi_endproc
 938              	.LFE142:
 940              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 941              		.align	1
 942              		.p2align 2,,3
 943              		.global	HAL_TIM_PWM_MspInit
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	HAL_TIM_PWM_MspInit:
 950              	.LFB143:
 237:Src/tim.c     **** 
 951              		.loc 1 237 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956              	.LVL45:
 239:Src/tim.c     ****   {
 957              		.loc 1 239 0
 958 0000 0268     		ldr	r2, [r0]
 959 0002 094B     		ldr	r3, .L117
 960 0004 9A42     		cmp	r2, r3
 961 0006 00D0     		beq	.L116
 962 0008 7047     		bx	lr
 963              	.L116:
 964              	.LBB49:
 245:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 965              		.loc 1 245 0
 966 000a 03F50D33 		add	r3, r3, #144384
 967              	.LBE49:
ARM GAS  /tmp/ccWml4XH.s 			page 26


 237:Src/tim.c     **** 
 968              		.loc 1 237 0
 969 000e 82B0     		sub	sp, sp, #8
 970              	.LCFI38:
 971              		.cfi_def_cfa_offset 8
 972              	.LBB50:
 245:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 973              		.loc 1 245 0
 974 0010 1A6C     		ldr	r2, [r3, #64]
 975 0012 42F00202 		orr	r2, r2, #2
 976 0016 1A64     		str	r2, [r3, #64]
 977 0018 1B6C     		ldr	r3, [r3, #64]
 978 001a 03F00203 		and	r3, r3, #2
 979 001e 0193     		str	r3, [sp, #4]
 980 0020 019B     		ldr	r3, [sp, #4]
 981              	.LBE50:
 250:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 982              		.loc 1 250 0
 983 0022 02B0     		add	sp, sp, #8
 984              	.LCFI39:
 985              		.cfi_def_cfa_offset 0
 986              		@ sp needed
 987 0024 7047     		bx	lr
 988              	.L118:
 989 0026 00BF     		.align	2
 990              	.L117:
 991 0028 00040040 		.word	1073742848
 992              		.cfi_endproc
 993              	.LFE143:
 995              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 996              		.align	1
 997              		.p2align 2,,3
 998              		.global	HAL_TIM_MspPostInit
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	HAL_TIM_MspPostInit:
 1005              	.LFB144:
 252:Src/tim.c     **** 
 1006              		.loc 1 252 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 24
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL46:
 255:Src/tim.c     ****   {
 1011              		.loc 1 255 0
 1012 0000 0368     		ldr	r3, [r0]
 1013 0002 174A     		ldr	r2, .L128
 1014 0004 9342     		cmp	r3, r2
 252:Src/tim.c     **** 
 1015              		.loc 1 252 0
 1016 0006 30B5     		push	{r4, r5, lr}
 1017              	.LCFI40:
 1018              		.cfi_def_cfa_offset 12
 1019              		.cfi_offset 4, -12
 1020              		.cfi_offset 5, -8
ARM GAS  /tmp/ccWml4XH.s 			page 27


 1021              		.cfi_offset 14, -4
 1022 0008 87B0     		sub	sp, sp, #28
 1023              	.LCFI41:
 1024              		.cfi_def_cfa_offset 40
 255:Src/tim.c     ****   {
 1025              		.loc 1 255 0
 1026 000a 07D0     		beq	.L125
 275:Src/tim.c     ****   {
 1027              		.loc 1 275 0
 1028 000c 154A     		ldr	r2, .L128+4
 1029 000e 9342     		cmp	r3, r2
 1030 0010 22D0     		beq	.L126
 295:Src/tim.c     ****   {
 1031              		.loc 1 295 0
 1032 0012 154A     		ldr	r2, .L128+8
 1033 0014 9342     		cmp	r3, r2
 1034 0016 0FD0     		beq	.L127
 310:Src/tim.c     **** 
 311:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 1 */
 312:Src/tim.c     **** 
 313:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 1 */
 314:Src/tim.c     ****   }
 315:Src/tim.c     **** 
 316:Src/tim.c     **** }
 1035              		.loc 1 316 0
 1036 0018 07B0     		add	sp, sp, #28
 1037              	.LCFI42:
 1038              		.cfi_remember_state
 1039              		.cfi_def_cfa_offset 12
 1040              		@ sp needed
 1041 001a 30BD     		pop	{r4, r5, pc}
 1042              	.L125:
 1043              	.LCFI43:
 1044              		.cfi_restore_state
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1045              		.loc 1 265 0
 1046 001c 0222     		movs	r2, #2
 266:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1047              		.loc 1 266 0
 1048 001e 0023     		movs	r3, #0
 264:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1049              		.loc 1 264 0
 1050 0020 C024     		movs	r4, #192
 269:Src/tim.c     **** 
 1051              		.loc 1 269 0
 1052 0022 01A9     		add	r1, sp, #4
 1053 0024 1148     		ldr	r0, .L128+12
 1054              	.LVL47:
 268:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1055              		.loc 1 268 0
 1056 0026 0592     		str	r2, [sp, #20]
 265:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1057              		.loc 1 265 0
 1058 0028 CDE90142 		strd	r4, r2, [sp, #4]
 267:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 1059              		.loc 1 267 0
 1060 002c CDE90333 		strd	r3, r3, [sp, #12]
ARM GAS  /tmp/ccWml4XH.s 			page 28


 269:Src/tim.c     **** 
 1061              		.loc 1 269 0
 1062 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1063              	.LVL48:
 1064              		.loc 1 316 0
 1065 0034 07B0     		add	sp, sp, #28
 1066              	.LCFI44:
 1067              		.cfi_remember_state
 1068              		.cfi_def_cfa_offset 12
 1069              		@ sp needed
 1070 0036 30BD     		pop	{r4, r5, pc}
 1071              	.LVL49:
 1072              	.L127:
 1073              	.LCFI45:
 1074              		.cfi_restore_state
 304:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1075              		.loc 1 304 0
 1076 0038 4FF40075 		mov	r5, #512
 1077              	.L124:
 306:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1078              		.loc 1 306 0
 1079 003c 0023     		movs	r3, #0
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1080              		.loc 1 308 0
 1081 003e 0922     		movs	r2, #9
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1082              		.loc 1 305 0
 1083 0040 0224     		movs	r4, #2
 309:Src/tim.c     **** 
 1084              		.loc 1 309 0
 1085 0042 01A9     		add	r1, sp, #4
 1086 0044 0A48     		ldr	r0, .L128+16
 1087              	.LVL50:
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1088              		.loc 1 308 0
 1089 0046 0592     		str	r2, [sp, #20]
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1090              		.loc 1 305 0
 1091 0048 CDE90154 		strd	r5, r4, [sp, #4]
 307:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 1092              		.loc 1 307 0
 1093 004c CDE90333 		strd	r3, r3, [sp, #12]
 309:Src/tim.c     **** 
 1094              		.loc 1 309 0
 1095 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 1096              	.LVL51:
 1097              		.loc 1 316 0
 1098 0054 07B0     		add	sp, sp, #28
 1099              	.LCFI46:
 1100              		.cfi_remember_state
 1101              		.cfi_def_cfa_offset 12
 1102              		@ sp needed
 1103 0056 30BD     		pop	{r4, r5, pc}
 1104              	.LVL52:
 1105              	.L126:
 1106              	.LCFI47:
 1107              		.cfi_restore_state
ARM GAS  /tmp/ccWml4XH.s 			page 29


 1108              	.LBB53:
 1109              	.LBB54:
 284:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1110              		.loc 1 284 0
 1111 0058 4FF48075 		mov	r5, #256
 1112 005c EEE7     		b	.L124
 1113              	.L129:
 1114 005e 00BF     		.align	2
 1115              	.L128:
 1116 0060 00040040 		.word	1073742848
 1117 0064 001C0040 		.word	1073748992
 1118 0068 00200040 		.word	1073750016
 1119 006c 00080240 		.word	1073874944
 1120 0070 00140240 		.word	1073878016
 1121              	.LBE54:
 1122              	.LBE53:
 1123              		.cfi_endproc
 1124              	.LFE144:
 1126              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 1127              		.align	1
 1128              		.p2align 2,,3
 1129              		.global	HAL_TIM_Base_MspDeInit
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1133              		.fpu fpv4-sp-d16
 1135              	HAL_TIM_Base_MspDeInit:
 1136              	.LFB145:
 317:Src/tim.c     **** 
 318:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 319:Src/tim.c     **** {
 1137              		.loc 1 319 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 1142              	.LVL53:
 320:Src/tim.c     **** 
 321:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 1143              		.loc 1 321 0
 1144 0000 0368     		ldr	r3, [r0]
 1145 0002 B3F1804F 		cmp	r3, #1073741824
 1146 0006 14D0     		beq	.L134
 322:Src/tim.c     ****   {
 323:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 324:Src/tim.c     **** 
 325:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 326:Src/tim.c     ****     /* Peripheral clock disable */
 327:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 328:Src/tim.c     **** 
 329:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 330:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 331:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 332:Src/tim.c     **** 
 333:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 334:Src/tim.c     ****   }
 335:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
ARM GAS  /tmp/ccWml4XH.s 			page 30


 1147              		.loc 1 335 0
 1148 0008 0E4A     		ldr	r2, .L137
 1149 000a 9342     		cmp	r3, r2
 1150 000c 0AD0     		beq	.L135
 336:Src/tim.c     ****   {
 337:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 0 */
 338:Src/tim.c     **** 
 339:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 0 */
 340:Src/tim.c     ****     /* Peripheral clock disable */
 341:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_DISABLE();
 342:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 343:Src/tim.c     **** 
 344:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 1 */
 345:Src/tim.c     ****   }
 346:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 1151              		.loc 1 346 0
 1152 000e 0E4A     		ldr	r2, .L137+4
 1153 0010 9342     		cmp	r3, r2
 1154 0012 00D0     		beq	.L136
 347:Src/tim.c     ****   {
 348:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 0 */
 349:Src/tim.c     **** 
 350:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 0 */
 351:Src/tim.c     ****     /* Peripheral clock disable */
 352:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_DISABLE();
 353:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 354:Src/tim.c     **** 
 355:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 1 */
 356:Src/tim.c     ****   }
 357:Src/tim.c     **** }
 1155              		.loc 1 357 0
 1156 0014 7047     		bx	lr
 1157              	.L136:
 352:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 1158              		.loc 1 352 0
 1159 0016 02F50632 		add	r2, r2, #137216
 1160 001a 136C     		ldr	r3, [r2, #64]
 1161 001c 23F48073 		bic	r3, r3, #256
 1162 0020 1364     		str	r3, [r2, #64]
 1163              		.loc 1 357 0
 1164 0022 7047     		bx	lr
 1165              	.L135:
 341:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 1166              		.loc 1 341 0
 1167 0024 02F50732 		add	r2, r2, #138240
 1168 0028 136C     		ldr	r3, [r2, #64]
 1169 002a 23F08003 		bic	r3, r3, #128
 1170 002e 1364     		str	r3, [r2, #64]
 1171 0030 7047     		bx	lr
 1172              	.L134:
 327:Src/tim.c     **** 
 1173              		.loc 1 327 0
 1174 0032 064A     		ldr	r2, .L137+8
 330:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 1175              		.loc 1 330 0
 1176 0034 1C20     		movs	r0, #28
 1177              	.LVL54:
ARM GAS  /tmp/ccWml4XH.s 			page 31


 327:Src/tim.c     **** 
 1178              		.loc 1 327 0
 1179 0036 136C     		ldr	r3, [r2, #64]
 1180 0038 23F00103 		bic	r3, r3, #1
 1181 003c 1364     		str	r3, [r2, #64]
 330:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 1182              		.loc 1 330 0
 1183 003e FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 1184              	.LVL55:
 1185              	.L138:
 1186 0042 00BF     		.align	2
 1187              	.L137:
 1188 0044 001C0040 		.word	1073748992
 1189 0048 00200040 		.word	1073750016
 1190 004c 00380240 		.word	1073887232
 1191              		.cfi_endproc
 1192              	.LFE145:
 1194              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 1195              		.align	1
 1196              		.p2align 2,,3
 1197              		.global	HAL_TIM_PWM_MspDeInit
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu fpv4-sp-d16
 1203              	HAL_TIM_PWM_MspDeInit:
 1204              	.LFB146:
 358:Src/tim.c     **** 
 359:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 360:Src/tim.c     **** {
 1205              		.loc 1 360 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 1210              	.LVL56:
 361:Src/tim.c     **** 
 362:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 1211              		.loc 1 362 0
 1212 0000 0268     		ldr	r2, [r0]
 1213 0002 044B     		ldr	r3, .L141
 1214 0004 9A42     		cmp	r2, r3
 1215 0006 04D1     		bne	.L139
 363:Src/tim.c     ****   {
 364:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 365:Src/tim.c     **** 
 366:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 367:Src/tim.c     ****     /* Peripheral clock disable */
 368:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 1216              		.loc 1 368 0
 1217 0008 034A     		ldr	r2, .L141+4
 1218 000a 136C     		ldr	r3, [r2, #64]
 1219 000c 23F00203 		bic	r3, r3, #2
 1220 0010 1364     		str	r3, [r2, #64]
 1221              	.L139:
 369:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 370:Src/tim.c     **** 
ARM GAS  /tmp/ccWml4XH.s 			page 32


 371:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 372:Src/tim.c     ****   }
 373:Src/tim.c     **** } 
 1222              		.loc 1 373 0
 1223 0012 7047     		bx	lr
 1224              	.L142:
 1225              		.align	2
 1226              	.L141:
 1227 0014 00040040 		.word	1073742848
 1228 0018 00380240 		.word	1073887232
 1229              		.cfi_endproc
 1230              	.LFE146:
 1232              		.comm	htim14,64,4
 1233              		.comm	htim13,64,4
 1234              		.comm	htim3,64,4
 1235              		.comm	htim2,64,4
 1236              		.comm	motor4,8,4
 1237              		.comm	motor3,8,4
 1238              		.comm	motor2,8,4
 1239              		.comm	motor1,8,4
 1240              		.comm	UpdateFile,4,4
 1241              		.comm	SpiRxData,4,4
 1242              		.comm	SpiTxData,4,4
 1243              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 1244              		.align	2
 1245              	.LC0:
 1246 0000 5372632F 		.ascii	"Src/tim.c\000"
 1246      74696D2E 
 1246      6300
 1247              		.text
 1248              	.Letext0:
 1249              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1250              		.file 3 "/usr/include/newlib/sys/lock.h"
 1251              		.file 4 "/usr/include/newlib/sys/_types.h"
 1252              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1253              		.file 6 "/usr/include/newlib/sys/reent.h"
 1254              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 1255              		.file 8 "Inc/main.h"
 1256              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1257              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1258              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1259              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1260              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1261              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1262              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1263              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1264              		.file 17 "Inc/tim.h"
 1265              		.file 18 "Inc/motor.h"
 1266              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccWml4XH.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccWml4XH.s:18     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccWml4XH.s:26     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccWml4XH.s:126    .text.MX_TIM2_Init:0000000000000068 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccWml4XH.s:132    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccWml4XH.s:140    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccWml4XH.s:356    .text.MX_TIM3_Init:00000000000000dc $d
                            *COM*:0000000000000040 htim3
     /tmp/ccWml4XH.s:371    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccWml4XH.s:379    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccWml4XH.s:571    .text.MX_TIM13_Init:00000000000000bc $d
                            *COM*:0000000000000040 htim13
     /tmp/ccWml4XH.s:586    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccWml4XH.s:594    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccWml4XH.s:786    .text.MX_TIM14_Init:00000000000000bc $d
                            *COM*:0000000000000040 htim14
     /tmp/ccWml4XH.s:801    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccWml4XH.s:809    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccWml4XH.s:934    .text.HAL_TIM_Base_MspInit:0000000000000078 $d
     /tmp/ccWml4XH.s:941    .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccWml4XH.s:949    .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccWml4XH.s:991    .text.HAL_TIM_PWM_MspInit:0000000000000028 $d
     /tmp/ccWml4XH.s:996    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccWml4XH.s:1004   .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccWml4XH.s:1116   .text.HAL_TIM_MspPostInit:0000000000000060 $d
     /tmp/ccWml4XH.s:1127   .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccWml4XH.s:1135   .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccWml4XH.s:1188   .text.HAL_TIM_Base_MspDeInit:0000000000000044 $d
     /tmp/ccWml4XH.s:1195   .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccWml4XH.s:1203   .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccWml4XH.s:1227   .text.HAL_TIM_PWM_MspDeInit:0000000000000014 $d
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 SpiTxData
     /tmp/ccWml4XH.s:1244   .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
_Error_Handler
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
