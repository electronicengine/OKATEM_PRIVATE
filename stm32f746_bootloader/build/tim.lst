ARM GAS  /tmp/ccLAxMQk.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	motor1,8,4
  18              		.comm	motor2,8,4
  19              		.comm	motor3,8,4
  20              		.comm	motor4,8,4
  21              		.comm	htim2,64,4
  22              		.comm	htim3,64,4
  23              		.comm	htim13,64,4
  24              		.comm	htim14,64,4
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 5372632F 		.ascii	"Src/tim.c\000"
  28      74696D2E 
  28      6300
  29              		.section	.text.MX_TIM2_Init,"ax",%progbits
  30              		.align	1
  31              		.global	MX_TIM2_Init
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv4-sp-d16
  37              	MX_TIM2_Init:
  38              	.LFB136:
  39              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /tmp/ccLAxMQk.s 			page 2


  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** #include "motor.h"
  43:Src/tim.c     **** 
  44:Src/tim.c     **** /* USER CODE BEGIN 0 */
  45:Src/tim.c     **** 
  46:Src/tim.c     **** /* USER CODE END 0 */
  47:Src/tim.c     **** 
  48:Src/tim.c     **** TIM_HandleTypeDef htim2;
  49:Src/tim.c     **** TIM_HandleTypeDef htim3;
  50:Src/tim.c     **** TIM_HandleTypeDef htim13;
  51:Src/tim.c     **** TIM_HandleTypeDef htim14;
  52:Src/tim.c     **** 
  53:Src/tim.c     **** /* TIM2 init function */
  54:Src/tim.c     **** void MX_TIM2_Init(void)
  55:Src/tim.c     **** {
  40              		.loc 1 55 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 32
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 88B0     		sub	sp, sp, #32
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 40
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  56:Src/tim.c     ****     TIM_ClockConfigTypeDef sClockSourceConfig;
  57:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
  58:Src/tim.c     **** 
  59:Src/tim.c     ****     htim2.Instance = TIM2;
ARM GAS  /tmp/ccLAxMQk.s 			page 3


  55              		.loc 1 59 0
  56 0006 214B     		ldr	r3, .L6
  57 0008 4FF08042 		mov	r2, #1073741824
  58 000c 1A60     		str	r2, [r3]
  60:Src/tim.c     ****     htim2.Init.Prescaler = 2000;
  59              		.loc 1 60 0
  60 000e 1F4B     		ldr	r3, .L6
  61 0010 4FF4FA62 		mov	r2, #2000
  62 0014 5A60     		str	r2, [r3, #4]
  61:Src/tim.c     ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  63              		.loc 1 61 0
  64 0016 1D4B     		ldr	r3, .L6
  65 0018 0022     		movs	r2, #0
  66 001a 9A60     		str	r2, [r3, #8]
  62:Src/tim.c     ****     htim2.Init.Period = 200;
  67              		.loc 1 62 0
  68 001c 1B4B     		ldr	r3, .L6
  69 001e C822     		movs	r2, #200
  70 0020 DA60     		str	r2, [r3, #12]
  63:Src/tim.c     ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  71              		.loc 1 63 0
  72 0022 1A4B     		ldr	r3, .L6
  73 0024 0022     		movs	r2, #0
  74 0026 1A61     		str	r2, [r3, #16]
  64:Src/tim.c     ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  75              		.loc 1 64 0
  76 0028 184B     		ldr	r3, .L6
  77 002a 0022     		movs	r2, #0
  78 002c 9A61     		str	r2, [r3, #24]
  65:Src/tim.c     ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  79              		.loc 1 65 0
  80 002e 1748     		ldr	r0, .L6
  81 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
  82 0034 0346     		mov	r3, r0
  83 0036 002B     		cmp	r3, #0
  84 0038 03D0     		beq	.L2
  66:Src/tim.c     ****     {
  67:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
  85              		.loc 1 67 0
  86 003a 4321     		movs	r1, #67
  87 003c 1448     		ldr	r0, .L6+4
  88 003e FFF7FEFF 		bl	_Error_Handler
  89              	.L2:
  68:Src/tim.c     ****     }
  69:Src/tim.c     **** 
  70:Src/tim.c     ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  90              		.loc 1 70 0
  91 0042 4FF48053 		mov	r3, #4096
  92 0046 3B61     		str	r3, [r7, #16]
  71:Src/tim.c     ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  93              		.loc 1 71 0
  94 0048 07F11003 		add	r3, r7, #16
  95 004c 1946     		mov	r1, r3
  96 004e 0F48     		ldr	r0, .L6
  97 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  98 0054 0346     		mov	r3, r0
  99 0056 002B     		cmp	r3, #0
ARM GAS  /tmp/ccLAxMQk.s 			page 4


 100 0058 03D0     		beq	.L3
  72:Src/tim.c     ****     {
  73:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 101              		.loc 1 73 0
 102 005a 4921     		movs	r1, #73
 103 005c 0C48     		ldr	r0, .L6+4
 104 005e FFF7FEFF 		bl	_Error_Handler
 105              	.L3:
  74:Src/tim.c     ****     }
  75:Src/tim.c     **** 
  76:Src/tim.c     ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 106              		.loc 1 76 0
 107 0062 0023     		movs	r3, #0
 108 0064 7B60     		str	r3, [r7, #4]
  77:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 109              		.loc 1 77 0
 110 0066 0023     		movs	r3, #0
 111 0068 FB60     		str	r3, [r7, #12]
  78:Src/tim.c     ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 112              		.loc 1 78 0
 113 006a 3B1D     		adds	r3, r7, #4
 114 006c 1946     		mov	r1, r3
 115 006e 0748     		ldr	r0, .L6
 116 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 117 0074 0346     		mov	r3, r0
 118 0076 002B     		cmp	r3, #0
 119 0078 03D0     		beq	.L5
  79:Src/tim.c     ****     {
  80:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 120              		.loc 1 80 0
 121 007a 5021     		movs	r1, #80
 122 007c 0448     		ldr	r0, .L6+4
 123 007e FFF7FEFF 		bl	_Error_Handler
 124              	.L5:
  81:Src/tim.c     ****     }
  82:Src/tim.c     **** 
  83:Src/tim.c     **** }
 125              		.loc 1 83 0
 126 0082 00BF     		nop
 127 0084 2037     		adds	r7, r7, #32
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130 0086 BD46     		mov	sp, r7
 131              	.LCFI4:
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 0088 80BD     		pop	{r7, pc}
 135              	.L7:
 136 008a 00BF     		.align	2
 137              	.L6:
 138 008c 00000000 		.word	htim2
 139 0090 00000000 		.word	.LC0
 140              		.cfi_endproc
 141              	.LFE136:
 143              		.section	.text.MX_TIM3_Init,"ax",%progbits
 144              		.align	1
 145              		.global	MX_TIM3_Init
ARM GAS  /tmp/ccLAxMQk.s 			page 5


 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	MX_TIM3_Init:
 152              	.LFB137:
  84:Src/tim.c     **** 
  85:Src/tim.c     **** 
  86:Src/tim.c     **** /* TIM3 init function */
  87:Src/tim.c     **** void MX_TIM3_Init(void)
  88:Src/tim.c     **** {
 153              		.loc 1 88 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 40
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 80B5     		push	{r7, lr}
 158              	.LCFI5:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 8AB0     		sub	sp, sp, #40
 163              	.LCFI6:
 164              		.cfi_def_cfa_offset 48
 165 0004 00AF     		add	r7, sp, #0
 166              	.LCFI7:
 167              		.cfi_def_cfa_register 7
  89:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
  90:Src/tim.c     ****     TIM_OC_InitTypeDef sConfigOC;
  91:Src/tim.c     **** 
  92:Src/tim.c     ****     htim3.Instance = TIM3;
 168              		.loc 1 92 0
 169 0006 2B4B     		ldr	r3, .L13
 170 0008 2B4A     		ldr	r2, .L13+4
 171 000a 1A60     		str	r2, [r3]
  93:Src/tim.c     ****     htim3.Init.Prescaler = 3240;
 172              		.loc 1 93 0
 173 000c 294B     		ldr	r3, .L13
 174 000e 40F6A842 		movw	r2, #3240
 175 0012 5A60     		str	r2, [r3, #4]
  94:Src/tim.c     ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 176              		.loc 1 94 0
 177 0014 274B     		ldr	r3, .L13
 178 0016 0022     		movs	r2, #0
 179 0018 9A60     		str	r2, [r3, #8]
  95:Src/tim.c     ****     htim3.Init.Period = 200;
 180              		.loc 1 95 0
 181 001a 264B     		ldr	r3, .L13
 182 001c C822     		movs	r2, #200
 183 001e DA60     		str	r2, [r3, #12]
  96:Src/tim.c     ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 184              		.loc 1 96 0
 185 0020 244B     		ldr	r3, .L13
 186 0022 0022     		movs	r2, #0
 187 0024 1A61     		str	r2, [r3, #16]
  97:Src/tim.c     ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 188              		.loc 1 97 0
 189 0026 234B     		ldr	r3, .L13
ARM GAS  /tmp/ccLAxMQk.s 			page 6


 190 0028 0022     		movs	r2, #0
 191 002a 9A61     		str	r2, [r3, #24]
  98:Src/tim.c     ****     if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 192              		.loc 1 98 0
 193 002c 2148     		ldr	r0, .L13
 194 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 195 0032 0346     		mov	r3, r0
 196 0034 002B     		cmp	r3, #0
 197 0036 03D0     		beq	.L9
  99:Src/tim.c     ****     {
 100:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 198              		.loc 1 100 0
 199 0038 6421     		movs	r1, #100
 200 003a 2048     		ldr	r0, .L13+8
 201 003c FFF7FEFF 		bl	_Error_Handler
 202              	.L9:
 101:Src/tim.c     ****     }
 102:Src/tim.c     **** 
 103:Src/tim.c     ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 203              		.loc 1 103 0
 204 0040 0023     		movs	r3, #0
 205 0042 FB61     		str	r3, [r7, #28]
 104:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 206              		.loc 1 104 0
 207 0044 0023     		movs	r3, #0
 208 0046 7B62     		str	r3, [r7, #36]
 105:Src/tim.c     ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 209              		.loc 1 105 0
 210 0048 07F11C03 		add	r3, r7, #28
 211 004c 1946     		mov	r1, r3
 212 004e 1948     		ldr	r0, .L13
 213 0050 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 214 0054 0346     		mov	r3, r0
 215 0056 002B     		cmp	r3, #0
 216 0058 03D0     		beq	.L10
 106:Src/tim.c     ****     {
 107:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 217              		.loc 1 107 0
 218 005a 6B21     		movs	r1, #107
 219 005c 1748     		ldr	r0, .L13+8
 220 005e FFF7FEFF 		bl	_Error_Handler
 221              	.L10:
 108:Src/tim.c     ****     }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 222              		.loc 1 110 0
 223 0062 6023     		movs	r3, #96
 224 0064 3B60     		str	r3, [r7]
 111:Src/tim.c     ****     sConfigOC.Pulse = 0;
 225              		.loc 1 111 0
 226 0066 0023     		movs	r3, #0
 227 0068 7B60     		str	r3, [r7, #4]
 112:Src/tim.c     ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 228              		.loc 1 112 0
 229 006a 0023     		movs	r3, #0
 230 006c BB60     		str	r3, [r7, #8]
 113:Src/tim.c     ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccLAxMQk.s 			page 7


 231              		.loc 1 113 0
 232 006e 0023     		movs	r3, #0
 233 0070 3B61     		str	r3, [r7, #16]
 114:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 234              		.loc 1 114 0
 235 0072 3B46     		mov	r3, r7
 236 0074 0022     		movs	r2, #0
 237 0076 1946     		mov	r1, r3
 238 0078 0E48     		ldr	r0, .L13
 239 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 240 007e 0346     		mov	r3, r0
 241 0080 002B     		cmp	r3, #0
 242 0082 03D0     		beq	.L11
 115:Src/tim.c     ****     {
 116:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 243              		.loc 1 116 0
 244 0084 7421     		movs	r1, #116
 245 0086 0D48     		ldr	r0, .L13+8
 246 0088 FFF7FEFF 		bl	_Error_Handler
 247              	.L11:
 117:Src/tim.c     ****     }
 118:Src/tim.c     **** 
 119:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 248              		.loc 1 119 0
 249 008c 3B46     		mov	r3, r7
 250 008e 0422     		movs	r2, #4
 251 0090 1946     		mov	r1, r3
 252 0092 0848     		ldr	r0, .L13
 253 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 254 0098 0346     		mov	r3, r0
 255 009a 002B     		cmp	r3, #0
 256 009c 03D0     		beq	.L12
 120:Src/tim.c     ****     {
 121:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 257              		.loc 1 121 0
 258 009e 7921     		movs	r1, #121
 259 00a0 0648     		ldr	r0, .L13+8
 260 00a2 FFF7FEFF 		bl	_Error_Handler
 261              	.L12:
 122:Src/tim.c     ****     }
 123:Src/tim.c     **** 
 124:Src/tim.c     ****     HAL_TIM_MspPostInit(&htim3);
 262              		.loc 1 124 0
 263 00a6 0348     		ldr	r0, .L13
 264 00a8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 125:Src/tim.c     **** 
 126:Src/tim.c     **** }
 265              		.loc 1 126 0
 266 00ac 00BF     		nop
 267 00ae 2837     		adds	r7, r7, #40
 268              	.LCFI8:
 269              		.cfi_def_cfa_offset 8
 270 00b0 BD46     		mov	sp, r7
 271              	.LCFI9:
 272              		.cfi_def_cfa_register 13
 273              		@ sp needed
 274 00b2 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccLAxMQk.s 			page 8


 275              	.L14:
 276              		.align	2
 277              	.L13:
 278 00b4 00000000 		.word	htim3
 279 00b8 00040040 		.word	1073742848
 280 00bc 00000000 		.word	.LC0
 281              		.cfi_endproc
 282              	.LFE137:
 284              		.section	.text.MX_TIM13_Init,"ax",%progbits
 285              		.align	1
 286              		.global	MX_TIM13_Init
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	MX_TIM13_Init:
 293              	.LFB138:
 127:Src/tim.c     **** /* TIM13 init function */
 128:Src/tim.c     **** void MX_TIM13_Init(void)
 129:Src/tim.c     **** {
 294              		.loc 1 129 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 32
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              	.LCFI10:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 88B0     		sub	sp, sp, #32
 304              	.LCFI11:
 305              		.cfi_def_cfa_offset 40
 306 0004 00AF     		add	r7, sp, #0
 307              	.LCFI12:
 308              		.cfi_def_cfa_register 7
 130:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   htim13.Instance = TIM13;
 309              		.loc 1 132 0
 310 0006 214B     		ldr	r3, .L19
 311 0008 214A     		ldr	r2, .L19+4
 312 000a 1A60     		str	r2, [r3]
 133:Src/tim.c     ****   htim13.Init.Prescaler = 3242;
 313              		.loc 1 133 0
 314 000c 1F4B     		ldr	r3, .L19
 315 000e 40F6AA42 		movw	r2, #3242
 316 0012 5A60     		str	r2, [r3, #4]
 134:Src/tim.c     ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 317              		.loc 1 134 0
 318 0014 1D4B     		ldr	r3, .L19
 319 0016 0022     		movs	r2, #0
 320 0018 9A60     		str	r2, [r3, #8]
 135:Src/tim.c     ****   htim13.Init.Period = 200;
 321              		.loc 1 135 0
 322 001a 1C4B     		ldr	r3, .L19
 323 001c C822     		movs	r2, #200
 324 001e DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccLAxMQk.s 			page 9


 136:Src/tim.c     ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 325              		.loc 1 136 0
 326 0020 1A4B     		ldr	r3, .L19
 327 0022 0022     		movs	r2, #0
 328 0024 1A61     		str	r2, [r3, #16]
 137:Src/tim.c     ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 329              		.loc 1 137 0
 330 0026 194B     		ldr	r3, .L19
 331 0028 0022     		movs	r2, #0
 332 002a 9A61     		str	r2, [r3, #24]
 138:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 333              		.loc 1 138 0
 334 002c 1748     		ldr	r0, .L19
 335 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 336 0032 0346     		mov	r3, r0
 337 0034 002B     		cmp	r3, #0
 338 0036 03D0     		beq	.L16
 139:Src/tim.c     ****   {
 140:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 339              		.loc 1 140 0
 340 0038 8C21     		movs	r1, #140
 341 003a 1648     		ldr	r0, .L19+8
 342 003c FFF7FEFF 		bl	_Error_Handler
 343              	.L16:
 141:Src/tim.c     ****   }
 142:Src/tim.c     **** 
 143:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 344              		.loc 1 143 0
 345 0040 1248     		ldr	r0, .L19
 346 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 347 0046 0346     		mov	r3, r0
 348 0048 002B     		cmp	r3, #0
 349 004a 03D0     		beq	.L17
 144:Src/tim.c     ****   {
 145:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 350              		.loc 1 145 0
 351 004c 9121     		movs	r1, #145
 352 004e 1148     		ldr	r0, .L19+8
 353 0050 FFF7FEFF 		bl	_Error_Handler
 354              	.L17:
 146:Src/tim.c     ****   }
 147:Src/tim.c     **** 
 148:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 355              		.loc 1 148 0
 356 0054 6023     		movs	r3, #96
 357 0056 7B60     		str	r3, [r7, #4]
 149:Src/tim.c     ****   sConfigOC.Pulse = 0;
 358              		.loc 1 149 0
 359 0058 0023     		movs	r3, #0
 360 005a BB60     		str	r3, [r7, #8]
 150:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 361              		.loc 1 150 0
 362 005c 0023     		movs	r3, #0
 363 005e FB60     		str	r3, [r7, #12]
 151:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 364              		.loc 1 151 0
 365 0060 0023     		movs	r3, #0
ARM GAS  /tmp/ccLAxMQk.s 			page 10


 366 0062 7B61     		str	r3, [r7, #20]
 152:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 367              		.loc 1 152 0
 368 0064 3B1D     		adds	r3, r7, #4
 369 0066 0022     		movs	r2, #0
 370 0068 1946     		mov	r1, r3
 371 006a 0848     		ldr	r0, .L19
 372 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 373 0070 0346     		mov	r3, r0
 374 0072 002B     		cmp	r3, #0
 375 0074 03D0     		beq	.L18
 153:Src/tim.c     ****   {
 154:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 376              		.loc 1 154 0
 377 0076 9A21     		movs	r1, #154
 378 0078 0648     		ldr	r0, .L19+8
 379 007a FFF7FEFF 		bl	_Error_Handler
 380              	.L18:
 155:Src/tim.c     ****   }
 156:Src/tim.c     **** 
 157:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim13);
 381              		.loc 1 157 0
 382 007e 0348     		ldr	r0, .L19
 383 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 158:Src/tim.c     **** 
 159:Src/tim.c     **** }
 384              		.loc 1 159 0
 385 0084 00BF     		nop
 386 0086 2037     		adds	r7, r7, #32
 387              	.LCFI13:
 388              		.cfi_def_cfa_offset 8
 389 0088 BD46     		mov	sp, r7
 390              	.LCFI14:
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 008a 80BD     		pop	{r7, pc}
 394              	.L20:
 395              		.align	2
 396              	.L19:
 397 008c 00000000 		.word	htim13
 398 0090 001C0040 		.word	1073748992
 399 0094 00000000 		.word	.LC0
 400              		.cfi_endproc
 401              	.LFE138:
 403              		.section	.text.MX_TIM14_Init,"ax",%progbits
 404              		.align	1
 405              		.global	MX_TIM14_Init
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	MX_TIM14_Init:
 412              	.LFB139:
 160:Src/tim.c     **** /* TIM14 init function */
 161:Src/tim.c     **** void MX_TIM14_Init(void)
 162:Src/tim.c     **** {
 413              		.loc 1 162 0
ARM GAS  /tmp/ccLAxMQk.s 			page 11


 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 32
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              	.LCFI15:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 88B0     		sub	sp, sp, #32
 423              	.LCFI16:
 424              		.cfi_def_cfa_offset 40
 425 0004 00AF     		add	r7, sp, #0
 426              	.LCFI17:
 427              		.cfi_def_cfa_register 7
 163:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 164:Src/tim.c     **** 
 165:Src/tim.c     ****   htim14.Instance = TIM14;
 428              		.loc 1 165 0
 429 0006 214B     		ldr	r3, .L25
 430 0008 214A     		ldr	r2, .L25+4
 431 000a 1A60     		str	r2, [r3]
 166:Src/tim.c     ****   htim14.Init.Prescaler = 3242;
 432              		.loc 1 166 0
 433 000c 1F4B     		ldr	r3, .L25
 434 000e 40F6AA42 		movw	r2, #3242
 435 0012 5A60     		str	r2, [r3, #4]
 167:Src/tim.c     ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 436              		.loc 1 167 0
 437 0014 1D4B     		ldr	r3, .L25
 438 0016 0022     		movs	r2, #0
 439 0018 9A60     		str	r2, [r3, #8]
 168:Src/tim.c     ****   htim14.Init.Period = 200;
 440              		.loc 1 168 0
 441 001a 1C4B     		ldr	r3, .L25
 442 001c C822     		movs	r2, #200
 443 001e DA60     		str	r2, [r3, #12]
 169:Src/tim.c     ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 444              		.loc 1 169 0
 445 0020 1A4B     		ldr	r3, .L25
 446 0022 0022     		movs	r2, #0
 447 0024 1A61     		str	r2, [r3, #16]
 170:Src/tim.c     ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 448              		.loc 1 170 0
 449 0026 194B     		ldr	r3, .L25
 450 0028 0022     		movs	r2, #0
 451 002a 9A61     		str	r2, [r3, #24]
 171:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 452              		.loc 1 171 0
 453 002c 1748     		ldr	r0, .L25
 454 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 455 0032 0346     		mov	r3, r0
 456 0034 002B     		cmp	r3, #0
 457 0036 03D0     		beq	.L22
 172:Src/tim.c     ****   {
 173:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 458              		.loc 1 173 0
 459 0038 AD21     		movs	r1, #173
ARM GAS  /tmp/ccLAxMQk.s 			page 12


 460 003a 1648     		ldr	r0, .L25+8
 461 003c FFF7FEFF 		bl	_Error_Handler
 462              	.L22:
 174:Src/tim.c     ****   }
 175:Src/tim.c     **** 
 176:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 463              		.loc 1 176 0
 464 0040 1248     		ldr	r0, .L25
 465 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 466 0046 0346     		mov	r3, r0
 467 0048 002B     		cmp	r3, #0
 468 004a 03D0     		beq	.L23
 177:Src/tim.c     ****   {
 178:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 469              		.loc 1 178 0
 470 004c B221     		movs	r1, #178
 471 004e 1148     		ldr	r0, .L25+8
 472 0050 FFF7FEFF 		bl	_Error_Handler
 473              	.L23:
 179:Src/tim.c     ****   }
 180:Src/tim.c     **** 
 181:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 474              		.loc 1 181 0
 475 0054 6023     		movs	r3, #96
 476 0056 7B60     		str	r3, [r7, #4]
 182:Src/tim.c     ****   sConfigOC.Pulse = 0;
 477              		.loc 1 182 0
 478 0058 0023     		movs	r3, #0
 479 005a BB60     		str	r3, [r7, #8]
 183:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 480              		.loc 1 183 0
 481 005c 0023     		movs	r3, #0
 482 005e FB60     		str	r3, [r7, #12]
 184:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 483              		.loc 1 184 0
 484 0060 0023     		movs	r3, #0
 485 0062 7B61     		str	r3, [r7, #20]
 185:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 486              		.loc 1 185 0
 487 0064 3B1D     		adds	r3, r7, #4
 488 0066 0022     		movs	r2, #0
 489 0068 1946     		mov	r1, r3
 490 006a 0848     		ldr	r0, .L25
 491 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 492 0070 0346     		mov	r3, r0
 493 0072 002B     		cmp	r3, #0
 494 0074 03D0     		beq	.L24
 186:Src/tim.c     ****   {
 187:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 495              		.loc 1 187 0
 496 0076 BB21     		movs	r1, #187
 497 0078 0648     		ldr	r0, .L25+8
 498 007a FFF7FEFF 		bl	_Error_Handler
 499              	.L24:
 188:Src/tim.c     ****   }
 189:Src/tim.c     **** 
 190:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim14);
ARM GAS  /tmp/ccLAxMQk.s 			page 13


 500              		.loc 1 190 0
 501 007e 0348     		ldr	r0, .L25
 502 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 191:Src/tim.c     **** 
 192:Src/tim.c     **** }
 503              		.loc 1 192 0
 504 0084 00BF     		nop
 505 0086 2037     		adds	r7, r7, #32
 506              	.LCFI18:
 507              		.cfi_def_cfa_offset 8
 508 0088 BD46     		mov	sp, r7
 509              	.LCFI19:
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 008a 80BD     		pop	{r7, pc}
 513              	.L26:
 514              		.align	2
 515              	.L25:
 516 008c 00000000 		.word	htim14
 517 0090 00200040 		.word	1073750016
 518 0094 00000000 		.word	.LC0
 519              		.cfi_endproc
 520              	.LFE139:
 522              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 523              		.align	1
 524              		.global	HAL_TIM_Base_MspInit
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	HAL_TIM_Base_MspInit:
 531              	.LFB140:
 193:Src/tim.c     **** 
 194:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 195:Src/tim.c     **** {
 532              		.loc 1 195 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 24
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              	.LCFI20:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 7, -8
 540              		.cfi_offset 14, -4
 541 0002 86B0     		sub	sp, sp, #24
 542              	.LCFI21:
 543              		.cfi_def_cfa_offset 32
 544 0004 00AF     		add	r7, sp, #0
 545              	.LCFI22:
 546              		.cfi_def_cfa_register 7
 547 0006 7860     		str	r0, [r7, #4]
 196:Src/tim.c     **** 
 197:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 548              		.loc 1 197 0
 549 0008 7B68     		ldr	r3, [r7, #4]
 550 000a 1B68     		ldr	r3, [r3]
 551 000c B3F1804F 		cmp	r3, #1073741824
ARM GAS  /tmp/ccLAxMQk.s 			page 14


 552 0010 14D1     		bne	.L28
 553              	.LBB2:
 198:Src/tim.c     ****   {
 199:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 200:Src/tim.c     **** 
 201:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 202:Src/tim.c     ****     /* TIM2 clock enable */
 203:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 554              		.loc 1 203 0
 555 0012 1E4A     		ldr	r2, .L32
 556 0014 1D4B     		ldr	r3, .L32
 557 0016 1B6C     		ldr	r3, [r3, #64]
 558 0018 43F00103 		orr	r3, r3, #1
 559 001c 1364     		str	r3, [r2, #64]
 560 001e 1B4B     		ldr	r3, .L32
 561 0020 1B6C     		ldr	r3, [r3, #64]
 562 0022 03F00103 		and	r3, r3, #1
 563 0026 7B61     		str	r3, [r7, #20]
 564 0028 7B69     		ldr	r3, [r7, #20]
 565              	.LBE2:
 204:Src/tim.c     **** 
 205:Src/tim.c     ****     /* TIM2 interrupt Init */
 206:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 566              		.loc 1 206 0
 567 002a 0022     		movs	r2, #0
 568 002c 0021     		movs	r1, #0
 569 002e 1C20     		movs	r0, #28
 570 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 571              		.loc 1 207 0
 572 0034 1C20     		movs	r0, #28
 573 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 208:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 209:Src/tim.c     **** 
 210:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 211:Src/tim.c     ****   }
 212:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 213:Src/tim.c     ****   {
 214:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 0 */
 215:Src/tim.c     **** 
 216:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 0 */
 217:Src/tim.c     ****     /* TIM13 clock enable */
 218:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_ENABLE();
 219:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 220:Src/tim.c     **** 
 221:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 1 */
 222:Src/tim.c     ****   }
 223:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 224:Src/tim.c     ****   {
 225:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 0 */
 226:Src/tim.c     **** 
 227:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 0 */
 228:Src/tim.c     ****     /* TIM14 clock enable */
 229:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_ENABLE();
 230:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 231:Src/tim.c     **** 
 232:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 1 */
ARM GAS  /tmp/ccLAxMQk.s 			page 15


 233:Src/tim.c     ****   }
 234:Src/tim.c     **** }
 574              		.loc 1 234 0
 575 003a 22E0     		b	.L31
 576              	.L28:
 212:Src/tim.c     ****   {
 577              		.loc 1 212 0
 578 003c 7B68     		ldr	r3, [r7, #4]
 579 003e 1B68     		ldr	r3, [r3]
 580 0040 134A     		ldr	r2, .L32+4
 581 0042 9342     		cmp	r3, r2
 582 0044 0CD1     		bne	.L30
 583              	.LBB3:
 218:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 584              		.loc 1 218 0
 585 0046 114A     		ldr	r2, .L32
 586 0048 104B     		ldr	r3, .L32
 587 004a 1B6C     		ldr	r3, [r3, #64]
 588 004c 43F08003 		orr	r3, r3, #128
 589 0050 1364     		str	r3, [r2, #64]
 590 0052 0E4B     		ldr	r3, .L32
 591 0054 1B6C     		ldr	r3, [r3, #64]
 592 0056 03F08003 		and	r3, r3, #128
 593 005a 3B61     		str	r3, [r7, #16]
 594 005c 3B69     		ldr	r3, [r7, #16]
 595              	.LBE3:
 596              		.loc 1 234 0
 597 005e 10E0     		b	.L31
 598              	.L30:
 223:Src/tim.c     ****   {
 599              		.loc 1 223 0
 600 0060 7B68     		ldr	r3, [r7, #4]
 601 0062 1B68     		ldr	r3, [r3]
 602 0064 0B4A     		ldr	r2, .L32+8
 603 0066 9342     		cmp	r3, r2
 604 0068 0BD1     		bne	.L31
 605              	.LBB4:
 229:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 606              		.loc 1 229 0
 607 006a 084A     		ldr	r2, .L32
 608 006c 074B     		ldr	r3, .L32
 609 006e 1B6C     		ldr	r3, [r3, #64]
 610 0070 43F48073 		orr	r3, r3, #256
 611 0074 1364     		str	r3, [r2, #64]
 612 0076 054B     		ldr	r3, .L32
 613 0078 1B6C     		ldr	r3, [r3, #64]
 614 007a 03F48073 		and	r3, r3, #256
 615 007e FB60     		str	r3, [r7, #12]
 616 0080 FB68     		ldr	r3, [r7, #12]
 617              	.L31:
 618              	.LBE4:
 619              		.loc 1 234 0
 620 0082 00BF     		nop
 621 0084 1837     		adds	r7, r7, #24
 622              	.LCFI23:
 623              		.cfi_def_cfa_offset 8
 624 0086 BD46     		mov	sp, r7
ARM GAS  /tmp/ccLAxMQk.s 			page 16


 625              	.LCFI24:
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0088 80BD     		pop	{r7, pc}
 629              	.L33:
 630 008a 00BF     		.align	2
 631              	.L32:
 632 008c 00380240 		.word	1073887232
 633 0090 001C0040 		.word	1073748992
 634 0094 00200040 		.word	1073750016
 635              		.cfi_endproc
 636              	.LFE140:
 638              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 639              		.align	1
 640              		.global	HAL_TIM_PWM_MspInit
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv4-sp-d16
 646              	HAL_TIM_PWM_MspInit:
 647              	.LFB141:
 235:Src/tim.c     **** 
 236:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 237:Src/tim.c     **** {
 648              		.loc 1 237 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 16
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653 0000 80B4     		push	{r7}
 654              	.LCFI25:
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 7, -4
 657 0002 85B0     		sub	sp, sp, #20
 658              	.LCFI26:
 659              		.cfi_def_cfa_offset 24
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI27:
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 238:Src/tim.c     **** 
 239:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 664              		.loc 1 239 0
 665 0008 7B68     		ldr	r3, [r7, #4]
 666 000a 1B68     		ldr	r3, [r3]
 667 000c 0A4A     		ldr	r2, .L37
 668 000e 9342     		cmp	r3, r2
 669 0010 0BD1     		bne	.L36
 670              	.LBB5:
 240:Src/tim.c     ****   {
 241:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 242:Src/tim.c     **** 
 243:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 244:Src/tim.c     ****     /* TIM3 clock enable */
 245:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 671              		.loc 1 245 0
 672 0012 0A4A     		ldr	r2, .L37+4
ARM GAS  /tmp/ccLAxMQk.s 			page 17


 673 0014 094B     		ldr	r3, .L37+4
 674 0016 1B6C     		ldr	r3, [r3, #64]
 675 0018 43F00203 		orr	r3, r3, #2
 676 001c 1364     		str	r3, [r2, #64]
 677 001e 074B     		ldr	r3, .L37+4
 678 0020 1B6C     		ldr	r3, [r3, #64]
 679 0022 03F00203 		and	r3, r3, #2
 680 0026 FB60     		str	r3, [r7, #12]
 681 0028 FB68     		ldr	r3, [r7, #12]
 682              	.L36:
 683              	.LBE5:
 246:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 247:Src/tim.c     **** 
 248:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 249:Src/tim.c     ****   }
 250:Src/tim.c     **** }
 684              		.loc 1 250 0
 685 002a 00BF     		nop
 686 002c 1437     		adds	r7, r7, #20
 687              	.LCFI28:
 688              		.cfi_def_cfa_offset 4
 689 002e BD46     		mov	sp, r7
 690              	.LCFI29:
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 0030 5DF8047B 		ldr	r7, [sp], #4
 694              	.LCFI30:
 695              		.cfi_restore 7
 696              		.cfi_def_cfa_offset 0
 697 0034 7047     		bx	lr
 698              	.L38:
 699 0036 00BF     		.align	2
 700              	.L37:
 701 0038 00040040 		.word	1073742848
 702 003c 00380240 		.word	1073887232
 703              		.cfi_endproc
 704              	.LFE141:
 706              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 707              		.align	1
 708              		.global	HAL_TIM_MspPostInit
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	HAL_TIM_MspPostInit:
 715              	.LFB142:
 251:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 252:Src/tim.c     **** {
 716              		.loc 1 252 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 32
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 80B5     		push	{r7, lr}
 721              	.LCFI31:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
ARM GAS  /tmp/ccLAxMQk.s 			page 18


 725 0002 88B0     		sub	sp, sp, #32
 726              	.LCFI32:
 727              		.cfi_def_cfa_offset 40
 728 0004 00AF     		add	r7, sp, #0
 729              	.LCFI33:
 730              		.cfi_def_cfa_register 7
 731 0006 7860     		str	r0, [r7, #4]
 253:Src/tim.c     **** 
 254:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 255:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 732              		.loc 1 255 0
 733 0008 7B68     		ldr	r3, [r7, #4]
 734 000a 1B68     		ldr	r3, [r3]
 735 000c 224A     		ldr	r2, .L44
 736 000e 9342     		cmp	r3, r2
 737 0010 10D1     		bne	.L40
 256:Src/tim.c     ****   {
 257:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 258:Src/tim.c     **** 
 259:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 260:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 261:Src/tim.c     ****     PC6     ------> TIM3_CH1
 262:Src/tim.c     ****     PC7     ------> TIM3_CH2 
 263:Src/tim.c     ****     */
 264:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 738              		.loc 1 264 0
 739 0012 C023     		movs	r3, #192
 740 0014 FB60     		str	r3, [r7, #12]
 265:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 741              		.loc 1 265 0
 742 0016 0223     		movs	r3, #2
 743 0018 3B61     		str	r3, [r7, #16]
 266:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 744              		.loc 1 266 0
 745 001a 0023     		movs	r3, #0
 746 001c 7B61     		str	r3, [r7, #20]
 267:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 747              		.loc 1 267 0
 748 001e 0023     		movs	r3, #0
 749 0020 BB61     		str	r3, [r7, #24]
 268:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 750              		.loc 1 268 0
 751 0022 0223     		movs	r3, #2
 752 0024 FB61     		str	r3, [r7, #28]
 269:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 753              		.loc 1 269 0
 754 0026 07F10C03 		add	r3, r7, #12
 755 002a 1946     		mov	r1, r3
 756 002c 1B48     		ldr	r0, .L44+4
 757 002e FFF7FEFF 		bl	HAL_GPIO_Init
 270:Src/tim.c     **** 
 271:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 272:Src/tim.c     **** 
 273:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 274:Src/tim.c     ****   }
 275:Src/tim.c     ****   else if(timHandle->Instance==TIM13)
 276:Src/tim.c     ****   {
ARM GAS  /tmp/ccLAxMQk.s 			page 19


 277:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 0 */
 278:Src/tim.c     **** 
 279:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 0 */
 280:Src/tim.c     ****   
 281:Src/tim.c     ****     /**TIM13 GPIO Configuration    
 282:Src/tim.c     ****     PF8     ------> TIM13_CH1 
 283:Src/tim.c     ****     */
 284:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 285:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 286:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 287:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 288:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 289:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 290:Src/tim.c     **** 
 291:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 1 */
 292:Src/tim.c     **** 
 293:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 1 */
 294:Src/tim.c     ****   }
 295:Src/tim.c     ****   else if(timHandle->Instance==TIM14)
 296:Src/tim.c     ****   {
 297:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 0 */
 298:Src/tim.c     **** 
 299:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 0 */
 300:Src/tim.c     ****   
 301:Src/tim.c     ****     /**TIM14 GPIO Configuration    
 302:Src/tim.c     ****     PF9     ------> TIM14_CH1 
 303:Src/tim.c     ****     */
 304:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 305:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 306:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 307:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 308:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 309:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 310:Src/tim.c     **** 
 311:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 1 */
 312:Src/tim.c     **** 
 313:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 1 */
 314:Src/tim.c     ****   }
 315:Src/tim.c     **** 
 316:Src/tim.c     **** }
 758              		.loc 1 316 0
 759 0032 2CE0     		b	.L43
 760              	.L40:
 275:Src/tim.c     ****   {
 761              		.loc 1 275 0
 762 0034 7B68     		ldr	r3, [r7, #4]
 763 0036 1B68     		ldr	r3, [r3]
 764 0038 194A     		ldr	r2, .L44+8
 765 003a 9342     		cmp	r3, r2
 766 003c 11D1     		bne	.L42
 284:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 767              		.loc 1 284 0
 768 003e 4FF48073 		mov	r3, #256
 769 0042 FB60     		str	r3, [r7, #12]
 285:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 770              		.loc 1 285 0
 771 0044 0223     		movs	r3, #2
ARM GAS  /tmp/ccLAxMQk.s 			page 20


 772 0046 3B61     		str	r3, [r7, #16]
 286:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 773              		.loc 1 286 0
 774 0048 0023     		movs	r3, #0
 775 004a 7B61     		str	r3, [r7, #20]
 287:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 776              		.loc 1 287 0
 777 004c 0023     		movs	r3, #0
 778 004e BB61     		str	r3, [r7, #24]
 288:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 779              		.loc 1 288 0
 780 0050 0923     		movs	r3, #9
 781 0052 FB61     		str	r3, [r7, #28]
 289:Src/tim.c     **** 
 782              		.loc 1 289 0
 783 0054 07F10C03 		add	r3, r7, #12
 784 0058 1946     		mov	r1, r3
 785 005a 1248     		ldr	r0, .L44+12
 786 005c FFF7FEFF 		bl	HAL_GPIO_Init
 787              		.loc 1 316 0
 788 0060 15E0     		b	.L43
 789              	.L42:
 295:Src/tim.c     ****   {
 790              		.loc 1 295 0
 791 0062 7B68     		ldr	r3, [r7, #4]
 792 0064 1B68     		ldr	r3, [r3]
 793 0066 104A     		ldr	r2, .L44+16
 794 0068 9342     		cmp	r3, r2
 795 006a 10D1     		bne	.L43
 304:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 796              		.loc 1 304 0
 797 006c 4FF40073 		mov	r3, #512
 798 0070 FB60     		str	r3, [r7, #12]
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 799              		.loc 1 305 0
 800 0072 0223     		movs	r3, #2
 801 0074 3B61     		str	r3, [r7, #16]
 306:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 802              		.loc 1 306 0
 803 0076 0023     		movs	r3, #0
 804 0078 7B61     		str	r3, [r7, #20]
 307:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 805              		.loc 1 307 0
 806 007a 0023     		movs	r3, #0
 807 007c BB61     		str	r3, [r7, #24]
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 808              		.loc 1 308 0
 809 007e 0923     		movs	r3, #9
 810 0080 FB61     		str	r3, [r7, #28]
 309:Src/tim.c     **** 
 811              		.loc 1 309 0
 812 0082 07F10C03 		add	r3, r7, #12
 813 0086 1946     		mov	r1, r3
 814 0088 0648     		ldr	r0, .L44+12
 815 008a FFF7FEFF 		bl	HAL_GPIO_Init
 816              	.L43:
 817              		.loc 1 316 0
ARM GAS  /tmp/ccLAxMQk.s 			page 21


 818 008e 00BF     		nop
 819 0090 2037     		adds	r7, r7, #32
 820              	.LCFI34:
 821              		.cfi_def_cfa_offset 8
 822 0092 BD46     		mov	sp, r7
 823              	.LCFI35:
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0094 80BD     		pop	{r7, pc}
 827              	.L45:
 828 0096 00BF     		.align	2
 829              	.L44:
 830 0098 00040040 		.word	1073742848
 831 009c 00080240 		.word	1073874944
 832 00a0 001C0040 		.word	1073748992
 833 00a4 00140240 		.word	1073878016
 834 00a8 00200040 		.word	1073750016
 835              		.cfi_endproc
 836              	.LFE142:
 838              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_TIM_Base_MspDeInit
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv4-sp-d16
 846              	HAL_TIM_Base_MspDeInit:
 847              	.LFB143:
 317:Src/tim.c     **** 
 318:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 319:Src/tim.c     **** {
 848              		.loc 1 319 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 8
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              	.LCFI36:
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              	.LCFI37:
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              	.LCFI38:
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 320:Src/tim.c     **** 
 321:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 864              		.loc 1 321 0
 865 0008 7B68     		ldr	r3, [r7, #4]
 866 000a 1B68     		ldr	r3, [r3]
 867 000c B3F1804F 		cmp	r3, #1073741824
 868 0010 09D1     		bne	.L47
 322:Src/tim.c     ****   {
 323:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 324:Src/tim.c     **** 
ARM GAS  /tmp/ccLAxMQk.s 			page 22


 325:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 326:Src/tim.c     ****     /* Peripheral clock disable */
 327:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 869              		.loc 1 327 0
 870 0012 124A     		ldr	r2, .L51
 871 0014 114B     		ldr	r3, .L51
 872 0016 1B6C     		ldr	r3, [r3, #64]
 873 0018 23F00103 		bic	r3, r3, #1
 874 001c 1364     		str	r3, [r2, #64]
 328:Src/tim.c     **** 
 329:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 330:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 875              		.loc 1 330 0
 876 001e 1C20     		movs	r0, #28
 877 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 331:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 332:Src/tim.c     **** 
 333:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 334:Src/tim.c     ****   }
 335:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 336:Src/tim.c     ****   {
 337:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 0 */
 338:Src/tim.c     **** 
 339:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 0 */
 340:Src/tim.c     ****     /* Peripheral clock disable */
 341:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_DISABLE();
 342:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 343:Src/tim.c     **** 
 344:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 1 */
 345:Src/tim.c     ****   }
 346:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 347:Src/tim.c     ****   {
 348:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 0 */
 349:Src/tim.c     **** 
 350:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 0 */
 351:Src/tim.c     ****     /* Peripheral clock disable */
 352:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_DISABLE();
 353:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 354:Src/tim.c     **** 
 355:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 1 */
 356:Src/tim.c     ****   }
 357:Src/tim.c     **** }
 878              		.loc 1 357 0
 879 0024 16E0     		b	.L50
 880              	.L47:
 335:Src/tim.c     ****   {
 881              		.loc 1 335 0
 882 0026 7B68     		ldr	r3, [r7, #4]
 883 0028 1B68     		ldr	r3, [r3]
 884 002a 0D4A     		ldr	r2, .L51+4
 885 002c 9342     		cmp	r3, r2
 886 002e 06D1     		bne	.L49
 341:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 887              		.loc 1 341 0
 888 0030 0A4A     		ldr	r2, .L51
 889 0032 0A4B     		ldr	r3, .L51
 890 0034 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccLAxMQk.s 			page 23


 891 0036 23F08003 		bic	r3, r3, #128
 892 003a 1364     		str	r3, [r2, #64]
 893              		.loc 1 357 0
 894 003c 0AE0     		b	.L50
 895              	.L49:
 346:Src/tim.c     ****   {
 896              		.loc 1 346 0
 897 003e 7B68     		ldr	r3, [r7, #4]
 898 0040 1B68     		ldr	r3, [r3]
 899 0042 084A     		ldr	r2, .L51+8
 900 0044 9342     		cmp	r3, r2
 901 0046 05D1     		bne	.L50
 352:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 902              		.loc 1 352 0
 903 0048 044A     		ldr	r2, .L51
 904 004a 044B     		ldr	r3, .L51
 905 004c 1B6C     		ldr	r3, [r3, #64]
 906 004e 23F48073 		bic	r3, r3, #256
 907 0052 1364     		str	r3, [r2, #64]
 908              	.L50:
 909              		.loc 1 357 0
 910 0054 00BF     		nop
 911 0056 0837     		adds	r7, r7, #8
 912              	.LCFI39:
 913              		.cfi_def_cfa_offset 8
 914 0058 BD46     		mov	sp, r7
 915              	.LCFI40:
 916              		.cfi_def_cfa_register 13
 917              		@ sp needed
 918 005a 80BD     		pop	{r7, pc}
 919              	.L52:
 920              		.align	2
 921              	.L51:
 922 005c 00380240 		.word	1073887232
 923 0060 001C0040 		.word	1073748992
 924 0064 00200040 		.word	1073750016
 925              		.cfi_endproc
 926              	.LFE143:
 928              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 929              		.align	1
 930              		.global	HAL_TIM_PWM_MspDeInit
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu fpv4-sp-d16
 936              	HAL_TIM_PWM_MspDeInit:
 937              	.LFB144:
 358:Src/tim.c     **** 
 359:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 360:Src/tim.c     **** {
 938              		.loc 1 360 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 8
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943 0000 80B4     		push	{r7}
 944              	.LCFI41:
ARM GAS  /tmp/ccLAxMQk.s 			page 24


 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 83B0     		sub	sp, sp, #12
 948              	.LCFI42:
 949              		.cfi_def_cfa_offset 16
 950 0004 00AF     		add	r7, sp, #0
 951              	.LCFI43:
 952              		.cfi_def_cfa_register 7
 953 0006 7860     		str	r0, [r7, #4]
 361:Src/tim.c     **** 
 362:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 954              		.loc 1 362 0
 955 0008 7B68     		ldr	r3, [r7, #4]
 956 000a 1B68     		ldr	r3, [r3]
 957 000c 074A     		ldr	r2, .L56
 958 000e 9342     		cmp	r3, r2
 959 0010 05D1     		bne	.L55
 363:Src/tim.c     ****   {
 364:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 365:Src/tim.c     **** 
 366:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 367:Src/tim.c     ****     /* Peripheral clock disable */
 368:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 960              		.loc 1 368 0
 961 0012 074A     		ldr	r2, .L56+4
 962 0014 064B     		ldr	r3, .L56+4
 963 0016 1B6C     		ldr	r3, [r3, #64]
 964 0018 23F00203 		bic	r3, r3, #2
 965 001c 1364     		str	r3, [r2, #64]
 966              	.L55:
 369:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 370:Src/tim.c     **** 
 371:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 372:Src/tim.c     ****   }
 373:Src/tim.c     **** } 
 967              		.loc 1 373 0
 968 001e 00BF     		nop
 969 0020 0C37     		adds	r7, r7, #12
 970              	.LCFI44:
 971              		.cfi_def_cfa_offset 4
 972 0022 BD46     		mov	sp, r7
 973              	.LCFI45:
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 0024 5DF8047B 		ldr	r7, [sp], #4
 977              	.LCFI46:
 978              		.cfi_restore 7
 979              		.cfi_def_cfa_offset 0
 980 0028 7047     		bx	lr
 981              	.L57:
 982 002a 00BF     		.align	2
 983              	.L56:
 984 002c 00040040 		.word	1073742848
 985 0030 00380240 		.word	1073887232
 986              		.cfi_endproc
 987              	.LFE144:
 989              		.text
ARM GAS  /tmp/ccLAxMQk.s 			page 25


 990              	.Letext0:
 991              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 992              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 993              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 994              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 995              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 996              		.file 7 "/usr/include/newlib/sys/lock.h"
 997              		.file 8 "/usr/include/newlib/sys/_types.h"
 998              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 999              		.file 10 "/usr/include/newlib/sys/reent.h"
 1000              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1001              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1002              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1003              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1004              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1005              		.file 16 "Inc/tim.h"
 1006              		.file 17 "Inc/motor.h"
ARM GAS  /tmp/ccLAxMQk.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000040 htim3
                            *COM*:0000000000000040 htim13
                            *COM*:0000000000000040 htim14
     /tmp/ccLAxMQk.s:26     .rodata:0000000000000000 $d
     /tmp/ccLAxMQk.s:30     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccLAxMQk.s:37     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccLAxMQk.s:138    .text.MX_TIM2_Init:000000000000008c $d
     /tmp/ccLAxMQk.s:144    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccLAxMQk.s:151    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccLAxMQk.s:714    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccLAxMQk.s:278    .text.MX_TIM3_Init:00000000000000b4 $d
     /tmp/ccLAxMQk.s:285    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccLAxMQk.s:292    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccLAxMQk.s:397    .text.MX_TIM13_Init:000000000000008c $d
     /tmp/ccLAxMQk.s:404    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccLAxMQk.s:411    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccLAxMQk.s:516    .text.MX_TIM14_Init:000000000000008c $d
     /tmp/ccLAxMQk.s:523    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccLAxMQk.s:530    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccLAxMQk.s:632    .text.HAL_TIM_Base_MspInit:000000000000008c $d
     /tmp/ccLAxMQk.s:639    .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccLAxMQk.s:646    .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccLAxMQk.s:701    .text.HAL_TIM_PWM_MspInit:0000000000000038 $d
     /tmp/ccLAxMQk.s:707    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccLAxMQk.s:830    .text.HAL_TIM_MspPostInit:0000000000000098 $d
     /tmp/ccLAxMQk.s:839    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccLAxMQk.s:846    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccLAxMQk.s:922    .text.HAL_TIM_Base_MspDeInit:000000000000005c $d
     /tmp/ccLAxMQk.s:929    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccLAxMQk.s:936    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccLAxMQk.s:984    .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
_Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
HAL_NVIC_DisableIRQ
