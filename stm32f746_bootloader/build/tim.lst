ARM GAS  /tmp/ccZttZL3.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.comm	motor1,8,4
  21              		.comm	motor2,8,4
  22              		.comm	motor3,8,4
  23              		.comm	motor4,8,4
  24              		.comm	htim2,64,4
  25              		.comm	htim3,64,4
  26              		.comm	htim13,64,4
  27              		.comm	htim14,64,4
  28              		.section	.rodata
  29              		.align	2
  30              	.LC0:
  31 0000 5372632F 		.ascii	"Src/tim.c\000"
  31      74696D2E 
  31      6300
  32              		.section	.text.MX_TIM2_Init,"ax",%progbits
  33              		.align	1
  34              		.global	MX_TIM2_Init
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  38              		.fpu fpv4-sp-d16
  40              	MX_TIM2_Init:
  41              	.LFB138:
  42              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
ARM GAS  /tmp/ccZttZL3.s 			page 2


  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** #include "motor.h"
  43:Src/tim.c     **** 
  44:Src/tim.c     **** /* USER CODE BEGIN 0 */
  45:Src/tim.c     **** 
  46:Src/tim.c     **** /* USER CODE END 0 */
  47:Src/tim.c     **** 
  48:Src/tim.c     **** TIM_HandleTypeDef htim2;
  49:Src/tim.c     **** TIM_HandleTypeDef htim3;
  50:Src/tim.c     **** TIM_HandleTypeDef htim13;
  51:Src/tim.c     **** TIM_HandleTypeDef htim14;
  52:Src/tim.c     **** 
  53:Src/tim.c     **** /* TIM2 init function */
  54:Src/tim.c     **** void MX_TIM2_Init(void)
  55:Src/tim.c     **** {
  43              		.loc 1 55 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 32
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 88B0     		sub	sp, sp, #32
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 40
  55 0004 00AF     		add	r7, sp, #0
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 7
  56:Src/tim.c     ****     TIM_ClockConfigTypeDef sClockSourceConfig;
ARM GAS  /tmp/ccZttZL3.s 			page 3


  57:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
  58:Src/tim.c     **** 
  59:Src/tim.c     ****     htim2.Instance = TIM2;
  58              		.loc 1 59 0
  59 0006 214B     		ldr	r3, .L6
  60 0008 4FF08042 		mov	r2, #1073741824
  61 000c 1A60     		str	r2, [r3]
  60:Src/tim.c     ****     htim2.Init.Prescaler = 2000;
  62              		.loc 1 60 0
  63 000e 1F4B     		ldr	r3, .L6
  64 0010 4FF4FA62 		mov	r2, #2000
  65 0014 5A60     		str	r2, [r3, #4]
  61:Src/tim.c     ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  66              		.loc 1 61 0
  67 0016 1D4B     		ldr	r3, .L6
  68 0018 0022     		movs	r2, #0
  69 001a 9A60     		str	r2, [r3, #8]
  62:Src/tim.c     ****     htim2.Init.Period = 200;
  70              		.loc 1 62 0
  71 001c 1B4B     		ldr	r3, .L6
  72 001e C822     		movs	r2, #200
  73 0020 DA60     		str	r2, [r3, #12]
  63:Src/tim.c     ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  74              		.loc 1 63 0
  75 0022 1A4B     		ldr	r3, .L6
  76 0024 0022     		movs	r2, #0
  77 0026 1A61     		str	r2, [r3, #16]
  64:Src/tim.c     ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  78              		.loc 1 64 0
  79 0028 184B     		ldr	r3, .L6
  80 002a 0022     		movs	r2, #0
  81 002c 9A61     		str	r2, [r3, #24]
  65:Src/tim.c     ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  82              		.loc 1 65 0
  83 002e 1748     		ldr	r0, .L6
  84 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
  85 0034 0346     		mov	r3, r0
  86 0036 002B     		cmp	r3, #0
  87 0038 03D0     		beq	.L2
  66:Src/tim.c     ****     {
  67:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
  88              		.loc 1 67 0
  89 003a 4321     		movs	r1, #67
  90 003c 1448     		ldr	r0, .L6+4
  91 003e FFF7FEFF 		bl	_Error_Handler
  92              	.L2:
  68:Src/tim.c     ****     }
  69:Src/tim.c     **** 
  70:Src/tim.c     ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  93              		.loc 1 70 0
  94 0042 4FF48053 		mov	r3, #4096
  95 0046 3B61     		str	r3, [r7, #16]
  71:Src/tim.c     ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  96              		.loc 1 71 0
  97 0048 07F11003 		add	r3, r7, #16
  98 004c 1946     		mov	r1, r3
  99 004e 0F48     		ldr	r0, .L6
ARM GAS  /tmp/ccZttZL3.s 			page 4


 100 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 101 0054 0346     		mov	r3, r0
 102 0056 002B     		cmp	r3, #0
 103 0058 03D0     		beq	.L3
  72:Src/tim.c     ****     {
  73:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 104              		.loc 1 73 0
 105 005a 4921     		movs	r1, #73
 106 005c 0C48     		ldr	r0, .L6+4
 107 005e FFF7FEFF 		bl	_Error_Handler
 108              	.L3:
  74:Src/tim.c     ****     }
  75:Src/tim.c     **** 
  76:Src/tim.c     ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 109              		.loc 1 76 0
 110 0062 0023     		movs	r3, #0
 111 0064 7B60     		str	r3, [r7, #4]
  77:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 112              		.loc 1 77 0
 113 0066 0023     		movs	r3, #0
 114 0068 FB60     		str	r3, [r7, #12]
  78:Src/tim.c     ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 115              		.loc 1 78 0
 116 006a 3B1D     		adds	r3, r7, #4
 117 006c 1946     		mov	r1, r3
 118 006e 0748     		ldr	r0, .L6
 119 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 120 0074 0346     		mov	r3, r0
 121 0076 002B     		cmp	r3, #0
 122 0078 03D0     		beq	.L5
  79:Src/tim.c     ****     {
  80:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 123              		.loc 1 80 0
 124 007a 5021     		movs	r1, #80
 125 007c 0448     		ldr	r0, .L6+4
 126 007e FFF7FEFF 		bl	_Error_Handler
 127              	.L5:
  81:Src/tim.c     ****     }
  82:Src/tim.c     **** 
  83:Src/tim.c     **** }
 128              		.loc 1 83 0
 129 0082 00BF     		nop
 130 0084 2037     		adds	r7, r7, #32
 131              	.LCFI3:
 132              		.cfi_def_cfa_offset 8
 133 0086 BD46     		mov	sp, r7
 134              	.LCFI4:
 135              		.cfi_def_cfa_register 13
 136              		@ sp needed
 137 0088 80BD     		pop	{r7, pc}
 138              	.L7:
 139 008a 00BF     		.align	2
 140              	.L6:
 141 008c 00000000 		.word	htim2
 142 0090 00000000 		.word	.LC0
 143              		.cfi_endproc
 144              	.LFE138:
ARM GAS  /tmp/ccZttZL3.s 			page 5


 146              		.section	.text.MX_TIM3_Init,"ax",%progbits
 147              		.align	1
 148              		.global	MX_TIM3_Init
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	MX_TIM3_Init:
 155              	.LFB139:
  84:Src/tim.c     **** 
  85:Src/tim.c     **** 
  86:Src/tim.c     **** /* TIM3 init function */
  87:Src/tim.c     **** void MX_TIM3_Init(void)
  88:Src/tim.c     **** {
 156              		.loc 1 88 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 40
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              	.LCFI5:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 8AB0     		sub	sp, sp, #40
 166              	.LCFI6:
 167              		.cfi_def_cfa_offset 48
 168 0004 00AF     		add	r7, sp, #0
 169              	.LCFI7:
 170              		.cfi_def_cfa_register 7
  89:Src/tim.c     ****     TIM_MasterConfigTypeDef sMasterConfig;
  90:Src/tim.c     ****     TIM_OC_InitTypeDef sConfigOC;
  91:Src/tim.c     **** 
  92:Src/tim.c     ****     htim3.Instance = TIM3;
 171              		.loc 1 92 0
 172 0006 2B4B     		ldr	r3, .L13
 173 0008 2B4A     		ldr	r2, .L13+4
 174 000a 1A60     		str	r2, [r3]
  93:Src/tim.c     ****     htim3.Init.Prescaler = 3240;
 175              		.loc 1 93 0
 176 000c 294B     		ldr	r3, .L13
 177 000e 40F6A842 		movw	r2, #3240
 178 0012 5A60     		str	r2, [r3, #4]
  94:Src/tim.c     ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 179              		.loc 1 94 0
 180 0014 274B     		ldr	r3, .L13
 181 0016 0022     		movs	r2, #0
 182 0018 9A60     		str	r2, [r3, #8]
  95:Src/tim.c     ****     htim3.Init.Period = 200;
 183              		.loc 1 95 0
 184 001a 264B     		ldr	r3, .L13
 185 001c C822     		movs	r2, #200
 186 001e DA60     		str	r2, [r3, #12]
  96:Src/tim.c     ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 187              		.loc 1 96 0
 188 0020 244B     		ldr	r3, .L13
 189 0022 0022     		movs	r2, #0
 190 0024 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccZttZL3.s 			page 6


  97:Src/tim.c     ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 191              		.loc 1 97 0
 192 0026 234B     		ldr	r3, .L13
 193 0028 0022     		movs	r2, #0
 194 002a 9A61     		str	r2, [r3, #24]
  98:Src/tim.c     ****     if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 195              		.loc 1 98 0
 196 002c 2148     		ldr	r0, .L13
 197 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 198 0032 0346     		mov	r3, r0
 199 0034 002B     		cmp	r3, #0
 200 0036 03D0     		beq	.L9
  99:Src/tim.c     ****     {
 100:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 201              		.loc 1 100 0
 202 0038 6421     		movs	r1, #100
 203 003a 2048     		ldr	r0, .L13+8
 204 003c FFF7FEFF 		bl	_Error_Handler
 205              	.L9:
 101:Src/tim.c     ****     }
 102:Src/tim.c     **** 
 103:Src/tim.c     ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 206              		.loc 1 103 0
 207 0040 0023     		movs	r3, #0
 208 0042 FB61     		str	r3, [r7, #28]
 104:Src/tim.c     ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 209              		.loc 1 104 0
 210 0044 0023     		movs	r3, #0
 211 0046 7B62     		str	r3, [r7, #36]
 105:Src/tim.c     ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 212              		.loc 1 105 0
 213 0048 07F11C03 		add	r3, r7, #28
 214 004c 1946     		mov	r1, r3
 215 004e 1948     		ldr	r0, .L13
 216 0050 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 217 0054 0346     		mov	r3, r0
 218 0056 002B     		cmp	r3, #0
 219 0058 03D0     		beq	.L10
 106:Src/tim.c     ****     {
 107:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 220              		.loc 1 107 0
 221 005a 6B21     		movs	r1, #107
 222 005c 1748     		ldr	r0, .L13+8
 223 005e FFF7FEFF 		bl	_Error_Handler
 224              	.L10:
 108:Src/tim.c     ****     }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 225              		.loc 1 110 0
 226 0062 6023     		movs	r3, #96
 227 0064 3B60     		str	r3, [r7]
 111:Src/tim.c     ****     sConfigOC.Pulse = 0;
 228              		.loc 1 111 0
 229 0066 0023     		movs	r3, #0
 230 0068 7B60     		str	r3, [r7, #4]
 112:Src/tim.c     ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 231              		.loc 1 112 0
ARM GAS  /tmp/ccZttZL3.s 			page 7


 232 006a 0023     		movs	r3, #0
 233 006c BB60     		str	r3, [r7, #8]
 113:Src/tim.c     ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 234              		.loc 1 113 0
 235 006e 0023     		movs	r3, #0
 236 0070 3B61     		str	r3, [r7, #16]
 114:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 237              		.loc 1 114 0
 238 0072 3B46     		mov	r3, r7
 239 0074 0022     		movs	r2, #0
 240 0076 1946     		mov	r1, r3
 241 0078 0E48     		ldr	r0, .L13
 242 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 243 007e 0346     		mov	r3, r0
 244 0080 002B     		cmp	r3, #0
 245 0082 03D0     		beq	.L11
 115:Src/tim.c     ****     {
 116:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 246              		.loc 1 116 0
 247 0084 7421     		movs	r1, #116
 248 0086 0D48     		ldr	r0, .L13+8
 249 0088 FFF7FEFF 		bl	_Error_Handler
 250              	.L11:
 117:Src/tim.c     ****     }
 118:Src/tim.c     **** 
 119:Src/tim.c     ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 251              		.loc 1 119 0
 252 008c 3B46     		mov	r3, r7
 253 008e 0422     		movs	r2, #4
 254 0090 1946     		mov	r1, r3
 255 0092 0848     		ldr	r0, .L13
 256 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 257 0098 0346     		mov	r3, r0
 258 009a 002B     		cmp	r3, #0
 259 009c 03D0     		beq	.L12
 120:Src/tim.c     ****     {
 121:Src/tim.c     ****       _Error_Handler(__FILE__, __LINE__);
 260              		.loc 1 121 0
 261 009e 7921     		movs	r1, #121
 262 00a0 0648     		ldr	r0, .L13+8
 263 00a2 FFF7FEFF 		bl	_Error_Handler
 264              	.L12:
 122:Src/tim.c     ****     }
 123:Src/tim.c     **** 
 124:Src/tim.c     ****     HAL_TIM_MspPostInit(&htim3);
 265              		.loc 1 124 0
 266 00a6 0348     		ldr	r0, .L13
 267 00a8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 125:Src/tim.c     **** 
 126:Src/tim.c     **** }
 268              		.loc 1 126 0
 269 00ac 00BF     		nop
 270 00ae 2837     		adds	r7, r7, #40
 271              	.LCFI8:
 272              		.cfi_def_cfa_offset 8
 273 00b0 BD46     		mov	sp, r7
 274              	.LCFI9:
ARM GAS  /tmp/ccZttZL3.s 			page 8


 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 00b2 80BD     		pop	{r7, pc}
 278              	.L14:
 279              		.align	2
 280              	.L13:
 281 00b4 00000000 		.word	htim3
 282 00b8 00040040 		.word	1073742848
 283 00bc 00000000 		.word	.LC0
 284              		.cfi_endproc
 285              	.LFE139:
 287              		.section	.text.MX_TIM13_Init,"ax",%progbits
 288              		.align	1
 289              		.global	MX_TIM13_Init
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	MX_TIM13_Init:
 296              	.LFB140:
 127:Src/tim.c     **** /* TIM13 init function */
 128:Src/tim.c     **** void MX_TIM13_Init(void)
 129:Src/tim.c     **** {
 297              		.loc 1 129 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 32
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              	.LCFI10:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 88B0     		sub	sp, sp, #32
 307              	.LCFI11:
 308              		.cfi_def_cfa_offset 40
 309 0004 00AF     		add	r7, sp, #0
 310              	.LCFI12:
 311              		.cfi_def_cfa_register 7
 130:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   htim13.Instance = TIM13;
 312              		.loc 1 132 0
 313 0006 214B     		ldr	r3, .L19
 314 0008 214A     		ldr	r2, .L19+4
 315 000a 1A60     		str	r2, [r3]
 133:Src/tim.c     ****   htim13.Init.Prescaler = 3242;
 316              		.loc 1 133 0
 317 000c 1F4B     		ldr	r3, .L19
 318 000e 40F6AA42 		movw	r2, #3242
 319 0012 5A60     		str	r2, [r3, #4]
 134:Src/tim.c     ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 320              		.loc 1 134 0
 321 0014 1D4B     		ldr	r3, .L19
 322 0016 0022     		movs	r2, #0
 323 0018 9A60     		str	r2, [r3, #8]
 135:Src/tim.c     ****   htim13.Init.Period = 200;
 324              		.loc 1 135 0
ARM GAS  /tmp/ccZttZL3.s 			page 9


 325 001a 1C4B     		ldr	r3, .L19
 326 001c C822     		movs	r2, #200
 327 001e DA60     		str	r2, [r3, #12]
 136:Src/tim.c     ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 328              		.loc 1 136 0
 329 0020 1A4B     		ldr	r3, .L19
 330 0022 0022     		movs	r2, #0
 331 0024 1A61     		str	r2, [r3, #16]
 137:Src/tim.c     ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 332              		.loc 1 137 0
 333 0026 194B     		ldr	r3, .L19
 334 0028 0022     		movs	r2, #0
 335 002a 9A61     		str	r2, [r3, #24]
 138:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 336              		.loc 1 138 0
 337 002c 1748     		ldr	r0, .L19
 338 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 339 0032 0346     		mov	r3, r0
 340 0034 002B     		cmp	r3, #0
 341 0036 03D0     		beq	.L16
 139:Src/tim.c     ****   {
 140:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 342              		.loc 1 140 0
 343 0038 8C21     		movs	r1, #140
 344 003a 1648     		ldr	r0, .L19+8
 345 003c FFF7FEFF 		bl	_Error_Handler
 346              	.L16:
 141:Src/tim.c     ****   }
 142:Src/tim.c     **** 
 143:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 347              		.loc 1 143 0
 348 0040 1248     		ldr	r0, .L19
 349 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 350 0046 0346     		mov	r3, r0
 351 0048 002B     		cmp	r3, #0
 352 004a 03D0     		beq	.L17
 144:Src/tim.c     ****   {
 145:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 353              		.loc 1 145 0
 354 004c 9121     		movs	r1, #145
 355 004e 1148     		ldr	r0, .L19+8
 356 0050 FFF7FEFF 		bl	_Error_Handler
 357              	.L17:
 146:Src/tim.c     ****   }
 147:Src/tim.c     **** 
 148:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 358              		.loc 1 148 0
 359 0054 6023     		movs	r3, #96
 360 0056 7B60     		str	r3, [r7, #4]
 149:Src/tim.c     ****   sConfigOC.Pulse = 0;
 361              		.loc 1 149 0
 362 0058 0023     		movs	r3, #0
 363 005a BB60     		str	r3, [r7, #8]
 150:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 364              		.loc 1 150 0
 365 005c 0023     		movs	r3, #0
 366 005e FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccZttZL3.s 			page 10


 151:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 367              		.loc 1 151 0
 368 0060 0023     		movs	r3, #0
 369 0062 7B61     		str	r3, [r7, #20]
 152:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 370              		.loc 1 152 0
 371 0064 3B1D     		adds	r3, r7, #4
 372 0066 0022     		movs	r2, #0
 373 0068 1946     		mov	r1, r3
 374 006a 0848     		ldr	r0, .L19
 375 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 376 0070 0346     		mov	r3, r0
 377 0072 002B     		cmp	r3, #0
 378 0074 03D0     		beq	.L18
 153:Src/tim.c     ****   {
 154:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 379              		.loc 1 154 0
 380 0076 9A21     		movs	r1, #154
 381 0078 0648     		ldr	r0, .L19+8
 382 007a FFF7FEFF 		bl	_Error_Handler
 383              	.L18:
 155:Src/tim.c     ****   }
 156:Src/tim.c     **** 
 157:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim13);
 384              		.loc 1 157 0
 385 007e 0348     		ldr	r0, .L19
 386 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 158:Src/tim.c     **** 
 159:Src/tim.c     **** }
 387              		.loc 1 159 0
 388 0084 00BF     		nop
 389 0086 2037     		adds	r7, r7, #32
 390              	.LCFI13:
 391              		.cfi_def_cfa_offset 8
 392 0088 BD46     		mov	sp, r7
 393              	.LCFI14:
 394              		.cfi_def_cfa_register 13
 395              		@ sp needed
 396 008a 80BD     		pop	{r7, pc}
 397              	.L20:
 398              		.align	2
 399              	.L19:
 400 008c 00000000 		.word	htim13
 401 0090 001C0040 		.word	1073748992
 402 0094 00000000 		.word	.LC0
 403              		.cfi_endproc
 404              	.LFE140:
 406              		.section	.text.MX_TIM14_Init,"ax",%progbits
 407              		.align	1
 408              		.global	MX_TIM14_Init
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	MX_TIM14_Init:
 415              	.LFB141:
 160:Src/tim.c     **** /* TIM14 init function */
ARM GAS  /tmp/ccZttZL3.s 			page 11


 161:Src/tim.c     **** void MX_TIM14_Init(void)
 162:Src/tim.c     **** {
 416              		.loc 1 162 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 32
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              	.LCFI15:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425 0002 88B0     		sub	sp, sp, #32
 426              	.LCFI16:
 427              		.cfi_def_cfa_offset 40
 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI17:
 430              		.cfi_def_cfa_register 7
 163:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 164:Src/tim.c     **** 
 165:Src/tim.c     ****   htim14.Instance = TIM14;
 431              		.loc 1 165 0
 432 0006 214B     		ldr	r3, .L25
 433 0008 214A     		ldr	r2, .L25+4
 434 000a 1A60     		str	r2, [r3]
 166:Src/tim.c     ****   htim14.Init.Prescaler = 3242;
 435              		.loc 1 166 0
 436 000c 1F4B     		ldr	r3, .L25
 437 000e 40F6AA42 		movw	r2, #3242
 438 0012 5A60     		str	r2, [r3, #4]
 167:Src/tim.c     ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 439              		.loc 1 167 0
 440 0014 1D4B     		ldr	r3, .L25
 441 0016 0022     		movs	r2, #0
 442 0018 9A60     		str	r2, [r3, #8]
 168:Src/tim.c     ****   htim14.Init.Period = 200;
 443              		.loc 1 168 0
 444 001a 1C4B     		ldr	r3, .L25
 445 001c C822     		movs	r2, #200
 446 001e DA60     		str	r2, [r3, #12]
 169:Src/tim.c     ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 447              		.loc 1 169 0
 448 0020 1A4B     		ldr	r3, .L25
 449 0022 0022     		movs	r2, #0
 450 0024 1A61     		str	r2, [r3, #16]
 170:Src/tim.c     ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 451              		.loc 1 170 0
 452 0026 194B     		ldr	r3, .L25
 453 0028 0022     		movs	r2, #0
 454 002a 9A61     		str	r2, [r3, #24]
 171:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 455              		.loc 1 171 0
 456 002c 1748     		ldr	r0, .L25
 457 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 458 0032 0346     		mov	r3, r0
 459 0034 002B     		cmp	r3, #0
 460 0036 03D0     		beq	.L22
 172:Src/tim.c     ****   {
ARM GAS  /tmp/ccZttZL3.s 			page 12


 173:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 461              		.loc 1 173 0
 462 0038 AD21     		movs	r1, #173
 463 003a 1648     		ldr	r0, .L25+8
 464 003c FFF7FEFF 		bl	_Error_Handler
 465              	.L22:
 174:Src/tim.c     ****   }
 175:Src/tim.c     **** 
 176:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 466              		.loc 1 176 0
 467 0040 1248     		ldr	r0, .L25
 468 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 469 0046 0346     		mov	r3, r0
 470 0048 002B     		cmp	r3, #0
 471 004a 03D0     		beq	.L23
 177:Src/tim.c     ****   {
 178:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 472              		.loc 1 178 0
 473 004c B221     		movs	r1, #178
 474 004e 1148     		ldr	r0, .L25+8
 475 0050 FFF7FEFF 		bl	_Error_Handler
 476              	.L23:
 179:Src/tim.c     ****   }
 180:Src/tim.c     **** 
 181:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 477              		.loc 1 181 0
 478 0054 6023     		movs	r3, #96
 479 0056 7B60     		str	r3, [r7, #4]
 182:Src/tim.c     ****   sConfigOC.Pulse = 0;
 480              		.loc 1 182 0
 481 0058 0023     		movs	r3, #0
 482 005a BB60     		str	r3, [r7, #8]
 183:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 483              		.loc 1 183 0
 484 005c 0023     		movs	r3, #0
 485 005e FB60     		str	r3, [r7, #12]
 184:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 486              		.loc 1 184 0
 487 0060 0023     		movs	r3, #0
 488 0062 7B61     		str	r3, [r7, #20]
 185:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 489              		.loc 1 185 0
 490 0064 3B1D     		adds	r3, r7, #4
 491 0066 0022     		movs	r2, #0
 492 0068 1946     		mov	r1, r3
 493 006a 0848     		ldr	r0, .L25
 494 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 495 0070 0346     		mov	r3, r0
 496 0072 002B     		cmp	r3, #0
 497 0074 03D0     		beq	.L24
 186:Src/tim.c     ****   {
 187:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 498              		.loc 1 187 0
 499 0076 BB21     		movs	r1, #187
 500 0078 0648     		ldr	r0, .L25+8
 501 007a FFF7FEFF 		bl	_Error_Handler
 502              	.L24:
ARM GAS  /tmp/ccZttZL3.s 			page 13


 188:Src/tim.c     ****   }
 189:Src/tim.c     **** 
 190:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim14);
 503              		.loc 1 190 0
 504 007e 0348     		ldr	r0, .L25
 505 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 191:Src/tim.c     **** 
 192:Src/tim.c     **** }
 506              		.loc 1 192 0
 507 0084 00BF     		nop
 508 0086 2037     		adds	r7, r7, #32
 509              	.LCFI18:
 510              		.cfi_def_cfa_offset 8
 511 0088 BD46     		mov	sp, r7
 512              	.LCFI19:
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 008a 80BD     		pop	{r7, pc}
 516              	.L26:
 517              		.align	2
 518              	.L25:
 519 008c 00000000 		.word	htim14
 520 0090 00200040 		.word	1073750016
 521 0094 00000000 		.word	.LC0
 522              		.cfi_endproc
 523              	.LFE141:
 525              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 526              		.align	1
 527              		.global	HAL_TIM_Base_MspInit
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv4-sp-d16
 533              	HAL_TIM_Base_MspInit:
 534              	.LFB142:
 193:Src/tim.c     **** 
 194:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 195:Src/tim.c     **** {
 535              		.loc 1 195 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 24
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI20:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 86B0     		sub	sp, sp, #24
 545              	.LCFI21:
 546              		.cfi_def_cfa_offset 32
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI22:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 196:Src/tim.c     **** 
 197:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 551              		.loc 1 197 0
ARM GAS  /tmp/ccZttZL3.s 			page 14


 552 0008 7B68     		ldr	r3, [r7, #4]
 553 000a 1B68     		ldr	r3, [r3]
 554 000c B3F1804F 		cmp	r3, #1073741824
 555 0010 14D1     		bne	.L28
 556              	.LBB2:
 198:Src/tim.c     ****   {
 199:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 200:Src/tim.c     **** 
 201:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 202:Src/tim.c     ****     /* TIM2 clock enable */
 203:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 557              		.loc 1 203 0
 558 0012 1E4B     		ldr	r3, .L32
 559 0014 1B6C     		ldr	r3, [r3, #64]
 560 0016 1D4A     		ldr	r2, .L32
 561 0018 43F00103 		orr	r3, r3, #1
 562 001c 1364     		str	r3, [r2, #64]
 563 001e 1B4B     		ldr	r3, .L32
 564 0020 1B6C     		ldr	r3, [r3, #64]
 565 0022 03F00103 		and	r3, r3, #1
 566 0026 7B61     		str	r3, [r7, #20]
 567 0028 7B69     		ldr	r3, [r7, #20]
 568              	.LBE2:
 204:Src/tim.c     **** 
 205:Src/tim.c     ****     /* TIM2 interrupt Init */
 206:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 569              		.loc 1 206 0
 570 002a 0022     		movs	r2, #0
 571 002c 0021     		movs	r1, #0
 572 002e 1C20     		movs	r0, #28
 573 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 574              		.loc 1 207 0
 575 0034 1C20     		movs	r0, #28
 576 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 208:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 209:Src/tim.c     **** 
 210:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 211:Src/tim.c     ****   }
 212:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 213:Src/tim.c     ****   {
 214:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 0 */
 215:Src/tim.c     **** 
 216:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 0 */
 217:Src/tim.c     ****     /* TIM13 clock enable */
 218:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_ENABLE();
 219:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 220:Src/tim.c     **** 
 221:Src/tim.c     ****   /* USER CODE END TIM13_MspInit 1 */
 222:Src/tim.c     ****   }
 223:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 224:Src/tim.c     ****   {
 225:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 0 */
 226:Src/tim.c     **** 
 227:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 0 */
 228:Src/tim.c     ****     /* TIM14 clock enable */
 229:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_ENABLE();
ARM GAS  /tmp/ccZttZL3.s 			page 15


 230:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 231:Src/tim.c     **** 
 232:Src/tim.c     ****   /* USER CODE END TIM14_MspInit 1 */
 233:Src/tim.c     ****   }
 234:Src/tim.c     **** }
 577              		.loc 1 234 0
 578 003a 22E0     		b	.L31
 579              	.L28:
 212:Src/tim.c     ****   {
 580              		.loc 1 212 0
 581 003c 7B68     		ldr	r3, [r7, #4]
 582 003e 1B68     		ldr	r3, [r3]
 583 0040 134A     		ldr	r2, .L32+4
 584 0042 9342     		cmp	r3, r2
 585 0044 0CD1     		bne	.L30
 586              	.LBB3:
 218:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspInit 1 */
 587              		.loc 1 218 0
 588 0046 114B     		ldr	r3, .L32
 589 0048 1B6C     		ldr	r3, [r3, #64]
 590 004a 104A     		ldr	r2, .L32
 591 004c 43F08003 		orr	r3, r3, #128
 592 0050 1364     		str	r3, [r2, #64]
 593 0052 0E4B     		ldr	r3, .L32
 594 0054 1B6C     		ldr	r3, [r3, #64]
 595 0056 03F08003 		and	r3, r3, #128
 596 005a 3B61     		str	r3, [r7, #16]
 597 005c 3B69     		ldr	r3, [r7, #16]
 598              	.LBE3:
 599              		.loc 1 234 0
 600 005e 10E0     		b	.L31
 601              	.L30:
 223:Src/tim.c     ****   {
 602              		.loc 1 223 0
 603 0060 7B68     		ldr	r3, [r7, #4]
 604 0062 1B68     		ldr	r3, [r3]
 605 0064 0B4A     		ldr	r2, .L32+8
 606 0066 9342     		cmp	r3, r2
 607 0068 0BD1     		bne	.L31
 608              	.LBB4:
 229:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 609              		.loc 1 229 0
 610 006a 084B     		ldr	r3, .L32
 611 006c 1B6C     		ldr	r3, [r3, #64]
 612 006e 074A     		ldr	r2, .L32
 613 0070 43F48073 		orr	r3, r3, #256
 614 0074 1364     		str	r3, [r2, #64]
 615 0076 054B     		ldr	r3, .L32
 616 0078 1B6C     		ldr	r3, [r3, #64]
 617 007a 03F48073 		and	r3, r3, #256
 618 007e FB60     		str	r3, [r7, #12]
 619 0080 FB68     		ldr	r3, [r7, #12]
 620              	.L31:
 621              	.LBE4:
 622              		.loc 1 234 0
 623 0082 00BF     		nop
 624 0084 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccZttZL3.s 			page 16


 625              	.LCFI23:
 626              		.cfi_def_cfa_offset 8
 627 0086 BD46     		mov	sp, r7
 628              	.LCFI24:
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0088 80BD     		pop	{r7, pc}
 632              	.L33:
 633 008a 00BF     		.align	2
 634              	.L32:
 635 008c 00380240 		.word	1073887232
 636 0090 001C0040 		.word	1073748992
 637 0094 00200040 		.word	1073750016
 638              		.cfi_endproc
 639              	.LFE142:
 641              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 642              		.align	1
 643              		.global	HAL_TIM_PWM_MspInit
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu fpv4-sp-d16
 649              	HAL_TIM_PWM_MspInit:
 650              	.LFB143:
 235:Src/tim.c     **** 
 236:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 237:Src/tim.c     **** {
 651              		.loc 1 237 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 16
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0000 80B4     		push	{r7}
 657              	.LCFI25:
 658              		.cfi_def_cfa_offset 4
 659              		.cfi_offset 7, -4
 660 0002 85B0     		sub	sp, sp, #20
 661              	.LCFI26:
 662              		.cfi_def_cfa_offset 24
 663 0004 00AF     		add	r7, sp, #0
 664              	.LCFI27:
 665              		.cfi_def_cfa_register 7
 666 0006 7860     		str	r0, [r7, #4]
 238:Src/tim.c     **** 
 239:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 667              		.loc 1 239 0
 668 0008 7B68     		ldr	r3, [r7, #4]
 669 000a 1B68     		ldr	r3, [r3]
 670 000c 0A4A     		ldr	r2, .L37
 671 000e 9342     		cmp	r3, r2
 672 0010 0BD1     		bne	.L36
 673              	.LBB5:
 240:Src/tim.c     ****   {
 241:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 242:Src/tim.c     **** 
 243:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 244:Src/tim.c     ****     /* TIM3 clock enable */
ARM GAS  /tmp/ccZttZL3.s 			page 17


 245:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 674              		.loc 1 245 0
 675 0012 0A4B     		ldr	r3, .L37+4
 676 0014 1B6C     		ldr	r3, [r3, #64]
 677 0016 094A     		ldr	r2, .L37+4
 678 0018 43F00203 		orr	r3, r3, #2
 679 001c 1364     		str	r3, [r2, #64]
 680 001e 074B     		ldr	r3, .L37+4
 681 0020 1B6C     		ldr	r3, [r3, #64]
 682 0022 03F00203 		and	r3, r3, #2
 683 0026 FB60     		str	r3, [r7, #12]
 684 0028 FB68     		ldr	r3, [r7, #12]
 685              	.L36:
 686              	.LBE5:
 246:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 247:Src/tim.c     **** 
 248:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 249:Src/tim.c     ****   }
 250:Src/tim.c     **** }
 687              		.loc 1 250 0
 688 002a 00BF     		nop
 689 002c 1437     		adds	r7, r7, #20
 690              	.LCFI28:
 691              		.cfi_def_cfa_offset 4
 692 002e BD46     		mov	sp, r7
 693              	.LCFI29:
 694              		.cfi_def_cfa_register 13
 695              		@ sp needed
 696 0030 5DF8047B 		ldr	r7, [sp], #4
 697              	.LCFI30:
 698              		.cfi_restore 7
 699              		.cfi_def_cfa_offset 0
 700 0034 7047     		bx	lr
 701              	.L38:
 702 0036 00BF     		.align	2
 703              	.L37:
 704 0038 00040040 		.word	1073742848
 705 003c 00380240 		.word	1073887232
 706              		.cfi_endproc
 707              	.LFE143:
 709              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_TIM_MspPostInit
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	HAL_TIM_MspPostInit:
 718              	.LFB144:
 251:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 252:Src/tim.c     **** {
 719              		.loc 1 252 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 32
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              	.LCFI31:
ARM GAS  /tmp/ccZttZL3.s 			page 18


 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 88B0     		sub	sp, sp, #32
 729              	.LCFI32:
 730              		.cfi_def_cfa_offset 40
 731 0004 00AF     		add	r7, sp, #0
 732              	.LCFI33:
 733              		.cfi_def_cfa_register 7
 734 0006 7860     		str	r0, [r7, #4]
 253:Src/tim.c     **** 
 254:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 255:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 735              		.loc 1 255 0
 736 0008 7B68     		ldr	r3, [r7, #4]
 737 000a 1B68     		ldr	r3, [r3]
 738 000c 224A     		ldr	r2, .L44
 739 000e 9342     		cmp	r3, r2
 740 0010 10D1     		bne	.L40
 256:Src/tim.c     ****   {
 257:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 258:Src/tim.c     **** 
 259:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 260:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 261:Src/tim.c     ****     PC6     ------> TIM3_CH1
 262:Src/tim.c     ****     PC7     ------> TIM3_CH2 
 263:Src/tim.c     ****     */
 264:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 741              		.loc 1 264 0
 742 0012 C023     		movs	r3, #192
 743 0014 FB60     		str	r3, [r7, #12]
 265:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 744              		.loc 1 265 0
 745 0016 0223     		movs	r3, #2
 746 0018 3B61     		str	r3, [r7, #16]
 266:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 747              		.loc 1 266 0
 748 001a 0023     		movs	r3, #0
 749 001c 7B61     		str	r3, [r7, #20]
 267:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 750              		.loc 1 267 0
 751 001e 0023     		movs	r3, #0
 752 0020 BB61     		str	r3, [r7, #24]
 268:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 753              		.loc 1 268 0
 754 0022 0223     		movs	r3, #2
 755 0024 FB61     		str	r3, [r7, #28]
 269:Src/tim.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 756              		.loc 1 269 0
 757 0026 07F10C03 		add	r3, r7, #12
 758 002a 1946     		mov	r1, r3
 759 002c 1B48     		ldr	r0, .L44+4
 760 002e FFF7FEFF 		bl	HAL_GPIO_Init
 270:Src/tim.c     **** 
 271:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 272:Src/tim.c     **** 
 273:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
ARM GAS  /tmp/ccZttZL3.s 			page 19


 274:Src/tim.c     ****   }
 275:Src/tim.c     ****   else if(timHandle->Instance==TIM13)
 276:Src/tim.c     ****   {
 277:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 0 */
 278:Src/tim.c     **** 
 279:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 0 */
 280:Src/tim.c     ****   
 281:Src/tim.c     ****     /**TIM13 GPIO Configuration    
 282:Src/tim.c     ****     PF8     ------> TIM13_CH1 
 283:Src/tim.c     ****     */
 284:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 285:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 286:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 287:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 288:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 289:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 290:Src/tim.c     **** 
 291:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspPostInit 1 */
 292:Src/tim.c     **** 
 293:Src/tim.c     ****   /* USER CODE END TIM13_MspPostInit 1 */
 294:Src/tim.c     ****   }
 295:Src/tim.c     ****   else if(timHandle->Instance==TIM14)
 296:Src/tim.c     ****   {
 297:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 0 */
 298:Src/tim.c     **** 
 299:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 0 */
 300:Src/tim.c     ****   
 301:Src/tim.c     ****     /**TIM14 GPIO Configuration    
 302:Src/tim.c     ****     PF9     ------> TIM14_CH1 
 303:Src/tim.c     ****     */
 304:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 305:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 306:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 307:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 308:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 309:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 310:Src/tim.c     **** 
 311:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspPostInit 1 */
 312:Src/tim.c     **** 
 313:Src/tim.c     ****   /* USER CODE END TIM14_MspPostInit 1 */
 314:Src/tim.c     ****   }
 315:Src/tim.c     **** 
 316:Src/tim.c     **** }
 761              		.loc 1 316 0
 762 0032 2CE0     		b	.L43
 763              	.L40:
 275:Src/tim.c     ****   {
 764              		.loc 1 275 0
 765 0034 7B68     		ldr	r3, [r7, #4]
 766 0036 1B68     		ldr	r3, [r3]
 767 0038 194A     		ldr	r2, .L44+8
 768 003a 9342     		cmp	r3, r2
 769 003c 11D1     		bne	.L42
 284:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 770              		.loc 1 284 0
 771 003e 4FF48073 		mov	r3, #256
 772 0042 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccZttZL3.s 			page 20


 285:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 773              		.loc 1 285 0
 774 0044 0223     		movs	r3, #2
 775 0046 3B61     		str	r3, [r7, #16]
 286:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 776              		.loc 1 286 0
 777 0048 0023     		movs	r3, #0
 778 004a 7B61     		str	r3, [r7, #20]
 287:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 779              		.loc 1 287 0
 780 004c 0023     		movs	r3, #0
 781 004e BB61     		str	r3, [r7, #24]
 288:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 782              		.loc 1 288 0
 783 0050 0923     		movs	r3, #9
 784 0052 FB61     		str	r3, [r7, #28]
 289:Src/tim.c     **** 
 785              		.loc 1 289 0
 786 0054 07F10C03 		add	r3, r7, #12
 787 0058 1946     		mov	r1, r3
 788 005a 1248     		ldr	r0, .L44+12
 789 005c FFF7FEFF 		bl	HAL_GPIO_Init
 790              		.loc 1 316 0
 791 0060 15E0     		b	.L43
 792              	.L42:
 295:Src/tim.c     ****   {
 793              		.loc 1 295 0
 794 0062 7B68     		ldr	r3, [r7, #4]
 795 0064 1B68     		ldr	r3, [r3]
 796 0066 104A     		ldr	r2, .L44+16
 797 0068 9342     		cmp	r3, r2
 798 006a 10D1     		bne	.L43
 304:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 799              		.loc 1 304 0
 800 006c 4FF40073 		mov	r3, #512
 801 0070 FB60     		str	r3, [r7, #12]
 305:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 802              		.loc 1 305 0
 803 0072 0223     		movs	r3, #2
 804 0074 3B61     		str	r3, [r7, #16]
 306:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 805              		.loc 1 306 0
 806 0076 0023     		movs	r3, #0
 807 0078 7B61     		str	r3, [r7, #20]
 307:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 808              		.loc 1 307 0
 809 007a 0023     		movs	r3, #0
 810 007c BB61     		str	r3, [r7, #24]
 308:Src/tim.c     ****     HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 811              		.loc 1 308 0
 812 007e 0923     		movs	r3, #9
 813 0080 FB61     		str	r3, [r7, #28]
 309:Src/tim.c     **** 
 814              		.loc 1 309 0
 815 0082 07F10C03 		add	r3, r7, #12
 816 0086 1946     		mov	r1, r3
 817 0088 0648     		ldr	r0, .L44+12
ARM GAS  /tmp/ccZttZL3.s 			page 21


 818 008a FFF7FEFF 		bl	HAL_GPIO_Init
 819              	.L43:
 820              		.loc 1 316 0
 821 008e 00BF     		nop
 822 0090 2037     		adds	r7, r7, #32
 823              	.LCFI34:
 824              		.cfi_def_cfa_offset 8
 825 0092 BD46     		mov	sp, r7
 826              	.LCFI35:
 827              		.cfi_def_cfa_register 13
 828              		@ sp needed
 829 0094 80BD     		pop	{r7, pc}
 830              	.L45:
 831 0096 00BF     		.align	2
 832              	.L44:
 833 0098 00040040 		.word	1073742848
 834 009c 00080240 		.word	1073874944
 835 00a0 001C0040 		.word	1073748992
 836 00a4 00140240 		.word	1073878016
 837 00a8 00200040 		.word	1073750016
 838              		.cfi_endproc
 839              	.LFE144:
 841              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 842              		.align	1
 843              		.global	HAL_TIM_Base_MspDeInit
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv4-sp-d16
 849              	HAL_TIM_Base_MspDeInit:
 850              	.LFB145:
 317:Src/tim.c     **** 
 318:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 319:Src/tim.c     **** {
 851              		.loc 1 319 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              	.LCFI36:
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 7, -8
 859              		.cfi_offset 14, -4
 860 0002 82B0     		sub	sp, sp, #8
 861              	.LCFI37:
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              	.LCFI38:
 865              		.cfi_def_cfa_register 7
 866 0006 7860     		str	r0, [r7, #4]
 320:Src/tim.c     **** 
 321:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 867              		.loc 1 321 0
 868 0008 7B68     		ldr	r3, [r7, #4]
 869 000a 1B68     		ldr	r3, [r3]
 870 000c B3F1804F 		cmp	r3, #1073741824
 871 0010 09D1     		bne	.L47
ARM GAS  /tmp/ccZttZL3.s 			page 22


 322:Src/tim.c     ****   {
 323:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 324:Src/tim.c     **** 
 325:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 326:Src/tim.c     ****     /* Peripheral clock disable */
 327:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 872              		.loc 1 327 0
 873 0012 124B     		ldr	r3, .L51
 874 0014 1B6C     		ldr	r3, [r3, #64]
 875 0016 114A     		ldr	r2, .L51
 876 0018 23F00103 		bic	r3, r3, #1
 877 001c 1364     		str	r3, [r2, #64]
 328:Src/tim.c     **** 
 329:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 330:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 878              		.loc 1 330 0
 879 001e 1C20     		movs	r0, #28
 880 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 331:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 332:Src/tim.c     **** 
 333:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 334:Src/tim.c     ****   }
 335:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM13)
 336:Src/tim.c     ****   {
 337:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 0 */
 338:Src/tim.c     **** 
 339:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 0 */
 340:Src/tim.c     ****     /* Peripheral clock disable */
 341:Src/tim.c     ****     __HAL_RCC_TIM13_CLK_DISABLE();
 342:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 343:Src/tim.c     **** 
 344:Src/tim.c     ****   /* USER CODE END TIM13_MspDeInit 1 */
 345:Src/tim.c     ****   }
 346:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM14)
 347:Src/tim.c     ****   {
 348:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 0 */
 349:Src/tim.c     **** 
 350:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 0 */
 351:Src/tim.c     ****     /* Peripheral clock disable */
 352:Src/tim.c     ****     __HAL_RCC_TIM14_CLK_DISABLE();
 353:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 354:Src/tim.c     **** 
 355:Src/tim.c     ****   /* USER CODE END TIM14_MspDeInit 1 */
 356:Src/tim.c     ****   }
 357:Src/tim.c     **** }
 881              		.loc 1 357 0
 882 0024 16E0     		b	.L50
 883              	.L47:
 335:Src/tim.c     ****   {
 884              		.loc 1 335 0
 885 0026 7B68     		ldr	r3, [r7, #4]
 886 0028 1B68     		ldr	r3, [r3]
 887 002a 0D4A     		ldr	r2, .L51+4
 888 002c 9342     		cmp	r3, r2
 889 002e 06D1     		bne	.L49
 341:Src/tim.c     ****   /* USER CODE BEGIN TIM13_MspDeInit 1 */
 890              		.loc 1 341 0
ARM GAS  /tmp/ccZttZL3.s 			page 23


 891 0030 0A4B     		ldr	r3, .L51
 892 0032 1B6C     		ldr	r3, [r3, #64]
 893 0034 094A     		ldr	r2, .L51
 894 0036 23F08003 		bic	r3, r3, #128
 895 003a 1364     		str	r3, [r2, #64]
 896              		.loc 1 357 0
 897 003c 0AE0     		b	.L50
 898              	.L49:
 346:Src/tim.c     ****   {
 899              		.loc 1 346 0
 900 003e 7B68     		ldr	r3, [r7, #4]
 901 0040 1B68     		ldr	r3, [r3]
 902 0042 084A     		ldr	r2, .L51+8
 903 0044 9342     		cmp	r3, r2
 904 0046 05D1     		bne	.L50
 352:Src/tim.c     ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 905              		.loc 1 352 0
 906 0048 044B     		ldr	r3, .L51
 907 004a 1B6C     		ldr	r3, [r3, #64]
 908 004c 034A     		ldr	r2, .L51
 909 004e 23F48073 		bic	r3, r3, #256
 910 0052 1364     		str	r3, [r2, #64]
 911              	.L50:
 912              		.loc 1 357 0
 913 0054 00BF     		nop
 914 0056 0837     		adds	r7, r7, #8
 915              	.LCFI39:
 916              		.cfi_def_cfa_offset 8
 917 0058 BD46     		mov	sp, r7
 918              	.LCFI40:
 919              		.cfi_def_cfa_register 13
 920              		@ sp needed
 921 005a 80BD     		pop	{r7, pc}
 922              	.L52:
 923              		.align	2
 924              	.L51:
 925 005c 00380240 		.word	1073887232
 926 0060 001C0040 		.word	1073748992
 927 0064 00200040 		.word	1073750016
 928              		.cfi_endproc
 929              	.LFE145:
 931              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 932              		.align	1
 933              		.global	HAL_TIM_PWM_MspDeInit
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	HAL_TIM_PWM_MspDeInit:
 940              	.LFB146:
 358:Src/tim.c     **** 
 359:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 360:Src/tim.c     **** {
 941              		.loc 1 360 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 8
 944              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccZttZL3.s 			page 24


 945              		@ link register save eliminated.
 946 0000 80B4     		push	{r7}
 947              	.LCFI41:
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 7, -4
 950 0002 83B0     		sub	sp, sp, #12
 951              	.LCFI42:
 952              		.cfi_def_cfa_offset 16
 953 0004 00AF     		add	r7, sp, #0
 954              	.LCFI43:
 955              		.cfi_def_cfa_register 7
 956 0006 7860     		str	r0, [r7, #4]
 361:Src/tim.c     **** 
 362:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 957              		.loc 1 362 0
 958 0008 7B68     		ldr	r3, [r7, #4]
 959 000a 1B68     		ldr	r3, [r3]
 960 000c 074A     		ldr	r2, .L56
 961 000e 9342     		cmp	r3, r2
 962 0010 05D1     		bne	.L55
 363:Src/tim.c     ****   {
 364:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 365:Src/tim.c     **** 
 366:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 367:Src/tim.c     ****     /* Peripheral clock disable */
 368:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 963              		.loc 1 368 0
 964 0012 074B     		ldr	r3, .L56+4
 965 0014 1B6C     		ldr	r3, [r3, #64]
 966 0016 064A     		ldr	r2, .L56+4
 967 0018 23F00203 		bic	r3, r3, #2
 968 001c 1364     		str	r3, [r2, #64]
 969              	.L55:
 369:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 370:Src/tim.c     **** 
 371:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 372:Src/tim.c     ****   }
 373:Src/tim.c     **** } 
 970              		.loc 1 373 0
 971 001e 00BF     		nop
 972 0020 0C37     		adds	r7, r7, #12
 973              	.LCFI44:
 974              		.cfi_def_cfa_offset 4
 975 0022 BD46     		mov	sp, r7
 976              	.LCFI45:
 977              		.cfi_def_cfa_register 13
 978              		@ sp needed
 979 0024 5DF8047B 		ldr	r7, [sp], #4
 980              	.LCFI46:
 981              		.cfi_restore 7
 982              		.cfi_def_cfa_offset 0
 983 0028 7047     		bx	lr
 984              	.L57:
 985 002a 00BF     		.align	2
 986              	.L56:
 987 002c 00040040 		.word	1073742848
 988 0030 00380240 		.word	1073887232
ARM GAS  /tmp/ccZttZL3.s 			page 25


 989              		.cfi_endproc
 990              	.LFE146:
 992              		.text
 993              	.Letext0:
 994              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 995              		.file 3 "/usr/include/newlib/sys/lock.h"
 996              		.file 4 "/usr/include/newlib/sys/_types.h"
 997              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 998              		.file 6 "/usr/include/newlib/sys/reent.h"
 999              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 1000              		.file 8 "Inc/main.h"
 1001              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1002              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1003              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1004              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1005              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1006              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1007              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1008              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1009              		.file 17 "Inc/tim.h"
 1010              		.file 18 "Inc/motor.h"
ARM GAS  /tmp/ccZttZL3.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000008 motor1
                            *COM*:0000000000000008 motor2
                            *COM*:0000000000000008 motor3
                            *COM*:0000000000000008 motor4
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000040 htim3
                            *COM*:0000000000000040 htim13
                            *COM*:0000000000000040 htim14
     /tmp/ccZttZL3.s:29     .rodata:0000000000000000 $d
     /tmp/ccZttZL3.s:33     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccZttZL3.s:40     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccZttZL3.s:141    .text.MX_TIM2_Init:000000000000008c $d
     /tmp/ccZttZL3.s:147    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccZttZL3.s:154    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccZttZL3.s:717    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccZttZL3.s:281    .text.MX_TIM3_Init:00000000000000b4 $d
     /tmp/ccZttZL3.s:288    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccZttZL3.s:295    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccZttZL3.s:400    .text.MX_TIM13_Init:000000000000008c $d
     /tmp/ccZttZL3.s:407    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccZttZL3.s:414    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccZttZL3.s:519    .text.MX_TIM14_Init:000000000000008c $d
     /tmp/ccZttZL3.s:526    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccZttZL3.s:533    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccZttZL3.s:635    .text.HAL_TIM_Base_MspInit:000000000000008c $d
     /tmp/ccZttZL3.s:642    .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccZttZL3.s:649    .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccZttZL3.s:704    .text.HAL_TIM_PWM_MspInit:0000000000000038 $d
     /tmp/ccZttZL3.s:710    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccZttZL3.s:833    .text.HAL_TIM_MspPostInit:0000000000000098 $d
     /tmp/ccZttZL3.s:842    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccZttZL3.s:849    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccZttZL3.s:925    .text.HAL_TIM_Base_MspDeInit:000000000000005c $d
     /tmp/ccZttZL3.s:932    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccZttZL3.s:939    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccZttZL3.s:987    .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
_Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
HAL_NVIC_DisableIRQ
