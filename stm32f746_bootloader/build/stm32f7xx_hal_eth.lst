ARM GAS  /tmp/cctGrkQx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_eth.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.section	.text.HAL_ETH_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_ETH_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	HAL_ETH_Init:
  29              	.LFB138:
  30              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @file    stm32f7xx_hal_eth.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief   ETH HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          functionalities of the Ethernet (ETH) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Peripheral Control functions 
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                     ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Declare a ETH_HandleTypeDef handle structure, for example:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          ETH_HandleTypeDef  heth;
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Fill parameters of Init structure in heth handle
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Call HAL_ETH_Init() API to initialize the Ethernet peripheral (MAC, DMA, ...) 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Initialize the ETH low level resources through the HAL_ETH_MspInit() API:
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Enable the Ethernet interface clock using 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMAC_CLK_ENABLE();
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMACTX_CLK_ENABLE();
ARM GAS  /tmp/cctGrkQx.s 			page 2


  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMACRX_CLK_ENABLE();
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Initialize the related GPIO clocks
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Configure Ethernet pin-out
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Configure Ethernet NVIC interrupt (IT mode)   
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Initialize Ethernet DMA Descriptors in chain mode and point to allocated buffers:
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_DMATxDescListInit(); for Transmission process
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_DMARxDescListInit(); for Reception process
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Enable MAC and DMA transmission and reception:
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_Start();
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Prepare ETH DMA TX Descriptors and give the hand to ETH DMA to transfer 
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          the frame to MAC TX FIFO:
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_TransmitFrame();
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Poll for a received frame in ETH RX DMA Descriptors and get received 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          frame parameters
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_GetReceivedFrame(); (should be called into an infinite loop)
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Get a received frame when an ETH RX interrupt occurs:
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_GetReceivedFrame_IT(); (called in IT mode only)
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Communicate with external PHY device:
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) Read a specific register from the PHY  
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****               HAL_ETH_ReadPHYRegister();
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) Write data to a specific RHY register:
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****               HAL_ETH_WritePHYRegister();
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Configure the Ethernet MAC after ETH peripheral initialization
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigMAC(); all MAC parameters should be filled.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Configure the Ethernet DMA after ETH peripheral initialization
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigDMA(); all DMA parameters should be filled.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @attention
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * Redistribution and use in source and binary forms, with or without modification,
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * are permitted provided that the following conditions are met:
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      this list of conditions and the following disclaimer.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      this list of conditions and the following disclaimer in the documentation
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      and/or other materials provided with the distribution.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      may be used to endorse or promote products derived from this software
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *      without specific prior written permission.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cctGrkQx.s 			page 3


  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Includes ------------------------------------------------------------------*/
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #include "stm32f7xx_hal.h"
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @addtogroup STM32F7xx_HAL_Driver
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH ETH 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief ETH HAL module driver
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #ifdef HAL_ETH_MODULE_ENABLED
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if defined (ETH)
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private typedef -----------------------------------------------------------*/
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private define ------------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Private_Constants ETH Private Constants
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_SWRESET                 ((uint32_t)500)  
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_LINKED_STATE          ((uint32_t)5000)  
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_AUTONEGO_COMPLETED    ((uint32_t)5000) 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private macro -------------------------------------------------------------*/
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private variables ---------------------------------------------------------*/
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private function prototypes -----------------------------------------------*/
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Private_Functions ETH Private Functions
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err);
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr);
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth);
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth);
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth);
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth);
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth);
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth);
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth);
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth);
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth);
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
ARM GAS  /tmp/cctGrkQx.s 			page 4


 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private functions ---------------------------------------------------------*/
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions ETH Exported Functions
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group1 Initialization and de-initialization functions 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Initialization and Configuration functions 
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim    
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             ##### Initialization and de-initialization functions #####
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]  This section provides functions allowing to:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Initialize and configure the Ethernet peripheral
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) De-initialize the Ethernet peripheral
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the Ethernet MAC and DMA according to default
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         parameters.
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Init(ETH_HandleTypeDef *heth)
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
  31              		.loc 1 173 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 32
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 88B0     		sub	sp, sp, #32
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 40
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tempreg = 0, phyreg = 0;
  47              		.loc 1 174 0
  48 0008 0023     		movs	r3, #0
  49 000a FB61     		str	r3, [r7, #28]
  50 000c 0023     		movs	r3, #0
  51 000e FB60     		str	r3, [r7, #12]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t hclk = 60000000;
  52              		.loc 1 175 0
  53 0010 A94B     		ldr	r3, .L28
  54 0012 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/cctGrkQx.s 			page 5


 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
  55              		.loc 1 176 0
  56 0014 0023     		movs	r3, #0
  57 0016 7B61     		str	r3, [r7, #20]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t err = ETH_SUCCESS;
  58              		.loc 1 177 0
  59 0018 0023     		movs	r3, #0
  60 001a 3B61     		str	r3, [r7, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth == NULL)
  61              		.loc 1 180 0
  62 001c 7B68     		ldr	r3, [r7, #4]
  63 001e 002B     		cmp	r3, #0
  64 0020 01D1     		bne	.L2
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
  65              		.loc 1 182 0
  66 0022 0123     		movs	r3, #1
  67 0024 83E1     		b	.L26
  68              	.L2:
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_AUTONEGOTIATION(heth->Init.AutoNegotiation));
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RX_MODE(heth->Init.RxMode));
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_CHECKSUM_MODE(heth->Init.ChecksumMode));
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_MEDIA_INTERFACE(heth->Init.MediaInterface));  
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_RESET)
  69              		.loc 1 191 0
  70 0026 7B68     		ldr	r3, [r7, #4]
  71 0028 93F84430 		ldrb	r3, [r3, #68]
  72 002c DBB2     		uxtb	r3, r3
  73 002e 002B     		cmp	r3, #0
  74 0030 06D1     		bne	.L4
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Allocate lock resource and initialize it */
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->Lock = HAL_UNLOCKED;
  75              		.loc 1 194 0
  76 0032 7B68     		ldr	r3, [r7, #4]
  77 0034 0022     		movs	r2, #0
  78 0036 83F84520 		strb	r2, [r3, #69]
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC. */
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_MspInit(heth);
  79              		.loc 1 196 0
  80 003a 7868     		ldr	r0, [r7, #4]
  81 003c FFF7FEFF 		bl	HAL_ETH_MspInit
  82              	.L4:
  83              	.LBB2:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable SYSCFG Clock */
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  84              		.loc 1 200 0
  85 0040 9E4B     		ldr	r3, .L28+4
  86 0042 5B6C     		ldr	r3, [r3, #68]
ARM GAS  /tmp/cctGrkQx.s 			page 6


  87 0044 9D4A     		ldr	r2, .L28+4
  88 0046 43F48043 		orr	r3, r3, #16384
  89 004a 5364     		str	r3, [r2, #68]
  90 004c 9B4B     		ldr	r3, .L28+4
  91 004e 5B6C     		ldr	r3, [r3, #68]
  92 0050 03F48043 		and	r3, r3, #16384
  93 0054 BB60     		str	r3, [r7, #8]
  94 0056 BB68     		ldr	r3, [r7, #8]
  95              	.LBE2:
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Select MII or RMII Mode*/
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC &= ~(SYSCFG_PMC_MII_RMII_SEL);
  96              		.loc 1 203 0
  97 0058 994B     		ldr	r3, .L28+8
  98 005a 5B68     		ldr	r3, [r3, #4]
  99 005c 984A     		ldr	r2, .L28+8
 100 005e 23F40003 		bic	r3, r3, #8388608
 101 0062 5360     		str	r3, [r2, #4]
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC |= (uint32_t)heth->Init.MediaInterface;
 102              		.loc 1 204 0
 103 0064 964B     		ldr	r3, .L28+8
 104 0066 5A68     		ldr	r2, [r3, #4]
 105 0068 7B68     		ldr	r3, [r7, #4]
 106 006a 1B6A     		ldr	r3, [r3, #32]
 107 006c 9449     		ldr	r1, .L28+8
 108 006e 1343     		orrs	r3, r3, r2
 109 0070 4B60     		str	r3, [r1, #4]
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Ethernet Software reset */
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the SWR bit: resets all MAC subsystem internal registers and logic */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* After reset all the registers holds their respective reset values */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMABMR |= ETH_DMABMR_SR;
 110              		.loc 1 209 0
 111 0072 7B68     		ldr	r3, [r7, #4]
 112 0074 1B68     		ldr	r3, [r3]
 113 0076 03F58053 		add	r3, r3, #4096
 114 007a 1A68     		ldr	r2, [r3]
 115 007c 7B68     		ldr	r3, [r7, #4]
 116 007e 1B68     		ldr	r3, [r3]
 117 0080 42F00102 		orr	r2, r2, #1
 118 0084 03F58053 		add	r3, r3, #4096
 119 0088 1A60     		str	r2, [r3]
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 120              		.loc 1 212 0
 121 008a FFF7FEFF 		bl	HAL_GetTick
 122 008e 7861     		str	r0, [r7, #20]
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait for software reset */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while (((heth->Instance)->DMABMR & ETH_DMABMR_SR) != (uint32_t)RESET)
 123              		.loc 1 215 0
 124 0090 11E0     		b	.L5
 125              	.L6:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_SWRESET)
ARM GAS  /tmp/cctGrkQx.s 			page 7


 126              		.loc 1 218 0
 127 0092 FFF7FEFF 		bl	HAL_GetTick
 128 0096 0246     		mov	r2, r0
 129 0098 7B69     		ldr	r3, [r7, #20]
 130 009a D31A     		subs	r3, r2, r3
 131 009c B3F5FA7F 		cmp	r3, #500
 132 00a0 09D9     		bls	.L5
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {     
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_TIMEOUT;
 133              		.loc 1 220 0
 134 00a2 7B68     		ldr	r3, [r7, #4]
 135 00a4 0322     		movs	r2, #3
 136 00a6 83F84420 		strb	r2, [r3, #68]
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 137              		.loc 1 223 0
 138 00aa 7B68     		ldr	r3, [r7, #4]
 139 00ac 0022     		movs	r2, #0
 140 00ae 83F84520 		strb	r2, [r3, #69]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Note: The SWR is not performed if the ETH_RX_CLK or the ETH_TX_CLK are  
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          not available, please check your external PHY or the IO configuration */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 141              		.loc 1 228 0
 142 00b2 0323     		movs	r3, #3
 143 00b4 3BE1     		b	.L26
 144              	.L5:
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 145              		.loc 1 215 0
 146 00b6 7B68     		ldr	r3, [r7, #4]
 147 00b8 1B68     		ldr	r3, [r3]
 148 00ba 03F58053 		add	r3, r3, #4096
 149 00be 1B68     		ldr	r3, [r3]
 150 00c0 03F00103 		and	r3, r3, #1
 151 00c4 002B     		cmp	r3, #0
 152 00c6 E4D1     		bne	.L6
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*-------------------------------- MAC Initialization ----------------------*/
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tempreg = (heth->Instance)->MACMIIAR;
 153              		.loc 1 234 0
 154 00c8 7B68     		ldr	r3, [r7, #4]
 155 00ca 1B68     		ldr	r3, [r3]
 156 00cc 1B69     		ldr	r3, [r3, #16]
 157 00ce FB61     		str	r3, [r7, #28]
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear CSR Clock Range CR[2:0] bits */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tempreg &= ETH_MACMIIAR_CR_MASK;
 158              		.loc 1 236 0
 159 00d0 FB69     		ldr	r3, [r7, #28]
 160 00d2 23F01C03 		bic	r3, r3, #28
 161 00d6 FB61     		str	r3, [r7, #28]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get hclk frequency value */
ARM GAS  /tmp/cctGrkQx.s 			page 8


 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   hclk = HAL_RCC_GetHCLKFreq();
 162              		.loc 1 239 0
 163 00d8 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 164 00dc B861     		str	r0, [r7, #24]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set CR bits depending on hclk value */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((hclk >= 20000000)&&(hclk < 35000000))
 165              		.loc 1 242 0
 166 00de BB69     		ldr	r3, [r7, #24]
 167 00e0 784A     		ldr	r2, .L28+12
 168 00e2 9342     		cmp	r3, r2
 169 00e4 08D9     		bls	.L7
 170              		.loc 1 242 0 is_stmt 0 discriminator 1
 171 00e6 BB69     		ldr	r3, [r7, #24]
 172 00e8 774A     		ldr	r2, .L28+16
 173 00ea 9342     		cmp	r3, r2
 174 00ec 04D8     		bhi	.L7
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 20-35 MHz */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div16;
 175              		.loc 1 245 0 is_stmt 1
 176 00ee FB69     		ldr	r3, [r7, #28]
 177 00f0 43F00803 		orr	r3, r3, #8
 178 00f4 FB61     		str	r3, [r7, #28]
 179 00f6 27E0     		b	.L8
 180              	.L7:
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 35000000)&&(hclk < 60000000))
 181              		.loc 1 247 0
 182 00f8 BB69     		ldr	r3, [r7, #24]
 183 00fa 734A     		ldr	r2, .L28+16
 184 00fc 9342     		cmp	r3, r2
 185 00fe 08D9     		bls	.L9
 186              		.loc 1 247 0 is_stmt 0 discriminator 1
 187 0100 BB69     		ldr	r3, [r7, #24]
 188 0102 724A     		ldr	r2, .L28+20
 189 0104 9342     		cmp	r3, r2
 190 0106 04D8     		bhi	.L9
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 35-60 MHz */ 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div26;
 191              		.loc 1 250 0 is_stmt 1
 192 0108 FB69     		ldr	r3, [r7, #28]
 193 010a 43F00C03 		orr	r3, r3, #12
 194 010e FB61     		str	r3, [r7, #28]
 195 0110 1AE0     		b	.L8
 196              	.L9:
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 60000000)&&(hclk < 100000000))
 197              		.loc 1 252 0
 198 0112 BB69     		ldr	r3, [r7, #24]
 199 0114 6D4A     		ldr	r2, .L28+20
 200 0116 9342     		cmp	r3, r2
 201 0118 03D9     		bls	.L10
 202              		.loc 1 252 0 is_stmt 0 discriminator 1
 203 011a BB69     		ldr	r3, [r7, #24]
 204 011c 6C4A     		ldr	r2, .L28+24
ARM GAS  /tmp/cctGrkQx.s 			page 9


 205 011e 9342     		cmp	r3, r2
 206 0120 11D9     		bls	.L27
 207              	.L10:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 60-100 MHz */ 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div42;
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 100000000)&&(hclk < 150000000))
 208              		.loc 1 257 0 is_stmt 1
 209 0122 BB69     		ldr	r3, [r7, #24]
 210 0124 6A4A     		ldr	r2, .L28+24
 211 0126 9342     		cmp	r3, r2
 212 0128 08D9     		bls	.L11
 213              		.loc 1 257 0 is_stmt 0 discriminator 1
 214 012a BB69     		ldr	r3, [r7, #24]
 215 012c 694A     		ldr	r2, .L28+28
 216 012e 9342     		cmp	r3, r2
 217 0130 04D8     		bhi	.L11
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 100-150 MHz */ 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div62;
 218              		.loc 1 260 0 is_stmt 1
 219 0132 FB69     		ldr	r3, [r7, #28]
 220 0134 43F00403 		orr	r3, r3, #4
 221 0138 FB61     		str	r3, [r7, #28]
 222 013a 05E0     		b	.L8
 223              	.L11:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* ((hclk >= 150000000)&&(hclk <= 216000000)) */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 150-216 MHz */ 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div102;    
 224              		.loc 1 265 0
 225 013c FB69     		ldr	r3, [r7, #28]
 226 013e 43F01003 		orr	r3, r3, #16
 227 0142 FB61     		str	r3, [r7, #28]
 228 0144 00E0     		b	.L8
 229              	.L27:
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 230              		.loc 1 255 0
 231 0146 00BF     		nop
 232              	.L8:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MAC MIIAR: Configure the ETHERNET CSR Clock Range */
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACMIIAR = (uint32_t)tempreg;
 233              		.loc 1 269 0
 234 0148 7B68     		ldr	r3, [r7, #4]
 235 014a 1B68     		ldr	r3, [r3]
 236 014c FA69     		ldr	r2, [r7, #28]
 237 014e 1A61     		str	r2, [r3, #16]
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*-------------------- PHY initialization and configuration ----------------*/
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Put the PHY in reset mode */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((HAL_ETH_WritePHYRegister(heth, PHY_BCR, PHY_RESET)) != HAL_OK)
 238              		.loc 1 273 0
 239 0150 4FF40042 		mov	r2, #32768
ARM GAS  /tmp/cctGrkQx.s 			page 10


 240 0154 0021     		movs	r1, #0
 241 0156 7868     		ldr	r0, [r7, #4]
 242 0158 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 243 015c 0346     		mov	r3, r0
 244 015e 002B     		cmp	r3, #0
 245 0160 0BD0     		beq	.L12
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* In case of write timeout */
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     err = ETH_ERROR;
 246              		.loc 1 276 0
 247 0162 0123     		movs	r3, #1
 248 0164 3B61     		str	r3, [r7, #16]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Config MAC and DMA */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     ETH_MACDMAConfig(heth, err);
 249              		.loc 1 279 0
 250 0166 3969     		ldr	r1, [r7, #16]
 251 0168 7868     		ldr	r0, [r7, #4]
 252 016a FFF7FEFF 		bl	ETH_MACDMAConfig
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the ETH peripheral state to READY */
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 253              		.loc 1 282 0
 254 016e 7B68     		ldr	r3, [r7, #4]
 255 0170 0122     		movs	r2, #1
 256 0172 83F84420 		strb	r2, [r3, #68]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Return HAL_ERROR */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 257              		.loc 1 285 0
 258 0176 0123     		movs	r3, #1
 259 0178 D9E0     		b	.L26
 260              	.L12:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Delay to assure PHY reset */
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(PHY_RESET_DELAY);
 261              		.loc 1 289 0
 262 017a FF20     		movs	r0, #255
 263 017c FFF7FEFF 		bl	HAL_Delay
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((heth->Init).AutoNegotiation != ETH_AUTONEGOTIATION_DISABLE)
 264              		.loc 1 291 0
 265 0180 7B68     		ldr	r3, [r7, #4]
 266 0182 5B68     		ldr	r3, [r3, #4]
 267 0184 002B     		cmp	r3, #0
 268 0186 00F0A780 		beq	.L13
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get tick */
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 269              		.loc 1 294 0
 270 018a FFF7FEFF 		bl	HAL_GetTick
 271 018e 7861     		str	r0, [r7, #20]
 272              	.L15:
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* We wait for linked status */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     do
ARM GAS  /tmp/cctGrkQx.s 			page 11


 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_ETH_ReadPHYRegister(heth, PHY_BSR, &phyreg);
 273              		.loc 1 299 0
 274 0190 07F10C03 		add	r3, r7, #12
 275 0194 1A46     		mov	r2, r3
 276 0196 0121     		movs	r1, #1
 277 0198 7868     		ldr	r0, [r7, #4]
 278 019a FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check for the Timeout */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_LINKED_STATE)
 279              		.loc 1 302 0
 280 019e FFF7FEFF 		bl	HAL_GetTick
 281 01a2 0246     		mov	r2, r0
 282 01a4 7B69     		ldr	r3, [r7, #20]
 283 01a6 D31A     		subs	r3, r2, r3
 284 01a8 41F28832 		movw	r2, #5000
 285 01ac 9342     		cmp	r3, r2
 286 01ae 0FD9     		bls	.L14
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* In case of write timeout */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         err = ETH_ERROR;
 287              		.loc 1 305 0
 288 01b0 0123     		movs	r3, #1
 289 01b2 3B61     		str	r3, [r7, #16]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Config MAC and DMA */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         ETH_MACDMAConfig(heth, err);
 290              		.loc 1 308 0
 291 01b4 3969     		ldr	r1, [r7, #16]
 292 01b6 7868     		ldr	r0, [r7, #4]
 293 01b8 FFF7FEFF 		bl	ETH_MACDMAConfig
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->State= HAL_ETH_STATE_READY;
 294              		.loc 1 310 0
 295 01bc 7B68     		ldr	r3, [r7, #4]
 296 01be 0122     		movs	r2, #1
 297 01c0 83F84420 		strb	r2, [r3, #68]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Process Unlocked */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         __HAL_UNLOCK(heth);
 298              		.loc 1 313 0
 299 01c4 7B68     		ldr	r3, [r7, #4]
 300 01c6 0022     		movs	r2, #0
 301 01c8 83F84520 		strb	r2, [r3, #69]
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         return HAL_TIMEOUT;
 302              		.loc 1 315 0
 303 01cc 0323     		movs	r3, #3
 304 01ce AEE0     		b	.L26
 305              	.L14:
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } while (((phyreg & PHY_LINKED_STATUS) != PHY_LINKED_STATUS));
 306              		.loc 1 317 0
 307 01d0 FB68     		ldr	r3, [r7, #12]
 308 01d2 03F00403 		and	r3, r3, #4
 309 01d6 002B     		cmp	r3, #0
ARM GAS  /tmp/cctGrkQx.s 			page 12


 310 01d8 DAD0     		beq	.L15
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Enable Auto-Negotiation */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_ETH_WritePHYRegister(heth, PHY_BCR, PHY_AUTONEGOTIATION)) != HAL_OK)
 311              		.loc 1 321 0
 312 01da 4FF48052 		mov	r2, #4096
 313 01de 0021     		movs	r1, #0
 314 01e0 7868     		ldr	r0, [r7, #4]
 315 01e2 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 316 01e6 0346     		mov	r3, r0
 317 01e8 002B     		cmp	r3, #0
 318 01ea 0BD0     		beq	.L16
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 319              		.loc 1 324 0
 320 01ec 0123     		movs	r3, #1
 321 01ee 3B61     		str	r3, [r7, #16]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 322              		.loc 1 327 0
 323 01f0 3969     		ldr	r1, [r7, #16]
 324 01f2 7868     		ldr	r0, [r7, #4]
 325 01f4 FFF7FEFF 		bl	ETH_MACDMAConfig
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 326              		.loc 1 330 0
 327 01f8 7B68     		ldr	r3, [r7, #4]
 328 01fa 0122     		movs	r2, #1
 329 01fc 83F84420 		strb	r2, [r3, #68]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;   
 330              		.loc 1 333 0
 331 0200 0123     		movs	r3, #1
 332 0202 94E0     		b	.L26
 333              	.L16:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get tick */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 334              		.loc 1 337 0
 335 0204 FFF7FEFF 		bl	HAL_GetTick
 336 0208 7861     		str	r0, [r7, #20]
 337              	.L18:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the auto-negotiation will be completed */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     do
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_ETH_ReadPHYRegister(heth, PHY_BSR, &phyreg);
 338              		.loc 1 342 0
 339 020a 07F10C03 		add	r3, r7, #12
 340 020e 1A46     		mov	r2, r3
 341 0210 0121     		movs	r1, #1
ARM GAS  /tmp/cctGrkQx.s 			page 13


 342 0212 7868     		ldr	r0, [r7, #4]
 343 0214 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check for the Timeout */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_AUTONEGO_COMPLETED)
 344              		.loc 1 345 0
 345 0218 FFF7FEFF 		bl	HAL_GetTick
 346 021c 0246     		mov	r2, r0
 347 021e 7B69     		ldr	r3, [r7, #20]
 348 0220 D31A     		subs	r3, r2, r3
 349 0222 41F28832 		movw	r2, #5000
 350 0226 9342     		cmp	r3, r2
 351 0228 0FD9     		bls	.L17
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* In case of write timeout */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         err = ETH_ERROR;
 352              		.loc 1 348 0
 353 022a 0123     		movs	r3, #1
 354 022c 3B61     		str	r3, [r7, #16]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Config MAC and DMA */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         ETH_MACDMAConfig(heth, err);
 355              		.loc 1 351 0
 356 022e 3969     		ldr	r1, [r7, #16]
 357 0230 7868     		ldr	r0, [r7, #4]
 358 0232 FFF7FEFF 		bl	ETH_MACDMAConfig
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->State= HAL_ETH_STATE_READY;
 359              		.loc 1 353 0
 360 0236 7B68     		ldr	r3, [r7, #4]
 361 0238 0122     		movs	r2, #1
 362 023a 83F84420 		strb	r2, [r3, #68]
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Process Unlocked */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         __HAL_UNLOCK(heth);
 363              		.loc 1 356 0
 364 023e 7B68     		ldr	r3, [r7, #4]
 365 0240 0022     		movs	r2, #0
 366 0242 83F84520 		strb	r2, [r3, #69]
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         return HAL_TIMEOUT;
 367              		.loc 1 358 0
 368 0246 0323     		movs	r3, #3
 369 0248 71E0     		b	.L26
 370              	.L17:
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } while (((phyreg & PHY_AUTONEGO_COMPLETE) != PHY_AUTONEGO_COMPLETE));
 371              		.loc 1 361 0
 372 024a FB68     		ldr	r3, [r7, #12]
 373 024c 03F02003 		and	r3, r3, #32
 374 0250 002B     		cmp	r3, #0
 375 0252 DAD0     		beq	.L18
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Read the result of the auto-negotiation */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_ETH_ReadPHYRegister(heth, PHY_SR, &phyreg)) != HAL_OK)
 376              		.loc 1 364 0
ARM GAS  /tmp/cctGrkQx.s 			page 14


 377 0254 07F10C03 		add	r3, r7, #12
 378 0258 1A46     		mov	r2, r3
 379 025a 1021     		movs	r1, #16
 380 025c 7868     		ldr	r0, [r7, #4]
 381 025e FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 382 0262 0346     		mov	r3, r0
 383 0264 002B     		cmp	r3, #0
 384 0266 0BD0     		beq	.L19
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 385              		.loc 1 367 0
 386 0268 0123     		movs	r3, #1
 387 026a 3B61     		str	r3, [r7, #16]
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 388              		.loc 1 370 0
 389 026c 3969     		ldr	r1, [r7, #16]
 390 026e 7868     		ldr	r0, [r7, #4]
 391 0270 FFF7FEFF 		bl	ETH_MACDMAConfig
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 392              		.loc 1 373 0
 393 0274 7B68     		ldr	r3, [r7, #4]
 394 0276 0122     		movs	r2, #1
 395 0278 83F84420 		strb	r2, [r3, #68]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;   
 396              		.loc 1 376 0
 397 027c 0123     		movs	r3, #1
 398 027e 56E0     		b	.L26
 399              	.L19:
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Configure the MAC with the Duplex Mode fixed by the auto-negotiation process */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((phyreg & PHY_DUPLEX_STATUS) != (uint32_t)RESET)
 400              		.loc 1 380 0
 401 0280 FB68     		ldr	r3, [r7, #12]
 402 0282 03F00403 		and	r3, r3, #4
 403 0286 002B     		cmp	r3, #0
 404 0288 04D0     		beq	.L20
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet duplex mode to Full-duplex following the auto-negotiation */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).DuplexMode = ETH_MODE_FULLDUPLEX;  
 405              		.loc 1 383 0
 406 028a 7B68     		ldr	r3, [r7, #4]
 407 028c 4FF40062 		mov	r2, #2048
 408 0290 DA60     		str	r2, [r3, #12]
 409 0292 02E0     		b	.L21
 410              	.L20:
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet duplex mode to Half-duplex following the auto-negotiation */
ARM GAS  /tmp/cctGrkQx.s 			page 15


 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).DuplexMode = ETH_MODE_HALFDUPLEX;           
 411              		.loc 1 388 0
 412 0294 7B68     		ldr	r3, [r7, #4]
 413 0296 0022     		movs	r2, #0
 414 0298 DA60     		str	r2, [r3, #12]
 415              	.L21:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Configure the MAC with the speed fixed by the auto-negotiation process */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((phyreg & PHY_SPEED_STATUS) == PHY_SPEED_STATUS)
 416              		.loc 1 391 0
 417 029a FB68     		ldr	r3, [r7, #12]
 418 029c 03F00203 		and	r3, r3, #2
 419 02a0 002B     		cmp	r3, #0
 420 02a2 03D0     		beq	.L22
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {  
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet speed to 10M following the auto-negotiation */
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).Speed = ETH_SPEED_10M; 
 421              		.loc 1 394 0
 422 02a4 7B68     		ldr	r3, [r7, #4]
 423 02a6 0022     		movs	r2, #0
 424 02a8 9A60     		str	r2, [r3, #8]
 425 02aa 37E0     		b	.L24
 426              	.L22:
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {   
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet speed to 100M following the auto-negotiation */ 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).Speed = ETH_SPEED_100M;
 427              		.loc 1 399 0
 428 02ac 7B68     		ldr	r3, [r7, #4]
 429 02ae 4FF48042 		mov	r2, #16384
 430 02b2 9A60     		str	r2, [r3, #8]
 431 02b4 32E0     		b	.L24
 432              	.L29:
 433 02b6 00BF     		.align	2
 434              	.L28:
 435 02b8 00879303 		.word	60000000
 436 02bc 00380240 		.word	1073887232
 437 02c0 00380140 		.word	1073821696
 438 02c4 FF2C3101 		.word	19999999
 439 02c8 BF0E1602 		.word	34999999
 440 02cc FF869303 		.word	59999999
 441 02d0 FFE0F505 		.word	99999999
 442 02d4 7FD1F008 		.word	149999999
 443              	.L13:
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* AutoNegotiation Disable */
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check parameters */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_SPEED(heth->Init.Speed));
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode));
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set MAC Speed and Duplex Mode */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(HAL_ETH_WritePHYRegister(heth, PHY_BCR, ((uint16_t)((heth->Init).DuplexMode >> 3) |
 444              		.loc 1 409 0
 445 02d8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cctGrkQx.s 			page 16


 446 02da DB68     		ldr	r3, [r3, #12]
 447 02dc DB08     		lsrs	r3, r3, #3
 448 02de 9AB2     		uxth	r2, r3
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 449              		.loc 1 410 0
 450 02e0 7B68     		ldr	r3, [r7, #4]
 451 02e2 9B68     		ldr	r3, [r3, #8]
 452 02e4 5B08     		lsrs	r3, r3, #1
 453 02e6 9BB2     		uxth	r3, r3
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 454              		.loc 1 409 0
 455 02e8 1343     		orrs	r3, r3, r2
 456 02ea 9BB2     		uxth	r3, r3
 457 02ec 1A46     		mov	r2, r3
 458 02ee 0021     		movs	r1, #0
 459 02f0 7868     		ldr	r0, [r7, #4]
 460 02f2 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 461 02f6 0346     		mov	r3, r0
 462 02f8 002B     		cmp	r3, #0
 463 02fa 0BD0     		beq	.L25
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 464              		.loc 1 413 0
 465 02fc 0123     		movs	r3, #1
 466 02fe 3B61     		str	r3, [r7, #16]
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 467              		.loc 1 416 0
 468 0300 3969     		ldr	r1, [r7, #16]
 469 0302 7868     		ldr	r0, [r7, #4]
 470 0304 FFF7FEFF 		bl	ETH_MACDMAConfig
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 471              		.loc 1 419 0
 472 0308 7B68     		ldr	r3, [r7, #4]
 473 030a 0122     		movs	r2, #1
 474 030c 83F84420 		strb	r2, [r3, #68]
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;
 475              		.loc 1 422 0
 476 0310 0123     		movs	r3, #1
 477 0312 0CE0     		b	.L26
 478              	.L25:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }  
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Delay to assure PHY configuration */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(PHY_CONFIG_DELAY);
 479              		.loc 1 426 0
 480 0314 40F6FF70 		movw	r0, #4095
 481 0318 FFF7FEFF 		bl	HAL_Delay
 482              	.L24:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/cctGrkQx.s 			page 17


 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Config MAC and DMA */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACDMAConfig(heth, err);
 483              		.loc 1 430 0
 484 031c 3969     		ldr	r1, [r7, #16]
 485 031e 7868     		ldr	r0, [r7, #4]
 486 0320 FFF7FEFF 		bl	ETH_MACDMAConfig
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 487              		.loc 1 433 0
 488 0324 7B68     		ldr	r3, [r7, #4]
 489 0326 0122     		movs	r2, #1
 490 0328 83F84420 		strb	r2, [r3, #68]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 491              		.loc 1 436 0
 492 032c 0023     		movs	r3, #0
 493              	.L26:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 494              		.loc 1 437 0 discriminator 1
 495 032e 1846     		mov	r0, r3
 496 0330 2037     		adds	r7, r7, #32
 497              	.LCFI3:
 498              		.cfi_def_cfa_offset 8
 499 0332 BD46     		mov	sp, r7
 500              	.LCFI4:
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 0334 80BD     		pop	{r7, pc}
 504              		.cfi_endproc
 505              	.LFE138:
 507 0336 00BF     		.section	.text.HAL_ETH_DeInit,"ax",%progbits
 508              		.align	1
 509              		.global	HAL_ETH_DeInit
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	HAL_ETH_DeInit:
 516              	.LFB139:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  De-Initializes the ETH peripheral. 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DeInit(ETH_HandleTypeDef *heth)
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 517              		.loc 1 446 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 8
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              	.LCFI5:
 523              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cctGrkQx.s 			page 18


 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 82B0     		sub	sp, sp, #8
 527              	.LCFI6:
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              	.LCFI7:
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 533              		.loc 1 448 0
 534 0008 7B68     		ldr	r3, [r7, #4]
 535 000a 0222     		movs	r2, #2
 536 000c 83F84420 		strb	r2, [r3, #68]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* De-Init the low level hardware : GPIO, CLOCK, NVIC. */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_ETH_MspDeInit(heth);
 537              		.loc 1 451 0
 538 0010 7868     		ldr	r0, [r7, #4]
 539 0012 FFF7FEFF 		bl	HAL_ETH_MspDeInit
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL state to Disabled */
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_RESET;
 540              		.loc 1 454 0
 541 0016 7B68     		ldr	r3, [r7, #4]
 542 0018 0022     		movs	r2, #0
 543 001a 83F84420 		strb	r2, [r3, #68]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Release Lock */
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 544              		.loc 1 457 0
 545 001e 7B68     		ldr	r3, [r7, #4]
 546 0020 0022     		movs	r2, #0
 547 0022 83F84520 		strb	r2, [r3, #69]
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 548              		.loc 1 460 0
 549 0026 0023     		movs	r3, #0
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 550              		.loc 1 461 0
 551 0028 1846     		mov	r0, r3
 552 002a 0837     		adds	r7, r7, #8
 553              	.LCFI8:
 554              		.cfi_def_cfa_offset 8
 555 002c BD46     		mov	sp, r7
 556              	.LCFI9:
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 002e 80BD     		pop	{r7, pc}
 560              		.cfi_endproc
 561              	.LFE139:
 563              		.section	.text.HAL_ETH_DMATxDescListInit,"ax",%progbits
 564              		.align	1
 565              		.global	HAL_ETH_DMATxDescListInit
 566              		.syntax unified
ARM GAS  /tmp/cctGrkQx.s 			page 19


 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	HAL_ETH_DMATxDescListInit:
 572              	.LFB140:
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the DMA Tx descriptors in chain mode.
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  DMATxDescTab Pointer to the first Tx desc list 
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  TxBuff Pointer to the first TxBuffer list
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  TxBuffCount Number of the used Tx desc in the list
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DMATxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *DMATxDescT
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 573              		.loc 1 473 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 24
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0000 80B4     		push	{r7}
 579              	.LCFI10:
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 0002 87B0     		sub	sp, sp, #28
 583              	.LCFI11:
 584              		.cfi_def_cfa_offset 32
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI12:
 587              		.cfi_def_cfa_register 7
 588 0006 F860     		str	r0, [r7, #12]
 589 0008 B960     		str	r1, [r7, #8]
 590 000a 7A60     		str	r2, [r7, #4]
 591 000c 3B60     		str	r3, [r7]
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 592              		.loc 1 474 0
 593 000e 0023     		movs	r3, #0
 594 0010 7B61     		str	r3, [r7, #20]
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmatxdesc;
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 595              		.loc 1 478 0
 596 0012 FB68     		ldr	r3, [r7, #12]
 597 0014 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 598 0018 012B     		cmp	r3, #1
 599 001a 01D1     		bne	.L33
 600              		.loc 1 478 0 is_stmt 0 discriminator 1
 601 001c 0223     		movs	r3, #2
 602 001e 52E0     		b	.L34
 603              	.L33:
 604              		.loc 1 478 0 discriminator 2
 605 0020 FB68     		ldr	r3, [r7, #12]
 606 0022 0122     		movs	r2, #1
 607 0024 83F84520 		strb	r2, [r3, #69]
ARM GAS  /tmp/cctGrkQx.s 			page 20


 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 608              		.loc 1 481 0 is_stmt 1 discriminator 2
 609 0028 FB68     		ldr	r3, [r7, #12]
 610 002a 0222     		movs	r2, #2
 611 002c 83F84420 		strb	r2, [r3, #68]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DMATxDescToSet pointer with the first one of the DMATxDescTab list */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->TxDesc = DMATxDescTab;
 612              		.loc 1 484 0 discriminator 2
 613 0030 FB68     		ldr	r3, [r7, #12]
 614 0032 BA68     		ldr	r2, [r7, #8]
 615 0034 DA62     		str	r2, [r3, #44]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Fill each DMATxDesc descriptor with the right values */   
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   for(i=0; i < TxBuffCount; i++)
 616              		.loc 1 487 0 discriminator 2
 617 0036 0023     		movs	r3, #0
 618 0038 7B61     		str	r3, [r7, #20]
 619 003a 30E0     		b	.L35
 620              	.L39:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the pointer on the ith member of the Tx Desc list */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc = DMATxDescTab + i;
 621              		.loc 1 490 0
 622 003c 7B69     		ldr	r3, [r7, #20]
 623 003e 5B01     		lsls	r3, r3, #5
 624 0040 BA68     		ldr	r2, [r7, #8]
 625 0042 1344     		add	r3, r3, r2
 626 0044 3B61     		str	r3, [r7, #16]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Second Address Chained bit */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc->Status = ETH_DMATXDESC_TCH;  
 627              		.loc 1 493 0
 628 0046 3B69     		ldr	r3, [r7, #16]
 629 0048 4FF48012 		mov	r2, #1048576
 630 004c 1A60     		str	r2, [r3]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 address pointer */
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc->Buffer1Addr = (uint32_t)(&TxBuff[i*ETH_TX_BUF_SIZE]);
 631              		.loc 1 496 0
 632 004e 7B69     		ldr	r3, [r7, #20]
 633 0050 40F2F452 		movw	r2, #1524
 634 0054 02FB03F3 		mul	r3, r2, r3
 635 0058 7A68     		ldr	r2, [r7, #4]
 636 005a 1344     		add	r3, r3, r2
 637 005c 1A46     		mov	r2, r3
 638 005e 3B69     		ldr	r3, [r7, #16]
 639 0060 9A60     		str	r2, [r3, #8]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if ((heth->Init).ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 640              		.loc 1 498 0
 641 0062 FB68     		ldr	r3, [r7, #12]
 642 0064 DB69     		ldr	r3, [r3, #28]
 643 0066 002B     		cmp	r3, #0
 644 0068 05D1     		bne	.L36
ARM GAS  /tmp/cctGrkQx.s 			page 21


 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the DMA Tx descriptors checksum insertion */
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Status |= ETH_DMATXDESC_CHECKSUMTCPUDPICMPFULL;
 645              		.loc 1 501 0
 646 006a 3B69     		ldr	r3, [r7, #16]
 647 006c 1B68     		ldr	r3, [r3]
 648 006e 43F44002 		orr	r2, r3, #12582912
 649 0072 3B69     		ldr	r3, [r7, #16]
 650 0074 1A60     		str	r2, [r3]
 651              	.L36:
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Initialize the next descriptor with the Next Descriptor Polling Enable */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(i < (TxBuffCount-1))
 652              		.loc 1 505 0
 653 0076 3B68     		ldr	r3, [r7]
 654 0078 013B     		subs	r3, r3, #1
 655 007a 7A69     		ldr	r2, [r7, #20]
 656 007c 9A42     		cmp	r2, r3
 657 007e 08D2     		bcs	.L37
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set next descriptor address register with next descriptor base address */
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Buffer2NextDescAddr = (uint32_t)(DMATxDescTab+i+1);
 658              		.loc 1 508 0
 659 0080 7B69     		ldr	r3, [r7, #20]
 660 0082 0133     		adds	r3, r3, #1
 661 0084 5B01     		lsls	r3, r3, #5
 662 0086 BA68     		ldr	r2, [r7, #8]
 663 0088 1344     		add	r3, r3, r2
 664 008a 1A46     		mov	r2, r3
 665 008c 3B69     		ldr	r3, [r7, #16]
 666 008e DA60     		str	r2, [r3, #12]
 667 0090 02E0     		b	.L38
 668              	.L37:
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* For last descriptor, set next descriptor address register equal to the first descriptor ba
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Buffer2NextDescAddr = (uint32_t) DMATxDescTab;  
 669              		.loc 1 513 0
 670 0092 BA68     		ldr	r2, [r7, #8]
 671 0094 3B69     		ldr	r3, [r7, #16]
 672 0096 DA60     		str	r2, [r3, #12]
 673              	.L38:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 674              		.loc 1 487 0 discriminator 2
 675 0098 7B69     		ldr	r3, [r7, #20]
 676 009a 0133     		adds	r3, r3, #1
 677 009c 7B61     		str	r3, [r7, #20]
 678              	.L35:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 679              		.loc 1 487 0 is_stmt 0 discriminator 1
 680 009e 7A69     		ldr	r2, [r7, #20]
 681 00a0 3B68     		ldr	r3, [r7]
 682 00a2 9A42     		cmp	r2, r3
 683 00a4 CAD3     		bcc	.L39
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
ARM GAS  /tmp/cctGrkQx.s 			page 22


 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set Transmit Descriptor List Address Register */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMATDLAR = (uint32_t) DMATxDescTab;
 684              		.loc 1 518 0 is_stmt 1
 685 00a6 FB68     		ldr	r3, [r7, #12]
 686 00a8 1968     		ldr	r1, [r3]
 687 00aa BA68     		ldr	r2, [r7, #8]
 688 00ac 41F21003 		movw	r3, #4112
 689 00b0 0B44     		add	r3, r3, r1
 690 00b2 1A60     		str	r2, [r3]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 691              		.loc 1 521 0
 692 00b4 FB68     		ldr	r3, [r7, #12]
 693 00b6 0122     		movs	r2, #1
 694 00b8 83F84420 		strb	r2, [r3, #68]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 695              		.loc 1 524 0
 696 00bc FB68     		ldr	r3, [r7, #12]
 697 00be 0022     		movs	r2, #0
 698 00c0 83F84520 		strb	r2, [r3, #69]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 699              		.loc 1 527 0
 700 00c4 0023     		movs	r3, #0
 701              	.L34:
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 702              		.loc 1 528 0
 703 00c6 1846     		mov	r0, r3
 704 00c8 1C37     		adds	r7, r7, #28
 705              	.LCFI13:
 706              		.cfi_def_cfa_offset 4
 707 00ca BD46     		mov	sp, r7
 708              	.LCFI14:
 709              		.cfi_def_cfa_register 13
 710              		@ sp needed
 711 00cc 5DF8047B 		ldr	r7, [sp], #4
 712              	.LCFI15:
 713              		.cfi_restore 7
 714              		.cfi_def_cfa_offset 0
 715 00d0 7047     		bx	lr
 716              		.cfi_endproc
 717              	.LFE140:
 719              		.section	.text.HAL_ETH_DMARxDescListInit,"ax",%progbits
 720              		.align	1
 721              		.global	HAL_ETH_DMARxDescListInit
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 725              		.fpu fpv4-sp-d16
 727              	HAL_ETH_DMARxDescListInit:
 728              	.LFB141:
ARM GAS  /tmp/cctGrkQx.s 			page 23


 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the DMA Rx descriptors in chain mode.
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  DMARxDescTab Pointer to the first Rx desc list 
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RxBuff Pointer to the first RxBuffer list
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RxBuffCount Number of the used Rx desc in the list
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DMARxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *DMARxDescT
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 729              		.loc 1 540 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 24
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734 0000 80B4     		push	{r7}
 735              	.LCFI16:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 0002 87B0     		sub	sp, sp, #28
 739              	.LCFI17:
 740              		.cfi_def_cfa_offset 32
 741 0004 00AF     		add	r7, sp, #0
 742              	.LCFI18:
 743              		.cfi_def_cfa_register 7
 744 0006 F860     		str	r0, [r7, #12]
 745 0008 B960     		str	r1, [r7, #8]
 746 000a 7A60     		str	r2, [r7, #4]
 747 000c 3B60     		str	r3, [r7]
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 748              		.loc 1 541 0
 749 000e 0023     		movs	r3, #0
 750 0010 7B61     		str	r3, [r7, #20]
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMADescTypeDef *DMARxDesc;
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 751              		.loc 1 545 0
 752 0012 FB68     		ldr	r3, [r7, #12]
 753 0014 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 754 0018 012B     		cmp	r3, #1
 755 001a 01D1     		bne	.L41
 756              		.loc 1 545 0 is_stmt 0 discriminator 1
 757 001c 0223     		movs	r3, #2
 758 001e 56E0     		b	.L42
 759              	.L41:
 760              		.loc 1 545 0 discriminator 2
 761 0020 FB68     		ldr	r3, [r7, #12]
 762 0022 0122     		movs	r2, #1
 763 0024 83F84520 		strb	r2, [r3, #69]
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 764              		.loc 1 548 0 is_stmt 1 discriminator 2
 765 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cctGrkQx.s 			page 24


 766 002a 0222     		movs	r2, #2
 767 002c 83F84420 		strb	r2, [r3, #68]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the Ethernet RxDesc pointer with the first one of the DMARxDescTab list */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->RxDesc = DMARxDescTab; 
 768              		.loc 1 551 0 discriminator 2
 769 0030 FB68     		ldr	r3, [r7, #12]
 770 0032 BA68     		ldr	r2, [r7, #8]
 771 0034 9A62     		str	r2, [r3, #40]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Fill each DMARxDesc descriptor with the right values */
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   for(i=0; i < RxBuffCount; i++)
 772              		.loc 1 554 0 discriminator 2
 773 0036 0023     		movs	r3, #0
 774 0038 7B61     		str	r3, [r7, #20]
 775 003a 34E0     		b	.L43
 776              	.L47:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the pointer on the ith member of the Rx Desc list */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc = DMARxDescTab+i;
 777              		.loc 1 557 0
 778 003c 7B69     		ldr	r3, [r7, #20]
 779 003e 5B01     		lsls	r3, r3, #5
 780 0040 BA68     		ldr	r2, [r7, #8]
 781 0042 1344     		add	r3, r3, r2
 782 0044 3B61     		str	r3, [r7, #16]
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Rx descriptor Status */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->Status = ETH_DMARXDESC_OWN;
 783              		.loc 1 560 0
 784 0046 3B69     		ldr	r3, [r7, #16]
 785 0048 4FF00042 		mov	r2, #-2147483648
 786 004c 1A60     		str	r2, [r3]
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 size and Second Address Chained bit */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->ControlBufferSize = ETH_DMARXDESC_RCH | ETH_RX_BUF_SIZE;  
 787              		.loc 1 563 0
 788 004e 3B69     		ldr	r3, [r7, #16]
 789 0050 44F2F452 		movw	r2, #17908
 790 0054 5A60     		str	r2, [r3, #4]
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 address pointer */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->Buffer1Addr = (uint32_t)(&RxBuff[i*ETH_RX_BUF_SIZE]);
 791              		.loc 1 566 0
 792 0056 7B69     		ldr	r3, [r7, #20]
 793 0058 40F2F452 		movw	r2, #1524
 794 005c 02FB03F3 		mul	r3, r2, r3
 795 0060 7A68     		ldr	r2, [r7, #4]
 796 0062 1344     		add	r3, r3, r2
 797 0064 1A46     		mov	r2, r3
 798 0066 3B69     		ldr	r3, [r7, #16]
 799 0068 9A60     		str	r2, [r3, #8]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((heth->Init).RxMode == ETH_RXINTERRUPT_MODE)
 800              		.loc 1 568 0
 801 006a FB68     		ldr	r3, [r7, #12]
 802 006c 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/cctGrkQx.s 			page 25


 803 006e 012B     		cmp	r3, #1
 804 0070 05D1     		bne	.L44
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Enable Ethernet DMA Rx Descriptor interrupt */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->ControlBufferSize &= ~ETH_DMARXDESC_DIC;
 805              		.loc 1 571 0
 806 0072 3B69     		ldr	r3, [r7, #16]
 807 0074 5B68     		ldr	r3, [r3, #4]
 808 0076 23F00042 		bic	r2, r3, #-2147483648
 809 007a 3B69     		ldr	r3, [r7, #16]
 810 007c 5A60     		str	r2, [r3, #4]
 811              	.L44:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Initialize the next descriptor with the Next Descriptor Polling Enable */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(i < (RxBuffCount-1))
 812              		.loc 1 575 0
 813 007e 3B68     		ldr	r3, [r7]
 814 0080 013B     		subs	r3, r3, #1
 815 0082 7A69     		ldr	r2, [r7, #20]
 816 0084 9A42     		cmp	r2, r3
 817 0086 08D2     		bcs	.L45
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set next descriptor address register with next descriptor base address */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->Buffer2NextDescAddr = (uint32_t)(DMARxDescTab+i+1); 
 818              		.loc 1 578 0
 819 0088 7B69     		ldr	r3, [r7, #20]
 820 008a 0133     		adds	r3, r3, #1
 821 008c 5B01     		lsls	r3, r3, #5
 822 008e BA68     		ldr	r2, [r7, #8]
 823 0090 1344     		add	r3, r3, r2
 824 0092 1A46     		mov	r2, r3
 825 0094 3B69     		ldr	r3, [r7, #16]
 826 0096 DA60     		str	r2, [r3, #12]
 827 0098 02E0     		b	.L46
 828              	.L45:
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* For last descriptor, set next descriptor address register equal to the first descriptor ba
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->Buffer2NextDescAddr = (uint32_t)(DMARxDescTab); 
 829              		.loc 1 583 0
 830 009a BA68     		ldr	r2, [r7, #8]
 831 009c 3B69     		ldr	r3, [r7, #16]
 832 009e DA60     		str	r2, [r3, #12]
 833              	.L46:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 834              		.loc 1 554 0 discriminator 2
 835 00a0 7B69     		ldr	r3, [r7, #20]
 836 00a2 0133     		adds	r3, r3, #1
 837 00a4 7B61     		str	r3, [r7, #20]
 838              	.L43:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 839              		.loc 1 554 0 is_stmt 0 discriminator 1
 840 00a6 7A69     		ldr	r2, [r7, #20]
 841 00a8 3B68     		ldr	r3, [r7]
 842 00aa 9A42     		cmp	r2, r3
ARM GAS  /tmp/cctGrkQx.s 			page 26


 843 00ac C6D3     		bcc	.L47
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set Receive Descriptor List Address Register */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMARDLAR = (uint32_t) DMARxDescTab;
 844              		.loc 1 588 0 is_stmt 1
 845 00ae FB68     		ldr	r3, [r7, #12]
 846 00b0 1968     		ldr	r1, [r3]
 847 00b2 BA68     		ldr	r2, [r7, #8]
 848 00b4 41F20C03 		movw	r3, #4108
 849 00b8 0B44     		add	r3, r3, r1
 850 00ba 1A60     		str	r2, [r3]
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 851              		.loc 1 591 0
 852 00bc FB68     		ldr	r3, [r7, #12]
 853 00be 0122     		movs	r2, #1
 854 00c0 83F84420 		strb	r2, [r3, #68]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 855              		.loc 1 594 0
 856 00c4 FB68     		ldr	r3, [r7, #12]
 857 00c6 0022     		movs	r2, #0
 858 00c8 83F84520 		strb	r2, [r3, #69]
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 859              		.loc 1 597 0
 860 00cc 0023     		movs	r3, #0
 861              	.L42:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 862              		.loc 1 598 0
 863 00ce 1846     		mov	r0, r3
 864 00d0 1C37     		adds	r7, r7, #28
 865              	.LCFI19:
 866              		.cfi_def_cfa_offset 4
 867 00d2 BD46     		mov	sp, r7
 868              	.LCFI20:
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 00d4 5DF8047B 		ldr	r7, [sp], #4
 872              	.LCFI21:
 873              		.cfi_restore 7
 874              		.cfi_def_cfa_offset 0
 875 00d8 7047     		bx	lr
 876              		.cfi_endproc
 877              	.LFE141:
 879              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 880              		.align	1
 881              		.weak	HAL_ETH_MspInit
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctGrkQx.s 			page 27


 887              	HAL_ETH_MspInit:
 888              	.LFB142:
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the ETH MSP.
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_MspInit(ETH_HandleTypeDef *heth)
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 889              		.loc 1 607 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 8
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 894 0000 80B4     		push	{r7}
 895              	.LCFI22:
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 7, -4
 898 0002 83B0     		sub	sp, sp, #12
 899              	.LCFI23:
 900              		.cfi_def_cfa_offset 16
 901 0004 00AF     		add	r7, sp, #0
 902              	.LCFI24:
 903              		.cfi_def_cfa_register 7
 904 0006 7860     		str	r0, [r7, #4]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_MspInit could be implemented in the user file
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 905              		.loc 1 614 0
 906 0008 00BF     		nop
 907 000a 0C37     		adds	r7, r7, #12
 908              	.LCFI25:
 909              		.cfi_def_cfa_offset 4
 910 000c BD46     		mov	sp, r7
 911              	.LCFI26:
 912              		.cfi_def_cfa_register 13
 913              		@ sp needed
 914 000e 5DF8047B 		ldr	r7, [sp], #4
 915              	.LCFI27:
 916              		.cfi_restore 7
 917              		.cfi_def_cfa_offset 0
 918 0012 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE142:
 922              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 923              		.align	1
 924              		.weak	HAL_ETH_MspDeInit
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctGrkQx.s 			page 28


 930              	HAL_ETH_MspDeInit:
 931              	.LFB143:
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  DeInitializes ETH MSP.
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_MspDeInit(ETH_HandleTypeDef *heth)
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 932              		.loc 1 623 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI28:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 83B0     		sub	sp, sp, #12
 942              	.LCFI29:
 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              	.LCFI30:
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_MspDeInit could be implemented in the user file
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 948              		.loc 1 630 0
 949 0008 00BF     		nop
 950 000a 0C37     		adds	r7, r7, #12
 951              	.LCFI31:
 952              		.cfi_def_cfa_offset 4
 953 000c BD46     		mov	sp, r7
 954              	.LCFI32:
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 000e 5DF8047B 		ldr	r7, [sp], #4
 958              	.LCFI33:
 959              		.cfi_restore 7
 960              		.cfi_def_cfa_offset 0
 961 0012 7047     		bx	lr
 962              		.cfi_endproc
 963              	.LFE143:
 965              		.section	.text.HAL_ETH_TransmitFrame,"ax",%progbits
 966              		.align	1
 967              		.global	HAL_ETH_TransmitFrame
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctGrkQx.s 			page 29


 973              	HAL_ETH_TransmitFrame:
 974              	.LFB144:
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group2 IO operation functions 
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Data transfers functions 
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim   
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           ##### IO operation functions #####
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================  
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]  This section provides functions allowing to:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Transmit a frame
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_TransmitFrame();
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Receive a frame
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_GetReceivedFrame();
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_GetReceivedFrame_IT();
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Read from an External PHY register
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_ReadPHYRegister();
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Write to an External PHY register
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_WritePHYRegister();
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Sends an Ethernet frame. 
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  FrameLength Amount of data to be sent
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_TransmitFrame(ETH_HandleTypeDef *heth, uint32_t FrameLength)
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 975              		.loc 1 667 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 24
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980 0000 80B4     		push	{r7}
 981              	.LCFI34:
 982              		.cfi_def_cfa_offset 4
 983              		.cfi_offset 7, -4
 984 0002 87B0     		sub	sp, sp, #28
 985              	.LCFI35:
 986              		.cfi_def_cfa_offset 32
 987 0004 00AF     		add	r7, sp, #0
 988              	.LCFI36:
 989              		.cfi_def_cfa_register 7
 990 0006 7860     		str	r0, [r7, #4]
 991 0008 3960     		str	r1, [r7]
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t bufcount = 0, size = 0, i = 0;
ARM GAS  /tmp/cctGrkQx.s 			page 30


 992              		.loc 1 668 0
 993 000a 0023     		movs	r3, #0
 994 000c 7B61     		str	r3, [r7, #20]
 995 000e 0023     		movs	r3, #0
 996 0010 FB60     		str	r3, [r7, #12]
 997 0012 0023     		movs	r3, #0
 998 0014 3B61     		str	r3, [r7, #16]
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 999              		.loc 1 671 0
 1000 0016 7B68     		ldr	r3, [r7, #4]
 1001 0018 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1002 001c 012B     		cmp	r3, #1
 1003 001e 01D1     		bne	.L51
 1004              		.loc 1 671 0 is_stmt 0 discriminator 1
 1005 0020 0223     		movs	r3, #2
 1006 0022 CDE0     		b	.L52
 1007              	.L51:
 1008              		.loc 1 671 0 discriminator 2
 1009 0024 7B68     		ldr	r3, [r7, #4]
 1010 0026 0122     		movs	r2, #1
 1011 0028 83F84520 		strb	r2, [r3, #69]
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1012              		.loc 1 674 0 is_stmt 1 discriminator 2
 1013 002c 7B68     		ldr	r3, [r7, #4]
 1014 002e 0222     		movs	r2, #2
 1015 0030 83F84420 		strb	r2, [r3, #68]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (FrameLength == 0) 
 1016              		.loc 1 676 0 discriminator 2
 1017 0034 3B68     		ldr	r3, [r7]
 1018 0036 002B     		cmp	r3, #0
 1019 0038 09D1     		bne	.L53
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set ETH HAL state to READY */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1020              		.loc 1 679 0
 1021 003a 7B68     		ldr	r3, [r7, #4]
 1022 003c 0122     		movs	r2, #1
 1023 003e 83F84420 		strb	r2, [r3, #68]
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1024              		.loc 1 682 0
 1025 0042 7B68     		ldr	r3, [r7, #4]
 1026 0044 0022     		movs	r2, #0
 1027 0046 83F84520 		strb	r2, [r3, #69]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return  HAL_ERROR;                                    
 1028              		.loc 1 684 0
 1029 004a 0123     		movs	r3, #1
 1030 004c B8E0     		b	.L52
 1031              	.L53:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
ARM GAS  /tmp/cctGrkQx.s 			page 31


 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check if the descriptor is owned by the ETHERNET DMA (when set) or CPU (when reset) */
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(((heth->TxDesc)->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
 1032              		.loc 1 688 0
 1033 004e 7B68     		ldr	r3, [r7, #4]
 1034 0050 DB6A     		ldr	r3, [r3, #44]
 1035 0052 1B68     		ldr	r3, [r3]
 1036 0054 002B     		cmp	r3, #0
 1037 0056 09DA     		bge	.L54
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* OWN bit set */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_BUSY_TX;
 1038              		.loc 1 691 0
 1039 0058 7B68     		ldr	r3, [r7, #4]
 1040 005a 1222     		movs	r2, #18
 1041 005c 83F84420 		strb	r2, [r3, #68]
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1042              		.loc 1 694 0
 1043 0060 7B68     		ldr	r3, [r7, #4]
 1044 0062 0022     		movs	r2, #0
 1045 0064 83F84520 		strb	r2, [r3, #69]
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 1046              		.loc 1 696 0
 1047 0068 0123     		movs	r3, #1
 1048 006a A9E0     		b	.L52
 1049              	.L54:
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the number of needed Tx buffers for the current frame */
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (FrameLength > ETH_TX_BUF_SIZE)
 1050              		.loc 1 700 0
 1051 006c 3B68     		ldr	r3, [r7]
 1052 006e 40F2F452 		movw	r2, #1524
 1053 0072 9342     		cmp	r3, r2
 1054 0074 15D9     		bls	.L55
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     bufcount = FrameLength/ETH_TX_BUF_SIZE;
 1055              		.loc 1 702 0
 1056 0076 3B68     		ldr	r3, [r7]
 1057 0078 544A     		ldr	r2, .L65
 1058 007a A2FB0323 		umull	r2, r3, r2, r3
 1059 007e 9B0A     		lsrs	r3, r3, #10
 1060 0080 7B61     		str	r3, [r7, #20]
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if (FrameLength % ETH_TX_BUF_SIZE) 
 1061              		.loc 1 703 0
 1062 0082 3A68     		ldr	r2, [r7]
 1063 0084 514B     		ldr	r3, .L65
 1064 0086 A3FB0213 		umull	r1, r3, r3, r2
 1065 008a 9B0A     		lsrs	r3, r3, #10
 1066 008c 40F2F451 		movw	r1, #1524
 1067 0090 01FB03F3 		mul	r3, r1, r3
 1068 0094 D31A     		subs	r3, r2, r3
 1069 0096 002B     		cmp	r3, #0
 1070 0098 05D0     		beq	.L57
ARM GAS  /tmp/cctGrkQx.s 			page 32


 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       bufcount++;
 1071              		.loc 1 705 0
 1072 009a 7B69     		ldr	r3, [r7, #20]
 1073 009c 0133     		adds	r3, r3, #1
 1074 009e 7B61     		str	r3, [r7, #20]
 1075 00a0 01E0     		b	.L57
 1076              	.L55:
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else 
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     bufcount = 1;
 1077              		.loc 1 710 0
 1078 00a2 0123     		movs	r3, #1
 1079 00a4 7B61     		str	r3, [r7, #20]
 1080              	.L57:
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (bufcount == 1)
 1081              		.loc 1 712 0
 1082 00a6 7B69     		ldr	r3, [r7, #20]
 1083 00a8 012B     		cmp	r3, #1
 1084 00aa 1CD1     		bne	.L58
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set LAST and FIRST segment */
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->Status |=ETH_DMATXDESC_FS|ETH_DMATXDESC_LS;
 1085              		.loc 1 715 0
 1086 00ac 7B68     		ldr	r3, [r7, #4]
 1087 00ae DB6A     		ldr	r3, [r3, #44]
 1088 00b0 1A68     		ldr	r2, [r3]
 1089 00b2 7B68     		ldr	r3, [r7, #4]
 1090 00b4 DB6A     		ldr	r3, [r3, #44]
 1091 00b6 42F04052 		orr	r2, r2, #805306368
 1092 00ba 1A60     		str	r2, [r3]
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set frame size */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->ControlBufferSize = (FrameLength & ETH_DMATXDESC_TBS1);
 1093              		.loc 1 717 0
 1094 00bc 7B68     		ldr	r3, [r7, #4]
 1095 00be DB6A     		ldr	r3, [r3, #44]
 1096 00c0 3A68     		ldr	r2, [r7]
 1097 00c2 C2F30C02 		ubfx	r2, r2, #0, #13
 1098 00c6 5A60     		str	r2, [r3, #4]
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 1099              		.loc 1 719 0
 1100 00c8 7B68     		ldr	r3, [r7, #4]
 1101 00ca DB6A     		ldr	r3, [r3, #44]
 1102 00cc 1A68     		ldr	r2, [r3]
 1103 00ce 7B68     		ldr	r3, [r7, #4]
 1104 00d0 DB6A     		ldr	r3, [r3, #44]
 1105 00d2 42F00042 		orr	r2, r2, #-2147483648
 1106 00d6 1A60     		str	r2, [r3]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Point to next descriptor */
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc= (ETH_DMADescTypeDef *)(heth->TxDesc->Buffer2NextDescAddr);
 1107              		.loc 1 721 0
 1108 00d8 7B68     		ldr	r3, [r7, #4]
 1109 00da DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/cctGrkQx.s 			page 33


 1110 00dc DB68     		ldr	r3, [r3, #12]
 1111 00de 1A46     		mov	r2, r3
 1112 00e0 7B68     		ldr	r3, [r7, #4]
 1113 00e2 DA62     		str	r2, [r3, #44]
 1114 00e4 4BE0     		b	.L59
 1115              	.L58:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     for (i=0; i< bufcount; i++)
 1116              		.loc 1 725 0
 1117 00e6 0023     		movs	r3, #0
 1118 00e8 3B61     		str	r3, [r7, #16]
 1119 00ea 44E0     		b	.L60
 1120              	.L63:
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Clear FIRST and LAST segment bits */
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->Status &= ~(ETH_DMATXDESC_FS | ETH_DMATXDESC_LS);
 1121              		.loc 1 728 0
 1122 00ec 7B68     		ldr	r3, [r7, #4]
 1123 00ee DB6A     		ldr	r3, [r3, #44]
 1124 00f0 1A68     		ldr	r2, [r3]
 1125 00f2 7B68     		ldr	r3, [r7, #4]
 1126 00f4 DB6A     		ldr	r3, [r3, #44]
 1127 00f6 22F04052 		bic	r2, r2, #805306368
 1128 00fa 1A60     		str	r2, [r3]
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if (i == 0) 
 1129              		.loc 1 730 0
 1130 00fc 3B69     		ldr	r3, [r7, #16]
 1131 00fe 002B     		cmp	r3, #0
 1132 0100 07D1     		bne	.L61
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Setting the first segment bit */
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->Status |= ETH_DMATXDESC_FS;  
 1133              		.loc 1 733 0
 1134 0102 7B68     		ldr	r3, [r7, #4]
 1135 0104 DB6A     		ldr	r3, [r3, #44]
 1136 0106 1A68     		ldr	r2, [r3]
 1137 0108 7B68     		ldr	r3, [r7, #4]
 1138 010a DB6A     		ldr	r3, [r3, #44]
 1139 010c 42F08052 		orr	r2, r2, #268435456
 1140 0110 1A60     		str	r2, [r3]
 1141              	.L61:
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Program size */
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->ControlBufferSize = (ETH_TX_BUF_SIZE & ETH_DMATXDESC_TBS1);
 1142              		.loc 1 737 0
 1143 0112 7B68     		ldr	r3, [r7, #4]
 1144 0114 DB6A     		ldr	r3, [r3, #44]
 1145 0116 40F2F452 		movw	r2, #1524
 1146 011a 5A60     		str	r2, [r3, #4]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if (i == (bufcount-1))
 1147              		.loc 1 739 0
 1148 011c 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cctGrkQx.s 			page 34


 1149 011e 013B     		subs	r3, r3, #1
 1150 0120 3A69     		ldr	r2, [r7, #16]
 1151 0122 9A42     		cmp	r2, r3
 1152 0124 16D1     		bne	.L62
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Setting the last segment bit */
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->Status |= ETH_DMATXDESC_LS;
 1153              		.loc 1 742 0
 1154 0126 7B68     		ldr	r3, [r7, #4]
 1155 0128 DB6A     		ldr	r3, [r3, #44]
 1156 012a 1A68     		ldr	r2, [r3]
 1157 012c 7B68     		ldr	r3, [r7, #4]
 1158 012e DB6A     		ldr	r3, [r3, #44]
 1159 0130 42F00052 		orr	r2, r2, #536870912
 1160 0134 1A60     		str	r2, [r3]
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         size = FrameLength - (bufcount-1)*ETH_TX_BUF_SIZE;
 1161              		.loc 1 743 0
 1162 0136 7B69     		ldr	r3, [r7, #20]
 1163 0138 254A     		ldr	r2, .L65+4
 1164 013a 02FB03F2 		mul	r2, r2, r3
 1165 013e 3B68     		ldr	r3, [r7]
 1166 0140 1344     		add	r3, r3, r2
 1167 0142 03F2F453 		addw	r3, r3, #1524
 1168 0146 FB60     		str	r3, [r7, #12]
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->ControlBufferSize = (size & ETH_DMATXDESC_TBS1);
 1169              		.loc 1 744 0
 1170 0148 7B68     		ldr	r3, [r7, #4]
 1171 014a DB6A     		ldr	r3, [r3, #44]
 1172 014c FA68     		ldr	r2, [r7, #12]
 1173 014e C2F30C02 		ubfx	r2, r2, #0, #13
 1174 0152 5A60     		str	r2, [r3, #4]
 1175              	.L62:
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 1176              		.loc 1 748 0 discriminator 2
 1177 0154 7B68     		ldr	r3, [r7, #4]
 1178 0156 DB6A     		ldr	r3, [r3, #44]
 1179 0158 1A68     		ldr	r2, [r3]
 1180 015a 7B68     		ldr	r3, [r7, #4]
 1181 015c DB6A     		ldr	r3, [r3, #44]
 1182 015e 42F00042 		orr	r2, r2, #-2147483648
 1183 0162 1A60     		str	r2, [r3]
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc = (ETH_DMADescTypeDef *)(heth->TxDesc->Buffer2NextDescAddr);
 1184              		.loc 1 750 0 discriminator 2
 1185 0164 7B68     		ldr	r3, [r7, #4]
 1186 0166 DB6A     		ldr	r3, [r3, #44]
 1187 0168 DB68     		ldr	r3, [r3, #12]
 1188 016a 1A46     		mov	r2, r3
 1189 016c 7B68     		ldr	r3, [r7, #4]
 1190 016e DA62     		str	r2, [r3, #44]
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1191              		.loc 1 725 0 discriminator 2
 1192 0170 3B69     		ldr	r3, [r7, #16]
 1193 0172 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cctGrkQx.s 			page 35


 1194 0174 3B61     		str	r3, [r7, #16]
 1195              	.L60:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1196              		.loc 1 725 0 is_stmt 0 discriminator 1
 1197 0176 3A69     		ldr	r2, [r7, #16]
 1198 0178 7B69     		ldr	r3, [r7, #20]
 1199 017a 9A42     		cmp	r2, r3
 1200 017c B6D3     		bcc	.L63
 1201              	.L59:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* When Tx Buffer unavailable flag is set: clear it and resume transmission */
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (((heth->Instance)->DMASR & ETH_DMASR_TBUS) != (uint32_t)RESET)
 1202              		.loc 1 755 0 is_stmt 1
 1203 017e 7B68     		ldr	r3, [r7, #4]
 1204 0180 1A68     		ldr	r2, [r3]
 1205 0182 41F21403 		movw	r3, #4116
 1206 0186 1344     		add	r3, r3, r2
 1207 0188 1B68     		ldr	r3, [r3]
 1208 018a 03F00403 		and	r3, r3, #4
 1209 018e 002B     		cmp	r3, #0
 1210 0190 0DD0     		beq	.L64
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear TBUS ETHERNET DMA flag */
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMASR = ETH_DMASR_TBUS;
 1211              		.loc 1 758 0
 1212 0192 7B68     		ldr	r3, [r7, #4]
 1213 0194 1A68     		ldr	r2, [r3]
 1214 0196 41F21403 		movw	r3, #4116
 1215 019a 1344     		add	r3, r3, r2
 1216 019c 0422     		movs	r2, #4
 1217 019e 1A60     		str	r2, [r3]
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Resume DMA transmission*/
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMATPDR = 0;
 1218              		.loc 1 760 0
 1219 01a0 7B68     		ldr	r3, [r7, #4]
 1220 01a2 1A68     		ldr	r2, [r3]
 1221 01a4 41F20403 		movw	r3, #4100
 1222 01a8 1344     		add	r3, r3, r2
 1223 01aa 0022     		movs	r2, #0
 1224 01ac 1A60     		str	r2, [r3]
 1225              	.L64:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 1226              		.loc 1 764 0
 1227 01ae 7B68     		ldr	r3, [r7, #4]
 1228 01b0 0122     		movs	r2, #1
 1229 01b2 83F84420 		strb	r2, [r3, #68]
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 1230              		.loc 1 767 0
 1231 01b6 7B68     		ldr	r3, [r7, #4]
 1232 01b8 0022     		movs	r2, #0
ARM GAS  /tmp/cctGrkQx.s 			page 36


 1233 01ba 83F84520 		strb	r2, [r3, #69]
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 1234              		.loc 1 770 0
 1235 01be 0023     		movs	r3, #0
 1236              	.L52:
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1237              		.loc 1 771 0
 1238 01c0 1846     		mov	r0, r3
 1239 01c2 1C37     		adds	r7, r7, #28
 1240              	.LCFI37:
 1241              		.cfi_def_cfa_offset 4
 1242 01c4 BD46     		mov	sp, r7
 1243              	.LCFI38:
 1244              		.cfi_def_cfa_register 13
 1245              		@ sp needed
 1246 01c6 5DF8047B 		ldr	r7, [sp], #4
 1247              	.LCFI39:
 1248              		.cfi_restore 7
 1249              		.cfi_def_cfa_offset 0
 1250 01ca 7047     		bx	lr
 1251              	.L66:
 1252              		.align	2
 1253              	.L65:
 1254 01cc 0BB002AC 		.word	-1409110005
 1255 01d0 0CFAFFFF 		.word	-1524
 1256              		.cfi_endproc
 1257              	.LFE144:
 1259              		.section	.text.HAL_ETH_GetReceivedFrame,"ax",%progbits
 1260              		.align	1
 1261              		.global	HAL_ETH_GetReceivedFrame
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu fpv4-sp-d16
 1267              	HAL_ETH_GetReceivedFrame:
 1268              	.LFB145:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Checks for received frames. 
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame(ETH_HandleTypeDef *heth)
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1269              		.loc 1 780 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 16
 1272              		@ frame_needed = 1, uses_anonymous_args = 0
 1273              		@ link register save eliminated.
 1274 0000 80B4     		push	{r7}
 1275              	.LCFI40:
 1276              		.cfi_def_cfa_offset 4
 1277              		.cfi_offset 7, -4
 1278 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/cctGrkQx.s 			page 37


 1279              	.LCFI41:
 1280              		.cfi_def_cfa_offset 24
 1281 0004 00AF     		add	r7, sp, #0
 1282              	.LCFI42:
 1283              		.cfi_def_cfa_register 7
 1284 0006 7860     		str	r0, [r7, #4]
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t framelength = 0;
 1285              		.loc 1 781 0
 1286 0008 0023     		movs	r3, #0
 1287 000a FB60     		str	r3, [r7, #12]
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 1288              		.loc 1 784 0
 1289 000c 7B68     		ldr	r3, [r7, #4]
 1290 000e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1291 0012 012B     		cmp	r3, #1
 1292 0014 01D1     		bne	.L68
 1293              		.loc 1 784 0 is_stmt 0 discriminator 1
 1294 0016 0223     		movs	r3, #2
 1295 0018 70E0     		b	.L69
 1296              	.L68:
 1297              		.loc 1 784 0 discriminator 2
 1298 001a 7B68     		ldr	r3, [r7, #4]
 1299 001c 0122     		movs	r2, #1
 1300 001e 83F84520 		strb	r2, [r3, #69]
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH state to BUSY */
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1301              		.loc 1 787 0 is_stmt 1 discriminator 2
 1302 0022 7B68     		ldr	r3, [r7, #4]
 1303 0024 0222     		movs	r2, #2
 1304 0026 83F84420 		strb	r2, [r3, #68]
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check if segment is not owned by DMA */
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* (((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET) && ((heth->RxDesc->Status & E
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET))
 1305              		.loc 1 791 0 discriminator 2
 1306 002a 7B68     		ldr	r3, [r7, #4]
 1307 002c 9B6A     		ldr	r3, [r3, #40]
 1308 002e 1B68     		ldr	r3, [r3]
 1309 0030 002B     		cmp	r3, #0
 1310 0032 5ADB     		blt	.L70
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if last segment */
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(((heth->RxDesc->Status & ETH_DMARXDESC_LS) != (uint32_t)RESET)) 
 1311              		.loc 1 794 0
 1312 0034 7B68     		ldr	r3, [r7, #4]
 1313 0036 9B6A     		ldr	r3, [r3, #40]
 1314 0038 1B68     		ldr	r3, [r3]
 1315 003a 03F48073 		and	r3, r3, #256
 1316 003e 002B     		cmp	r3, #0
 1317 0040 30D0     		beq	.L71
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* increment segment count */
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount++;
 1318              		.loc 1 797 0
ARM GAS  /tmp/cctGrkQx.s 			page 38


 1319 0042 7B68     		ldr	r3, [r7, #4]
 1320 0044 9B6B     		ldr	r3, [r3, #56]
 1321 0046 5A1C     		adds	r2, r3, #1
 1322 0048 7B68     		ldr	r3, [r7, #4]
 1323 004a 9A63     		str	r2, [r3, #56]
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check if last segment is first segment: one segment contains the frame */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if ((heth->RxFrameInfos).SegCount == 1)
 1324              		.loc 1 800 0
 1325 004c 7B68     		ldr	r3, [r7, #4]
 1326 004e 9B6B     		ldr	r3, [r3, #56]
 1327 0050 012B     		cmp	r3, #1
 1328 0052 03D1     		bne	.L72
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (heth->RxFrameInfos).FSRxDesc =heth->RxDesc;
 1329              		.loc 1 802 0
 1330 0054 7B68     		ldr	r3, [r7, #4]
 1331 0056 9A6A     		ldr	r2, [r3, #40]
 1332 0058 7B68     		ldr	r3, [r7, #4]
 1333 005a 1A63     		str	r2, [r3, #48]
 1334              	.L72:
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.LSRxDesc = heth->RxDesc;
 1335              		.loc 1 805 0
 1336 005c 7B68     		ldr	r3, [r7, #4]
 1337 005e 9A6A     		ldr	r2, [r3, #40]
 1338 0060 7B68     		ldr	r3, [r7, #4]
 1339 0062 5A63     		str	r2, [r3, #52]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       framelength = (((heth->RxDesc)->Status & ETH_DMARXDESC_FL) >> ETH_DMARXDESC_FRAMELENGTHSHIFT)
 1340              		.loc 1 808 0
 1341 0064 7B68     		ldr	r3, [r7, #4]
 1342 0066 9B6A     		ldr	r3, [r3, #40]
 1343 0068 1B68     		ldr	r3, [r3]
 1344 006a 1B0C     		lsrs	r3, r3, #16
 1345 006c C3F30D03 		ubfx	r3, r3, #0, #14
 1346 0070 043B     		subs	r3, r3, #4
 1347 0072 FB60     		str	r3, [r7, #12]
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = framelength;
 1348              		.loc 1 809 0
 1349 0074 7B68     		ldr	r3, [r7, #4]
 1350 0076 FA68     		ldr	r2, [r7, #12]
 1351 0078 DA63     		str	r2, [r3, #60]
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the address of the buffer start address */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.buffer = ((heth->RxFrameInfos).FSRxDesc)->Buffer1Addr;
 1352              		.loc 1 812 0
 1353 007a 7B68     		ldr	r3, [r7, #4]
 1354 007c 1B6B     		ldr	r3, [r3, #48]
 1355 007e 9A68     		ldr	r2, [r3, #8]
 1356 0080 7B68     		ldr	r3, [r7, #4]
 1357 0082 1A64     		str	r2, [r3, #64]
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) ((heth->RxDesc)->Buffer2NextDescAddr);
 1358              		.loc 1 814 0
ARM GAS  /tmp/cctGrkQx.s 			page 39


 1359 0084 7B68     		ldr	r3, [r7, #4]
 1360 0086 9B6A     		ldr	r3, [r3, #40]
 1361 0088 DB68     		ldr	r3, [r3, #12]
 1362 008a 1A46     		mov	r2, r3
 1363 008c 7B68     		ldr	r3, [r7, #4]
 1364 008e 9A62     		str	r2, [r3, #40]
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set HAL State to Ready */
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 1365              		.loc 1 817 0
 1366 0090 7B68     		ldr	r3, [r7, #4]
 1367 0092 0122     		movs	r2, #1
 1368 0094 83F84420 		strb	r2, [r3, #68]
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 1369              		.loc 1 820 0
 1370 0098 7B68     		ldr	r3, [r7, #4]
 1371 009a 0022     		movs	r2, #0
 1372 009c 83F84520 		strb	r2, [r3, #69]
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return function status */
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_OK;
 1373              		.loc 1 823 0
 1374 00a0 0023     		movs	r3, #0
 1375 00a2 2BE0     		b	.L69
 1376              	.L71:
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if first segment */
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else if((heth->RxDesc->Status & ETH_DMARXDESC_FS) != (uint32_t)RESET)
 1377              		.loc 1 826 0
 1378 00a4 7B68     		ldr	r3, [r7, #4]
 1379 00a6 9B6A     		ldr	r3, [r3, #40]
 1380 00a8 1B68     		ldr	r3, [r3]
 1381 00aa 03F40073 		and	r3, r3, #512
 1382 00ae 002B     		cmp	r3, #0
 1383 00b0 10D0     		beq	.L73
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).FSRxDesc = heth->RxDesc;
 1384              		.loc 1 828 0
 1385 00b2 7B68     		ldr	r3, [r7, #4]
 1386 00b4 9A6A     		ldr	r2, [r3, #40]
 1387 00b6 7B68     		ldr	r3, [r7, #4]
 1388 00b8 1A63     		str	r2, [r3, #48]
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).LSRxDesc = NULL;
 1389              		.loc 1 829 0
 1390 00ba 7B68     		ldr	r3, [r7, #4]
 1391 00bc 0022     		movs	r2, #0
 1392 00be 5A63     		str	r2, [r3, #52]
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount = 1;
 1393              		.loc 1 830 0
 1394 00c0 7B68     		ldr	r3, [r7, #4]
 1395 00c2 0122     		movs	r2, #1
 1396 00c4 9A63     		str	r2, [r3, #56]
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1397              		.loc 1 832 0
ARM GAS  /tmp/cctGrkQx.s 			page 40


 1398 00c6 7B68     		ldr	r3, [r7, #4]
 1399 00c8 9B6A     		ldr	r3, [r3, #40]
 1400 00ca DB68     		ldr	r3, [r3, #12]
 1401 00cc 1A46     		mov	r2, r3
 1402 00ce 7B68     		ldr	r3, [r7, #4]
 1403 00d0 9A62     		str	r2, [r3, #40]
 1404 00d2 0AE0     		b	.L70
 1405              	.L73:
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if intermediate segment */ 
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount++;
 1406              		.loc 1 837 0
 1407 00d4 7B68     		ldr	r3, [r7, #4]
 1408 00d6 9B6B     		ldr	r3, [r3, #56]
 1409 00d8 5A1C     		adds	r2, r3, #1
 1410 00da 7B68     		ldr	r3, [r7, #4]
 1411 00dc 9A63     		str	r2, [r3, #56]
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1412              		.loc 1 839 0
 1413 00de 7B68     		ldr	r3, [r7, #4]
 1414 00e0 9B6A     		ldr	r3, [r3, #40]
 1415 00e2 DB68     		ldr	r3, [r3, #12]
 1416 00e4 1A46     		mov	r2, r3
 1417 00e6 7B68     		ldr	r3, [r7, #4]
 1418 00e8 9A62     		str	r2, [r3, #40]
 1419              	.L70:
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 1420              		.loc 1 844 0
 1421 00ea 7B68     		ldr	r3, [r7, #4]
 1422 00ec 0122     		movs	r2, #1
 1423 00ee 83F84420 		strb	r2, [r3, #68]
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 1424              		.loc 1 847 0
 1425 00f2 7B68     		ldr	r3, [r7, #4]
 1426 00f4 0022     		movs	r2, #0
 1427 00f6 83F84520 		strb	r2, [r3, #69]
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_ERROR;
 1428              		.loc 1 850 0
 1429 00fa 0123     		movs	r3, #1
 1430              	.L69:
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1431              		.loc 1 851 0
 1432 00fc 1846     		mov	r0, r3
 1433 00fe 1437     		adds	r7, r7, #20
 1434              	.LCFI43:
 1435              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cctGrkQx.s 			page 41


 1436 0100 BD46     		mov	sp, r7
 1437              	.LCFI44:
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 0102 5DF8047B 		ldr	r7, [sp], #4
 1441              	.LCFI45:
 1442              		.cfi_restore 7
 1443              		.cfi_def_cfa_offset 0
 1444 0106 7047     		bx	lr
 1445              		.cfi_endproc
 1446              	.LFE145:
 1448              		.section	.text.HAL_ETH_GetReceivedFrame_IT,"ax",%progbits
 1449              		.align	1
 1450              		.global	HAL_ETH_GetReceivedFrame_IT
 1451              		.syntax unified
 1452              		.thumb
 1453              		.thumb_func
 1454              		.fpu fpv4-sp-d16
 1456              	HAL_ETH_GetReceivedFrame_IT:
 1457              	.LFB146:
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Gets the Received frame in interrupt mode. 
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame_IT(ETH_HandleTypeDef *heth)
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1458              		.loc 1 860 0
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 16
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462              		@ link register save eliminated.
 1463 0000 80B4     		push	{r7}
 1464              	.LCFI46:
 1465              		.cfi_def_cfa_offset 4
 1466              		.cfi_offset 7, -4
 1467 0002 85B0     		sub	sp, sp, #20
 1468              	.LCFI47:
 1469              		.cfi_def_cfa_offset 24
 1470 0004 00AF     		add	r7, sp, #0
 1471              	.LCFI48:
 1472              		.cfi_def_cfa_register 7
 1473 0006 7860     		str	r0, [r7, #4]
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t descriptorscancounter = 0;
 1474              		.loc 1 861 0
 1475 0008 0023     		movs	r3, #0
 1476 000a FB60     		str	r3, [r7, #12]
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 1477              		.loc 1 864 0
 1478 000c 7B68     		ldr	r3, [r7, #4]
 1479 000e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1480 0012 012B     		cmp	r3, #1
 1481 0014 01D1     		bne	.L75
ARM GAS  /tmp/cctGrkQx.s 			page 42


 1482              		.loc 1 864 0 is_stmt 0 discriminator 1
 1483 0016 0223     		movs	r3, #2
 1484 0018 74E0     		b	.L76
 1485              	.L75:
 1486              		.loc 1 864 0 discriminator 2
 1487 001a 7B68     		ldr	r3, [r7, #4]
 1488 001c 0122     		movs	r2, #1
 1489 001e 83F84520 		strb	r2, [r3, #69]
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1490              		.loc 1 867 0 is_stmt 1 discriminator 2
 1491 0022 7B68     		ldr	r3, [r7, #4]
 1492 0024 0222     		movs	r2, #2
 1493 0026 83F84420 		strb	r2, [r3, #68]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Scan descriptors owned by CPU */
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while (((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET) && (descriptorscancounter 
 1494              		.loc 1 870 0 discriminator 2
 1495 002a 5AE0     		b	.L77
 1496              	.L82:
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Just for security */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     descriptorscancounter++;
 1497              		.loc 1 873 0
 1498 002c FB68     		ldr	r3, [r7, #12]
 1499 002e 0133     		adds	r3, r3, #1
 1500 0030 FB60     		str	r3, [r7, #12]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if first segment in frame */
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* ((heth->RxDesc->Status & ETH_DMARXDESC_FS) != (uint32_t)RESET) && ((heth->RxDesc->Status & E
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((heth->RxDesc->Status & (ETH_DMARXDESC_FS | ETH_DMARXDESC_LS)) == (uint32_t)ETH_DMARXDESC_FS
 1501              		.loc 1 877 0
 1502 0032 7B68     		ldr	r3, [r7, #4]
 1503 0034 9B6A     		ldr	r3, [r3, #40]
 1504 0036 1B68     		ldr	r3, [r3]
 1505 0038 03F44073 		and	r3, r3, #768
 1506 003c B3F5007F 		cmp	r3, #512
 1507 0040 0DD1     		bne	.L78
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.FSRxDesc = heth->RxDesc;
 1508              		.loc 1 879 0
 1509 0042 7B68     		ldr	r3, [r7, #4]
 1510 0044 9A6A     		ldr	r2, [r3, #40]
 1511 0046 7B68     		ldr	r3, [r7, #4]
 1512 0048 1A63     		str	r2, [r3, #48]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.SegCount = 1;   
 1513              		.loc 1 880 0
 1514 004a 7B68     		ldr	r3, [r7, #4]
 1515 004c 0122     		movs	r2, #1
 1516 004e 9A63     		str	r2, [r3, #56]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1517              		.loc 1 882 0
 1518 0050 7B68     		ldr	r3, [r7, #4]
 1519 0052 9B6A     		ldr	r3, [r3, #40]
 1520 0054 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/cctGrkQx.s 			page 43


 1521 0056 1A46     		mov	r2, r3
 1522 0058 7B68     		ldr	r3, [r7, #4]
 1523 005a 9A62     		str	r2, [r3, #40]
 1524 005c 41E0     		b	.L77
 1525              	.L78:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if intermediate segment */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* ((heth->RxDesc->Status & ETH_DMARXDESC_LS) == (uint32_t)RESET)&& ((heth->RxDesc->Status & ET
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else if ((heth->RxDesc->Status & (ETH_DMARXDESC_LS | ETH_DMARXDESC_FS)) == (uint32_t)RESET)
 1526              		.loc 1 886 0
 1527 005e 7B68     		ldr	r3, [r7, #4]
 1528 0060 9B6A     		ldr	r3, [r3, #40]
 1529 0062 1B68     		ldr	r3, [r3]
 1530 0064 03F44073 		and	r3, r3, #768
 1531 0068 002B     		cmp	r3, #0
 1532 006a 0BD1     		bne	.L79
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Increment segment count */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos.SegCount)++;
 1533              		.loc 1 889 0
 1534 006c 7B68     		ldr	r3, [r7, #4]
 1535 006e 9B6B     		ldr	r3, [r3, #56]
 1536 0070 5A1C     		adds	r2, r3, #1
 1537 0072 7B68     		ldr	r3, [r7, #4]
 1538 0074 9A63     		str	r2, [r3, #56]
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*)(heth->RxDesc->Buffer2NextDescAddr);
 1539              		.loc 1 891 0
 1540 0076 7B68     		ldr	r3, [r7, #4]
 1541 0078 9B6A     		ldr	r3, [r3, #40]
 1542 007a DB68     		ldr	r3, [r3, #12]
 1543 007c 1A46     		mov	r2, r3
 1544 007e 7B68     		ldr	r3, [r7, #4]
 1545 0080 9A62     		str	r2, [r3, #40]
 1546 0082 2EE0     		b	.L77
 1547              	.L79:
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Should be last segment */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Last segment */
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.LSRxDesc = heth->RxDesc;
 1548              		.loc 1 897 0
 1549 0084 7B68     		ldr	r3, [r7, #4]
 1550 0086 9A6A     		ldr	r2, [r3, #40]
 1551 0088 7B68     		ldr	r3, [r7, #4]
 1552 008a 5A63     		str	r2, [r3, #52]
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Increment segment count */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos.SegCount)++;
 1553              		.loc 1 900 0
 1554 008c 7B68     		ldr	r3, [r7, #4]
 1555 008e 9B6B     		ldr	r3, [r3, #56]
 1556 0090 5A1C     		adds	r2, r3, #1
 1557 0092 7B68     		ldr	r3, [r7, #4]
 1558 0094 9A63     		str	r2, [r3, #56]
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
ARM GAS  /tmp/cctGrkQx.s 			page 44


 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check if last segment is first segment: one segment contains the frame */
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if ((heth->RxFrameInfos.SegCount) == 1)
 1559              		.loc 1 903 0
 1560 0096 7B68     		ldr	r3, [r7, #4]
 1561 0098 9B6B     		ldr	r3, [r3, #56]
 1562 009a 012B     		cmp	r3, #1
 1563 009c 03D1     		bne	.L80
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->RxFrameInfos.FSRxDesc = heth->RxDesc;
 1564              		.loc 1 905 0
 1565 009e 7B68     		ldr	r3, [r7, #4]
 1566 00a0 9A6A     		ldr	r2, [r3, #40]
 1567 00a2 7B68     		ldr	r3, [r7, #4]
 1568 00a4 1A63     		str	r2, [r3, #48]
 1569              	.L80:
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = (((heth->RxDesc)->Status & ETH_DMARXDESC_FL) >> ETH_DMARXDESC_FRA
 1570              		.loc 1 909 0
 1571 00a6 7B68     		ldr	r3, [r7, #4]
 1572 00a8 9B6A     		ldr	r3, [r3, #40]
 1573 00aa 1B68     		ldr	r3, [r3]
 1574 00ac 1B0C     		lsrs	r3, r3, #16
 1575 00ae C3F30D03 		ubfx	r3, r3, #0, #14
 1576 00b2 1A1F     		subs	r2, r3, #4
 1577 00b4 7B68     		ldr	r3, [r7, #4]
 1578 00b6 DA63     		str	r2, [r3, #60]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the address of the buffer start address */ 
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.buffer =((heth->RxFrameInfos).FSRxDesc)->Buffer1Addr;
 1579              		.loc 1 912 0
 1580 00b8 7B68     		ldr	r3, [r7, #4]
 1581 00ba 1B6B     		ldr	r3, [r3, #48]
 1582 00bc 9A68     		ldr	r2, [r3, #8]
 1583 00be 7B68     		ldr	r3, [r7, #4]
 1584 00c0 1A64     		str	r2, [r3, #64]
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */      
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
 1585              		.loc 1 915 0
 1586 00c2 7B68     		ldr	r3, [r7, #4]
 1587 00c4 9B6A     		ldr	r3, [r3, #40]
 1588 00c6 DB68     		ldr	r3, [r3, #12]
 1589 00c8 1A46     		mov	r2, r3
 1590 00ca 7B68     		ldr	r3, [r7, #4]
 1591 00cc 9A62     		str	r2, [r3, #40]
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set HAL State to Ready */
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 1592              		.loc 1 918 0
 1593 00ce 7B68     		ldr	r3, [r7, #4]
 1594 00d0 0122     		movs	r2, #1
 1595 00d2 83F84420 		strb	r2, [r3, #68]
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
ARM GAS  /tmp/cctGrkQx.s 			page 45


 1596              		.loc 1 921 0
 1597 00d6 7B68     		ldr	r3, [r7, #4]
 1598 00d8 0022     		movs	r2, #0
 1599 00da 83F84520 		strb	r2, [r3, #69]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return function status */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_OK;
 1600              		.loc 1 924 0
 1601 00de 0023     		movs	r3, #0
 1602 00e0 10E0     		b	.L76
 1603              	.L77:
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1604              		.loc 1 870 0
 1605 00e2 7B68     		ldr	r3, [r7, #4]
 1606 00e4 9B6A     		ldr	r3, [r3, #40]
 1607 00e6 1B68     		ldr	r3, [r3]
 1608 00e8 002B     		cmp	r3, #0
 1609 00ea 02DB     		blt	.L81
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1610              		.loc 1 870 0 is_stmt 0 discriminator 1
 1611 00ec FB68     		ldr	r3, [r7, #12]
 1612 00ee 032B     		cmp	r3, #3
 1613 00f0 9CD9     		bls	.L82
 1614              	.L81:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set HAL State to Ready */
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 1615              		.loc 1 929 0 is_stmt 1
 1616 00f2 7B68     		ldr	r3, [r7, #4]
 1617 00f4 0122     		movs	r2, #1
 1618 00f6 83F84420 		strb	r2, [r3, #68]
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 1619              		.loc 1 932 0
 1620 00fa 7B68     		ldr	r3, [r7, #4]
 1621 00fc 0022     		movs	r2, #0
 1622 00fe 83F84520 		strb	r2, [r3, #69]
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_ERROR;
 1623              		.loc 1 935 0
 1624 0102 0123     		movs	r3, #1
 1625              	.L76:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1626              		.loc 1 936 0
 1627 0104 1846     		mov	r0, r3
 1628 0106 1437     		adds	r7, r7, #20
 1629              	.LCFI49:
 1630              		.cfi_def_cfa_offset 4
 1631 0108 BD46     		mov	sp, r7
 1632              	.LCFI50:
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed
 1635 010a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cctGrkQx.s 			page 46


 1636              	.LCFI51:
 1637              		.cfi_restore 7
 1638              		.cfi_def_cfa_offset 0
 1639 010e 7047     		bx	lr
 1640              		.cfi_endproc
 1641              	.LFE146:
 1643              		.section	.text.HAL_ETH_IRQHandler,"ax",%progbits
 1644              		.align	1
 1645              		.global	HAL_ETH_IRQHandler
 1646              		.syntax unified
 1647              		.thumb
 1648              		.thumb_func
 1649              		.fpu fpv4-sp-d16
 1651              	HAL_ETH_IRQHandler:
 1652              	.LFB147:
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  This function handles ETH interrupt request.
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** void HAL_ETH_IRQHandler(ETH_HandleTypeDef *heth)
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1653              		.loc 1 945 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 8
 1656              		@ frame_needed = 1, uses_anonymous_args = 0
 1657 0000 80B5     		push	{r7, lr}
 1658              	.LCFI52:
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 7, -8
 1661              		.cfi_offset 14, -4
 1662 0002 82B0     		sub	sp, sp, #8
 1663              	.LCFI53:
 1664              		.cfi_def_cfa_offset 16
 1665 0004 00AF     		add	r7, sp, #0
 1666              	.LCFI54:
 1667              		.cfi_def_cfa_register 7
 1668 0006 7860     		str	r0, [r7, #4]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame received */
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_R)) 
 1669              		.loc 1 947 0
 1670 0008 7B68     		ldr	r3, [r7, #4]
 1671 000a 1A68     		ldr	r2, [r3]
 1672 000c 41F21403 		movw	r3, #4116
 1673 0010 1344     		add	r3, r3, r2
 1674 0012 1B68     		ldr	r3, [r3]
 1675 0014 03F04003 		and	r3, r3, #64
 1676 0018 402B     		cmp	r3, #64
 1677 001a 12D1     		bne	.L84
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Receive complete callback */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_RxCpltCallback(heth);
 1678              		.loc 1 950 0
 1679 001c 7868     		ldr	r0, [r7, #4]
 1680 001e FFF7FEFF 		bl	HAL_ETH_RxCpltCallback
ARM GAS  /tmp/cctGrkQx.s 			page 47


 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear the Eth DMA Rx IT pending bits */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_R);
 1681              		.loc 1 953 0
 1682 0022 7B68     		ldr	r3, [r7, #4]
 1683 0024 1A68     		ldr	r2, [r3]
 1684 0026 41F21403 		movw	r3, #4116
 1685 002a 1344     		add	r3, r3, r2
 1686 002c 4022     		movs	r2, #64
 1687 002e 1A60     		str	r2, [r3]
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1688              		.loc 1 956 0
 1689 0030 7B68     		ldr	r3, [r7, #4]
 1690 0032 0122     		movs	r2, #1
 1691 0034 83F84420 		strb	r2, [r3, #68]
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1692              		.loc 1 959 0
 1693 0038 7B68     		ldr	r3, [r7, #4]
 1694 003a 0022     		movs	r2, #0
 1695 003c 83F84520 		strb	r2, [r3, #69]
 1696 0040 1BE0     		b	.L85
 1697              	.L84:
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame transmitted */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if (__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_T)) 
 1698              		.loc 1 963 0
 1699 0042 7B68     		ldr	r3, [r7, #4]
 1700 0044 1A68     		ldr	r2, [r3]
 1701 0046 41F21403 		movw	r3, #4116
 1702 004a 1344     		add	r3, r3, r2
 1703 004c 1B68     		ldr	r3, [r3]
 1704 004e 03F00103 		and	r3, r3, #1
 1705 0052 012B     		cmp	r3, #1
 1706 0054 11D1     		bne	.L85
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Transfer complete callback */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_TxCpltCallback(heth);
 1707              		.loc 1 966 0
 1708 0056 7868     		ldr	r0, [r7, #4]
 1709 0058 FFF7FEFF 		bl	HAL_ETH_TxCpltCallback
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear the Eth DMA Tx IT pending bits */
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_T);
 1710              		.loc 1 969 0
 1711 005c 7B68     		ldr	r3, [r7, #4]
 1712 005e 1A68     		ldr	r2, [r3]
 1713 0060 41F21403 		movw	r3, #4116
 1714 0064 1344     		add	r3, r3, r2
 1715 0066 0122     		movs	r2, #1
 1716 0068 1A60     		str	r2, [r3]
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
ARM GAS  /tmp/cctGrkQx.s 			page 48


 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1717              		.loc 1 972 0
 1718 006a 7B68     		ldr	r3, [r7, #4]
 1719 006c 0122     		movs	r2, #1
 1720 006e 83F84420 		strb	r2, [r3, #68]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1721              		.loc 1 975 0
 1722 0072 7B68     		ldr	r3, [r7, #4]
 1723 0074 0022     		movs	r2, #0
 1724 0076 83F84520 		strb	r2, [r3, #69]
 1725              	.L85:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear the interrupt flags */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_NIS);
 1726              		.loc 1 979 0
 1727 007a 7B68     		ldr	r3, [r7, #4]
 1728 007c 1A68     		ldr	r2, [r3]
 1729 007e 41F21403 		movw	r3, #4116
 1730 0082 1344     		add	r3, r3, r2
 1731 0084 4FF48032 		mov	r2, #65536
 1732 0088 1A60     		str	r2, [r3]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* ETH DMA Error */
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_AIS))
 1733              		.loc 1 982 0
 1734 008a 7B68     		ldr	r3, [r7, #4]
 1735 008c 1A68     		ldr	r2, [r3]
 1736 008e 41F21403 		movw	r3, #4116
 1737 0092 1344     		add	r3, r3, r2
 1738 0094 1B68     		ldr	r3, [r3]
 1739 0096 03F40043 		and	r3, r3, #32768
 1740 009a B3F5004F 		cmp	r3, #32768
 1741 009e 12D1     		bne	.L87
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Ethernet Error callback */
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_ErrorCallback(heth);
 1742              		.loc 1 985 0
 1743 00a0 7868     		ldr	r0, [r7, #4]
 1744 00a2 FFF7FEFF 		bl	HAL_ETH_ErrorCallback
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear the interrupt flags */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_FLAG_AIS);
 1745              		.loc 1 988 0
 1746 00a6 7B68     		ldr	r3, [r7, #4]
 1747 00a8 1A68     		ldr	r2, [r3]
 1748 00aa 41F21403 		movw	r3, #4116
 1749 00ae 1344     		add	r3, r3, r2
 1750 00b0 4FF40042 		mov	r2, #32768
 1751 00b4 1A60     		str	r2, [r3]
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 1752              		.loc 1 991 0
 1753 00b6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cctGrkQx.s 			page 49


 1754 00b8 0122     		movs	r2, #1
 1755 00ba 83F84420 		strb	r2, [r3, #68]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 1756              		.loc 1 994 0
 1757 00be 7B68     		ldr	r3, [r7, #4]
 1758 00c0 0022     		movs	r2, #0
 1759 00c2 83F84520 		strb	r2, [r3, #69]
 1760              	.L87:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1761              		.loc 1 996 0
 1762 00c6 00BF     		nop
 1763 00c8 0837     		adds	r7, r7, #8
 1764              	.LCFI55:
 1765              		.cfi_def_cfa_offset 8
 1766 00ca BD46     		mov	sp, r7
 1767              	.LCFI56:
 1768              		.cfi_def_cfa_register 13
 1769              		@ sp needed
 1770 00cc 80BD     		pop	{r7, pc}
 1771              		.cfi_endproc
 1772              	.LFE147:
 1774              		.section	.text.HAL_ETH_TxCpltCallback,"ax",%progbits
 1775              		.align	1
 1776              		.weak	HAL_ETH_TxCpltCallback
 1777              		.syntax unified
 1778              		.thumb
 1779              		.thumb_func
 1780              		.fpu fpv4-sp-d16
 1782              	HAL_ETH_TxCpltCallback:
 1783              	.LFB148:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Tx Transfer completed callbacks.
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_TxCpltCallback(ETH_HandleTypeDef *heth)
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1784              		.loc 1 1005 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 8
 1787              		@ frame_needed = 1, uses_anonymous_args = 0
 1788              		@ link register save eliminated.
 1789 0000 80B4     		push	{r7}
 1790              	.LCFI57:
 1791              		.cfi_def_cfa_offset 4
 1792              		.cfi_offset 7, -4
 1793 0002 83B0     		sub	sp, sp, #12
 1794              	.LCFI58:
 1795              		.cfi_def_cfa_offset 16
 1796 0004 00AF     		add	r7, sp, #0
 1797              	.LCFI59:
 1798              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cctGrkQx.s 			page 50


 1799 0006 7860     		str	r0, [r7, #4]
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1800              		.loc 1 1012 0
 1801 0008 00BF     		nop
 1802 000a 0C37     		adds	r7, r7, #12
 1803              	.LCFI60:
 1804              		.cfi_def_cfa_offset 4
 1805 000c BD46     		mov	sp, r7
 1806              	.LCFI61:
 1807              		.cfi_def_cfa_register 13
 1808              		@ sp needed
 1809 000e 5DF8047B 		ldr	r7, [sp], #4
 1810              	.LCFI62:
 1811              		.cfi_restore 7
 1812              		.cfi_def_cfa_offset 0
 1813 0012 7047     		bx	lr
 1814              		.cfi_endproc
 1815              	.LFE148:
 1817              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 1818              		.align	1
 1819              		.weak	HAL_ETH_RxCpltCallback
 1820              		.syntax unified
 1821              		.thumb
 1822              		.thumb_func
 1823              		.fpu fpv4-sp-d16
 1825              	HAL_ETH_RxCpltCallback:
 1826              	.LFB149:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Rx Transfer completed callbacks.
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1827              		.loc 1 1021 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 8
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831              		@ link register save eliminated.
 1832 0000 80B4     		push	{r7}
 1833              	.LCFI63:
 1834              		.cfi_def_cfa_offset 4
 1835              		.cfi_offset 7, -4
 1836 0002 83B0     		sub	sp, sp, #12
 1837              	.LCFI64:
 1838              		.cfi_def_cfa_offset 16
 1839 0004 00AF     		add	r7, sp, #0
 1840              	.LCFI65:
 1841              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cctGrkQx.s 			page 51


 1842 0006 7860     		str	r0, [r7, #4]
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1843              		.loc 1 1028 0
 1844 0008 00BF     		nop
 1845 000a 0C37     		adds	r7, r7, #12
 1846              	.LCFI66:
 1847              		.cfi_def_cfa_offset 4
 1848 000c BD46     		mov	sp, r7
 1849              	.LCFI67:
 1850              		.cfi_def_cfa_register 13
 1851              		@ sp needed
 1852 000e 5DF8047B 		ldr	r7, [sp], #4
 1853              	.LCFI68:
 1854              		.cfi_restore 7
 1855              		.cfi_def_cfa_offset 0
 1856 0012 7047     		bx	lr
 1857              		.cfi_endproc
 1858              	.LFE149:
 1860              		.section	.text.HAL_ETH_ErrorCallback,"ax",%progbits
 1861              		.align	1
 1862              		.weak	HAL_ETH_ErrorCallback
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1866              		.fpu fpv4-sp-d16
 1868              	HAL_ETH_ErrorCallback:
 1869              	.LFB150:
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Ethernet transfer error callbacks
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_ErrorCallback(ETH_HandleTypeDef *heth)
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1870              		.loc 1 1037 0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 8
 1873              		@ frame_needed = 1, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875 0000 80B4     		push	{r7}
 1876              	.LCFI69:
 1877              		.cfi_def_cfa_offset 4
 1878              		.cfi_offset 7, -4
 1879 0002 83B0     		sub	sp, sp, #12
 1880              	.LCFI70:
 1881              		.cfi_def_cfa_offset 16
 1882 0004 00AF     		add	r7, sp, #0
 1883              	.LCFI71:
 1884              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cctGrkQx.s 			page 52


 1885 0006 7860     		str	r0, [r7, #4]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1886              		.loc 1 1044 0
 1887 0008 00BF     		nop
 1888 000a 0C37     		adds	r7, r7, #12
 1889              	.LCFI72:
 1890              		.cfi_def_cfa_offset 4
 1891 000c BD46     		mov	sp, r7
 1892              	.LCFI73:
 1893              		.cfi_def_cfa_register 13
 1894              		@ sp needed
 1895 000e 5DF8047B 		ldr	r7, [sp], #4
 1896              	.LCFI74:
 1897              		.cfi_restore 7
 1898              		.cfi_def_cfa_offset 0
 1899 0012 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE150:
 1903              		.section	.text.HAL_ETH_ReadPHYRegister,"ax",%progbits
 1904              		.align	1
 1905              		.global	HAL_ETH_ReadPHYRegister
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1909              		.fpu fpv4-sp-d16
 1911              	HAL_ETH_ReadPHYRegister:
 1912              	.LFB151:
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Reads a PHY register
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module                  
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param PHYReg PHY register address, is the index of one of the 32 PHY register. 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                This parameter can be one of the following values: 
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   PHY_BCR: Transceiver Basic Control Register, 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   PHY_BSR: Transceiver Basic Status Register.   
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   More PHY register could be read depending on the used PHY
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param RegValue PHY register value                  
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ReadPHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t *RegVa
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 1913              		.loc 1 1059 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 24
 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917 0000 80B5     		push	{r7, lr}
 1918              	.LCFI75:
 1919              		.cfi_def_cfa_offset 8
 1920              		.cfi_offset 7, -8
 1921              		.cfi_offset 14, -4
ARM GAS  /tmp/cctGrkQx.s 			page 53


 1922 0002 86B0     		sub	sp, sp, #24
 1923              	.LCFI76:
 1924              		.cfi_def_cfa_offset 32
 1925 0004 00AF     		add	r7, sp, #0
 1926              	.LCFI77:
 1927              		.cfi_def_cfa_register 7
 1928 0006 F860     		str	r0, [r7, #12]
 1929 0008 0B46     		mov	r3, r1
 1930 000a 7A60     		str	r2, [r7, #4]
 1931 000c 7B81     		strh	r3, [r7, #10]	@ movhi
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;     
 1932              		.loc 1 1060 0
 1933 000e 0023     		movs	r3, #0
 1934 0010 7B61     		str	r3, [r7, #20]
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
 1935              		.loc 1 1061 0
 1936 0012 0023     		movs	r3, #0
 1937 0014 3B61     		str	r3, [r7, #16]
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_BUSY_RD)
 1938              		.loc 1 1067 0
 1939 0016 FB68     		ldr	r3, [r7, #12]
 1940 0018 93F84430 		ldrb	r3, [r3, #68]
 1941 001c DBB2     		uxtb	r3, r3
 1942 001e 822B     		cmp	r3, #130
 1943 0020 01D1     		bne	.L92
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_BUSY;
 1944              		.loc 1 1069 0
 1945 0022 0223     		movs	r3, #2
 1946 0024 50E0     		b	.L93
 1947              	.L92:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY_RD */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY_RD;
 1948              		.loc 1 1072 0
 1949 0026 FB68     		ldr	r3, [r7, #12]
 1950 0028 8222     		movs	r2, #130
 1951 002a 83F84420 		strb	r2, [r3, #68]
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = heth->Instance->MACMIIAR;
 1952              		.loc 1 1075 0
 1953 002e FB68     		ldr	r3, [r7, #12]
 1954 0030 1B68     		ldr	r3, [r3]
 1955 0032 1B69     		ldr	r3, [r3, #16]
 1956 0034 7B61     		str	r3, [r7, #20]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Keep only the CSR Clock Range CR[2:0] bits value */
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_CR_MASK;
 1957              		.loc 1 1078 0
 1958 0036 7B69     		ldr	r3, [r7, #20]
 1959 0038 03F01C03 		and	r3, r3, #28
ARM GAS  /tmp/cctGrkQx.s 			page 54


 1960 003c 7B61     		str	r3, [r7, #20]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prepare the MII address register value */
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)heth->Init.PhyAddress << 11) & ETH_MACMIIAR_PA); /* Set the PHY device addre
 1961              		.loc 1 1081 0
 1962 003e FB68     		ldr	r3, [r7, #12]
 1963 0040 1B8A     		ldrh	r3, [r3, #16]
 1964 0042 DB02     		lsls	r3, r3, #11
 1965 0044 9BB2     		uxth	r3, r3
 1966 0046 7A69     		ldr	r2, [r7, #20]
 1967 0048 1343     		orrs	r3, r3, r2
 1968 004a 7B61     		str	r3, [r7, #20]
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                   /* Set the PHY register add
 1969              		.loc 1 1082 0
 1970 004c 7B89     		ldrh	r3, [r7, #10]
 1971 004e 9B01     		lsls	r3, r3, #6
 1972 0050 03F4F863 		and	r3, r3, #1984
 1973 0054 7A69     		ldr	r2, [r7, #20]
 1974 0056 1343     		orrs	r3, r3, r2
 1975 0058 7B61     		str	r3, [r7, #20]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_MW;                                           /* Set the read mode       
 1976              		.loc 1 1083 0
 1977 005a 7B69     		ldr	r3, [r7, #20]
 1978 005c 23F00203 		bic	r3, r3, #2
 1979 0060 7B61     		str	r3, [r7, #20]
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                            /* Set the MII Busy bit    
 1980              		.loc 1 1084 0
 1981 0062 7B69     		ldr	r3, [r7, #20]
 1982 0064 43F00103 		orr	r3, r3, #1
 1983 0068 7B61     		str	r3, [r7, #20]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIAR = tmpreg;
 1984              		.loc 1 1087 0
 1985 006a FB68     		ldr	r3, [r7, #12]
 1986 006c 1B68     		ldr	r3, [r3]
 1987 006e 7A69     		ldr	r2, [r7, #20]
 1988 0070 1A61     		str	r2, [r3, #16]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 1989              		.loc 1 1090 0
 1990 0072 FFF7FEFF 		bl	HAL_GetTick
 1991 0076 3861     		str	r0, [r7, #16]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check for the Busy flag */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while((tmpreg & ETH_MACMIIAR_MB) == ETH_MACMIIAR_MB)
 1992              		.loc 1 1093 0
 1993 0078 15E0     		b	.L94
 1994              	.L96:
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > PHY_READ_TO)
 1995              		.loc 1 1096 0
 1996 007a FFF7FEFF 		bl	HAL_GetTick
 1997 007e 0246     		mov	r2, r0
 1998 0080 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cctGrkQx.s 			page 55


 1999 0082 D31A     		subs	r3, r2, r3
 2000 0084 B3F5803F 		cmp	r3, #65536
 2001 0088 09D3     		bcc	.L95
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_READY;
 2002              		.loc 1 1098 0
 2003 008a FB68     		ldr	r3, [r7, #12]
 2004 008c 0122     		movs	r2, #1
 2005 008e 83F84420 		strb	r2, [r3, #68]
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 2006              		.loc 1 1101 0
 2007 0092 FB68     		ldr	r3, [r7, #12]
 2008 0094 0022     		movs	r2, #0
 2009 0096 83F84520 		strb	r2, [r3, #69]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 2010              		.loc 1 1103 0
 2011 009a 0323     		movs	r3, #3
 2012 009c 14E0     		b	.L93
 2013              	.L95:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = heth->Instance->MACMIIAR;
 2014              		.loc 1 1106 0
 2015 009e FB68     		ldr	r3, [r7, #12]
 2016 00a0 1B68     		ldr	r3, [r3]
 2017 00a2 1B69     		ldr	r3, [r3, #16]
 2018 00a4 7B61     		str	r3, [r7, #20]
 2019              	.L94:
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2020              		.loc 1 1093 0
 2021 00a6 7B69     		ldr	r3, [r7, #20]
 2022 00a8 03F00103 		and	r3, r3, #1
 2023 00ac 002B     		cmp	r3, #0
 2024 00ae E4D1     		bne	.L96
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get MACMIIDR value */
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *RegValue = (uint16_t)(heth->Instance->MACMIIDR);
 2025              		.loc 1 1110 0
 2026 00b0 FB68     		ldr	r3, [r7, #12]
 2027 00b2 1B68     		ldr	r3, [r3]
 2028 00b4 5B69     		ldr	r3, [r3, #20]
 2029 00b6 9BB2     		uxth	r3, r3
 2030 00b8 1A46     		mov	r2, r3
 2031 00ba 7B68     		ldr	r3, [r7, #4]
 2032 00bc 1A60     		str	r2, [r3]
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to READY */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 2033              		.loc 1 1113 0
 2034 00be FB68     		ldr	r3, [r7, #12]
 2035 00c0 0122     		movs	r2, #1
 2036 00c2 83F84420 		strb	r2, [r3, #68]
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/cctGrkQx.s 			page 56


1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 2037              		.loc 1 1116 0
 2038 00c6 0023     		movs	r3, #0
 2039              	.L93:
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2040              		.loc 1 1117 0
 2041 00c8 1846     		mov	r0, r3
 2042 00ca 1837     		adds	r7, r7, #24
 2043              	.LCFI78:
 2044              		.cfi_def_cfa_offset 8
 2045 00cc BD46     		mov	sp, r7
 2046              	.LCFI79:
 2047              		.cfi_def_cfa_register 13
 2048              		@ sp needed
 2049 00ce 80BD     		pop	{r7, pc}
 2050              		.cfi_endproc
 2051              	.LFE151:
 2053              		.section	.text.HAL_ETH_WritePHYRegister,"ax",%progbits
 2054              		.align	1
 2055              		.global	HAL_ETH_WritePHYRegister
 2056              		.syntax unified
 2057              		.thumb
 2058              		.thumb_func
 2059              		.fpu fpv4-sp-d16
 2061              	HAL_ETH_WritePHYRegister:
 2062              	.LFB152:
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Writes to a PHY register.
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  PHYReg PHY register address, is the index of one of the 32 PHY register. 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This parameter can be one of the following values: 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             PHY_BCR: Transceiver Control Register.  
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             More PHY register could be written depending on the used PHY
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RegValue the value to write
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_WritePHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t RegVa
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2063              		.loc 1 1131 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 24
 2066              		@ frame_needed = 1, uses_anonymous_args = 0
 2067 0000 80B5     		push	{r7, lr}
 2068              	.LCFI80:
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 7, -8
 2071              		.cfi_offset 14, -4
 2072 0002 86B0     		sub	sp, sp, #24
 2073              	.LCFI81:
 2074              		.cfi_def_cfa_offset 32
 2075 0004 00AF     		add	r7, sp, #0
 2076              	.LCFI82:
 2077              		.cfi_def_cfa_register 7
 2078 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/cctGrkQx.s 			page 57


 2079 0008 0B46     		mov	r3, r1
 2080 000a 7A60     		str	r2, [r7, #4]
 2081 000c 7B81     		strh	r3, [r7, #10]	@ movhi
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2082              		.loc 1 1132 0
 2083 000e 0023     		movs	r3, #0
 2084 0010 7B61     		str	r3, [r7, #20]
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
 2085              		.loc 1 1133 0
 2086 0012 0023     		movs	r3, #0
 2087 0014 3B61     		str	r3, [r7, #16]
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_BUSY_WR)
 2088              		.loc 1 1139 0
 2089 0016 FB68     		ldr	r3, [r7, #12]
 2090 0018 93F84430 		ldrb	r3, [r3, #68]
 2091 001c DBB2     		uxtb	r3, r3
 2092 001e 422B     		cmp	r3, #66
 2093 0020 01D1     		bne	.L98
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_BUSY;
 2094              		.loc 1 1141 0
 2095 0022 0223     		movs	r3, #2
 2096 0024 4EE0     		b	.L99
 2097              	.L98:
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY_WR */
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY_WR;
 2098              		.loc 1 1144 0
 2099 0026 FB68     		ldr	r3, [r7, #12]
 2100 0028 4222     		movs	r2, #66
 2101 002a 83F84420 		strb	r2, [r3, #68]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = heth->Instance->MACMIIAR;
 2102              		.loc 1 1147 0
 2103 002e FB68     		ldr	r3, [r7, #12]
 2104 0030 1B68     		ldr	r3, [r3]
 2105 0032 1B69     		ldr	r3, [r3, #16]
 2106 0034 7B61     		str	r3, [r7, #20]
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Keep only the CSR Clock Range CR[2:0] bits value */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_CR_MASK;
 2107              		.loc 1 1150 0
 2108 0036 7B69     		ldr	r3, [r7, #20]
 2109 0038 03F01C03 		and	r3, r3, #28
 2110 003c 7B61     		str	r3, [r7, #20]
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prepare the MII register address value */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)heth->Init.PhyAddress<<11) & ETH_MACMIIAR_PA); /* Set the PHY device address
 2111              		.loc 1 1153 0
 2112 003e FB68     		ldr	r3, [r7, #12]
 2113 0040 1B8A     		ldrh	r3, [r3, #16]
ARM GAS  /tmp/cctGrkQx.s 			page 58


 2114 0042 DB02     		lsls	r3, r3, #11
 2115 0044 9BB2     		uxth	r3, r3
 2116 0046 7A69     		ldr	r2, [r7, #20]
 2117 0048 1343     		orrs	r3, r3, r2
 2118 004a 7B61     		str	r3, [r7, #20]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                 /* Set the PHY register addre
 2119              		.loc 1 1154 0
 2120 004c 7B89     		ldrh	r3, [r7, #10]
 2121 004e 9B01     		lsls	r3, r3, #6
 2122 0050 03F4F863 		and	r3, r3, #1984
 2123 0054 7A69     		ldr	r2, [r7, #20]
 2124 0056 1343     		orrs	r3, r3, r2
 2125 0058 7B61     		str	r3, [r7, #20]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MW;                                          /* Set the write mode */
 2126              		.loc 1 1155 0
 2127 005a 7B69     		ldr	r3, [r7, #20]
 2128 005c 43F00203 		orr	r3, r3, #2
 2129 0060 7B61     		str	r3, [r7, #20]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                          /* Set the MII Busy bit */
 2130              		.loc 1 1156 0
 2131 0062 7B69     		ldr	r3, [r7, #20]
 2132 0064 43F00103 		orr	r3, r3, #1
 2133 0068 7B61     		str	r3, [r7, #20]
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Give the value to the MII data register */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIDR = (uint16_t)RegValue;
 2134              		.loc 1 1159 0
 2135 006a 7B68     		ldr	r3, [r7, #4]
 2136 006c 9AB2     		uxth	r2, r3
 2137 006e FB68     		ldr	r3, [r7, #12]
 2138 0070 1B68     		ldr	r3, [r3]
 2139 0072 5A61     		str	r2, [r3, #20]
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIAR = tmpreg;
 2140              		.loc 1 1162 0
 2141 0074 FB68     		ldr	r3, [r7, #12]
 2142 0076 1B68     		ldr	r3, [r3]
 2143 0078 7A69     		ldr	r2, [r7, #20]
 2144 007a 1A61     		str	r2, [r3, #16]
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 2145              		.loc 1 1165 0
 2146 007c FFF7FEFF 		bl	HAL_GetTick
 2147 0080 3861     		str	r0, [r7, #16]
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check for the Busy flag */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while((tmpreg & ETH_MACMIIAR_MB) == ETH_MACMIIAR_MB)
 2148              		.loc 1 1168 0
 2149 0082 15E0     		b	.L100
 2150              	.L102:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > PHY_WRITE_TO)
 2151              		.loc 1 1171 0
 2152 0084 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cctGrkQx.s 			page 59


 2153 0088 0246     		mov	r2, r0
 2154 008a 3B69     		ldr	r3, [r7, #16]
 2155 008c D31A     		subs	r3, r2, r3
 2156 008e B3F5803F 		cmp	r3, #65536
 2157 0092 09D3     		bcc	.L101
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_READY;
 2158              		.loc 1 1173 0
 2159 0094 FB68     		ldr	r3, [r7, #12]
 2160 0096 0122     		movs	r2, #1
 2161 0098 83F84420 		strb	r2, [r3, #68]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 2162              		.loc 1 1176 0
 2163 009c FB68     		ldr	r3, [r7, #12]
 2164 009e 0022     		movs	r2, #0
 2165 00a0 83F84520 		strb	r2, [r3, #69]
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 2166              		.loc 1 1178 0
 2167 00a4 0323     		movs	r3, #3
 2168 00a6 0DE0     		b	.L99
 2169              	.L101:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = heth->Instance->MACMIIAR;
 2170              		.loc 1 1181 0
 2171 00a8 FB68     		ldr	r3, [r7, #12]
 2172 00aa 1B68     		ldr	r3, [r3]
 2173 00ac 1B69     		ldr	r3, [r3, #16]
 2174 00ae 7B61     		str	r3, [r7, #20]
 2175              	.L100:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2176              		.loc 1 1168 0
 2177 00b0 7B69     		ldr	r3, [r7, #20]
 2178 00b2 03F00103 		and	r3, r3, #1
 2179 00b6 002B     		cmp	r3, #0
 2180 00b8 E4D1     		bne	.L102
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to READY */
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 2181              		.loc 1 1185 0
 2182 00ba FB68     		ldr	r3, [r7, #12]
 2183 00bc 0122     		movs	r2, #1
 2184 00be 83F84420 		strb	r2, [r3, #68]
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK; 
 2185              		.loc 1 1188 0
 2186 00c2 0023     		movs	r3, #0
 2187              	.L99:
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2188              		.loc 1 1189 0
 2189 00c4 1846     		mov	r0, r3
 2190 00c6 1837     		adds	r7, r7, #24
ARM GAS  /tmp/cctGrkQx.s 			page 60


 2191              	.LCFI83:
 2192              		.cfi_def_cfa_offset 8
 2193 00c8 BD46     		mov	sp, r7
 2194              	.LCFI84:
 2195              		.cfi_def_cfa_register 13
 2196              		@ sp needed
 2197 00ca 80BD     		pop	{r7, pc}
 2198              		.cfi_endproc
 2199              	.LFE152:
 2201              		.section	.text.HAL_ETH_Start,"ax",%progbits
 2202              		.align	1
 2203              		.global	HAL_ETH_Start
 2204              		.syntax unified
 2205              		.thumb
 2206              		.thumb_func
 2207              		.fpu fpv4-sp-d16
 2209              	HAL_ETH_Start:
 2210              	.LFB153:
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group3 Peripheral Control functions
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  *  @brief    Peripheral Control functions 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  *
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** @verbatim   
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  ===============================================================================
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                   ##### Peripheral Control functions #####
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  ===============================================================================  
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     [..]  This section provides functions allowing to:
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Enable MAC and DMA transmission and reception.
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_Start();
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Disable MAC and DMA transmission and reception. 
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_Stop();
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Set the MAC configuration in runtime mode
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigMAC();
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Set the DMA configuration in runtime mode
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigDMA();
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** @endverbatim
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  /**
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables Ethernet MAC and DMA reception/transmission 
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Start(ETH_HandleTypeDef *heth)
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 2211              		.loc 1 1223 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 8
 2214              		@ frame_needed = 1, uses_anonymous_args = 0
 2215 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cctGrkQx.s 			page 61


 2216              	.LCFI85:
 2217              		.cfi_def_cfa_offset 8
 2218              		.cfi_offset 7, -8
 2219              		.cfi_offset 14, -4
 2220 0002 82B0     		sub	sp, sp, #8
 2221              	.LCFI86:
 2222              		.cfi_def_cfa_offset 16
 2223 0004 00AF     		add	r7, sp, #0
 2224              	.LCFI87:
 2225              		.cfi_def_cfa_register 7
 2226 0006 7860     		str	r0, [r7, #4]
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2227              		.loc 1 1225 0
 2228 0008 7B68     		ldr	r3, [r7, #4]
 2229 000a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2230 000e 012B     		cmp	r3, #1
 2231 0010 01D1     		bne	.L104
 2232              		.loc 1 1225 0 is_stmt 0 discriminator 1
 2233 0012 0223     		movs	r3, #2
 2234 0014 1FE0     		b	.L105
 2235              	.L104:
 2236              		.loc 1 1225 0 discriminator 2
 2237 0016 7B68     		ldr	r3, [r7, #4]
 2238 0018 0122     		movs	r2, #1
 2239 001a 83F84520 		strb	r2, [r3, #69]
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 2240              		.loc 1 1228 0 is_stmt 1 discriminator 2
 2241 001e 7B68     		ldr	r3, [r7, #4]
 2242 0020 0222     		movs	r2, #2
 2243 0022 83F84420 		strb	r2, [r3, #68]
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable transmit state machine of the MAC for transmission on the MII */
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACTransmissionEnable(heth);
 2244              		.loc 1 1231 0 discriminator 2
 2245 0026 7868     		ldr	r0, [r7, #4]
 2246 0028 FFF7FEFF 		bl	ETH_MACTransmissionEnable
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable receive state machine of the MAC for reception from the MII */
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACReceptionEnable(heth);
 2247              		.loc 1 1234 0 discriminator 2
 2248 002c 7868     		ldr	r0, [r7, #4]
 2249 002e FFF7FEFF 		bl	ETH_MACReceptionEnable
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Flush Transmit FIFO */
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_FlushTransmitFIFO(heth);
 2250              		.loc 1 1237 0 discriminator 2
 2251 0032 7868     		ldr	r0, [r7, #4]
 2252 0034 FFF7FEFF 		bl	ETH_FlushTransmitFIFO
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Start DMA transmission */
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMATransmissionEnable(heth);
 2253              		.loc 1 1240 0 discriminator 2
 2254 0038 7868     		ldr	r0, [r7, #4]
 2255 003a FFF7FEFF 		bl	ETH_DMATransmissionEnable
ARM GAS  /tmp/cctGrkQx.s 			page 62


1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Start DMA reception */
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAReceptionEnable(heth);
 2256              		.loc 1 1243 0 discriminator 2
 2257 003e 7868     		ldr	r0, [r7, #4]
 2258 0040 FFF7FEFF 		bl	ETH_DMAReceptionEnable
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state to READY*/
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 2259              		.loc 1 1246 0 discriminator 2
 2260 0044 7B68     		ldr	r3, [r7, #4]
 2261 0046 0122     		movs	r2, #1
 2262 0048 83F84420 		strb	r2, [r3, #68]
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 2263              		.loc 1 1249 0 discriminator 2
 2264 004c 7B68     		ldr	r3, [r7, #4]
 2265 004e 0022     		movs	r2, #0
 2266 0050 83F84520 		strb	r2, [r3, #69]
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 2267              		.loc 1 1252 0 discriminator 2
 2268 0054 0023     		movs	r3, #0
 2269              	.L105:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2270              		.loc 1 1253 0
 2271 0056 1846     		mov	r0, r3
 2272 0058 0837     		adds	r7, r7, #8
 2273              	.LCFI88:
 2274              		.cfi_def_cfa_offset 8
 2275 005a BD46     		mov	sp, r7
 2276              	.LCFI89:
 2277              		.cfi_def_cfa_register 13
 2278              		@ sp needed
 2279 005c 80BD     		pop	{r7, pc}
 2280              		.cfi_endproc
 2281              	.LFE153:
 2283              		.section	.text.HAL_ETH_Stop,"ax",%progbits
 2284              		.align	1
 2285              		.global	HAL_ETH_Stop
 2286              		.syntax unified
 2287              		.thumb
 2288              		.thumb_func
 2289              		.fpu fpv4-sp-d16
 2291              	HAL_ETH_Stop:
 2292              	.LFB154:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Stop Ethernet MAC and DMA reception/transmission 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Stop(ETH_HandleTypeDef *heth)
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
ARM GAS  /tmp/cctGrkQx.s 			page 63


 2293              		.loc 1 1262 0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 8
 2296              		@ frame_needed = 1, uses_anonymous_args = 0
 2297 0000 80B5     		push	{r7, lr}
 2298              	.LCFI90:
 2299              		.cfi_def_cfa_offset 8
 2300              		.cfi_offset 7, -8
 2301              		.cfi_offset 14, -4
 2302 0002 82B0     		sub	sp, sp, #8
 2303              	.LCFI91:
 2304              		.cfi_def_cfa_offset 16
 2305 0004 00AF     		add	r7, sp, #0
 2306              	.LCFI92:
 2307              		.cfi_def_cfa_register 7
 2308 0006 7860     		str	r0, [r7, #4]
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2309              		.loc 1 1264 0
 2310 0008 7B68     		ldr	r3, [r7, #4]
 2311 000a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2312 000e 012B     		cmp	r3, #1
 2313 0010 01D1     		bne	.L107
 2314              		.loc 1 1264 0 is_stmt 0 discriminator 1
 2315 0012 0223     		movs	r3, #2
 2316 0014 1FE0     		b	.L108
 2317              	.L107:
 2318              		.loc 1 1264 0 discriminator 2
 2319 0016 7B68     		ldr	r3, [r7, #4]
 2320 0018 0122     		movs	r2, #1
 2321 001a 83F84520 		strb	r2, [r3, #69]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 2322              		.loc 1 1267 0 is_stmt 1 discriminator 2
 2323 001e 7B68     		ldr	r3, [r7, #4]
 2324 0020 0222     		movs	r2, #2
 2325 0022 83F84420 		strb	r2, [r3, #68]
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Stop DMA transmission */
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMATransmissionDisable(heth);
 2326              		.loc 1 1270 0 discriminator 2
 2327 0026 7868     		ldr	r0, [r7, #4]
 2328 0028 FFF7FEFF 		bl	ETH_DMATransmissionDisable
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Stop DMA reception */
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAReceptionDisable(heth);
 2329              		.loc 1 1273 0 discriminator 2
 2330 002c 7868     		ldr	r0, [r7, #4]
 2331 002e FFF7FEFF 		bl	ETH_DMAReceptionDisable
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable receive state machine of the MAC for reception from the MII */
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACReceptionDisable(heth);
 2332              		.loc 1 1276 0 discriminator 2
 2333 0032 7868     		ldr	r0, [r7, #4]
 2334 0034 FFF7FEFF 		bl	ETH_MACReceptionDisable
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/cctGrkQx.s 			page 64


1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Flush Transmit FIFO */
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_FlushTransmitFIFO(heth);
 2335              		.loc 1 1279 0 discriminator 2
 2336 0038 7868     		ldr	r0, [r7, #4]
 2337 003a FFF7FEFF 		bl	ETH_FlushTransmitFIFO
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable transmit state machine of the MAC for transmission on the MII */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACTransmissionDisable(heth);
 2338              		.loc 1 1282 0 discriminator 2
 2339 003e 7868     		ldr	r0, [r7, #4]
 2340 0040 FFF7FEFF 		bl	ETH_MACTransmissionDisable
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state*/
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 2341              		.loc 1 1285 0 discriminator 2
 2342 0044 7B68     		ldr	r3, [r7, #4]
 2343 0046 0122     		movs	r2, #1
 2344 0048 83F84420 		strb	r2, [r3, #68]
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 2345              		.loc 1 1288 0 discriminator 2
 2346 004c 7B68     		ldr	r3, [r7, #4]
 2347 004e 0022     		movs	r2, #0
 2348 0050 83F84520 		strb	r2, [r3, #69]
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 2349              		.loc 1 1291 0 discriminator 2
 2350 0054 0023     		movs	r3, #0
 2351              	.L108:
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2352              		.loc 1 1292 0
 2353 0056 1846     		mov	r0, r3
 2354 0058 0837     		adds	r7, r7, #8
 2355              	.LCFI93:
 2356              		.cfi_def_cfa_offset 8
 2357 005a BD46     		mov	sp, r7
 2358              	.LCFI94:
 2359              		.cfi_def_cfa_register 13
 2360              		@ sp needed
 2361 005c 80BD     		pop	{r7, pc}
 2362              		.cfi_endproc
 2363              	.LFE154:
 2365              		.section	.text.HAL_ETH_ConfigMAC,"ax",%progbits
 2366              		.align	1
 2367              		.global	HAL_ETH_ConfigMAC
 2368              		.syntax unified
 2369              		.thumb
 2370              		.thumb_func
 2371              		.fpu fpv4-sp-d16
 2373              	HAL_ETH_ConfigMAC:
 2374              	.LFB155:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Set ETH MAC Configuration.
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
ARM GAS  /tmp/cctGrkQx.s 			page 65


1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  macconf MAC Configuration structure  
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ConfigMAC(ETH_HandleTypeDef *heth, ETH_MACInitTypeDef *macconf)
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2375              		.loc 1 1302 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 16
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 80B5     		push	{r7, lr}
 2380              	.LCFI95:
 2381              		.cfi_def_cfa_offset 8
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
 2384 0002 84B0     		sub	sp, sp, #16
 2385              	.LCFI96:
 2386              		.cfi_def_cfa_offset 24
 2387 0004 00AF     		add	r7, sp, #0
 2388              	.LCFI97:
 2389              		.cfi_def_cfa_register 7
 2390 0006 7860     		str	r0, [r7, #4]
 2391 0008 3960     		str	r1, [r7]
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2392              		.loc 1 1303 0
 2393 000a 0023     		movs	r3, #0
 2394 000c FB60     		str	r3, [r7, #12]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2395              		.loc 1 1306 0
 2396 000e 7B68     		ldr	r3, [r7, #4]
 2397 0010 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2398 0014 012B     		cmp	r3, #1
 2399 0016 01D1     		bne	.L110
 2400              		.loc 1 1306 0 is_stmt 0 discriminator 1
 2401 0018 0223     		movs	r3, #2
 2402 001a E4E0     		b	.L111
 2403              	.L110:
 2404              		.loc 1 1306 0 discriminator 2
 2405 001c 7B68     		ldr	r3, [r7, #4]
 2406 001e 0122     		movs	r2, #1
 2407 0020 83F84520 		strb	r2, [r3, #69]
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_BUSY;
 2408              		.loc 1 1309 0 is_stmt 1 discriminator 2
 2409 0024 7B68     		ldr	r3, [r7, #4]
 2410 0026 0222     		movs	r2, #2
 2411 0028 83F84420 		strb	r2, [r3, #68]
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_SPEED(heth->Init.Speed));
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode)); 
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (macconf != NULL)
 2412              		.loc 1 1314 0 discriminator 2
 2413 002c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cctGrkQx.s 			page 66


 2414 002e 002B     		cmp	r3, #0
 2415 0030 00F0B180 		beq	.L112
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check the parameters */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_WATCHDOG(macconf->Watchdog));
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_JABBER(macconf->Jabber));
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_INTER_FRAME_GAP(macconf->InterFrameGap));
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CARRIER_SENSE(macconf->CarrierSense));
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_OWN(macconf->ReceiveOwn));
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_LOOPBACK_MODE(macconf->LoopbackMode));
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CHECKSUM_OFFLOAD(macconf->ChecksumOffload));
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RETRY_TRANSMISSION(macconf->RetryTransmission));
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_AUTOMATIC_PADCRC_STRIP(macconf->AutomaticPadCRCStrip));
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_BACKOFF_LIMIT(macconf->BackOffLimit));
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DEFERRAL_CHECK(macconf->DeferralCheck));
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_ALL(macconf->ReceiveAll));
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_SOURCE_ADDR_FILTER(macconf->SourceAddrFilter));
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CONTROL_FRAMES(macconf->PassControlFrames));
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_BROADCAST_FRAMES_RECEPTION(macconf->BroadcastFramesReception));
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DESTINATION_ADDR_FILTER(macconf->DestinationAddrFilter));
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PROMISCUOUS_MODE(macconf->PromiscuousMode));
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_MULTICAST_FRAMES_FILTER(macconf->MulticastFramesFilter));
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_UNICAST_FRAMES_FILTER(macconf->UnicastFramesFilter));
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PAUSE_TIME(macconf->PauseTime));
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_ZEROQUANTA_PAUSE(macconf->ZeroQuantaPause));
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PAUSE_LOW_THRESHOLD(macconf->PauseLowThreshold));
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_UNICAST_PAUSE_FRAME_DETECT(macconf->UnicastPauseFrameDetect));
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_FLOWCONTROL(macconf->ReceiveFlowControl));
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_TRANSMIT_FLOWCONTROL(macconf->TransmitFlowControl));
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_VLAN_TAG_COMPARISON(macconf->VLANTagComparison));
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_VLAN_TAG_IDENTIFIER(macconf->VLANTagIdentifier));
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*------------------------ ETHERNET MACCR Configuration --------------------*/
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET MACCR value */
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2416              		.loc 1 1347 0
 2417 0034 7B68     		ldr	r3, [r7, #4]
 2418 0036 1B68     		ldr	r3, [r3]
 2419 0038 1B68     		ldr	r3, [r3]
 2420 003a FB60     		str	r3, [r7, #12]
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear WD, PCE, PS, TE and RE bits */
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ETH_MACCR_CLEAR_MASK;
 2421              		.loc 1 1349 0
 2422 003c FA68     		ldr	r2, [r7, #12]
 2423 003e 6C4B     		ldr	r3, .L114
 2424 0040 1340     		ands	r3, r3, r2
 2425 0042 FB60     		str	r3, [r7, #12]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(macconf->Watchdog | 
 2426              		.loc 1 1351 0
 2427 0044 3B68     		ldr	r3, [r7]
 2428 0046 1A68     		ldr	r2, [r3]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2429              		.loc 1 1352 0
 2430 0048 3B68     		ldr	r3, [r7]
 2431 004a 5B68     		ldr	r3, [r3, #4]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
ARM GAS  /tmp/cctGrkQx.s 			page 67


 2432              		.loc 1 1351 0
 2433 004c 1A43     		orrs	r2, r2, r3
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
 2434              		.loc 1 1353 0
 2435 004e 3B68     		ldr	r3, [r7]
 2436 0050 9B68     		ldr	r3, [r3, #8]
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2437              		.loc 1 1352 0
 2438 0052 1A43     		orrs	r2, r2, r3
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
 2439              		.loc 1 1354 0
 2440 0054 3B68     		ldr	r3, [r7]
 2441 0056 DB68     		ldr	r3, [r3, #12]
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
 2442              		.loc 1 1353 0
 2443 0058 1A43     		orrs	r2, r2, r3
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
 2444              		.loc 1 1355 0
 2445 005a 7B68     		ldr	r3, [r7, #4]
 2446 005c 9B68     		ldr	r3, [r3, #8]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
 2447              		.loc 1 1354 0
 2448 005e 1A43     		orrs	r2, r2, r3
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
 2449              		.loc 1 1356 0
 2450 0060 3B68     		ldr	r3, [r7]
 2451 0062 1B69     		ldr	r3, [r3, #16]
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
 2452              		.loc 1 1355 0
 2453 0064 1A43     		orrs	r2, r2, r3
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
 2454              		.loc 1 1357 0
 2455 0066 3B68     		ldr	r3, [r7]
 2456 0068 5B69     		ldr	r3, [r3, #20]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
 2457              		.loc 1 1356 0
 2458 006a 1A43     		orrs	r2, r2, r3
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
 2459              		.loc 1 1358 0
 2460 006c 7B68     		ldr	r3, [r7, #4]
 2461 006e DB68     		ldr	r3, [r3, #12]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
 2462              		.loc 1 1357 0
 2463 0070 1A43     		orrs	r2, r2, r3
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
 2464              		.loc 1 1359 0
 2465 0072 3B68     		ldr	r3, [r7]
 2466 0074 9B69     		ldr	r3, [r3, #24]
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
 2467              		.loc 1 1358 0
 2468 0076 1A43     		orrs	r2, r2, r3
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
 2469              		.loc 1 1360 0
 2470 0078 3B68     		ldr	r3, [r7]
 2471 007a DB69     		ldr	r3, [r3, #28]
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
 2472              		.loc 1 1359 0
ARM GAS  /tmp/cctGrkQx.s 			page 68


 2473 007c 1A43     		orrs	r2, r2, r3
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
 2474              		.loc 1 1361 0
 2475 007e 3B68     		ldr	r3, [r7]
 2476 0080 1B6A     		ldr	r3, [r3, #32]
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
 2477              		.loc 1 1360 0
 2478 0082 1A43     		orrs	r2, r2, r3
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
 2479              		.loc 1 1362 0
 2480 0084 3B68     		ldr	r3, [r7]
 2481 0086 5B6A     		ldr	r3, [r3, #36]
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
 2482              		.loc 1 1361 0
 2483 0088 1A43     		orrs	r2, r2, r3
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->DeferralCheck);
 2484              		.loc 1 1363 0
 2485 008a 3B68     		ldr	r3, [r7]
 2486 008c 9B6A     		ldr	r3, [r3, #40]
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
 2487              		.loc 1 1362 0
 2488 008e 1343     		orrs	r3, r3, r2
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2489              		.loc 1 1351 0
 2490 0090 FA68     		ldr	r2, [r7, #12]
 2491 0092 1343     		orrs	r3, r3, r2
 2492 0094 FB60     		str	r3, [r7, #12]
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACCR */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = (uint32_t)tmpreg;
 2493              		.loc 1 1366 0
 2494 0096 7B68     		ldr	r3, [r7, #4]
 2495 0098 1B68     		ldr	r3, [r3]
 2496 009a FA68     		ldr	r2, [r7, #12]
 2497 009c 1A60     		str	r2, [r3]
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account :
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     at least four TX_CLK/RX_CLK clock cycles */
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2498              		.loc 1 1370 0
 2499 009e 7B68     		ldr	r3, [r7, #4]
 2500 00a0 1B68     		ldr	r3, [r3]
 2501 00a2 1B68     		ldr	r3, [r3]
 2502 00a4 FB60     		str	r3, [r7, #12]
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 2503              		.loc 1 1371 0
 2504 00a6 0120     		movs	r0, #1
 2505 00a8 FFF7FEFF 		bl	HAL_Delay
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg; 
 2506              		.loc 1 1372 0
 2507 00ac 7B68     		ldr	r3, [r7, #4]
 2508 00ae 1B68     		ldr	r3, [r3]
 2509 00b0 FA68     		ldr	r2, [r7, #12]
 2510 00b2 1A60     		str	r2, [r3]
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*----------------------- ETHERNET MACFFR Configuration --------------------*/ 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACFFR */  
ARM GAS  /tmp/cctGrkQx.s 			page 69


1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACFFR = (uint32_t)(macconf->ReceiveAll | 
 2511              		.loc 1 1376 0
 2512 00b4 3B68     		ldr	r3, [r7]
 2513 00b6 DA6A     		ldr	r2, [r3, #44]
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2514              		.loc 1 1377 0
 2515 00b8 3B68     		ldr	r3, [r7]
 2516 00ba 1B6B     		ldr	r3, [r3, #48]
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2517              		.loc 1 1376 0
 2518 00bc 1A43     		orrs	r2, r2, r3
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
 2519              		.loc 1 1378 0
 2520 00be 3B68     		ldr	r3, [r7]
 2521 00c0 5B6B     		ldr	r3, [r3, #52]
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2522              		.loc 1 1377 0
 2523 00c2 1A43     		orrs	r2, r2, r3
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
 2524              		.loc 1 1379 0
 2525 00c4 3B68     		ldr	r3, [r7]
 2526 00c6 9B6B     		ldr	r3, [r3, #56]
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
 2527              		.loc 1 1378 0
 2528 00c8 1A43     		orrs	r2, r2, r3
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
 2529              		.loc 1 1380 0
 2530 00ca 3B68     		ldr	r3, [r7]
 2531 00cc DB6B     		ldr	r3, [r3, #60]
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
 2532              		.loc 1 1379 0
 2533 00ce 1A43     		orrs	r2, r2, r3
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
 2534              		.loc 1 1381 0
 2535 00d0 3B68     		ldr	r3, [r7]
 2536 00d2 1B6C     		ldr	r3, [r3, #64]
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
 2537              		.loc 1 1380 0
 2538 00d4 1A43     		orrs	r2, r2, r3
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
 2539              		.loc 1 1382 0
 2540 00d6 3B68     		ldr	r3, [r7]
 2541 00d8 5B6C     		ldr	r3, [r3, #68]
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
 2542              		.loc 1 1381 0
 2543 00da 42EA0301 		orr	r1, r2, r3
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->UnicastFramesFilter);
 2544              		.loc 1 1383 0
 2545 00de 3B68     		ldr	r3, [r7]
 2546 00e0 9A6C     		ldr	r2, [r3, #72]
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2547              		.loc 1 1376 0
 2548 00e2 7B68     		ldr	r3, [r7, #4]
 2549 00e4 1B68     		ldr	r3, [r3]
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
 2550              		.loc 1 1382 0
 2551 00e6 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/cctGrkQx.s 			page 70


1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2552              		.loc 1 1376 0
 2553 00e8 5A60     		str	r2, [r3, #4]
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account :
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFFR;
 2554              		.loc 1 1387 0
 2555 00ea 7B68     		ldr	r3, [r7, #4]
 2556 00ec 1B68     		ldr	r3, [r3]
 2557 00ee 5B68     		ldr	r3, [r3, #4]
 2558 00f0 FB60     		str	r3, [r7, #12]
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 2559              		.loc 1 1388 0
 2560 00f2 0120     		movs	r0, #1
 2561 00f4 FFF7FEFF 		bl	HAL_Delay
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFFR = tmpreg;
 2562              		.loc 1 1389 0
 2563 00f8 7B68     		ldr	r3, [r7, #4]
 2564 00fa 1B68     		ldr	r3, [r3]
 2565 00fc FA68     		ldr	r2, [r7, #12]
 2566 00fe 5A60     		str	r2, [r3, #4]
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*--------------- ETHERNET MACHTHR and MACHTLR Configuration ---------------*/
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACHTHR */
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACHTHR = (uint32_t)macconf->HashTableHigh;
 2567              		.loc 1 1393 0
 2568 0100 7B68     		ldr	r3, [r7, #4]
 2569 0102 1B68     		ldr	r3, [r3]
 2570 0104 3A68     		ldr	r2, [r7]
 2571 0106 D26C     		ldr	r2, [r2, #76]
 2572 0108 9A60     		str	r2, [r3, #8]
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACHTLR */
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACHTLR = (uint32_t)macconf->HashTableLow;
 2573              		.loc 1 1396 0
 2574 010a 7B68     		ldr	r3, [r7, #4]
 2575 010c 1B68     		ldr	r3, [r3]
 2576 010e 3A68     		ldr	r2, [r7]
 2577 0110 126D     		ldr	r2, [r2, #80]
 2578 0112 DA60     		str	r2, [r3, #12]
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACFCR Configuration --------------------*/
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Get the ETHERNET MACFCR value */  
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFCR;
 2579              		.loc 1 1400 0
 2580 0114 7B68     		ldr	r3, [r7, #4]
 2581 0116 1B68     		ldr	r3, [r3]
 2582 0118 9B69     		ldr	r3, [r3, #24]
 2583 011a FB60     		str	r3, [r7, #12]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear xx bits */
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg &= ETH_MACFCR_CLEAR_MASK;
 2584              		.loc 1 1402 0
 2585 011c FA68     		ldr	r2, [r7, #12]
 2586 011e 4FF64173 		movw	r3, #65345
 2587 0122 1340     		ands	r3, r3, r2
 2588 0124 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cctGrkQx.s 			page 71


1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg |= (uint32_t)((macconf->PauseTime << 16) | 
 2589              		.loc 1 1404 0
 2590 0126 3B68     		ldr	r3, [r7]
 2591 0128 5B6D     		ldr	r3, [r3, #84]
 2592 012a 1A04     		lsls	r2, r3, #16
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2593              		.loc 1 1405 0
 2594 012c 3B68     		ldr	r3, [r7]
 2595 012e 9B6D     		ldr	r3, [r3, #88]
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2596              		.loc 1 1404 0
 2597 0130 1A43     		orrs	r2, r2, r3
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
 2598              		.loc 1 1406 0
 2599 0132 3B68     		ldr	r3, [r7]
 2600 0134 DB6D     		ldr	r3, [r3, #92]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2601              		.loc 1 1405 0
 2602 0136 1A43     		orrs	r2, r2, r3
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
 2603              		.loc 1 1407 0
 2604 0138 3B68     		ldr	r3, [r7]
 2605 013a 1B6E     		ldr	r3, [r3, #96]
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
 2606              		.loc 1 1406 0
 2607 013c 1A43     		orrs	r2, r2, r3
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
 2608              		.loc 1 1408 0
 2609 013e 3B68     		ldr	r3, [r7]
 2610 0140 5B6E     		ldr	r3, [r3, #100]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
 2611              		.loc 1 1407 0
 2612 0142 1A43     		orrs	r2, r2, r3
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->TransmitFlowControl); 
 2613              		.loc 1 1409 0
 2614 0144 3B68     		ldr	r3, [r7]
 2615 0146 9B6E     		ldr	r3, [r3, #104]
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
 2616              		.loc 1 1408 0
 2617 0148 1343     		orrs	r3, r3, r2
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2618              		.loc 1 1404 0
 2619 014a FA68     		ldr	r2, [r7, #12]
 2620 014c 1343     		orrs	r3, r3, r2
 2621 014e FB60     		str	r3, [r7, #12]
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACFCR */
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = (uint32_t)tmpreg;
 2622              		.loc 1 1412 0
 2623 0150 7B68     		ldr	r3, [r7, #4]
 2624 0152 1B68     		ldr	r3, [r3]
 2625 0154 FA68     		ldr	r2, [r7, #12]
 2626 0156 9A61     		str	r2, [r3, #24]
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account :
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
ARM GAS  /tmp/cctGrkQx.s 			page 72


1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFCR;
 2627              		.loc 1 1416 0
 2628 0158 7B68     		ldr	r3, [r7, #4]
 2629 015a 1B68     		ldr	r3, [r3]
 2630 015c 9B69     		ldr	r3, [r3, #24]
 2631 015e FB60     		str	r3, [r7, #12]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 2632              		.loc 1 1417 0
 2633 0160 0120     		movs	r0, #1
 2634 0162 FFF7FEFF 		bl	HAL_Delay
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = tmpreg;
 2635              		.loc 1 1418 0
 2636 0166 7B68     		ldr	r3, [r7, #4]
 2637 0168 1B68     		ldr	r3, [r3]
 2638 016a FA68     		ldr	r2, [r7, #12]
 2639 016c 9A61     		str	r2, [r3, #24]
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACVLANTR Configuration -----------------*/
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACVLANTR = (uint32_t)(macconf->VLANTagComparison | 
 2640              		.loc 1 1421 0
 2641 016e 3B68     		ldr	r3, [r7]
 2642 0170 D96E     		ldr	r1, [r3, #108]
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
 2643              		.loc 1 1422 0
 2644 0172 3B68     		ldr	r3, [r7]
 2645 0174 1A6F     		ldr	r2, [r3, #112]
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
 2646              		.loc 1 1421 0
 2647 0176 7B68     		ldr	r3, [r7, #4]
 2648 0178 1B68     		ldr	r3, [r3]
 2649 017a 0A43     		orrs	r2, r2, r1
 2650 017c DA61     		str	r2, [r3, #28]
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Wait until the write operation will be taken into account :
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       tmpreg = (heth->Instance)->MACVLANTR;
 2651              		.loc 1 1426 0
 2652 017e 7B68     		ldr	r3, [r7, #4]
 2653 0180 1B68     		ldr	r3, [r3]
 2654 0182 DB69     		ldr	r3, [r3, #28]
 2655 0184 FB60     		str	r3, [r7, #12]
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_Delay(ETH_REG_WRITE_DELAY);
 2656              		.loc 1 1427 0
 2657 0186 0120     		movs	r0, #1
 2658 0188 FFF7FEFF 		bl	HAL_Delay
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Instance)->MACVLANTR = tmpreg;
 2659              		.loc 1 1428 0
 2660 018c 7B68     		ldr	r3, [r7, #4]
 2661 018e 1B68     		ldr	r3, [r3]
 2662 0190 FA68     		ldr	r2, [r7, #12]
 2663 0192 DA61     		str	r2, [r3, #28]
 2664 0194 1EE0     		b	.L113
 2665              	.L112:
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* macconf == NULL : here we just configure Speed and Duplex mode */
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*------------------------ ETHERNET MACCR Configuration --------------------*/
ARM GAS  /tmp/cctGrkQx.s 			page 73


1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET MACCR value */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2666              		.loc 1 1434 0
 2667 0196 7B68     		ldr	r3, [r7, #4]
 2668 0198 1B68     		ldr	r3, [r3]
 2669 019a 1B68     		ldr	r3, [r3]
 2670 019c FB60     		str	r3, [r7, #12]
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear FES and DM bits */
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ~((uint32_t)0x00004800);
 2671              		.loc 1 1437 0
 2672 019e FB68     		ldr	r3, [r7, #12]
 2673 01a0 23F49043 		bic	r3, r3, #18432
 2674 01a4 FB60     		str	r3, [r7, #12]
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(heth->Init.Speed | heth->Init.DuplexMode);
 2675              		.loc 1 1439 0
 2676 01a6 7B68     		ldr	r3, [r7, #4]
 2677 01a8 9A68     		ldr	r2, [r3, #8]
 2678 01aa 7B68     		ldr	r3, [r7, #4]
 2679 01ac DB68     		ldr	r3, [r3, #12]
 2680 01ae 1343     		orrs	r3, r3, r2
 2681 01b0 FA68     		ldr	r2, [r7, #12]
 2682 01b2 1343     		orrs	r3, r3, r2
 2683 01b4 FB60     		str	r3, [r7, #12]
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACCR */
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = (uint32_t)tmpreg;
 2684              		.loc 1 1442 0
 2685 01b6 7B68     		ldr	r3, [r7, #4]
 2686 01b8 1B68     		ldr	r3, [r3]
 2687 01ba FA68     		ldr	r2, [r7, #12]
 2688 01bc 1A60     		str	r2, [r3]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     at least four TX_CLK/RX_CLK clock cycles */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
 2689              		.loc 1 1446 0
 2690 01be 7B68     		ldr	r3, [r7, #4]
 2691 01c0 1B68     		ldr	r3, [r3]
 2692 01c2 1B68     		ldr	r3, [r3]
 2693 01c4 FB60     		str	r3, [r7, #12]
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 2694              		.loc 1 1447 0
 2695 01c6 0120     		movs	r0, #1
 2696 01c8 FFF7FEFF 		bl	HAL_Delay
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg;
 2697              		.loc 1 1448 0
 2698 01cc 7B68     		ldr	r3, [r7, #4]
 2699 01ce 1B68     		ldr	r3, [r3]
 2700 01d0 FA68     		ldr	r2, [r7, #12]
 2701 01d2 1A60     		str	r2, [r3]
 2702              	.L113:
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state to Ready */
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
ARM GAS  /tmp/cctGrkQx.s 			page 74


 2703              		.loc 1 1452 0
 2704 01d4 7B68     		ldr	r3, [r7, #4]
 2705 01d6 0122     		movs	r2, #1
 2706 01d8 83F84420 		strb	r2, [r3, #68]
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 2707              		.loc 1 1455 0
 2708 01dc 7B68     		ldr	r3, [r7, #4]
 2709 01de 0022     		movs	r2, #0
 2710 01e0 83F84520 		strb	r2, [r3, #69]
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;  
 2711              		.loc 1 1458 0
 2712 01e4 0023     		movs	r3, #0
 2713              	.L111:
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2714              		.loc 1 1459 0
 2715 01e6 1846     		mov	r0, r3
 2716 01e8 1037     		adds	r7, r7, #16
 2717              	.LCFI98:
 2718              		.cfi_def_cfa_offset 8
 2719 01ea BD46     		mov	sp, r7
 2720              	.LCFI99:
 2721              		.cfi_def_cfa_register 13
 2722              		@ sp needed
 2723 01ec 80BD     		pop	{r7, pc}
 2724              	.L115:
 2725 01ee 00BF     		.align	2
 2726              	.L114:
 2727 01f0 0F8120FF 		.word	-14647025
 2728              		.cfi_endproc
 2729              	.LFE155:
 2731              		.section	.text.HAL_ETH_ConfigDMA,"ax",%progbits
 2732              		.align	1
 2733              		.global	HAL_ETH_ConfigDMA
 2734              		.syntax unified
 2735              		.thumb
 2736              		.thumb_func
 2737              		.fpu fpv4-sp-d16
 2739              	HAL_ETH_ConfigDMA:
 2740              	.LFB156:
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Sets ETH DMA Configuration.
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  dmaconf DMA Configuration structure  
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ConfigDMA(ETH_HandleTypeDef *heth, ETH_DMAInitTypeDef *dmaconf)
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 2741              		.loc 1 1469 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 16
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cctGrkQx.s 			page 75


 2745 0000 80B5     		push	{r7, lr}
 2746              	.LCFI100:
 2747              		.cfi_def_cfa_offset 8
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 84B0     		sub	sp, sp, #16
 2751              	.LCFI101:
 2752              		.cfi_def_cfa_offset 24
 2753 0004 00AF     		add	r7, sp, #0
 2754              	.LCFI102:
 2755              		.cfi_def_cfa_register 7
 2756 0006 7860     		str	r0, [r7, #4]
 2757 0008 3960     		str	r1, [r7]
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2758              		.loc 1 1470 0
 2759 000a 0023     		movs	r3, #0
 2760 000c FB60     		str	r3, [r7, #12]
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 2761              		.loc 1 1473 0
 2762 000e 7B68     		ldr	r3, [r7, #4]
 2763 0010 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2764 0014 012B     		cmp	r3, #1
 2765 0016 01D1     		bne	.L117
 2766              		.loc 1 1473 0 is_stmt 0 discriminator 1
 2767 0018 0223     		movs	r3, #2
 2768 001a 7BE0     		b	.L118
 2769              	.L117:
 2770              		.loc 1 1473 0 discriminator 2
 2771 001c 7B68     		ldr	r3, [r7, #4]
 2772 001e 0122     		movs	r2, #1
 2773 0020 83F84520 		strb	r2, [r3, #69]
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_BUSY;
 2774              		.loc 1 1476 0 is_stmt 1 discriminator 2
 2775 0024 7B68     		ldr	r3, [r7, #4]
 2776 0026 0222     		movs	r2, #2
 2777 0028 83F84420 		strb	r2, [r3, #68]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DROP_TCPIP_CHECKSUM_FRAME(dmaconf->DropTCPIPChecksumErrorFrame));
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RECEIVE_STORE_FORWARD(dmaconf->ReceiveStoreForward));
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FLUSH_RECEIVE_FRAME(dmaconf->FlushReceivedFrame));
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TRANSMIT_STORE_FORWARD(dmaconf->TransmitStoreForward));
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TRANSMIT_THRESHOLD_CONTROL(dmaconf->TransmitThresholdControl));
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FORWARD_ERROR_FRAMES(dmaconf->ForwardErrorFrames));
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FORWARD_UNDERSIZED_GOOD_FRAMES(dmaconf->ForwardUndersizedGoodFrames));
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RECEIVE_THRESHOLD_CONTROL(dmaconf->ReceiveThresholdControl));
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_SECOND_FRAME_OPERATE(dmaconf->SecondFrameOperate));
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_ADDRESS_ALIGNED_BEATS(dmaconf->AddressAlignedBeats));
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FIXED_BURST(dmaconf->FixedBurst));
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RXDMA_BURST_LENGTH(dmaconf->RxDMABurstLength));
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TXDMA_BURST_LENGTH(dmaconf->TxDMABurstLength));
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_ENHANCED_DESCRIPTOR_FORMAT(dmaconf->EnhancedDescriptorFormat));
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DMA_DESC_SKIP_LENGTH(dmaconf->DescriptorSkipLength));
ARM GAS  /tmp/cctGrkQx.s 			page 76


1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DMA_ARBITRATION_ROUNDROBIN_RXTX(dmaconf->DMAArbitration));
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET DMAOMR Configuration --------------------*/
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET DMAOMR value */
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 2778              		.loc 1 1498 0 discriminator 2
 2779 002c 7B68     		ldr	r3, [r7, #4]
 2780 002e 1A68     		ldr	r2, [r3]
 2781 0030 41F21803 		movw	r3, #4120
 2782 0034 1344     		add	r3, r3, r2
 2783 0036 1B68     		ldr	r3, [r3]
 2784 0038 FB60     		str	r3, [r7, #12]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear xx bits */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ETH_DMAOMR_CLEAR_MASK;
 2785              		.loc 1 1500 0 discriminator 2
 2786 003a FA68     		ldr	r2, [r7, #12]
 2787 003c 374B     		ldr	r3, .L119
 2788 003e 1340     		ands	r3, r3, r2
 2789 0040 FB60     		str	r3, [r7, #12]
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= (uint32_t)(dmaconf->DropTCPIPChecksumErrorFrame | 
 2790              		.loc 1 1502 0 discriminator 2
 2791 0042 3B68     		ldr	r3, [r7]
 2792 0044 1A68     		ldr	r2, [r3]
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2793              		.loc 1 1503 0 discriminator 2
 2794 0046 3B68     		ldr	r3, [r7]
 2795 0048 5B68     		ldr	r3, [r3, #4]
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2796              		.loc 1 1502 0 discriminator 2
 2797 004a 1A43     		orrs	r2, r2, r3
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
 2798              		.loc 1 1504 0 discriminator 2
 2799 004c 3B68     		ldr	r3, [r7]
 2800 004e 9B68     		ldr	r3, [r3, #8]
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2801              		.loc 1 1503 0 discriminator 2
 2802 0050 1A43     		orrs	r2, r2, r3
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
 2803              		.loc 1 1505 0 discriminator 2
 2804 0052 3B68     		ldr	r3, [r7]
 2805 0054 DB68     		ldr	r3, [r3, #12]
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
 2806              		.loc 1 1504 0 discriminator 2
 2807 0056 1A43     		orrs	r2, r2, r3
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
 2808              		.loc 1 1506 0 discriminator 2
 2809 0058 3B68     		ldr	r3, [r7]
 2810 005a 1B69     		ldr	r3, [r3, #16]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
 2811              		.loc 1 1505 0 discriminator 2
 2812 005c 1A43     		orrs	r2, r2, r3
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
 2813              		.loc 1 1507 0 discriminator 2
 2814 005e 3B68     		ldr	r3, [r7]
 2815 0060 5B69     		ldr	r3, [r3, #20]
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
ARM GAS  /tmp/cctGrkQx.s 			page 77


 2816              		.loc 1 1506 0 discriminator 2
 2817 0062 1A43     		orrs	r2, r2, r3
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
 2818              		.loc 1 1508 0 discriminator 2
 2819 0064 3B68     		ldr	r3, [r7]
 2820 0066 9B69     		ldr	r3, [r3, #24]
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
 2821              		.loc 1 1507 0 discriminator 2
 2822 0068 1A43     		orrs	r2, r2, r3
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
 2823              		.loc 1 1509 0 discriminator 2
 2824 006a 3B68     		ldr	r3, [r7]
 2825 006c DB69     		ldr	r3, [r3, #28]
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
 2826              		.loc 1 1508 0 discriminator 2
 2827 006e 1A43     		orrs	r2, r2, r3
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->SecondFrameOperate);
 2828              		.loc 1 1510 0 discriminator 2
 2829 0070 3B68     		ldr	r3, [r7]
 2830 0072 1B6A     		ldr	r3, [r3, #32]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
 2831              		.loc 1 1509 0 discriminator 2
 2832 0074 1343     		orrs	r3, r3, r2
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2833              		.loc 1 1502 0 discriminator 2
 2834 0076 FA68     		ldr	r2, [r7, #12]
 2835 0078 1343     		orrs	r3, r3, r2
 2836 007a FB60     		str	r3, [r7, #12]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET DMAOMR */
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = (uint32_t)tmpreg;
 2837              		.loc 1 1513 0 discriminator 2
 2838 007c 7B68     		ldr	r3, [r7, #4]
 2839 007e 1A68     		ldr	r2, [r3]
 2840 0080 41F21803 		movw	r3, #4120
 2841 0084 1344     		add	r3, r3, r2
 2842 0086 FA68     		ldr	r2, [r7, #12]
 2843 0088 1A60     		str	r2, [r3]
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   at least four TX_CLK/RX_CLK clock cycles */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 2844              		.loc 1 1517 0 discriminator 2
 2845 008a 7B68     		ldr	r3, [r7, #4]
 2846 008c 1A68     		ldr	r2, [r3]
 2847 008e 41F21803 		movw	r3, #4120
 2848 0092 1344     		add	r3, r3, r2
 2849 0094 1B68     		ldr	r3, [r3]
 2850 0096 FB60     		str	r3, [r7, #12]
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 2851              		.loc 1 1518 0 discriminator 2
 2852 0098 0120     		movs	r0, #1
 2853 009a FFF7FEFF 		bl	HAL_Delay
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
 2854              		.loc 1 1519 0 discriminator 2
 2855 009e 7B68     		ldr	r3, [r7, #4]
 2856 00a0 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cctGrkQx.s 			page 78


 2857 00a2 41F21803 		movw	r3, #4120
 2858 00a6 1344     		add	r3, r3, r2
 2859 00a8 FA68     		ldr	r2, [r7, #12]
 2860 00aa 1A60     		str	r2, [r3]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET DMABMR Configuration --------------------*/
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMABMR = (uint32_t)(dmaconf->AddressAlignedBeats | 
 2861              		.loc 1 1522 0 discriminator 2
 2862 00ac 3B68     		ldr	r3, [r7]
 2863 00ae 5A6A     		ldr	r2, [r3, #36]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2864              		.loc 1 1523 0 discriminator 2
 2865 00b0 3B68     		ldr	r3, [r7]
 2866 00b2 9B6A     		ldr	r3, [r3, #40]
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2867              		.loc 1 1522 0 discriminator 2
 2868 00b4 1A43     		orrs	r2, r2, r3
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
 2869              		.loc 1 1524 0 discriminator 2
 2870 00b6 3B68     		ldr	r3, [r7]
 2871 00b8 DB6A     		ldr	r3, [r3, #44]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2872              		.loc 1 1523 0 discriminator 2
 2873 00ba 1A43     		orrs	r2, r2, r3
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
 2874              		.loc 1 1525 0 discriminator 2
 2875 00bc 3B68     		ldr	r3, [r7]
 2876 00be 1B6B     		ldr	r3, [r3, #48]
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
 2877              		.loc 1 1524 0 discriminator 2
 2878 00c0 1A43     		orrs	r2, r2, r3
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
 2879              		.loc 1 1526 0 discriminator 2
 2880 00c2 3B68     		ldr	r3, [r7]
 2881 00c4 5B6B     		ldr	r3, [r3, #52]
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
 2882              		.loc 1 1525 0 discriminator 2
 2883 00c6 1A43     		orrs	r2, r2, r3
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
 2884              		.loc 1 1527 0 discriminator 2
 2885 00c8 3B68     		ldr	r3, [r7]
 2886 00ca 9B6B     		ldr	r3, [r3, #56]
 2887 00cc 9B00     		lsls	r3, r3, #2
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
 2888              		.loc 1 1526 0 discriminator 2
 2889 00ce 1A43     		orrs	r2, r2, r3
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->DMAArbitration | 
 2890              		.loc 1 1528 0 discriminator 2
 2891 00d0 3B68     		ldr	r3, [r7]
 2892 00d2 DB6B     		ldr	r3, [r3, #60]
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
 2893              		.loc 1 1527 0 discriminator 2
 2894 00d4 1A43     		orrs	r2, r2, r3
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2895              		.loc 1 1522 0 discriminator 2
 2896 00d6 7B68     		ldr	r3, [r7, #4]
 2897 00d8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cctGrkQx.s 			page 79


 2898 00da 42F40002 		orr	r2, r2, #8388608
 2899 00de 03F58053 		add	r3, r3, #4096
 2900 00e2 1A60     		str	r2, [r3]
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and 
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->DMABMR;
 2901              		.loc 1 1533 0 discriminator 2
 2902 00e4 7B68     		ldr	r3, [r7, #4]
 2903 00e6 1B68     		ldr	r3, [r3]
 2904 00e8 03F58053 		add	r3, r3, #4096
 2905 00ec 1B68     		ldr	r3, [r3]
 2906 00ee FB60     		str	r3, [r7, #12]
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 2907              		.loc 1 1534 0 discriminator 2
 2908 00f0 0120     		movs	r0, #1
 2909 00f2 FFF7FEFF 		bl	HAL_Delay
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->DMABMR = tmpreg;
 2910              		.loc 1 1535 0 discriminator 2
 2911 00f6 7B68     		ldr	r3, [r7, #4]
 2912 00f8 1B68     		ldr	r3, [r3]
 2913 00fa 03F58053 		add	r3, r3, #4096
 2914 00fe FA68     		ldr	r2, [r7, #12]
 2915 0100 1A60     		str	r2, [r3]
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the ETH state to Ready */
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    heth->State= HAL_ETH_STATE_READY;
 2916              		.loc 1 1538 0 discriminator 2
 2917 0102 7B68     		ldr	r3, [r7, #4]
 2918 0104 0122     		movs	r2, #1
 2919 0106 83F84420 		strb	r2, [r3, #68]
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Process Unlocked */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    __HAL_UNLOCK(heth);
 2920              		.loc 1 1541 0 discriminator 2
 2921 010a 7B68     		ldr	r3, [r7, #4]
 2922 010c 0022     		movs	r2, #0
 2923 010e 83F84520 		strb	r2, [r3, #69]
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Return function status */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    return HAL_OK; 
 2924              		.loc 1 1544 0 discriminator 2
 2925 0112 0023     		movs	r3, #0
 2926              	.L118:
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2927              		.loc 1 1545 0
 2928 0114 1846     		mov	r0, r3
 2929 0116 1037     		adds	r7, r7, #16
 2930              	.LCFI103:
 2931              		.cfi_def_cfa_offset 8
 2932 0118 BD46     		mov	sp, r7
 2933              	.LCFI104:
 2934              		.cfi_def_cfa_register 13
 2935              		@ sp needed
 2936 011a 80BD     		pop	{r7, pc}
 2937              	.L120:
ARM GAS  /tmp/cctGrkQx.s 			page 80


 2938              		.align	2
 2939              	.L119:
 2940 011c 233FDEF8 		.word	-119652573
 2941              		.cfi_endproc
 2942              	.LFE156:
 2944              		.section	.text.HAL_ETH_GetState,"ax",%progbits
 2945              		.align	1
 2946              		.global	HAL_ETH_GetState
 2947              		.syntax unified
 2948              		.thumb
 2949              		.thumb_func
 2950              		.fpu fpv4-sp-d16
 2952              	HAL_ETH_GetState:
 2953              	.LFB157:
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group4 Peripheral State functions 
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Peripheral State functions 
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim   
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          ##### Peripheral State functions #####
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================  
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   This subsection permits to get in run-time the status of the peripheral 
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   and the data flow.
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        (+) Get the ETH handle state:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            HAL_ETH_GetState();
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Return the ETH HAL state
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL state
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_ETH_StateTypeDef HAL_ETH_GetState(ETH_HandleTypeDef *heth)
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 2954              		.loc 1 1576 0
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 8
 2957              		@ frame_needed = 1, uses_anonymous_args = 0
 2958              		@ link register save eliminated.
 2959 0000 80B4     		push	{r7}
 2960              	.LCFI105:
 2961              		.cfi_def_cfa_offset 4
 2962              		.cfi_offset 7, -4
 2963 0002 83B0     		sub	sp, sp, #12
 2964              	.LCFI106:
 2965              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cctGrkQx.s 			page 81


 2966 0004 00AF     		add	r7, sp, #0
 2967              	.LCFI107:
 2968              		.cfi_def_cfa_register 7
 2969 0006 7860     		str	r0, [r7, #4]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return ETH state */
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return heth->State;
 2970              		.loc 1 1578 0
 2971 0008 7B68     		ldr	r3, [r7, #4]
 2972 000a 93F84430 		ldrb	r3, [r3, #68]
 2973 000e DBB2     		uxtb	r3, r3
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2974              		.loc 1 1579 0
 2975 0010 1846     		mov	r0, r3
 2976 0012 0C37     		adds	r7, r7, #12
 2977              	.LCFI108:
 2978              		.cfi_def_cfa_offset 4
 2979 0014 BD46     		mov	sp, r7
 2980              	.LCFI109:
 2981              		.cfi_def_cfa_register 13
 2982              		@ sp needed
 2983 0016 5DF8047B 		ldr	r7, [sp], #4
 2984              	.LCFI110:
 2985              		.cfi_restore 7
 2986              		.cfi_def_cfa_offset 0
 2987 001a 7047     		bx	lr
 2988              		.cfi_endproc
 2989              	.LFE157:
 2991              		.section	.text.ETH_MACDMAConfig,"ax",%progbits
 2992              		.align	1
 2993              		.syntax unified
 2994              		.thumb
 2995              		.thumb_func
 2996              		.fpu fpv4-sp-d16
 2998              	ETH_MACDMAConfig:
 2999              	.LFB158:
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @addtogroup ETH_Private_Functions
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Configures Ethernet MAC and DMA with default parameters.
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  err Ethernet Init error
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err)
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
ARM GAS  /tmp/cctGrkQx.s 			page 82


 3000              		.loc 1 1601 0
 3001              		.cfi_startproc
 3002              		@ args = 0, pretend = 0, frame = 192
 3003              		@ frame_needed = 1, uses_anonymous_args = 0
 3004 0000 80B5     		push	{r7, lr}
 3005              	.LCFI111:
 3006              		.cfi_def_cfa_offset 8
 3007              		.cfi_offset 7, -8
 3008              		.cfi_offset 14, -4
 3009 0002 B0B0     		sub	sp, sp, #192
 3010              	.LCFI112:
 3011              		.cfi_def_cfa_offset 200
 3012 0004 00AF     		add	r7, sp, #0
 3013              	.LCFI113:
 3014              		.cfi_def_cfa_register 7
 3015 0006 7860     		str	r0, [r7, #4]
 3016 0008 3960     		str	r1, [r7]
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACInitTypeDef macinit;
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAInitTypeDef dmainit;
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 3017              		.loc 1 1604 0
 3018 000a 0023     		movs	r3, #0
 3019 000c C7F8BC30 		str	r3, [r7, #188]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (err != ETH_SUCCESS) /* Auto-negotiation failed */
 3020              		.loc 1 1606 0
 3021 0010 3B68     		ldr	r3, [r7]
 3022 0012 002B     		cmp	r3, #0
 3023 0014 07D0     		beq	.L124
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Ethernet duplex mode to Full-duplex */
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Init).DuplexMode = ETH_MODE_FULLDUPLEX;
 3024              		.loc 1 1609 0
 3025 0016 7B68     		ldr	r3, [r7, #4]
 3026 0018 4FF40062 		mov	r2, #2048
 3027 001c DA60     		str	r2, [r3, #12]
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Ethernet speed to 100M */
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Init).Speed = ETH_SPEED_100M;
 3028              		.loc 1 1612 0
 3029 001e 7B68     		ldr	r3, [r7, #4]
 3030 0020 4FF48042 		mov	r2, #16384
 3031 0024 9A60     		str	r2, [r3, #8]
 3032              	.L124:
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Ethernet MAC default initialization **************************************/
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.Watchdog = ETH_WATCHDOG_ENABLE;
 3033              		.loc 1 1616 0
 3034 0026 0023     		movs	r3, #0
 3035 0028 BB64     		str	r3, [r7, #72]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.Jabber = ETH_JABBER_ENABLE;
 3036              		.loc 1 1617 0
 3037 002a 0023     		movs	r3, #0
 3038 002c FB64     		str	r3, [r7, #76]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.InterFrameGap = ETH_INTERFRAMEGAP_96BIT;
 3039              		.loc 1 1618 0
ARM GAS  /tmp/cctGrkQx.s 			page 83


 3040 002e 0023     		movs	r3, #0
 3041 0030 3B65     		str	r3, [r7, #80]
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.CarrierSense = ETH_CARRIERSENCE_ENABLE;
 3042              		.loc 1 1619 0
 3043 0032 0023     		movs	r3, #0
 3044 0034 7B65     		str	r3, [r7, #84]
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveOwn = ETH_RECEIVEOWN_ENABLE;
 3045              		.loc 1 1620 0
 3046 0036 0023     		movs	r3, #0
 3047 0038 BB65     		str	r3, [r7, #88]
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.LoopbackMode = ETH_LOOPBACKMODE_DISABLE;
 3048              		.loc 1 1621 0
 3049 003a 0023     		movs	r3, #0
 3050 003c FB65     		str	r3, [r7, #92]
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->Init.ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 3051              		.loc 1 1622 0
 3052 003e 7B68     		ldr	r3, [r7, #4]
 3053 0040 DB69     		ldr	r3, [r3, #28]
 3054 0042 002B     		cmp	r3, #0
 3055 0044 03D1     		bne	.L125
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_ENABLE;
 3056              		.loc 1 1624 0
 3057 0046 4FF48063 		mov	r3, #1024
 3058 004a 3B66     		str	r3, [r7, #96]
 3059 004c 01E0     		b	.L126
 3060              	.L125:
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_DISABLE;
 3061              		.loc 1 1628 0
 3062 004e 0023     		movs	r3, #0
 3063 0050 3B66     		str	r3, [r7, #96]
 3064              	.L126:
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.RetryTransmission = ETH_RETRYTRANSMISSION_DISABLE;
 3065              		.loc 1 1630 0
 3066 0052 4FF40073 		mov	r3, #512
 3067 0056 7B66     		str	r3, [r7, #100]
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.AutomaticPadCRCStrip = ETH_AUTOMATICPADCRCSTRIP_DISABLE;
 3068              		.loc 1 1631 0
 3069 0058 0023     		movs	r3, #0
 3070 005a BB66     		str	r3, [r7, #104]
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.BackOffLimit = ETH_BACKOFFLIMIT_10;
 3071              		.loc 1 1632 0
 3072 005c 0023     		movs	r3, #0
 3073 005e FB66     		str	r3, [r7, #108]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.DeferralCheck = ETH_DEFFERRALCHECK_DISABLE;
 3074              		.loc 1 1633 0
 3075 0060 0023     		movs	r3, #0
 3076 0062 3B67     		str	r3, [r7, #112]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveAll = ETH_RECEIVEAll_DISABLE;
 3077              		.loc 1 1634 0
 3078 0064 0023     		movs	r3, #0
 3079 0066 7B67     		str	r3, [r7, #116]
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.SourceAddrFilter = ETH_SOURCEADDRFILTER_DISABLE;
ARM GAS  /tmp/cctGrkQx.s 			page 84


 3080              		.loc 1 1635 0
 3081 0068 0023     		movs	r3, #0
 3082 006a BB67     		str	r3, [r7, #120]
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PassControlFrames = ETH_PASSCONTROLFRAMES_BLOCKALL;
 3083              		.loc 1 1636 0
 3084 006c 4023     		movs	r3, #64
 3085 006e FB67     		str	r3, [r7, #124]
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.BroadcastFramesReception = ETH_BROADCASTFRAMESRECEPTION_ENABLE;
 3086              		.loc 1 1637 0
 3087 0070 0023     		movs	r3, #0
 3088 0072 C7F88030 		str	r3, [r7, #128]
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.DestinationAddrFilter = ETH_DESTINATIONADDRFILTER_NORMAL;
 3089              		.loc 1 1638 0
 3090 0076 0023     		movs	r3, #0
 3091 0078 C7F88430 		str	r3, [r7, #132]
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PromiscuousMode = ETH_PROMISCUOUS_MODE_DISABLE;
 3092              		.loc 1 1639 0
 3093 007c 0023     		movs	r3, #0
 3094 007e C7F88830 		str	r3, [r7, #136]
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.MulticastFramesFilter = ETH_MULTICASTFRAMESFILTER_PERFECT;
 3095              		.loc 1 1640 0
 3096 0082 0023     		movs	r3, #0
 3097 0084 C7F88C30 		str	r3, [r7, #140]
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.UnicastFramesFilter = ETH_UNICASTFRAMESFILTER_PERFECT;
 3098              		.loc 1 1641 0
 3099 0088 0023     		movs	r3, #0
 3100 008a C7F89030 		str	r3, [r7, #144]
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.HashTableHigh = 0x0;
 3101              		.loc 1 1642 0
 3102 008e 0023     		movs	r3, #0
 3103 0090 C7F89430 		str	r3, [r7, #148]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.HashTableLow = 0x0;
 3104              		.loc 1 1643 0
 3105 0094 0023     		movs	r3, #0
 3106 0096 C7F89830 		str	r3, [r7, #152]
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PauseTime = 0x0;
 3107              		.loc 1 1644 0
 3108 009a 0023     		movs	r3, #0
 3109 009c C7F89C30 		str	r3, [r7, #156]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ZeroQuantaPause = ETH_ZEROQUANTAPAUSE_DISABLE;
 3110              		.loc 1 1645 0
 3111 00a0 8023     		movs	r3, #128
 3112 00a2 C7F8A030 		str	r3, [r7, #160]
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PauseLowThreshold = ETH_PAUSELOWTHRESHOLD_MINUS4;
 3113              		.loc 1 1646 0
 3114 00a6 0023     		movs	r3, #0
 3115 00a8 C7F8A430 		str	r3, [r7, #164]
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.UnicastPauseFrameDetect = ETH_UNICASTPAUSEFRAMEDETECT_DISABLE;
 3116              		.loc 1 1647 0
 3117 00ac 0023     		movs	r3, #0
 3118 00ae C7F8A830 		str	r3, [r7, #168]
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveFlowControl = ETH_RECEIVEFLOWCONTROL_DISABLE;
 3119              		.loc 1 1648 0
 3120 00b2 0023     		movs	r3, #0
 3121 00b4 C7F8AC30 		str	r3, [r7, #172]
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.TransmitFlowControl = ETH_TRANSMITFLOWCONTROL_DISABLE;
 3122              		.loc 1 1649 0
ARM GAS  /tmp/cctGrkQx.s 			page 85


 3123 00b8 0023     		movs	r3, #0
 3124 00ba C7F8B030 		str	r3, [r7, #176]
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.VLANTagComparison = ETH_VLANTAGCOMPARISON_16BIT;
 3125              		.loc 1 1650 0
 3126 00be 0023     		movs	r3, #0
 3127 00c0 C7F8B430 		str	r3, [r7, #180]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.VLANTagIdentifier = 0x0;
 3128              		.loc 1 1651 0
 3129 00c4 0023     		movs	r3, #0
 3130 00c6 C7F8B830 		str	r3, [r7, #184]
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*------------------------ ETHERNET MACCR Configuration --------------------*/
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACCR value */
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3131              		.loc 1 1655 0
 3132 00ca 7B68     		ldr	r3, [r7, #4]
 3133 00cc 1B68     		ldr	r3, [r3]
 3134 00ce 1B68     		ldr	r3, [r3]
 3135 00d0 C7F8BC30 		str	r3, [r7, #188]
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear WD, PCE, PS, TE and RE bits */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ETH_MACCR_CLEAR_MASK;
 3136              		.loc 1 1657 0
 3137 00d4 D7F8BC20 		ldr	r2, [r7, #188]
 3138 00d8 AB4B     		ldr	r3, .L128
 3139 00da 1340     		ands	r3, r3, r2
 3140 00dc C7F8BC30 		str	r3, [r7, #188]
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the WD bit according to ETH Watchdog value */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the JD: bit according to ETH Jabber value */
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the IFG bit according to ETH InterFrameGap value */
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DCRS bit according to ETH CarrierSense value */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the FES bit according to ETH Speed value */ 
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DO bit according to ETH ReceiveOwn value */ 
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the LM bit according to ETH LoopbackMode value */
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DM bit according to ETH Mode value */ 
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the IPCO bit according to ETH ChecksumOffload value */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DR bit according to ETH RetryTransmission value */
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ACS bit according to ETH AutomaticPadCRCStrip value */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the BL bit according to ETH BackOffLimit value */
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DC bit according to ETH DeferralCheck value */
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= (uint32_t)(macinit.Watchdog | 
 3141              		.loc 1 1671 0
 3142 00e0 BA6C     		ldr	r2, [r7, #72]
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3143              		.loc 1 1672 0
 3144 00e2 FB6C     		ldr	r3, [r7, #76]
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3145              		.loc 1 1671 0
 3146 00e4 1A43     		orrs	r2, r2, r3
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.InterFrameGap |
 3147              		.loc 1 1673 0
 3148 00e6 3B6D     		ldr	r3, [r7, #80]
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3149              		.loc 1 1672 0
 3150 00e8 1A43     		orrs	r2, r2, r3
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.CarrierSense |
 3151              		.loc 1 1674 0
 3152 00ea 7B6D     		ldr	r3, [r7, #84]
ARM GAS  /tmp/cctGrkQx.s 			page 86


1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.InterFrameGap |
 3153              		.loc 1 1673 0
 3154 00ec 1A43     		orrs	r2, r2, r3
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).Speed | 
 3155              		.loc 1 1675 0
 3156 00ee 7B68     		ldr	r3, [r7, #4]
 3157 00f0 9B68     		ldr	r3, [r3, #8]
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.CarrierSense |
 3158              		.loc 1 1674 0
 3159 00f2 1A43     		orrs	r2, r2, r3
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ReceiveOwn |
 3160              		.loc 1 1676 0
 3161 00f4 BB6D     		ldr	r3, [r7, #88]
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).Speed | 
 3162              		.loc 1 1675 0
 3163 00f6 1A43     		orrs	r2, r2, r3
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.LoopbackMode |
 3164              		.loc 1 1677 0
 3165 00f8 FB6D     		ldr	r3, [r7, #92]
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ReceiveOwn |
 3166              		.loc 1 1676 0
 3167 00fa 1A43     		orrs	r2, r2, r3
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).DuplexMode | 
 3168              		.loc 1 1678 0
 3169 00fc 7B68     		ldr	r3, [r7, #4]
 3170 00fe DB68     		ldr	r3, [r3, #12]
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.LoopbackMode |
 3171              		.loc 1 1677 0
 3172 0100 1A43     		orrs	r2, r2, r3
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
 3173              		.loc 1 1679 0
 3174 0102 3B6E     		ldr	r3, [r7, #96]
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).DuplexMode | 
 3175              		.loc 1 1678 0
 3176 0104 1A43     		orrs	r2, r2, r3
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
 3177              		.loc 1 1680 0
 3178 0106 7B6E     		ldr	r3, [r7, #100]
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
 3179              		.loc 1 1679 0
 3180 0108 1A43     		orrs	r2, r2, r3
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.AutomaticPadCRCStrip | 
 3181              		.loc 1 1681 0
 3182 010a BB6E     		ldr	r3, [r7, #104]
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
 3183              		.loc 1 1680 0
 3184 010c 1A43     		orrs	r2, r2, r3
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.BackOffLimit | 
 3185              		.loc 1 1682 0
 3186 010e FB6E     		ldr	r3, [r7, #108]
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.AutomaticPadCRCStrip | 
 3187              		.loc 1 1681 0
 3188 0110 1A43     		orrs	r2, r2, r3
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.DeferralCheck);
 3189              		.loc 1 1683 0
 3190 0112 3B6F     		ldr	r3, [r7, #112]
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.BackOffLimit | 
ARM GAS  /tmp/cctGrkQx.s 			page 87


 3191              		.loc 1 1682 0
 3192 0114 1343     		orrs	r3, r3, r2
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 3193              		.loc 1 1671 0
 3194 0116 D7F8BC20 		ldr	r2, [r7, #188]
 3195 011a 1343     		orrs	r3, r3, r2
 3196 011c C7F8BC30 		str	r3, [r7, #188]
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MACCR */
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = (uint32_t)tmpreg;
 3197              		.loc 1 1686 0
 3198 0120 7B68     		ldr	r3, [r7, #4]
 3199 0122 1B68     		ldr	r3, [r3]
 3200 0124 D7F8BC20 		ldr	r2, [r7, #188]
 3201 0128 1A60     		str	r2, [r3]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3202              		.loc 1 1690 0
 3203 012a 7B68     		ldr	r3, [r7, #4]
 3204 012c 1B68     		ldr	r3, [r3]
 3205 012e 1B68     		ldr	r3, [r3]
 3206 0130 C7F8BC30 		str	r3, [r7, #188]
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3207              		.loc 1 1691 0
 3208 0134 0120     		movs	r0, #1
 3209 0136 FFF7FEFF 		bl	HAL_Delay
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg; 
 3210              		.loc 1 1692 0
 3211 013a 7B68     		ldr	r3, [r7, #4]
 3212 013c 1B68     		ldr	r3, [r3]
 3213 013e D7F8BC20 		ldr	r2, [r7, #188]
 3214 0142 1A60     		str	r2, [r3]
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET MACFFR Configuration --------------------*/ 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the RA bit according to ETH ReceiveAll value */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the SAF and SAIF bits according to ETH SourceAddrFilter value */
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PCF bit according to ETH PassControlFrames value */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DBF bit according to ETH BroadcastFramesReception value */
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DAIF bit according to ETH DestinationAddrFilter value */
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PR bit according to ETH PromiscuousMode value */
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PM, HMC and HPF bits according to ETH MulticastFramesFilter value */
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the HUC and HPF bits according to ETH UnicastFramesFilter value */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MACFFR */  
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACFFR = (uint32_t)(macinit.ReceiveAll | 
 3215              		.loc 1 1704 0
 3216 0144 7A6F     		ldr	r2, [r7, #116]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3217              		.loc 1 1705 0
 3218 0146 BB6F     		ldr	r3, [r7, #120]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3219              		.loc 1 1704 0
 3220 0148 1A43     		orrs	r2, r2, r3
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PassControlFrames |
 3221              		.loc 1 1706 0
 3222 014a FB6F     		ldr	r3, [r7, #124]
ARM GAS  /tmp/cctGrkQx.s 			page 88


1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3223              		.loc 1 1705 0
 3224 014c 1A43     		orrs	r2, r2, r3
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.BroadcastFramesReception | 
 3225              		.loc 1 1707 0
 3226 014e D7F88030 		ldr	r3, [r7, #128]
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PassControlFrames |
 3227              		.loc 1 1706 0
 3228 0152 1A43     		orrs	r2, r2, r3
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.DestinationAddrFilter |
 3229              		.loc 1 1708 0
 3230 0154 D7F88430 		ldr	r3, [r7, #132]
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.BroadcastFramesReception | 
 3231              		.loc 1 1707 0
 3232 0158 1A43     		orrs	r2, r2, r3
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PromiscuousMode |
 3233              		.loc 1 1709 0
 3234 015a D7F88830 		ldr	r3, [r7, #136]
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.DestinationAddrFilter |
 3235              		.loc 1 1708 0
 3236 015e 1A43     		orrs	r2, r2, r3
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.MulticastFramesFilter |
 3237              		.loc 1 1710 0
 3238 0160 D7F88C30 		ldr	r3, [r7, #140]
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PromiscuousMode |
 3239              		.loc 1 1709 0
 3240 0164 42EA0301 		orr	r1, r2, r3
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.UnicastFramesFilter);
 3241              		.loc 1 1711 0
 3242 0168 D7F89020 		ldr	r2, [r7, #144]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3243              		.loc 1 1704 0
 3244 016c 7B68     		ldr	r3, [r7, #4]
 3245 016e 1B68     		ldr	r3, [r3]
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.MulticastFramesFilter |
 3246              		.loc 1 1710 0
 3247 0170 0A43     		orrs	r2, r2, r1
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 3248              		.loc 1 1704 0
 3249 0172 5A60     		str	r2, [r3, #4]
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFFR;
 3250              		.loc 1 1715 0
 3251 0174 7B68     		ldr	r3, [r7, #4]
 3252 0176 1B68     		ldr	r3, [r3]
 3253 0178 5B68     		ldr	r3, [r3, #4]
 3254 017a C7F8BC30 		str	r3, [r7, #188]
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 3255              		.loc 1 1716 0
 3256 017e 0120     		movs	r0, #1
 3257 0180 FFF7FEFF 		bl	HAL_Delay
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFFR = tmpreg;
 3258              		.loc 1 1717 0
 3259 0184 7B68     		ldr	r3, [r7, #4]
 3260 0186 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cctGrkQx.s 			page 89


 3261 0188 D7F8BC20 		ldr	r2, [r7, #188]
 3262 018c 5A60     		str	r2, [r3, #4]
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*--------------- ETHERNET MACHTHR and MACHTLR Configuration --------------*/
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACHTHR */
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACHTHR = (uint32_t)macinit.HashTableHigh;
 3263              		.loc 1 1721 0
 3264 018e 7B68     		ldr	r3, [r7, #4]
 3265 0190 1B68     		ldr	r3, [r3]
 3266 0192 D7F89420 		ldr	r2, [r7, #148]
 3267 0196 9A60     		str	r2, [r3, #8]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACHTLR */
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACHTLR = (uint32_t)macinit.HashTableLow;
 3268              		.loc 1 1724 0
 3269 0198 7B68     		ldr	r3, [r7, #4]
 3270 019a 1B68     		ldr	r3, [r3]
 3271 019c D7F89820 		ldr	r2, [r7, #152]
 3272 01a0 DA60     		str	r2, [r3, #12]
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACFCR Configuration -------------------*/
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Get the ETHERNET MACFCR value */  
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFCR;
 3273              		.loc 1 1728 0
 3274 01a2 7B68     		ldr	r3, [r7, #4]
 3275 01a4 1B68     		ldr	r3, [r3]
 3276 01a6 9B69     		ldr	r3, [r3, #24]
 3277 01a8 C7F8BC30 		str	r3, [r7, #188]
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Clear xx bits */
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg &= ETH_MACFCR_CLEAR_MASK;
 3278              		.loc 1 1730 0
 3279 01ac D7F8BC20 		ldr	r2, [r7, #188]
 3280 01b0 4FF64173 		movw	r3, #65345
 3281 01b4 1340     		ands	r3, r3, r2
 3282 01b6 C7F8BC30 		str	r3, [r7, #188]
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the PT bit according to ETH PauseTime value */
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the DZPQ bit according to ETH ZeroQuantaPause value */
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the PLT bit according to ETH PauseLowThreshold value */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the UP bit according to ETH UnicastPauseFrameDetect value */
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the RFE bit according to ETH ReceiveFlowControl value */
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the TFE bit according to ETH TransmitFlowControl value */ 
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg |= (uint32_t)((macinit.PauseTime << 16) | 
 3283              		.loc 1 1738 0
 3284 01ba D7F89C30 		ldr	r3, [r7, #156]
 3285 01be 1A04     		lsls	r2, r3, #16
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3286              		.loc 1 1739 0
 3287 01c0 D7F8A030 		ldr	r3, [r7, #160]
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3288              		.loc 1 1738 0
 3289 01c4 1A43     		orrs	r2, r2, r3
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.PauseLowThreshold |
 3290              		.loc 1 1740 0
 3291 01c6 D7F8A430 		ldr	r3, [r7, #164]
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3292              		.loc 1 1739 0
ARM GAS  /tmp/cctGrkQx.s 			page 90


 3293 01ca 1A43     		orrs	r2, r2, r3
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.UnicastPauseFrameDetect | 
 3294              		.loc 1 1741 0
 3295 01cc D7F8A830 		ldr	r3, [r7, #168]
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.PauseLowThreshold |
 3296              		.loc 1 1740 0
 3297 01d0 1A43     		orrs	r2, r2, r3
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ReceiveFlowControl |
 3298              		.loc 1 1742 0
 3299 01d2 D7F8AC30 		ldr	r3, [r7, #172]
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.UnicastPauseFrameDetect | 
 3300              		.loc 1 1741 0
 3301 01d6 1A43     		orrs	r2, r2, r3
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.TransmitFlowControl); 
 3302              		.loc 1 1743 0
 3303 01d8 D7F8B030 		ldr	r3, [r7, #176]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ReceiveFlowControl |
 3304              		.loc 1 1742 0
 3305 01dc 1343     		orrs	r3, r3, r2
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 3306              		.loc 1 1738 0
 3307 01de D7F8BC20 		ldr	r2, [r7, #188]
 3308 01e2 1343     		orrs	r3, r3, r2
 3309 01e4 C7F8BC30 		str	r3, [r7, #188]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACFCR */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = (uint32_t)tmpreg;
 3310              		.loc 1 1746 0
 3311 01e8 7B68     		ldr	r3, [r7, #4]
 3312 01ea 1B68     		ldr	r3, [r3]
 3313 01ec D7F8BC20 		ldr	r2, [r7, #188]
 3314 01f0 9A61     		str	r2, [r3, #24]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    at least four TX_CLK/RX_CLK clock cycles */
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFCR;
 3315              		.loc 1 1750 0
 3316 01f2 7B68     		ldr	r3, [r7, #4]
 3317 01f4 1B68     		ldr	r3, [r3]
 3318 01f6 9B69     		ldr	r3, [r3, #24]
 3319 01f8 C7F8BC30 		str	r3, [r7, #188]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 3320              		.loc 1 1751 0
 3321 01fc 0120     		movs	r0, #1
 3322 01fe FFF7FEFF 		bl	HAL_Delay
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = tmpreg;
 3323              		.loc 1 1752 0
 3324 0202 7B68     		ldr	r3, [r7, #4]
 3325 0204 1B68     		ldr	r3, [r3]
 3326 0206 D7F8BC20 		ldr	r2, [r7, #188]
 3327 020a 9A61     		str	r2, [r3, #24]
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACVLANTR Configuration ----------------*/
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the ETV bit according to ETH VLANTagComparison value */
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the VL bit according to ETH VLANTagIdentifier value */  
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACVLANTR = (uint32_t)(macinit.VLANTagComparison | 
 3328              		.loc 1 1757 0
ARM GAS  /tmp/cctGrkQx.s 			page 91


 3329 020c D7F8B410 		ldr	r1, [r7, #180]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                             macinit.VLANTagIdentifier);
 3330              		.loc 1 1758 0
 3331 0210 D7F8B820 		ldr	r2, [r7, #184]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                             macinit.VLANTagIdentifier);
 3332              		.loc 1 1757 0
 3333 0214 7B68     		ldr	r3, [r7, #4]
 3334 0216 1B68     		ldr	r3, [r3]
 3335 0218 0A43     		orrs	r2, r2, r1
 3336 021a DA61     		str	r2, [r3, #28]
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        at least four TX_CLK/RX_CLK clock cycles */
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACVLANTR;
 3337              		.loc 1 1762 0
 3338 021c 7B68     		ldr	r3, [r7, #4]
 3339 021e 1B68     		ldr	r3, [r3]
 3340 0220 DB69     		ldr	r3, [r3, #28]
 3341 0222 C7F8BC30 		str	r3, [r7, #188]
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 3342              		.loc 1 1763 0
 3343 0226 0120     		movs	r0, #1
 3344 0228 FFF7FEFF 		bl	HAL_Delay
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACVLANTR = tmpreg;
 3345              		.loc 1 1764 0
 3346 022c 7B68     		ldr	r3, [r7, #4]
 3347 022e 1B68     		ldr	r3, [r3]
 3348 0230 D7F8BC20 		ldr	r2, [r7, #188]
 3349 0234 DA61     		str	r2, [r3, #28]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Ethernet DMA default initialization ************************************/
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DropTCPIPChecksumErrorFrame = ETH_DROPTCPIPCHECKSUMERRORFRAME_ENABLE;
 3350              		.loc 1 1767 0
 3351 0236 0023     		movs	r3, #0
 3352 0238 BB60     		str	r3, [r7, #8]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ReceiveStoreForward = ETH_RECEIVESTOREFORWARD_ENABLE;
 3353              		.loc 1 1768 0
 3354 023a 4FF00073 		mov	r3, #33554432
 3355 023e FB60     		str	r3, [r7, #12]
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.FlushReceivedFrame = ETH_FLUSHRECEIVEDFRAME_ENABLE;
 3356              		.loc 1 1769 0
 3357 0240 0023     		movs	r3, #0
 3358 0242 3B61     		str	r3, [r7, #16]
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TransmitStoreForward = ETH_TRANSMITSTOREFORWARD_ENABLE;  
 3359              		.loc 1 1770 0
 3360 0244 4FF40013 		mov	r3, #2097152
 3361 0248 7B61     		str	r3, [r7, #20]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TransmitThresholdControl = ETH_TRANSMITTHRESHOLDCONTROL_64BYTES;
 3362              		.loc 1 1771 0
 3363 024a 0023     		movs	r3, #0
 3364 024c BB61     		str	r3, [r7, #24]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ForwardErrorFrames = ETH_FORWARDERRORFRAMES_DISABLE;
 3365              		.loc 1 1772 0
 3366 024e 0023     		movs	r3, #0
 3367 0250 FB61     		str	r3, [r7, #28]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ForwardUndersizedGoodFrames = ETH_FORWARDUNDERSIZEDGOODFRAMES_DISABLE;
 3368              		.loc 1 1773 0
ARM GAS  /tmp/cctGrkQx.s 			page 92


 3369 0252 0023     		movs	r3, #0
 3370 0254 3B62     		str	r3, [r7, #32]
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ReceiveThresholdControl = ETH_RECEIVEDTHRESHOLDCONTROL_64BYTES;
 3371              		.loc 1 1774 0
 3372 0256 0023     		movs	r3, #0
 3373 0258 7B62     		str	r3, [r7, #36]
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.SecondFrameOperate = ETH_SECONDFRAMEOPERARTE_ENABLE;
 3374              		.loc 1 1775 0
 3375 025a 0423     		movs	r3, #4
 3376 025c BB62     		str	r3, [r7, #40]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.AddressAlignedBeats = ETH_ADDRESSALIGNEDBEATS_ENABLE;
 3377              		.loc 1 1776 0
 3378 025e 4FF00073 		mov	r3, #33554432
 3379 0262 FB62     		str	r3, [r7, #44]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.FixedBurst = ETH_FIXEDBURST_ENABLE;
 3380              		.loc 1 1777 0
 3381 0264 4FF48033 		mov	r3, #65536
 3382 0268 3B63     		str	r3, [r7, #48]
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.RxDMABurstLength = ETH_RXDMABURSTLENGTH_32BEAT;
 3383              		.loc 1 1778 0
 3384 026a 4FF48003 		mov	r3, #4194304
 3385 026e 7B63     		str	r3, [r7, #52]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TxDMABurstLength = ETH_TXDMABURSTLENGTH_32BEAT;
 3386              		.loc 1 1779 0
 3387 0270 4FF40053 		mov	r3, #8192
 3388 0274 BB63     		str	r3, [r7, #56]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.EnhancedDescriptorFormat = ETH_DMAENHANCEDDESCRIPTOR_ENABLE;
 3389              		.loc 1 1780 0
 3390 0276 8023     		movs	r3, #128
 3391 0278 FB63     		str	r3, [r7, #60]
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DescriptorSkipLength = 0x0;
 3392              		.loc 1 1781 0
 3393 027a 0023     		movs	r3, #0
 3394 027c 3B64     		str	r3, [r7, #64]
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DMAArbitration = ETH_DMAARBITRATION_ROUNDROBIN_RXTX_1_1;
 3395              		.loc 1 1782 0
 3396 027e 0023     		movs	r3, #0
 3397 0280 7B64     		str	r3, [r7, #68]
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET DMAOMR value */
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->DMAOMR;
 3398              		.loc 1 1785 0
 3399 0282 7B68     		ldr	r3, [r7, #4]
 3400 0284 1A68     		ldr	r2, [r3]
 3401 0286 41F21803 		movw	r3, #4120
 3402 028a 1344     		add	r3, r3, r2
 3403 028c 1B68     		ldr	r3, [r3]
 3404 028e C7F8BC30 		str	r3, [r7, #188]
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear xx bits */
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ETH_DMAOMR_CLEAR_MASK;
 3405              		.loc 1 1787 0
 3406 0292 D7F8BC20 		ldr	r2, [r7, #188]
 3407 0296 3D4B     		ldr	r3, .L128+4
 3408 0298 1340     		ands	r3, r3, r2
 3409 029a C7F8BC30 		str	r3, [r7, #188]
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DT bit according to ETH DropTCPIPChecksumErrorFrame value */
ARM GAS  /tmp/cctGrkQx.s 			page 93


1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RSF bit according to ETH ReceiveStoreForward value */
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DFF bit according to ETH FlushReceivedFrame value */
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the TSF bit according to ETH TransmitStoreForward value */
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the TTC bit according to ETH TransmitThresholdControl value */
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FEF bit according to ETH ForwardErrorFrames value */
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FUF bit according to ETH ForwardUndersizedGoodFrames value */
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RTC bit according to ETH ReceiveThresholdControl value */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the OSF bit according to ETH SecondFrameOperate value */
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(dmainit.DropTCPIPChecksumErrorFrame | 
 3410              		.loc 1 1798 0
 3411 029e BA68     		ldr	r2, [r7, #8]
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3412              		.loc 1 1799 0
 3413 02a0 FB68     		ldr	r3, [r7, #12]
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3414              		.loc 1 1798 0
 3415 02a2 1A43     		orrs	r2, r2, r3
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.FlushReceivedFrame |
 3416              		.loc 1 1800 0
 3417 02a4 3B69     		ldr	r3, [r7, #16]
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3418              		.loc 1 1799 0
 3419 02a6 1A43     		orrs	r2, r2, r3
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitStoreForward | 
 3420              		.loc 1 1801 0
 3421 02a8 7B69     		ldr	r3, [r7, #20]
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.FlushReceivedFrame |
 3422              		.loc 1 1800 0
 3423 02aa 1A43     		orrs	r2, r2, r3
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitThresholdControl |
 3424              		.loc 1 1802 0
 3425 02ac BB69     		ldr	r3, [r7, #24]
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitStoreForward | 
 3426              		.loc 1 1801 0
 3427 02ae 1A43     		orrs	r2, r2, r3
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardErrorFrames |
 3428              		.loc 1 1803 0
 3429 02b0 FB69     		ldr	r3, [r7, #28]
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitThresholdControl |
 3430              		.loc 1 1802 0
 3431 02b2 1A43     		orrs	r2, r2, r3
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardUndersizedGoodFrames |
 3432              		.loc 1 1804 0
 3433 02b4 3B6A     		ldr	r3, [r7, #32]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardErrorFrames |
 3434              		.loc 1 1803 0
 3435 02b6 1A43     		orrs	r2, r2, r3
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveThresholdControl |
 3436              		.loc 1 1805 0
 3437 02b8 7B6A     		ldr	r3, [r7, #36]
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardUndersizedGoodFrames |
 3438              		.loc 1 1804 0
 3439 02ba 1A43     		orrs	r2, r2, r3
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.SecondFrameOperate);
 3440              		.loc 1 1806 0
 3441 02bc BB6A     		ldr	r3, [r7, #40]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveThresholdControl |
ARM GAS  /tmp/cctGrkQx.s 			page 94


 3442              		.loc 1 1805 0
 3443 02be 1343     		orrs	r3, r3, r2
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 3444              		.loc 1 1798 0
 3445 02c0 D7F8BC20 		ldr	r2, [r7, #188]
 3446 02c4 1343     		orrs	r3, r3, r2
 3447 02c6 C7F8BC30 		str	r3, [r7, #188]
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET DMAOMR */
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = (uint32_t)tmpreg;
 3448              		.loc 1 1809 0
 3449 02ca 7B68     		ldr	r3, [r7, #4]
 3450 02cc 1A68     		ldr	r2, [r3]
 3451 02ce 41F21803 		movw	r3, #4120
 3452 02d2 1344     		add	r3, r3, r2
 3453 02d4 D7F8BC20 		ldr	r2, [r7, #188]
 3454 02d8 1A60     		str	r2, [r3]
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        at least four TX_CLK/RX_CLK clock cycles */
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->DMAOMR;
 3455              		.loc 1 1813 0
 3456 02da 7B68     		ldr	r3, [r7, #4]
 3457 02dc 1A68     		ldr	r2, [r3]
 3458 02de 41F21803 		movw	r3, #4120
 3459 02e2 1344     		add	r3, r3, r2
 3460 02e4 1B68     		ldr	r3, [r3]
 3461 02e6 C7F8BC30 		str	r3, [r7, #188]
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 3462              		.loc 1 1814 0
 3463 02ea 0120     		movs	r0, #1
 3464 02ec FFF7FEFF 		bl	HAL_Delay
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = tmpreg;
 3465              		.loc 1 1815 0
 3466 02f0 7B68     		ldr	r3, [r7, #4]
 3467 02f2 1A68     		ldr	r2, [r3]
 3468 02f4 41F21803 		movw	r3, #4120
 3469 02f8 1344     		add	r3, r3, r2
 3470 02fa D7F8BC20 		ldr	r2, [r7, #188]
 3471 02fe 1A60     		str	r2, [r3]
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*----------------------- ETHERNET DMABMR Configuration ------------------*/
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the AAL bit according to ETH AddressAlignedBeats value */
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FB bit according to ETH FixedBurst value */
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RPBL and 4*PBL bits according to ETH RxDMABurstLength value */
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the PBL and 4*PBL bits according to ETH TxDMABurstLength value */
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the Enhanced DMA descriptors bit according to ETH EnhancedDescriptorFormat value*/
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DSL bit according to ETH DesciptorSkipLength value */
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the PR and DA bits according to ETH DMAArbitration value */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMABMR = (uint32_t)(dmainit.AddressAlignedBeats | 
 3472              		.loc 1 1825 0
 3473 0300 FA6A     		ldr	r2, [r7, #44]
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3474              		.loc 1 1826 0
 3475 0302 3B6B     		ldr	r3, [r7, #48]
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3476              		.loc 1 1825 0
ARM GAS  /tmp/cctGrkQx.s 			page 95


 3477 0304 1A43     		orrs	r2, r2, r3
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
 3478              		.loc 1 1827 0
 3479 0306 7B6B     		ldr	r3, [r7, #52]
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3480              		.loc 1 1826 0
 3481 0308 1A43     		orrs	r2, r2, r3
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.TxDMABurstLength |
 3482              		.loc 1 1828 0
 3483 030a BB6B     		ldr	r3, [r7, #56]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
 3484              		.loc 1 1827 0
 3485 030c 1A43     		orrs	r2, r2, r3
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.EnhancedDescriptorFormat |
 3486              		.loc 1 1829 0
 3487 030e FB6B     		ldr	r3, [r7, #60]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.TxDMABurstLength |
 3488              		.loc 1 1828 0
 3489 0310 1A43     		orrs	r2, r2, r3
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           (dmainit.DescriptorSkipLength << 2) |
 3490              		.loc 1 1830 0
 3491 0312 3B6C     		ldr	r3, [r7, #64]
 3492 0314 9B00     		lsls	r3, r3, #2
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.EnhancedDescriptorFormat |
 3493              		.loc 1 1829 0
 3494 0316 1A43     		orrs	r2, r2, r3
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.DMAArbitration |
 3495              		.loc 1 1831 0
 3496 0318 7B6C     		ldr	r3, [r7, #68]
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           (dmainit.DescriptorSkipLength << 2) |
 3497              		.loc 1 1830 0
 3498 031a 1A43     		orrs	r2, r2, r3
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 3499              		.loc 1 1825 0
 3500 031c 7B68     		ldr	r3, [r7, #4]
 3501 031e 1B68     		ldr	r3, [r3]
 3502 0320 42F40002 		orr	r2, r2, #8388608
 3503 0324 03F58053 		add	r3, r3, #4096
 3504 0328 1A60     		str	r2, [r3]
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account:
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         at least four TX_CLK/RX_CLK clock cycles */
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->DMABMR;
 3505              		.loc 1 1836 0
 3506 032a 7B68     		ldr	r3, [r7, #4]
 3507 032c 1B68     		ldr	r3, [r3]
 3508 032e 03F58053 		add	r3, r3, #4096
 3509 0332 1B68     		ldr	r3, [r3]
 3510 0334 C7F8BC30 		str	r3, [r7, #188]
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 3511              		.loc 1 1837 0
 3512 0338 0120     		movs	r0, #1
 3513 033a FFF7FEFF 		bl	HAL_Delay
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->DMABMR = tmpreg;
 3514              		.loc 1 1838 0
 3515 033e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cctGrkQx.s 			page 96


 3516 0340 1B68     		ldr	r3, [r3]
 3517 0342 03F58053 		add	r3, r3, #4096
 3518 0346 D7F8BC20 		ldr	r2, [r7, #188]
 3519 034a 1A60     		str	r2, [r3]
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      if((heth->Init).RxMode == ETH_RXINTERRUPT_MODE)
 3520              		.loc 1 1840 0
 3521 034c 7B68     		ldr	r3, [r7, #4]
 3522 034e 9B69     		ldr	r3, [r3, #24]
 3523 0350 012B     		cmp	r3, #1
 3524 0352 0DD1     		bne	.L127
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      {
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        /* Enable the Ethernet Rx Interrupt */
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        __HAL_ETH_DMA_ENABLE_IT((heth), ETH_DMA_IT_NIS | ETH_DMA_IT_R);
 3525              		.loc 1 1843 0
 3526 0354 7B68     		ldr	r3, [r7, #4]
 3527 0356 1A68     		ldr	r2, [r3]
 3528 0358 41F21C03 		movw	r3, #4124
 3529 035c 1344     		add	r3, r3, r2
 3530 035e 1B68     		ldr	r3, [r3]
 3531 0360 7A68     		ldr	r2, [r7, #4]
 3532 0362 1168     		ldr	r1, [r2]
 3533 0364 0A4A     		ldr	r2, .L128+8
 3534 0366 1A43     		orrs	r2, r2, r3
 3535 0368 41F21C03 		movw	r3, #4124
 3536 036c 0B44     		add	r3, r3, r1
 3537 036e 1A60     		str	r2, [r3]
 3538              	.L127:
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      }
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Initialize MAC address in ethernet MAC */ 
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      ETH_MACAddressConfig(heth, ETH_MAC_ADDRESS0, heth->Init.MACAddr);
 3539              		.loc 1 1847 0
 3540 0370 7B68     		ldr	r3, [r7, #4]
 3541 0372 5B69     		ldr	r3, [r3, #20]
 3542 0374 1A46     		mov	r2, r3
 3543 0376 0021     		movs	r1, #0
 3544 0378 7868     		ldr	r0, [r7, #4]
 3545 037a FFF7FEFF 		bl	ETH_MACAddressConfig
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3546              		.loc 1 1848 0
 3547 037e 00BF     		nop
 3548 0380 C037     		adds	r7, r7, #192
 3549              	.LCFI114:
 3550              		.cfi_def_cfa_offset 8
 3551 0382 BD46     		mov	sp, r7
 3552              	.LCFI115:
 3553              		.cfi_def_cfa_register 13
 3554              		@ sp needed
 3555 0384 80BD     		pop	{r7, pc}
 3556              	.L129:
 3557 0386 00BF     		.align	2
 3558              	.L128:
 3559 0388 0F8120FF 		.word	-14647025
 3560 038c 233FDEF8 		.word	-119652573
 3561 0390 40000100 		.word	65600
 3562              		.cfi_endproc
ARM GAS  /tmp/cctGrkQx.s 			page 97


 3563              	.LFE158:
 3565              		.section	.text.ETH_MACAddressConfig,"ax",%progbits
 3566              		.align	1
 3567              		.syntax unified
 3568              		.thumb
 3569              		.thumb_func
 3570              		.fpu fpv4-sp-d16
 3572              	ETH_MACAddressConfig:
 3573              	.LFB159:
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Configures the selected MAC address.
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  MacAddr The MAC address to configure
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This parameter can be one of the following values:
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address0: MAC Address0 
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address1: MAC Address1 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address2: MAC Address2
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address3: MAC Address3
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  Addr Pointer to MAC address buffer data (6 bytes)
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr)
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 3574              		.loc 1 1864 0
 3575              		.cfi_startproc
 3576              		@ args = 0, pretend = 0, frame = 24
 3577              		@ frame_needed = 1, uses_anonymous_args = 0
 3578              		@ link register save eliminated.
 3579 0000 80B4     		push	{r7}
 3580              	.LCFI116:
 3581              		.cfi_def_cfa_offset 4
 3582              		.cfi_offset 7, -4
 3583 0002 87B0     		sub	sp, sp, #28
 3584              	.LCFI117:
 3585              		.cfi_def_cfa_offset 32
 3586 0004 00AF     		add	r7, sp, #0
 3587              	.LCFI118:
 3588              		.cfi_def_cfa_register 7
 3589 0006 F860     		str	r0, [r7, #12]
 3590 0008 B960     		str	r1, [r7, #8]
 3591 000a 7A60     		str	r2, [r7, #4]
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg;
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the parameters */
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_MAC_ADDRESS0123(MacAddr));
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Calculate the selected MAC address high register */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = ((uint32_t)Addr[5] << 8) | (uint32_t)Addr[4];
 3592              		.loc 1 1871 0
 3593 000c 7B68     		ldr	r3, [r7, #4]
 3594 000e 0533     		adds	r3, r3, #5
 3595 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3596 0012 1B02     		lsls	r3, r3, #8
 3597 0014 7A68     		ldr	r2, [r7, #4]
 3598 0016 0432     		adds	r2, r2, #4
ARM GAS  /tmp/cctGrkQx.s 			page 98


 3599 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3600 001a 1343     		orrs	r3, r3, r2
 3601 001c 7B61     		str	r3, [r7, #20]
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Load the selected MAC address high register */
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (*(__IO uint32_t *)((uint32_t)(ETH_MAC_ADDR_HBASE + MacAddr))) = tmpreg;
 3602              		.loc 1 1873 0
 3603 001e BA68     		ldr	r2, [r7, #8]
 3604 0020 114B     		ldr	r3, .L131
 3605 0022 1344     		add	r3, r3, r2
 3606 0024 1A46     		mov	r2, r3
 3607 0026 7B69     		ldr	r3, [r7, #20]
 3608 0028 1360     		str	r3, [r2]
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Calculate the selected MAC address low register */
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = ((uint32_t)Addr[3] << 24) | ((uint32_t)Addr[2] << 16) | ((uint32_t)Addr[1] << 8) | Addr[
 3609              		.loc 1 1875 0
 3610 002a 7B68     		ldr	r3, [r7, #4]
 3611 002c 0333     		adds	r3, r3, #3
 3612 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3613 0030 1A06     		lsls	r2, r3, #24
 3614 0032 7B68     		ldr	r3, [r7, #4]
 3615 0034 0233     		adds	r3, r3, #2
 3616 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3617 0038 1B04     		lsls	r3, r3, #16
 3618 003a 1A43     		orrs	r2, r2, r3
 3619 003c 7B68     		ldr	r3, [r7, #4]
 3620 003e 0133     		adds	r3, r3, #1
 3621 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3622 0042 1B02     		lsls	r3, r3, #8
 3623 0044 1343     		orrs	r3, r3, r2
 3624 0046 7A68     		ldr	r2, [r7, #4]
 3625 0048 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3626 004a 1343     		orrs	r3, r3, r2
 3627 004c 7B61     		str	r3, [r7, #20]
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Load the selected MAC address low register */
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (*(__IO uint32_t *)((uint32_t)(ETH_MAC_ADDR_LBASE + MacAddr))) = tmpreg;
 3628              		.loc 1 1878 0
 3629 004e BA68     		ldr	r2, [r7, #8]
 3630 0050 064B     		ldr	r3, .L131+4
 3631 0052 1344     		add	r3, r3, r2
 3632 0054 1A46     		mov	r2, r3
 3633 0056 7B69     		ldr	r3, [r7, #20]
 3634 0058 1360     		str	r3, [r2]
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3635              		.loc 1 1879 0
 3636 005a 00BF     		nop
 3637 005c 1C37     		adds	r7, r7, #28
 3638              	.LCFI119:
 3639              		.cfi_def_cfa_offset 4
 3640 005e BD46     		mov	sp, r7
 3641              	.LCFI120:
 3642              		.cfi_def_cfa_register 13
 3643              		@ sp needed
 3644 0060 5DF8047B 		ldr	r7, [sp], #4
 3645              	.LCFI121:
 3646              		.cfi_restore 7
 3647              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cctGrkQx.s 			page 99


 3648 0064 7047     		bx	lr
 3649              	.L132:
 3650 0066 00BF     		.align	2
 3651              	.L131:
 3652 0068 40800240 		.word	1073905728
 3653 006c 44800240 		.word	1073905732
 3654              		.cfi_endproc
 3655              	.LFE159:
 3657              		.section	.text.ETH_MACTransmissionEnable,"ax",%progbits
 3658              		.align	1
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3662              		.fpu fpv4-sp-d16
 3664              	ETH_MACTransmissionEnable:
 3665              	.LFB160:
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the MAC transmission.
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth)
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3666              		.loc 1 1888 0
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 16
 3669              		@ frame_needed = 1, uses_anonymous_args = 0
 3670 0000 80B5     		push	{r7, lr}
 3671              	.LCFI122:
 3672              		.cfi_def_cfa_offset 8
 3673              		.cfi_offset 7, -8
 3674              		.cfi_offset 14, -4
 3675 0002 84B0     		sub	sp, sp, #16
 3676              	.LCFI123:
 3677              		.cfi_def_cfa_offset 24
 3678 0004 00AF     		add	r7, sp, #0
 3679              	.LCFI124:
 3680              		.cfi_def_cfa_register 7
 3681 0006 7860     		str	r0, [r7, #4]
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3682              		.loc 1 1889 0
 3683 0008 0023     		movs	r3, #0
 3684 000a FB60     		str	r3, [r7, #12]
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the MAC transmission */
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR |= ETH_MACCR_TE;
 3685              		.loc 1 1892 0
 3686 000c 7B68     		ldr	r3, [r7, #4]
 3687 000e 1B68     		ldr	r3, [r3]
 3688 0010 1A68     		ldr	r2, [r3]
 3689 0012 7B68     		ldr	r3, [r7, #4]
 3690 0014 1B68     		ldr	r3, [r3]
 3691 0016 42F00802 		orr	r2, r2, #8
 3692 001a 1A60     		str	r2, [r3]
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/cctGrkQx.s 			page 100


1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3693              		.loc 1 1896 0
 3694 001c 7B68     		ldr	r3, [r7, #4]
 3695 001e 1B68     		ldr	r3, [r3]
 3696 0020 1B68     		ldr	r3, [r3]
 3697 0022 FB60     		str	r3, [r7, #12]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3698              		.loc 1 1897 0
 3699 0024 0120     		movs	r0, #1
 3700 0026 FFF7FEFF 		bl	HAL_Delay
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3701              		.loc 1 1898 0
 3702 002a 7B68     		ldr	r3, [r7, #4]
 3703 002c 1B68     		ldr	r3, [r3]
 3704 002e FA68     		ldr	r2, [r7, #12]
 3705 0030 1A60     		str	r2, [r3]
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3706              		.loc 1 1899 0
 3707 0032 00BF     		nop
 3708 0034 1037     		adds	r7, r7, #16
 3709              	.LCFI125:
 3710              		.cfi_def_cfa_offset 8
 3711 0036 BD46     		mov	sp, r7
 3712              	.LCFI126:
 3713              		.cfi_def_cfa_register 13
 3714              		@ sp needed
 3715 0038 80BD     		pop	{r7, pc}
 3716              		.cfi_endproc
 3717              	.LFE160:
 3719              		.section	.text.ETH_MACTransmissionDisable,"ax",%progbits
 3720              		.align	1
 3721              		.syntax unified
 3722              		.thumb
 3723              		.thumb_func
 3724              		.fpu fpv4-sp-d16
 3726              	ETH_MACTransmissionDisable:
 3727              	.LFB161:
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the MAC transmission.
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth)
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3728              		.loc 1 1908 0
 3729              		.cfi_startproc
 3730              		@ args = 0, pretend = 0, frame = 16
 3731              		@ frame_needed = 1, uses_anonymous_args = 0
 3732 0000 80B5     		push	{r7, lr}
 3733              	.LCFI127:
 3734              		.cfi_def_cfa_offset 8
 3735              		.cfi_offset 7, -8
 3736              		.cfi_offset 14, -4
ARM GAS  /tmp/cctGrkQx.s 			page 101


 3737 0002 84B0     		sub	sp, sp, #16
 3738              	.LCFI128:
 3739              		.cfi_def_cfa_offset 24
 3740 0004 00AF     		add	r7, sp, #0
 3741              	.LCFI129:
 3742              		.cfi_def_cfa_register 7
 3743 0006 7860     		str	r0, [r7, #4]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3744              		.loc 1 1909 0
 3745 0008 0023     		movs	r3, #0
 3746 000a FB60     		str	r3, [r7, #12]
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the MAC transmission */
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR &= ~ETH_MACCR_TE;
 3747              		.loc 1 1912 0
 3748 000c 7B68     		ldr	r3, [r7, #4]
 3749 000e 1B68     		ldr	r3, [r3]
 3750 0010 1A68     		ldr	r2, [r3]
 3751 0012 7B68     		ldr	r3, [r7, #4]
 3752 0014 1B68     		ldr	r3, [r3]
 3753 0016 22F00802 		bic	r2, r2, #8
 3754 001a 1A60     		str	r2, [r3]
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3755              		.loc 1 1916 0
 3756 001c 7B68     		ldr	r3, [r7, #4]
 3757 001e 1B68     		ldr	r3, [r3]
 3758 0020 1B68     		ldr	r3, [r3]
 3759 0022 FB60     		str	r3, [r7, #12]
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3760              		.loc 1 1917 0
 3761 0024 0120     		movs	r0, #1
 3762 0026 FFF7FEFF 		bl	HAL_Delay
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3763              		.loc 1 1918 0
 3764 002a 7B68     		ldr	r3, [r7, #4]
 3765 002c 1B68     		ldr	r3, [r3]
 3766 002e FA68     		ldr	r2, [r7, #12]
 3767 0030 1A60     		str	r2, [r3]
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3768              		.loc 1 1919 0
 3769 0032 00BF     		nop
 3770 0034 1037     		adds	r7, r7, #16
 3771              	.LCFI130:
 3772              		.cfi_def_cfa_offset 8
 3773 0036 BD46     		mov	sp, r7
 3774              	.LCFI131:
 3775              		.cfi_def_cfa_register 13
 3776              		@ sp needed
 3777 0038 80BD     		pop	{r7, pc}
 3778              		.cfi_endproc
 3779              	.LFE161:
 3781              		.section	.text.ETH_MACReceptionEnable,"ax",%progbits
 3782              		.align	1
 3783              		.syntax unified
ARM GAS  /tmp/cctGrkQx.s 			page 102


 3784              		.thumb
 3785              		.thumb_func
 3786              		.fpu fpv4-sp-d16
 3788              	ETH_MACReceptionEnable:
 3789              	.LFB162:
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the MAC reception.
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth)
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3790              		.loc 1 1928 0
 3791              		.cfi_startproc
 3792              		@ args = 0, pretend = 0, frame = 16
 3793              		@ frame_needed = 1, uses_anonymous_args = 0
 3794 0000 80B5     		push	{r7, lr}
 3795              	.LCFI132:
 3796              		.cfi_def_cfa_offset 8
 3797              		.cfi_offset 7, -8
 3798              		.cfi_offset 14, -4
 3799 0002 84B0     		sub	sp, sp, #16
 3800              	.LCFI133:
 3801              		.cfi_def_cfa_offset 24
 3802 0004 00AF     		add	r7, sp, #0
 3803              	.LCFI134:
 3804              		.cfi_def_cfa_register 7
 3805 0006 7860     		str	r0, [r7, #4]
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3806              		.loc 1 1929 0
 3807 0008 0023     		movs	r3, #0
 3808 000a FB60     		str	r3, [r7, #12]
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the MAC reception */
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR |= ETH_MACCR_RE;
 3809              		.loc 1 1932 0
 3810 000c 7B68     		ldr	r3, [r7, #4]
 3811 000e 1B68     		ldr	r3, [r3]
 3812 0010 1A68     		ldr	r2, [r3]
 3813 0012 7B68     		ldr	r3, [r7, #4]
 3814 0014 1B68     		ldr	r3, [r3]
 3815 0016 42F00402 		orr	r2, r2, #4
 3816 001a 1A60     		str	r2, [r3]
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3817              		.loc 1 1936 0
 3818 001c 7B68     		ldr	r3, [r7, #4]
 3819 001e 1B68     		ldr	r3, [r3]
 3820 0020 1B68     		ldr	r3, [r3]
 3821 0022 FB60     		str	r3, [r7, #12]
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3822              		.loc 1 1937 0
 3823 0024 0120     		movs	r0, #1
ARM GAS  /tmp/cctGrkQx.s 			page 103


 3824 0026 FFF7FEFF 		bl	HAL_Delay
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3825              		.loc 1 1938 0
 3826 002a 7B68     		ldr	r3, [r7, #4]
 3827 002c 1B68     		ldr	r3, [r3]
 3828 002e FA68     		ldr	r2, [r7, #12]
 3829 0030 1A60     		str	r2, [r3]
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3830              		.loc 1 1939 0
 3831 0032 00BF     		nop
 3832 0034 1037     		adds	r7, r7, #16
 3833              	.LCFI135:
 3834              		.cfi_def_cfa_offset 8
 3835 0036 BD46     		mov	sp, r7
 3836              	.LCFI136:
 3837              		.cfi_def_cfa_register 13
 3838              		@ sp needed
 3839 0038 80BD     		pop	{r7, pc}
 3840              		.cfi_endproc
 3841              	.LFE162:
 3843              		.section	.text.ETH_MACReceptionDisable,"ax",%progbits
 3844              		.align	1
 3845              		.syntax unified
 3846              		.thumb
 3847              		.thumb_func
 3848              		.fpu fpv4-sp-d16
 3850              	ETH_MACReceptionDisable:
 3851              	.LFB163:
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the MAC reception.
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth)
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3852              		.loc 1 1948 0
 3853              		.cfi_startproc
 3854              		@ args = 0, pretend = 0, frame = 16
 3855              		@ frame_needed = 1, uses_anonymous_args = 0
 3856 0000 80B5     		push	{r7, lr}
 3857              	.LCFI137:
 3858              		.cfi_def_cfa_offset 8
 3859              		.cfi_offset 7, -8
 3860              		.cfi_offset 14, -4
 3861 0002 84B0     		sub	sp, sp, #16
 3862              	.LCFI138:
 3863              		.cfi_def_cfa_offset 24
 3864 0004 00AF     		add	r7, sp, #0
 3865              	.LCFI139:
 3866              		.cfi_def_cfa_register 7
 3867 0006 7860     		str	r0, [r7, #4]
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 3868              		.loc 1 1949 0
 3869 0008 0023     		movs	r3, #0
 3870 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cctGrkQx.s 			page 104


1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the MAC reception */
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR &= ~ETH_MACCR_RE; 
 3871              		.loc 1 1952 0
 3872 000c 7B68     		ldr	r3, [r7, #4]
 3873 000e 1B68     		ldr	r3, [r3]
 3874 0010 1A68     		ldr	r2, [r3]
 3875 0012 7B68     		ldr	r3, [r7, #4]
 3876 0014 1B68     		ldr	r3, [r3]
 3877 0016 22F00402 		bic	r2, r2, #4
 3878 001a 1A60     		str	r2, [r3]
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
 3879              		.loc 1 1956 0
 3880 001c 7B68     		ldr	r3, [r7, #4]
 3881 001e 1B68     		ldr	r3, [r3]
 3882 0020 1B68     		ldr	r3, [r3]
 3883 0022 FB60     		str	r3, [r7, #12]
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 3884              		.loc 1 1957 0
 3885 0024 0120     		movs	r0, #1
 3886 0026 FFF7FEFF 		bl	HAL_Delay
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 3887              		.loc 1 1958 0
 3888 002a 7B68     		ldr	r3, [r7, #4]
 3889 002c 1B68     		ldr	r3, [r3]
 3890 002e FA68     		ldr	r2, [r7, #12]
 3891 0030 1A60     		str	r2, [r3]
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3892              		.loc 1 1959 0
 3893 0032 00BF     		nop
 3894 0034 1037     		adds	r7, r7, #16
 3895              	.LCFI140:
 3896              		.cfi_def_cfa_offset 8
 3897 0036 BD46     		mov	sp, r7
 3898              	.LCFI141:
 3899              		.cfi_def_cfa_register 13
 3900              		@ sp needed
 3901 0038 80BD     		pop	{r7, pc}
 3902              		.cfi_endproc
 3903              	.LFE163:
 3905              		.section	.text.ETH_DMATransmissionEnable,"ax",%progbits
 3906              		.align	1
 3907              		.syntax unified
 3908              		.thumb
 3909              		.thumb_func
 3910              		.fpu fpv4-sp-d16
 3912              	ETH_DMATransmissionEnable:
 3913              	.LFB164:
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the DMA transmission.
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
ARM GAS  /tmp/cctGrkQx.s 			page 105


1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth)
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 3914              		.loc 1 1968 0
 3915              		.cfi_startproc
 3916              		@ args = 0, pretend = 0, frame = 8
 3917              		@ frame_needed = 1, uses_anonymous_args = 0
 3918              		@ link register save eliminated.
 3919 0000 80B4     		push	{r7}
 3920              	.LCFI142:
 3921              		.cfi_def_cfa_offset 4
 3922              		.cfi_offset 7, -4
 3923 0002 83B0     		sub	sp, sp, #12
 3924              	.LCFI143:
 3925              		.cfi_def_cfa_offset 16
 3926 0004 00AF     		add	r7, sp, #0
 3927              	.LCFI144:
 3928              		.cfi_def_cfa_register 7
 3929 0006 7860     		str	r0, [r7, #4]
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the DMA transmission */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_ST;  
 3930              		.loc 1 1970 0
 3931 0008 7B68     		ldr	r3, [r7, #4]
 3932 000a 1A68     		ldr	r2, [r3]
 3933 000c 41F21803 		movw	r3, #4120
 3934 0010 1344     		add	r3, r3, r2
 3935 0012 1B68     		ldr	r3, [r3]
 3936 0014 7A68     		ldr	r2, [r7, #4]
 3937 0016 1168     		ldr	r1, [r2]
 3938 0018 43F40052 		orr	r2, r3, #8192
 3939 001c 41F21803 		movw	r3, #4120
 3940 0020 0B44     		add	r3, r3, r1
 3941 0022 1A60     		str	r2, [r3]
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3942              		.loc 1 1971 0
 3943 0024 00BF     		nop
 3944 0026 0C37     		adds	r7, r7, #12
 3945              	.LCFI145:
 3946              		.cfi_def_cfa_offset 4
 3947 0028 BD46     		mov	sp, r7
 3948              	.LCFI146:
 3949              		.cfi_def_cfa_register 13
 3950              		@ sp needed
 3951 002a 5DF8047B 		ldr	r7, [sp], #4
 3952              	.LCFI147:
 3953              		.cfi_restore 7
 3954              		.cfi_def_cfa_offset 0
 3955 002e 7047     		bx	lr
 3956              		.cfi_endproc
 3957              	.LFE164:
 3959              		.section	.text.ETH_DMATransmissionDisable,"ax",%progbits
 3960              		.align	1
 3961              		.syntax unified
 3962              		.thumb
 3963              		.thumb_func
 3964              		.fpu fpv4-sp-d16
 3966              	ETH_DMATransmissionDisable:
ARM GAS  /tmp/cctGrkQx.s 			page 106


 3967              	.LFB165:
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the DMA transmission.
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth)
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 3968              		.loc 1 1980 0
 3969              		.cfi_startproc
 3970              		@ args = 0, pretend = 0, frame = 8
 3971              		@ frame_needed = 1, uses_anonymous_args = 0
 3972              		@ link register save eliminated.
 3973 0000 80B4     		push	{r7}
 3974              	.LCFI148:
 3975              		.cfi_def_cfa_offset 4
 3976              		.cfi_offset 7, -4
 3977 0002 83B0     		sub	sp, sp, #12
 3978              	.LCFI149:
 3979              		.cfi_def_cfa_offset 16
 3980 0004 00AF     		add	r7, sp, #0
 3981              	.LCFI150:
 3982              		.cfi_def_cfa_register 7
 3983 0006 7860     		str	r0, [r7, #4]
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the DMA transmission */
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR &= ~ETH_DMAOMR_ST;
 3984              		.loc 1 1982 0
 3985 0008 7B68     		ldr	r3, [r7, #4]
 3986 000a 1A68     		ldr	r2, [r3]
 3987 000c 41F21803 		movw	r3, #4120
 3988 0010 1344     		add	r3, r3, r2
 3989 0012 1B68     		ldr	r3, [r3]
 3990 0014 7A68     		ldr	r2, [r7, #4]
 3991 0016 1168     		ldr	r1, [r2]
 3992 0018 23F40052 		bic	r2, r3, #8192
 3993 001c 41F21803 		movw	r3, #4120
 3994 0020 0B44     		add	r3, r3, r1
 3995 0022 1A60     		str	r2, [r3]
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 3996              		.loc 1 1983 0
 3997 0024 00BF     		nop
 3998 0026 0C37     		adds	r7, r7, #12
 3999              	.LCFI151:
 4000              		.cfi_def_cfa_offset 4
 4001 0028 BD46     		mov	sp, r7
 4002              	.LCFI152:
 4003              		.cfi_def_cfa_register 13
 4004              		@ sp needed
 4005 002a 5DF8047B 		ldr	r7, [sp], #4
 4006              	.LCFI153:
 4007              		.cfi_restore 7
 4008              		.cfi_def_cfa_offset 0
 4009 002e 7047     		bx	lr
 4010              		.cfi_endproc
 4011              	.LFE165:
ARM GAS  /tmp/cctGrkQx.s 			page 107


 4013              		.section	.text.ETH_DMAReceptionEnable,"ax",%progbits
 4014              		.align	1
 4015              		.syntax unified
 4016              		.thumb
 4017              		.thumb_func
 4018              		.fpu fpv4-sp-d16
 4020              	ETH_DMAReceptionEnable:
 4021              	.LFB166:
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the DMA reception.
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module 
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth)
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 4022              		.loc 1 1992 0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 8
 4025              		@ frame_needed = 1, uses_anonymous_args = 0
 4026              		@ link register save eliminated.
 4027 0000 80B4     		push	{r7}
 4028              	.LCFI154:
 4029              		.cfi_def_cfa_offset 4
 4030              		.cfi_offset 7, -4
 4031 0002 83B0     		sub	sp, sp, #12
 4032              	.LCFI155:
 4033              		.cfi_def_cfa_offset 16
 4034 0004 00AF     		add	r7, sp, #0
 4035              	.LCFI156:
 4036              		.cfi_def_cfa_register 7
 4037 0006 7860     		str	r0, [r7, #4]
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the DMA reception */
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_SR;  
 4038              		.loc 1 1994 0
 4039 0008 7B68     		ldr	r3, [r7, #4]
 4040 000a 1A68     		ldr	r2, [r3]
 4041 000c 41F21803 		movw	r3, #4120
 4042 0010 1344     		add	r3, r3, r2
 4043 0012 1B68     		ldr	r3, [r3]
 4044 0014 7A68     		ldr	r2, [r7, #4]
 4045 0016 1168     		ldr	r1, [r2]
 4046 0018 43F00202 		orr	r2, r3, #2
 4047 001c 41F21803 		movw	r3, #4120
 4048 0020 0B44     		add	r3, r3, r1
 4049 0022 1A60     		str	r2, [r3]
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 4050              		.loc 1 1995 0
 4051 0024 00BF     		nop
 4052 0026 0C37     		adds	r7, r7, #12
 4053              	.LCFI157:
 4054              		.cfi_def_cfa_offset 4
 4055 0028 BD46     		mov	sp, r7
 4056              	.LCFI158:
 4057              		.cfi_def_cfa_register 13
 4058              		@ sp needed
ARM GAS  /tmp/cctGrkQx.s 			page 108


 4059 002a 5DF8047B 		ldr	r7, [sp], #4
 4060              	.LCFI159:
 4061              		.cfi_restore 7
 4062              		.cfi_def_cfa_offset 0
 4063 002e 7047     		bx	lr
 4064              		.cfi_endproc
 4065              	.LFE166:
 4067              		.section	.text.ETH_DMAReceptionDisable,"ax",%progbits
 4068              		.align	1
 4069              		.syntax unified
 4070              		.thumb
 4071              		.thumb_func
 4072              		.fpu fpv4-sp-d16
 4074              	ETH_DMAReceptionDisable:
 4075              	.LFB167:
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the DMA reception.
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module 
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth)
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 4076              		.loc 1 2004 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 8
 4079              		@ frame_needed = 1, uses_anonymous_args = 0
 4080              		@ link register save eliminated.
 4081 0000 80B4     		push	{r7}
 4082              	.LCFI160:
 4083              		.cfi_def_cfa_offset 4
 4084              		.cfi_offset 7, -4
 4085 0002 83B0     		sub	sp, sp, #12
 4086              	.LCFI161:
 4087              		.cfi_def_cfa_offset 16
 4088 0004 00AF     		add	r7, sp, #0
 4089              	.LCFI162:
 4090              		.cfi_def_cfa_register 7
 4091 0006 7860     		str	r0, [r7, #4]
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the DMA reception */
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR &= ~ETH_DMAOMR_SR;
 4092              		.loc 1 2006 0
 4093 0008 7B68     		ldr	r3, [r7, #4]
 4094 000a 1A68     		ldr	r2, [r3]
 4095 000c 41F21803 		movw	r3, #4120
 4096 0010 1344     		add	r3, r3, r2
 4097 0012 1B68     		ldr	r3, [r3]
 4098 0014 7A68     		ldr	r2, [r7, #4]
 4099 0016 1168     		ldr	r1, [r2]
 4100 0018 23F00202 		bic	r2, r3, #2
 4101 001c 41F21803 		movw	r3, #4120
 4102 0020 0B44     		add	r3, r3, r1
 4103 0022 1A60     		str	r2, [r3]
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 4104              		.loc 1 2007 0
 4105 0024 00BF     		nop
ARM GAS  /tmp/cctGrkQx.s 			page 109


 4106 0026 0C37     		adds	r7, r7, #12
 4107              	.LCFI163:
 4108              		.cfi_def_cfa_offset 4
 4109 0028 BD46     		mov	sp, r7
 4110              	.LCFI164:
 4111              		.cfi_def_cfa_register 13
 4112              		@ sp needed
 4113 002a 5DF8047B 		ldr	r7, [sp], #4
 4114              	.LCFI165:
 4115              		.cfi_restore 7
 4116              		.cfi_def_cfa_offset 0
 4117 002e 7047     		bx	lr
 4118              		.cfi_endproc
 4119              	.LFE167:
 4121              		.section	.text.ETH_FlushTransmitFIFO,"ax",%progbits
 4122              		.align	1
 4123              		.syntax unified
 4124              		.thumb
 4125              		.thumb_func
 4126              		.fpu fpv4-sp-d16
 4128              	ETH_FlushTransmitFIFO:
 4129              	.LFB168:
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Clears the ETHERNET transmit FIFO.
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth)
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 4130              		.loc 1 2016 0
 4131              		.cfi_startproc
 4132              		@ args = 0, pretend = 0, frame = 16
 4133              		@ frame_needed = 1, uses_anonymous_args = 0
 4134 0000 80B5     		push	{r7, lr}
 4135              	.LCFI166:
 4136              		.cfi_def_cfa_offset 8
 4137              		.cfi_offset 7, -8
 4138              		.cfi_offset 14, -4
 4139 0002 84B0     		sub	sp, sp, #16
 4140              	.LCFI167:
 4141              		.cfi_def_cfa_offset 24
 4142 0004 00AF     		add	r7, sp, #0
 4143              	.LCFI168:
 4144              		.cfi_def_cfa_register 7
 4145 0006 7860     		str	r0, [r7, #4]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 4146              		.loc 1 2017 0
 4147 0008 0023     		movs	r3, #0
 4148 000a FB60     		str	r3, [r7, #12]
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the Flush Transmit FIFO bit */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_FTF;
 4149              		.loc 1 2020 0
 4150 000c 7B68     		ldr	r3, [r7, #4]
 4151 000e 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cctGrkQx.s 			page 110


 4152 0010 41F21803 		movw	r3, #4120
 4153 0014 1344     		add	r3, r3, r2
 4154 0016 1B68     		ldr	r3, [r3]
 4155 0018 7A68     		ldr	r2, [r7, #4]
 4156 001a 1168     		ldr	r1, [r2]
 4157 001c 43F48012 		orr	r2, r3, #1048576
 4158 0020 41F21803 		movw	r3, #4120
 4159 0024 0B44     		add	r3, r3, r1
 4160 0026 1A60     		str	r2, [r3]
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 4161              		.loc 1 2024 0
 4162 0028 7B68     		ldr	r3, [r7, #4]
 4163 002a 1A68     		ldr	r2, [r3]
 4164 002c 41F21803 		movw	r3, #4120
 4165 0030 1344     		add	r3, r3, r2
 4166 0032 1B68     		ldr	r3, [r3]
 4167 0034 FB60     		str	r3, [r7, #12]
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 4168              		.loc 1 2025 0
 4169 0036 0120     		movs	r0, #1
 4170 0038 FFF7FEFF 		bl	HAL_Delay
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
 4171              		.loc 1 2026 0
 4172 003c 7B68     		ldr	r3, [r7, #4]
 4173 003e 1968     		ldr	r1, [r3]
 4174 0040 FA68     		ldr	r2, [r7, #12]
 4175 0042 41F21803 		movw	r3, #4120
 4176 0046 0B44     		add	r3, r3, r1
 4177 0048 1A60     		str	r2, [r3]
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 4178              		.loc 1 2027 0
 4179 004a 00BF     		nop
 4180 004c 1037     		adds	r7, r7, #16
 4181              	.LCFI169:
 4182              		.cfi_def_cfa_offset 8
 4183 004e BD46     		mov	sp, r7
 4184              	.LCFI170:
 4185              		.cfi_def_cfa_register 13
 4186              		@ sp needed
 4187 0050 80BD     		pop	{r7, pc}
 4188              		.cfi_endproc
 4189              	.LFE168:
 4191              		.text
 4192              	.Letext0:
 4193              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4194              		.file 3 "/usr/include/newlib/sys/lock.h"
 4195              		.file 4 "/usr/include/newlib/sys/_types.h"
 4196              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 4197              		.file 6 "/usr/include/newlib/sys/reent.h"
 4198              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 4199              		.file 8 "Inc/main.h"
 4200              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 4201              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4202              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
ARM GAS  /tmp/cctGrkQx.s 			page 111


 4203              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4204              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4205              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
ARM GAS  /tmp/cctGrkQx.s 			page 112


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_eth.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
     /tmp/cctGrkQx.s:21     .text.HAL_ETH_Init:0000000000000000 $t
     /tmp/cctGrkQx.s:28     .text.HAL_ETH_Init:0000000000000000 HAL_ETH_Init
     /tmp/cctGrkQx.s:887    .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/cctGrkQx.s:2061   .text.HAL_ETH_WritePHYRegister:0000000000000000 HAL_ETH_WritePHYRegister
     /tmp/cctGrkQx.s:2998   .text.ETH_MACDMAConfig:0000000000000000 ETH_MACDMAConfig
     /tmp/cctGrkQx.s:1911   .text.HAL_ETH_ReadPHYRegister:0000000000000000 HAL_ETH_ReadPHYRegister
     /tmp/cctGrkQx.s:435    .text.HAL_ETH_Init:00000000000002b8 $d
     /tmp/cctGrkQx.s:445    .text.HAL_ETH_Init:00000000000002d8 $t
     /tmp/cctGrkQx.s:508    .text.HAL_ETH_DeInit:0000000000000000 $t
     /tmp/cctGrkQx.s:515    .text.HAL_ETH_DeInit:0000000000000000 HAL_ETH_DeInit
     /tmp/cctGrkQx.s:930    .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
     /tmp/cctGrkQx.s:564    .text.HAL_ETH_DMATxDescListInit:0000000000000000 $t
     /tmp/cctGrkQx.s:571    .text.HAL_ETH_DMATxDescListInit:0000000000000000 HAL_ETH_DMATxDescListInit
     /tmp/cctGrkQx.s:720    .text.HAL_ETH_DMARxDescListInit:0000000000000000 $t
     /tmp/cctGrkQx.s:727    .text.HAL_ETH_DMARxDescListInit:0000000000000000 HAL_ETH_DMARxDescListInit
     /tmp/cctGrkQx.s:880    .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/cctGrkQx.s:923    .text.HAL_ETH_MspDeInit:0000000000000000 $t
     /tmp/cctGrkQx.s:966    .text.HAL_ETH_TransmitFrame:0000000000000000 $t
     /tmp/cctGrkQx.s:973    .text.HAL_ETH_TransmitFrame:0000000000000000 HAL_ETH_TransmitFrame
     /tmp/cctGrkQx.s:1254   .text.HAL_ETH_TransmitFrame:00000000000001cc $d
     /tmp/cctGrkQx.s:1260   .text.HAL_ETH_GetReceivedFrame:0000000000000000 $t
     /tmp/cctGrkQx.s:1267   .text.HAL_ETH_GetReceivedFrame:0000000000000000 HAL_ETH_GetReceivedFrame
     /tmp/cctGrkQx.s:1449   .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 $t
     /tmp/cctGrkQx.s:1456   .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 HAL_ETH_GetReceivedFrame_IT
     /tmp/cctGrkQx.s:1644   .text.HAL_ETH_IRQHandler:0000000000000000 $t
     /tmp/cctGrkQx.s:1651   .text.HAL_ETH_IRQHandler:0000000000000000 HAL_ETH_IRQHandler
     /tmp/cctGrkQx.s:1825   .text.HAL_ETH_RxCpltCallback:0000000000000000 HAL_ETH_RxCpltCallback
     /tmp/cctGrkQx.s:1782   .text.HAL_ETH_TxCpltCallback:0000000000000000 HAL_ETH_TxCpltCallback
     /tmp/cctGrkQx.s:1868   .text.HAL_ETH_ErrorCallback:0000000000000000 HAL_ETH_ErrorCallback
     /tmp/cctGrkQx.s:1775   .text.HAL_ETH_TxCpltCallback:0000000000000000 $t
     /tmp/cctGrkQx.s:1818   .text.HAL_ETH_RxCpltCallback:0000000000000000 $t
     /tmp/cctGrkQx.s:1861   .text.HAL_ETH_ErrorCallback:0000000000000000 $t
     /tmp/cctGrkQx.s:1904   .text.HAL_ETH_ReadPHYRegister:0000000000000000 $t
     /tmp/cctGrkQx.s:2054   .text.HAL_ETH_WritePHYRegister:0000000000000000 $t
     /tmp/cctGrkQx.s:2202   .text.HAL_ETH_Start:0000000000000000 $t
     /tmp/cctGrkQx.s:2209   .text.HAL_ETH_Start:0000000000000000 HAL_ETH_Start
     /tmp/cctGrkQx.s:3664   .text.ETH_MACTransmissionEnable:0000000000000000 ETH_MACTransmissionEnable
     /tmp/cctGrkQx.s:3788   .text.ETH_MACReceptionEnable:0000000000000000 ETH_MACReceptionEnable
     /tmp/cctGrkQx.s:4128   .text.ETH_FlushTransmitFIFO:0000000000000000 ETH_FlushTransmitFIFO
     /tmp/cctGrkQx.s:3912   .text.ETH_DMATransmissionEnable:0000000000000000 ETH_DMATransmissionEnable
     /tmp/cctGrkQx.s:4020   .text.ETH_DMAReceptionEnable:0000000000000000 ETH_DMAReceptionEnable
     /tmp/cctGrkQx.s:2284   .text.HAL_ETH_Stop:0000000000000000 $t
     /tmp/cctGrkQx.s:2291   .text.HAL_ETH_Stop:0000000000000000 HAL_ETH_Stop
     /tmp/cctGrkQx.s:3966   .text.ETH_DMATransmissionDisable:0000000000000000 ETH_DMATransmissionDisable
     /tmp/cctGrkQx.s:4074   .text.ETH_DMAReceptionDisable:0000000000000000 ETH_DMAReceptionDisable
     /tmp/cctGrkQx.s:3850   .text.ETH_MACReceptionDisable:0000000000000000 ETH_MACReceptionDisable
     /tmp/cctGrkQx.s:3726   .text.ETH_MACTransmissionDisable:0000000000000000 ETH_MACTransmissionDisable
     /tmp/cctGrkQx.s:2366   .text.HAL_ETH_ConfigMAC:0000000000000000 $t
     /tmp/cctGrkQx.s:2373   .text.HAL_ETH_ConfigMAC:0000000000000000 HAL_ETH_ConfigMAC
     /tmp/cctGrkQx.s:2727   .text.HAL_ETH_ConfigMAC:00000000000001f0 $d
     /tmp/cctGrkQx.s:2732   .text.HAL_ETH_ConfigDMA:0000000000000000 $t
     /tmp/cctGrkQx.s:2739   .text.HAL_ETH_ConfigDMA:0000000000000000 HAL_ETH_ConfigDMA
ARM GAS  /tmp/cctGrkQx.s 			page 113


     /tmp/cctGrkQx.s:2940   .text.HAL_ETH_ConfigDMA:000000000000011c $d
     /tmp/cctGrkQx.s:2945   .text.HAL_ETH_GetState:0000000000000000 $t
     /tmp/cctGrkQx.s:2952   .text.HAL_ETH_GetState:0000000000000000 HAL_ETH_GetState
     /tmp/cctGrkQx.s:2992   .text.ETH_MACDMAConfig:0000000000000000 $t
     /tmp/cctGrkQx.s:3572   .text.ETH_MACAddressConfig:0000000000000000 ETH_MACAddressConfig
     /tmp/cctGrkQx.s:3559   .text.ETH_MACDMAConfig:0000000000000388 $d
     /tmp/cctGrkQx.s:3566   .text.ETH_MACAddressConfig:0000000000000000 $t
     /tmp/cctGrkQx.s:3652   .text.ETH_MACAddressConfig:0000000000000068 $d
     /tmp/cctGrkQx.s:3658   .text.ETH_MACTransmissionEnable:0000000000000000 $t
     /tmp/cctGrkQx.s:3720   .text.ETH_MACTransmissionDisable:0000000000000000 $t
     /tmp/cctGrkQx.s:3782   .text.ETH_MACReceptionEnable:0000000000000000 $t
     /tmp/cctGrkQx.s:3844   .text.ETH_MACReceptionDisable:0000000000000000 $t
     /tmp/cctGrkQx.s:3906   .text.ETH_DMATransmissionEnable:0000000000000000 $t
     /tmp/cctGrkQx.s:3960   .text.ETH_DMATransmissionDisable:0000000000000000 $t
     /tmp/cctGrkQx.s:4014   .text.ETH_DMAReceptionEnable:0000000000000000 $t
     /tmp/cctGrkQx.s:4068   .text.ETH_DMAReceptionDisable:0000000000000000 $t
     /tmp/cctGrkQx.s:4122   .text.ETH_FlushTransmitFIFO:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCC_GetHCLKFreq
HAL_Delay
