ARM GAS  /tmp/ccg0eWFY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.comm	uwTick,4,4
  21              		.global	uwTickPrio
  22              		.section	.data.uwTickPrio,"aw",%progbits
  23              		.align	2
  26              	uwTickPrio:
  27 0000 10000000 		.word	16
  28              		.global	uwTickFreq
  29              		.section	.data.uwTickFreq,"aw",%progbits
  32              	uwTickFreq:
  33 0000 01       		.byte	1
  34              		.section	.text.HAL_Init,"ax",%progbits
  35              		.align	1
  36              		.global	HAL_Init
  37              		.syntax unified
  38              		.thumb
  39              		.thumb_func
  40              		.fpu fpv4-sp-d16
  42              	HAL_Init:
  43              	.LFB138:
  44              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
ARM GAS  /tmp/ccg0eWFY.s 			page 2


  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.4
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x04) /*!< [15:8]  sub2 version */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
ARM GAS  /tmp/ccg0eWFY.s 			page 3


  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Variables
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
ARM GAS  /tmp/ccg0eWFY.s 			page 4


 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  45              		.loc 1 155 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 1, uses_anonymous_args = 0
  49 0000 80B5     		push	{r7, lr}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 00AF     		add	r7, sp, #0
  55              	.LCFI1:
  56              		.cfi_def_cfa_register 7
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  57              		.loc 1 167 0
  58 0004 0320     		movs	r0, #3
  59 0006 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  60              		.loc 1 170 0
  61 000a 0020     		movs	r0, #0
  62 000c FFF7FEFF 		bl	HAL_InitTick
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
ARM GAS  /tmp/ccg0eWFY.s 			page 5


 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
  63              		.loc 1 173 0
  64 0010 FFF7FEFF 		bl	HAL_MspInit
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
  65              		.loc 1 176 0
  66 0014 0023     		movs	r3, #0
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  67              		.loc 1 177 0
  68 0016 1846     		mov	r0, r3
  69 0018 80BD     		pop	{r7, pc}
  70              		.cfi_endproc
  71              	.LFE138:
  73              		.section	.text.HAL_DeInit,"ax",%progbits
  74              		.align	1
  75              		.global	HAL_DeInit
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv4-sp-d16
  81              	HAL_DeInit:
  82              	.LFB139:
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  83              		.loc 1 185 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 00AF     		add	r7, sp, #0
  93              	.LCFI3:
  94              		.cfi_def_cfa_register 7
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
  95              		.loc 1 187 0
  96 0004 134B     		ldr	r3, .L5
  97 0006 4FF0FF32 		mov	r2, #-1
  98 000a 1A62     		str	r2, [r3, #32]
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  99              		.loc 1 188 0
 100 000c 114B     		ldr	r3, .L5
 101 000e 0022     		movs	r2, #0
 102 0010 1A62     		str	r2, [r3, #32]
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
ARM GAS  /tmp/ccg0eWFY.s 			page 6


 103              		.loc 1 190 0
 104 0012 104B     		ldr	r3, .L5
 105 0014 4FF0FF32 		mov	r2, #-1
 106 0018 5A62     		str	r2, [r3, #36]
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 107              		.loc 1 191 0
 108 001a 0E4B     		ldr	r3, .L5
 109 001c 0022     		movs	r2, #0
 110 001e 5A62     		str	r2, [r3, #36]
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 111              		.loc 1 193 0
 112 0020 0C4B     		ldr	r3, .L5
 113 0022 4FF0FF32 		mov	r2, #-1
 114 0026 1A61     		str	r2, [r3, #16]
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 115              		.loc 1 194 0
 116 0028 0A4B     		ldr	r3, .L5
 117 002a 0022     		movs	r2, #0
 118 002c 1A61     		str	r2, [r3, #16]
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 119              		.loc 1 196 0
 120 002e 094B     		ldr	r3, .L5
 121 0030 4FF0FF32 		mov	r2, #-1
 122 0034 5A61     		str	r2, [r3, #20]
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 123              		.loc 1 197 0
 124 0036 074B     		ldr	r3, .L5
 125 0038 0022     		movs	r2, #0
 126 003a 5A61     		str	r2, [r3, #20]
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 127              		.loc 1 199 0
 128 003c 054B     		ldr	r3, .L5
 129 003e 4FF0FF32 		mov	r2, #-1
 130 0042 9A61     		str	r2, [r3, #24]
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 131              		.loc 1 200 0
 132 0044 034B     		ldr	r3, .L5
 133 0046 0022     		movs	r2, #0
 134 0048 9A61     		str	r2, [r3, #24]
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 135              		.loc 1 203 0
 136 004a FFF7FEFF 		bl	HAL_MspDeInit
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 137              		.loc 1 206 0
 138 004e 0023     		movs	r3, #0
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 139              		.loc 1 207 0
 140 0050 1846     		mov	r0, r3
 141 0052 80BD     		pop	{r7, pc}
 142              	.L6:
ARM GAS  /tmp/ccg0eWFY.s 			page 7


 143              		.align	2
 144              	.L5:
 145 0054 00380240 		.word	1073887232
 146              		.cfi_endproc
 147              	.LFE139:
 149              		.section	.text.HAL_MspInit,"ax",%progbits
 150              		.align	1
 151              		.weak	HAL_MspInit
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv4-sp-d16
 157              	HAL_MspInit:
 158              	.LFB140:
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 159              		.loc 1 214 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0000 80B4     		push	{r7}
 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 4
 167              		.cfi_offset 7, -4
 168 0002 00AF     		add	r7, sp, #0
 169              	.LCFI5:
 170              		.cfi_def_cfa_register 7
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 171              		.loc 1 218 0
 172 0004 00BF     		nop
 173 0006 BD46     		mov	sp, r7
 174              	.LCFI6:
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0008 5DF8047B 		ldr	r7, [sp], #4
 178              	.LCFI7:
 179              		.cfi_restore 7
 180              		.cfi_def_cfa_offset 0
 181 000c 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE140:
 185              		.section	.text.HAL_MspDeInit,"ax",%progbits
 186              		.align	1
 187              		.weak	HAL_MspDeInit
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccg0eWFY.s 			page 8


 193              	HAL_MspDeInit:
 194              	.LFB141:
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 195              		.loc 1 225 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              	.LCFI8:
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 7, -4
 204 0002 00AF     		add	r7, sp, #0
 205              	.LCFI9:
 206              		.cfi_def_cfa_register 7
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 207              		.loc 1 229 0
 208 0004 00BF     		nop
 209 0006 BD46     		mov	sp, r7
 210              	.LCFI10:
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 0008 5DF8047B 		ldr	r7, [sp], #4
 214              	.LCFI11:
 215              		.cfi_restore 7
 216              		.cfi_def_cfa_offset 0
 217 000c 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE141:
 221              		.section	.text.HAL_InitTick,"ax",%progbits
 222              		.align	1
 223              		.weak	HAL_InitTick
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	HAL_InitTick:
 230              	.LFB142:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
ARM GAS  /tmp/ccg0eWFY.s 			page 9


 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 231              		.loc 1 248 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              	.LCFI12:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 82B0     		sub	sp, sp, #8
 241              	.LCFI13:
 242              		.cfi_def_cfa_offset 16
 243 0004 00AF     		add	r7, sp, #0
 244              	.LCFI14:
 245              		.cfi_def_cfa_register 7
 246 0006 7860     		str	r0, [r7, #4]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 247              		.loc 1 250 0
 248 0008 124B     		ldr	r3, .L14
 249 000a 1A68     		ldr	r2, [r3]
 250 000c 124B     		ldr	r3, .L14+4
 251 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 252 0010 1946     		mov	r1, r3
 253 0012 4FF47A73 		mov	r3, #1000
 254 0016 B3FBF1F3 		udiv	r3, r3, r1
 255 001a B2FBF3F3 		udiv	r3, r2, r3
 256 001e 1846     		mov	r0, r3
 257 0020 FFF7FEFF 		bl	HAL_SYSTICK_Config
 258 0024 0346     		mov	r3, r0
 259 0026 002B     		cmp	r3, #0
 260 0028 01D0     		beq	.L10
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 261              		.loc 1 252 0
 262 002a 0123     		movs	r3, #1
 263 002c 0EE0     		b	.L11
 264              	.L10:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 265              		.loc 1 256 0
 266 002e 7B68     		ldr	r3, [r7, #4]
 267 0030 0F2B     		cmp	r3, #15
 268 0032 0AD8     		bhi	.L12
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
ARM GAS  /tmp/ccg0eWFY.s 			page 10


 269              		.loc 1 258 0
 270 0034 0022     		movs	r2, #0
 271 0036 7968     		ldr	r1, [r7, #4]
 272 0038 4FF0FF30 		mov	r0, #-1
 273 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 274              		.loc 1 259 0
 275 0040 064A     		ldr	r2, .L14+8
 276 0042 7B68     		ldr	r3, [r7, #4]
 277 0044 1360     		str	r3, [r2]
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 278              		.loc 1 267 0
 279 0046 0023     		movs	r3, #0
 280 0048 00E0     		b	.L11
 281              	.L12:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 282              		.loc 1 263 0
 283 004a 0123     		movs	r3, #1
 284              	.L11:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 285              		.loc 1 268 0
 286 004c 1846     		mov	r0, r3
 287 004e 0837     		adds	r7, r7, #8
 288              	.LCFI15:
 289              		.cfi_def_cfa_offset 8
 290 0050 BD46     		mov	sp, r7
 291              	.LCFI16:
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 0052 80BD     		pop	{r7, pc}
 295              	.L15:
 296              		.align	2
 297              	.L14:
 298 0054 00000000 		.word	SystemCoreClock
 299 0058 00000000 		.word	uwTickFreq
 300 005c 00000000 		.word	uwTickPrio
 301              		.cfi_endproc
 302              	.LFE142:
 304              		.section	.text.HAL_IncTick,"ax",%progbits
 305              		.align	1
 306              		.weak	HAL_IncTick
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 312              	HAL_IncTick:
 313              	.LFB143:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
ARM GAS  /tmp/ccg0eWFY.s 			page 11


 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 314              		.loc 1 307 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              	.LCFI17:
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 0002 00AF     		add	r7, sp, #0
 324              	.LCFI18:
 325              		.cfi_def_cfa_register 7
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 326              		.loc 1 308 0
 327 0004 064B     		ldr	r3, .L17
 328 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329 0008 1A46     		mov	r2, r3
 330 000a 064B     		ldr	r3, .L17+4
 331 000c 1B68     		ldr	r3, [r3]
 332 000e 1344     		add	r3, r3, r2
 333 0010 044A     		ldr	r2, .L17+4
ARM GAS  /tmp/ccg0eWFY.s 			page 12


 334 0012 1360     		str	r3, [r2]
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 335              		.loc 1 309 0
 336 0014 00BF     		nop
 337 0016 BD46     		mov	sp, r7
 338              	.LCFI19:
 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 0018 5DF8047B 		ldr	r7, [sp], #4
 342              	.LCFI20:
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 001c 7047     		bx	lr
 346              	.L18:
 347 001e 00BF     		.align	2
 348              	.L17:
 349 0020 00000000 		.word	uwTickFreq
 350 0024 00000000 		.word	uwTick
 351              		.cfi_endproc
 352              	.LFE143:
 354              		.section	.text.HAL_GetTick,"ax",%progbits
 355              		.align	1
 356              		.weak	HAL_GetTick
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	HAL_GetTick:
 363              	.LFB144:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 364              		.loc 1 318 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              	.LCFI21:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 00AF     		add	r7, sp, #0
 374              	.LCFI22:
 375              		.cfi_def_cfa_register 7
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 376              		.loc 1 319 0
 377 0004 034B     		ldr	r3, .L21
 378 0006 1B68     		ldr	r3, [r3]
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 379              		.loc 1 320 0
 380 0008 1846     		mov	r0, r3
ARM GAS  /tmp/ccg0eWFY.s 			page 13


 381 000a BD46     		mov	sp, r7
 382              	.LCFI23:
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 000c 5DF8047B 		ldr	r7, [sp], #4
 386              	.LCFI24:
 387              		.cfi_restore 7
 388              		.cfi_def_cfa_offset 0
 389 0010 7047     		bx	lr
 390              	.L22:
 391 0012 00BF     		.align	2
 392              	.L21:
 393 0014 00000000 		.word	uwTick
 394              		.cfi_endproc
 395              	.LFE144:
 397              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_GetTickPrio
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	HAL_GetTickPrio:
 406              	.LFB145:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 407              		.loc 1 327 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              	.LCFI25:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              	.LCFI26:
 418              		.cfi_def_cfa_register 7
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 419              		.loc 1 328 0
 420 0004 034B     		ldr	r3, .L25
 421 0006 1B68     		ldr	r3, [r3]
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 422              		.loc 1 329 0
 423 0008 1846     		mov	r0, r3
 424 000a BD46     		mov	sp, r7
 425              	.LCFI27:
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 000c 5DF8047B 		ldr	r7, [sp], #4
 429              	.LCFI28:
 430              		.cfi_restore 7
ARM GAS  /tmp/ccg0eWFY.s 			page 14


 431              		.cfi_def_cfa_offset 0
 432 0010 7047     		bx	lr
 433              	.L26:
 434 0012 00BF     		.align	2
 435              	.L25:
 436 0014 00000000 		.word	uwTickPrio
 437              		.cfi_endproc
 438              	.LFE145:
 440              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 441              		.align	1
 442              		.global	HAL_SetTickFreq
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	HAL_SetTickFreq:
 449              	.LFB146:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 450              		.loc 1 336 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 16
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 80B5     		push	{r7, lr}
 455              	.LCFI29:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 14, -4
 459 0002 84B0     		sub	sp, sp, #16
 460              	.LCFI30:
 461              		.cfi_def_cfa_offset 24
 462 0004 00AF     		add	r7, sp, #0
 463              	.LCFI31:
 464              		.cfi_def_cfa_register 7
 465 0006 0346     		mov	r3, r0
 466 0008 FB71     		strb	r3, [r7, #7]
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 467              		.loc 1 337 0
 468 000a 0023     		movs	r3, #0
 469 000c FB73     		strb	r3, [r7, #15]
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 470              		.loc 1 340 0
 471 000e 0A4B     		ldr	r3, .L30
 472 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 473 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 474 0014 9A42     		cmp	r2, r3
 475 0016 09D0     		beq	.L28
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 476              		.loc 1 342 0
ARM GAS  /tmp/ccg0eWFY.s 			page 15


 477 0018 074A     		ldr	r2, .L30
 478 001a FB79     		ldrb	r3, [r7, #7]
 479 001c 1370     		strb	r3, [r2]
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 480              		.loc 1 345 0
 481 001e 074B     		ldr	r3, .L30+4
 482 0020 1B68     		ldr	r3, [r3]
 483 0022 1846     		mov	r0, r3
 484 0024 FFF7FEFF 		bl	HAL_InitTick
 485 0028 0346     		mov	r3, r0
 486 002a FB73     		strb	r3, [r7, #15]
 487              	.L28:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 488              		.loc 1 348 0
 489 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 490              		.loc 1 349 0
 491 002e 1846     		mov	r0, r3
 492 0030 1037     		adds	r7, r7, #16
 493              	.LCFI32:
 494              		.cfi_def_cfa_offset 8
 495 0032 BD46     		mov	sp, r7
 496              	.LCFI33:
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed
 499 0034 80BD     		pop	{r7, pc}
 500              	.L31:
 501 0036 00BF     		.align	2
 502              	.L30:
 503 0038 00000000 		.word	uwTickFreq
 504 003c 00000000 		.word	uwTickPrio
 505              		.cfi_endproc
 506              	.LFE146:
 508              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 509              		.align	1
 510              		.global	HAL_GetTickFreq
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv4-sp-d16
 516              	HAL_GetTickFreq:
 517              	.LFB147:
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 518              		.loc 1 356 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccg0eWFY.s 			page 16


 522              		@ link register save eliminated.
 523 0000 80B4     		push	{r7}
 524              	.LCFI34:
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 00AF     		add	r7, sp, #0
 528              	.LCFI35:
 529              		.cfi_def_cfa_register 7
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 530              		.loc 1 357 0
 531 0004 034B     		ldr	r3, .L34
 532 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 533              		.loc 1 358 0
 534 0008 1846     		mov	r0, r3
 535 000a BD46     		mov	sp, r7
 536              	.LCFI36:
 537              		.cfi_def_cfa_register 13
 538              		@ sp needed
 539 000c 5DF8047B 		ldr	r7, [sp], #4
 540              	.LCFI37:
 541              		.cfi_restore 7
 542              		.cfi_def_cfa_offset 0
 543 0010 7047     		bx	lr
 544              	.L35:
 545 0012 00BF     		.align	2
 546              	.L34:
 547 0014 00000000 		.word	uwTickFreq
 548              		.cfi_endproc
 549              	.LFE147:
 551              		.section	.text.HAL_Delay,"ax",%progbits
 552              		.align	1
 553              		.weak	HAL_Delay
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv4-sp-d16
 559              	HAL_Delay:
 560              	.LFB148:
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 561              		.loc 1 372 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccg0eWFY.s 			page 17


 565 0000 80B5     		push	{r7, lr}
 566              	.LCFI38:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 84B0     		sub	sp, sp, #16
 571              	.LCFI39:
 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI40:
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 577              		.loc 1 373 0
 578 0008 FFF7FEFF 		bl	HAL_GetTick
 579 000c B860     		str	r0, [r7, #8]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 580              		.loc 1 374 0
 581 000e 7B68     		ldr	r3, [r7, #4]
 582 0010 FB60     		str	r3, [r7, #12]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 583              		.loc 1 377 0
 584 0012 FB68     		ldr	r3, [r7, #12]
 585 0014 B3F1FF3F 		cmp	r3, #-1
 586 0018 05D0     		beq	.L39
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 587              		.loc 1 379 0
 588 001a 094B     		ldr	r3, .L40
 589 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 590 001e 1A46     		mov	r2, r3
 591 0020 FB68     		ldr	r3, [r7, #12]
 592 0022 1344     		add	r3, r3, r2
 593 0024 FB60     		str	r3, [r7, #12]
 594              	.L39:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 595              		.loc 1 382 0
 596 0026 00BF     		nop
 597              	.L38:
 598              		.loc 1 382 0 is_stmt 0 discriminator 1
 599 0028 FFF7FEFF 		bl	HAL_GetTick
 600 002c 0246     		mov	r2, r0
 601 002e BB68     		ldr	r3, [r7, #8]
 602 0030 D31A     		subs	r3, r2, r3
 603 0032 FA68     		ldr	r2, [r7, #12]
 604 0034 9A42     		cmp	r2, r3
 605 0036 F7D8     		bhi	.L38
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 606              		.loc 1 385 0 is_stmt 1
 607 0038 00BF     		nop
 608 003a 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccg0eWFY.s 			page 18


 609              	.LCFI41:
 610              		.cfi_def_cfa_offset 8
 611 003c BD46     		mov	sp, r7
 612              	.LCFI42:
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 003e 80BD     		pop	{r7, pc}
 616              	.L41:
 617              		.align	2
 618              	.L40:
 619 0040 00000000 		.word	uwTickFreq
 620              		.cfi_endproc
 621              	.LFE148:
 623              		.section	.text.HAL_SuspendTick,"ax",%progbits
 624              		.align	1
 625              		.weak	HAL_SuspendTick
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu fpv4-sp-d16
 631              	HAL_SuspendTick:
 632              	.LFB149:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 633              		.loc 1 398 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638 0000 80B4     		push	{r7}
 639              	.LCFI43:
 640              		.cfi_def_cfa_offset 4
 641              		.cfi_offset 7, -4
 642 0002 00AF     		add	r7, sp, #0
 643              	.LCFI44:
 644              		.cfi_def_cfa_register 7
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 645              		.loc 1 400 0
 646 0004 054B     		ldr	r3, .L43
 647 0006 1B68     		ldr	r3, [r3]
 648 0008 044A     		ldr	r2, .L43
 649 000a 23F00203 		bic	r3, r3, #2
 650 000e 1360     		str	r3, [r2]
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 651              		.loc 1 401 0
ARM GAS  /tmp/ccg0eWFY.s 			page 19


 652 0010 00BF     		nop
 653 0012 BD46     		mov	sp, r7
 654              	.LCFI45:
 655              		.cfi_def_cfa_register 13
 656              		@ sp needed
 657 0014 5DF8047B 		ldr	r7, [sp], #4
 658              	.LCFI46:
 659              		.cfi_restore 7
 660              		.cfi_def_cfa_offset 0
 661 0018 7047     		bx	lr
 662              	.L44:
 663 001a 00BF     		.align	2
 664              	.L43:
 665 001c 10E000E0 		.word	-536813552
 666              		.cfi_endproc
 667              	.LFE149:
 669              		.section	.text.HAL_ResumeTick,"ax",%progbits
 670              		.align	1
 671              		.weak	HAL_ResumeTick
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	HAL_ResumeTick:
 678              	.LFB150:
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 679              		.loc 1 414 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684 0000 80B4     		push	{r7}
 685              	.LCFI47:
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 0002 00AF     		add	r7, sp, #0
 689              	.LCFI48:
 690              		.cfi_def_cfa_register 7
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 691              		.loc 1 416 0
 692 0004 054B     		ldr	r3, .L46
 693 0006 1B68     		ldr	r3, [r3]
 694 0008 044A     		ldr	r2, .L46
 695 000a 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/ccg0eWFY.s 			page 20


 696 000e 1360     		str	r3, [r2]
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 697              		.loc 1 417 0
 698 0010 00BF     		nop
 699 0012 BD46     		mov	sp, r7
 700              	.LCFI49:
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0014 5DF8047B 		ldr	r7, [sp], #4
 704              	.LCFI50:
 705              		.cfi_restore 7
 706              		.cfi_def_cfa_offset 0
 707 0018 7047     		bx	lr
 708              	.L47:
 709 001a 00BF     		.align	2
 710              	.L46:
 711 001c 10E000E0 		.word	-536813552
 712              		.cfi_endproc
 713              	.LFE150:
 715              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_GetHalVersion
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	HAL_GetHalVersion:
 724              	.LFB151:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 725              		.loc 1 424 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0000 80B4     		push	{r7}
 731              	.LCFI51:
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 0002 00AF     		add	r7, sp, #0
 735              	.LCFI52:
 736              		.cfi_def_cfa_register 7
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 737              		.loc 1 425 0
 738 0004 024B     		ldr	r3, .L50
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 739              		.loc 1 426 0
 740 0006 1846     		mov	r0, r3
 741 0008 BD46     		mov	sp, r7
 742              	.LCFI53:
 743              		.cfi_def_cfa_register 13
 744              		@ sp needed
ARM GAS  /tmp/ccg0eWFY.s 			page 21


 745 000a 5DF8047B 		ldr	r7, [sp], #4
 746              	.LCFI54:
 747              		.cfi_restore 7
 748              		.cfi_def_cfa_offset 0
 749 000e 7047     		bx	lr
 750              	.L51:
 751              		.align	2
 752              	.L50:
 753 0010 00040201 		.word	16909312
 754              		.cfi_endproc
 755              	.LFE151:
 757              		.section	.text.HAL_GetREVID,"ax",%progbits
 758              		.align	1
 759              		.global	HAL_GetREVID
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 763              		.fpu fpv4-sp-d16
 765              	HAL_GetREVID:
 766              	.LFB152:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 767              		.loc 1 433 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0000 80B4     		push	{r7}
 773              	.LCFI55:
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 7, -4
 776 0002 00AF     		add	r7, sp, #0
 777              	.LCFI56:
 778              		.cfi_def_cfa_register 7
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 779              		.loc 1 434 0
 780 0004 034B     		ldr	r3, .L54
 781 0006 1B68     		ldr	r3, [r3]
 782 0008 1B0C     		lsrs	r3, r3, #16
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 783              		.loc 1 435 0
 784 000a 1846     		mov	r0, r3
 785 000c BD46     		mov	sp, r7
 786              	.LCFI57:
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 000e 5DF8047B 		ldr	r7, [sp], #4
 790              	.LCFI58:
 791              		.cfi_restore 7
 792              		.cfi_def_cfa_offset 0
 793 0012 7047     		bx	lr
 794              	.L55:
ARM GAS  /tmp/ccg0eWFY.s 			page 22


 795              		.align	2
 796              	.L54:
 797 0014 002004E0 		.word	-536600576
 798              		.cfi_endproc
 799              	.LFE152:
 801              		.section	.text.HAL_GetDEVID,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_GetDEVID
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	HAL_GetDEVID:
 810              	.LFB153:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 811              		.loc 1 442 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 80B4     		push	{r7}
 817              	.LCFI59:
 818              		.cfi_def_cfa_offset 4
 819              		.cfi_offset 7, -4
 820 0002 00AF     		add	r7, sp, #0
 821              	.LCFI60:
 822              		.cfi_def_cfa_register 7
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 823              		.loc 1 443 0
 824 0004 044B     		ldr	r3, .L58
 825 0006 1B68     		ldr	r3, [r3]
 826 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 827              		.loc 1 444 0
 828 000c 1846     		mov	r0, r3
 829 000e BD46     		mov	sp, r7
 830              	.LCFI61:
 831              		.cfi_def_cfa_register 13
 832              		@ sp needed
 833 0010 5DF8047B 		ldr	r7, [sp], #4
 834              	.LCFI62:
 835              		.cfi_restore 7
 836              		.cfi_def_cfa_offset 0
 837 0014 7047     		bx	lr
 838              	.L59:
 839 0016 00BF     		.align	2
 840              	.L58:
 841 0018 002004E0 		.word	-536600576
 842              		.cfi_endproc
 843              	.LFE153:
 845              		.section	.text.HAL_GetUIDw0,"ax",%progbits
ARM GAS  /tmp/ccg0eWFY.s 			page 23


 846              		.align	1
 847              		.global	HAL_GetUIDw0
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv4-sp-d16
 853              	HAL_GetUIDw0:
 854              	.LFB154:
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 855              		.loc 1 451 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 1, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860 0000 80B4     		push	{r7}
 861              	.LCFI63:
 862              		.cfi_def_cfa_offset 4
 863              		.cfi_offset 7, -4
 864 0002 00AF     		add	r7, sp, #0
 865              	.LCFI64:
 866              		.cfi_def_cfa_register 7
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 867              		.loc 1 452 0
 868 0004 034B     		ldr	r3, .L62
 869 0006 1B68     		ldr	r3, [r3]
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 870              		.loc 1 453 0
 871 0008 1846     		mov	r0, r3
 872 000a BD46     		mov	sp, r7
 873              	.LCFI65:
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 000c 5DF8047B 		ldr	r7, [sp], #4
 877              	.LCFI66:
 878              		.cfi_restore 7
 879              		.cfi_def_cfa_offset 0
 880 0010 7047     		bx	lr
 881              	.L63:
 882 0012 00BF     		.align	2
 883              	.L62:
 884 0014 20F4F01F 		.word	535884832
 885              		.cfi_endproc
 886              	.LFE154:
 888              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 889              		.align	1
 890              		.global	HAL_GetUIDw1
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv4-sp-d16
 896              	HAL_GetUIDw1:
ARM GAS  /tmp/ccg0eWFY.s 			page 24


 897              	.LFB155:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 898              		.loc 1 460 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              	.LCFI67:
 905              		.cfi_def_cfa_offset 4
 906              		.cfi_offset 7, -4
 907 0002 00AF     		add	r7, sp, #0
 908              	.LCFI68:
 909              		.cfi_def_cfa_register 7
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 910              		.loc 1 461 0
 911 0004 034B     		ldr	r3, .L66
 912 0006 1B68     		ldr	r3, [r3]
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 913              		.loc 1 462 0
 914 0008 1846     		mov	r0, r3
 915 000a BD46     		mov	sp, r7
 916              	.LCFI69:
 917              		.cfi_def_cfa_register 13
 918              		@ sp needed
 919 000c 5DF8047B 		ldr	r7, [sp], #4
 920              	.LCFI70:
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 0010 7047     		bx	lr
 924              	.L67:
 925 0012 00BF     		.align	2
 926              	.L66:
 927 0014 24F4F01F 		.word	535884836
 928              		.cfi_endproc
 929              	.LFE155:
 931              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 932              		.align	1
 933              		.global	HAL_GetUIDw2
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	HAL_GetUIDw2:
 940              	.LFB156:
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
ARM GAS  /tmp/ccg0eWFY.s 			page 25


 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 941              		.loc 1 469 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945              		@ link register save eliminated.
 946 0000 80B4     		push	{r7}
 947              	.LCFI71:
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 7, -4
 950 0002 00AF     		add	r7, sp, #0
 951              	.LCFI72:
 952              		.cfi_def_cfa_register 7
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 953              		.loc 1 470 0
 954 0004 034B     		ldr	r3, .L70
 955 0006 1B68     		ldr	r3, [r3]
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 956              		.loc 1 471 0
 957 0008 1846     		mov	r0, r3
 958 000a BD46     		mov	sp, r7
 959              	.LCFI73:
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 000c 5DF8047B 		ldr	r7, [sp], #4
 963              	.LCFI74:
 964              		.cfi_restore 7
 965              		.cfi_def_cfa_offset 0
 966 0010 7047     		bx	lr
 967              	.L71:
 968 0012 00BF     		.align	2
 969              	.L70:
 970 0014 28F4F01F 		.word	535884840
 971              		.cfi_endproc
 972              	.LFE156:
 974              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 975              		.align	1
 976              		.global	HAL_DBGMCU_EnableDBGSleepMode
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu fpv4-sp-d16
 982              	HAL_DBGMCU_EnableDBGSleepMode:
 983              	.LFB157:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 984              		.loc 1 478 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 1, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccg0eWFY.s 			page 26


 990              	.LCFI75:
 991              		.cfi_def_cfa_offset 4
 992              		.cfi_offset 7, -4
 993 0002 00AF     		add	r7, sp, #0
 994              	.LCFI76:
 995              		.cfi_def_cfa_register 7
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 996              		.loc 1 479 0
 997 0004 054B     		ldr	r3, .L73
 998 0006 5B68     		ldr	r3, [r3, #4]
 999 0008 044A     		ldr	r2, .L73
 1000 000a 43F00103 		orr	r3, r3, #1
 1001 000e 5360     		str	r3, [r2, #4]
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1002              		.loc 1 480 0
 1003 0010 00BF     		nop
 1004 0012 BD46     		mov	sp, r7
 1005              	.LCFI77:
 1006              		.cfi_def_cfa_register 13
 1007              		@ sp needed
 1008 0014 5DF8047B 		ldr	r7, [sp], #4
 1009              	.LCFI78:
 1010              		.cfi_restore 7
 1011              		.cfi_def_cfa_offset 0
 1012 0018 7047     		bx	lr
 1013              	.L74:
 1014 001a 00BF     		.align	2
 1015              	.L73:
 1016 001c 002004E0 		.word	-536600576
 1017              		.cfi_endproc
 1018              	.LFE157:
 1020              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 1021              		.align	1
 1022              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu fpv4-sp-d16
 1028              	HAL_DBGMCU_DisableDBGSleepMode:
 1029              	.LFB158:
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1030              		.loc 1 487 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 80B4     		push	{r7}
 1036              	.LCFI79:
 1037              		.cfi_def_cfa_offset 4
 1038              		.cfi_offset 7, -4
 1039 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccg0eWFY.s 			page 27


 1040              	.LCFI80:
 1041              		.cfi_def_cfa_register 7
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 1042              		.loc 1 488 0
 1043 0004 054B     		ldr	r3, .L76
 1044 0006 5B68     		ldr	r3, [r3, #4]
 1045 0008 044A     		ldr	r2, .L76
 1046 000a 23F00103 		bic	r3, r3, #1
 1047 000e 5360     		str	r3, [r2, #4]
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1048              		.loc 1 489 0
 1049 0010 00BF     		nop
 1050 0012 BD46     		mov	sp, r7
 1051              	.LCFI81:
 1052              		.cfi_def_cfa_register 13
 1053              		@ sp needed
 1054 0014 5DF8047B 		ldr	r7, [sp], #4
 1055              	.LCFI82:
 1056              		.cfi_restore 7
 1057              		.cfi_def_cfa_offset 0
 1058 0018 7047     		bx	lr
 1059              	.L77:
 1060 001a 00BF     		.align	2
 1061              	.L76:
 1062 001c 002004E0 		.word	-536600576
 1063              		.cfi_endproc
 1064              	.LFE158:
 1066              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1067              		.align	1
 1068              		.global	HAL_DBGMCU_EnableDBGStopMode
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu fpv4-sp-d16
 1074              	HAL_DBGMCU_EnableDBGStopMode:
 1075              	.LFB159:
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1076              		.loc 1 496 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 0000 80B4     		push	{r7}
 1082              	.LCFI83:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
 1085 0002 00AF     		add	r7, sp, #0
 1086              	.LCFI84:
 1087              		.cfi_def_cfa_register 7
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1088              		.loc 1 497 0
ARM GAS  /tmp/ccg0eWFY.s 			page 28


 1089 0004 054B     		ldr	r3, .L79
 1090 0006 5B68     		ldr	r3, [r3, #4]
 1091 0008 044A     		ldr	r2, .L79
 1092 000a 43F00203 		orr	r3, r3, #2
 1093 000e 5360     		str	r3, [r2, #4]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1094              		.loc 1 498 0
 1095 0010 00BF     		nop
 1096 0012 BD46     		mov	sp, r7
 1097              	.LCFI85:
 1098              		.cfi_def_cfa_register 13
 1099              		@ sp needed
 1100 0014 5DF8047B 		ldr	r7, [sp], #4
 1101              	.LCFI86:
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 0018 7047     		bx	lr
 1105              	.L80:
 1106 001a 00BF     		.align	2
 1107              	.L79:
 1108 001c 002004E0 		.word	-536600576
 1109              		.cfi_endproc
 1110              	.LFE159:
 1112              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1113              		.align	1
 1114              		.global	HAL_DBGMCU_DisableDBGStopMode
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	HAL_DBGMCU_DisableDBGStopMode:
 1121              	.LFB160:
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1122              		.loc 1 505 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126              		@ link register save eliminated.
 1127 0000 80B4     		push	{r7}
 1128              	.LCFI87:
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 00AF     		add	r7, sp, #0
 1132              	.LCFI88:
 1133              		.cfi_def_cfa_register 7
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1134              		.loc 1 506 0
 1135 0004 054B     		ldr	r3, .L82
 1136 0006 5B68     		ldr	r3, [r3, #4]
 1137 0008 044A     		ldr	r2, .L82
 1138 000a 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccg0eWFY.s 			page 29


 1139 000e 5360     		str	r3, [r2, #4]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1140              		.loc 1 507 0
 1141 0010 00BF     		nop
 1142 0012 BD46     		mov	sp, r7
 1143              	.LCFI89:
 1144              		.cfi_def_cfa_register 13
 1145              		@ sp needed
 1146 0014 5DF8047B 		ldr	r7, [sp], #4
 1147              	.LCFI90:
 1148              		.cfi_restore 7
 1149              		.cfi_def_cfa_offset 0
 1150 0018 7047     		bx	lr
 1151              	.L83:
 1152 001a 00BF     		.align	2
 1153              	.L82:
 1154 001c 002004E0 		.word	-536600576
 1155              		.cfi_endproc
 1156              	.LFE160:
 1158              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1159              		.align	1
 1160              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv4-sp-d16
 1166              	HAL_DBGMCU_EnableDBGStandbyMode:
 1167              	.LFB161:
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1168              		.loc 1 514 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172              		@ link register save eliminated.
 1173 0000 80B4     		push	{r7}
 1174              	.LCFI91:
 1175              		.cfi_def_cfa_offset 4
 1176              		.cfi_offset 7, -4
 1177 0002 00AF     		add	r7, sp, #0
 1178              	.LCFI92:
 1179              		.cfi_def_cfa_register 7
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1180              		.loc 1 515 0
 1181 0004 054B     		ldr	r3, .L85
 1182 0006 5B68     		ldr	r3, [r3, #4]
 1183 0008 044A     		ldr	r2, .L85
 1184 000a 43F00403 		orr	r3, r3, #4
 1185 000e 5360     		str	r3, [r2, #4]
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1186              		.loc 1 516 0
 1187 0010 00BF     		nop
ARM GAS  /tmp/ccg0eWFY.s 			page 30


 1188 0012 BD46     		mov	sp, r7
 1189              	.LCFI93:
 1190              		.cfi_def_cfa_register 13
 1191              		@ sp needed
 1192 0014 5DF8047B 		ldr	r7, [sp], #4
 1193              	.LCFI94:
 1194              		.cfi_restore 7
 1195              		.cfi_def_cfa_offset 0
 1196 0018 7047     		bx	lr
 1197              	.L86:
 1198 001a 00BF     		.align	2
 1199              	.L85:
 1200 001c 002004E0 		.word	-536600576
 1201              		.cfi_endproc
 1202              	.LFE161:
 1204              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1205              		.align	1
 1206              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1210              		.fpu fpv4-sp-d16
 1212              	HAL_DBGMCU_DisableDBGStandbyMode:
 1213              	.LFB162:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1214              		.loc 1 523 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 1, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219 0000 80B4     		push	{r7}
 1220              	.LCFI95:
 1221              		.cfi_def_cfa_offset 4
 1222              		.cfi_offset 7, -4
 1223 0002 00AF     		add	r7, sp, #0
 1224              	.LCFI96:
 1225              		.cfi_def_cfa_register 7
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1226              		.loc 1 524 0
 1227 0004 054B     		ldr	r3, .L88
 1228 0006 5B68     		ldr	r3, [r3, #4]
 1229 0008 044A     		ldr	r2, .L88
 1230 000a 23F00403 		bic	r3, r3, #4
 1231 000e 5360     		str	r3, [r2, #4]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1232              		.loc 1 525 0
 1233 0010 00BF     		nop
 1234 0012 BD46     		mov	sp, r7
 1235              	.LCFI97:
 1236              		.cfi_def_cfa_register 13
 1237              		@ sp needed
ARM GAS  /tmp/ccg0eWFY.s 			page 31


 1238 0014 5DF8047B 		ldr	r7, [sp], #4
 1239              	.LCFI98:
 1240              		.cfi_restore 7
 1241              		.cfi_def_cfa_offset 0
 1242 0018 7047     		bx	lr
 1243              	.L89:
 1244 001a 00BF     		.align	2
 1245              	.L88:
 1246 001c 002004E0 		.word	-536600576
 1247              		.cfi_endproc
 1248              	.LFE162:
 1250              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 1251              		.align	1
 1252              		.global	HAL_EnableCompensationCell
 1253              		.syntax unified
 1254              		.thumb
 1255              		.thumb_func
 1256              		.fpu fpv4-sp-d16
 1258              	HAL_EnableCompensationCell:
 1259              	.LFB163:
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1260              		.loc 1 534 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 1, uses_anonymous_args = 0
 1264              		@ link register save eliminated.
 1265 0000 80B4     		push	{r7}
 1266              	.LCFI99:
 1267              		.cfi_def_cfa_offset 4
 1268              		.cfi_offset 7, -4
 1269 0002 00AF     		add	r7, sp, #0
 1270              	.LCFI100:
 1271              		.cfi_def_cfa_register 7
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 1272              		.loc 1 535 0
 1273 0004 054B     		ldr	r3, .L91
 1274 0006 1B6A     		ldr	r3, [r3, #32]
 1275 0008 044A     		ldr	r2, .L91
 1276 000a 43F00103 		orr	r3, r3, #1
 1277 000e 1362     		str	r3, [r2, #32]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1278              		.loc 1 536 0
 1279 0010 00BF     		nop
 1280 0012 BD46     		mov	sp, r7
 1281              	.LCFI101:
 1282              		.cfi_def_cfa_register 13
 1283              		@ sp needed
 1284 0014 5DF8047B 		ldr	r7, [sp], #4
 1285              	.LCFI102:
ARM GAS  /tmp/ccg0eWFY.s 			page 32


 1286              		.cfi_restore 7
 1287              		.cfi_def_cfa_offset 0
 1288 0018 7047     		bx	lr
 1289              	.L92:
 1290 001a 00BF     		.align	2
 1291              	.L91:
 1292 001c 00380140 		.word	1073821696
 1293              		.cfi_endproc
 1294              	.LFE163:
 1296              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1297              		.align	1
 1298              		.global	HAL_DisableCompensationCell
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	HAL_DisableCompensationCell:
 1305              	.LFB164:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1306              		.loc 1 545 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310              		@ link register save eliminated.
 1311 0000 80B4     		push	{r7}
 1312              	.LCFI103:
 1313              		.cfi_def_cfa_offset 4
 1314              		.cfi_offset 7, -4
 1315 0002 00AF     		add	r7, sp, #0
 1316              	.LCFI104:
 1317              		.cfi_def_cfa_register 7
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 1318              		.loc 1 546 0
 1319 0004 054B     		ldr	r3, .L94
 1320 0006 1B6A     		ldr	r3, [r3, #32]
 1321 0008 044A     		ldr	r2, .L94
 1322 000a 23F00103 		bic	r3, r3, #1
 1323 000e 1362     		str	r3, [r2, #32]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1324              		.loc 1 547 0
 1325 0010 00BF     		nop
 1326 0012 BD46     		mov	sp, r7
 1327              	.LCFI105:
 1328              		.cfi_def_cfa_register 13
 1329              		@ sp needed
 1330 0014 5DF8047B 		ldr	r7, [sp], #4
 1331              	.LCFI106:
 1332              		.cfi_restore 7
 1333              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccg0eWFY.s 			page 33


 1334 0018 7047     		bx	lr
 1335              	.L95:
 1336 001a 00BF     		.align	2
 1337              	.L94:
 1338 001c 00380140 		.word	1073821696
 1339              		.cfi_endproc
 1340              	.LFE164:
 1342              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 1343              		.align	1
 1344              		.global	HAL_EnableFMCMemorySwapping
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1348              		.fpu fpv4-sp-d16
 1350              	HAL_EnableFMCMemorySwapping:
 1351              	.LFB165:
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1352              		.loc 1 558 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357 0000 80B4     		push	{r7}
 1358              	.LCFI107:
 1359              		.cfi_def_cfa_offset 4
 1360              		.cfi_offset 7, -4
 1361 0002 00AF     		add	r7, sp, #0
 1362              	.LCFI108:
 1363              		.cfi_def_cfa_register 7
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 1364              		.loc 1 559 0
 1365 0004 054B     		ldr	r3, .L97
 1366 0006 1B68     		ldr	r3, [r3]
 1367 0008 044A     		ldr	r2, .L97
 1368 000a 43F48063 		orr	r3, r3, #1024
 1369 000e 1360     		str	r3, [r2]
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1370              		.loc 1 560 0
 1371 0010 00BF     		nop
 1372 0012 BD46     		mov	sp, r7
 1373              	.LCFI109:
 1374              		.cfi_def_cfa_register 13
 1375              		@ sp needed
 1376 0014 5DF8047B 		ldr	r7, [sp], #4
 1377              	.LCFI110:
 1378              		.cfi_restore 7
 1379              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccg0eWFY.s 			page 34


 1380 0018 7047     		bx	lr
 1381              	.L98:
 1382 001a 00BF     		.align	2
 1383              	.L97:
 1384 001c 00380140 		.word	1073821696
 1385              		.cfi_endproc
 1386              	.LFE165:
 1388              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 1389              		.align	1
 1390              		.global	HAL_DisableFMCMemorySwapping
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1394              		.fpu fpv4-sp-d16
 1396              	HAL_DisableFMCMemorySwapping:
 1397              	.LFB166:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1398              		.loc 1 571 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 1, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 1403 0000 80B4     		push	{r7}
 1404              	.LCFI111:
 1405              		.cfi_def_cfa_offset 4
 1406              		.cfi_offset 7, -4
 1407 0002 00AF     		add	r7, sp, #0
 1408              	.LCFI112:
 1409              		.cfi_def_cfa_register 7
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 1410              		.loc 1 573 0
 1411 0004 054B     		ldr	r3, .L100
 1412 0006 1B68     		ldr	r3, [r3]
 1413 0008 044A     		ldr	r2, .L100
 1414 000a 23F44063 		bic	r3, r3, #3072
 1415 000e 1360     		str	r3, [r2]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1416              		.loc 1 574 0
 1417 0010 00BF     		nop
 1418 0012 BD46     		mov	sp, r7
 1419              	.LCFI113:
 1420              		.cfi_def_cfa_register 13
 1421              		@ sp needed
 1422 0014 5DF8047B 		ldr	r7, [sp], #4
 1423              	.LCFI114:
 1424              		.cfi_restore 7
ARM GAS  /tmp/ccg0eWFY.s 			page 35


 1425              		.cfi_def_cfa_offset 0
 1426 0018 7047     		bx	lr
 1427              	.L101:
 1428 001a 00BF     		.align	2
 1429              	.L100:
 1430 001c 00380140 		.word	1073821696
 1431              		.cfi_endproc
 1432              	.LFE166:
 1434              		.text
 1435              	.Letext0:
 1436              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1437              		.file 3 "/usr/include/newlib/sys/lock.h"
 1438              		.file 4 "/usr/include/newlib/sys/_types.h"
 1439              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1440              		.file 6 "/usr/include/newlib/sys/reent.h"
 1441              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 1442              		.file 8 "Inc/main.h"
 1443              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1444              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1445              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1446              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1447              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccg0eWFY.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000004 uwTick
     /tmp/ccg0eWFY.s:26     .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccg0eWFY.s:23     .data.uwTickPrio:0000000000000000 $d
     /tmp/ccg0eWFY.s:32     .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccg0eWFY.s:35     .text.HAL_Init:0000000000000000 $t
     /tmp/ccg0eWFY.s:42     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccg0eWFY.s:229    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccg0eWFY.s:157    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccg0eWFY.s:74     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccg0eWFY.s:81     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccg0eWFY.s:193    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccg0eWFY.s:145    .text.HAL_DeInit:0000000000000054 $d
     /tmp/ccg0eWFY.s:150    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccg0eWFY.s:186    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccg0eWFY.s:222    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccg0eWFY.s:298    .text.HAL_InitTick:0000000000000054 $d
     /tmp/ccg0eWFY.s:305    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccg0eWFY.s:312    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccg0eWFY.s:349    .text.HAL_IncTick:0000000000000020 $d
     /tmp/ccg0eWFY.s:355    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccg0eWFY.s:362    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccg0eWFY.s:393    .text.HAL_GetTick:0000000000000014 $d
     /tmp/ccg0eWFY.s:398    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccg0eWFY.s:405    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccg0eWFY.s:436    .text.HAL_GetTickPrio:0000000000000014 $d
     /tmp/ccg0eWFY.s:441    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccg0eWFY.s:448    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccg0eWFY.s:503    .text.HAL_SetTickFreq:0000000000000038 $d
     /tmp/ccg0eWFY.s:509    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccg0eWFY.s:516    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccg0eWFY.s:547    .text.HAL_GetTickFreq:0000000000000014 $d
     /tmp/ccg0eWFY.s:552    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccg0eWFY.s:559    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccg0eWFY.s:619    .text.HAL_Delay:0000000000000040 $d
     /tmp/ccg0eWFY.s:624    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccg0eWFY.s:631    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccg0eWFY.s:665    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/ccg0eWFY.s:670    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccg0eWFY.s:677    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccg0eWFY.s:711    .text.HAL_ResumeTick:000000000000001c $d
     /tmp/ccg0eWFY.s:716    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccg0eWFY.s:723    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccg0eWFY.s:753    .text.HAL_GetHalVersion:0000000000000010 $d
     /tmp/ccg0eWFY.s:758    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccg0eWFY.s:765    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccg0eWFY.s:797    .text.HAL_GetREVID:0000000000000014 $d
     /tmp/ccg0eWFY.s:802    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccg0eWFY.s:809    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccg0eWFY.s:841    .text.HAL_GetDEVID:0000000000000018 $d
     /tmp/ccg0eWFY.s:846    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccg0eWFY.s:853    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccg0eWFY.s:884    .text.HAL_GetUIDw0:0000000000000014 $d
ARM GAS  /tmp/ccg0eWFY.s 			page 37


     /tmp/ccg0eWFY.s:889    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccg0eWFY.s:896    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccg0eWFY.s:927    .text.HAL_GetUIDw1:0000000000000014 $d
     /tmp/ccg0eWFY.s:932    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccg0eWFY.s:939    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccg0eWFY.s:970    .text.HAL_GetUIDw2:0000000000000014 $d
     /tmp/ccg0eWFY.s:975    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccg0eWFY.s:982    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccg0eWFY.s:1016   .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000001c $d
     /tmp/ccg0eWFY.s:1021   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccg0eWFY.s:1028   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccg0eWFY.s:1062   .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000001c $d
     /tmp/ccg0eWFY.s:1067   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccg0eWFY.s:1074   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccg0eWFY.s:1108   .text.HAL_DBGMCU_EnableDBGStopMode:000000000000001c $d
     /tmp/ccg0eWFY.s:1113   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccg0eWFY.s:1120   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccg0eWFY.s:1154   .text.HAL_DBGMCU_DisableDBGStopMode:000000000000001c $d
     /tmp/ccg0eWFY.s:1159   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccg0eWFY.s:1166   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccg0eWFY.s:1200   .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000001c $d
     /tmp/ccg0eWFY.s:1205   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccg0eWFY.s:1212   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccg0eWFY.s:1246   .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000001c $d
     /tmp/ccg0eWFY.s:1251   .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccg0eWFY.s:1258   .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccg0eWFY.s:1292   .text.HAL_EnableCompensationCell:000000000000001c $d
     /tmp/ccg0eWFY.s:1297   .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccg0eWFY.s:1304   .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccg0eWFY.s:1338   .text.HAL_DisableCompensationCell:000000000000001c $d
     /tmp/ccg0eWFY.s:1343   .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccg0eWFY.s:1350   .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/ccg0eWFY.s:1384   .text.HAL_EnableFMCMemorySwapping:000000000000001c $d
     /tmp/ccg0eWFY.s:1389   .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccg0eWFY.s:1396   .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/ccg0eWFY.s:1430   .text.HAL_DisableFMCMemorySwapping:000000000000001c $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
