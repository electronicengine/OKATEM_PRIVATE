ARM GAS  /tmp/cceQI9Vx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.weak	HAL_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_MspInit:
  27              	.LFB140:
  28              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/cceQI9Vx.s 			page 2


  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.4
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x04) /*!< [15:8]  sub2 version */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Variables
ARM GAS  /tmp/cceQI9Vx.s 			page 3


  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
ARM GAS  /tmp/cceQI9Vx.s 			page 4


 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/cceQI9Vx.s 			page 5


 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  29              		.loc 1 214 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  34              		.loc 1 218 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE140:
  39 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  40              		.align	1
  41              		.p2align 2,,3
  42              		.weak	HAL_MspDeInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	HAL_MspDeInit:
  49              	.LFB169:
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE169:
  58 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	1
  60              		.p2align 2,,3
  61              		.global	HAL_DeInit
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	HAL_DeInit:
  68              	.LFB139:
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  69              		.loc 1 185 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cceQI9Vx.s 			page 6


  72              		@ frame_needed = 0, uses_anonymous_args = 0
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  73              		.loc 1 185 0
  74 0000 10B5     		push	{r4, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  79              		.loc 1 187 0
  80 0002 094B     		ldr	r3, .L6
  81 0004 4FF0FF32 		mov	r2, #-1
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  82              		.loc 1 188 0
  83 0008 0024     		movs	r4, #0
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  84              		.loc 1 187 0
  85 000a 1A62     		str	r2, [r3, #32]
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  86              		.loc 1 188 0
  87 000c 1C62     		str	r4, [r3, #32]
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  88              		.loc 1 190 0
  89 000e 5A62     		str	r2, [r3, #36]
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  90              		.loc 1 191 0
  91 0010 5C62     		str	r4, [r3, #36]
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  92              		.loc 1 193 0
  93 0012 1A61     		str	r2, [r3, #16]
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  94              		.loc 1 194 0
  95 0014 1C61     		str	r4, [r3, #16]
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  96              		.loc 1 196 0
  97 0016 5A61     		str	r2, [r3, #20]
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  98              		.loc 1 197 0
  99 0018 5C61     		str	r4, [r3, #20]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 100              		.loc 1 199 0
 101 001a 9A61     		str	r2, [r3, #24]
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 102              		.loc 1 200 0
 103 001c 9C61     		str	r4, [r3, #24]
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 104              		.loc 1 203 0
 105 001e FFF7FEFF 		bl	HAL_MspDeInit
 106              	.LVL0:
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 107              		.loc 1 207 0
 108 0022 2046     		mov	r0, r4
 109 0024 10BD     		pop	{r4, pc}
 110              	.L7:
 111 0026 00BF     		.align	2
 112              	.L6:
 113 0028 00380240 		.word	1073887232
ARM GAS  /tmp/cceQI9Vx.s 			page 7


 114              		.cfi_endproc
 115              	.LFE139:
 117              		.section	.text.HAL_InitTick,"ax",%progbits
 118              		.align	1
 119              		.p2align 2,,3
 120              		.weak	HAL_InitTick
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	HAL_InitTick:
 127              	.LFB142:
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 128              		.loc 1 248 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              	.LVL1:
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 133              		.loc 1 250 0
 134 0000 0E4A     		ldr	r2, .L19
 135 0002 4FF47A73 		mov	r3, #1000
 136 0006 0E49     		ldr	r1, .L19+4
 137 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 138 000a B3FBF2F3 		udiv	r3, r3, r2
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 139              		.loc 1 248 0
ARM GAS  /tmp/cceQI9Vx.s 			page 8


 140 000e 10B5     		push	{r4, lr}
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 145              		.loc 1 248 0
 146 0010 0446     		mov	r4, r0
 147              		.loc 1 250 0
 148 0012 0868     		ldr	r0, [r1]
 149              	.LVL2:
 150 0014 B0FBF3F0 		udiv	r0, r0, r3
 151 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 152              	.LVL3:
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 153              		.loc 1 256 0
 154 001c 08B9     		cbnz	r0, .L10
 155 001e 0F2C     		cmp	r4, #15
 156 0020 01D9     		bls	.L18
 157              	.L10:
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 158              		.loc 1 263 0
 159 0022 0120     		movs	r0, #1
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 160              		.loc 1 268 0
 161 0024 10BD     		pop	{r4, pc}
 162              	.LVL4:
 163              	.L18:
 164              	.LBB4:
 165              	.LBB5:
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 166              		.loc 1 258 0
 167 0026 0022     		movs	r2, #0
 168 0028 2146     		mov	r1, r4
 169 002a 4FF0FF30 		mov	r0, #-1
 170 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 171              	.LVL5:
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 172              		.loc 1 259 0
 173 0032 044B     		ldr	r3, .L19+8
 174 0034 0020     		movs	r0, #0
 175 0036 1C60     		str	r4, [r3]
ARM GAS  /tmp/cceQI9Vx.s 			page 9


 176              	.LVL6:
 177              	.LBE5:
 178              	.LBE4:
 179              		.loc 1 268 0
 180 0038 10BD     		pop	{r4, pc}
 181              	.LVL7:
 182              	.L20:
 183 003a 00BF     		.align	2
 184              	.L19:
 185 003c 00000000 		.word	.LANCHOR0
 186 0040 00000000 		.word	SystemCoreClock
 187 0044 00000000 		.word	.LANCHOR1
 188              		.cfi_endproc
 189              	.LFE142:
 191              		.section	.text.HAL_Init,"ax",%progbits
 192              		.align	1
 193              		.p2align 2,,3
 194              		.global	HAL_Init
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	HAL_Init:
 201              	.LFB138:
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 202              		.loc 1 155 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 08B5     		push	{r3, lr}
 207              	.LCFI2:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 211              		.loc 1 167 0
 212 0002 0320     		movs	r0, #3
 213 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 214              	.LVL8:
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 215              		.loc 1 170 0
 216 0008 0020     		movs	r0, #0
 217 000a FFF7FEFF 		bl	HAL_InitTick
 218              	.LVL9:
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 219              		.loc 1 173 0
 220 000e FFF7FEFF 		bl	HAL_MspInit
 221              	.LVL10:
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 222              		.loc 1 177 0
 223 0012 0020     		movs	r0, #0
 224 0014 08BD     		pop	{r3, pc}
 225              		.cfi_endproc
 226              	.LFE138:
 228 0016 00BF     		.section	.text.HAL_IncTick,"ax",%progbits
 229              		.align	1
 230              		.p2align 2,,3
ARM GAS  /tmp/cceQI9Vx.s 			page 10


 231              		.weak	HAL_IncTick
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	HAL_IncTick:
 238              	.LFB143:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 239              		.loc 1 307 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 244              		.loc 1 308 0
 245 0000 034A     		ldr	r2, .L24
 246 0002 044B     		ldr	r3, .L24+4
 247 0004 1168     		ldr	r1, [r2]
 248 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cceQI9Vx.s 			page 11


 249 0008 0B44     		add	r3, r3, r1
 250 000a 1360     		str	r3, [r2]
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 251              		.loc 1 309 0
 252 000c 7047     		bx	lr
 253              	.L25:
 254 000e 00BF     		.align	2
 255              	.L24:
 256 0010 00000000 		.word	uwTick
 257 0014 00000000 		.word	.LANCHOR0
 258              		.cfi_endproc
 259              	.LFE143:
 261              		.section	.text.HAL_GetTick,"ax",%progbits
 262              		.align	1
 263              		.p2align 2,,3
 264              		.weak	HAL_GetTick
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	HAL_GetTick:
 271              	.LFB144:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 272              		.loc 1 318 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 277              		.loc 1 319 0
 278 0000 014B     		ldr	r3, .L27
 279 0002 1868     		ldr	r0, [r3]
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 280              		.loc 1 320 0
 281 0004 7047     		bx	lr
 282              	.L28:
 283 0006 00BF     		.align	2
 284              	.L27:
 285 0008 00000000 		.word	uwTick
 286              		.cfi_endproc
 287              	.LFE144:
 289              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 290              		.align	1
 291              		.p2align 2,,3
 292              		.global	HAL_GetTickPrio
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cceQI9Vx.s 			page 12


 298              	HAL_GetTickPrio:
 299              	.LFB145:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 300              		.loc 1 327 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 305              		.loc 1 328 0
 306 0000 014B     		ldr	r3, .L30
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 307              		.loc 1 329 0
 308 0002 1868     		ldr	r0, [r3]
 309 0004 7047     		bx	lr
 310              	.L31:
 311 0006 00BF     		.align	2
 312              	.L30:
 313 0008 00000000 		.word	.LANCHOR1
 314              		.cfi_endproc
 315              	.LFE145:
 317              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 318              		.align	1
 319              		.p2align 2,,3
 320              		.global	HAL_SetTickFreq
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	HAL_SetTickFreq:
 327              	.LFB146:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 328              		.loc 1 336 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              	.LVL11:
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI3:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/cceQI9Vx.s 			page 13


 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 338              		.loc 1 340 0
 339 0002 064B     		ldr	r3, .L36
 340 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 341 0006 8242     		cmp	r2, r0
 342 0008 05D0     		beq	.L34
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 343              		.loc 1 345 0
 344 000a 054A     		ldr	r2, .L36+4
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 345              		.loc 1 342 0
 346 000c 1870     		strb	r0, [r3]
 347              		.loc 1 345 0
 348 000e 1068     		ldr	r0, [r2]
 349              	.LVL12:
 350 0010 FFF7FEFF 		bl	HAL_InitTick
 351              	.LVL13:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 352              		.loc 1 349 0
 353 0014 08BD     		pop	{r3, pc}
 354              	.LVL14:
 355              	.L34:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 356              		.loc 1 337 0
 357 0016 0020     		movs	r0, #0
 358              	.LVL15:
 359              		.loc 1 349 0
 360 0018 08BD     		pop	{r3, pc}
 361              	.L37:
 362 001a 00BF     		.align	2
 363              	.L36:
 364 001c 00000000 		.word	.LANCHOR0
 365 0020 00000000 		.word	.LANCHOR1
 366              		.cfi_endproc
 367              	.LFE146:
 369              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 370              		.align	1
 371              		.p2align 2,,3
 372              		.global	HAL_GetTickFreq
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	HAL_GetTickFreq:
 379              	.LFB147:
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
ARM GAS  /tmp/cceQI9Vx.s 			page 14


 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 380              		.loc 1 356 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 385              		.loc 1 357 0
 386 0000 014B     		ldr	r3, .L39
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 387              		.loc 1 358 0
 388 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 389 0004 7047     		bx	lr
 390              	.L40:
 391 0006 00BF     		.align	2
 392              	.L39:
 393 0008 00000000 		.word	.LANCHOR0
 394              		.cfi_endproc
 395              	.LFE147:
 397              		.section	.text.HAL_Delay,"ax",%progbits
 398              		.align	1
 399              		.p2align 2,,3
 400              		.weak	HAL_Delay
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv4-sp-d16
 406              	HAL_Delay:
 407              	.LFB148:
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 408              		.loc 1 372 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL16:
 413 0000 38B5     		push	{r3, r4, r5, lr}
 414              	.LCFI4:
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 3, -16
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 14, -4
 420              		.loc 1 372 0
ARM GAS  /tmp/cceQI9Vx.s 			page 15


 421 0002 0446     		mov	r4, r0
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 422              		.loc 1 373 0
 423 0004 FFF7FEFF 		bl	HAL_GetTick
 424              	.LVL17:
 425 0008 0546     		mov	r5, r0
 426              	.LVL18:
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 427              		.loc 1 377 0
 428 000a 631C     		adds	r3, r4, #1
 429 000c 02D0     		beq	.L43
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 430              		.loc 1 379 0
 431 000e 044B     		ldr	r3, .L49
 432 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 433 0012 1C44     		add	r4, r4, r3
 434              	.LVL19:
 435              	.L43:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 436              		.loc 1 382 0 discriminator 1
 437 0014 FFF7FEFF 		bl	HAL_GetTick
 438              	.LVL20:
 439 0018 401B     		subs	r0, r0, r5
 440 001a A042     		cmp	r0, r4
 441 001c FAD3     		bcc	.L43
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 442              		.loc 1 385 0
 443 001e 38BD     		pop	{r3, r4, r5, pc}
 444              	.LVL21:
 445              	.L50:
 446              		.align	2
 447              	.L49:
 448 0020 00000000 		.word	.LANCHOR0
 449              		.cfi_endproc
 450              	.LFE148:
 452              		.section	.text.HAL_SuspendTick,"ax",%progbits
 453              		.align	1
 454              		.p2align 2,,3
 455              		.weak	HAL_SuspendTick
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	HAL_SuspendTick:
 462              	.LFB149:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
ARM GAS  /tmp/cceQI9Vx.s 			page 16


 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 463              		.loc 1 398 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 468              		.loc 1 400 0
 469 0000 024A     		ldr	r2, .L52
 470 0002 1368     		ldr	r3, [r2]
 471 0004 23F00203 		bic	r3, r3, #2
 472 0008 1360     		str	r3, [r2]
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 473              		.loc 1 401 0
 474 000a 7047     		bx	lr
 475              	.L53:
 476              		.align	2
 477              	.L52:
 478 000c 10E000E0 		.word	-536813552
 479              		.cfi_endproc
 480              	.LFE149:
 482              		.section	.text.HAL_ResumeTick,"ax",%progbits
 483              		.align	1
 484              		.p2align 2,,3
 485              		.weak	HAL_ResumeTick
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu fpv4-sp-d16
 491              	HAL_ResumeTick:
 492              	.LFB150:
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 493              		.loc 1 414 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cceQI9Vx.s 			page 17


 497              		@ link register save eliminated.
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 498              		.loc 1 416 0
 499 0000 024A     		ldr	r2, .L55
 500 0002 1368     		ldr	r3, [r2]
 501 0004 43F00203 		orr	r3, r3, #2
 502 0008 1360     		str	r3, [r2]
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 503              		.loc 1 417 0
 504 000a 7047     		bx	lr
 505              	.L56:
 506              		.align	2
 507              	.L55:
 508 000c 10E000E0 		.word	-536813552
 509              		.cfi_endproc
 510              	.LFE150:
 512              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 513              		.align	1
 514              		.p2align 2,,3
 515              		.global	HAL_GetHalVersion
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu fpv4-sp-d16
 521              	HAL_GetHalVersion:
 522              	.LFB151:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 523              		.loc 1 424 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 528              		.loc 1 426 0
 529 0000 0048     		ldr	r0, .L58
 530 0002 7047     		bx	lr
 531              	.L59:
 532              		.align	2
 533              	.L58:
 534 0004 00040201 		.word	16909312
 535              		.cfi_endproc
 536              	.LFE151:
 538              		.section	.text.HAL_GetREVID,"ax",%progbits
 539              		.align	1
 540              		.p2align 2,,3
 541              		.global	HAL_GetREVID
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
ARM GAS  /tmp/cceQI9Vx.s 			page 18


 545              		.fpu fpv4-sp-d16
 547              	HAL_GetREVID:
 548              	.LFB152:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 549              		.loc 1 433 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 554              		.loc 1 434 0
 555 0000 014B     		ldr	r3, .L61
 556 0002 1868     		ldr	r0, [r3]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 557              		.loc 1 435 0
 558 0004 000C     		lsrs	r0, r0, #16
 559 0006 7047     		bx	lr
 560              	.L62:
 561              		.align	2
 562              	.L61:
 563 0008 002004E0 		.word	-536600576
 564              		.cfi_endproc
 565              	.LFE152:
 567              		.section	.text.HAL_GetDEVID,"ax",%progbits
 568              		.align	1
 569              		.p2align 2,,3
 570              		.global	HAL_GetDEVID
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv4-sp-d16
 576              	HAL_GetDEVID:
 577              	.LFB153:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 578              		.loc 1 442 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 583              		.loc 1 443 0
 584 0000 024B     		ldr	r3, .L64
 585 0002 1868     		ldr	r0, [r3]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 586              		.loc 1 444 0
ARM GAS  /tmp/cceQI9Vx.s 			page 19


 587 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 588 0008 7047     		bx	lr
 589              	.L65:
 590 000a 00BF     		.align	2
 591              	.L64:
 592 000c 002004E0 		.word	-536600576
 593              		.cfi_endproc
 594              	.LFE153:
 596              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 597              		.align	1
 598              		.p2align 2,,3
 599              		.global	HAL_GetUIDw0
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	HAL_GetUIDw0:
 606              	.LFB154:
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 607              		.loc 1 451 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 612              		.loc 1 452 0
 613 0000 014B     		ldr	r3, .L67
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 614              		.loc 1 453 0
 615 0002 1868     		ldr	r0, [r3]
 616 0004 7047     		bx	lr
 617              	.L68:
 618 0006 00BF     		.align	2
 619              	.L67:
 620 0008 20F4F01F 		.word	535884832
 621              		.cfi_endproc
 622              	.LFE154:
 624              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 625              		.align	1
 626              		.p2align 2,,3
 627              		.global	HAL_GetUIDw1
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	HAL_GetUIDw1:
 634              	.LFB155:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
ARM GAS  /tmp/cceQI9Vx.s 			page 20


 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 635              		.loc 1 460 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 640              		.loc 1 461 0
 641 0000 014B     		ldr	r3, .L70
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 642              		.loc 1 462 0
 643 0002 1868     		ldr	r0, [r3]
 644 0004 7047     		bx	lr
 645              	.L71:
 646 0006 00BF     		.align	2
 647              	.L70:
 648 0008 24F4F01F 		.word	535884836
 649              		.cfi_endproc
 650              	.LFE155:
 652              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 653              		.align	1
 654              		.p2align 2,,3
 655              		.global	HAL_GetUIDw2
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	HAL_GetUIDw2:
 662              	.LFB156:
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 663              		.loc 1 469 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 668              		.loc 1 470 0
 669 0000 014B     		ldr	r3, .L73
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 670              		.loc 1 471 0
 671 0002 1868     		ldr	r0, [r3]
 672 0004 7047     		bx	lr
 673              	.L74:
 674 0006 00BF     		.align	2
 675              	.L73:
 676 0008 28F4F01F 		.word	535884840
 677              		.cfi_endproc
 678              	.LFE156:
 680              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
ARM GAS  /tmp/cceQI9Vx.s 			page 21


 681              		.align	1
 682              		.p2align 2,,3
 683              		.global	HAL_DBGMCU_EnableDBGSleepMode
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv4-sp-d16
 689              	HAL_DBGMCU_EnableDBGSleepMode:
 690              	.LFB157:
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 691              		.loc 1 478 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 696              		.loc 1 479 0
 697 0000 024A     		ldr	r2, .L76
 698 0002 5368     		ldr	r3, [r2, #4]
 699 0004 43F00103 		orr	r3, r3, #1
 700 0008 5360     		str	r3, [r2, #4]
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 701              		.loc 1 480 0
 702 000a 7047     		bx	lr
 703              	.L77:
 704              		.align	2
 705              	.L76:
 706 000c 002004E0 		.word	-536600576
 707              		.cfi_endproc
 708              	.LFE157:
 710              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 711              		.align	1
 712              		.p2align 2,,3
 713              		.global	HAL_DBGMCU_DisableDBGSleepMode
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 717              		.fpu fpv4-sp-d16
 719              	HAL_DBGMCU_DisableDBGSleepMode:
 720              	.LFB158:
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 721              		.loc 1 487 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cceQI9Vx.s 			page 22


 725              		@ link register save eliminated.
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 726              		.loc 1 488 0
 727 0000 024A     		ldr	r2, .L79
 728 0002 5368     		ldr	r3, [r2, #4]
 729 0004 23F00103 		bic	r3, r3, #1
 730 0008 5360     		str	r3, [r2, #4]
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 731              		.loc 1 489 0
 732 000a 7047     		bx	lr
 733              	.L80:
 734              		.align	2
 735              	.L79:
 736 000c 002004E0 		.word	-536600576
 737              		.cfi_endproc
 738              	.LFE158:
 740              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 741              		.align	1
 742              		.p2align 2,,3
 743              		.global	HAL_DBGMCU_EnableDBGStopMode
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	HAL_DBGMCU_EnableDBGStopMode:
 750              	.LFB159:
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 751              		.loc 1 496 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 756              		.loc 1 497 0
 757 0000 024A     		ldr	r2, .L82
 758 0002 5368     		ldr	r3, [r2, #4]
 759 0004 43F00203 		orr	r3, r3, #2
 760 0008 5360     		str	r3, [r2, #4]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 761              		.loc 1 498 0
 762 000a 7047     		bx	lr
 763              	.L83:
 764              		.align	2
 765              	.L82:
 766 000c 002004E0 		.word	-536600576
 767              		.cfi_endproc
 768              	.LFE159:
 770              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 771              		.align	1
 772              		.p2align 2,,3
 773              		.global	HAL_DBGMCU_DisableDBGStopMode
ARM GAS  /tmp/cceQI9Vx.s 			page 23


 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	HAL_DBGMCU_DisableDBGStopMode:
 780              	.LFB160:
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 781              		.loc 1 505 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 786              		.loc 1 506 0
 787 0000 024A     		ldr	r2, .L85
 788 0002 5368     		ldr	r3, [r2, #4]
 789 0004 23F00203 		bic	r3, r3, #2
 790 0008 5360     		str	r3, [r2, #4]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 791              		.loc 1 507 0
 792 000a 7047     		bx	lr
 793              	.L86:
 794              		.align	2
 795              	.L85:
 796 000c 002004E0 		.word	-536600576
 797              		.cfi_endproc
 798              	.LFE160:
 800              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 801              		.align	1
 802              		.p2align 2,,3
 803              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	HAL_DBGMCU_EnableDBGStandbyMode:
 810              	.LFB161:
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 811              		.loc 1 514 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 816              		.loc 1 515 0
ARM GAS  /tmp/cceQI9Vx.s 			page 24


 817 0000 024A     		ldr	r2, .L88
 818 0002 5368     		ldr	r3, [r2, #4]
 819 0004 43F00403 		orr	r3, r3, #4
 820 0008 5360     		str	r3, [r2, #4]
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 821              		.loc 1 516 0
 822 000a 7047     		bx	lr
 823              	.L89:
 824              		.align	2
 825              	.L88:
 826 000c 002004E0 		.word	-536600576
 827              		.cfi_endproc
 828              	.LFE161:
 830              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 831              		.align	1
 832              		.p2align 2,,3
 833              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu fpv4-sp-d16
 839              	HAL_DBGMCU_DisableDBGStandbyMode:
 840              	.LFB162:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 841              		.loc 1 523 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 846              		.loc 1 524 0
 847 0000 024A     		ldr	r2, .L91
 848 0002 5368     		ldr	r3, [r2, #4]
 849 0004 23F00403 		bic	r3, r3, #4
 850 0008 5360     		str	r3, [r2, #4]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 851              		.loc 1 525 0
 852 000a 7047     		bx	lr
 853              	.L92:
 854              		.align	2
 855              	.L91:
 856 000c 002004E0 		.word	-536600576
 857              		.cfi_endproc
 858              	.LFE162:
 860              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 861              		.align	1
 862              		.p2align 2,,3
 863              		.global	HAL_EnableCompensationCell
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
ARM GAS  /tmp/cceQI9Vx.s 			page 25


 867              		.fpu fpv4-sp-d16
 869              	HAL_EnableCompensationCell:
 870              	.LFB163:
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 871              		.loc 1 534 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 876              		.loc 1 535 0
 877 0000 024A     		ldr	r2, .L94
 878 0002 136A     		ldr	r3, [r2, #32]
 879 0004 43F00103 		orr	r3, r3, #1
 880 0008 1362     		str	r3, [r2, #32]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 881              		.loc 1 536 0
 882 000a 7047     		bx	lr
 883              	.L95:
 884              		.align	2
 885              	.L94:
 886 000c 00380140 		.word	1073821696
 887              		.cfi_endproc
 888              	.LFE163:
 890              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 891              		.align	1
 892              		.p2align 2,,3
 893              		.global	HAL_DisableCompensationCell
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	HAL_DisableCompensationCell:
 900              	.LFB164:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 901              		.loc 1 545 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
ARM GAS  /tmp/cceQI9Vx.s 			page 26


 906              		.loc 1 546 0
 907 0000 024A     		ldr	r2, .L97
 908 0002 136A     		ldr	r3, [r2, #32]
 909 0004 23F00103 		bic	r3, r3, #1
 910 0008 1362     		str	r3, [r2, #32]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 911              		.loc 1 547 0
 912 000a 7047     		bx	lr
 913              	.L98:
 914              		.align	2
 915              	.L97:
 916 000c 00380140 		.word	1073821696
 917              		.cfi_endproc
 918              	.LFE164:
 920              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 921              		.align	1
 922              		.p2align 2,,3
 923              		.global	HAL_EnableFMCMemorySwapping
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu fpv4-sp-d16
 929              	HAL_EnableFMCMemorySwapping:
 930              	.LFB165:
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 931              		.loc 1 558 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 936              		.loc 1 559 0
 937 0000 024A     		ldr	r2, .L100
 938 0002 1368     		ldr	r3, [r2]
 939 0004 43F48063 		orr	r3, r3, #1024
 940 0008 1360     		str	r3, [r2]
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 941              		.loc 1 560 0
 942 000a 7047     		bx	lr
 943              	.L101:
 944              		.align	2
 945              	.L100:
 946 000c 00380140 		.word	1073821696
 947              		.cfi_endproc
 948              	.LFE165:
 950              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 951              		.align	1
ARM GAS  /tmp/cceQI9Vx.s 			page 27


 952              		.p2align 2,,3
 953              		.global	HAL_DisableFMCMemorySwapping
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 957              		.fpu fpv4-sp-d16
 959              	HAL_DisableFMCMemorySwapping:
 960              	.LFB166:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 961              		.loc 1 571 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		@ link register save eliminated.
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 966              		.loc 1 573 0
 967 0000 024A     		ldr	r2, .L103
 968 0002 1368     		ldr	r3, [r2]
 969 0004 23F44063 		bic	r3, r3, #3072
 970 0008 1360     		str	r3, [r2]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 971              		.loc 1 574 0
 972 000a 7047     		bx	lr
 973              	.L104:
 974              		.align	2
 975              	.L103:
 976 000c 00380140 		.word	1073821696
 977              		.cfi_endproc
 978              	.LFE166:
 980              		.global	uwTickFreq
 981              		.global	uwTickPrio
 982              		.comm	uwTick,4,4
 983              		.comm	UpdateFile,4,4
 984              		.comm	SpiRxData,4,4
 985              		.comm	SpiTxData,4,4
 986              		.section	.data.uwTickFreq,"aw",%progbits
 987              		.set	.LANCHOR0,. + 0
 990              	uwTickFreq:
 991 0000 01       		.byte	1
 992              		.section	.data.uwTickPrio,"aw",%progbits
 993              		.align	2
 994              		.set	.LANCHOR1,. + 0
 997              	uwTickPrio:
 998 0000 10000000 		.word	16
 999              		.text
 1000              	.Letext0:
ARM GAS  /tmp/cceQI9Vx.s 			page 28


 1001              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1002              		.file 3 "/usr/include/newlib/sys/lock.h"
 1003              		.file 4 "/usr/include/newlib/sys/_types.h"
 1004              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1005              		.file 6 "/usr/include/newlib/sys/reent.h"
 1006              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 1007              		.file 8 "Inc/main.h"
 1008              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1009              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1010              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1011              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1012              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1013              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/cceQI9Vx.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
     /tmp/cceQI9Vx.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cceQI9Vx.s:26     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cceQI9Vx.s:40     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cceQI9Vx.s:48     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cceQI9Vx.s:59     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cceQI9Vx.s:67     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cceQI9Vx.s:113    .text.HAL_DeInit:0000000000000028 $d
     /tmp/cceQI9Vx.s:118    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cceQI9Vx.s:126    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cceQI9Vx.s:185    .text.HAL_InitTick:000000000000003c $d
     /tmp/cceQI9Vx.s:192    .text.HAL_Init:0000000000000000 $t
     /tmp/cceQI9Vx.s:200    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cceQI9Vx.s:229    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cceQI9Vx.s:237    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cceQI9Vx.s:256    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/cceQI9Vx.s:262    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cceQI9Vx.s:270    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cceQI9Vx.s:285    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cceQI9Vx.s:290    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/cceQI9Vx.s:298    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/cceQI9Vx.s:313    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/cceQI9Vx.s:318    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/cceQI9Vx.s:326    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/cceQI9Vx.s:364    .text.HAL_SetTickFreq:000000000000001c $d
     /tmp/cceQI9Vx.s:370    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/cceQI9Vx.s:378    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/cceQI9Vx.s:393    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/cceQI9Vx.s:398    .text.HAL_Delay:0000000000000000 $t
     /tmp/cceQI9Vx.s:406    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cceQI9Vx.s:448    .text.HAL_Delay:0000000000000020 $d
     /tmp/cceQI9Vx.s:453    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cceQI9Vx.s:461    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cceQI9Vx.s:478    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cceQI9Vx.s:483    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cceQI9Vx.s:491    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cceQI9Vx.s:508    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cceQI9Vx.s:513    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cceQI9Vx.s:521    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cceQI9Vx.s:534    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cceQI9Vx.s:539    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cceQI9Vx.s:547    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cceQI9Vx.s:563    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cceQI9Vx.s:568    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cceQI9Vx.s:576    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cceQI9Vx.s:592    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cceQI9Vx.s:597    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cceQI9Vx.s:605    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cceQI9Vx.s:620    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cceQI9Vx.s:625    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cceQI9Vx.s:633    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cceQI9Vx.s:648    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cceQI9Vx.s:653    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cceQI9Vx.s:661    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cceQI9Vx.s:676    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/cceQI9Vx.s 			page 30


     /tmp/cceQI9Vx.s:681    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cceQI9Vx.s:689    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cceQI9Vx.s:706    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cceQI9Vx.s:711    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cceQI9Vx.s:719    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cceQI9Vx.s:736    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cceQI9Vx.s:741    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cceQI9Vx.s:749    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cceQI9Vx.s:766    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cceQI9Vx.s:771    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cceQI9Vx.s:779    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cceQI9Vx.s:796    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cceQI9Vx.s:801    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cceQI9Vx.s:809    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cceQI9Vx.s:826    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cceQI9Vx.s:831    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cceQI9Vx.s:839    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cceQI9Vx.s:856    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/cceQI9Vx.s:861    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/cceQI9Vx.s:869    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/cceQI9Vx.s:886    .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/cceQI9Vx.s:891    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/cceQI9Vx.s:899    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/cceQI9Vx.s:916    .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/cceQI9Vx.s:921    .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/cceQI9Vx.s:929    .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/cceQI9Vx.s:946    .text.HAL_EnableFMCMemorySwapping:000000000000000c $d
     /tmp/cceQI9Vx.s:951    .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/cceQI9Vx.s:959    .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/cceQI9Vx.s:976    .text.HAL_DisableFMCMemorySwapping:000000000000000c $d
     /tmp/cceQI9Vx.s:990    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/cceQI9Vx.s:997    .data.uwTickPrio:0000000000000000 uwTickPrio
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 SpiTxData
     /tmp/cceQI9Vx.s:993    .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
