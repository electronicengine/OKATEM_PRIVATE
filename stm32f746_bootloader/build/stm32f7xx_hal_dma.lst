ARM GAS  /tmp/ccg9tGuw.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.section	.text.HAL_DMA_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_DMA_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	HAL_DMA_Init:
  29              	.LFB138:
  30              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @file    stm32f7xx_hal_dma.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *    
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
ARM GAS  /tmp/ccg9tGuw.s 			page 2


  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Polling mode IO operation ***
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Select Callbacks functions using HAL_DMA_RegisterCallback()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case the DMA interrupt is configured 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          detection.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            a single access to a Word in the Memory).
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =============================================
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @endverbatim
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @attention
ARM GAS  /tmp/ccg9tGuw.s 			page 3


  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      without specific prior written permission.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */ 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #include "stm32f7xx_hal.h"
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup STM32F7xx_HAL_Driver
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @defgroup DMA DMA
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief DMA HAL module driver
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** typedef struct
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t Reserved0;
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** } DMA_Base_Registers;
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  * @{
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  */
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)5)  /* 5 ms */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
ARM GAS  /tmp/ccg9tGuw.s 			page 4


 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */  
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     reference manual.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  31              		.loc 1 189 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 24
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccg9tGuw.s 			page 5


  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 32
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
  47              		.loc 1 190 0
  48 0008 0023     		movs	r3, #0
  49 000a 7B61     		str	r3, [r7, #20]
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
  50              		.loc 1 191 0
  51 000c FFF7FEFF 		bl	HAL_GetTick
  52 0010 3861     		str	r0, [r7, #16]
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
  53              		.loc 1 195 0
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 002B     		cmp	r3, #0
  56 0016 01D1     		bne	.L2
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
  57              		.loc 1 197 0
  58 0018 0123     		movs	r3, #1
  59 001a 99E0     		b	.L3
  60              	.L2:
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      when FIFO mode is enabled */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Allocate lock resource */
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
  61              		.loc 1 221 0
  62 001c 7B68     		ldr	r3, [r7, #4]
  63 001e 0022     		movs	r2, #0
  64 0020 83F83420 		strb	r2, [r3, #52]
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccg9tGuw.s 			page 6


 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Change DMA peripheral state */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  65              		.loc 1 224 0
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 0222     		movs	r2, #2
  68 0028 83F83520 		strb	r2, [r3, #53]
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the peripheral */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
  69              		.loc 1 227 0
  70 002c 7B68     		ldr	r3, [r7, #4]
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 1A68     		ldr	r2, [r3]
  73 0032 7B68     		ldr	r3, [r7, #4]
  74 0034 1B68     		ldr	r3, [r3]
  75 0036 22F00102 		bic	r2, r2, #1
  76 003a 1A60     		str	r2, [r3]
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
  77              		.loc 1 230 0
  78 003c 0FE0     		b	.L4
  79              	.L5:
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout */
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
  80              		.loc 1 233 0
  81 003e FFF7FEFF 		bl	HAL_GetTick
  82 0042 0246     		mov	r2, r0
  83 0044 3B69     		ldr	r3, [r7, #16]
  84 0046 D31A     		subs	r3, r2, r3
  85 0048 052B     		cmp	r3, #5
  86 004a 08D9     		bls	.L4
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
  87              		.loc 1 236 0
  88 004c 7B68     		ldr	r3, [r7, #4]
  89 004e 2022     		movs	r2, #32
  90 0050 5A65     		str	r2, [r3, #84]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
  91              		.loc 1 239 0
  92 0052 7B68     		ldr	r3, [r7, #4]
  93 0054 0322     		movs	r2, #3
  94 0056 83F83520 		strb	r2, [r3, #53]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_TIMEOUT;
  95              		.loc 1 241 0
  96 005a 0323     		movs	r3, #3
  97 005c 78E0     		b	.L3
  98              	.L4:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
  99              		.loc 1 230 0
 100 005e 7B68     		ldr	r3, [r7, #4]
 101 0060 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccg9tGuw.s 			page 7


 102 0062 1B68     		ldr	r3, [r3]
 103 0064 03F00103 		and	r3, r3, #1
 104 0068 002B     		cmp	r3, #0
 105 006a E8D1     		bne	.L5
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the CR register value */
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 106              		.loc 1 246 0
 107 006c 7B68     		ldr	r3, [r7, #4]
 108 006e 1B68     		ldr	r3, [r3]
 109 0070 1B68     		ldr	r3, [r3]
 110 0072 7B61     		str	r3, [r7, #20]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 111              		.loc 1 249 0
 112 0074 7A69     		ldr	r2, [r7, #20]
 113 0076 384B     		ldr	r3, .L8
 114 0078 1340     		ands	r3, r3, r2
 115 007a 7B61     		str	r3, [r7, #20]
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 116              		.loc 1 255 0
 117 007c 7B68     		ldr	r3, [r7, #4]
 118 007e 5A68     		ldr	r2, [r3, #4]
 119 0080 7B68     		ldr	r3, [r7, #4]
 120 0082 9B68     		ldr	r3, [r3, #8]
 121 0084 1A43     		orrs	r2, r2, r3
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 122              		.loc 1 256 0
 123 0086 7B68     		ldr	r3, [r7, #4]
 124 0088 DB68     		ldr	r3, [r3, #12]
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 125              		.loc 1 255 0
 126 008a 1A43     		orrs	r2, r2, r3
 127              		.loc 1 256 0
 128 008c 7B68     		ldr	r3, [r7, #4]
 129 008e 1B69     		ldr	r3, [r3, #16]
 130 0090 1A43     		orrs	r2, r2, r3
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 131              		.loc 1 257 0
 132 0092 7B68     		ldr	r3, [r7, #4]
 133 0094 5B69     		ldr	r3, [r3, #20]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 134              		.loc 1 256 0
 135 0096 1A43     		orrs	r2, r2, r3
 136              		.loc 1 257 0
 137 0098 7B68     		ldr	r3, [r7, #4]
 138 009a 9B69     		ldr	r3, [r3, #24]
 139 009c 1A43     		orrs	r2, r2, r3
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
ARM GAS  /tmp/ccg9tGuw.s 			page 8


 140              		.loc 1 258 0
 141 009e 7B68     		ldr	r3, [r7, #4]
 142 00a0 DB69     		ldr	r3, [r3, #28]
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 143              		.loc 1 257 0
 144 00a2 1A43     		orrs	r2, r2, r3
 145              		.loc 1 258 0
 146 00a4 7B68     		ldr	r3, [r7, #4]
 147 00a6 1B6A     		ldr	r3, [r3, #32]
 148 00a8 1343     		orrs	r3, r3, r2
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 149              		.loc 1 255 0
 150 00aa 7A69     		ldr	r2, [r7, #20]
 151 00ac 1343     		orrs	r3, r3, r2
 152 00ae 7B61     		str	r3, [r7, #20]
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 153              		.loc 1 261 0
 154 00b0 7B68     		ldr	r3, [r7, #4]
 155 00b2 5B6A     		ldr	r3, [r3, #36]
 156 00b4 042B     		cmp	r3, #4
 157 00b6 07D1     		bne	.L6
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 158              		.loc 1 264 0
 159 00b8 7B68     		ldr	r3, [r7, #4]
 160 00ba DA6A     		ldr	r2, [r3, #44]
 161 00bc 7B68     		ldr	r3, [r7, #4]
 162 00be 1B6B     		ldr	r3, [r3, #48]
 163 00c0 1343     		orrs	r3, r3, r2
 164 00c2 7A69     		ldr	r2, [r7, #20]
 165 00c4 1343     		orrs	r3, r3, r2
 166 00c6 7B61     		str	r3, [r7, #20]
 167              	.L6:
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 168              		.loc 1 268 0
 169 00c8 7B68     		ldr	r3, [r7, #4]
 170 00ca 1B68     		ldr	r3, [r3]
 171 00cc 7A69     		ldr	r2, [r7, #20]
 172 00ce 1A60     		str	r2, [r3]
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the FCR register value */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 173              		.loc 1 271 0
 174 00d0 7B68     		ldr	r3, [r7, #4]
 175 00d2 1B68     		ldr	r3, [r3]
 176 00d4 5B69     		ldr	r3, [r3, #20]
 177 00d6 7B61     		str	r3, [r7, #20]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 178              		.loc 1 274 0
ARM GAS  /tmp/ccg9tGuw.s 			page 9


 179 00d8 7B69     		ldr	r3, [r7, #20]
 180 00da 23F00703 		bic	r3, r3, #7
 181 00de 7B61     		str	r3, [r7, #20]
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 182              		.loc 1 277 0
 183 00e0 7B68     		ldr	r3, [r7, #4]
 184 00e2 5B6A     		ldr	r3, [r3, #36]
 185 00e4 7A69     		ldr	r2, [r7, #20]
 186 00e6 1343     		orrs	r3, r3, r2
 187 00e8 7B61     		str	r3, [r7, #20]
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 188              		.loc 1 280 0
 189 00ea 7B68     		ldr	r3, [r7, #4]
 190 00ec 5B6A     		ldr	r3, [r3, #36]
 191 00ee 042B     		cmp	r3, #4
 192 00f0 17D1     		bne	.L7
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the FIFO threshold */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 193              		.loc 1 283 0
 194 00f2 7B68     		ldr	r3, [r7, #4]
 195 00f4 9B6A     		ldr	r3, [r3, #40]
 196 00f6 7A69     		ldr	r2, [r7, #20]
 197 00f8 1343     		orrs	r3, r3, r2
 198 00fa 7B61     		str	r3, [r7, #20]
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 199              		.loc 1 287 0
 200 00fc 7B68     		ldr	r3, [r7, #4]
 201 00fe DB6A     		ldr	r3, [r3, #44]
 202 0100 002B     		cmp	r3, #0
 203 0102 0ED0     		beq	.L7
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 204              		.loc 1 289 0
 205 0104 7868     		ldr	r0, [r7, #4]
 206 0106 FFF7FEFF 		bl	DMA_CheckFifoParam
 207 010a 0346     		mov	r3, r0
 208 010c 002B     		cmp	r3, #0
 209 010e 08D0     		beq	.L7
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 210              		.loc 1 292 0
 211 0110 7B68     		ldr	r3, [r7, #4]
 212 0112 4022     		movs	r2, #64
 213 0114 5A65     		str	r2, [r3, #84]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 214              		.loc 1 295 0
ARM GAS  /tmp/ccg9tGuw.s 			page 10


 215 0116 7B68     		ldr	r3, [r7, #4]
 216 0118 0122     		movs	r2, #1
 217 011a 83F83520 		strb	r2, [r3, #53]
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_ERROR; 
 218              		.loc 1 297 0
 219 011e 0123     		movs	r3, #1
 220 0120 16E0     		b	.L3
 221              	.L7:
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 222              		.loc 1 303 0
 223 0122 7B68     		ldr	r3, [r7, #4]
 224 0124 1B68     		ldr	r3, [r3]
 225 0126 7A69     		ldr	r2, [r7, #20]
 226 0128 5A61     		str	r2, [r3, #20]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 227              		.loc 1 307 0
 228 012a 7868     		ldr	r0, [r7, #4]
 229 012c FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 230 0130 0346     		mov	r3, r0
 231 0132 FB60     		str	r3, [r7, #12]
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 232              		.loc 1 310 0
 233 0134 7B68     		ldr	r3, [r7, #4]
 234 0136 DB6D     		ldr	r3, [r3, #92]
 235 0138 3F22     		movs	r2, #63
 236 013a 9A40     		lsls	r2, r2, r3
 237 013c FB68     		ldr	r3, [r7, #12]
 238 013e 9A60     		str	r2, [r3, #8]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 239              		.loc 1 313 0
 240 0140 7B68     		ldr	r3, [r7, #4]
 241 0142 0022     		movs	r2, #0
 242 0144 5A65     		str	r2, [r3, #84]
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 243              		.loc 1 316 0
 244 0146 7B68     		ldr	r3, [r7, #4]
 245 0148 0122     		movs	r2, #1
 246 014a 83F83520 		strb	r2, [r3, #53]
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 247              		.loc 1 318 0
 248 014e 0023     		movs	r3, #0
ARM GAS  /tmp/ccg9tGuw.s 			page 11


 249              	.L3:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 250              		.loc 1 319 0
 251 0150 1846     		mov	r0, r3
 252 0152 1837     		adds	r7, r7, #24
 253              	.LCFI3:
 254              		.cfi_def_cfa_offset 8
 255 0154 BD46     		mov	sp, r7
 256              	.LCFI4:
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 0156 80BD     		pop	{r7, pc}
 260              	.L9:
 261              		.align	2
 262              	.L8:
 263 0158 3F8010F0 		.word	-267354049
 264              		.cfi_endproc
 265              	.LFE138:
 267              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 268              		.align	1
 269              		.global	HAL_DMA_DeInit
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	HAL_DMA_DeInit:
 276              	.LFB139:
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 277              		.loc 1 328 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 16
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              	.LCFI5:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 84B0     		sub	sp, sp, #16
 287              	.LCFI6:
 288              		.cfi_def_cfa_offset 24
 289 0004 00AF     		add	r7, sp, #0
 290              	.LCFI7:
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 293              		.loc 1 332 0
ARM GAS  /tmp/ccg9tGuw.s 			page 12


 294 0008 7B68     		ldr	r3, [r7, #4]
 295 000a 002B     		cmp	r3, #0
 296 000c 01D1     		bne	.L11
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 297              		.loc 1 334 0
 298 000e 0123     		movs	r3, #1
 299 0010 50E0     		b	.L12
 300              	.L11:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 301              		.loc 1 338 0
 302 0012 7B68     		ldr	r3, [r7, #4]
 303 0014 93F83530 		ldrb	r3, [r3, #53]
 304 0018 DBB2     		uxtb	r3, r3
 305 001a 022B     		cmp	r3, #2
 306 001c 01D1     		bne	.L13
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_BUSY;
 307              		.loc 1 341 0
 308 001e 0223     		movs	r3, #2
 309 0020 48E0     		b	.L12
 310              	.L13:
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 311              		.loc 1 348 0
 312 0022 7B68     		ldr	r3, [r7, #4]
 313 0024 1B68     		ldr	r3, [r3]
 314 0026 1A68     		ldr	r2, [r3]
 315 0028 7B68     		ldr	r3, [r7, #4]
 316 002a 1B68     		ldr	r3, [r3]
 317 002c 22F00102 		bic	r2, r2, #1
 318 0030 1A60     		str	r2, [r3]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 319              		.loc 1 351 0
 320 0032 7B68     		ldr	r3, [r7, #4]
 321 0034 1B68     		ldr	r3, [r3]
 322 0036 0022     		movs	r2, #0
 323 0038 1A60     		str	r2, [r3]
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 324              		.loc 1 354 0
 325 003a 7B68     		ldr	r3, [r7, #4]
 326 003c 1B68     		ldr	r3, [r3]
 327 003e 0022     		movs	r2, #0
 328 0040 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccg9tGuw.s 			page 13


 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 329              		.loc 1 357 0
 330 0042 7B68     		ldr	r3, [r7, #4]
 331 0044 1B68     		ldr	r3, [r3]
 332 0046 0022     		movs	r2, #0
 333 0048 9A60     		str	r2, [r3, #8]
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 334              		.loc 1 360 0
 335 004a 7B68     		ldr	r3, [r7, #4]
 336 004c 1B68     		ldr	r3, [r3]
 337 004e 0022     		movs	r2, #0
 338 0050 DA60     		str	r2, [r3, #12]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 339              		.loc 1 363 0
 340 0052 7B68     		ldr	r3, [r7, #4]
 341 0054 1B68     		ldr	r3, [r3]
 342 0056 0022     		movs	r2, #0
 343 0058 1A61     		str	r2, [r3, #16]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR  = (uint32_t)0x00000021U;
 344              		.loc 1 366 0
 345 005a 7B68     		ldr	r3, [r7, #4]
 346 005c 1B68     		ldr	r3, [r3]
 347 005e 2122     		movs	r2, #33
 348 0060 5A61     		str	r2, [r3, #20]
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 349              		.loc 1 369 0
 350 0062 7868     		ldr	r0, [r7, #4]
 351 0064 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 352 0068 0346     		mov	r3, r0
 353 006a FB60     		str	r3, [r7, #12]
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 354              		.loc 1 372 0
 355 006c 7B68     		ldr	r3, [r7, #4]
 356 006e DB6D     		ldr	r3, [r3, #92]
 357 0070 3F22     		movs	r2, #63
 358 0072 9A40     		lsls	r2, r2, r3
 359 0074 FB68     		ldr	r3, [r7, #12]
 360 0076 9A60     		str	r2, [r3, #8]
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clean all callbacks */
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 361              		.loc 1 375 0
 362 0078 7B68     		ldr	r3, [r7, #4]
 363 007a 0022     		movs	r2, #0
 364 007c DA63     		str	r2, [r3, #60]
ARM GAS  /tmp/ccg9tGuw.s 			page 14


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 365              		.loc 1 376 0
 366 007e 7B68     		ldr	r3, [r7, #4]
 367 0080 0022     		movs	r2, #0
 368 0082 1A64     		str	r2, [r3, #64]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 369              		.loc 1 377 0
 370 0084 7B68     		ldr	r3, [r7, #4]
 371 0086 0022     		movs	r2, #0
 372 0088 5A64     		str	r2, [r3, #68]
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 373              		.loc 1 378 0
 374 008a 7B68     		ldr	r3, [r7, #4]
 375 008c 0022     		movs	r2, #0
 376 008e 9A64     		str	r2, [r3, #72]
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 377              		.loc 1 379 0
 378 0090 7B68     		ldr	r3, [r7, #4]
 379 0092 0022     		movs	r2, #0
 380 0094 DA64     		str	r2, [r3, #76]
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 381              		.loc 1 380 0
 382 0096 7B68     		ldr	r3, [r7, #4]
 383 0098 0022     		movs	r2, #0
 384 009a 1A65     		str	r2, [r3, #80]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the error code */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 385              		.loc 1 383 0
 386 009c 7B68     		ldr	r3, [r7, #4]
 387 009e 0022     		movs	r2, #0
 388 00a0 5A65     		str	r2, [r3, #84]
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the DMA state */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 389              		.loc 1 386 0
 390 00a2 7B68     		ldr	r3, [r7, #4]
 391 00a4 0022     		movs	r2, #0
 392 00a6 83F83520 		strb	r2, [r3, #53]
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 393              		.loc 1 389 0
 394 00aa 7B68     		ldr	r3, [r7, #4]
 395 00ac 0022     		movs	r2, #0
 396 00ae 83F83420 		strb	r2, [r3, #52]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 397              		.loc 1 391 0
 398 00b2 0023     		movs	r3, #0
 399              	.L12:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 400              		.loc 1 392 0
 401 00b4 1846     		mov	r0, r3
 402 00b6 1037     		adds	r7, r7, #16
 403              	.LCFI8:
 404              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccg9tGuw.s 			page 15


 405 00b8 BD46     		mov	sp, r7
 406              	.LCFI9:
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 00ba 80BD     		pop	{r7, pc}
 410              		.cfi_endproc
 411              	.LFE139:
 413              		.section	.text.HAL_DMA_Start,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_DMA_Start
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	HAL_DMA_Start:
 422              	.LFB140:
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       #####  IO operation functions  #####
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           Start DMA transfer with interrupt
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Abort DMA transfer
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Poll for transfer complete
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 423              		.loc 1 426 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 24
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427 0000 80B5     		push	{r7, lr}
 428              	.LCFI10:
 429              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccg9tGuw.s 			page 16


 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 86B0     		sub	sp, sp, #24
 433              	.LCFI11:
 434              		.cfi_def_cfa_offset 32
 435 0004 00AF     		add	r7, sp, #0
 436              	.LCFI12:
 437              		.cfi_def_cfa_register 7
 438 0006 F860     		str	r0, [r7, #12]
 439 0008 B960     		str	r1, [r7, #8]
 440 000a 7A60     		str	r2, [r7, #4]
 441 000c 3B60     		str	r3, [r7]
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 442              		.loc 1 427 0
 443 000e 0023     		movs	r3, #0
 444 0010 FB75     		strb	r3, [r7, #23]
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 445              		.loc 1 433 0
 446 0012 FB68     		ldr	r3, [r7, #12]
 447 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 448 0018 012B     		cmp	r3, #1
 449 001a 01D1     		bne	.L15
 450              		.loc 1 433 0 is_stmt 0 discriminator 1
 451 001c 0223     		movs	r3, #2
 452 001e 26E0     		b	.L16
 453              	.L15:
 454              		.loc 1 433 0 discriminator 2
 455 0020 FB68     		ldr	r3, [r7, #12]
 456 0022 0122     		movs	r2, #1
 457 0024 83F83420 		strb	r2, [r3, #52]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 458              		.loc 1 435 0 is_stmt 1 discriminator 2
 459 0028 FB68     		ldr	r3, [r7, #12]
 460 002a 93F83530 		ldrb	r3, [r3, #53]
 461 002e DBB2     		uxtb	r3, r3
 462 0030 012B     		cmp	r3, #1
 463 0032 15D1     		bne	.L17
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 464              		.loc 1 438 0
 465 0034 FB68     		ldr	r3, [r7, #12]
 466 0036 0222     		movs	r2, #2
 467 0038 83F83520 		strb	r2, [r3, #53]
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 468              		.loc 1 441 0
 469 003c FB68     		ldr	r3, [r7, #12]
 470 003e 0022     		movs	r2, #0
 471 0040 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccg9tGuw.s 			page 17


 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 472              		.loc 1 444 0
 473 0042 3B68     		ldr	r3, [r7]
 474 0044 7A68     		ldr	r2, [r7, #4]
 475 0046 B968     		ldr	r1, [r7, #8]
 476 0048 F868     		ldr	r0, [r7, #12]
 477 004a FFF7FEFF 		bl	DMA_SetConfig
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 478              		.loc 1 447 0
 479 004e FB68     		ldr	r3, [r7, #12]
 480 0050 1B68     		ldr	r3, [r3]
 481 0052 1A68     		ldr	r2, [r3]
 482 0054 FB68     		ldr	r3, [r7, #12]
 483 0056 1B68     		ldr	r3, [r3]
 484 0058 42F00102 		orr	r2, r2, #1
 485 005c 1A60     		str	r2, [r3]
 486 005e 05E0     		b	.L18
 487              	.L17:
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 488              		.loc 1 452 0
 489 0060 FB68     		ldr	r3, [r7, #12]
 490 0062 0022     		movs	r2, #0
 491 0064 83F83420 		strb	r2, [r3, #52]
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 492              		.loc 1 455 0
 493 0068 0223     		movs	r3, #2
 494 006a FB75     		strb	r3, [r7, #23]
 495              	.L18:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 496              		.loc 1 457 0
 497 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 498              	.L16:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 499              		.loc 1 458 0
 500 006e 1846     		mov	r0, r3
 501 0070 1837     		adds	r7, r7, #24
 502              	.LCFI13:
 503              		.cfi_def_cfa_offset 8
 504 0072 BD46     		mov	sp, r7
 505              	.LCFI14:
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0074 80BD     		pop	{r7, pc}
 509              		.cfi_endproc
 510              	.LFE140:
 512              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
ARM GAS  /tmp/ccg9tGuw.s 			page 18


 513              		.align	1
 514              		.global	HAL_DMA_Start_IT
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu fpv4-sp-d16
 520              	HAL_DMA_Start_IT:
 521              	.LFB141:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 522              		.loc 1 470 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 24
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526 0000 80B5     		push	{r7, lr}
 527              	.LCFI15:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 86B0     		sub	sp, sp, #24
 532              	.LCFI16:
 533              		.cfi_def_cfa_offset 32
 534 0004 00AF     		add	r7, sp, #0
 535              	.LCFI17:
 536              		.cfi_def_cfa_register 7
 537 0006 F860     		str	r0, [r7, #12]
 538 0008 B960     		str	r1, [r7, #8]
 539 000a 7A60     		str	r2, [r7, #4]
 540 000c 3B60     		str	r3, [r7]
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 541              		.loc 1 471 0
 542 000e 0023     		movs	r3, #0
 543 0010 FB75     		strb	r3, [r7, #23]
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 544              		.loc 1 474 0
 545 0012 FB68     		ldr	r3, [r7, #12]
 546 0014 9B6D     		ldr	r3, [r3, #88]
 547 0016 3B61     		str	r3, [r7, #16]
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 548              		.loc 1 480 0
ARM GAS  /tmp/ccg9tGuw.s 			page 19


 549 0018 FB68     		ldr	r3, [r7, #12]
 550 001a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 551 001e 012B     		cmp	r3, #1
 552 0020 01D1     		bne	.L20
 553              		.loc 1 480 0 is_stmt 0 discriminator 1
 554 0022 0223     		movs	r3, #2
 555 0024 48E0     		b	.L21
 556              	.L20:
 557              		.loc 1 480 0 discriminator 2
 558 0026 FB68     		ldr	r3, [r7, #12]
 559 0028 0122     		movs	r2, #1
 560 002a 83F83420 		strb	r2, [r3, #52]
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 561              		.loc 1 482 0 is_stmt 1 discriminator 2
 562 002e FB68     		ldr	r3, [r7, #12]
 563 0030 93F83530 		ldrb	r3, [r3, #53]
 564 0034 DBB2     		uxtb	r3, r3
 565 0036 012B     		cmp	r3, #1
 566 0038 37D1     		bne	.L22
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 567              		.loc 1 485 0
 568 003a FB68     		ldr	r3, [r7, #12]
 569 003c 0222     		movs	r2, #2
 570 003e 83F83520 		strb	r2, [r3, #53]
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 571              		.loc 1 488 0
 572 0042 FB68     		ldr	r3, [r7, #12]
 573 0044 0022     		movs	r2, #0
 574 0046 5A65     		str	r2, [r3, #84]
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 575              		.loc 1 491 0
 576 0048 3B68     		ldr	r3, [r7]
 577 004a 7A68     		ldr	r2, [r7, #4]
 578 004c B968     		ldr	r1, [r7, #8]
 579 004e F868     		ldr	r0, [r7, #12]
 580 0050 FFF7FEFF 		bl	DMA_SetConfig
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 581              		.loc 1 494 0
 582 0054 FB68     		ldr	r3, [r7, #12]
 583 0056 DB6D     		ldr	r3, [r3, #92]
 584 0058 3F22     		movs	r2, #63
 585 005a 9A40     		lsls	r2, r2, r3
 586 005c 3B69     		ldr	r3, [r7, #16]
 587 005e 9A60     		str	r2, [r3, #8]
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable Common interrupts*/
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 588              		.loc 1 497 0
ARM GAS  /tmp/ccg9tGuw.s 			page 20


 589 0060 FB68     		ldr	r3, [r7, #12]
 590 0062 1B68     		ldr	r3, [r3]
 591 0064 1A68     		ldr	r2, [r3]
 592 0066 FB68     		ldr	r3, [r7, #12]
 593 0068 1B68     		ldr	r3, [r3]
 594 006a 42F01602 		orr	r2, r2, #22
 595 006e 1A60     		str	r2, [r3]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 596              		.loc 1 498 0
 597 0070 FB68     		ldr	r3, [r7, #12]
 598 0072 1B68     		ldr	r3, [r3]
 599 0074 5A69     		ldr	r2, [r3, #20]
 600 0076 FB68     		ldr	r3, [r7, #12]
 601 0078 1B68     		ldr	r3, [r3]
 602 007a 42F08002 		orr	r2, r2, #128
 603 007e 5A61     		str	r2, [r3, #20]
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 604              		.loc 1 500 0
 605 0080 FB68     		ldr	r3, [r7, #12]
 606 0082 1B6C     		ldr	r3, [r3, #64]
 607 0084 002B     		cmp	r3, #0
 608 0086 07D0     		beq	.L23
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 609              		.loc 1 502 0
 610 0088 FB68     		ldr	r3, [r7, #12]
 611 008a 1B68     		ldr	r3, [r3]
 612 008c 1A68     		ldr	r2, [r3]
 613 008e FB68     		ldr	r3, [r7, #12]
 614 0090 1B68     		ldr	r3, [r3]
 615 0092 42F00802 		orr	r2, r2, #8
 616 0096 1A60     		str	r2, [r3]
 617              	.L23:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 618              		.loc 1 506 0
 619 0098 FB68     		ldr	r3, [r7, #12]
 620 009a 1B68     		ldr	r3, [r3]
 621 009c 1A68     		ldr	r2, [r3]
 622 009e FB68     		ldr	r3, [r7, #12]
 623 00a0 1B68     		ldr	r3, [r3]
 624 00a2 42F00102 		orr	r2, r2, #1
 625 00a6 1A60     		str	r2, [r3]
 626 00a8 05E0     		b	.L24
 627              	.L22:
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 628              		.loc 1 511 0
 629 00aa FB68     		ldr	r3, [r7, #12]
 630 00ac 0022     		movs	r2, #0
 631 00ae 83F83420 		strb	r2, [r3, #52]
ARM GAS  /tmp/ccg9tGuw.s 			page 21


 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 632              		.loc 1 514 0
 633 00b2 0223     		movs	r3, #2
 634 00b4 FB75     		strb	r3, [r7, #23]
 635              	.L24:
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 636              		.loc 1 517 0
 637 00b6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 638              	.L21:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 639              		.loc 1 518 0
 640 00b8 1846     		mov	r0, r3
 641 00ba 1837     		adds	r7, r7, #24
 642              	.LCFI18:
 643              		.cfi_def_cfa_offset 8
 644 00bc BD46     		mov	sp, r7
 645              	.LCFI19:
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 00be 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE141:
 652              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 653              		.align	1
 654              		.global	HAL_DMA_Abort
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	HAL_DMA_Abort:
 661              	.LFB142:
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                   
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        this single data is finished.  
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 662              		.loc 1 533 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 16
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666 0000 80B5     		push	{r7, lr}
 667              	.LCFI20:
 668              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccg9tGuw.s 			page 22


 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 84B0     		sub	sp, sp, #16
 672              	.LCFI21:
 673              		.cfi_def_cfa_offset 24
 674 0004 00AF     		add	r7, sp, #0
 675              	.LCFI22:
 676              		.cfi_def_cfa_register 7
 677 0006 7860     		str	r0, [r7, #4]
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 678              		.loc 1 535 0
 679 0008 7B68     		ldr	r3, [r7, #4]
 680 000a 9B6D     		ldr	r3, [r3, #88]
 681 000c FB60     		str	r3, [r7, #12]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 682              		.loc 1 537 0
 683 000e FFF7FEFF 		bl	HAL_GetTick
 684 0012 B860     		str	r0, [r7, #8]
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 685              		.loc 1 539 0
 686 0014 7B68     		ldr	r3, [r7, #4]
 687 0016 93F83530 		ldrb	r3, [r3, #53]
 688 001a DBB2     		uxtb	r3, r3
 689 001c 022B     		cmp	r3, #2
 690 001e 08D0     		beq	.L26
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 691              		.loc 1 541 0
 692 0020 7B68     		ldr	r3, [r7, #4]
 693 0022 8022     		movs	r2, #128
 694 0024 5A65     		str	r2, [r3, #84]
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 695              		.loc 1 544 0
 696 0026 7B68     		ldr	r3, [r7, #4]
 697 0028 0022     		movs	r2, #0
 698 002a 83F83420 		strb	r2, [r3, #52]
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 699              		.loc 1 546 0
 700 002e 0123     		movs	r3, #1
 701 0030 52E0     		b	.L27
 702              	.L26:
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 703              		.loc 1 551 0
 704 0032 7B68     		ldr	r3, [r7, #4]
 705 0034 1B68     		ldr	r3, [r3]
 706 0036 1A68     		ldr	r2, [r3]
 707 0038 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccg9tGuw.s 			page 23


 708 003a 1B68     		ldr	r3, [r3]
 709 003c 22F01602 		bic	r2, r2, #22
 710 0040 1A60     		str	r2, [r3]
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 711              		.loc 1 552 0
 712 0042 7B68     		ldr	r3, [r7, #4]
 713 0044 1B68     		ldr	r3, [r3]
 714 0046 5A69     		ldr	r2, [r3, #20]
 715 0048 7B68     		ldr	r3, [r7, #4]
 716 004a 1B68     		ldr	r3, [r3]
 717 004c 22F08002 		bic	r2, r2, #128
 718 0050 5A61     		str	r2, [r3, #20]
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 719              		.loc 1 554 0
 720 0052 7B68     		ldr	r3, [r7, #4]
 721 0054 1B6C     		ldr	r3, [r3, #64]
 722 0056 002B     		cmp	r3, #0
 723 0058 03D1     		bne	.L28
 724              		.loc 1 554 0 is_stmt 0 discriminator 1
 725 005a 7B68     		ldr	r3, [r7, #4]
 726 005c 9B6C     		ldr	r3, [r3, #72]
 727 005e 002B     		cmp	r3, #0
 728 0060 07D0     		beq	.L29
 729              	.L28:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 730              		.loc 1 556 0 is_stmt 1
 731 0062 7B68     		ldr	r3, [r7, #4]
 732 0064 1B68     		ldr	r3, [r3]
 733 0066 1A68     		ldr	r2, [r3]
 734 0068 7B68     		ldr	r3, [r7, #4]
 735 006a 1B68     		ldr	r3, [r3]
 736 006c 22F00802 		bic	r2, r2, #8
 737 0070 1A60     		str	r2, [r3]
 738              	.L29:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 739              		.loc 1 560 0
 740 0072 7B68     		ldr	r3, [r7, #4]
 741 0074 1B68     		ldr	r3, [r3]
 742 0076 1A68     		ldr	r2, [r3]
 743 0078 7B68     		ldr	r3, [r7, #4]
 744 007a 1B68     		ldr	r3, [r3]
 745 007c 22F00102 		bic	r2, r2, #1
 746 0080 1A60     		str	r2, [r3]
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 747              		.loc 1 563 0
 748 0082 13E0     		b	.L30
 749              	.L31:
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Check for the Timeout */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
ARM GAS  /tmp/ccg9tGuw.s 			page 24


 750              		.loc 1 566 0
 751 0084 FFF7FEFF 		bl	HAL_GetTick
 752 0088 0246     		mov	r2, r0
 753 008a BB68     		ldr	r3, [r7, #8]
 754 008c D31A     		subs	r3, r2, r3
 755 008e 052B     		cmp	r3, #5
 756 0090 0CD9     		bls	.L30
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 757              		.loc 1 569 0
 758 0092 7B68     		ldr	r3, [r7, #4]
 759 0094 2022     		movs	r2, #32
 760 0096 5A65     		str	r2, [r3, #84]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 761              		.loc 1 572 0
 762 0098 7B68     		ldr	r3, [r7, #4]
 763 009a 0022     		movs	r2, #0
 764 009c 83F83420 		strb	r2, [r3, #52]
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 765              		.loc 1 575 0
 766 00a0 7B68     		ldr	r3, [r7, #4]
 767 00a2 0322     		movs	r2, #3
 768 00a4 83F83520 		strb	r2, [r3, #53]
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 769              		.loc 1 577 0
 770 00a8 0323     		movs	r3, #3
 771 00aa 15E0     		b	.L27
 772              	.L30:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 773              		.loc 1 563 0
 774 00ac 7B68     		ldr	r3, [r7, #4]
 775 00ae 1B68     		ldr	r3, [r3]
 776 00b0 1B68     		ldr	r3, [r3]
 777 00b2 03F00103 		and	r3, r3, #1
 778 00b6 002B     		cmp	r3, #0
 779 00b8 E4D1     		bne	.L31
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 780              		.loc 1 582 0
 781 00ba 7B68     		ldr	r3, [r7, #4]
 782 00bc DB6D     		ldr	r3, [r3, #92]
 783 00be 3F22     		movs	r2, #63
 784 00c0 9A40     		lsls	r2, r2, r3
 785 00c2 FB68     		ldr	r3, [r7, #12]
 786 00c4 9A60     		str	r2, [r3, #8]
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
ARM GAS  /tmp/ccg9tGuw.s 			page 25


 787              		.loc 1 585 0
 788 00c6 7B68     		ldr	r3, [r7, #4]
 789 00c8 0022     		movs	r2, #0
 790 00ca 83F83420 		strb	r2, [r3, #52]
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change the DMA state*/
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 791              		.loc 1 588 0
 792 00ce 7B68     		ldr	r3, [r7, #4]
 793 00d0 0122     		movs	r2, #1
 794 00d2 83F83520 		strb	r2, [r3, #53]
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 795              		.loc 1 590 0
 796 00d6 0023     		movs	r3, #0
 797              	.L27:
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 798              		.loc 1 591 0
 799 00d8 1846     		mov	r0, r3
 800 00da 1037     		adds	r7, r7, #16
 801              	.LCFI23:
 802              		.cfi_def_cfa_offset 8
 803 00dc BD46     		mov	sp, r7
 804              	.LCFI24:
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 00de 80BD     		pop	{r7, pc}
 808              		.cfi_endproc
 809              	.LFE142:
 811              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 812              		.align	1
 813              		.global	HAL_DMA_Abort_IT
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	HAL_DMA_Abort_IT:
 820              	.LFB143:
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 821              		.loc 1 600 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826 0000 80B4     		push	{r7}
 827              	.LCFI25:
 828              		.cfi_def_cfa_offset 4
 829              		.cfi_offset 7, -4
 830 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccg9tGuw.s 			page 26


 831              	.LCFI26:
 832              		.cfi_def_cfa_offset 16
 833 0004 00AF     		add	r7, sp, #0
 834              	.LCFI27:
 835              		.cfi_def_cfa_register 7
 836 0006 7860     		str	r0, [r7, #4]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 837              		.loc 1 601 0
 838 0008 7B68     		ldr	r3, [r7, #4]
 839 000a 93F83530 		ldrb	r3, [r3, #53]
 840 000e DBB2     		uxtb	r3, r3
 841 0010 022B     		cmp	r3, #2
 842 0012 04D0     		beq	.L33
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 843              		.loc 1 603 0
 844 0014 7B68     		ldr	r3, [r7, #4]
 845 0016 8022     		movs	r2, #128
 846 0018 5A65     		str	r2, [r3, #84]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 847              		.loc 1 604 0
 848 001a 0123     		movs	r3, #1
 849 001c 0CE0     		b	.L34
 850              	.L33:
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Set Abort State  */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 851              		.loc 1 609 0
 852 001e 7B68     		ldr	r3, [r7, #4]
 853 0020 0522     		movs	r2, #5
 854 0022 83F83520 		strb	r2, [r3, #53]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 855              		.loc 1 612 0
 856 0026 7B68     		ldr	r3, [r7, #4]
 857 0028 1B68     		ldr	r3, [r3]
 858 002a 1A68     		ldr	r2, [r3]
 859 002c 7B68     		ldr	r3, [r7, #4]
 860 002e 1B68     		ldr	r3, [r3]
 861 0030 22F00102 		bic	r2, r2, #1
 862 0034 1A60     		str	r2, [r3]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 863              		.loc 1 615 0
 864 0036 0023     		movs	r3, #0
 865              	.L34:
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 866              		.loc 1 616 0
 867 0038 1846     		mov	r0, r3
 868 003a 0C37     		adds	r7, r7, #12
 869              	.LCFI28:
 870              		.cfi_def_cfa_offset 4
 871 003c BD46     		mov	sp, r7
ARM GAS  /tmp/ccg9tGuw.s 			page 27


 872              	.LCFI29:
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 003e 5DF8047B 		ldr	r7, [sp], #4
 876              	.LCFI30:
 877              		.cfi_restore 7
 878              		.cfi_def_cfa_offset 0
 879 0042 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE143:
 883              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 884              		.align	1
 885              		.global	HAL_DMA_PollForTransfer
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.fpu fpv4-sp-d16
 891              	HAL_DMA_PollForTransfer:
 892              	.LFB144:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         This model could be used for debug purpose.
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 893              		.loc 1 630 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 40
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              	.LCFI31:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 8AB0     		sub	sp, sp, #40
 903              	.LCFI32:
 904              		.cfi_def_cfa_offset 48
 905 0004 00AF     		add	r7, sp, #0
 906              	.LCFI33:
 907              		.cfi_def_cfa_register 7
 908 0006 F860     		str	r0, [r7, #12]
 909 0008 0B46     		mov	r3, r1
 910 000a 7A60     		str	r2, [r7, #4]
 911 000c FB72     		strb	r3, [r7, #11]
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 912              		.loc 1 631 0
 913 000e 0023     		movs	r3, #0
 914 0010 FB77     		strb	r3, [r7, #31]
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t mask_cpltlevel;
ARM GAS  /tmp/ccg9tGuw.s 			page 28


 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 915              		.loc 1 633 0
 916 0012 FFF7FEFF 		bl	HAL_GetTick
 917 0016 B861     		str	r0, [r7, #24]
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 918              		.loc 1 639 0
 919 0018 FB68     		ldr	r3, [r7, #12]
 920 001a 93F83530 		ldrb	r3, [r3, #53]
 921 001e DBB2     		uxtb	r3, r3
 922 0020 022B     		cmp	r3, #2
 923 0022 08D0     		beq	.L36
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* No transfer ongoing */
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 924              		.loc 1 642 0
 925 0024 FB68     		ldr	r3, [r7, #12]
 926 0026 8022     		movs	r2, #128
 927 0028 5A65     		str	r2, [r3, #84]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 928              		.loc 1 643 0
 929 002a FB68     		ldr	r3, [r7, #12]
 930 002c 0022     		movs	r2, #0
 931 002e 83F83420 		strb	r2, [r3, #52]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 932              		.loc 1 644 0
 933 0032 0123     		movs	r3, #1
 934 0034 BFE0     		b	.L37
 935              	.L36:
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 936              		.loc 1 648 0
 937 0036 FB68     		ldr	r3, [r7, #12]
 938 0038 1B68     		ldr	r3, [r3]
 939 003a 1B68     		ldr	r3, [r3]
 940 003c 03F48073 		and	r3, r3, #256
 941 0040 002B     		cmp	r3, #0
 942 0042 05D0     		beq	.L38
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 943              		.loc 1 650 0
 944 0044 FB68     		ldr	r3, [r7, #12]
 945 0046 4FF48072 		mov	r2, #256
 946 004a 5A65     		str	r2, [r3, #84]
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 947              		.loc 1 651 0
 948 004c 0123     		movs	r3, #1
 949 004e B2E0     		b	.L37
 950              	.L38:
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
ARM GAS  /tmp/ccg9tGuw.s 			page 29


 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 951              		.loc 1 655 0
 952 0050 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 953 0052 002B     		cmp	r3, #0
 954 0054 06D1     		bne	.L39
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Transfer Complete flag */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 955              		.loc 1 658 0
 956 0056 FB68     		ldr	r3, [r7, #12]
 957 0058 DB6D     		ldr	r3, [r3, #92]
 958 005a 2022     		movs	r2, #32
 959 005c 02FA03F3 		lsl	r3, r2, r3
 960 0060 7B62     		str	r3, [r7, #36]
 961 0062 05E0     		b	.L40
 962              	.L39:
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Half Transfer Complete flag */
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 963              		.loc 1 663 0
 964 0064 FB68     		ldr	r3, [r7, #12]
 965 0066 DB6D     		ldr	r3, [r3, #92]
 966 0068 1022     		movs	r2, #16
 967 006a 02FA03F3 		lsl	r3, r2, r3
 968 006e 7B62     		str	r3, [r7, #36]
 969              	.L40:
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 970              		.loc 1 666 0
 971 0070 FB68     		ldr	r3, [r7, #12]
 972 0072 9B6D     		ldr	r3, [r3, #88]
 973 0074 7B61     		str	r3, [r7, #20]
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 974              		.loc 1 667 0
 975 0076 7B69     		ldr	r3, [r7, #20]
 976 0078 1B68     		ldr	r3, [r3]
 977 007a 3B62     		str	r3, [r7, #32]
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 978              		.loc 1 669 0
 979 007c 5AE0     		b	.L41
 980              	.L47:
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 981              		.loc 1 672 0
 982 007e 7B68     		ldr	r3, [r7, #4]
 983 0080 B3F1FF3F 		cmp	r3, #-1
 984 0084 17D0     		beq	.L42
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 985              		.loc 1 674 0
 986 0086 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccg9tGuw.s 			page 30


 987 0088 002B     		cmp	r3, #0
 988 008a 07D0     		beq	.L43
 989              		.loc 1 674 0 is_stmt 0 discriminator 1
 990 008c FFF7FEFF 		bl	HAL_GetTick
 991 0090 0246     		mov	r2, r0
 992 0092 BB69     		ldr	r3, [r7, #24]
 993 0094 D31A     		subs	r3, r2, r3
 994 0096 7A68     		ldr	r2, [r7, #4]
 995 0098 9A42     		cmp	r2, r3
 996 009a 0CD2     		bcs	.L42
 997              	.L43:
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 998              		.loc 1 677 0 is_stmt 1
 999 009c FB68     		ldr	r3, [r7, #12]
 1000 009e 2022     		movs	r2, #32
 1001 00a0 5A65     		str	r2, [r3, #84]
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1002              		.loc 1 680 0
 1003 00a2 FB68     		ldr	r3, [r7, #12]
 1004 00a4 0022     		movs	r2, #0
 1005 00a6 83F83420 		strb	r2, [r3, #52]
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1006              		.loc 1 683 0
 1007 00aa FB68     		ldr	r3, [r7, #12]
 1008 00ac 0122     		movs	r2, #1
 1009 00ae 83F83520 		strb	r2, [r3, #53]
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 1010              		.loc 1 685 0
 1011 00b2 0323     		movs	r3, #3
 1012 00b4 7FE0     		b	.L37
 1013              	.L42:
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the ISR register value */
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmpisr = regs->ISR;
 1014              		.loc 1 690 0
 1015 00b6 7B69     		ldr	r3, [r7, #20]
 1016 00b8 1B68     		ldr	r3, [r3]
 1017 00ba 3B62     		str	r3, [r7, #32]
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1018              		.loc 1 692 0
 1019 00bc FB68     		ldr	r3, [r7, #12]
 1020 00be DB6D     		ldr	r3, [r3, #92]
 1021 00c0 0822     		movs	r2, #8
 1022 00c2 9A40     		lsls	r2, r2, r3
 1023 00c4 3B6A     		ldr	r3, [r7, #32]
 1024 00c6 1340     		ands	r3, r3, r2
 1025 00c8 002B     		cmp	r3, #0
ARM GAS  /tmp/ccg9tGuw.s 			page 31


 1026 00ca 0BD0     		beq	.L44
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1027              		.loc 1 695 0
 1028 00cc FB68     		ldr	r3, [r7, #12]
 1029 00ce 5B6D     		ldr	r3, [r3, #84]
 1030 00d0 43F00102 		orr	r2, r3, #1
 1031 00d4 FB68     		ldr	r3, [r7, #12]
 1032 00d6 5A65     		str	r2, [r3, #84]
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1033              		.loc 1 698 0
 1034 00d8 FB68     		ldr	r3, [r7, #12]
 1035 00da DB6D     		ldr	r3, [r3, #92]
 1036 00dc 0822     		movs	r2, #8
 1037 00de 9A40     		lsls	r2, r2, r3
 1038 00e0 7B69     		ldr	r3, [r7, #20]
 1039 00e2 9A60     		str	r2, [r3, #8]
 1040              	.L44:
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1041              		.loc 1 701 0
 1042 00e4 FB68     		ldr	r3, [r7, #12]
 1043 00e6 DB6D     		ldr	r3, [r3, #92]
 1044 00e8 0122     		movs	r2, #1
 1045 00ea 9A40     		lsls	r2, r2, r3
 1046 00ec 3B6A     		ldr	r3, [r7, #32]
 1047 00ee 1340     		ands	r3, r3, r2
 1048 00f0 002B     		cmp	r3, #0
 1049 00f2 0BD0     		beq	.L45
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1050              		.loc 1 704 0
 1051 00f4 FB68     		ldr	r3, [r7, #12]
 1052 00f6 5B6D     		ldr	r3, [r3, #84]
 1053 00f8 43F00202 		orr	r2, r3, #2
 1054 00fc FB68     		ldr	r3, [r7, #12]
 1055 00fe 5A65     		str	r2, [r3, #84]
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1056              		.loc 1 707 0
 1057 0100 FB68     		ldr	r3, [r7, #12]
 1058 0102 DB6D     		ldr	r3, [r3, #92]
 1059 0104 0122     		movs	r2, #1
 1060 0106 9A40     		lsls	r2, r2, r3
 1061 0108 7B69     		ldr	r3, [r7, #20]
 1062 010a 9A60     		str	r2, [r3, #8]
 1063              	.L45:
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1064              		.loc 1 710 0
ARM GAS  /tmp/ccg9tGuw.s 			page 32


 1065 010c FB68     		ldr	r3, [r7, #12]
 1066 010e DB6D     		ldr	r3, [r3, #92]
 1067 0110 0422     		movs	r2, #4
 1068 0112 9A40     		lsls	r2, r2, r3
 1069 0114 3B6A     		ldr	r3, [r7, #32]
 1070 0116 1340     		ands	r3, r3, r2
 1071 0118 002B     		cmp	r3, #0
 1072 011a 0BD0     		beq	.L41
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1073              		.loc 1 713 0
 1074 011c FB68     		ldr	r3, [r7, #12]
 1075 011e 5B6D     		ldr	r3, [r3, #84]
 1076 0120 43F00402 		orr	r2, r3, #4
 1077 0124 FB68     		ldr	r3, [r7, #12]
 1078 0126 5A65     		str	r2, [r3, #84]
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1079              		.loc 1 716 0
 1080 0128 FB68     		ldr	r3, [r7, #12]
 1081 012a DB6D     		ldr	r3, [r3, #92]
 1082 012c 0422     		movs	r2, #4
 1083 012e 9A40     		lsls	r2, r2, r3
 1084 0130 7B69     		ldr	r3, [r7, #20]
 1085 0132 9A60     		str	r2, [r3, #8]
 1086              	.L41:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1087              		.loc 1 669 0
 1088 0134 3A6A     		ldr	r2, [r7, #32]
 1089 0136 7B6A     		ldr	r3, [r7, #36]
 1090 0138 1340     		ands	r3, r3, r2
 1091 013a 002B     		cmp	r3, #0
 1092 013c 05D1     		bne	.L46
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1093              		.loc 1 669 0 is_stmt 0 discriminator 1
 1094 013e FB68     		ldr	r3, [r7, #12]
 1095 0140 5B6D     		ldr	r3, [r3, #84]
 1096 0142 03F00103 		and	r3, r3, #1
 1097 0146 002B     		cmp	r3, #0
 1098 0148 99D0     		beq	.L47
 1099              	.L46:
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1100              		.loc 1 720 0 is_stmt 1
 1101 014a FB68     		ldr	r3, [r7, #12]
 1102 014c 5B6D     		ldr	r3, [r3, #84]
 1103 014e 002B     		cmp	r3, #0
 1104 0150 18D0     		beq	.L48
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1105              		.loc 1 722 0
 1106 0152 FB68     		ldr	r3, [r7, #12]
 1107 0154 5B6D     		ldr	r3, [r3, #84]
ARM GAS  /tmp/ccg9tGuw.s 			page 33


 1108 0156 03F00103 		and	r3, r3, #1
 1109 015a 002B     		cmp	r3, #0
 1110 015c 12D0     		beq	.L48
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1111              		.loc 1 724 0
 1112 015e F868     		ldr	r0, [r7, #12]
 1113 0160 FFF7FEFF 		bl	HAL_DMA_Abort
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1114              		.loc 1 727 0
 1115 0164 FB68     		ldr	r3, [r7, #12]
 1116 0166 DB6D     		ldr	r3, [r3, #92]
 1117 0168 3022     		movs	r2, #48
 1118 016a 9A40     		lsls	r2, r2, r3
 1119 016c 7B69     		ldr	r3, [r7, #20]
 1120 016e 9A60     		str	r2, [r3, #8]
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1121              		.loc 1 730 0
 1122 0170 FB68     		ldr	r3, [r7, #12]
 1123 0172 0022     		movs	r2, #0
 1124 0174 83F83420 		strb	r2, [r3, #52]
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1125              		.loc 1 733 0
 1126 0178 FB68     		ldr	r3, [r7, #12]
 1127 017a 0122     		movs	r2, #1
 1128 017c 83F83520 		strb	r2, [r3, #53]
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR;
 1129              		.loc 1 735 0
 1130 0180 0123     		movs	r3, #1
 1131 0182 18E0     		b	.L37
 1132              	.L48:
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1133              		.loc 1 740 0
 1134 0184 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1135 0186 002B     		cmp	r3, #0
 1136 0188 0ED1     		bne	.L49
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1137              		.loc 1 743 0
 1138 018a FB68     		ldr	r3, [r7, #12]
 1139 018c DB6D     		ldr	r3, [r3, #92]
 1140 018e 3022     		movs	r2, #48
 1141 0190 9A40     		lsls	r2, r2, r3
 1142 0192 7B69     		ldr	r3, [r7, #20]
 1143 0194 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccg9tGuw.s 			page 34


 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1144              		.loc 1 746 0
 1145 0196 FB68     		ldr	r3, [r7, #12]
 1146 0198 0022     		movs	r2, #0
 1147 019a 83F83420 		strb	r2, [r3, #52]
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1148              		.loc 1 748 0
 1149 019e FB68     		ldr	r3, [r7, #12]
 1150 01a0 0122     		movs	r2, #1
 1151 01a2 83F83520 		strb	r2, [r3, #53]
 1152 01a6 05E0     		b	.L50
 1153              	.L49:
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer flag */
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1154              		.loc 1 753 0
 1155 01a8 FB68     		ldr	r3, [r7, #12]
 1156 01aa DB6D     		ldr	r3, [r3, #92]
 1157 01ac 1022     		movs	r2, #16
 1158 01ae 9A40     		lsls	r2, r2, r3
 1159 01b0 7B69     		ldr	r3, [r7, #20]
 1160 01b2 9A60     		str	r2, [r3, #8]
 1161              	.L50:
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1162              		.loc 1 756 0
 1163 01b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1164              	.L37:
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1165              		.loc 1 757 0
 1166 01b6 1846     		mov	r0, r3
 1167 01b8 2837     		adds	r7, r7, #40
 1168              	.LCFI34:
 1169              		.cfi_def_cfa_offset 8
 1170 01ba BD46     		mov	sp, r7
 1171              	.LCFI35:
 1172              		.cfi_def_cfa_register 13
 1173              		@ sp needed
 1174 01bc 80BD     		pop	{r7, pc}
 1175              		.cfi_endproc
 1176              	.LFE144:
 1178              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1179              		.align	1
 1180              		.global	HAL_DMA_IRQHandler
 1181              		.syntax unified
 1182              		.thumb
 1183              		.thumb_func
 1184              		.fpu fpv4-sp-d16
 1186              	HAL_DMA_IRQHandler:
 1187              	.LFB145:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccg9tGuw.s 			page 35


 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval None
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1188              		.loc 1 766 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 24
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192 0000 80B5     		push	{r7, lr}
 1193              	.LCFI36:
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 7, -8
 1196              		.cfi_offset 14, -4
 1197 0002 86B0     		sub	sp, sp, #24
 1198              	.LCFI37:
 1199              		.cfi_def_cfa_offset 32
 1200 0004 00AF     		add	r7, sp, #0
 1201              	.LCFI38:
 1202              		.cfi_def_cfa_register 7
 1203 0006 7860     		str	r0, [r7, #4]
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t count = 0;
 1204              		.loc 1 768 0
 1205 0008 0023     		movs	r3, #0
 1206 000a BB60     		str	r3, [r7, #8]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 1207              		.loc 1 769 0
 1208 000c 924B     		ldr	r3, .L78
 1209 000e 1B68     		ldr	r3, [r3]
 1210 0010 924A     		ldr	r2, .L78+4
 1211 0012 A2FB0323 		umull	r2, r3, r2, r3
 1212 0016 9B0A     		lsrs	r3, r3, #10
 1213 0018 7B61     		str	r3, [r7, #20]
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1214              		.loc 1 772 0
 1215 001a 7B68     		ldr	r3, [r7, #4]
 1216 001c 9B6D     		ldr	r3, [r3, #88]
 1217 001e 3B61     		str	r3, [r7, #16]
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1218              		.loc 1 774 0
 1219 0020 3B69     		ldr	r3, [r7, #16]
 1220 0022 1B68     		ldr	r3, [r3]
 1221 0024 FB60     		str	r3, [r7, #12]
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1222              		.loc 1 777 0
 1223 0026 7B68     		ldr	r3, [r7, #4]
 1224 0028 DB6D     		ldr	r3, [r3, #92]
 1225 002a 0822     		movs	r2, #8
ARM GAS  /tmp/ccg9tGuw.s 			page 36


 1226 002c 9A40     		lsls	r2, r2, r3
 1227 002e FB68     		ldr	r3, [r7, #12]
 1228 0030 1340     		ands	r3, r3, r2
 1229 0032 002B     		cmp	r3, #0
 1230 0034 1AD0     		beq	.L52
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1231              		.loc 1 779 0
 1232 0036 7B68     		ldr	r3, [r7, #4]
 1233 0038 1B68     		ldr	r3, [r3]
 1234 003a 1B68     		ldr	r3, [r3]
 1235 003c 03F00403 		and	r3, r3, #4
 1236 0040 002B     		cmp	r3, #0
 1237 0042 13D0     		beq	.L52
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1238              		.loc 1 782 0
 1239 0044 7B68     		ldr	r3, [r7, #4]
 1240 0046 1B68     		ldr	r3, [r3]
 1241 0048 1A68     		ldr	r2, [r3]
 1242 004a 7B68     		ldr	r3, [r7, #4]
 1243 004c 1B68     		ldr	r3, [r3]
 1244 004e 22F00402 		bic	r2, r2, #4
 1245 0052 1A60     		str	r2, [r3]
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1246              		.loc 1 785 0
 1247 0054 7B68     		ldr	r3, [r7, #4]
 1248 0056 DB6D     		ldr	r3, [r3, #92]
 1249 0058 0822     		movs	r2, #8
 1250 005a 9A40     		lsls	r2, r2, r3
 1251 005c 3B69     		ldr	r3, [r7, #16]
 1252 005e 9A60     		str	r2, [r3, #8]
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1253              		.loc 1 788 0
 1254 0060 7B68     		ldr	r3, [r7, #4]
 1255 0062 5B6D     		ldr	r3, [r3, #84]
 1256 0064 43F00102 		orr	r2, r3, #1
 1257 0068 7B68     		ldr	r3, [r7, #4]
 1258 006a 5A65     		str	r2, [r3, #84]
 1259              	.L52:
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1260              		.loc 1 792 0
 1261 006c 7B68     		ldr	r3, [r7, #4]
 1262 006e DB6D     		ldr	r3, [r3, #92]
 1263 0070 0122     		movs	r2, #1
 1264 0072 9A40     		lsls	r2, r2, r3
 1265 0074 FB68     		ldr	r3, [r7, #12]
 1266 0076 1340     		ands	r3, r3, r2
 1267 0078 002B     		cmp	r3, #0
ARM GAS  /tmp/ccg9tGuw.s 			page 37


 1268 007a 12D0     		beq	.L53
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1269              		.loc 1 794 0
 1270 007c 7B68     		ldr	r3, [r7, #4]
 1271 007e 1B68     		ldr	r3, [r3]
 1272 0080 5B69     		ldr	r3, [r3, #20]
 1273 0082 03F08003 		and	r3, r3, #128
 1274 0086 002B     		cmp	r3, #0
 1275 0088 0BD0     		beq	.L53
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1276              		.loc 1 797 0
 1277 008a 7B68     		ldr	r3, [r7, #4]
 1278 008c DB6D     		ldr	r3, [r3, #92]
 1279 008e 0122     		movs	r2, #1
 1280 0090 9A40     		lsls	r2, r2, r3
 1281 0092 3B69     		ldr	r3, [r7, #16]
 1282 0094 9A60     		str	r2, [r3, #8]
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1283              		.loc 1 800 0
 1284 0096 7B68     		ldr	r3, [r7, #4]
 1285 0098 5B6D     		ldr	r3, [r3, #84]
 1286 009a 43F00202 		orr	r2, r3, #2
 1287 009e 7B68     		ldr	r3, [r7, #4]
 1288 00a0 5A65     		str	r2, [r3, #84]
 1289              	.L53:
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1290              		.loc 1 804 0
 1291 00a2 7B68     		ldr	r3, [r7, #4]
 1292 00a4 DB6D     		ldr	r3, [r3, #92]
 1293 00a6 0422     		movs	r2, #4
 1294 00a8 9A40     		lsls	r2, r2, r3
 1295 00aa FB68     		ldr	r3, [r7, #12]
 1296 00ac 1340     		ands	r3, r3, r2
 1297 00ae 002B     		cmp	r3, #0
 1298 00b0 12D0     		beq	.L54
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1299              		.loc 1 806 0
 1300 00b2 7B68     		ldr	r3, [r7, #4]
 1301 00b4 1B68     		ldr	r3, [r3]
 1302 00b6 1B68     		ldr	r3, [r3]
 1303 00b8 03F00203 		and	r3, r3, #2
 1304 00bc 002B     		cmp	r3, #0
 1305 00be 0BD0     		beq	.L54
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the direct mode error flag */
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1306              		.loc 1 809 0
 1307 00c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccg9tGuw.s 			page 38


 1308 00c2 DB6D     		ldr	r3, [r3, #92]
 1309 00c4 0422     		movs	r2, #4
 1310 00c6 9A40     		lsls	r2, r2, r3
 1311 00c8 3B69     		ldr	r3, [r7, #16]
 1312 00ca 9A60     		str	r2, [r3, #8]
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1313              		.loc 1 812 0
 1314 00cc 7B68     		ldr	r3, [r7, #4]
 1315 00ce 5B6D     		ldr	r3, [r3, #84]
 1316 00d0 43F00402 		orr	r2, r3, #4
 1317 00d4 7B68     		ldr	r3, [r7, #4]
 1318 00d6 5A65     		str	r2, [r3, #84]
 1319              	.L54:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1320              		.loc 1 816 0
 1321 00d8 7B68     		ldr	r3, [r7, #4]
 1322 00da DB6D     		ldr	r3, [r3, #92]
 1323 00dc 1022     		movs	r2, #16
 1324 00de 9A40     		lsls	r2, r2, r3
 1325 00e0 FB68     		ldr	r3, [r7, #12]
 1326 00e2 1340     		ands	r3, r3, r2
 1327 00e4 002B     		cmp	r3, #0
 1328 00e6 43D0     		beq	.L55
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 1329              		.loc 1 818 0
 1330 00e8 7B68     		ldr	r3, [r7, #4]
 1331 00ea 1B68     		ldr	r3, [r3]
 1332 00ec 1B68     		ldr	r3, [r3]
 1333 00ee 03F00803 		and	r3, r3, #8
 1334 00f2 002B     		cmp	r3, #0
 1335 00f4 3CD0     		beq	.L55
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1336              		.loc 1 821 0
 1337 00f6 7B68     		ldr	r3, [r7, #4]
 1338 00f8 DB6D     		ldr	r3, [r3, #92]
 1339 00fa 1022     		movs	r2, #16
 1340 00fc 9A40     		lsls	r2, r2, r3
 1341 00fe 3B69     		ldr	r3, [r7, #16]
 1342 0100 9A60     		str	r2, [r3, #8]
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1343              		.loc 1 824 0
 1344 0102 7B68     		ldr	r3, [r7, #4]
 1345 0104 1B68     		ldr	r3, [r3]
 1346 0106 1B68     		ldr	r3, [r3]
 1347 0108 03F48023 		and	r3, r3, #262144
 1348 010c 002B     		cmp	r3, #0
 1349 010e 18D0     		beq	.L56
ARM GAS  /tmp/ccg9tGuw.s 			page 39


 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1350              		.loc 1 827 0
 1351 0110 7B68     		ldr	r3, [r7, #4]
 1352 0112 1B68     		ldr	r3, [r3]
 1353 0114 1B68     		ldr	r3, [r3]
 1354 0116 03F40023 		and	r3, r3, #524288
 1355 011a 002B     		cmp	r3, #0
 1356 011c 08D1     		bne	.L57
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1357              		.loc 1 829 0
 1358 011e 7B68     		ldr	r3, [r7, #4]
 1359 0120 1B6C     		ldr	r3, [r3, #64]
 1360 0122 002B     		cmp	r3, #0
 1361 0124 24D0     		beq	.L55
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1362              		.loc 1 832 0
 1363 0126 7B68     		ldr	r3, [r7, #4]
 1364 0128 1B6C     		ldr	r3, [r3, #64]
 1365 012a 7868     		ldr	r0, [r7, #4]
 1366 012c 9847     		blx	r3
 1367              	.LVL0:
 1368 012e 1FE0     		b	.L55
 1369              	.L57:
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 1370              		.loc 1 838 0
 1371 0130 7B68     		ldr	r3, [r7, #4]
 1372 0132 9B6C     		ldr	r3, [r3, #72]
 1373 0134 002B     		cmp	r3, #0
 1374 0136 1BD0     		beq	.L55
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1375              		.loc 1 841 0
 1376 0138 7B68     		ldr	r3, [r7, #4]
 1377 013a 9B6C     		ldr	r3, [r3, #72]
 1378 013c 7868     		ldr	r0, [r7, #4]
 1379 013e 9847     		blx	r3
 1380              	.LVL1:
 1381 0140 16E0     		b	.L55
 1382              	.L56:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
ARM GAS  /tmp/ccg9tGuw.s 			page 40


 1383              		.loc 1 848 0
 1384 0142 7B68     		ldr	r3, [r7, #4]
 1385 0144 1B68     		ldr	r3, [r3]
 1386 0146 1B68     		ldr	r3, [r3]
 1387 0148 03F48073 		and	r3, r3, #256
 1388 014c 002B     		cmp	r3, #0
 1389 014e 07D1     		bne	.L60
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1390              		.loc 1 851 0
 1391 0150 7B68     		ldr	r3, [r7, #4]
 1392 0152 1B68     		ldr	r3, [r3]
 1393 0154 1A68     		ldr	r2, [r3]
 1394 0156 7B68     		ldr	r3, [r7, #4]
 1395 0158 1B68     		ldr	r3, [r3]
 1396 015a 22F00802 		bic	r2, r2, #8
 1397 015e 1A60     		str	r2, [r3]
 1398              	.L60:
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1399              		.loc 1 854 0
 1400 0160 7B68     		ldr	r3, [r7, #4]
 1401 0162 1B6C     		ldr	r3, [r3, #64]
 1402 0164 002B     		cmp	r3, #0
 1403 0166 03D0     		beq	.L55
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Half transfer callback */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1404              		.loc 1 857 0
 1405 0168 7B68     		ldr	r3, [r7, #4]
 1406 016a 1B6C     		ldr	r3, [r3, #64]
 1407 016c 7868     		ldr	r0, [r7, #4]
 1408 016e 9847     		blx	r3
 1409              	.LVL2:
 1410              	.L55:
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1411              		.loc 1 863 0
 1412 0170 7B68     		ldr	r3, [r7, #4]
 1413 0172 DB6D     		ldr	r3, [r3, #92]
 1414 0174 2022     		movs	r2, #32
 1415 0176 9A40     		lsls	r2, r2, r3
 1416 0178 FB68     		ldr	r3, [r7, #12]
 1417 017a 1340     		ands	r3, r3, r2
 1418 017c 002B     		cmp	r3, #0
 1419 017e 00F08E80 		beq	.L61
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1420              		.loc 1 865 0
 1421 0182 7B68     		ldr	r3, [r7, #4]
 1422 0184 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccg9tGuw.s 			page 41


 1423 0186 1B68     		ldr	r3, [r3]
 1424 0188 03F01003 		and	r3, r3, #16
 1425 018c 002B     		cmp	r3, #0
 1426 018e 00F08680 		beq	.L61
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer complete flag */
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1427              		.loc 1 868 0
 1428 0192 7B68     		ldr	r3, [r7, #4]
 1429 0194 DB6D     		ldr	r3, [r3, #92]
 1430 0196 2022     		movs	r2, #32
 1431 0198 9A40     		lsls	r2, r2, r3
 1432 019a 3B69     		ldr	r3, [r7, #16]
 1433 019c 9A60     		str	r2, [r3, #8]
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1434              		.loc 1 870 0
 1435 019e 7B68     		ldr	r3, [r7, #4]
 1436 01a0 93F83530 		ldrb	r3, [r3, #53]
 1437 01a4 DBB2     		uxtb	r3, r3
 1438 01a6 052B     		cmp	r3, #5
 1439 01a8 36D1     		bne	.L62
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 1440              		.loc 1 873 0
 1441 01aa 7B68     		ldr	r3, [r7, #4]
 1442 01ac 1B68     		ldr	r3, [r3]
 1443 01ae 1A68     		ldr	r2, [r3]
 1444 01b0 7B68     		ldr	r3, [r7, #4]
 1445 01b2 1B68     		ldr	r3, [r3]
 1446 01b4 22F01602 		bic	r2, r2, #22
 1447 01b8 1A60     		str	r2, [r3]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1448              		.loc 1 874 0
 1449 01ba 7B68     		ldr	r3, [r7, #4]
 1450 01bc 1B68     		ldr	r3, [r3]
 1451 01be 5A69     		ldr	r2, [r3, #20]
 1452 01c0 7B68     		ldr	r3, [r7, #4]
 1453 01c2 1B68     		ldr	r3, [r3]
 1454 01c4 22F08002 		bic	r2, r2, #128
 1455 01c8 5A61     		str	r2, [r3, #20]
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1456              		.loc 1 876 0
 1457 01ca 7B68     		ldr	r3, [r7, #4]
 1458 01cc 1B6C     		ldr	r3, [r3, #64]
 1459 01ce 002B     		cmp	r3, #0
 1460 01d0 03D1     		bne	.L63
 1461              		.loc 1 876 0 is_stmt 0 discriminator 1
 1462 01d2 7B68     		ldr	r3, [r7, #4]
 1463 01d4 9B6C     		ldr	r3, [r3, #72]
 1464 01d6 002B     		cmp	r3, #0
 1465 01d8 07D0     		beq	.L64
 1466              	.L63:
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
ARM GAS  /tmp/ccg9tGuw.s 			page 42


 1467              		.loc 1 878 0 is_stmt 1
 1468 01da 7B68     		ldr	r3, [r7, #4]
 1469 01dc 1B68     		ldr	r3, [r3]
 1470 01de 1A68     		ldr	r2, [r3]
 1471 01e0 7B68     		ldr	r3, [r7, #4]
 1472 01e2 1B68     		ldr	r3, [r3]
 1473 01e4 22F00802 		bic	r2, r2, #8
 1474 01e8 1A60     		str	r2, [r3]
 1475              	.L64:
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1476              		.loc 1 882 0
 1477 01ea 7B68     		ldr	r3, [r7, #4]
 1478 01ec DB6D     		ldr	r3, [r3, #92]
 1479 01ee 3F22     		movs	r2, #63
 1480 01f0 9A40     		lsls	r2, r2, r3
 1481 01f2 3B69     		ldr	r3, [r7, #16]
 1482 01f4 9A60     		str	r2, [r3, #8]
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1483              		.loc 1 885 0
 1484 01f6 7B68     		ldr	r3, [r7, #4]
 1485 01f8 0022     		movs	r2, #0
 1486 01fa 83F83420 		strb	r2, [r3, #52]
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1487              		.loc 1 888 0
 1488 01fe 7B68     		ldr	r3, [r7, #4]
 1489 0200 0122     		movs	r2, #1
 1490 0202 83F83520 		strb	r2, [r3, #53]
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 1491              		.loc 1 890 0
 1492 0206 7B68     		ldr	r3, [r7, #4]
 1493 0208 1B6D     		ldr	r3, [r3, #80]
 1494 020a 002B     		cmp	r3, #0
 1495 020c 7DD0     		beq	.L76
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1496              		.loc 1 892 0
 1497 020e 7B68     		ldr	r3, [r7, #4]
 1498 0210 1B6D     		ldr	r3, [r3, #80]
 1499 0212 7868     		ldr	r0, [r7, #4]
 1500 0214 9847     		blx	r3
 1501              	.LVL3:
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return;
 1502              		.loc 1 894 0
 1503 0216 78E0     		b	.L76
 1504              	.L62:
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
ARM GAS  /tmp/ccg9tGuw.s 			page 43


 1505              		.loc 1 897 0
 1506 0218 7B68     		ldr	r3, [r7, #4]
 1507 021a 1B68     		ldr	r3, [r3]
 1508 021c 1B68     		ldr	r3, [r3]
 1509 021e 03F48023 		and	r3, r3, #262144
 1510 0222 002B     		cmp	r3, #0
 1511 0224 1CD0     		beq	.L67
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1512              		.loc 1 900 0
 1513 0226 7B68     		ldr	r3, [r7, #4]
 1514 0228 1B68     		ldr	r3, [r3]
 1515 022a 1B68     		ldr	r3, [r3]
 1516 022c 03F40023 		and	r3, r3, #524288
 1517 0230 002B     		cmp	r3, #0
 1518 0232 08D1     		bne	.L68
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1519              		.loc 1 902 0
 1520 0234 7B68     		ldr	r3, [r7, #4]
 1521 0236 5B6C     		ldr	r3, [r3, #68]
 1522 0238 002B     		cmp	r3, #0
 1523 023a 30D0     		beq	.L61
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1524              		.loc 1 905 0
 1525 023c 7B68     		ldr	r3, [r7, #4]
 1526 023e 5B6C     		ldr	r3, [r3, #68]
 1527 0240 7868     		ldr	r0, [r7, #4]
 1528 0242 9847     		blx	r3
 1529              	.LVL4:
 1530 0244 2BE0     		b	.L61
 1531              	.L68:
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1532              		.loc 1 911 0
 1533 0246 7B68     		ldr	r3, [r7, #4]
 1534 0248 DB6B     		ldr	r3, [r3, #60]
 1535 024a 002B     		cmp	r3, #0
 1536 024c 27D0     		beq	.L61
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1537              		.loc 1 914 0
 1538 024e 7B68     		ldr	r3, [r7, #4]
 1539 0250 DB6B     		ldr	r3, [r3, #60]
 1540 0252 7868     		ldr	r0, [r7, #4]
 1541 0254 9847     		blx	r3
 1542              	.LVL5:
 1543 0256 22E0     		b	.L61
 1544              	.L79:
ARM GAS  /tmp/ccg9tGuw.s 			page 44


 1545              		.align	2
 1546              	.L78:
 1547 0258 00000000 		.word	SystemCoreClock
 1548 025c B5814E1B 		.word	458129845
 1549              	.L67:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1550              		.loc 1 921 0
 1551 0260 7B68     		ldr	r3, [r7, #4]
 1552 0262 1B68     		ldr	r3, [r3]
 1553 0264 1B68     		ldr	r3, [r3]
 1554 0266 03F48073 		and	r3, r3, #256
 1555 026a 002B     		cmp	r3, #0
 1556 026c 0FD1     		bne	.L71
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1557              		.loc 1 924 0
 1558 026e 7B68     		ldr	r3, [r7, #4]
 1559 0270 1B68     		ldr	r3, [r3]
 1560 0272 1A68     		ldr	r2, [r3]
 1561 0274 7B68     		ldr	r3, [r7, #4]
 1562 0276 1B68     		ldr	r3, [r3]
 1563 0278 22F01002 		bic	r2, r2, #16
 1564 027c 1A60     		str	r2, [r3]
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Process Unlocked */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1565              		.loc 1 927 0
 1566 027e 7B68     		ldr	r3, [r7, #4]
 1567 0280 0022     		movs	r2, #0
 1568 0282 83F83420 		strb	r2, [r3, #52]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Change the DMA state */
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1569              		.loc 1 930 0
 1570 0286 7B68     		ldr	r3, [r7, #4]
 1571 0288 0122     		movs	r2, #1
 1572 028a 83F83520 		strb	r2, [r3, #53]
 1573              	.L71:
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1574              		.loc 1 933 0
 1575 028e 7B68     		ldr	r3, [r7, #4]
 1576 0290 DB6B     		ldr	r3, [r3, #60]
 1577 0292 002B     		cmp	r3, #0
 1578 0294 03D0     		beq	.L61
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Transfer complete callback */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1579              		.loc 1 936 0
ARM GAS  /tmp/ccg9tGuw.s 			page 45


 1580 0296 7B68     		ldr	r3, [r7, #4]
 1581 0298 DB6B     		ldr	r3, [r3, #60]
 1582 029a 7868     		ldr	r0, [r7, #4]
 1583 029c 9847     		blx	r3
 1584              	.LVL6:
 1585              	.L61:
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* manage error case */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1586              		.loc 1 943 0
 1587 029e 7B68     		ldr	r3, [r7, #4]
 1588 02a0 5B6D     		ldr	r3, [r3, #84]
 1589 02a2 002B     		cmp	r3, #0
 1590 02a4 32D0     		beq	.L51
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1591              		.loc 1 945 0
 1592 02a6 7B68     		ldr	r3, [r7, #4]
 1593 02a8 5B6D     		ldr	r3, [r3, #84]
 1594 02aa 03F00103 		and	r3, r3, #1
 1595 02ae 002B     		cmp	r3, #0
 1596 02b0 22D0     		beq	.L72
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 1597              		.loc 1 947 0
 1598 02b2 7B68     		ldr	r3, [r7, #4]
 1599 02b4 0522     		movs	r2, #5
 1600 02b6 83F83520 		strb	r2, [r3, #53]
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the stream */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1601              		.loc 1 950 0
 1602 02ba 7B68     		ldr	r3, [r7, #4]
 1603 02bc 1B68     		ldr	r3, [r3]
 1604 02be 1A68     		ldr	r2, [r3]
 1605 02c0 7B68     		ldr	r3, [r7, #4]
 1606 02c2 1B68     		ldr	r3, [r3]
 1607 02c4 22F00102 		bic	r2, r2, #1
 1608 02c8 1A60     		str	r2, [r3]
 1609              	.L75:
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       do
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (++count > timeout)
 1610              		.loc 1 954 0
 1611 02ca BB68     		ldr	r3, [r7, #8]
 1612 02cc 0133     		adds	r3, r3, #1
 1613 02ce BB60     		str	r3, [r7, #8]
 1614 02d0 7A69     		ldr	r2, [r7, #20]
 1615 02d2 9A42     		cmp	r2, r3
 1616 02d4 07D3     		bcc	.L77
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           break;
ARM GAS  /tmp/ccg9tGuw.s 			page 46


 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1617              		.loc 1 959 0
 1618 02d6 7B68     		ldr	r3, [r7, #4]
 1619 02d8 1B68     		ldr	r3, [r3]
 1620 02da 1B68     		ldr	r3, [r3]
 1621 02dc 03F00103 		and	r3, r3, #1
 1622 02e0 002B     		cmp	r3, #0
 1623 02e2 F2D1     		bne	.L75
 1624 02e4 00E0     		b	.L74
 1625              	.L77:
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1626              		.loc 1 956 0
 1627 02e6 00BF     		nop
 1628              	.L74:
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1629              		.loc 1 962 0
 1630 02e8 7B68     		ldr	r3, [r7, #4]
 1631 02ea 0022     		movs	r2, #0
 1632 02ec 83F83420 		strb	r2, [r3, #52]
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1633              		.loc 1 965 0
 1634 02f0 7B68     		ldr	r3, [r7, #4]
 1635 02f2 0122     		movs	r2, #1
 1636 02f4 83F83520 		strb	r2, [r3, #53]
 1637              	.L72:
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1638              		.loc 1 968 0
 1639 02f8 7B68     		ldr	r3, [r7, #4]
 1640 02fa DB6C     		ldr	r3, [r3, #76]
 1641 02fc 002B     		cmp	r3, #0
 1642 02fe 05D0     		beq	.L51
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Transfer error callback */
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1643              		.loc 1 971 0
 1644 0300 7B68     		ldr	r3, [r7, #4]
 1645 0302 DB6C     		ldr	r3, [r3, #76]
 1646 0304 7868     		ldr	r0, [r7, #4]
 1647 0306 9847     		blx	r3
 1648              	.LVL7:
 1649 0308 00E0     		b	.L51
 1650              	.L76:
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 1651              		.loc 1 894 0
 1652 030a 00BF     		nop
 1653              	.L51:
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
ARM GAS  /tmp/ccg9tGuw.s 			page 47


 1654              		.loc 1 974 0
 1655 030c 1837     		adds	r7, r7, #24
 1656              	.LCFI39:
 1657              		.cfi_def_cfa_offset 8
 1658 030e BD46     		mov	sp, r7
 1659              	.LCFI40:
 1660              		.cfi_def_cfa_register 13
 1661              		@ sp needed
 1662 0310 80BD     		pop	{r7, pc}
 1663              		.cfi_endproc
 1664              	.LFE145:
 1666 0312 00BF     		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1667              		.align	1
 1668              		.global	HAL_DMA_RegisterCallback
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv4-sp-d16
 1674              	HAL_DMA_RegisterCallback:
 1675              	.LFB146:
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Register callbacks
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */                      
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1676              		.loc 1 987 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 24
 1679              		@ frame_needed = 1, uses_anonymous_args = 0
 1680              		@ link register save eliminated.
 1681 0000 80B4     		push	{r7}
 1682              	.LCFI41:
 1683              		.cfi_def_cfa_offset 4
 1684              		.cfi_offset 7, -4
 1685 0002 87B0     		sub	sp, sp, #28
 1686              	.LCFI42:
 1687              		.cfi_def_cfa_offset 32
 1688 0004 00AF     		add	r7, sp, #0
 1689              	.LCFI43:
 1690              		.cfi_def_cfa_register 7
 1691 0006 F860     		str	r0, [r7, #12]
 1692 0008 0B46     		mov	r3, r1
 1693 000a 7A60     		str	r2, [r7, #4]
 1694 000c FB72     		strb	r3, [r7, #11]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1695              		.loc 1 989 0
 1696 000e 0023     		movs	r3, #0
 1697 0010 FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/ccg9tGuw.s 			page 48


 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1698              		.loc 1 992 0
 1699 0012 FB68     		ldr	r3, [r7, #12]
 1700 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1701 0018 012B     		cmp	r3, #1
 1702 001a 01D1     		bne	.L81
 1703              		.loc 1 992 0 is_stmt 0 discriminator 1
 1704 001c 0223     		movs	r3, #2
 1705 001e 3CE0     		b	.L82
 1706              	.L81:
 1707              		.loc 1 992 0 discriminator 2
 1708 0020 FB68     		ldr	r3, [r7, #12]
 1709 0022 0122     		movs	r2, #1
 1710 0024 83F83420 		strb	r2, [r3, #52]
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1711              		.loc 1 994 0 is_stmt 1 discriminator 2
 1712 0028 FB68     		ldr	r3, [r7, #12]
 1713 002a 93F83530 		ldrb	r3, [r3, #53]
 1714 002e DBB2     		uxtb	r3, r3
 1715 0030 012B     		cmp	r3, #1
 1716 0032 29D1     		bne	.L83
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 1717              		.loc 1 996 0
 1718 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1719 0036 052B     		cmp	r3, #5
 1720 0038 29D8     		bhi	.L94
 1721 003a 01A2     		adr	r2, .L86
 1722 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1723              		.p2align 2
 1724              	.L86:
 1725 0040 59000000 		.word	.L85+1
 1726 0044 61000000 		.word	.L87+1
 1727 0048 69000000 		.word	.L88+1
 1728 004c 71000000 		.word	.L89+1
 1729 0050 79000000 		.word	.L90+1
 1730 0054 81000000 		.word	.L91+1
 1731              		.p2align 1
 1732              	.L85:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1733              		.loc 1 999 0
 1734 0058 FB68     		ldr	r3, [r7, #12]
 1735 005a 7A68     		ldr	r2, [r7, #4]
 1736 005c DA63     		str	r2, [r3, #60]
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1737              		.loc 1 1000 0
 1738 005e 17E0     		b	.L93
 1739              	.L87:
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1740              		.loc 1 1003 0
ARM GAS  /tmp/ccg9tGuw.s 			page 49


 1741 0060 FB68     		ldr	r3, [r7, #12]
 1742 0062 7A68     		ldr	r2, [r7, #4]
 1743 0064 1A64     		str	r2, [r3, #64]
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1744              		.loc 1 1004 0
 1745 0066 13E0     		b	.L93
 1746              	.L88:
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1747              		.loc 1 1007 0
 1748 0068 FB68     		ldr	r3, [r7, #12]
 1749 006a 7A68     		ldr	r2, [r7, #4]
 1750 006c 5A64     		str	r2, [r3, #68]
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1751              		.loc 1 1008 0
 1752 006e 0FE0     		b	.L93
 1753              	.L89:
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1754              		.loc 1 1011 0
 1755 0070 FB68     		ldr	r3, [r7, #12]
 1756 0072 7A68     		ldr	r2, [r7, #4]
 1757 0074 9A64     		str	r2, [r3, #72]
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1758              		.loc 1 1012 0
 1759 0076 0BE0     		b	.L93
 1760              	.L90:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1761              		.loc 1 1015 0
 1762 0078 FB68     		ldr	r3, [r7, #12]
 1763 007a 7A68     		ldr	r2, [r7, #4]
 1764 007c DA64     		str	r2, [r3, #76]
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1765              		.loc 1 1016 0
 1766 007e 07E0     		b	.L93
 1767              	.L91:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1768              		.loc 1 1019 0
 1769 0080 FB68     		ldr	r3, [r7, #12]
 1770 0082 7A68     		ldr	r2, [r7, #4]
 1771 0084 1A65     		str	r2, [r3, #80]
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1772              		.loc 1 1020 0
 1773 0086 03E0     		b	.L93
 1774              	.L83:
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
ARM GAS  /tmp/ccg9tGuw.s 			page 50


1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status =  HAL_ERROR;
 1775              		.loc 1 1029 0
 1776 0088 0123     		movs	r3, #1
 1777 008a FB75     		strb	r3, [r7, #23]
 1778 008c 00E0     		b	.L93
 1779              	.L94:
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1780              		.loc 1 1023 0
 1781 008e 00BF     		nop
 1782              	.L93:
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1783              		.loc 1 1033 0
 1784 0090 FB68     		ldr	r3, [r7, #12]
 1785 0092 0022     		movs	r2, #0
 1786 0094 83F83420 		strb	r2, [r3, #52]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1787              		.loc 1 1035 0
 1788 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1789              	.L82:
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1790              		.loc 1 1036 0
 1791 009a 1846     		mov	r0, r3
 1792 009c 1C37     		adds	r7, r7, #28
 1793              	.LCFI44:
 1794              		.cfi_def_cfa_offset 4
 1795 009e BD46     		mov	sp, r7
 1796              	.LCFI45:
 1797              		.cfi_def_cfa_register 13
 1798              		@ sp needed
 1799 00a0 5DF8047B 		ldr	r7, [sp], #4
 1800              	.LCFI46:
 1801              		.cfi_restore 7
 1802              		.cfi_def_cfa_offset 0
 1803 00a4 7047     		bx	lr
 1804              		.cfi_endproc
 1805              	.LFE146:
 1807 00a6 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1808              		.align	1
 1809              		.global	HAL_DMA_UnRegisterCallback
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu fpv4-sp-d16
 1815              	HAL_DMA_UnRegisterCallback:
 1816              	.LFB147:
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  UnRegister callbacks
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
ARM GAS  /tmp/ccg9tGuw.s 			page 51


1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */              
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1817              		.loc 1 1047 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 16
 1820              		@ frame_needed = 1, uses_anonymous_args = 0
 1821              		@ link register save eliminated.
 1822 0000 80B4     		push	{r7}
 1823              	.LCFI47:
 1824              		.cfi_def_cfa_offset 4
 1825              		.cfi_offset 7, -4
 1826 0002 85B0     		sub	sp, sp, #20
 1827              	.LCFI48:
 1828              		.cfi_def_cfa_offset 24
 1829 0004 00AF     		add	r7, sp, #0
 1830              	.LCFI49:
 1831              		.cfi_def_cfa_register 7
 1832 0006 7860     		str	r0, [r7, #4]
 1833 0008 0B46     		mov	r3, r1
 1834 000a FB70     		strb	r3, [r7, #3]
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1835              		.loc 1 1048 0
 1836 000c 0023     		movs	r3, #0
 1837 000e FB73     		strb	r3, [r7, #15]
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1838              		.loc 1 1051 0
 1839 0010 7B68     		ldr	r3, [r7, #4]
 1840 0012 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1841 0016 012B     		cmp	r3, #1
 1842 0018 01D1     		bne	.L96
 1843              		.loc 1 1051 0 is_stmt 0 discriminator 1
 1844 001a 0223     		movs	r3, #2
 1845 001c 54E0     		b	.L97
 1846              	.L96:
 1847              		.loc 1 1051 0 discriminator 2
 1848 001e 7B68     		ldr	r3, [r7, #4]
 1849 0020 0122     		movs	r2, #1
 1850 0022 83F83420 		strb	r2, [r3, #52]
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1851              		.loc 1 1053 0 is_stmt 1 discriminator 2
 1852 0026 7B68     		ldr	r3, [r7, #4]
 1853 0028 93F83530 		ldrb	r3, [r3, #53]
 1854 002c DBB2     		uxtb	r3, r3
 1855 002e 012B     		cmp	r3, #1
 1856 0030 43D1     		bne	.L98
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 1857              		.loc 1 1055 0
 1858 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1859 0034 062B     		cmp	r3, #6
 1860 0036 3CD8     		bhi	.L99
ARM GAS  /tmp/ccg9tGuw.s 			page 52


 1861 0038 01A2     		adr	r2, .L101
 1862 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1863 003e 00BF     		.p2align 2
 1864              	.L101:
 1865 0040 5D000000 		.word	.L100+1
 1866 0044 65000000 		.word	.L102+1
 1867 0048 6D000000 		.word	.L103+1
 1868 004c 75000000 		.word	.L104+1
 1869 0050 7D000000 		.word	.L105+1
 1870 0054 85000000 		.word	.L106+1
 1871 0058 8D000000 		.word	.L107+1
 1872              		.p2align 1
 1873              	.L100:
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1874              		.loc 1 1058 0
 1875 005c 7B68     		ldr	r3, [r7, #4]
 1876 005e 0022     		movs	r2, #0
 1877 0060 DA63     		str	r2, [r3, #60]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1878              		.loc 1 1059 0
 1879 0062 2CE0     		b	.L109
 1880              	.L102:
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1881              		.loc 1 1062 0
 1882 0064 7B68     		ldr	r3, [r7, #4]
 1883 0066 0022     		movs	r2, #0
 1884 0068 1A64     		str	r2, [r3, #64]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1885              		.loc 1 1063 0
 1886 006a 28E0     		b	.L109
 1887              	.L103:
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1888              		.loc 1 1066 0
 1889 006c 7B68     		ldr	r3, [r7, #4]
 1890 006e 0022     		movs	r2, #0
 1891 0070 5A64     		str	r2, [r3, #68]
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1892              		.loc 1 1067 0
 1893 0072 24E0     		b	.L109
 1894              	.L104:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1895              		.loc 1 1070 0
 1896 0074 7B68     		ldr	r3, [r7, #4]
 1897 0076 0022     		movs	r2, #0
 1898 0078 9A64     		str	r2, [r3, #72]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1899              		.loc 1 1071 0
 1900 007a 20E0     		b	.L109
 1901              	.L105:
ARM GAS  /tmp/ccg9tGuw.s 			page 53


1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1902              		.loc 1 1074 0
 1903 007c 7B68     		ldr	r3, [r7, #4]
 1904 007e 0022     		movs	r2, #0
 1905 0080 DA64     		str	r2, [r3, #76]
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1906              		.loc 1 1075 0
 1907 0082 1CE0     		b	.L109
 1908              	.L106:
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1909              		.loc 1 1078 0
 1910 0084 7B68     		ldr	r3, [r7, #4]
 1911 0086 0022     		movs	r2, #0
 1912 0088 1A65     		str	r2, [r3, #80]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1913              		.loc 1 1079 0
 1914 008a 18E0     		b	.L109
 1915              	.L107:
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1916              		.loc 1 1082 0
 1917 008c 7B68     		ldr	r3, [r7, #4]
 1918 008e 0022     		movs	r2, #0
 1919 0090 DA63     		str	r2, [r3, #60]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1920              		.loc 1 1083 0
 1921 0092 7B68     		ldr	r3, [r7, #4]
 1922 0094 0022     		movs	r2, #0
 1923 0096 1A64     		str	r2, [r3, #64]
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1924              		.loc 1 1084 0
 1925 0098 7B68     		ldr	r3, [r7, #4]
 1926 009a 0022     		movs	r2, #0
 1927 009c 5A64     		str	r2, [r3, #68]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1928              		.loc 1 1085 0
 1929 009e 7B68     		ldr	r3, [r7, #4]
 1930 00a0 0022     		movs	r2, #0
 1931 00a2 9A64     		str	r2, [r3, #72]
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1932              		.loc 1 1086 0
 1933 00a4 7B68     		ldr	r3, [r7, #4]
 1934 00a6 0022     		movs	r2, #0
 1935 00a8 DA64     		str	r2, [r3, #76]
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1936              		.loc 1 1087 0
 1937 00aa 7B68     		ldr	r3, [r7, #4]
 1938 00ac 0022     		movs	r2, #0
 1939 00ae 1A65     		str	r2, [r3, #80]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1940              		.loc 1 1088 0
 1941 00b0 05E0     		b	.L109
ARM GAS  /tmp/ccg9tGuw.s 			page 54


 1942              	.L99:
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
 1943              		.loc 1 1091 0
 1944 00b2 0123     		movs	r3, #1
 1945 00b4 FB73     		strb	r3, [r7, #15]
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1946              		.loc 1 1092 0
 1947 00b6 00BF     		nop
 1948 00b8 01E0     		b	.L109
 1949              	.L98:
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_ERROR;
 1950              		.loc 1 1097 0
 1951 00ba 0123     		movs	r3, #1
 1952 00bc FB73     		strb	r3, [r7, #15]
 1953              	.L109:
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1954              		.loc 1 1101 0
 1955 00be 7B68     		ldr	r3, [r7, #4]
 1956 00c0 0022     		movs	r2, #0
 1957 00c2 83F83420 		strb	r2, [r3, #52]
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1958              		.loc 1 1103 0
 1959 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1960              	.L97:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1961              		.loc 1 1104 0
 1962 00c8 1846     		mov	r0, r3
 1963 00ca 1437     		adds	r7, r7, #20
 1964              	.LCFI50:
 1965              		.cfi_def_cfa_offset 4
 1966 00cc BD46     		mov	sp, r7
 1967              	.LCFI51:
 1968              		.cfi_def_cfa_register 13
 1969              		@ sp needed
 1970 00ce 5DF8047B 		ldr	r7, [sp], #4
 1971              	.LCFI52:
 1972              		.cfi_restore 7
 1973              		.cfi_def_cfa_offset 0
 1974 00d2 7047     		bx	lr
 1975              		.cfi_endproc
 1976              	.LFE147:
 1978              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1979              		.align	1
 1980              		.global	HAL_DMA_GetState
 1981              		.syntax unified
 1982              		.thumb
 1983              		.thumb_func
ARM GAS  /tmp/ccg9tGuw.s 			page 55


 1984              		.fpu fpv4-sp-d16
 1986              	HAL_DMA_GetState:
 1987              	.LFB148:
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                     ##### State and Errors functions #####
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This subsection provides functions allowing to
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Check the DMA state
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Get error code
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA state.
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL state
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1988              		.loc 1 1132 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 8
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 1993 0000 80B4     		push	{r7}
 1994              	.LCFI53:
 1995              		.cfi_def_cfa_offset 4
 1996              		.cfi_offset 7, -4
 1997 0002 83B0     		sub	sp, sp, #12
 1998              	.LCFI54:
 1999              		.cfi_def_cfa_offset 16
 2000 0004 00AF     		add	r7, sp, #0
 2001              	.LCFI55:
 2002              		.cfi_def_cfa_register 7
 2003 0006 7860     		str	r0, [r7, #4]
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
 2004              		.loc 1 1133 0
 2005 0008 7B68     		ldr	r3, [r7, #4]
 2006 000a 93F83530 		ldrb	r3, [r3, #53]
 2007 000e DBB2     		uxtb	r3, r3
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2008              		.loc 1 1134 0
 2009 0010 1846     		mov	r0, r3
 2010 0012 0C37     		adds	r7, r7, #12
 2011              	.LCFI56:
ARM GAS  /tmp/ccg9tGuw.s 			page 56


 2012              		.cfi_def_cfa_offset 4
 2013 0014 BD46     		mov	sp, r7
 2014              	.LCFI57:
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 0016 5DF8047B 		ldr	r7, [sp], #4
 2018              	.LCFI58:
 2019              		.cfi_restore 7
 2020              		.cfi_def_cfa_offset 0
 2021 001a 7047     		bx	lr
 2022              		.cfi_endproc
 2023              	.LFE148:
 2025              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 2026              		.align	1
 2027              		.global	HAL_DMA_GetError
 2028              		.syntax unified
 2029              		.thumb
 2030              		.thumb_func
 2031              		.fpu fpv4-sp-d16
 2033              	HAL_DMA_GetError:
 2034              	.LFB149:
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Return the DMA error code
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval DMA Error Code
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2035              		.loc 1 1143 0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 8
 2038              		@ frame_needed = 1, uses_anonymous_args = 0
 2039              		@ link register save eliminated.
 2040 0000 80B4     		push	{r7}
 2041              	.LCFI59:
 2042              		.cfi_def_cfa_offset 4
 2043              		.cfi_offset 7, -4
 2044 0002 83B0     		sub	sp, sp, #12
 2045              	.LCFI60:
 2046              		.cfi_def_cfa_offset 16
 2047 0004 00AF     		add	r7, sp, #0
 2048              	.LCFI61:
 2049              		.cfi_def_cfa_register 7
 2050 0006 7860     		str	r0, [r7, #4]
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
 2051              		.loc 1 1144 0
 2052 0008 7B68     		ldr	r3, [r7, #4]
 2053 000a 5B6D     		ldr	r3, [r3, #84]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2054              		.loc 1 1145 0
 2055 000c 1846     		mov	r0, r3
 2056 000e 0C37     		adds	r7, r7, #12
 2057              	.LCFI62:
 2058              		.cfi_def_cfa_offset 4
 2059 0010 BD46     		mov	sp, r7
ARM GAS  /tmp/ccg9tGuw.s 			page 57


 2060              	.LCFI63:
 2061              		.cfi_def_cfa_register 13
 2062              		@ sp needed
 2063 0012 5DF8047B 		ldr	r7, [sp], #4
 2064              	.LCFI64:
 2065              		.cfi_restore 7
 2066              		.cfi_def_cfa_offset 0
 2067 0016 7047     		bx	lr
 2068              		.cfi_endproc
 2069              	.LFE149:
 2071              		.section	.text.DMA_SetConfig,"ax",%progbits
 2072              		.align	1
 2073              		.syntax unified
 2074              		.thumb
 2075              		.thumb_func
 2076              		.fpu fpv4-sp-d16
 2078              	DMA_SetConfig:
 2079              	.LFB150:
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2080              		.loc 1 1169 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 16
 2083              		@ frame_needed = 1, uses_anonymous_args = 0
 2084              		@ link register save eliminated.
 2085 0000 80B4     		push	{r7}
 2086              	.LCFI65:
 2087              		.cfi_def_cfa_offset 4
 2088              		.cfi_offset 7, -4
 2089 0002 85B0     		sub	sp, sp, #20
 2090              	.LCFI66:
 2091              		.cfi_def_cfa_offset 24
 2092 0004 00AF     		add	r7, sp, #0
 2093              	.LCFI67:
 2094              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccg9tGuw.s 			page 58


 2095 0006 F860     		str	r0, [r7, #12]
 2096 0008 B960     		str	r1, [r7, #8]
 2097 000a 7A60     		str	r2, [r7, #4]
 2098 000c 3B60     		str	r3, [r7]
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear DBM bit */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 2099              		.loc 1 1171 0
 2100 000e FB68     		ldr	r3, [r7, #12]
 2101 0010 1B68     		ldr	r3, [r3]
 2102 0012 1A68     		ldr	r2, [r3]
 2103 0014 FB68     		ldr	r3, [r7, #12]
 2104 0016 1B68     		ldr	r3, [r3]
 2105 0018 22F48022 		bic	r2, r2, #262144
 2106 001c 1A60     		str	r2, [r3]
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Configure DMA Stream data length */
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
 2107              		.loc 1 1174 0
 2108 001e FB68     		ldr	r3, [r7, #12]
 2109 0020 1B68     		ldr	r3, [r3]
 2110 0022 3A68     		ldr	r2, [r7]
 2111 0024 5A60     		str	r2, [r3, #4]
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory to Peripheral */
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2112              		.loc 1 1177 0
 2113 0026 FB68     		ldr	r3, [r7, #12]
 2114 0028 9B68     		ldr	r3, [r3, #8]
 2115 002a 402B     		cmp	r3, #64
 2116 002c 08D1     		bne	.L115
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
 2117              		.loc 1 1180 0
 2118 002e FB68     		ldr	r3, [r7, #12]
 2119 0030 1B68     		ldr	r3, [r3]
 2120 0032 7A68     		ldr	r2, [r7, #4]
 2121 0034 9A60     		str	r2, [r3, #8]
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
 2122              		.loc 1 1183 0
 2123 0036 FB68     		ldr	r3, [r7, #12]
 2124 0038 1B68     		ldr	r3, [r3]
 2125 003a BA68     		ldr	r2, [r7, #8]
 2126 003c DA60     		str	r2, [r3, #12]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Peripheral to Memory */
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
ARM GAS  /tmp/ccg9tGuw.s 			page 59


 2127              		.loc 1 1194 0
 2128 003e 07E0     		b	.L117
 2129              	.L115:
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 2130              		.loc 1 1189 0
 2131 0040 FB68     		ldr	r3, [r7, #12]
 2132 0042 1B68     		ldr	r3, [r3]
 2133 0044 BA68     		ldr	r2, [r7, #8]
 2134 0046 9A60     		str	r2, [r3, #8]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 2135              		.loc 1 1192 0
 2136 0048 FB68     		ldr	r3, [r7, #12]
 2137 004a 1B68     		ldr	r3, [r3]
 2138 004c 7A68     		ldr	r2, [r7, #4]
 2139 004e DA60     		str	r2, [r3, #12]
 2140              	.L117:
 2141              		.loc 1 1194 0
 2142 0050 00BF     		nop
 2143 0052 1437     		adds	r7, r7, #20
 2144              	.LCFI68:
 2145              		.cfi_def_cfa_offset 4
 2146 0054 BD46     		mov	sp, r7
 2147              	.LCFI69:
 2148              		.cfi_def_cfa_register 13
 2149              		@ sp needed
 2150 0056 5DF8047B 		ldr	r7, [sp], #4
 2151              	.LCFI70:
 2152              		.cfi_restore 7
 2153              		.cfi_def_cfa_offset 0
 2154 005a 7047     		bx	lr
 2155              		.cfi_endproc
 2156              	.LFE150:
 2158              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
 2159              		.align	1
 2160              		.syntax unified
 2161              		.thumb
 2162              		.thumb_func
 2163              		.fpu fpv4-sp-d16
 2165              	DMA_CalcBaseAndBitshift:
 2166              	.LFB151:
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval Stream base address
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2167              		.loc 1 1203 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 16
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171              		@ link register save eliminated.
 2172 0000 80B4     		push	{r7}
 2173              	.LCFI71:
 2174              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccg9tGuw.s 			page 60


 2175              		.cfi_offset 7, -4
 2176 0002 85B0     		sub	sp, sp, #20
 2177              	.LCFI72:
 2178              		.cfi_def_cfa_offset 24
 2179 0004 00AF     		add	r7, sp, #0
 2180              	.LCFI73:
 2181              		.cfi_def_cfa_register 7
 2182 0006 7860     		str	r0, [r7, #4]
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 2183              		.loc 1 1204 0
 2184 0008 7B68     		ldr	r3, [r7, #4]
 2185 000a 1B68     		ldr	r3, [r3]
 2186 000c DBB2     		uxtb	r3, r3
 2187 000e 103B     		subs	r3, r3, #16
 2188 0010 134A     		ldr	r2, .L122
 2189 0012 A2FB0323 		umull	r2, r3, r2, r3
 2190 0016 1B09     		lsrs	r3, r3, #4
 2191 0018 FB60     		str	r3, [r7, #12]
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 2192              		.loc 1 1208 0
 2193 001a 124A     		ldr	r2, .L122+4
 2194 001c FB68     		ldr	r3, [r7, #12]
 2195 001e 1344     		add	r3, r3, r2
 2196 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2197 0022 1A46     		mov	r2, r3
 2198 0024 7B68     		ldr	r3, [r7, #4]
 2199 0026 DA65     		str	r2, [r3, #92]
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (stream_number > 3U)
 2200              		.loc 1 1210 0
 2201 0028 FB68     		ldr	r3, [r7, #12]
 2202 002a 032B     		cmp	r3, #3
 2203 002c 08D9     		bls	.L119
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 2204              		.loc 1 1213 0
 2205 002e 7B68     		ldr	r3, [r7, #4]
 2206 0030 1B68     		ldr	r3, [r3]
 2207 0032 1A46     		mov	r2, r3
 2208 0034 0C4B     		ldr	r3, .L122+8
 2209 0036 1340     		ands	r3, r3, r2
 2210 0038 1A1D     		adds	r2, r3, #4
 2211 003a 7B68     		ldr	r3, [r7, #4]
 2212 003c 9A65     		str	r2, [r3, #88]
 2213 003e 06E0     		b	.L120
 2214              	.L119:
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 2215              		.loc 1 1218 0
 2216 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccg9tGuw.s 			page 61


 2217 0042 1B68     		ldr	r3, [r3]
 2218 0044 1A46     		mov	r2, r3
 2219 0046 084B     		ldr	r3, .L122+8
 2220 0048 1340     		ands	r3, r3, r2
 2221 004a 7A68     		ldr	r2, [r7, #4]
 2222 004c 9365     		str	r3, [r2, #88]
 2223              	.L120:
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->StreamBaseAddress;
 2224              		.loc 1 1221 0
 2225 004e 7B68     		ldr	r3, [r7, #4]
 2226 0050 9B6D     		ldr	r3, [r3, #88]
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2227              		.loc 1 1222 0
 2228 0052 1846     		mov	r0, r3
 2229 0054 1437     		adds	r7, r7, #20
 2230              	.LCFI74:
 2231              		.cfi_def_cfa_offset 4
 2232 0056 BD46     		mov	sp, r7
 2233              	.LCFI75:
 2234              		.cfi_def_cfa_register 13
 2235              		@ sp needed
 2236 0058 5DF8047B 		ldr	r7, [sp], #4
 2237              	.LCFI76:
 2238              		.cfi_restore 7
 2239              		.cfi_def_cfa_offset 0
 2240 005c 7047     		bx	lr
 2241              	.L123:
 2242 005e 00BF     		.align	2
 2243              	.L122:
 2244 0060 ABAAAAAA 		.word	-1431655765
 2245 0064 00000000 		.word	flagBitshiftOffset.10141
 2246 0068 00FCFFFF 		.word	-1024
 2247              		.cfi_endproc
 2248              	.LFE151:
 2250              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 2251              		.align	1
 2252              		.syntax unified
 2253              		.thumb
 2254              		.thumb_func
 2255              		.fpu fpv4-sp-d16
 2257              	DMA_CheckFifoParam:
 2258              	.LFB152:
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2259              		.loc 1 1231 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 16
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccg9tGuw.s 			page 62


 2263              		@ link register save eliminated.
 2264 0000 80B4     		push	{r7}
 2265              	.LCFI77:
 2266              		.cfi_def_cfa_offset 4
 2267              		.cfi_offset 7, -4
 2268 0002 85B0     		sub	sp, sp, #20
 2269              	.LCFI78:
 2270              		.cfi_def_cfa_offset 24
 2271 0004 00AF     		add	r7, sp, #0
 2272              	.LCFI79:
 2273              		.cfi_def_cfa_register 7
 2274 0006 7860     		str	r0, [r7, #4]
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2275              		.loc 1 1232 0
 2276 0008 0023     		movs	r3, #0
 2277 000a FB73     		strb	r3, [r7, #15]
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 2278              		.loc 1 1233 0
 2279 000c 7B68     		ldr	r3, [r7, #4]
 2280 000e 9B6A     		ldr	r3, [r3, #40]
 2281 0010 BB60     		str	r3, [r7, #8]
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 2282              		.loc 1 1236 0
 2283 0012 7B68     		ldr	r3, [r7, #4]
 2284 0014 9B69     		ldr	r3, [r3, #24]
 2285 0016 002B     		cmp	r3, #0
 2286 0018 1FD1     		bne	.L125
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2287              		.loc 1 1238 0
 2288 001a BB68     		ldr	r3, [r7, #8]
 2289 001c 032B     		cmp	r3, #3
 2290 001e 55D8     		bhi	.L149
 2291 0020 01A2     		adr	r2, .L128
 2292 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2293 0026 00BF     		.p2align 2
 2294              	.L128:
 2295 0028 39000000 		.word	.L127+1
 2296 002c 4B000000 		.word	.L129+1
 2297 0030 39000000 		.word	.L127+1
 2298 0034 CD000000 		.word	.L149+1
 2299              		.p2align 1
 2300              	.L127:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2301              		.loc 1 1242 0
 2302 0038 7B68     		ldr	r3, [r7, #4]
 2303 003a DB6A     		ldr	r3, [r3, #44]
 2304 003c 03F08073 		and	r3, r3, #16777216
 2305 0040 002B     		cmp	r3, #0
 2306 0042 45D0     		beq	.L150
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
ARM GAS  /tmp/ccg9tGuw.s 			page 63


 2307              		.loc 1 1244 0
 2308 0044 0123     		movs	r3, #1
 2309 0046 FB73     		strb	r3, [r7, #15]
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2310              		.loc 1 1246 0
 2311 0048 42E0     		b	.L150
 2312              	.L129:
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2313              		.loc 1 1248 0
 2314 004a 7B68     		ldr	r3, [r7, #4]
 2315 004c DB6A     		ldr	r3, [r3, #44]
 2316 004e B3F1C07F 		cmp	r3, #25165824
 2317 0052 3FD1     		bne	.L151
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2318              		.loc 1 1250 0
 2319 0054 0123     		movs	r3, #1
 2320 0056 FB73     		strb	r3, [r7, #15]
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2321              		.loc 1 1252 0
 2322 0058 3CE0     		b	.L151
 2323              	.L125:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 2324              		.loc 1 1261 0
 2325 005a 7B68     		ldr	r3, [r7, #4]
 2326 005c 9B69     		ldr	r3, [r3, #24]
 2327 005e B3F5005F 		cmp	r3, #8192
 2328 0062 21D1     		bne	.L135
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2329              		.loc 1 1263 0
 2330 0064 BB68     		ldr	r3, [r7, #8]
 2331 0066 032B     		cmp	r3, #3
 2332 0068 36D8     		bhi	.L152
 2333 006a 01A2     		adr	r2, .L138
 2334 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2335              		.p2align 2
 2336              	.L138:
 2337 0070 81000000 		.word	.L137+1
 2338 0074 87000000 		.word	.L139+1
 2339 0078 81000000 		.word	.L137+1
 2340 007c 99000000 		.word	.L140+1
 2341              		.p2align 1
 2342              	.L137:
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
ARM GAS  /tmp/ccg9tGuw.s 			page 64


1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
 2343              		.loc 1 1267 0
 2344 0080 0123     		movs	r3, #1
 2345 0082 FB73     		strb	r3, [r7, #15]
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2346              		.loc 1 1268 0
 2347 0084 2FE0     		b	.L134
 2348              	.L139:
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2349              		.loc 1 1270 0
 2350 0086 7B68     		ldr	r3, [r7, #4]
 2351 0088 DB6A     		ldr	r3, [r3, #44]
 2352 008a 03F08073 		and	r3, r3, #16777216
 2353 008e 002B     		cmp	r3, #0
 2354 0090 24D0     		beq	.L153
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2355              		.loc 1 1272 0
 2356 0092 0123     		movs	r3, #1
 2357 0094 FB73     		strb	r3, [r7, #15]
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2358              		.loc 1 1274 0
 2359 0096 21E0     		b	.L153
 2360              	.L140:
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2361              		.loc 1 1276 0
 2362 0098 7B68     		ldr	r3, [r7, #4]
 2363 009a DB6A     		ldr	r3, [r3, #44]
 2364 009c B3F1C07F 		cmp	r3, #25165824
 2365 00a0 1ED1     		bne	.L154
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2366              		.loc 1 1278 0
 2367 00a2 0123     		movs	r3, #1
 2368 00a4 FB73     		strb	r3, [r7, #15]
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;   
 2369              		.loc 1 1280 0
 2370 00a6 1BE0     		b	.L154
 2371              	.L135:
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Word */
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2372              		.loc 1 1289 0
 2373 00a8 BB68     		ldr	r3, [r7, #8]
 2374 00aa 022B     		cmp	r3, #2
 2375 00ac 02D9     		bls	.L145
ARM GAS  /tmp/ccg9tGuw.s 			page 65


 2376 00ae 032B     		cmp	r3, #3
 2377 00b0 03D0     		beq	.L146
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2378              		.loc 1 1303 0
 2379 00b2 18E0     		b	.L134
 2380              	.L145:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2381              		.loc 1 1294 0
 2382 00b4 0123     		movs	r3, #1
 2383 00b6 FB73     		strb	r3, [r7, #15]
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2384              		.loc 1 1295 0
 2385 00b8 15E0     		b	.L134
 2386              	.L146:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 2387              		.loc 1 1297 0
 2388 00ba 7B68     		ldr	r3, [r7, #4]
 2389 00bc DB6A     		ldr	r3, [r3, #44]
 2390 00be 03F08073 		and	r3, r3, #16777216
 2391 00c2 002B     		cmp	r3, #0
 2392 00c4 0ED0     		beq	.L155
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 2393              		.loc 1 1299 0
 2394 00c6 0123     		movs	r3, #1
 2395 00c8 FB73     		strb	r3, [r7, #15]
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
 2396              		.loc 1 1301 0
 2397 00ca 0BE0     		b	.L155
 2398              	.L149:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 2399              		.loc 1 1256 0
 2400 00cc 00BF     		nop
 2401 00ce 0AE0     		b	.L134
 2402              	.L150:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
 2403              		.loc 1 1246 0
 2404 00d0 00BF     		nop
 2405 00d2 08E0     		b	.L134
 2406              	.L151:
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2407              		.loc 1 1252 0
 2408 00d4 00BF     		nop
 2409 00d6 06E0     		b	.L134
 2410              	.L152:
ARM GAS  /tmp/ccg9tGuw.s 			page 66


1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 2411              		.loc 1 1282 0
 2412 00d8 00BF     		nop
 2413 00da 04E0     		b	.L134
 2414              	.L153:
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2415              		.loc 1 1274 0
 2416 00dc 00BF     		nop
 2417 00de 02E0     		b	.L134
 2418              	.L154:
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
 2419              		.loc 1 1280 0
 2420 00e0 00BF     		nop
 2421 00e2 00E0     		b	.L134
 2422              	.L155:
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
 2423              		.loc 1 1301 0
 2424 00e4 00BF     		nop
 2425              	.L134:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 2426              		.loc 1 1307 0
 2427 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2428              		.loc 1 1308 0
 2429 00e8 1846     		mov	r0, r3
 2430 00ea 1437     		adds	r7, r7, #20
 2431              	.LCFI80:
 2432              		.cfi_def_cfa_offset 4
 2433 00ec BD46     		mov	sp, r7
 2434              	.LCFI81:
 2435              		.cfi_def_cfa_register 13
 2436              		@ sp needed
 2437 00ee 5DF8047B 		ldr	r7, [sp], #4
 2438              	.LCFI82:
 2439              		.cfi_restore 7
 2440              		.cfi_def_cfa_offset 0
 2441 00f2 7047     		bx	lr
 2442              		.cfi_endproc
 2443              	.LFE152:
 2445              		.section	.rodata.flagBitshiftOffset.10141,"a",%progbits
 2446              		.align	2
 2449              	flagBitshiftOffset.10141:
 2450 0000 00       		.byte	0
 2451 0001 06       		.byte	6
 2452 0002 10       		.byte	16
 2453 0003 16       		.byte	22
 2454 0004 00       		.byte	0
 2455 0005 06       		.byte	6
 2456 0006 10       		.byte	16
 2457 0007 16       		.byte	22
 2458              		.text
 2459              	.Letext0:
 2460              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2461              		.file 3 "/usr/include/newlib/sys/lock.h"
ARM GAS  /tmp/ccg9tGuw.s 			page 67


 2462              		.file 4 "/usr/include/newlib/sys/_types.h"
 2463              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2464              		.file 6 "/usr/include/newlib/sys/reent.h"
 2465              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 2466              		.file 8 "Inc/main.h"
 2467              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 2468              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2469              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 2470              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2471              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2472              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
ARM GAS  /tmp/ccg9tGuw.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
     /tmp/ccg9tGuw.s:21     .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccg9tGuw.s:28     .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccg9tGuw.s:2257   .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccg9tGuw.s:2165   .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccg9tGuw.s:263    .text.HAL_DMA_Init:0000000000000158 $d
     /tmp/ccg9tGuw.s:268    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccg9tGuw.s:275    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccg9tGuw.s:414    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccg9tGuw.s:421    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccg9tGuw.s:2078   .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccg9tGuw.s:513    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccg9tGuw.s:520    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccg9tGuw.s:653    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccg9tGuw.s:660    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccg9tGuw.s:812    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccg9tGuw.s:819    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccg9tGuw.s:884    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccg9tGuw.s:891    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccg9tGuw.s:1179   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccg9tGuw.s:1186   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccg9tGuw.s:1547   .text.HAL_DMA_IRQHandler:0000000000000258 $d
     /tmp/ccg9tGuw.s:1551   .text.HAL_DMA_IRQHandler:0000000000000260 $t
     /tmp/ccg9tGuw.s:1667   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccg9tGuw.s:1674   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccg9tGuw.s:1725   .text.HAL_DMA_RegisterCallback:0000000000000040 $d
     /tmp/ccg9tGuw.s:1731   .text.HAL_DMA_RegisterCallback:0000000000000058 $t
     /tmp/ccg9tGuw.s:1808   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccg9tGuw.s:1815   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccg9tGuw.s:1865   .text.HAL_DMA_UnRegisterCallback:0000000000000040 $d
     /tmp/ccg9tGuw.s:1872   .text.HAL_DMA_UnRegisterCallback:000000000000005c $t
     /tmp/ccg9tGuw.s:1979   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccg9tGuw.s:1986   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccg9tGuw.s:2026   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccg9tGuw.s:2033   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccg9tGuw.s:2072   .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccg9tGuw.s:2159   .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccg9tGuw.s:2244   .text.DMA_CalcBaseAndBitshift:0000000000000060 $d
     /tmp/ccg9tGuw.s:2449   .rodata.flagBitshiftOffset.10141:0000000000000000 flagBitshiftOffset.10141
     /tmp/ccg9tGuw.s:2251   .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccg9tGuw.s:2295   .text.DMA_CheckFifoParam:0000000000000028 $d
     /tmp/ccg9tGuw.s:2299   .text.DMA_CheckFifoParam:0000000000000038 $t
     /tmp/ccg9tGuw.s:2337   .text.DMA_CheckFifoParam:0000000000000070 $d
     /tmp/ccg9tGuw.s:2341   .text.DMA_CheckFifoParam:0000000000000080 $t
     /tmp/ccg9tGuw.s:2446   .rodata.flagBitshiftOffset.10141:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
