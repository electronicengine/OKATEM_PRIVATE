ARM GAS  /tmp/cccH61QK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.weak	HAL_RTC_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RTC_MspInit:
  27              	.LFB140:
  28              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @file    stm32f7xx_hal_rtc.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *           + RTC Time and Date functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *           + RTC Alarm functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *           + Peripheral Control functions   
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *           + Peripheral State functions
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   @verbatim
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ==============================================================================
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] The real-time clock (RTC), the RTC backup registers, and the backup 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        SRAM (BKP SRAM) can be powered from the VBAT voltage when the main 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        VDD supply is powered off.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        To retain the content of the RTC backup registers, backup SRAM, and supply 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        the RTC when VDD is turned off, VBAT pin can be connected to an optional 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] To allow the RTC operating even when the main digital supply (VDD) is turned
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        off, the VBAT pin powers the following blocks:
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) The RTC
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) The LSE oscillator
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) The backup SRAM when the low power backup regulator is enabled
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PC13 to PC15 I/Os, plus PI8 I/O (when available)
ARM GAS  /tmp/cccH61QK.s 			page 2


  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        the following pins are available:
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PC14 and PC15 can be used as either GPIO or LSE pins
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PC13 can be used as a GPIO or as the RTC_AF1 pin
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PI8 can be used as a GPIO or as the RTC_AF2 pin
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        because VDD is not present), the following pins are available:
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PC14 and PC15 can be used as LSE pins only
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PC13 can be used as the RTC_AF1 pin 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PI8 can be used as the RTC_AF2 pin
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) PC1 can be used as the RTC_AF3 pin
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ==================================================================
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        to their reset values. The BKPSRAM is not affected by this reset. The only
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        way to reset the BKPSRAM is through the Flash interface by requesting 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        a protection level change from 1 to 0.
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR). 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.  
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ==================================================================
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers, RTC backup data 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        registers and backup SRAM) is protected against possible unwanted write 
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        accesses. 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) Enable the Power Controller (PWR) APB1 interface clock using the
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RCC_PWR_CLK_ENABLE() function.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                   ##### How to use this driver #####
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ==================================================================
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         format using the HAL_RTC_Init() function.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *** Time and Date configuration ***
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ===================================
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime() 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions. 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *** Alarm configuration ***
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ===========================
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..]
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function. 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         You can also configure the RTC Alarm with interrupt mode using the HAL_RTC_SetAlarm_IT() fu
ARM GAS  /tmp/cccH61QK.s 			page 3


  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ==================================================================
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        function.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        Standby low power modes.
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        or the RTC wakeup events.
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   [..] The RTC provides a programmable time base for waking up from the 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        Stop or Standby mode at regular intervals.
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        Wakeup from STOP and STANDBY modes is possible only when the RTC clock source
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        is LSE or LSI.
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    @endverbatim
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ******************************************************************************
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @attention
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *      without specific prior written permission.
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   ******************************************************************************
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */ 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** #include "stm32f7xx_hal.h"
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @addtogroup STM32F7xx_HAL_Driver
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC RTC
ARM GAS  /tmp/cccH61QK.s 			page 4


 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief RTC HAL module driver
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /* Private functions ---------------------------------------------------------*/
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions RTC Exported Functions
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC_Group1 Initialization and de-initialization functions 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @verbatim    
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable 
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode, 
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base. 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 13-bit synchronous prescaler.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter 
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped 
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar 
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then 
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means 
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the 
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function 
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @endverbatim
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Initializes the RTC peripheral 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
ARM GAS  /tmp/cccH61QK.s 			page 5


 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(hrtc == NULL)
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      return HAL_ERROR;
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param (IS_RTC_OUTPUT(hrtc->Init.OutPut));
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param (IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Initialize RTC MSP */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Set RTC state */  
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;  
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Set Initialization mode */
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC state */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     return HAL_ERROR;
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   } 
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   { 
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Clear RTC_CR FMT, OSEL and POL Bits */
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC_CR register */
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutP
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the RTC PRER */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Exit Initialization mode */
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT; 
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
ARM GAS  /tmp/cccH61QK.s 			page 6


 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType); 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC state */
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     return HAL_OK;
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  DeInitializes the RTC peripheral 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note   This function doesn't reset the RTC Backup Data registers.   
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Set RTC state */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Set Initialization mode */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC state */
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     return HAL_ERROR;
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }  
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset TR, DR and CR registers */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)0x00000000;
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)0x00002101;
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CR &= (uint32_t)0x00000007;
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till WUTWF flag is set and if Time out is reached exit */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while(((hrtc->Instance->ISR) & RTC_ISR_WUTWF) == (uint32_t)RESET)
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
ARM GAS  /tmp/cccH61QK.s 			page 7


 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       { 
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Set RTC state */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }      
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset all RTC CR register bits */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CR &= (uint32_t)0x00000000;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->WUTR = (uint32_t)0x0000FFFF;
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)0x007F00FF;
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000;
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)0x00000000;
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = (uint32_t)0x00000000;
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CALR = (uint32_t)0x00000000;
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = (uint32_t)0x00000000;
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = (uint32_t)0x00000000;
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset ISR register and exit initialization mode */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)0x00000000;
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->TAMPCR = 0x00000000;
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset Option register */
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->OR = 0x00000000;
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_ERROR;
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }    
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET; 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Release Lock */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/cccH61QK.s 			page 8


 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Initializes the RTC MSP.
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.  
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval None
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
  29              		.loc 1 384 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   UNUSED(hrtc);
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    */ 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
  35              		.loc 1 391 0
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE140:
  40 0002 00BF     		.section	.text.HAL_RTC_Init,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	HAL_RTC_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_RTC_Init:
  50              	.LFB138:
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the RTC peripheral state */
  51              		.loc 1 203 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
  56              		.loc 1 205 0
  57 0000 0028     		cmp	r0, #0
  58 0002 52D0     		beq	.L10
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the RTC peripheral state */
  59              		.loc 1 203 0
  60 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 24
  63              		.cfi_offset 3, -24
  64              		.cfi_offset 4, -20
  65              		.cfi_offset 5, -16
ARM GAS  /tmp/cccH61QK.s 			page 9


  66              		.cfi_offset 6, -12
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
  69              		.loc 1 219 0
  70 0006 437F     		ldrb	r3, [r0, #29]	@ zero_extendqisi2
  71 0008 0446     		mov	r4, r0
  72 000a 03F0FF02 		and	r2, r3, #255
  73 000e 002B     		cmp	r3, #0
  74 0010 40D0     		beq	.L16
  75              	.LVL2:
  76              	.L5:
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
  77              		.loc 1 231 0
  78 0012 2368     		ldr	r3, [r4]
  79 0014 CA21     		movs	r1, #202
  80 0016 5322     		movs	r2, #83
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****        
  81              		.loc 1 228 0
  82 0018 0220     		movs	r0, #2
  83 001a 6077     		strb	r0, [r4, #29]
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
  84              		.loc 1 231 0
  85 001c 5962     		str	r1, [r3, #36]
  86 001e 5A62     		str	r2, [r3, #36]
  87              	.LVL3:
  88              	.LBB66:
  89              	.LBB67:
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  DeInitializes the RTC MSP.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC. 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval None
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   UNUSED(hrtc);
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    */ 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @}
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC_Group2 RTC Time and Date functions
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @verbatim   
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================  
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  
ARM GAS  /tmp/cccH61QK.s 			page 10


 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @endverbatim
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Sets RTC current time.
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg FORMAT_BIN: Binary data format 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg FORMAT_BCD: BCD data format
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0;
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  /* Check the parameters */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Locked */ 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sTime->Hours));
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       sTime->TimeFormat = 0x00;
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16));  
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sTime->Hours);
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
ARM GAS  /tmp/cccH61QK.s 			page 11


 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat)); 
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       sTime->TimeFormat = 0x00;
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8) | \
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16));   
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Set Initialization mode */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC state */
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Process Unlocked */ 
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     return HAL_ERROR;
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   } 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set the RTC_TR register */
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Clear the bits to be configured */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CR &= (uint32_t)~RTC_CR_BKP;
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Exit Initialization mode */
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;  
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {        
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */ 
ARM GAS  /tmp/cccH61QK.s 			page 12


 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_ERROR;
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    hrtc->State = HAL_RTC_STATE_READY;
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    return HAL_OK;
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Gets RTC current time.
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc RTC handle
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure with Hours, Minutes and Seconds fields returned 
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0;
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Get subseconds values from the correspondent registers*/
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Get the TR register */
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK); 
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
ARM GAS  /tmp/cccH61QK.s 			page 13


 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16); 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the input parameters format */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Sets RTC current date.
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format specifies the format of the entered parameters.
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  /* Check the parameters */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  /* Process Locked */ 
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {   
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date)); 
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13));   
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
ARM GAS  /tmp/cccH61QK.s 			page 14


 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {   
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << 16) | \
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8) | \
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13));  
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Set Initialization mode */
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC state*/
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Process Unlocked */ 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     return HAL_ERROR;
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   } 
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set the RTC_DR register */
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Exit Initialization mode */
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;  
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       { 
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */ 
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_ERROR;
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
ARM GAS  /tmp/cccH61QK.s 			page 15


 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Process Unlocked */ 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     return HAL_OK;    
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Gets RTC current date.
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format 
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * in the higher-order calendar shadow registers to ensure consistency between the time and date v
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * Reading RTC current time locks the values in calendar shadow registers until Current date is re
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****           
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Get the DR register */
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK); 
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13); 
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the input parameters format */
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {    
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @}
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC_Group3 RTC Alarm functions
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @verbatim   
ARM GAS  /tmp/cccH61QK.s 			page 16


 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================  
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @endverbatim
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm.
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg FORMAT_BIN: Binary data format 
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg FORMAT_BCD: BCD data format
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0, subsecondtmpreg = 0;
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Locked */ 
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00;
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
ARM GAS  /tmp/cccH61QK.s 			page 17


 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16) | \
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8) | \
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16) | \
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24) | \
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00;
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }  
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16) | \
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8) | \
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16) | \
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24) | \
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Configure the Alarm register */
ARM GAS  /tmp/cccH61QK.s 			page 18


 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */ 
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }   
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */ 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/cccH61QK.s 			page 19


 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }  
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }    
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc); 
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);   
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Change RTC state */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Unlocked */ 
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm with Interrupt 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg FORMAT_BIN: Binary data format 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg FORMAT_BCD: BCD data format
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).   
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __IO uint32_t count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U) ;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Locked */ 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
ARM GAS  /tmp/cccH61QK.s 			page 20


 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     else
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
ARM GAS  /tmp/cccH61QK.s 			page 21


1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Configure the Alarm register */
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Clear flag alarm A */
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     do
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if (count-- == 0U)
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET);
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Clear flag alarm B */
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
ARM GAS  /tmp/cccH61QK.s 			page 22


1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     do
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if (count-- == 0U)
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET);
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   EXTI->RTSR |= RTC_EXTI_LINE_ALARM_EVENT;
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Unlocked */ 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Deactive the specified RTC Alarm 
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *            @arg RTC_ALARM_B:  AlarmB
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
ARM GAS  /tmp/cccH61QK.s 			page 23


1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Locked */ 
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* AlarmA */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       { 
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */ 
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }      
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* AlarmB */
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc,RTC_IT_ALRB);
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/cccH61QK.s 			page 24


1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         /* Process Unlocked */ 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }    
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Process Unlocked */ 
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK; 
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****            
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Gets the RTC Alarm value and masks.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  sAlarm Pointer to Date structure
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB  
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0, subsecondtmpreg = 0;
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check the parameters */
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* AlarmA */
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   else
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
ARM GAS  /tmp/cccH61QK.s 			page 25


1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> 16);
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8);
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24);
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }  
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  This function handles Alarm interrupt request.
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval None
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {  
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT(hrtc, RTC_IT_ALRA))
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get the status of the Interrupt */
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((uint32_t)(hrtc->Instance->CR & RTC_IT_ALRA) != (uint32_t)RESET)
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       /* AlarmA callback */ 
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       /* Clear the Alarm interrupt pending bit */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRAF);
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT(hrtc, RTC_IT_ALRB))
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get the status of the Interrupt */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((uint32_t)(hrtc->Instance->CR & RTC_IT_ALRB) != (uint32_t)RESET)
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       /* AlarmB callback */ 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       /* Clear the Alarm interrupt pending bit */
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRBF);
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
ARM GAS  /tmp/cccH61QK.s 			page 26


1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Change RTC state */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Alarm A callback.
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval None
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   UNUSED(hrtc);
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****    */
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  This function handles AlarmA Polling request.
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Timeout Timeout duration
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0; 
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Change RTC state */
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;  
ARM GAS  /tmp/cccH61QK.s 			page 27


1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @}
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC_Group4 Peripheral Control functions 
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @verbatim   
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================  
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     [..]
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     This subsection provides functions allowing to
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @endverbatim
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Waits until the RTC Time and Date registers (RTC_TR and RTC_DR) are 
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function. 
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         the software must first clear the RSF flag. 
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading 
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been 
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Clear RSF flag */
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {       
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       return HAL_TIMEOUT;
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
ARM GAS  /tmp/cccH61QK.s 			page 28


1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @}
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /** @defgroup RTC_Group5 Peripheral State functions 
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  *
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @verbatim   
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****  ===============================================================================  
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     [..]
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     This subsection provides functions allowing to
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       (+) Get RTC state
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** @endverbatim
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @{
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Returns the RTC state.
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL state
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return hrtc->State;
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @}
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Enters the RTC Initialization mode.
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   *                the configuration information for RTC.
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval HAL status
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0; 
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
  90              		.loc 1 1494 0
  91 0020 DA68     		ldr	r2, [r3, #12]
  92 0022 5106     		lsls	r1, r2, #25
  93 0024 24D5     		bpl	.L17
  94              	.LVL4:
  95              	.L6:
  96              	.LBE67:
  97              	.LBE66:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC_CR register */
ARM GAS  /tmp/cccH61QK.s 			page 29


  98              		.loc 1 247 0
  99 0026 9868     		ldr	r0, [r3, #8]
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 100              		.loc 1 262 0
 101 0028 FF25     		movs	r5, #255
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC_CR register */
 102              		.loc 1 247 0
 103 002a 2149     		ldr	r1, .L18
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 104              		.loc 1 265 0
 105 002c 0126     		movs	r6, #1
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 106              		.loc 1 249 0
 107 002e 6268     		ldr	r2, [r4, #4]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC_CR register */
 108              		.loc 1 247 0
 109 0030 0140     		ands	r1, r1, r0
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 110              		.loc 1 249 0
 111 0032 2069     		ldr	r0, [r4, #16]
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 112              		.loc 1 253 0
 113 0034 A768     		ldr	r7, [r4, #8]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 114              		.loc 1 249 0
 115 0036 0243     		orrs	r2, r2, r0
 116 0038 6069     		ldr	r0, [r4, #20]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set RTC_CR register */
 117              		.loc 1 247 0
 118 003a 9960     		str	r1, [r3, #8]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 119              		.loc 1 249 0
 120 003c 0243     		orrs	r2, r2, r0
 121 003e 9868     		ldr	r0, [r3, #8]
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 122              		.loc 1 252 0
 123 0040 E168     		ldr	r1, [r4, #12]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 124              		.loc 1 249 0
 125 0042 0243     		orrs	r2, r2, r0
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 126              		.loc 1 267 0
 127 0044 0020     		movs	r0, #0
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 128              		.loc 1 249 0
 129 0046 9A60     		str	r2, [r3, #8]
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 130              		.loc 1 252 0
 131 0048 1961     		str	r1, [r3, #16]
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 132              		.loc 1 253 0
 133 004a 1969     		ldr	r1, [r3, #16]
 134 004c 41EA0741 		orr	r1, r1, r7, lsl #16
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 135              		.loc 1 259 0
 136 0050 A769     		ldr	r7, [r4, #24]
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
ARM GAS  /tmp/cccH61QK.s 			page 30


 137              		.loc 1 253 0
 138 0052 1961     		str	r1, [r3, #16]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 139              		.loc 1 256 0
 140 0054 D968     		ldr	r1, [r3, #12]
 141 0056 21F08001 		bic	r1, r1, #128
 142 005a D960     		str	r1, [r3, #12]
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType); 
 143              		.loc 1 258 0
 144 005c D96C     		ldr	r1, [r3, #76]
 145 005e 21F00801 		bic	r1, r1, #8
 146 0062 D964     		str	r1, [r3, #76]
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 147              		.loc 1 259 0
 148 0064 DA6C     		ldr	r2, [r3, #76]
 149 0066 3A43     		orrs	r2, r2, r7
 150 0068 DA64     		str	r2, [r3, #76]
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 151              		.loc 1 262 0
 152 006a 5D62     		str	r5, [r3, #36]
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 153              		.loc 1 265 0
 154 006c 6677     		strb	r6, [r4, #29]
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 155              		.loc 1 269 0
 156 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 157              	.LVL5:
 158              	.L17:
 159              	.LBB69:
 160              	.LBB68:
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Set the Initialization mode */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 161              		.loc 1 1497 0
 162 0070 4FF0FF32 		mov	r2, #-1
 163 0074 DA60     		str	r2, [r3, #12]
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Get tick */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 164              		.loc 1 1500 0
 165 0076 FFF7FEFF 		bl	HAL_GetTick
 166              	.LVL6:
 167 007a 0546     		mov	r5, r0
 168              	.LVL7:
 169 007c 05E0     		b	.L7
 170              	.LVL8:
 171              	.L9:
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 172              		.loc 1 1505 0
 173 007e FFF7FEFF 		bl	HAL_GetTick
 174              	.LVL9:
 175 0082 401B     		subs	r0, r0, r5
 176 0084 B0F57A7F 		cmp	r0, #1000
ARM GAS  /tmp/cccH61QK.s 			page 31


 177 0088 08D8     		bhi	.L8
 178              	.L7:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 179              		.loc 1 1503 0
 180 008a 2368     		ldr	r3, [r4]
 181 008c DA68     		ldr	r2, [r3, #12]
 182 008e 5206     		lsls	r2, r2, #25
 183 0090 F5D5     		bpl	.L9
 184 0092 C8E7     		b	.L6
 185              	.LVL10:
 186              	.L16:
 187              	.LBE68:
 188              	.LBE69:
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Initialize RTC MSP */
 189              		.loc 1 222 0
 190 0094 0277     		strb	r2, [r0, #28]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 191              		.loc 1 224 0
 192 0096 FFF7FEFF 		bl	HAL_RTC_MspInit
 193              	.LVL11:
 194 009a BAE7     		b	.L5
 195              	.LVL12:
 196              	.L8:
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 197              		.loc 1 237 0
 198 009c 2268     		ldr	r2, [r4]
 199 009e FF21     		movs	r1, #255
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 200              		.loc 1 240 0
 201 00a0 0423     		movs	r3, #4
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   } 
 202              		.loc 1 242 0
 203 00a2 0120     		movs	r0, #1
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 204              		.loc 1 237 0
 205 00a4 5162     		str	r1, [r2, #36]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 206              		.loc 1 240 0
 207 00a6 6377     		strb	r3, [r4, #29]
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 208              		.loc 1 269 0
 209 00a8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 210              	.LVL13:
 211              	.L10:
 212              	.LCFI1:
 213              		.cfi_def_cfa_offset 0
 214              		.cfi_restore 3
 215              		.cfi_restore 4
 216              		.cfi_restore 5
 217              		.cfi_restore 6
 218              		.cfi_restore 7
 219              		.cfi_restore 14
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 220              		.loc 1 207 0
 221 00aa 0120     		movs	r0, #1
 222              	.LVL14:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
ARM GAS  /tmp/cccH61QK.s 			page 32


 223              		.loc 1 269 0
 224 00ac 7047     		bx	lr
 225              	.L19:
 226 00ae 00BF     		.align	2
 227              	.L18:
 228 00b0 BFFF8FFF 		.word	-7340097
 229              		.cfi_endproc
 230              	.LFE138:
 232              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 233              		.align	1
 234              		.p2align 2,,3
 235              		.weak	HAL_RTC_MspDeInit
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	HAL_RTC_MspDeInit:
 242              	.LFB159:
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 7047     		bx	lr
 248              		.cfi_endproc
 249              	.LFE159:
 251 0002 00BF     		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 252              		.align	1
 253              		.p2align 2,,3
 254              		.global	HAL_RTC_DeInit
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	HAL_RTC_DeInit:
 261              	.LFB139:
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 262              		.loc 1 279 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL15:
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 267              		.loc 1 279 0
 268 0000 38B5     		push	{r3, r4, r5, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 16
 271              		.cfi_offset 3, -16
 272              		.cfi_offset 4, -12
 273              		.cfi_offset 5, -8
 274              		.cfi_offset 14, -4
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 275              		.loc 1 279 0
 276 0002 0446     		mov	r4, r0
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 277              		.loc 1 289 0
 278 0004 CA21     		movs	r1, #202
 279 0006 5322     		movs	r2, #83
ARM GAS  /tmp/cccH61QK.s 			page 33


 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 280              		.loc 1 286 0
 281 0008 0220     		movs	r0, #2
 282              	.LVL16:
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 283              		.loc 1 289 0
 284 000a 2368     		ldr	r3, [r4]
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 285              		.loc 1 286 0
 286 000c 6077     		strb	r0, [r4, #29]
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 287              		.loc 1 289 0
 288 000e 5962     		str	r1, [r3, #36]
 289 0010 5A62     		str	r2, [r3, #36]
 290              	.LVL17:
 291              	.LBB74:
 292              	.LBB75:
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 293              		.loc 1 1494 0
 294 0012 DA68     		ldr	r2, [r3, #12]
 295 0014 5106     		lsls	r1, r2, #25
 296 0016 49D5     		bpl	.L36
 297              	.LVL18:
 298              	.L22:
 299              	.LBE75:
 300              	.LBE74:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)0x00002101;
 301              		.loc 1 305 0
 302 0018 0021     		movs	r1, #0
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 303              		.loc 1 306 0
 304 001a 42F20112 		movw	r2, #8449
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)0x00002101;
 305              		.loc 1 305 0
 306 001e 1960     		str	r1, [r3]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 307              		.loc 1 306 0
 308 0020 5A60     		str	r2, [r3, #4]
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 309              		.loc 1 308 0
 310 0022 9A68     		ldr	r2, [r3, #8]
 311 0024 02F00702 		and	r2, r2, #7
 312 0028 9A60     		str	r2, [r3, #8]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 313              		.loc 1 311 0
 314 002a FFF7FEFF 		bl	HAL_GetTick
 315              	.LVL19:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 316              		.loc 1 314 0
 317 002e 2368     		ldr	r3, [r4]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 318              		.loc 1 311 0
 319 0030 0546     		mov	r5, r0
 320              	.LVL20:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 321              		.loc 1 314 0
 322 0032 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cccH61QK.s 			page 34


 323 0034 5007     		lsls	r0, r2, #29
 324              	.LVL21:
 325 0036 09D4     		bmi	.L37
 326              	.L28:
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       { 
 327              		.loc 1 316 0
 328 0038 FFF7FEFF 		bl	HAL_GetTick
 329              	.LVL22:
 330 003c 401B     		subs	r0, r0, r5
 331 003e B0F57A7F 		cmp	r0, #1000
 332 0042 4AD8     		bhi	.L38
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 333              		.loc 1 314 0
 334 0044 2368     		ldr	r3, [r4]
 335 0046 DA68     		ldr	r2, [r3, #12]
 336 0048 5007     		lsls	r0, r2, #29
 337 004a F5D5     		bpl	.L28
 338              	.L37:
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->WUTR = (uint32_t)0x0000FFFF;
 339              		.loc 1 329 0
 340 004c 0022     		movs	r2, #0
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000;
 341              		.loc 1 331 0
 342 004e 2649     		ldr	r1, .L39
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)0x007F00FF;
 343              		.loc 1 330 0
 344 0050 4FF6FF70 		movw	r0, #65535
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->WUTR = (uint32_t)0x0000FFFF;
 345              		.loc 1 329 0
 346 0054 9D68     		ldr	r5, [r3, #8]
 347              	.LVL23:
 348 0056 9A60     		str	r2, [r3, #8]
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)0x007F00FF;
 349              		.loc 1 330 0
 350 0058 5861     		str	r0, [r3, #20]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000;
 351              		.loc 1 331 0
 352 005a 1961     		str	r1, [r3, #16]
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)0x00000000;
 353              		.loc 1 332 0
 354 005c DA61     		str	r2, [r3, #28]
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = (uint32_t)0x00000000;
 355              		.loc 1 333 0
 356 005e 1A62     		str	r2, [r3, #32]
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->CALR = (uint32_t)0x00000000;
 357              		.loc 1 334 0
 358 0060 DA62     		str	r2, [r3, #44]
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = (uint32_t)0x00000000;
 359              		.loc 1 335 0
 360 0062 DA63     		str	r2, [r3, #60]
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = (uint32_t)0x00000000;
 361              		.loc 1 336 0
 362 0064 5A64     		str	r2, [r3, #68]
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 363              		.loc 1 337 0
 364 0066 9A64     		str	r2, [r3, #72]
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
ARM GAS  /tmp/cccH61QK.s 			page 35


 365              		.loc 1 340 0
 366 0068 DA60     		str	r2, [r3, #12]
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 367              		.loc 1 343 0
 368 006a 1A64     		str	r2, [r3, #64]
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 369              		.loc 1 346 0
 370 006c DA64     		str	r2, [r3, #76]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 371              		.loc 1 349 0
 372 006e 9A68     		ldr	r2, [r3, #8]
 373 0070 9106     		lsls	r1, r2, #26
 374 0072 11D4     		bmi	.L29
 375              	.LVL24:
 376              	.LBB77:
 377              	.LBB78:
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 378              		.loc 1 1431 0
 379 0074 DA68     		ldr	r2, [r3, #12]
 380 0076 22F0A002 		bic	r2, r2, #160
 381 007a DA60     		str	r2, [r3, #12]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 382              		.loc 1 1434 0
 383 007c FFF7FEFF 		bl	HAL_GetTick
 384              	.LVL25:
 385 0080 0546     		mov	r5, r0
 386              	.LVL26:
 387 0082 05E0     		b	.L30
 388              	.LVL27:
 389              	.L32:
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {       
 390              		.loc 1 1439 0
 391 0084 FFF7FEFF 		bl	HAL_GetTick
 392              	.LVL28:
 393 0088 401B     		subs	r0, r0, r5
 394 008a B0F57A7F 		cmp	r0, #1000
 395 008e 1DD8     		bhi	.L31
 396              	.L30:
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 397              		.loc 1 1437 0
 398 0090 2368     		ldr	r3, [r4]
 399 0092 DA68     		ldr	r2, [r3, #12]
 400 0094 9206     		lsls	r2, r2, #26
 401 0096 F5D5     		bpl	.L32
 402              	.LVL29:
 403              	.L29:
 404              	.LBE78:
 405              	.LBE77:
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 406              		.loc 1 364 0
 407 0098 FF22     		movs	r2, #255
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 408              		.loc 1 367 0
 409 009a 2046     		mov	r0, r4
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 410              		.loc 1 364 0
 411 009c 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cccH61QK.s 			page 36


 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 412              		.loc 1 367 0
 413 009e FFF7FEFF 		bl	HAL_RTC_MspDeInit
 414              	.LVL30:
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 415              		.loc 1 369 0
 416 00a2 0023     		movs	r3, #0
 417 00a4 6377     		strb	r3, [r4, #29]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 418              		.loc 1 374 0
 419 00a6 1846     		mov	r0, r3
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 420              		.loc 1 372 0
 421 00a8 2377     		strb	r3, [r4, #28]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 422              		.loc 1 375 0
 423 00aa 38BD     		pop	{r3, r4, r5, pc}
 424              	.LVL31:
 425              	.L36:
 426              	.LBB79:
 427              	.LBB76:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 428              		.loc 1 1497 0
 429 00ac 4FF0FF32 		mov	r2, #-1
 430 00b0 DA60     		str	r2, [r3, #12]
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 431              		.loc 1 1500 0
 432 00b2 FFF7FEFF 		bl	HAL_GetTick
 433              	.LVL32:
 434 00b6 0546     		mov	r5, r0
 435              	.LVL33:
 436              	.L23:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 437              		.loc 1 1503 0
 438 00b8 2368     		ldr	r3, [r4]
 439 00ba DA68     		ldr	r2, [r3, #12]
 440 00bc 5206     		lsls	r2, r2, #25
 441 00be ABD4     		bmi	.L22
 442              		.loc 1 1505 0
 443 00c0 FFF7FEFF 		bl	HAL_GetTick
 444              	.LVL34:
 445 00c4 401B     		subs	r0, r0, r5
 446 00c6 B0F57A7F 		cmp	r0, #1000
 447 00ca F5D9     		bls	.L23
 448              	.LVL35:
 449              	.L31:
 450              	.LBE76:
 451              	.LBE79:
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 452              		.loc 1 354 0
 453 00cc 2268     		ldr	r2, [r4]
 454 00ce FF21     		movs	r1, #255
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 455              		.loc 1 356 0
 456 00d0 0423     		movs	r3, #4
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 457              		.loc 1 358 0
ARM GAS  /tmp/cccH61QK.s 			page 37


 458 00d2 0120     		movs	r0, #1
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 459              		.loc 1 354 0
 460 00d4 5162     		str	r1, [r2, #36]
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 461              		.loc 1 356 0
 462 00d6 6377     		strb	r3, [r4, #29]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 463              		.loc 1 375 0
 464 00d8 38BD     		pop	{r3, r4, r5, pc}
 465              	.LVL36:
 466              	.L38:
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 467              		.loc 1 322 0
 468 00da 0323     		movs	r3, #3
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 469              		.loc 1 319 0
 470 00dc 2268     		ldr	r2, [r4]
 471 00de FF21     		movs	r1, #255
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }      
 472              		.loc 1 324 0
 473 00e0 1846     		mov	r0, r3
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 474              		.loc 1 319 0
 475 00e2 5162     		str	r1, [r2, #36]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 476              		.loc 1 322 0
 477 00e4 6377     		strb	r3, [r4, #29]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 478              		.loc 1 375 0
 479 00e6 38BD     		pop	{r3, r4, r5, pc}
 480              	.LVL37:
 481              	.L40:
 482              		.align	2
 483              	.L39:
 484 00e8 FF007F00 		.word	8323327
 485              		.cfi_endproc
 486              	.LFE139:
 488              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 489              		.align	1
 490              		.p2align 2,,3
 491              		.global	HAL_RTC_SetTime
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv4-sp-d16
 497              	HAL_RTC_SetTime:
 498              	.LFB142:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0;
 499              		.loc 1 439 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              	.LVL38:
 504 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 505              	.LCFI3:
 506              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cccH61QK.s 			page 38


 507              		.cfi_offset 3, -32
 508              		.cfi_offset 4, -28
 509              		.cfi_offset 5, -24
 510              		.cfi_offset 6, -20
 511              		.cfi_offset 7, -16
 512              		.cfi_offset 8, -12
 513              		.cfi_offset 9, -8
 514              		.cfi_offset 14, -4
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 515              		.loc 1 448 0
 516 0004 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 517 0006 012B     		cmp	r3, #1
 518 0008 00F08C80 		beq	.L63
 519 000c 0D46     		mov	r5, r1
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 520              		.loc 1 450 0 discriminator 2
 521 000e 0223     		movs	r3, #2
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 522              		.loc 1 448 0 discriminator 2
 523 0010 0121     		movs	r1, #1
 524              	.LVL39:
 525 0012 0668     		ldr	r6, [r0]
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 526              		.loc 1 450 0 discriminator 2
 527 0014 4377     		strb	r3, [r0, #29]
 528 0016 0446     		mov	r4, r0
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 529              		.loc 1 448 0 discriminator 2
 530 0018 0177     		strb	r1, [r0, #28]
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 531              		.loc 1 454 0 discriminator 2
 532 001a B768     		ldr	r7, [r6, #8]
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 533              		.loc 1 452 0 discriminator 2
 534 001c 002A     		cmp	r2, #0
 535 001e 30D0     		beq	.L72
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 536              		.loc 1 474 0
 537 0020 17F04007 		ands	r7, r7, #64
 538 0024 7AD0     		beq	.L53
 539 0026 2F7B     		ldrb	r7, [r5, #12]	@ zero_extendqisi2
 540 0028 3F04     		lsls	r7, r7, #16
 541              	.L54:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 542              		.loc 1 488 0
 543 002a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 544              	.LVL40:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8) | \
 545              		.loc 1 487 0
 546 002c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 547              	.LVL41:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 548              		.loc 1 488 0
 549 002e 0002     		lsls	r0, r0, #8
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16));   
 550              		.loc 1 489 0
 551 0030 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
ARM GAS  /tmp/cccH61QK.s 			page 39


 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8) | \
 552              		.loc 1 487 0
 553 0032 40EA0240 		orr	r0, r0, r2, lsl #16
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 554              		.loc 1 488 0
 555 0036 1843     		orrs	r0, r0, r3
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8) | \
 556              		.loc 1 487 0
 557 0038 0743     		orrs	r7, r7, r0
 558              	.LVL42:
 559              	.L52:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 560              		.loc 1 494 0
 561 003a CA22     		movs	r2, #202
 562 003c 5323     		movs	r3, #83
 563 003e 7262     		str	r2, [r6, #36]
 564 0040 7362     		str	r3, [r6, #36]
 565              	.LVL43:
 566              	.LBB90:
 567              	.LBB91:
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 568              		.loc 1 1494 0
 569 0042 F368     		ldr	r3, [r6, #12]
 570 0044 5A06     		lsls	r2, r3, #25
 571 0046 4DD5     		bpl	.L73
 572              	.LVL44:
 573              	.L55:
 574              	.LBE91:
 575              	.LBE90:
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 576              		.loc 1 513 0
 577 0048 464A     		ldr	r2, .L75
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 578              		.loc 1 519 0
 579 004a 2B69     		ldr	r3, [r5, #16]
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 580              		.loc 1 513 0
 581 004c 3A40     		ands	r2, r2, r7
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 582              		.loc 1 519 0
 583 004e 6969     		ldr	r1, [r5, #20]
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 584              		.loc 1 513 0
 585 0050 3260     		str	r2, [r6]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 586              		.loc 1 519 0
 587 0052 0B43     		orrs	r3, r3, r1
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 588              		.loc 1 516 0
 589 0054 B268     		ldr	r2, [r6, #8]
 590 0056 22F48022 		bic	r2, r2, #262144
 591 005a B260     		str	r2, [r6, #8]
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 592              		.loc 1 519 0
 593 005c B268     		ldr	r2, [r6, #8]
 594 005e 1343     		orrs	r3, r3, r2
 595 0060 B360     		str	r3, [r6, #8]
ARM GAS  /tmp/cccH61QK.s 			page 40


 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 596              		.loc 1 522 0
 597 0062 F368     		ldr	r3, [r6, #12]
 598 0064 23F08003 		bic	r3, r3, #128
 599 0068 F360     		str	r3, [r6, #12]
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 600              		.loc 1 525 0
 601 006a B368     		ldr	r3, [r6, #8]
 602 006c 9B06     		lsls	r3, r3, #26
 603 006e 5CD5     		bpl	.L74
 604              	.LVL45:
 605              	.L59:
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 606              		.loc 1 546 0
 607 0070 0023     		movs	r3, #0
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 608              		.loc 1 542 0
 609 0072 FF21     		movs	r1, #255
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 610              		.loc 1 544 0
 611 0074 0122     		movs	r2, #1
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 612              		.loc 1 548 0
 613 0076 1846     		mov	r0, r3
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 614              		.loc 1 542 0
 615 0078 7162     		str	r1, [r6, #36]
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 616              		.loc 1 544 0
 617 007a 6277     		strb	r2, [r4, #29]
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****      
 618              		.loc 1 546 0
 619 007c 2377     		strb	r3, [r4, #28]
 620              	.L70:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 621              		.loc 1 550 0
 622 007e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 623              	.LVL46:
 624              	.L72:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 625              		.loc 1 454 0
 626 0082 17F04007 		ands	r7, r7, #64
 627 0086 4BD0     		beq	.L44
 628 0088 2F7B     		ldrb	r7, [r5, #12]	@ zero_extendqisi2
 629 008a 3F04     		lsls	r7, r7, #16
 630              	.L45:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 631              		.loc 1 467 0
 632 008c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 633              	.LVL47:
 634              	.LBB93:
 635              	.LBB94:
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {       
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       } 
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
ARM GAS  /tmp/cccH61QK.s 			page 41


1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return HAL_OK;  
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Value Byte to be converted
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval Converted byte
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t bcdhigh = 0;
 636              		.loc 1 1523 0
 637 008e 0021     		movs	r1, #0
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   while(Value >= 10)
 638              		.loc 1 1525 0
 639 0090 092B     		cmp	r3, #9
 640 0092 06D9     		bls	.L46
 641              	.LVL48:
 642              	.L47:
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     bcdhigh++;
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 643              		.loc 1 1528 0
 644 0094 0A3B     		subs	r3, r3, #10
 645              	.LVL49:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 646              		.loc 1 1527 0
 647 0096 0131     		adds	r1, r1, #1
 648              	.LVL50:
 649              		.loc 1 1528 0
 650 0098 DBB2     		uxtb	r3, r3
 651              	.LVL51:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 652              		.loc 1 1525 0
 653 009a 092B     		cmp	r3, #9
 654 009c FAD8     		bhi	.L47
 655 009e 0901     		lsls	r1, r1, #4
 656              	.LVL52:
 657 00a0 C9B2     		uxtb	r1, r1
 658              	.L46:
 659              	.LVL53:
 660              	.LBE94:
 661              	.LBE93:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 662              		.loc 1 467 0
 663 00a2 1943     		orrs	r1, r1, r3
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 664              		.loc 1 468 0
 665 00a4 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 666              	.LVL54:
 667              	.LBB95:
 668              	.LBB96:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 669              		.loc 1 1523 0
ARM GAS  /tmp/cccH61QK.s 			page 42


 670 00a6 0020     		movs	r0, #0
 671              	.LVL55:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 672              		.loc 1 1525 0
 673 00a8 092B     		cmp	r3, #9
 674              	.LBE96:
 675              	.LBE95:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 676              		.loc 1 467 0
 677 00aa 4FEA0141 		lsl	r1, r1, #16
 678              	.LBB98:
 679              	.LBB97:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 680              		.loc 1 1525 0
 681 00ae 06D9     		bls	.L48
 682              	.LVL56:
 683              	.L49:
 684              		.loc 1 1528 0
 685 00b0 0A3B     		subs	r3, r3, #10
 686              	.LVL57:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 687              		.loc 1 1527 0
 688 00b2 0130     		adds	r0, r0, #1
 689              	.LVL58:
 690              		.loc 1 1528 0
 691 00b4 DBB2     		uxtb	r3, r3
 692              	.LVL59:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 693              		.loc 1 1525 0
 694 00b6 092B     		cmp	r3, #9
 695 00b8 FAD8     		bhi	.L49
 696 00ba 0001     		lsls	r0, r0, #4
 697              	.LVL60:
 698 00bc C0B2     		uxtb	r0, r0
 699              	.L48:
 700              	.LVL61:
 701              	.LBE97:
 702              	.LBE98:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 703              		.loc 1 468 0
 704 00be 0343     		orrs	r3, r3, r0
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16));  
 705              		.loc 1 469 0
 706 00c0 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 707              	.LVL62:
 708              	.LBB99:
 709              	.LBB100:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 710              		.loc 1 1525 0
 711 00c2 0928     		cmp	r0, #9
 712              	.LBE100:
 713              	.LBE99:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 714              		.loc 1 468 0
 715 00c4 4FEA0323 		lsl	r3, r3, #8
 716              	.LBB103:
 717              	.LBB101:
ARM GAS  /tmp/cccH61QK.s 			page 43


1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 718              		.loc 1 1525 0
 719 00c8 49D9     		bls	.L66
 720              	.LVL63:
 721              	.L51:
 722              		.loc 1 1528 0
 723 00ca 0A38     		subs	r0, r0, #10
 724              	.LVL64:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 725              		.loc 1 1527 0
 726 00cc 0132     		adds	r2, r2, #1
 727              	.LVL65:
 728              		.loc 1 1528 0
 729 00ce C0B2     		uxtb	r0, r0
 730              	.LVL66:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 731              		.loc 1 1525 0
 732 00d0 0928     		cmp	r0, #9
 733 00d2 FAD8     		bhi	.L51
 734 00d4 1201     		lsls	r2, r2, #4
 735              	.LVL67:
 736 00d6 D2B2     		uxtb	r2, r2
 737              	.L50:
 738              	.LVL68:
 739              	.LBE101:
 740              	.LBE103:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 741              		.loc 1 467 0
 742 00d8 0F43     		orrs	r7, r7, r1
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16));  
 743              		.loc 1 469 0
 744 00da 1043     		orrs	r0, r0, r2
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 745              		.loc 1 467 0
 746 00dc 3B43     		orrs	r3, r3, r7
 747 00de 43EA0007 		orr	r7, r3, r0
 748              	.LVL69:
 749 00e2 AAE7     		b	.L52
 750              	.LVL70:
 751              	.L73:
 752              	.LBB104:
 753              	.LBB92:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 754              		.loc 1 1497 0
 755 00e4 4FF0FF33 		mov	r3, #-1
 756 00e8 F360     		str	r3, [r6, #12]
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 757              		.loc 1 1500 0
 758 00ea FFF7FEFF 		bl	HAL_GetTick
 759              	.LVL71:
 760 00ee 8146     		mov	r9, r0
 761              	.LVL72:
 762              	.L56:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 763              		.loc 1 1503 0
 764 00f0 2668     		ldr	r6, [r4]
 765 00f2 F368     		ldr	r3, [r6, #12]
ARM GAS  /tmp/cccH61QK.s 			page 44


 766 00f4 13F04008 		ands	r8, r3, #64
 767 00f8 A6D1     		bne	.L55
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {       
 768              		.loc 1 1505 0
 769 00fa FFF7FEFF 		bl	HAL_GetTick
 770              	.LVL73:
 771 00fe A0EB0900 		sub	r0, r0, r9
 772 0102 B0F57A7F 		cmp	r0, #1000
 773 0106 F3D9     		bls	.L56
 774              	.LVL74:
 775              	.LBE92:
 776              	.LBE104:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 777              		.loc 1 500 0
 778 0108 2268     		ldr	r2, [r4]
 779 010a FF21     		movs	r1, #255
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 780              		.loc 1 503 0
 781 010c 0423     		movs	r3, #4
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   } 
 782              		.loc 1 508 0
 783 010e 0120     		movs	r0, #1
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 784              		.loc 1 500 0
 785 0110 5162     		str	r1, [r2, #36]
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 786              		.loc 1 506 0
 787 0112 84F81C80 		strb	r8, [r4, #28]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 788              		.loc 1 503 0
 789 0116 6377     		strb	r3, [r4, #29]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 790              		.loc 1 550 0
 791 0118 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 792              	.LVL75:
 793              	.L53:
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 794              		.loc 1 482 0
 795 011c 2F73     		strb	r7, [r5, #12]
 796 011e 84E7     		b	.L54
 797              	.L44:
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 798              		.loc 1 461 0
 799 0120 2F73     		strb	r7, [r5, #12]
 800 0122 B3E7     		b	.L45
 801              	.LVL76:
 802              	.L63:
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 803              		.loc 1 448 0
 804 0124 0220     		movs	r0, #2
 805              	.LVL77:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 806              		.loc 1 550 0
 807 0126 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 808              	.LVL78:
 809              	.L74:
 810              	.LBB105:
ARM GAS  /tmp/cccH61QK.s 			page 45


 811              	.LBB106:
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 812              		.loc 1 1431 0
 813 012a F368     		ldr	r3, [r6, #12]
 814 012c 23F0A003 		bic	r3, r3, #160
 815 0130 F360     		str	r3, [r6, #12]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 816              		.loc 1 1434 0
 817 0132 FFF7FEFF 		bl	HAL_GetTick
 818              	.LVL79:
 819 0136 0746     		mov	r7, r0
 820              	.LVL80:
 821              	.L60:
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 822              		.loc 1 1437 0
 823 0138 2668     		ldr	r6, [r4]
 824 013a F568     		ldr	r5, [r6, #12]
 825 013c 15F02005 		ands	r5, r5, #32
 826 0140 96D1     		bne	.L59
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {       
 827              		.loc 1 1439 0
 828 0142 FFF7FEFF 		bl	HAL_GetTick
 829              	.LVL81:
 830 0146 C01B     		subs	r0, r0, r7
 831 0148 B0F57A7F 		cmp	r0, #1000
 832 014c F4D9     		bls	.L60
 833              	.LVL82:
 834              	.LBE106:
 835              	.LBE105:
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 836              		.loc 1 530 0
 837 014e 2268     		ldr	r2, [r4]
 838 0150 FF21     		movs	r1, #255
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 839              		.loc 1 532 0
 840 0152 0423     		movs	r3, #4
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 841              		.loc 1 537 0
 842 0154 0120     		movs	r0, #1
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 843              		.loc 1 530 0
 844 0156 5162     		str	r1, [r2, #36]
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 845              		.loc 1 535 0
 846 0158 2577     		strb	r5, [r4, #28]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 847              		.loc 1 532 0
 848 015a 6377     		strb	r3, [r4, #29]
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 849              		.loc 1 537 0
 850 015c 8FE7     		b	.L70
 851              	.LVL83:
 852              	.L66:
 853              	.LBB107:
 854              	.LBB102:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 855              		.loc 1 1525 0
ARM GAS  /tmp/cccH61QK.s 			page 46


 856 015e 0022     		movs	r2, #0
 857              	.LVL84:
 858 0160 BAE7     		b	.L50
 859              	.L76:
 860 0162 00BF     		.align	2
 861              	.L75:
 862 0164 7F7F7F00 		.word	8355711
 863              	.LBE102:
 864              	.LBE107:
 865              		.cfi_endproc
 866              	.LFE142:
 868              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 869              		.align	1
 870              		.p2align 2,,3
 871              		.global	HAL_RTC_GetTime
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 875              		.fpu fpv4-sp-d16
 877              	HAL_RTC_GetTime:
 878              	.LFB143:
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0;
 879              		.loc 1 574 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884              	.LVL85:
 885 0000 70B4     		push	{r4, r5, r6}
 886              	.LCFI4:
 887              		.cfi_def_cfa_offset 12
 888              		.cfi_offset 4, -12
 889              		.cfi_offset 5, -8
 890              		.cfi_offset 6, -4
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 891              		.loc 1 581 0
 892 0002 0468     		ldr	r4, [r0]
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 893              		.loc 1 587 0
 894 0004 184B     		ldr	r3, .L80
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 895              		.loc 1 581 0
 896 0006 A56A     		ldr	r5, [r4, #40]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 897              		.loc 1 584 0
 898 0008 2069     		ldr	r0, [r4, #16]
 899              	.LVL86:
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 900              		.loc 1 587 0
 901 000a 2468     		ldr	r4, [r4]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 902              		.loc 1 584 0
 903 000c C0F30E00 		ubfx	r0, r0, #0, #15
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 904              		.loc 1 581 0
 905 0010 4D60     		str	r5, [r1, #4]
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
ARM GAS  /tmp/cccH61QK.s 			page 47


 906              		.loc 1 587 0
 907 0012 2340     		ands	r3, r3, r4
 908              	.LVL87:
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 909              		.loc 1 584 0
 910 0014 8860     		str	r0, [r1, #8]
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 911              		.loc 1 590 0
 912 0016 180C     		lsrs	r0, r3, #16
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 913              		.loc 1 591 0
 914 0018 C3F30624 		ubfx	r4, r3, #8, #7
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16); 
 915              		.loc 1 592 0
 916 001c DBB2     		uxtb	r3, r3
 917              	.LVL88:
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 918              		.loc 1 593 0
 919 001e 00F04006 		and	r6, r0, #64
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 920              		.loc 1 590 0
 921 0022 00F03F05 		and	r5, r0, #63
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 922              		.loc 1 591 0
 923 0026 4C70     		strb	r4, [r1, #1]
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 924              		.loc 1 593 0
 925 0028 0E73     		strb	r6, [r1, #12]
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 926              		.loc 1 590 0
 927 002a 0D70     		strb	r5, [r1]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16); 
 928              		.loc 1 592 0
 929 002c 8B70     		strb	r3, [r1, #2]
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 930              		.loc 1 596 0
 931 002e BAB9     		cbnz	r2, .L78
 932              	.LVL89:
 933              	.LBB108:
 934              	.LBB109:
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** /**
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @brief  Converts from 2 digit BCD to Binary.
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @param  Value BCD value to be converted
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   * @retval Converted word
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   */
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** {
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmp = 0;
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 935              		.loc 1 1542 0
 936 0030 2609     		lsrs	r6, r4, #4
 937              	.LBE109:
ARM GAS  /tmp/cccH61QK.s 			page 48


 938              	.LBE108:
 939              	.LBB113:
 940              	.LBB114:
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 941              		.loc 1 1543 0
 942 0032 00F00F00 		and	r0, r0, #15
 943              	.LBE114:
 944              	.LBE113:
 945              	.LBB118:
 946              	.LBB119:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 947              		.loc 1 1542 0
 948 0036 1A09     		lsrs	r2, r3, #4
 949              	.LVL90:
 950              	.LBE119:
 951              	.LBE118:
 952              	.LBB123:
 953              	.LBB110:
 954              		.loc 1 1543 0
 955 0038 04F00F04 		and	r4, r4, #15
 956              	.LBE110:
 957              	.LBE123:
 958              	.LBB124:
 959              	.LBB115:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 960              		.loc 1 1542 0
 961 003c 2D09     		lsrs	r5, r5, #4
 962              	.LVL91:
 963              	.LBE115:
 964              	.LBE124:
 965              	.LBB125:
 966              	.LBB120:
 967              		.loc 1 1543 0
 968 003e 03F00F03 		and	r3, r3, #15
 969              	.LBE120:
 970              	.LBE125:
 971              	.LBB126:
 972              	.LBB111:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 973              		.loc 1 1542 0
 974 0042 06EB8606 		add	r6, r6, r6, lsl #2
 975              	.LBE111:
 976              	.LBE126:
 977              	.LBB127:
 978              	.LBB116:
 979 0046 05EB8505 		add	r5, r5, r5, lsl #2
 980              	.LBE116:
 981              	.LBE127:
 982              	.LBB128:
 983              	.LBB121:
 984 004a 02EB8202 		add	r2, r2, r2, lsl #2
 985              	.LBE121:
 986              	.LBE128:
 987              	.LBB129:
 988              	.LBB117:
 989              		.loc 1 1543 0
 990 004e 00EB4500 		add	r0, r0, r5, lsl #1
ARM GAS  /tmp/cccH61QK.s 			page 49


 991              	.LBE117:
 992              	.LBE129:
 993              	.LBB130:
 994              	.LBB112:
 995 0052 04EB4604 		add	r4, r4, r6, lsl #1
 996              	.LBE112:
 997              	.LBE130:
 998              	.LBB131:
 999              	.LBB122:
 1000 0056 03EB4203 		add	r3, r3, r2, lsl #1
 1001              	.LBE122:
 1002              	.LBE131:
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 1003              		.loc 1 599 0
 1004 005a 0870     		strb	r0, [r1]
 1005              	.LVL92:
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 1006              		.loc 1 600 0
 1007 005c 4C70     		strb	r4, [r1, #1]
 1008              	.LVL93:
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1009              		.loc 1 601 0
 1010 005e 8B70     		strb	r3, [r1, #2]
 1011              	.L78:
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1012              		.loc 1 605 0
 1013 0060 0020     		movs	r0, #0
 1014 0062 70BC     		pop	{r4, r5, r6}
 1015              	.LCFI5:
 1016              		.cfi_restore 6
 1017              		.cfi_restore 5
 1018              		.cfi_restore 4
 1019              		.cfi_def_cfa_offset 0
 1020 0064 7047     		bx	lr
 1021              	.L81:
 1022 0066 00BF     		.align	2
 1023              	.L80:
 1024 0068 7F7F7F00 		.word	8355711
 1025              		.cfi_endproc
 1026              	.LFE143:
 1028              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1029              		.align	1
 1030              		.p2align 2,,3
 1031              		.global	HAL_RTC_SetDate
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1035              		.fpu fpv4-sp-d16
 1037              	HAL_RTC_SetDate:
 1038              	.LFB144:
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
 1039              		.loc 1 619 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              	.LVL94:
 1044 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/cccH61QK.s 			page 50


 1045              	.LCFI6:
 1046              		.cfi_def_cfa_offset 24
 1047              		.cfi_offset 3, -24
 1048              		.cfi_offset 4, -20
 1049              		.cfi_offset 5, -16
 1050              		.cfi_offset 6, -12
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1053              		.loc 1 626 0
 1054 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1055 0004 012B     		cmp	r3, #1
 1056 0006 74D0     		beq	.L101
 1057 0008 0546     		mov	r5, r0
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1058              		.loc 1 628 0 discriminator 2
 1059 000a 0223     		movs	r3, #2
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1060              		.loc 1 626 0 discriminator 2
 1061 000c 0120     		movs	r0, #1
 1062              	.LVL95:
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1063              		.loc 1 628 0 discriminator 2
 1064 000e 6B77     		strb	r3, [r5, #29]
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1065              		.loc 1 626 0 discriminator 2
 1066 0010 2877     		strb	r0, [r5, #28]
 1067 0012 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 1068 0014 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1069 0016 7603     		lsls	r6, r6, #13
 1070 0018 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1071 001a 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1072              		.loc 1 630 0 discriminator 2
 1073 001c 8ABB     		cbnz	r2, .L84
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1074              		.loc 1 630 0 is_stmt 0 discriminator 1
 1075 001e C706     		lsls	r7, r0, #27
 1076 0020 04D5     		bpl	.L85
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1077              		.loc 1 632 0 is_stmt 1
 1078 0022 20F01000 		bic	r0, r0, #16
 1079 0026 0A30     		adds	r0, r0, #10
 1080 0028 C0B2     		uxtb	r0, r0
 1081 002a 4870     		strb	r0, [r1, #1]
 1082              	.L85:
 1083              	.LVL96:
 1084              	.LBB142:
 1085              	.LBB143:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1086              		.loc 1 1525 0
 1087 002c 092B     		cmp	r3, #9
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1088              		.loc 1 1523 0
 1089 002e 4FF00001 		mov	r1, #0
 1090              	.LVL97:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
ARM GAS  /tmp/cccH61QK.s 			page 51


 1091              		.loc 1 1525 0
 1092 0032 06D9     		bls	.L99
 1093              	.LVL98:
 1094              	.L86:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1095              		.loc 1 1528 0
 1096 0034 0A3B     		subs	r3, r3, #10
 1097              	.LVL99:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1098              		.loc 1 1527 0
 1099 0036 0131     		adds	r1, r1, #1
 1100              	.LVL100:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1101              		.loc 1 1528 0
 1102 0038 DBB2     		uxtb	r3, r3
 1103              	.LVL101:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1104              		.loc 1 1525 0
 1105 003a 092B     		cmp	r3, #9
 1106 003c FAD8     		bhi	.L86
 1107 003e 0901     		lsls	r1, r1, #4
 1108              	.LVL102:
 1109 0040 C9B2     		uxtb	r1, r1
 1110              	.LVL103:
 1111              	.L99:
 1112              	.LBE143:
 1113              	.LBE142:
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 1114              		.loc 1 643 0
 1115 0042 0B43     		orrs	r3, r3, r1
 1116              	.LBB144:
 1117              	.LBB145:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1118              		.loc 1 1525 0
 1119 0044 0928     		cmp	r0, #9
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1120              		.loc 1 1523 0
 1121 0046 4FF00001 		mov	r1, #0
 1122              	.LBE145:
 1123              	.LBE144:
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 1124              		.loc 1 643 0
 1125 004a 4FEA0343 		lsl	r3, r3, #16
 1126              	.LVL104:
 1127              	.LBB147:
 1128              	.LBB146:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1129              		.loc 1 1525 0
 1130 004e 06D9     		bls	.L87
 1131              	.LVL105:
 1132              	.L88:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1133              		.loc 1 1528 0
 1134 0050 0A38     		subs	r0, r0, #10
 1135              	.LVL106:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1136              		.loc 1 1527 0
ARM GAS  /tmp/cccH61QK.s 			page 52


 1137 0052 0131     		adds	r1, r1, #1
 1138              	.LVL107:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1139              		.loc 1 1528 0
 1140 0054 C0B2     		uxtb	r0, r0
 1141              	.LVL108:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1142              		.loc 1 1525 0
 1143 0056 0928     		cmp	r0, #9
 1144 0058 FAD8     		bhi	.L88
 1145 005a 0901     		lsls	r1, r1, #4
 1146              	.LVL109:
 1147 005c C9B2     		uxtb	r1, r1
 1148              	.LVL110:
 1149              	.L87:
 1150              	.LBE146:
 1151              	.LBE147:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1152              		.loc 1 644 0
 1153 005e 0843     		orrs	r0, r0, r1
 1154              	.LBB148:
 1155              	.LBB149:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1156              		.loc 1 1525 0
 1157 0060 092C     		cmp	r4, #9
 1158              	.LBE149:
 1159              	.LBE148:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1160              		.loc 1 644 0
 1161 0062 4FEA0021 		lsl	r1, r0, #8
 1162              	.LVL111:
 1163              	.LBB152:
 1164              	.LBB150:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1165              		.loc 1 1525 0
 1166 0066 60D9     		bls	.L103
 1167              	.LVL112:
 1168              	.L90:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1169              		.loc 1 1528 0
 1170 0068 0A3C     		subs	r4, r4, #10
 1171              	.LVL113:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1172              		.loc 1 1527 0
 1173 006a 0132     		adds	r2, r2, #1
 1174              	.LVL114:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1175              		.loc 1 1528 0
 1176 006c E4B2     		uxtb	r4, r4
 1177              	.LVL115:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1178              		.loc 1 1525 0
 1179 006e 092C     		cmp	r4, #9
 1180 0070 FAD8     		bhi	.L90
 1181 0072 1201     		lsls	r2, r2, #4
 1182              	.LVL116:
 1183 0074 D0B2     		uxtb	r0, r2
ARM GAS  /tmp/cccH61QK.s 			page 53


 1184              	.LVL117:
 1185              	.L89:
 1186              	.LBE150:
 1187              	.LBE152:
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 1188              		.loc 1 643 0
 1189 0076 1E43     		orrs	r6, r6, r3
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13));   
 1190              		.loc 1 645 0
 1191 0078 0443     		orrs	r4, r4, r0
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 1192              		.loc 1 643 0
 1193 007a 46EA0100 		orr	r0, r6, r1
 1194 007e 0443     		orrs	r4, r4, r0
 1195              	.LVL118:
 1196 0080 04E0     		b	.L100
 1197              	.LVL119:
 1198              	.L84:
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8) | \
 1199              		.loc 1 654 0
 1200 0082 46EA0343 		orr	r3, r6, r3, lsl #16
 1201 0086 1C43     		orrs	r4, r4, r3
 1202 0088 44EA0024 		orr	r4, r4, r0, lsl #8
 1203              	.LVL120:
 1204              	.L100:
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1205              		.loc 1 661 0
 1206 008c 2B68     		ldr	r3, [r5]
 1207 008e CA21     		movs	r1, #202
 1208 0090 5322     		movs	r2, #83
 1209 0092 5962     		str	r1, [r3, #36]
 1210 0094 5A62     		str	r2, [r3, #36]
 1211              	.LVL121:
 1212              	.LBB153:
 1213              	.LBB154:
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1214              		.loc 1 1494 0
 1215 0096 DA68     		ldr	r2, [r3, #12]
 1216 0098 5106     		lsls	r1, r2, #25
 1217 009a 11D5     		bpl	.L113
 1218              	.LVL122:
 1219              	.L91:
 1220              	.LBE154:
 1221              	.LBE153:
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1222              		.loc 1 680 0
 1223 009c 244A     		ldr	r2, .L115
 1224 009e 2240     		ands	r2, r2, r4
 1225 00a0 5A60     		str	r2, [r3, #4]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1226              		.loc 1 683 0
 1227 00a2 DA68     		ldr	r2, [r3, #12]
 1228 00a4 22F08002 		bic	r2, r2, #128
 1229 00a8 DA60     		str	r2, [r3, #12]
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1230              		.loc 1 686 0
 1231 00aa 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cccH61QK.s 			page 54


 1232 00ac 9206     		lsls	r2, r2, #26
 1233 00ae 22D5     		bpl	.L114
 1234              	.LVL123:
 1235              	.L95:
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1236              		.loc 1 708 0
 1237 00b0 0022     		movs	r2, #0
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1238              		.loc 1 703 0
 1239 00b2 FF20     		movs	r0, #255
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1240              		.loc 1 705 0
 1241 00b4 0121     		movs	r1, #1
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1242              		.loc 1 703 0
 1243 00b6 5862     		str	r0, [r3, #36]
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1244              		.loc 1 710 0
 1245 00b8 1046     		mov	r0, r2
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1246              		.loc 1 705 0
 1247 00ba 6977     		strb	r1, [r5, #29]
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1248              		.loc 1 708 0
 1249 00bc 2A77     		strb	r2, [r5, #28]
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1250              		.loc 1 712 0
 1251 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1252              	.LVL124:
 1253              	.L113:
 1254              	.LBB156:
 1255              	.LBB155:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1256              		.loc 1 1497 0
 1257 00c0 4FF0FF32 		mov	r2, #-1
 1258 00c4 DA60     		str	r2, [r3, #12]
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1259              		.loc 1 1500 0
 1260 00c6 FFF7FEFF 		bl	HAL_GetTick
 1261              	.LVL125:
 1262 00ca 0646     		mov	r6, r0
 1263              	.LVL126:
 1264              	.L92:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1265              		.loc 1 1503 0
 1266 00cc 2B68     		ldr	r3, [r5]
 1267 00ce DF68     		ldr	r7, [r3, #12]
 1268 00d0 17F04007 		ands	r7, r7, #64
 1269 00d4 E2D1     		bne	.L91
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {       
 1270              		.loc 1 1505 0
 1271 00d6 FFF7FEFF 		bl	HAL_GetTick
 1272              	.LVL127:
 1273 00da 801B     		subs	r0, r0, r6
 1274 00dc B0F57A7F 		cmp	r0, #1000
 1275 00e0 F4D9     		bls	.L92
 1276              	.LVL128:
ARM GAS  /tmp/cccH61QK.s 			page 55


 1277              	.LBE155:
 1278              	.LBE156:
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1279              		.loc 1 667 0
 1280 00e2 2A68     		ldr	r2, [r5]
 1281 00e4 FF21     		movs	r1, #255
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1282              		.loc 1 670 0
 1283 00e6 0423     		movs	r3, #4
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   } 
 1284              		.loc 1 675 0
 1285 00e8 0120     		movs	r0, #1
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1286              		.loc 1 667 0
 1287 00ea 5162     		str	r1, [r2, #36]
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1288              		.loc 1 673 0
 1289 00ec 2F77     		strb	r7, [r5, #28]
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1290              		.loc 1 670 0
 1291 00ee 6B77     		strb	r3, [r5, #29]
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1292              		.loc 1 712 0
 1293 00f0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1294              	.LVL129:
 1295              	.L101:
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1296              		.loc 1 626 0
 1297 00f2 0220     		movs	r0, #2
 1298              	.LVL130:
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1299              		.loc 1 712 0
 1300 00f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1301              	.LVL131:
 1302              	.L114:
 1303              	.LBB157:
 1304              	.LBB158:
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1305              		.loc 1 1431 0
 1306 00f6 DA68     		ldr	r2, [r3, #12]
 1307 00f8 22F0A002 		bic	r2, r2, #160
 1308 00fc DA60     		str	r2, [r3, #12]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1309              		.loc 1 1434 0
 1310 00fe FFF7FEFF 		bl	HAL_GetTick
 1311              	.LVL132:
 1312 0102 0646     		mov	r6, r0
 1313              	.LVL133:
 1314              	.L96:
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1315              		.loc 1 1437 0
 1316 0104 2B68     		ldr	r3, [r5]
 1317 0106 DC68     		ldr	r4, [r3, #12]
 1318 0108 14F02004 		ands	r4, r4, #32
 1319 010c D0D1     		bne	.L95
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {       
 1320              		.loc 1 1439 0
ARM GAS  /tmp/cccH61QK.s 			page 56


 1321 010e FFF7FEFF 		bl	HAL_GetTick
 1322              	.LVL134:
 1323 0112 801B     		subs	r0, r0, r6
 1324 0114 B0F57A7F 		cmp	r0, #1000
 1325 0118 F4D9     		bls	.L96
 1326              	.LVL135:
 1327              	.LBE158:
 1328              	.LBE157:
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1329              		.loc 1 691 0
 1330 011a 2A68     		ldr	r2, [r5]
 1331 011c FF21     		movs	r1, #255
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1332              		.loc 1 693 0
 1333 011e 0423     		movs	r3, #4
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 1334              		.loc 1 698 0
 1335 0120 0120     		movs	r0, #1
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1336              		.loc 1 691 0
 1337 0122 5162     		str	r1, [r2, #36]
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1338              		.loc 1 696 0
 1339 0124 2C77     		strb	r4, [r5, #28]
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1340              		.loc 1 693 0
 1341 0126 6B77     		strb	r3, [r5, #29]
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1342              		.loc 1 712 0
 1343 0128 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1344              	.LVL136:
 1345              	.L103:
 1346              	.LBB159:
 1347              	.LBB151:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1348              		.loc 1 1525 0
 1349 012a 0020     		movs	r0, #0
 1350 012c A3E7     		b	.L89
 1351              	.L116:
 1352 012e 00BF     		.align	2
 1353              	.L115:
 1354 0130 3FFFFF00 		.word	16777023
 1355              	.LBE151:
 1356              	.LBE159:
 1357              		.cfi_endproc
 1358              	.LFE144:
 1360              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1361              		.align	1
 1362              		.p2align 2,,3
 1363              		.global	HAL_RTC_GetDate
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1367              		.fpu fpv4-sp-d16
 1369              	HAL_RTC_GetDate:
 1370              	.LFB145:
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
ARM GAS  /tmp/cccH61QK.s 			page 57


 1371              		.loc 1 729 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376              	.LVL137:
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1377              		.loc 1 736 0
 1378 0000 0068     		ldr	r0, [r0]
 1379              	.LVL138:
 1380 0002 164B     		ldr	r3, .L120
 1381 0004 4068     		ldr	r0, [r0, #4]
 1382 0006 0340     		ands	r3, r3, r0
 1383              	.LVL139:
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
 1384              		.loc 1 729 0
 1385 0008 F0B4     		push	{r4, r5, r6, r7}
 1386              	.LCFI7:
 1387              		.cfi_def_cfa_offset 16
 1388              		.cfi_offset 4, -16
 1389              		.cfi_offset 5, -12
 1390              		.cfi_offset 6, -8
 1391              		.cfi_offset 7, -4
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 1392              		.loc 1 740 0
 1393 000a C3F30724 		ubfx	r4, r3, #8, #8
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1394              		.loc 1 742 0
 1395 000e C3F34236 		ubfx	r6, r3, #13, #3
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1396              		.loc 1 739 0
 1397 0012 180C     		lsrs	r0, r3, #16
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 1398              		.loc 1 740 0
 1399 0014 04F01F05 		and	r5, r4, #31
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13); 
 1400              		.loc 1 741 0
 1401 0018 DBB2     		uxtb	r3, r3
 1402              	.LVL140:
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1403              		.loc 1 742 0
 1404 001a 0E70     		strb	r6, [r1]
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 1405              		.loc 1 740 0
 1406 001c 4D70     		strb	r5, [r1, #1]
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1407              		.loc 1 739 0
 1408 001e C870     		strb	r0, [r1, #3]
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13); 
 1409              		.loc 1 741 0
 1410 0020 8B70     		strb	r3, [r1, #2]
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {    
 1411              		.loc 1 745 0
 1412 0022 BAB9     		cbnz	r2, .L118
 1413              	.LVL141:
 1414              	.LBB160:
 1415              	.LBB161:
ARM GAS  /tmp/cccH61QK.s 			page 58


1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1416              		.loc 1 1542 0
 1417 0024 2D09     		lsrs	r5, r5, #4
 1418              	.LBE161:
 1419              	.LBE160:
 1420              	.LBB165:
 1421              	.LBB166:
 1422              		.loc 1 1543 0
 1423 0026 03F00F06 		and	r6, r3, #15
 1424              	.LBE166:
 1425              	.LBE165:
 1426              	.LBB170:
 1427              	.LBB171:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1428              		.loc 1 1542 0
 1429 002a 0209     		lsrs	r2, r0, #4
 1430              	.LVL142:
 1431              	.LBE171:
 1432              	.LBE170:
 1433              	.LBB175:
 1434              	.LBB162:
 1435              		.loc 1 1543 0
 1436 002c 04F00F04 		and	r4, r4, #15
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1437              		.loc 1 1542 0
 1438 0030 AF00     		lsls	r7, r5, #2
 1439              	.LBE162:
 1440              	.LBE175:
 1441              	.LBB176:
 1442              	.LBB172:
 1443              		.loc 1 1543 0
 1444 0032 00F00F00 		and	r0, r0, #15
 1445              	.LVL143:
 1446              	.LBE172:
 1447              	.LBE176:
 1448              	.LBB177:
 1449              	.LBB167:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1450              		.loc 1 1542 0
 1451 0036 1B09     		lsrs	r3, r3, #4
 1452              	.LBE167:
 1453              	.LBE177:
 1454              	.LBB178:
 1455              	.LBB163:
 1456 0038 3D44     		add	r5, r5, r7
 1457              	.LBE163:
 1458              	.LBE178:
 1459              	.LBB179:
 1460              	.LBB173:
 1461 003a 02EB8202 		add	r2, r2, r2, lsl #2
 1462              	.LBE173:
 1463              	.LBE179:
 1464              	.LBB180:
 1465              	.LBB168:
 1466 003e 03EB8303 		add	r3, r3, r3, lsl #2
 1467              	.LBE168:
 1468              	.LBE180:
ARM GAS  /tmp/cccH61QK.s 			page 59


 1469              	.LBB181:
 1470              	.LBB164:
 1471              		.loc 1 1543 0
 1472 0042 04EB4504 		add	r4, r4, r5, lsl #1
 1473              	.LBE164:
 1474              	.LBE181:
 1475              	.LBB182:
 1476              	.LBB174:
 1477 0046 00EB4200 		add	r0, r0, r2, lsl #1
 1478              	.LBE174:
 1479              	.LBE182:
 1480              	.LBB183:
 1481              	.LBB169:
 1482 004a 06EB4303 		add	r3, r6, r3, lsl #1
 1483              	.LBE169:
 1484              	.LBE183:
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 1485              		.loc 1 749 0
 1486 004e 4C70     		strb	r4, [r1, #1]
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 1487              		.loc 1 748 0
 1488 0050 C870     		strb	r0, [r1, #3]
 1489              	.LVL144:
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1490              		.loc 1 750 0
 1491 0052 8B70     		strb	r3, [r1, #2]
 1492              	.L118:
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1493              		.loc 1 753 0
 1494 0054 0020     		movs	r0, #0
 1495 0056 F0BC     		pop	{r4, r5, r6, r7}
 1496              	.LCFI8:
 1497              		.cfi_restore 7
 1498              		.cfi_restore 6
 1499              		.cfi_restore 5
 1500              		.cfi_restore 4
 1501              		.cfi_def_cfa_offset 0
 1502 0058 7047     		bx	lr
 1503              	.L121:
 1504 005a 00BF     		.align	2
 1505              	.L120:
 1506 005c 3FFFFF00 		.word	16777023
 1507              		.cfi_endproc
 1508              	.LFE145:
 1510              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1511              		.align	1
 1512              		.p2align 2,,3
 1513              		.global	HAL_RTC_SetAlarm
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	HAL_RTC_SetAlarm:
 1520              	.LFB146:
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 1521              		.loc 1 784 0
 1522              		.cfi_startproc
ARM GAS  /tmp/cccH61QK.s 			page 60


 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              	.LVL145:
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1526              		.loc 1 797 0
 1527 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1528 0002 012B     		cmp	r3, #1
 1529 0004 00F0D780 		beq	.L144
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1530              		.loc 1 799 0 discriminator 2
 1531 0008 0223     		movs	r3, #2
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 1532              		.loc 1 784 0 discriminator 2
 1533 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1534              	.LCFI9:
 1535              		.cfi_def_cfa_offset 24
 1536              		.cfi_offset 4, -24
 1537              		.cfi_offset 5, -20
 1538              		.cfi_offset 6, -16
 1539              		.cfi_offset 7, -12
 1540              		.cfi_offset 8, -8
 1541              		.cfi_offset 14, -4
 1542 000e 0546     		mov	r5, r0
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1543              		.loc 1 797 0 discriminator 2
 1544 0010 0120     		movs	r0, #1
 1545              	.LVL146:
 1546 0012 2F68     		ldr	r7, [r5]
 1547 0014 2877     		strb	r0, [r5, #28]
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1548              		.loc 1 799 0 discriminator 2
 1549 0016 6B77     		strb	r3, [r5, #29]
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1550              		.loc 1 801 0 discriminator 2
 1551 0018 002A     		cmp	r2, #0
 1552 001a 4DD0     		beq	.L160
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1553              		.loc 1 835 0
 1554 001c BC68     		ldr	r4, [r7, #8]
 1555 001e 14F0400E 		ands	lr, r4, #64
 1556 0022 00F0C280 		beq	.L136
 1557 0026 0C7B     		ldrb	r4, [r1, #12]	@ zero_extendqisi2
 1558 0028 4FEA044E 		lsl	lr, r4, #16
 1559              	.L137:
 1560              	.LVL147:
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8) | \
 1561              		.loc 1 861 0
 1562 002c 0B6A     		ldr	r3, [r1, #32]
 1563 002e 8C69     		ldr	r4, [r1, #24]
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16) | \
 1564              		.loc 1 863 0
 1565 0030 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 1566              	.LVL148:
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8) | \
 1567              		.loc 1 861 0
 1568 0032 1C43     		orrs	r4, r4, r3
 1569 0034 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/cccH61QK.s 			page 61


 1570 0036 1443     		orrs	r4, r4, r2
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1571              		.loc 1 862 0
 1572 0038 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8) | \
 1573              		.loc 1 861 0
 1574 003a 44EA0344 		orr	r4, r4, r3, lsl #16
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1575              		.loc 1 865 0
 1576 003e 91F82430 		ldrb	r3, [r1, #36]	@ zero_extendqisi2
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8) | \
 1577              		.loc 1 861 0
 1578 0042 44EA0224 		orr	r4, r4, r2, lsl #8
 1579 0046 44EA0364 		orr	r4, r4, r3, lsl #24
 1580 004a 44EA0E04 		orr	r4, r4, lr
 1581              	.LVL149:
 1582              	.L135:
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1583              		.loc 1 877 0
 1584 004e 8B6A     		ldr	r3, [r1, #40]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1585              		.loc 1 874 0
 1586 0050 CA20     		movs	r0, #202
 1587 0052 5322     		movs	r2, #83
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1588              		.loc 1 871 0
 1589 0054 D1F80480 		ldr	r8, [r1, #4]
 1590 0058 CE69     		ldr	r6, [r1, #28]
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1591              		.loc 1 877 0
 1592 005a B3F5807F 		cmp	r3, #256
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1593              		.loc 1 874 0
 1594 005e 7862     		str	r0, [r7, #36]
 1595 0060 7A62     		str	r2, [r7, #36]
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1596              		.loc 1 871 0
 1597 0062 48EA0608 		orr	r8, r8, r6
 1598              	.LVL150:
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1599              		.loc 1 880 0
 1600 0066 BB68     		ldr	r3, [r7, #8]
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1601              		.loc 1 877 0
 1602 0068 00F08180 		beq	.L161
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1603              		.loc 1 914 0
 1604 006c 23F40073 		bic	r3, r3, #512
 1605 0070 BB60     		str	r3, [r7, #8]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1606              		.loc 1 917 0
 1607 0072 BB68     		ldr	r3, [r7, #8]
 1608 0074 23F40053 		bic	r3, r3, #8192
 1609 0078 BB60     		str	r3, [r7, #8]
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1610              		.loc 1 920 0
 1611 007a FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cccH61QK.s 			page 62


 1612              	.LVL151:
 1613 007e 0746     		mov	r7, r0
 1614              	.LVL152:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1615              		.loc 1 923 0
 1616 0080 05E0     		b	.L142
 1617              	.LVL153:
 1618              	.L143:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 1619              		.loc 1 925 0
 1620 0082 FFF7FEFF 		bl	HAL_GetTick
 1621              	.LVL154:
 1622 0086 C01B     		subs	r0, r0, r7
 1623 0088 B0F57A7F 		cmp	r0, #1000
 1624 008c 66D8     		bhi	.L159
 1625              	.L142:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1626              		.loc 1 923 0
 1627 008e 2A68     		ldr	r2, [r5]
 1628 0090 D668     		ldr	r6, [r2, #12]
 1629 0092 16F00206 		ands	r6, r6, #2
 1630 0096 F4D0     		beq	.L143
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1631              		.loc 1 939 0
 1632 0098 1462     		str	r4, [r2, #32]
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1633              		.loc 1 941 0
 1634 009a C2F84880 		str	r8, [r2, #72]
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1635              		.loc 1 943 0
 1636 009e 9368     		ldr	r3, [r2, #8]
 1637 00a0 43F40073 		orr	r3, r3, #512
 1638 00a4 9360     		str	r3, [r2, #8]
 1639              	.L141:
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1640              		.loc 1 953 0
 1641 00a6 0023     		movs	r3, #0
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1642              		.loc 1 947 0
 1643 00a8 FF20     		movs	r0, #255
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1644              		.loc 1 950 0
 1645 00aa 0121     		movs	r1, #1
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1646              		.loc 1 947 0
 1647 00ac 5062     		str	r0, [r2, #36]
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 1648              		.loc 1 955 0
 1649 00ae 1846     		mov	r0, r3
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1650              		.loc 1 950 0
 1651 00b0 6977     		strb	r1, [r5, #29]
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1652              		.loc 1 953 0
 1653 00b2 2B77     		strb	r3, [r5, #28]
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1654              		.loc 1 956 0
ARM GAS  /tmp/cccH61QK.s 			page 63


 1655 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1656              	.LVL155:
 1657              	.L160:
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1658              		.loc 1 803 0
 1659 00b8 BE68     		ldr	r6, [r7, #8]
 1660 00ba 16F0400C 		ands	ip, r6, #64
 1661 00be 77D0     		beq	.L125
 1662 00c0 91F80CC0 		ldrb	ip, [r1, #12]	@ zero_extendqisi2
 1663 00c4 4FEA0C4C 		lsl	ip, ip, #16
 1664              	.L126:
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8) | \
 1665              		.loc 1 825 0
 1666 00c8 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1667              	.LVL156:
 1668              	.LBB184:
 1669              	.LBB185:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1670              		.loc 1 1523 0
 1671 00ca 0020     		movs	r0, #0
 1672              	.LBE185:
 1673              	.LBE184:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1674              		.loc 1 816 0
 1675 00cc 0E6A     		ldr	r6, [r1, #32]
 1676              	.LBB187:
 1677              	.LBB186:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1678              		.loc 1 1525 0
 1679 00ce 092B     		cmp	r3, #9
 1680 00d0 06D9     		bls	.L127
 1681              	.LVL157:
 1682              	.L128:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1683              		.loc 1 1528 0
 1684 00d2 0A3B     		subs	r3, r3, #10
 1685              	.LVL158:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1686              		.loc 1 1527 0
 1687 00d4 0130     		adds	r0, r0, #1
 1688              	.LVL159:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1689              		.loc 1 1528 0
 1690 00d6 DBB2     		uxtb	r3, r3
 1691              	.LVL160:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1692              		.loc 1 1525 0
 1693 00d8 092B     		cmp	r3, #9
 1694 00da FAD8     		bhi	.L128
 1695 00dc 0001     		lsls	r0, r0, #4
 1696              	.LVL161:
 1697 00de C0B2     		uxtb	r0, r0
 1698              	.L127:
 1699              	.LVL162:
 1700              	.LBE186:
 1701              	.LBE187:
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8) | \
ARM GAS  /tmp/cccH61QK.s 			page 64


 1702              		.loc 1 825 0
 1703 00e0 1843     		orrs	r0, r0, r3
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1704              		.loc 1 826 0
 1705 00e2 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1706              	.LVL163:
 1707              	.LBB188:
 1708              	.LBB189:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1709              		.loc 1 1523 0
 1710 00e4 0024     		movs	r4, #0
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1711              		.loc 1 1525 0
 1712 00e6 092B     		cmp	r3, #9
 1713              	.LBE189:
 1714              	.LBE188:
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8) | \
 1715              		.loc 1 825 0
 1716 00e8 4FEA0040 		lsl	r0, r0, #16
 1717              	.LBB191:
 1718              	.LBB190:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1719              		.loc 1 1525 0
 1720 00ec 06D9     		bls	.L129
 1721              	.LVL164:
 1722              	.L130:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1723              		.loc 1 1528 0
 1724 00ee 0A3B     		subs	r3, r3, #10
 1725              	.LVL165:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1726              		.loc 1 1527 0
 1727 00f0 0134     		adds	r4, r4, #1
 1728              	.LVL166:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1729              		.loc 1 1528 0
 1730 00f2 DBB2     		uxtb	r3, r3
 1731              	.LVL167:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1732              		.loc 1 1525 0
 1733 00f4 092B     		cmp	r3, #9
 1734 00f6 FAD8     		bhi	.L130
 1735 00f8 2401     		lsls	r4, r4, #4
 1736              	.LVL168:
 1737 00fa E4B2     		uxtb	r4, r4
 1738              	.L129:
 1739              	.LVL169:
 1740              	.LBE190:
 1741              	.LBE191:
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1742              		.loc 1 826 0
 1743 00fc 2343     		orrs	r3, r3, r4
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16) | \
 1744              		.loc 1 827 0
 1745 00fe 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 1746              	.LVL170:
 1747              	.LBB192:
ARM GAS  /tmp/cccH61QK.s 			page 65


 1748              	.LBB193:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1749              		.loc 1 1525 0
 1750 0100 092C     		cmp	r4, #9
 1751              	.LBE193:
 1752              	.LBE192:
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1753              		.loc 1 826 0
 1754 0102 4FEA0323 		lsl	r3, r3, #8
 1755              	.LBB196:
 1756              	.LBB194:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1757              		.loc 1 1525 0
 1758 0106 5AD9     		bls	.L147
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1759              		.loc 1 1523 0
 1760 0108 4FF0000E 		mov	lr, #0
 1761              	.LVL171:
 1762              	.L132:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1763              		.loc 1 1528 0
 1764 010c 0A3C     		subs	r4, r4, #10
 1765              	.LVL172:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1766              		.loc 1 1527 0
 1767 010e 0EF1010E 		add	lr, lr, #1
 1768              	.LVL173:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1769              		.loc 1 1528 0
 1770 0112 E4B2     		uxtb	r4, r4
 1771              	.LVL174:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1772              		.loc 1 1525 0
 1773 0114 092C     		cmp	r4, #9
 1774 0116 F9D8     		bhi	.L132
 1775 0118 4FEA0E1E 		lsl	lr, lr, #4
 1776              	.LVL175:
 1777 011c 5FFA8EF8 		uxtb	r8, lr
 1778              	.L131:
 1779              	.LVL176:
 1780              	.LBE194:
 1781              	.LBE196:
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1782              		.loc 1 829 0
 1783 0120 91F824E0 		ldrb	lr, [r1, #36]	@ zero_extendqisi2
 1784              	.LVL177:
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16) | \
 1785              		.loc 1 827 0
 1786 0124 44EA0804 		orr	r4, r4, r8
 1787              	.LBB197:
 1788              	.LBB198:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1789              		.loc 1 1525 0
 1790 0128 BEF1090F 		cmp	lr, #9
 1791 012c 45D9     		bls	.L148
 1792              	.LVL178:
 1793              	.L134:
ARM GAS  /tmp/cccH61QK.s 			page 66


1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1794              		.loc 1 1528 0
 1795 012e AEF10A0E 		sub	lr, lr, #10
 1796              	.LVL179:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 1797              		.loc 1 1527 0
 1798 0132 0132     		adds	r2, r2, #1
 1799              	.LVL180:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1800              		.loc 1 1528 0
 1801 0134 5FFA8EFE 		uxtb	lr, lr
 1802              	.LVL181:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1803              		.loc 1 1525 0
 1804 0138 BEF1090F 		cmp	lr, #9
 1805 013c F7D8     		bhi	.L134
 1806 013e 1201     		lsls	r2, r2, #4
 1807              	.LVL182:
 1808 0140 D2B2     		uxtb	r2, r2
 1809              	.L133:
 1810              	.LVL183:
 1811              	.LBE198:
 1812              	.LBE197:
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1813              		.loc 1 829 0
 1814 0142 4EEA020E 		orr	lr, lr, r2
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8) | \
 1815              		.loc 1 825 0
 1816 0146 8A69     		ldr	r2, [r1, #24]
 1817 0148 1643     		orrs	r6, r6, r2
 1818 014a 46EA0C0C 		orr	ip, r6, ip
 1819 014e 4CEA0000 		orr	r0, ip, r0
 1820 0152 0343     		orrs	r3, r3, r0
 1821 0154 1C43     		orrs	r4, r4, r3
 1822 0156 44EA0E64 		orr	r4, r4, lr, lsl #24
 1823              	.LVL184:
 1824 015a 78E7     		b	.L135
 1825              	.LVL185:
 1826              	.L159:
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1827              		.loc 1 930 0
 1828 015c 0323     		movs	r3, #3
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1829              		.loc 1 928 0
 1830 015e 2A68     		ldr	r2, [r5]
 1831 0160 FF21     		movs	r1, #255
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }  
 1832              		.loc 1 935 0
 1833 0162 1846     		mov	r0, r3
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1834              		.loc 1 928 0
 1835 0164 5162     		str	r1, [r2, #36]
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1836              		.loc 1 933 0
 1837 0166 2E77     		strb	r6, [r5, #28]
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 1838              		.loc 1 930 0
ARM GAS  /tmp/cccH61QK.s 			page 67


 1839 0168 6B77     		strb	r3, [r5, #29]
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1840              		.loc 1 956 0
 1841 016a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1842              	.LVL186:
 1843              	.L161:
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 1844              		.loc 1 880 0
 1845 016e 23F48073 		bic	r3, r3, #256
 1846 0172 BB60     		str	r3, [r7, #8]
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1847              		.loc 1 883 0
 1848 0174 BB68     		ldr	r3, [r7, #8]
 1849 0176 23F48053 		bic	r3, r3, #4096
 1850 017a BB60     		str	r3, [r7, #8]
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1851              		.loc 1 886 0
 1852 017c FFF7FEFF 		bl	HAL_GetTick
 1853              	.LVL187:
 1854 0180 0746     		mov	r7, r0
 1855              	.LVL188:
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1856              		.loc 1 889 0
 1857 0182 05E0     		b	.L139
 1858              	.LVL189:
 1859              	.L140:
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 1860              		.loc 1 891 0
 1861 0184 FFF7FEFF 		bl	HAL_GetTick
 1862              	.LVL190:
 1863 0188 C01B     		subs	r0, r0, r7
 1864 018a B0F57A7F 		cmp	r0, #1000
 1865 018e E5D8     		bhi	.L159
 1866              	.L139:
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1867              		.loc 1 889 0
 1868 0190 2A68     		ldr	r2, [r5]
 1869 0192 D668     		ldr	r6, [r2, #12]
 1870 0194 16F00106 		ands	r6, r6, #1
 1871 0198 F4D0     		beq	.L140
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1872              		.loc 1 905 0
 1873 019a D461     		str	r4, [r2, #28]
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1874              		.loc 1 907 0
 1875 019c C2F84480 		str	r8, [r2, #68]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 1876              		.loc 1 909 0
 1877 01a0 9368     		ldr	r3, [r2, #8]
 1878 01a2 43F48073 		orr	r3, r3, #256
 1879 01a6 9360     		str	r3, [r2, #8]
 1880 01a8 7DE7     		b	.L141
 1881              	.LVL191:
 1882              	.L136:
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1883              		.loc 1 843 0
 1884 01aa 81F80CE0 		strb	lr, [r1, #12]
ARM GAS  /tmp/cccH61QK.s 			page 68


 1885 01ae 3DE7     		b	.L137
 1886              	.L125:
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1887              		.loc 1 810 0
 1888 01b0 81F80CC0 		strb	ip, [r1, #12]
 1889 01b4 88E7     		b	.L126
 1890              	.LVL192:
 1891              	.L144:
 1892              	.LCFI10:
 1893              		.cfi_def_cfa_offset 0
 1894              		.cfi_restore 4
 1895              		.cfi_restore 5
 1896              		.cfi_restore 6
 1897              		.cfi_restore 7
 1898              		.cfi_restore 8
 1899              		.cfi_restore 14
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1900              		.loc 1 797 0
 1901 01b6 0220     		movs	r0, #2
 1902              	.LVL193:
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 1903              		.loc 1 956 0
 1904 01b8 7047     		bx	lr
 1905              	.LVL194:
 1906              	.L148:
 1907              	.LCFI11:
 1908              		.cfi_def_cfa_offset 24
 1909              		.cfi_offset 4, -24
 1910              		.cfi_offset 5, -20
 1911              		.cfi_offset 6, -16
 1912              		.cfi_offset 7, -12
 1913              		.cfi_offset 8, -8
 1914              		.cfi_offset 14, -4
 1915              	.LBB200:
 1916              	.LBB199:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1917              		.loc 1 1525 0
 1918 01ba 0022     		movs	r2, #0
 1919              	.LVL195:
 1920 01bc C1E7     		b	.L133
 1921              	.LVL196:
 1922              	.L147:
 1923              	.LBE199:
 1924              	.LBE200:
 1925              	.LBB201:
 1926              	.LBB195:
 1927 01be 4FF00008 		mov	r8, #0
 1928 01c2 ADE7     		b	.L131
 1929              	.LBE195:
 1930              	.LBE201:
 1931              		.cfi_endproc
 1932              	.LFE146:
 1934              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1935              		.align	1
 1936              		.p2align 2,,3
 1937              		.global	HAL_RTC_SetAlarm_IT
 1938              		.syntax unified
ARM GAS  /tmp/cccH61QK.s 			page 69


 1939              		.thumb
 1940              		.thumb_func
 1941              		.fpu fpv4-sp-d16
 1943              	HAL_RTC_SetAlarm_IT:
 1944              	.LFB147:
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 1945              		.loc 1 973 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 8
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 1949              	.LVL197:
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1950              		.loc 1 975 0
 1951 0000 7F4B     		ldr	r3, .L203
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 1952              		.loc 1 973 0
 1953 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1954              	.LCFI12:
 1955              		.cfi_def_cfa_offset 24
 1956              		.cfi_offset 4, -24
 1957              		.cfi_offset 5, -20
 1958              		.cfi_offset 6, -16
 1959              		.cfi_offset 7, -12
 1960              		.cfi_offset 8, -8
 1961              		.cfi_offset 14, -4
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1962              		.loc 1 975 0
 1963 0006 1B68     		ldr	r3, [r3]
 1964 0008 4FF47A74 		mov	r4, #1000
 1965 000c 7D4D     		ldr	r5, .L203+4
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 1966              		.loc 1 973 0
 1967 000e 82B0     		sub	sp, sp, #8
 1968              	.LCFI13:
 1969              		.cfi_def_cfa_offset 32
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1970              		.loc 1 975 0
 1971 0010 A5FB0353 		umull	r5, r3, r5, r3
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1972              		.loc 1 986 0
 1973 0014 057F     		ldrb	r5, [r0, #28]	@ zero_extendqisi2
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1974              		.loc 1 975 0
 1975 0016 DB0A     		lsrs	r3, r3, #11
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1976              		.loc 1 986 0
 1977 0018 012D     		cmp	r5, #1
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1978              		.loc 1 975 0
 1979 001a 04FB03F3 		mul	r3, r4, r3
 1980 001e 0193     		str	r3, [sp, #4]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1981              		.loc 1 986 0
 1982 0020 00F0D880 		beq	.L184
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1983              		.loc 1 986 0 is_stmt 0 discriminator 2
 1984 0024 0125     		movs	r5, #1
ARM GAS  /tmp/cccH61QK.s 			page 70


 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1985              		.loc 1 988 0 is_stmt 1 discriminator 2
 1986 0026 0224     		movs	r4, #2
 1987 0028 0368     		ldr	r3, [r0]
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1988              		.loc 1 986 0 discriminator 2
 1989 002a 0577     		strb	r5, [r0, #28]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 1990              		.loc 1 988 0 discriminator 2
 1991 002c 4477     		strb	r4, [r0, #29]
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 1992              		.loc 1 990 0 discriminator 2
 1993 002e 002A     		cmp	r2, #0
 1994 0030 41D0     		beq	.L199
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 1995              		.loc 1 1023 0
 1996 0032 9C68     		ldr	r4, [r3, #8]
 1997 0034 14F0400C 		ands	ip, r4, #64
 1998 0038 00F0C780 		beq	.L176
 1999 003c 0C7B     		ldrb	r4, [r1, #12]	@ zero_extendqisi2
 2000 003e 4FEA044C 		lsl	ip, r4, #16
 2001              	.L177:
 2002              	.LVL198:
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 2003              		.loc 1 1048 0
 2004 0042 0A6A     		ldr	r2, [r1, #32]
 2005              	.LVL199:
 2006 0044 8C69     		ldr	r4, [r1, #24]
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 2007              		.loc 1 1050 0
 2008 0046 8E78     		ldrb	r6, [r1, #2]	@ zero_extendqisi2
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 2009              		.loc 1 1048 0
 2010 0048 1443     		orrs	r4, r4, r2
 2011 004a 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 2012              		.loc 1 1049 0
 2013 004c 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 2014              		.loc 1 1048 0
 2015 004e 3443     		orrs	r4, r4, r6
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2016              		.loc 1 1052 0
 2017 0050 91F824E0 		ldrb	lr, [r1, #36]	@ zero_extendqisi2
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 2018              		.loc 1 1048 0
 2019 0054 44EA0544 		orr	r4, r4, r5, lsl #16
 2020 0058 44EA0224 		orr	r4, r4, r2, lsl #8
 2021 005c 44EA0E64 		orr	r4, r4, lr, lsl #24
 2022 0060 44EA0C04 		orr	r4, r4, ip
 2023              	.LVL200:
 2024              	.L175:
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2025              		.loc 1 1063 0
 2026 0064 8A6A     		ldr	r2, [r1, #40]
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2027              		.loc 1 1060 0
ARM GAS  /tmp/cccH61QK.s 			page 71


 2028 0066 CA27     		movs	r7, #202
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2029              		.loc 1 1057 0
 2030 0068 D1F804C0 		ldr	ip, [r1, #4]
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2031              		.loc 1 1060 0
 2032 006c 5326     		movs	r6, #83
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2033              		.loc 1 1057 0
 2034 006e CD69     		ldr	r5, [r1, #28]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2035              		.loc 1 1063 0
 2036 0070 B2F5807F 		cmp	r2, #256
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2037              		.loc 1 1060 0
 2038 0074 5F62     		str	r7, [r3, #36]
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2039              		.loc 1 1057 0
 2040 0076 4CEA0505 		orr	r5, ip, r5
 2041              	.LVL201:
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2042              		.loc 1 1060 0
 2043 007a 5E62     		str	r6, [r3, #36]
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2044              		.loc 1 1066 0
 2045 007c 9A68     		ldr	r2, [r3, #8]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2046              		.loc 1 1063 0
 2047 007e 74D0     		beq	.L200
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2048              		.loc 1 1100 0
 2049 0080 22F40072 		bic	r2, r2, #512
 2050 0084 9A60     		str	r2, [r3, #8]
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2051              		.loc 1 1103 0
 2052 0086 DA68     		ldr	r2, [r3, #12]
 2053 0088 D2B2     		uxtb	r2, r2
 2054 008a 62F42072 		orn	r2, r2, #640
 2055 008e DA60     		str	r2, [r3, #12]
 2056 0090 02E0     		b	.L183
 2057              	.LVL202:
 2058              	.L182:
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2059              		.loc 1 1121 0
 2060 0092 DA68     		ldr	r2, [r3, #12]
 2061 0094 9207     		lsls	r2, r2, #30
 2062 0096 7AD4     		bmi	.L201
 2063              	.L183:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 2064              		.loc 1 1108 0
 2065 0098 019A     		ldr	r2, [sp, #4]
 2066 009a 511E     		subs	r1, r2, #1
 2067 009c 0191     		str	r1, [sp, #4]
 2068 009e 002A     		cmp	r2, #0
 2069 00a0 F7D1     		bne	.L182
 2070              	.L198:
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
ARM GAS  /tmp/cccH61QK.s 			page 72


 2071              		.loc 1 1113 0
 2072 00a2 0324     		movs	r4, #3
 2073              	.LVL203:
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2074              		.loc 1 1111 0
 2075 00a4 FF21     		movs	r1, #255
 2076 00a6 5962     		str	r1, [r3, #36]
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }
 2077              		.loc 1 1118 0
 2078 00a8 2146     		mov	r1, r4
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2079              		.loc 1 1116 0
 2080 00aa 0277     		strb	r2, [r0, #28]
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2081              		.loc 1 1113 0
 2082 00ac 4477     		strb	r4, [r0, #29]
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2083              		.loc 1 1146 0
 2084 00ae 0846     		mov	r0, r1
 2085              	.LVL204:
 2086 00b0 02B0     		add	sp, sp, #8
 2087              	.LCFI14:
 2088              		.cfi_remember_state
 2089              		.cfi_def_cfa_offset 24
 2090              		@ sp needed
 2091 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2092              	.LVL205:
 2093              	.L199:
 2094              	.LCFI15:
 2095              		.cfi_restore_state
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2096              		.loc 1 992 0
 2097 00b6 9F68     		ldr	r7, [r3, #8]
 2098 00b8 17F04007 		ands	r7, r7, #64
 2099 00bc 00F08880 		beq	.L165
 2100 00c0 0F7B     		ldrb	r7, [r1, #12]	@ zero_extendqisi2
 2101 00c2 3F04     		lsls	r7, r7, #16
 2102              	.L166:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 2103              		.loc 1 1013 0
 2104 00c4 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 2105              	.LVL206:
 2106              	.LBB202:
 2107              	.LBB203:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2108              		.loc 1 1523 0
 2109 00c6 0025     		movs	r5, #0
 2110              	.LBE203:
 2111              	.LBE202:
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2112              		.loc 1 1005 0
 2113 00c8 0E6A     		ldr	r6, [r1, #32]
 2114              	.LBB205:
 2115              	.LBB204:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2116              		.loc 1 1525 0
 2117 00ca 092C     		cmp	r4, #9
ARM GAS  /tmp/cccH61QK.s 			page 73


 2118 00cc 06D9     		bls	.L167
 2119              	.LVL207:
 2120              	.L168:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2121              		.loc 1 1528 0
 2122 00ce 0A3C     		subs	r4, r4, #10
 2123              	.LVL208:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 2124              		.loc 1 1527 0
 2125 00d0 0135     		adds	r5, r5, #1
 2126              	.LVL209:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2127              		.loc 1 1528 0
 2128 00d2 E4B2     		uxtb	r4, r4
 2129              	.LVL210:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2130              		.loc 1 1525 0
 2131 00d4 092C     		cmp	r4, #9
 2132 00d6 FAD8     		bhi	.L168
 2133 00d8 2D01     		lsls	r5, r5, #4
 2134              	.LVL211:
 2135 00da EDB2     		uxtb	r5, r5
 2136              	.L167:
 2137              	.LVL212:
 2138              	.LBE204:
 2139              	.LBE205:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 2140              		.loc 1 1013 0
 2141 00dc 2543     		orrs	r5, r5, r4
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 2142              		.loc 1 1014 0
 2143 00de 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 2144              	.LVL213:
 2145              	.LBB206:
 2146              	.LBB207:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2147              		.loc 1 1523 0
 2148 00e0 4FF0000C 		mov	ip, #0
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2149              		.loc 1 1525 0
 2150 00e4 092C     		cmp	r4, #9
 2151              	.LBE207:
 2152              	.LBE206:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 2153              		.loc 1 1013 0
 2154 00e6 4FEA0545 		lsl	r5, r5, #16
 2155              	.LBB209:
 2156              	.LBB208:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2157              		.loc 1 1525 0
 2158 00ea 09D9     		bls	.L169
 2159              	.LVL214:
 2160              	.L170:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2161              		.loc 1 1528 0
 2162 00ec 0A3C     		subs	r4, r4, #10
 2163              	.LVL215:
ARM GAS  /tmp/cccH61QK.s 			page 74


1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 2164              		.loc 1 1527 0
 2165 00ee 0CF1010C 		add	ip, ip, #1
 2166              	.LVL216:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2167              		.loc 1 1528 0
 2168 00f2 E4B2     		uxtb	r4, r4
 2169              	.LVL217:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2170              		.loc 1 1525 0
 2171 00f4 092C     		cmp	r4, #9
 2172 00f6 F9D8     		bhi	.L170
 2173 00f8 4FEA0C1C 		lsl	ip, ip, #4
 2174              	.LVL218:
 2175 00fc 5FFA8CFC 		uxtb	ip, ip
 2176              	.L169:
 2177              	.LVL219:
 2178              	.LBE208:
 2179              	.LBE209:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 2180              		.loc 1 1014 0
 2181 0100 44EA0C04 		orr	r4, r4, ip
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 2182              		.loc 1 1015 0
 2183 0104 91F802C0 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
 2184              	.LVL220:
 2185              	.LBB210:
 2186              	.LBB211:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2187              		.loc 1 1525 0
 2188 0108 BCF1090F 		cmp	ip, #9
 2189              	.LBE211:
 2190              	.LBE210:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 2191              		.loc 1 1014 0
 2192 010c 4FEA0424 		lsl	r4, r4, #8
 2193              	.LBB214:
 2194              	.LBB212:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2195              		.loc 1 1525 0
 2196 0110 72D9     		bls	.L187
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2197              		.loc 1 1523 0
 2198 0112 4FF0000E 		mov	lr, #0
 2199              	.LVL221:
 2200              	.L172:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2201              		.loc 1 1528 0
 2202 0116 ACF10A0C 		sub	ip, ip, #10
 2203              	.LVL222:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 2204              		.loc 1 1527 0
 2205 011a 0EF1010E 		add	lr, lr, #1
 2206              	.LVL223:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2207              		.loc 1 1528 0
 2208 011e 5FFA8CFC 		uxtb	ip, ip
ARM GAS  /tmp/cccH61QK.s 			page 75


 2209              	.LVL224:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2210              		.loc 1 1525 0
 2211 0122 BCF1090F 		cmp	ip, #9
 2212 0126 F6D8     		bhi	.L172
 2213 0128 4FEA0E1E 		lsl	lr, lr, #4
 2214              	.LVL225:
 2215 012c 5FFA8EF8 		uxtb	r8, lr
 2216              	.L171:
 2217              	.LVL226:
 2218              	.LBE212:
 2219              	.LBE214:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2220              		.loc 1 1017 0
 2221 0130 91F824E0 		ldrb	lr, [r1, #36]	@ zero_extendqisi2
 2222              	.LVL227:
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 2223              		.loc 1 1015 0
 2224 0134 4CEA080C 		orr	ip, ip, r8
 2225              	.LBB215:
 2226              	.LBB216:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2227              		.loc 1 1525 0
 2228 0138 BEF1090F 		cmp	lr, #9
 2229 013c 5AD9     		bls	.L188
 2230              	.LVL228:
 2231              	.L174:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2232              		.loc 1 1528 0
 2233 013e AEF10A0E 		sub	lr, lr, #10
 2234              	.LVL229:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 2235              		.loc 1 1527 0
 2236 0142 0132     		adds	r2, r2, #1
 2237              	.LVL230:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2238              		.loc 1 1528 0
 2239 0144 5FFA8EFE 		uxtb	lr, lr
 2240              	.LVL231:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2241              		.loc 1 1525 0
 2242 0148 BEF1090F 		cmp	lr, #9
 2243 014c F7D8     		bhi	.L174
 2244 014e 1201     		lsls	r2, r2, #4
 2245              	.LVL232:
 2246 0150 D2B2     		uxtb	r2, r2
 2247              	.L173:
 2248              	.LVL233:
 2249              	.LBE216:
 2250              	.LBE215:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 2251              		.loc 1 1017 0
 2252 0152 4EEA020E 		orr	lr, lr, r2
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 2253              		.loc 1 1013 0
 2254 0156 8A69     		ldr	r2, [r1, #24]
 2255 0158 1643     		orrs	r6, r6, r2
ARM GAS  /tmp/cccH61QK.s 			page 76


 2256 015a 3743     		orrs	r7, r7, r6
 2257 015c 3D43     		orrs	r5, r5, r7
 2258 015e 2C43     		orrs	r4, r4, r5
 2259 0160 44EA0C0C 		orr	ip, r4, ip
 2260 0164 4CEA0E64 		orr	r4, ip, lr, lsl #24
 2261              	.LVL234:
 2262 0168 7CE7     		b	.L175
 2263              	.LVL235:
 2264              	.L200:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2265              		.loc 1 1066 0
 2266 016a 22F48072 		bic	r2, r2, #256
 2267 016e 9A60     		str	r2, [r3, #8]
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2268              		.loc 1 1069 0
 2269 0170 DA68     		ldr	r2, [r3, #12]
 2270 0172 D2B2     		uxtb	r2, r2
 2271 0174 62F4C072 		orn	r2, r2, #384
 2272 0178 DA60     		str	r2, [r3, #12]
 2273 017a 02E0     		b	.L180
 2274              	.LVL236:
 2275              	.L179:
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2276              		.loc 1 1087 0
 2277 017c DA68     		ldr	r2, [r3, #12]
 2278 017e D107     		lsls	r1, r2, #31
 2279 0180 2DD4     		bmi	.L202
 2280              	.L180:
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 2281              		.loc 1 1074 0
 2282 0182 019A     		ldr	r2, [sp, #4]
 2283 0184 511E     		subs	r1, r2, #1
 2284 0186 0191     		str	r1, [sp, #4]
 2285 0188 002A     		cmp	r2, #0
 2286 018a F7D1     		bne	.L179
 2287 018c 89E7     		b	.L198
 2288              	.L201:
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 2289              		.loc 1 1123 0
 2290 018e 1C62     		str	r4, [r3, #32]
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2291              		.loc 1 1125 0
 2292 0190 9D64     		str	r5, [r3, #72]
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 2293              		.loc 1 1127 0
 2294 0192 9A68     		ldr	r2, [r3, #8]
 2295 0194 42F40072 		orr	r2, r2, #512
 2296 0198 9A60     		str	r2, [r3, #8]
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2297              		.loc 1 1129 0
 2298 019a 9A68     		ldr	r2, [r3, #8]
 2299 019c 42F40052 		orr	r2, r2, #8192
 2300 01a0 9A60     		str	r2, [r3, #8]
 2301              	.L181:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2302              		.loc 1 1133 0
 2303 01a2 194A     		ldr	r2, .L203+8
ARM GAS  /tmp/cccH61QK.s 			page 77


1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2304              		.loc 1 1143 0
 2305 01a4 0024     		movs	r4, #0
 2306              	.LVL237:
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2307              		.loc 1 1138 0
 2308 01a6 FF26     		movs	r6, #255
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2309              		.loc 1 1140 0
 2310 01a8 0125     		movs	r5, #1
 2311              	.LVL238:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2312              		.loc 1 1133 0
 2313 01aa 1168     		ldr	r1, [r2]
 2314 01ac 41F40031 		orr	r1, r1, #131072
 2315 01b0 1160     		str	r1, [r2]
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2316              		.loc 1 1135 0
 2317 01b2 9168     		ldr	r1, [r2, #8]
 2318 01b4 41F40031 		orr	r1, r1, #131072
 2319 01b8 9160     		str	r1, [r2, #8]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 2320              		.loc 1 1145 0
 2321 01ba 2146     		mov	r1, r4
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2322              		.loc 1 1138 0
 2323 01bc 5E62     		str	r6, [r3, #36]
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2324              		.loc 1 1140 0
 2325 01be 4577     		strb	r5, [r0, #29]
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2326              		.loc 1 1143 0
 2327 01c0 0477     		strb	r4, [r0, #28]
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2328              		.loc 1 1146 0
 2329 01c2 0846     		mov	r0, r1
 2330              	.LVL239:
 2331 01c4 02B0     		add	sp, sp, #8
 2332              	.LCFI16:
 2333              		.cfi_remember_state
 2334              		.cfi_def_cfa_offset 24
 2335              		@ sp needed
 2336 01c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2337              	.LVL240:
 2338              	.L176:
 2339              	.LCFI17:
 2340              		.cfi_restore_state
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 2341              		.loc 1 1031 0
 2342 01ca 81F80CC0 		strb	ip, [r1, #12]
 2343 01ce 38E7     		b	.L177
 2344              	.L165:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 2345              		.loc 1 999 0
 2346 01d0 0F73     		strb	r7, [r1, #12]
 2347 01d2 77E7     		b	.L166
 2348              	.L184:
ARM GAS  /tmp/cccH61QK.s 			page 78


 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2349              		.loc 1 986 0
 2350 01d4 0221     		movs	r1, #2
 2351              	.LVL241:
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2352              		.loc 1 1146 0
 2353 01d6 0846     		mov	r0, r1
 2354              	.LVL242:
 2355 01d8 02B0     		add	sp, sp, #8
 2356              	.LCFI18:
 2357              		.cfi_remember_state
 2358              		.cfi_def_cfa_offset 24
 2359              		@ sp needed
 2360 01da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2361              	.LVL243:
 2362              	.L202:
 2363              	.LCFI19:
 2364              		.cfi_restore_state
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 2365              		.loc 1 1089 0
 2366 01de DC61     		str	r4, [r3, #28]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2367              		.loc 1 1091 0
 2368 01e0 5D64     		str	r5, [r3, #68]
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 2369              		.loc 1 1093 0
 2370 01e2 9A68     		ldr	r2, [r3, #8]
 2371 01e4 42F48072 		orr	r2, r2, #256
 2372 01e8 9A60     		str	r2, [r3, #8]
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2373              		.loc 1 1095 0
 2374 01ea 9A68     		ldr	r2, [r3, #8]
 2375 01ec 42F48052 		orr	r2, r2, #4096
 2376 01f0 9A60     		str	r2, [r3, #8]
 2377 01f2 D6E7     		b	.L181
 2378              	.LVL244:
 2379              	.L188:
 2380              	.LBB218:
 2381              	.LBB217:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2382              		.loc 1 1525 0
 2383 01f4 0022     		movs	r2, #0
 2384              	.LVL245:
 2385 01f6 ACE7     		b	.L173
 2386              	.LVL246:
 2387              	.L187:
 2388              	.LBE217:
 2389              	.LBE218:
 2390              	.LBB219:
 2391              	.LBB213:
 2392 01f8 4FF00008 		mov	r8, #0
 2393 01fc 98E7     		b	.L171
 2394              	.L204:
 2395 01fe 00BF     		.align	2
 2396              	.L203:
 2397 0200 00000000 		.word	SystemCoreClock
 2398 0204 D34D6210 		.word	274877907
ARM GAS  /tmp/cccH61QK.s 			page 79


 2399 0208 003C0140 		.word	1073822720
 2400              	.LBE213:
 2401              	.LBE219:
 2402              		.cfi_endproc
 2403              	.LFE147:
 2405              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
 2406              		.align	1
 2407              		.p2align 2,,3
 2408              		.global	HAL_RTC_DeactivateAlarm
 2409              		.syntax unified
 2410              		.thumb
 2411              		.thumb_func
 2412              		.fpu fpv4-sp-d16
 2414              	HAL_RTC_DeactivateAlarm:
 2415              	.LFB148:
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2416              		.loc 1 1159 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 0
 2419              		@ frame_needed = 0, uses_anonymous_args = 0
 2420              	.LVL247:
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2421              		.loc 1 1166 0
 2422 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 2423 0002 012B     		cmp	r3, #1
 2424 0004 4ED0     		beq	.L213
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2425              		.loc 1 1166 0 is_stmt 0 discriminator 2
 2426 0006 0122     		movs	r2, #1
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2427              		.loc 1 1171 0 is_stmt 1 discriminator 2
 2428 0008 0368     		ldr	r3, [r0]
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2429              		.loc 1 1173 0 discriminator 2
 2430 000a B1F5807F 		cmp	r1, #256
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2431              		.loc 1 1159 0 discriminator 2
 2432 000e 70B5     		push	{r4, r5, r6, lr}
 2433              	.LCFI20:
 2434              		.cfi_def_cfa_offset 16
 2435              		.cfi_offset 4, -16
 2436              		.cfi_offset 5, -12
 2437              		.cfi_offset 6, -8
 2438              		.cfi_offset 14, -4
 2439 0010 0546     		mov	r5, r0
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2440              		.loc 1 1168 0 discriminator 2
 2441 0012 4FF00204 		mov	r4, #2
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2442              		.loc 1 1171 0 discriminator 2
 2443 0016 4FF0CA00 		mov	r0, #202
 2444              	.LVL248:
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2445              		.loc 1 1166 0 discriminator 2
 2446 001a 2A77     		strb	r2, [r5, #28]
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2447              		.loc 1 1171 0 discriminator 2
ARM GAS  /tmp/cccH61QK.s 			page 80


 2448 001c 4FF05302 		mov	r2, #83
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2449              		.loc 1 1168 0 discriminator 2
 2450 0020 6C77     		strb	r4, [r5, #29]
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2451              		.loc 1 1171 0 discriminator 2
 2452 0022 5862     		str	r0, [r3, #36]
 2453 0024 5A62     		str	r2, [r3, #36]
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2454              		.loc 1 1176 0 discriminator 2
 2455 0026 9A68     		ldr	r2, [r3, #8]
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2456              		.loc 1 1173 0 discriminator 2
 2457 0028 25D0     		beq	.L221
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2458              		.loc 1 1204 0
 2459 002a 22F40072 		bic	r2, r2, #512
 2460 002e 9A60     		str	r2, [r3, #8]
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2461              		.loc 1 1207 0
 2462 0030 9A68     		ldr	r2, [r3, #8]
 2463 0032 22F40052 		bic	r2, r2, #8192
 2464 0036 9A60     		str	r2, [r3, #8]
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2465              		.loc 1 1210 0
 2466 0038 FFF7FEFF 		bl	HAL_GetTick
 2467              	.LVL249:
 2468 003c 0646     		mov	r6, r0
 2469              	.LVL250:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2470              		.loc 1 1213 0
 2471 003e 05E0     		b	.L211
 2472              	.LVL251:
 2473              	.L212:
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 2474              		.loc 1 1215 0
 2475 0040 FFF7FEFF 		bl	HAL_GetTick
 2476              	.LVL252:
 2477 0044 801B     		subs	r0, r0, r6
 2478 0046 B0F57A7F 		cmp	r0, #1000
 2479 004a 0CD8     		bhi	.L220
 2480              	.L211:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2481              		.loc 1 1213 0
 2482 004c 2B68     		ldr	r3, [r5]
 2483 004e DC68     		ldr	r4, [r3, #12]
 2484 0050 14F00204 		ands	r4, r4, #2
 2485 0054 F4D0     		beq	.L212
 2486              	.L210:
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2487              		.loc 1 1235 0
 2488 0056 0022     		movs	r2, #0
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2489              		.loc 1 1230 0
 2490 0058 FF20     		movs	r0, #255
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2491              		.loc 1 1232 0
ARM GAS  /tmp/cccH61QK.s 			page 81


 2492 005a 0121     		movs	r1, #1
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2493              		.loc 1 1230 0
 2494 005c 5862     		str	r0, [r3, #36]
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 2495              		.loc 1 1237 0
 2496 005e 1046     		mov	r0, r2
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2497              		.loc 1 1232 0
 2498 0060 6977     		strb	r1, [r5, #29]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2499              		.loc 1 1235 0
 2500 0062 2A77     		strb	r2, [r5, #28]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****            
 2501              		.loc 1 1238 0
 2502 0064 70BD     		pop	{r4, r5, r6, pc}
 2503              	.LVL253:
 2504              	.L220:
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 2505              		.loc 1 1220 0
 2506 0066 0323     		movs	r3, #3
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 2507              		.loc 1 1218 0
 2508 0068 2A68     		ldr	r2, [r5]
 2509 006a FF21     		movs	r1, #255
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       }    
 2510              		.loc 1 1225 0
 2511 006c 1846     		mov	r0, r3
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 2512              		.loc 1 1218 0
 2513 006e 5162     		str	r1, [r2, #36]
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 2514              		.loc 1 1223 0
 2515 0070 2C77     		strb	r4, [r5, #28]
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         
 2516              		.loc 1 1220 0
 2517 0072 6B77     		strb	r3, [r5, #29]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****            
 2518              		.loc 1 1238 0
 2519 0074 70BD     		pop	{r4, r5, r6, pc}
 2520              	.LVL254:
 2521              	.L221:
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2522              		.loc 1 1176 0
 2523 0076 22F48072 		bic	r2, r2, #256
 2524 007a 9A60     		str	r2, [r3, #8]
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2525              		.loc 1 1179 0
 2526 007c 9A68     		ldr	r2, [r3, #8]
 2527 007e 22F48052 		bic	r2, r2, #4096
 2528 0082 9A60     		str	r2, [r3, #8]
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2529              		.loc 1 1182 0
 2530 0084 FFF7FEFF 		bl	HAL_GetTick
 2531              	.LVL255:
 2532 0088 0646     		mov	r6, r0
 2533              	.LVL256:
ARM GAS  /tmp/cccH61QK.s 			page 82


1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2534              		.loc 1 1185 0
 2535 008a 05E0     		b	.L208
 2536              	.LVL257:
 2537              	.L209:
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       { 
 2538              		.loc 1 1187 0
 2539 008c FFF7FEFF 		bl	HAL_GetTick
 2540              	.LVL258:
 2541 0090 801B     		subs	r0, r0, r6
 2542 0092 B0F57A7F 		cmp	r0, #1000
 2543 0096 E6D8     		bhi	.L220
 2544              	.L208:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2545              		.loc 1 1185 0
 2546 0098 2B68     		ldr	r3, [r5]
 2547 009a DC68     		ldr	r4, [r3, #12]
 2548 009c 14F00104 		ands	r4, r4, #1
 2549 00a0 F4D0     		beq	.L209
 2550 00a2 D8E7     		b	.L210
 2551              	.LVL259:
 2552              	.L213:
 2553              	.LCFI21:
 2554              		.cfi_def_cfa_offset 0
 2555              		.cfi_restore 4
 2556              		.cfi_restore 5
 2557              		.cfi_restore 6
 2558              		.cfi_restore 14
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2559              		.loc 1 1166 0
 2560 00a4 0220     		movs	r0, #2
 2561              	.LVL260:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****            
 2562              		.loc 1 1238 0
 2563 00a6 7047     		bx	lr
 2564              		.cfi_endproc
 2565              	.LFE148:
 2567              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2568              		.align	1
 2569              		.p2align 2,,3
 2570              		.global	HAL_RTC_GetAlarm
 2571              		.syntax unified
 2572              		.thumb
 2573              		.thumb_func
 2574              		.fpu fpv4-sp-d16
 2576              	HAL_RTC_GetAlarm:
 2577              	.LFB149:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0, subsecondtmpreg = 0;
 2578              		.loc 1 1256 0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 2582              	.LVL261:
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2583              		.loc 1 1263 0
 2584 0000 B2F5807F 		cmp	r2, #256
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmpreg = 0, subsecondtmpreg = 0;
ARM GAS  /tmp/cccH61QK.s 			page 83


 2585              		.loc 1 1256 0
 2586 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2587              	.LCFI22:
 2588              		.cfi_def_cfa_offset 36
 2589              		.cfi_offset 4, -36
 2590              		.cfi_offset 5, -32
 2591              		.cfi_offset 6, -28
 2592              		.cfi_offset 7, -24
 2593              		.cfi_offset 8, -20
 2594              		.cfi_offset 9, -16
 2595              		.cfi_offset 10, -12
 2596              		.cfi_offset 11, -8
 2597              		.cfi_offset 14, -4
 2598 0008 0468     		ldr	r4, [r0]
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2599              		.loc 1 1263 0
 2600 000a 4FD0     		beq	.L227
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2601              		.loc 1 1275 0
 2602 000c 206A     		ldr	r0, [r4, #32]
 2603              	.LVL262:
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2604              		.loc 1 1273 0
 2605 000e 4FF40072 		mov	r2, #512
 2606              	.LVL263:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2607              		.loc 1 1276 0
 2608 0012 A46C     		ldr	r4, [r4, #72]
 2609 0014 C4F30E0A 		ubfx	r10, r4, #0, #15
 2610              	.LVL264:
 2611              	.L224:
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8);
 2612              		.loc 1 1280 0
 2613 0018 C0F30744 		ubfx	r4, r0, #16, #8
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2614              		.loc 1 1281 0
 2615 001c C0F3072E 		ubfx	lr, r0, #8, #8
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 2616              		.loc 1 1282 0
 2617 0020 5FFA80FC 		uxtb	ip, r0
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2618              		.loc 1 1286 0
 2619 0024 00F08048 		and	r8, r0, #1073741824
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2620              		.loc 1 1285 0
 2621 0028 070E     		lsrs	r7, r0, #24
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8);
 2622              		.loc 1 1280 0
 2623 002a 04F03F06 		and	r6, r4, #63
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2624              		.loc 1 1283 0
 2625 002e 04F04009 		and	r9, r4, #64
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2626              		.loc 1 1287 0
 2627 0032 00F08030 		and	r0, r0, #-2139062144
 2628              	.LVL265:
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
ARM GAS  /tmp/cccH61QK.s 			page 84


 2629              		.loc 1 1281 0
 2630 0036 0EF07F05 		and	r5, lr, #127
 2631 003a 8A62     		str	r2, [r1, #40]
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 2632              		.loc 1 1282 0
 2633 003c 0CF07F0B 		and	fp, ip, #127
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2634              		.loc 1 1285 0
 2635 0040 07F03F02 		and	r2, r7, #63
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24);
 2636              		.loc 1 1284 0
 2637 0044 C1F804A0 		str	r10, [r1, #4]
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8);
 2638              		.loc 1 1280 0
 2639 0048 0E70     		strb	r6, [r1]
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2640              		.loc 1 1283 0
 2641 004a 81F80C90 		strb	r9, [r1, #12]
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2642              		.loc 1 1281 0
 2643 004e 4D70     		strb	r5, [r1, #1]
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 2644              		.loc 1 1282 0
 2645 0050 81F802B0 		strb	fp, [r1, #2]
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2646              		.loc 1 1285 0
 2647 0054 81F82420 		strb	r2, [r1, #36]
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2648              		.loc 1 1286 0
 2649 0058 C1F82080 		str	r8, [r1, #32]
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     
 2650              		.loc 1 1287 0
 2651 005c 8861     		str	r0, [r1, #24]
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2652              		.loc 1 1289 0
 2653 005e 13BB     		cbnz	r3, .L225
 2654              	.LVL266:
 2655              	.LBB220:
 2656              	.LBB221:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 2657              		.loc 1 1542 0
 2658 0060 3609     		lsrs	r6, r6, #4
 2659              	.LVL267:
 2660              		.loc 1 1543 0
 2661 0062 04F00F04 		and	r4, r4, #15
 2662              	.LBE221:
 2663              	.LBE220:
 2664              	.LBB224:
 2665              	.LBB225:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 2666              		.loc 1 1542 0
 2667 0066 2D09     		lsrs	r5, r5, #4
 2668              		.loc 1 1543 0
 2669 0068 0EF00F0E 		and	lr, lr, #15
 2670              	.LBE225:
 2671              	.LBE224:
 2672              	.LBB228:
ARM GAS  /tmp/cccH61QK.s 			page 85


 2673              	.LBB229:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 2674              		.loc 1 1542 0
 2675 006c 4FEA1B1B 		lsr	fp, fp, #4
 2676              		.loc 1 1543 0
 2677 0070 0CF00F0C 		and	ip, ip, #15
 2678              	.LBE229:
 2679              	.LBE228:
 2680              	.LBB232:
 2681              	.LBB233:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 2682              		.loc 1 1542 0
 2683 0074 1209     		lsrs	r2, r2, #4
 2684              		.loc 1 1543 0
 2685 0076 07F00F07 		and	r7, r7, #15
 2686              	.LBE233:
 2687              	.LBE232:
 2688              	.LBB236:
 2689              	.LBB222:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 2690              		.loc 1 1542 0
 2691 007a 06EB8606 		add	r6, r6, r6, lsl #2
 2692              	.LBE222:
 2693              	.LBE236:
 2694              	.LBB237:
 2695              	.LBB226:
 2696 007e 05EB8505 		add	r5, r5, r5, lsl #2
 2697              	.LBE226:
 2698              	.LBE237:
 2699              	.LBB238:
 2700              	.LBB230:
 2701 0082 0BEB8B0B 		add	fp, fp, fp, lsl #2
 2702              	.LBE230:
 2703              	.LBE238:
 2704              	.LBB239:
 2705              	.LBB234:
 2706 0086 02EB8202 		add	r2, r2, r2, lsl #2
 2707              	.LBE234:
 2708              	.LBE239:
 2709              	.LBB240:
 2710              	.LBB223:
 2711              		.loc 1 1543 0
 2712 008a 04EB4604 		add	r4, r4, r6, lsl #1
 2713              	.LBE223:
 2714              	.LBE240:
 2715              	.LBB241:
 2716              	.LBB227:
 2717 008e 0EEB4505 		add	r5, lr, r5, lsl #1
 2718              	.LBE227:
 2719              	.LBE241:
 2720              	.LBB242:
 2721              	.LBB231:
 2722 0092 0CEB4B0B 		add	fp, ip, fp, lsl #1
 2723              	.LBE231:
 2724              	.LBE242:
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2725              		.loc 1 1291 0
ARM GAS  /tmp/cccH61QK.s 			page 86


 2726 0096 0C70     		strb	r4, [r1]
 2727              	.LVL268:
 2728              	.LBB243:
 2729              	.LBB235:
 2730              		.loc 1 1543 0
 2731 0098 07EB4202 		add	r2, r7, r2, lsl #1
 2732              	.LBE235:
 2733              	.LBE243:
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2734              		.loc 1 1292 0
 2735 009c 4D70     		strb	r5, [r1, #1]
 2736              	.LVL269:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2737              		.loc 1 1293 0
 2738 009e 81F802B0 		strb	fp, [r1, #2]
 2739              	.LVL270:
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }  
 2740              		.loc 1 1294 0
 2741 00a2 81F82420 		strb	r2, [r1, #36]
 2742              	.L225:
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2743              		.loc 1 1298 0
 2744 00a6 0020     		movs	r0, #0
 2745 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2746              	.LVL271:
 2747              	.L227:
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
 2748              		.loc 1 1268 0
 2749 00ac E069     		ldr	r0, [r4, #28]
 2750              	.LVL272:
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 2751              		.loc 1 1269 0
 2752 00ae 646C     		ldr	r4, [r4, #68]
 2753 00b0 C4F30E0A 		ubfx	r10, r4, #0, #15
 2754              	.LVL273:
 2755 00b4 B0E7     		b	.L224
 2756              		.cfi_endproc
 2757              	.LFE149:
 2759 00b6 00BF     		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.weak	HAL_RTC_AlarmAEventCallback
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv4-sp-d16
 2768              	HAL_RTC_AlarmAEventCallback:
 2769              	.LFB161:
 2770              		.cfi_startproc
 2771              		@ args = 0, pretend = 0, frame = 0
 2772              		@ frame_needed = 0, uses_anonymous_args = 0
 2773              		@ link register save eliminated.
 2774 0000 7047     		bx	lr
 2775              		.cfi_endproc
 2776              	.LFE161:
 2778 0002 00BF     		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 2779              		.align	1
ARM GAS  /tmp/cccH61QK.s 			page 87


 2780              		.p2align 2,,3
 2781              		.global	HAL_RTC_AlarmIRQHandler
 2782              		.syntax unified
 2783              		.thumb
 2784              		.thumb_func
 2785              		.fpu fpv4-sp-d16
 2787              	HAL_RTC_AlarmIRQHandler:
 2788              	.LFB150:
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT(hrtc, RTC_IT_ALRA))
 2789              		.loc 1 1307 0
 2790              		.cfi_startproc
 2791              		@ args = 0, pretend = 0, frame = 0
 2792              		@ frame_needed = 0, uses_anonymous_args = 0
 2793              	.LVL274:
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2794              		.loc 1 1308 0
 2795 0000 0368     		ldr	r3, [r0]
 2796 0002 DA68     		ldr	r2, [r3, #12]
 2797 0004 D205     		lsls	r2, r2, #23
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT(hrtc, RTC_IT_ALRA))
 2798              		.loc 1 1307 0
 2799 0006 10B5     		push	{r4, lr}
 2800              	.LCFI23:
 2801              		.cfi_def_cfa_offset 8
 2802              		.cfi_offset 4, -8
 2803              		.cfi_offset 14, -4
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT(hrtc, RTC_IT_ALRA))
 2804              		.loc 1 1307 0
 2805 0008 0446     		mov	r4, r0
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2806              		.loc 1 1308 0
 2807 000a 02D5     		bpl	.L230
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2808              		.loc 1 1311 0
 2809 000c 9A68     		ldr	r2, [r3, #8]
 2810 000e D104     		lsls	r1, r2, #19
 2811 0010 16D4     		bmi	.L245
 2812              	.LVL275:
 2813              	.L230:
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2814              		.loc 1 1321 0
 2815 0012 DA68     		ldr	r2, [r3, #12]
 2816 0014 9205     		lsls	r2, r2, #22
 2817 0016 02D5     		bpl	.L231
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 2818              		.loc 1 1324 0
 2819 0018 9B68     		ldr	r3, [r3, #8]
 2820 001a 9B04     		lsls	r3, r3, #18
 2821 001c 06D4     		bmi	.L246
 2822              	.L231:
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2823              		.loc 1 1335 0
 2824 001e 0D4A     		ldr	r2, .L247
 2825 0020 4FF40031 		mov	r1, #131072
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 2826              		.loc 1 1338 0
 2827 0024 0123     		movs	r3, #1
ARM GAS  /tmp/cccH61QK.s 			page 88


1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2828              		.loc 1 1335 0
 2829 0026 5161     		str	r1, [r2, #20]
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 2830              		.loc 1 1338 0
 2831 0028 6377     		strb	r3, [r4, #29]
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2832              		.loc 1 1339 0
 2833 002a 10BD     		pop	{r4, pc}
 2834              	.LVL276:
 2835              	.L246:
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       
 2836              		.loc 1 1327 0
 2837 002c 2046     		mov	r0, r4
 2838 002e FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 2839              	.LVL277:
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 2840              		.loc 1 1330 0
 2841 0032 2268     		ldr	r2, [r4]
 2842 0034 D368     		ldr	r3, [r2, #12]
 2843 0036 DBB2     		uxtb	r3, r3
 2844 0038 63F42073 		orn	r3, r3, #640
 2845 003c D360     		str	r3, [r2, #12]
 2846 003e EEE7     		b	.L231
 2847              	.LVL278:
 2848              	.L245:
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       
 2849              		.loc 1 1314 0
 2850 0040 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 2851              	.LVL279:
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     }
 2852              		.loc 1 1317 0
 2853 0044 2368     		ldr	r3, [r4]
 2854 0046 DA68     		ldr	r2, [r3, #12]
 2855 0048 D2B2     		uxtb	r2, r2
 2856 004a 62F4C072 		orn	r2, r2, #384
 2857 004e DA60     		str	r2, [r3, #12]
 2858 0050 DFE7     		b	.L230
 2859              	.L248:
 2860 0052 00BF     		.align	2
 2861              	.L247:
 2862 0054 003C0140 		.word	1073822720
 2863              		.cfi_endproc
 2864              	.LFE150:
 2866              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 2867              		.align	1
 2868              		.p2align 2,,3
 2869              		.global	HAL_RTC_PollForAlarmAEvent
 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2873              		.fpu fpv4-sp-d16
 2875              	HAL_RTC_PollForAlarmAEvent:
 2876              	.LFB152:
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0; 
 2877              		.loc 1 1365 0
 2878              		.cfi_startproc
ARM GAS  /tmp/cccH61QK.s 			page 89


 2879              		@ args = 0, pretend = 0, frame = 0
 2880              		@ frame_needed = 0, uses_anonymous_args = 0
 2881              	.LVL280:
 2882 0000 70B5     		push	{r4, r5, r6, lr}
 2883              	.LCFI24:
 2884              		.cfi_def_cfa_offset 16
 2885              		.cfi_offset 4, -16
 2886              		.cfi_offset 5, -12
 2887              		.cfi_offset 6, -8
 2888              		.cfi_offset 14, -4
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0; 
 2889              		.loc 1 1365 0
 2890 0002 0546     		mov	r5, r0
 2891 0004 0C46     		mov	r4, r1
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2892              		.loc 1 1369 0
 2893 0006 FFF7FEFF 		bl	HAL_GetTick
 2894              	.LVL281:
 2895 000a 0646     		mov	r6, r0
 2896              	.LVL282:
 2897              	.L250:
 2898 000c 601C     		adds	r0, r4, #1
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2899              		.loc 1 1371 0
 2900 000e 2A68     		ldr	r2, [r5]
 2901 0010 0BD1     		bne	.L254
 2902              	.L255:
 2903 0012 D368     		ldr	r3, [r2, #12]
 2904 0014 D905     		lsls	r1, r3, #23
 2905 0016 FCD5     		bpl	.L255
 2906              	.L256:
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2907              		.loc 1 1384 0
 2908 0018 D368     		ldr	r3, [r2, #12]
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2909              		.loc 1 1387 0
 2910 001a 0121     		movs	r1, #1
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 2911              		.loc 1 1389 0
 2912 001c 0020     		movs	r0, #0
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2913              		.loc 1 1384 0
 2914 001e DBB2     		uxtb	r3, r3
 2915 0020 63F4C073 		orn	r3, r3, #384
 2916 0024 D360     		str	r3, [r2, #12]
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 2917              		.loc 1 1387 0
 2918 0026 6977     		strb	r1, [r5, #29]
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2919              		.loc 1 1390 0
 2920 0028 70BD     		pop	{r4, r5, r6, pc}
 2921              	.LVL283:
 2922              	.L254:
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2923              		.loc 1 1371 0
 2924 002a D368     		ldr	r3, [r2, #12]
 2925 002c DB05     		lsls	r3, r3, #23
ARM GAS  /tmp/cccH61QK.s 			page 90


 2926 002e F3D4     		bmi	.L256
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 2927              		.loc 1 1375 0
 2928 0030 24B1     		cbz	r4, .L253
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {
 2929              		.loc 1 1375 0 is_stmt 0 discriminator 1
 2930 0032 FFF7FEFF 		bl	HAL_GetTick
 2931              	.LVL284:
 2932 0036 801B     		subs	r0, r0, r6
 2933 0038 A042     		cmp	r0, r4
 2934 003a E7D9     		bls	.L250
 2935              	.L253:
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2936              		.loc 1 1377 0 is_stmt 1
 2937 003c 0320     		movs	r0, #3
 2938 003e 6877     		strb	r0, [r5, #29]
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2939              		.loc 1 1390 0
 2940 0040 70BD     		pop	{r4, r5, r6, pc}
 2941              		.cfi_endproc
 2942              	.LFE152:
 2944 0042 00BF     		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 2945              		.align	1
 2946              		.p2align 2,,3
 2947              		.global	HAL_RTC_WaitForSynchro
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2951              		.fpu fpv4-sp-d16
 2953              	HAL_RTC_WaitForSynchro:
 2954              	.LFB153:
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2955              		.loc 1 1427 0
 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 0
 2958              		@ frame_needed = 0, uses_anonymous_args = 0
 2959              	.LVL285:
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2960              		.loc 1 1431 0
 2961 0000 0268     		ldr	r2, [r0]
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2962              		.loc 1 1427 0
 2963 0002 38B5     		push	{r3, r4, r5, lr}
 2964              	.LCFI25:
 2965              		.cfi_def_cfa_offset 16
 2966              		.cfi_offset 3, -16
 2967              		.cfi_offset 4, -12
 2968              		.cfi_offset 5, -8
 2969              		.cfi_offset 14, -4
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2970              		.loc 1 1431 0
 2971 0004 D368     		ldr	r3, [r2, #12]
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0;
 2972              		.loc 1 1427 0
 2973 0006 0446     		mov	r4, r0
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2974              		.loc 1 1431 0
ARM GAS  /tmp/cccH61QK.s 			page 91


 2975 0008 23F0A003 		bic	r3, r3, #160
 2976 000c D360     		str	r3, [r2, #12]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 2977              		.loc 1 1434 0
 2978 000e FFF7FEFF 		bl	HAL_GetTick
 2979              	.LVL286:
 2980 0012 0546     		mov	r5, r0
 2981              	.LVL287:
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2982              		.loc 1 1437 0
 2983 0014 05E0     		b	.L262
 2984              	.LVL288:
 2985              	.L264:
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {       
 2986              		.loc 1 1439 0
 2987 0016 FFF7FEFF 		bl	HAL_GetTick
 2988              	.LVL289:
 2989 001a 401B     		subs	r0, r0, r5
 2990 001c B0F57A7F 		cmp	r0, #1000
 2991 0020 05D8     		bhi	.L265
 2992              	.L262:
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 2993              		.loc 1 1437 0
 2994 0022 2368     		ldr	r3, [r4]
 2995 0024 DB68     		ldr	r3, [r3, #12]
 2996 0026 9B06     		lsls	r3, r3, #26
 2997 0028 F5D5     		bpl	.L264
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 2998              		.loc 1 1445 0
 2999 002a 0020     		movs	r0, #0
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3000              		.loc 1 1446 0
 3001 002c 38BD     		pop	{r3, r4, r5, pc}
 3002              	.LVL290:
 3003              	.L265:
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     } 
 3004              		.loc 1 1441 0
 3005 002e 0320     		movs	r0, #3
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3006              		.loc 1 1446 0
 3007 0030 38BD     		pop	{r3, r4, r5, pc}
 3008              		.cfi_endproc
 3009              	.LFE153:
 3011 0032 00BF     		.section	.text.HAL_RTC_GetState,"ax",%progbits
 3012              		.align	1
 3013              		.p2align 2,,3
 3014              		.global	HAL_RTC_GetState
 3015              		.syntax unified
 3016              		.thumb
 3017              		.thumb_func
 3018              		.fpu fpv4-sp-d16
 3020              	HAL_RTC_GetState:
 3021              	.LFB154:
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return hrtc->State;
 3022              		.loc 1 1473 0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cccH61QK.s 			page 92


 3025              		@ frame_needed = 0, uses_anonymous_args = 0
 3026              		@ link register save eliminated.
 3027              	.LVL291:
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 3028              		.loc 1 1474 0
 3029 0000 407F     		ldrb	r0, [r0, #29]	@ zero_extendqisi2
 3030              	.LVL292:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3031              		.loc 1 1475 0
 3032 0002 7047     		bx	lr
 3033              		.cfi_endproc
 3034              	.LFE154:
 3036              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 3037              		.align	1
 3038              		.p2align 2,,3
 3039              		.global	RTC_EnterInitMode
 3040              		.syntax unified
 3041              		.thumb
 3042              		.thumb_func
 3043              		.fpu fpv4-sp-d16
 3045              	RTC_EnterInitMode:
 3046              	.LFB155:
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tickstart = 0; 
 3047              		.loc 1 1490 0
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 0
 3050              		@ frame_needed = 0, uses_anonymous_args = 0
 3051              	.LVL293:
 3052 0000 38B5     		push	{r3, r4, r5, lr}
 3053              	.LCFI26:
 3054              		.cfi_def_cfa_offset 16
 3055              		.cfi_offset 3, -16
 3056              		.cfi_offset 4, -12
 3057              		.cfi_offset 5, -8
 3058              		.cfi_offset 14, -4
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 3059              		.loc 1 1494 0
 3060 0002 0368     		ldr	r3, [r0]
 3061 0004 DA68     		ldr	r2, [r3, #12]
 3062 0006 5206     		lsls	r2, r2, #25
 3063 0008 01D5     		bpl	.L269
 3064              	.LVL294:
 3065              	.L273:
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 3066              		.loc 1 1512 0
 3067 000a 0020     		movs	r0, #0
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3068              		.loc 1 1513 0
 3069 000c 38BD     		pop	{r3, r4, r5, pc}
 3070              	.LVL295:
 3071              	.L269:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3072              		.loc 1 1497 0
 3073 000e 4FF0FF32 		mov	r2, #-1
 3074 0012 0446     		mov	r4, r0
 3075 0014 DA60     		str	r2, [r3, #12]
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
ARM GAS  /tmp/cccH61QK.s 			page 93


 3076              		.loc 1 1500 0
 3077 0016 FFF7FEFF 		bl	HAL_GetTick
 3078              	.LVL296:
 3079 001a 0546     		mov	r5, r0
 3080              	.LVL297:
 3081              	.L271:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     {
 3082              		.loc 1 1503 0
 3083 001c 2368     		ldr	r3, [r4]
 3084 001e DB68     		ldr	r3, [r3, #12]
 3085 0020 5B06     		lsls	r3, r3, #25
 3086 0022 F2D4     		bmi	.L273
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       {       
 3087              		.loc 1 1505 0
 3088 0024 FFF7FEFF 		bl	HAL_GetTick
 3089              	.LVL298:
 3090 0028 401B     		subs	r0, r0, r5
 3091 002a B0F57A7F 		cmp	r0, #1000
 3092 002e F5D9     		bls	.L271
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****       } 
 3093              		.loc 1 1507 0
 3094 0030 0320     		movs	r0, #3
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3095              		.loc 1 1513 0
 3096 0032 38BD     		pop	{r3, r4, r5, pc}
 3097              		.cfi_endproc
 3098              	.LFE155:
 3100              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 3101              		.align	1
 3102              		.p2align 2,,3
 3103              		.global	RTC_ByteToBcd2
 3104              		.syntax unified
 3105              		.thumb
 3106              		.thumb_func
 3107              		.fpu fpv4-sp-d16
 3109              	RTC_ByteToBcd2:
 3110              	.LFB156:
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t bcdhigh = 0;
 3111              		.loc 1 1522 0
 3112              		.cfi_startproc
 3113              		@ args = 0, pretend = 0, frame = 0
 3114              		@ frame_needed = 0, uses_anonymous_args = 0
 3115              		@ link register save eliminated.
 3116              	.LVL299:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 3117              		.loc 1 1525 0
 3118 0000 0928     		cmp	r0, #9
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   
 3119              		.loc 1 1523 0
 3120 0002 4FF00003 		mov	r3, #0
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 3121              		.loc 1 1525 0
 3122 0006 06D9     		bls	.L277
 3123              	.LVL300:
 3124              	.L278:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 3125              		.loc 1 1528 0
ARM GAS  /tmp/cccH61QK.s 			page 94


 3126 0008 0A38     		subs	r0, r0, #10
 3127              	.LVL301:
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****     Value -= 10;
 3128              		.loc 1 1527 0
 3129 000a 0133     		adds	r3, r3, #1
 3130              	.LVL302:
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   }
 3131              		.loc 1 1528 0
 3132 000c C0B2     		uxtb	r0, r0
 3133              	.LVL303:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   {
 3134              		.loc 1 1525 0
 3135 000e 0928     		cmp	r0, #9
 3136 0010 FAD8     		bhi	.L278
 3137 0012 1B01     		lsls	r3, r3, #4
 3138              	.LVL304:
 3139 0014 DBB2     		uxtb	r3, r3
 3140              	.L277:
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** 
 3141              		.loc 1 1532 0
 3142 0016 1843     		orrs	r0, r0, r3
 3143              	.LVL305:
 3144 0018 7047     		bx	lr
 3145              		.cfi_endproc
 3146              	.LFE156:
 3148              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 3149              		.align	1
 3150              		.p2align 2,,3
 3151              		.global	RTC_Bcd2ToByte
 3152              		.syntax unified
 3153              		.thumb
 3154              		.thumb_func
 3155              		.fpu fpv4-sp-d16
 3157              	RTC_Bcd2ToByte:
 3158              	.LFB157:
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   uint32_t tmp = 0;
 3159              		.loc 1 1540 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 0
 3162              		@ frame_needed = 0, uses_anonymous_args = 0
 3163              		@ link register save eliminated.
 3164              	.LVL306:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 3165              		.loc 1 1542 0
 3166 0000 0309     		lsrs	r3, r0, #4
 3167              		.loc 1 1543 0
 3168 0002 00F00F00 		and	r0, r0, #15
 3169              	.LVL307:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 3170              		.loc 1 1542 0
 3171 0006 03EB8303 		add	r3, r3, r3, lsl #2
 3172              		.loc 1 1543 0
 3173 000a 00EB4300 		add	r0, r0, r3, lsl #1
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c **** }
 3174              		.loc 1 1544 0
 3175 000e C0B2     		uxtb	r0, r0
 3176 0010 7047     		bx	lr
ARM GAS  /tmp/cccH61QK.s 			page 95


 3177              		.cfi_endproc
 3178              	.LFE157:
 3180              		.comm	UpdateFile,4,4
 3181              		.comm	SpiRxData,4,4
 3182              		.comm	SpiTxData,4,4
 3183 0012 00BF     		.text
 3184              	.Letext0:
 3185              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3186              		.file 3 "/usr/include/newlib/sys/lock.h"
 3187              		.file 4 "/usr/include/newlib/sys/_types.h"
 3188              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 3189              		.file 6 "/usr/include/newlib/sys/reent.h"
 3190              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 3191              		.file 8 "Inc/main.h"
 3192              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 3193              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 3194              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3195              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3196              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3197              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3198              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3199              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
ARM GAS  /tmp/cccH61QK.s 			page 96


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_rtc.c
     /tmp/cccH61QK.s:18     .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/cccH61QK.s:26     .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/cccH61QK.s:41     .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/cccH61QK.s:49     .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/cccH61QK.s:228    .text.HAL_RTC_Init:00000000000000b0 $d
     /tmp/cccH61QK.s:233    .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/cccH61QK.s:241    .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/cccH61QK.s:252    .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/cccH61QK.s:260    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
     /tmp/cccH61QK.s:484    .text.HAL_RTC_DeInit:00000000000000e8 $d
     /tmp/cccH61QK.s:489    .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/cccH61QK.s:497    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/cccH61QK.s:862    .text.HAL_RTC_SetTime:0000000000000164 $d
     /tmp/cccH61QK.s:869    .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/cccH61QK.s:877    .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/cccH61QK.s:1024   .text.HAL_RTC_GetTime:0000000000000068 $d
     /tmp/cccH61QK.s:1029   .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/cccH61QK.s:1037   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/cccH61QK.s:1354   .text.HAL_RTC_SetDate:0000000000000130 $d
     /tmp/cccH61QK.s:1361   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/cccH61QK.s:1369   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/cccH61QK.s:1506   .text.HAL_RTC_GetDate:000000000000005c $d
     /tmp/cccH61QK.s:1511   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/cccH61QK.s:1519   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/cccH61QK.s:1935   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/cccH61QK.s:1943   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/cccH61QK.s:2397   .text.HAL_RTC_SetAlarm_IT:0000000000000200 $d
     /tmp/cccH61QK.s:2406   .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/cccH61QK.s:2414   .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/cccH61QK.s:2568   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/cccH61QK.s:2576   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
     /tmp/cccH61QK.s:2760   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/cccH61QK.s:2768   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/cccH61QK.s:2779   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/cccH61QK.s:2787   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/cccH61QK.s:2862   .text.HAL_RTC_AlarmIRQHandler:0000000000000054 $d
     /tmp/cccH61QK.s:2867   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
     /tmp/cccH61QK.s:2875   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/cccH61QK.s:2945   .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/cccH61QK.s:2953   .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/cccH61QK.s:3012   .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/cccH61QK.s:3020   .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/cccH61QK.s:3037   .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/cccH61QK.s:3045   .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/cccH61QK.s:3101   .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/cccH61QK.s:3109   .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/cccH61QK.s:3149   .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/cccH61QK.s:3157   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
                            *COM*:0000000000000004 UpdateFile
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 SpiTxData

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
ARM GAS  /tmp/cccH61QK.s 			page 97


HAL_RTCEx_AlarmBEventCallback
