ARM GAS  /tmp/cczU8NLw.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SpiTxData,4,4
  18              		.comm	SpiRxData,4,4
  19              		.comm	UpdateFile,4,4
  20              		.section	.text.HAL_SPI_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_SPI_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	HAL_SPI_Init:
  29              	.LFB138:
  30              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @file    stm32f7xx_hal_spi.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
ARM GAS  /tmp/cczU8NLw.s 			page 2


  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx handle to the hspi DMA Tx or Rx handle
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (@) The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bits
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, IT
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (@)
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            (+@) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            (+@) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            (+@) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @endverbatim
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the differents SP
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        according to frequency used on APBx Peripheral Clock (fPCLK) used by the SPI instance :
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
ARM GAS  /tmp/cczU8NLw.s 			page 3


  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @attention
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * Redistribution and use in source and binary forms, with or without modification,
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * are permitted provided that the following conditions are met:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      this list of conditions and the following disclaimer.
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      this list of conditions and the following disclaimer in the documentation
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      and/or other materials provided with the distribution.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      may be used to endorse or promote products derived from this software
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *      without specific prior written permission.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/cczU8NLw.s 			page 4


 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #include "stm32f7xx_hal.h"
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup STM32F7xx_HAL_Driver
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI SPI
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief SPI HAL module driver
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/cczU8NLw.s 			page 5


 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the selected configuration:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Mode
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Direction
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Data Size
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) NSS Management
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) BaudRate Prescaler
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FirstBit
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) TIMode
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Calculation
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FIFO reception threshold
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           of the selected SPIx peripheral.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
ARM GAS  /tmp/cczU8NLw.s 			page 6


 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
  31              		.loc 1 264 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 16
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 84B0     		sub	sp, sp, #16
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 24
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
  47              		.loc 1 268 0
  48 0008 7B68     		ldr	r3, [r7, #4]
  49 000a 002B     		cmp	r3, #0
  50 000c 01D1     		bne	.L2
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
  51              		.loc 1 270 0
  52 000e 0123     		movs	r3, #1
  53 0010 84E0     		b	.L3
  54              	.L2:
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the parameters */
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
ARM GAS  /tmp/cczU8NLw.s 			page 7


 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  55              		.loc 1 296 0
  56 0012 7B68     		ldr	r3, [r7, #4]
  57 0014 0022     		movs	r2, #0
  58 0016 9A62     		str	r2, [r3, #40]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
  59              		.loc 1 299 0
  60 0018 7B68     		ldr	r3, [r7, #4]
  61 001a 93F85D30 		ldrb	r3, [r3, #93]
  62 001e DBB2     		uxtb	r3, r3
  63 0020 002B     		cmp	r3, #0
  64 0022 06D1     		bne	.L4
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
  65              		.loc 1 302 0
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 0022     		movs	r2, #0
  68 0028 83F85C20 		strb	r2, [r3, #92]
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
  69              		.loc 1 305 0
  70 002c 7868     		ldr	r0, [r7, #4]
  71 002e FFF7FEFF 		bl	HAL_SPI_MspInit
  72              	.L4:
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
  73              		.loc 1 308 0
  74 0032 7B68     		ldr	r3, [r7, #4]
  75 0034 0222     		movs	r2, #2
  76 0036 83F85D20 		strb	r2, [r3, #93]
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  77              		.loc 1 311 0
  78 003a 7B68     		ldr	r3, [r7, #4]
  79 003c 1B68     		ldr	r3, [r3]
  80 003e 1A68     		ldr	r2, [r3]
  81 0040 7B68     		ldr	r3, [r7, #4]
  82 0042 1B68     		ldr	r3, [r3]
  83 0044 22F04002 		bic	r2, r2, #64
  84 0048 1A60     		str	r2, [r3]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
  85              		.loc 1 314 0
  86 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 8


  87 004c DB68     		ldr	r3, [r3, #12]
  88 004e B3F5E06F 		cmp	r3, #1792
  89 0052 02D9     		bls	.L5
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
  90              		.loc 1 316 0
  91 0054 0023     		movs	r3, #0
  92 0056 FB60     		str	r3, [r7, #12]
  93 0058 02E0     		b	.L6
  94              	.L5:
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
  95              		.loc 1 320 0
  96 005a 4FF48053 		mov	r3, #4096
  97 005e FB60     		str	r3, [r7, #12]
  98              	.L6:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
  99              		.loc 1 324 0
 100 0060 7B68     		ldr	r3, [r7, #4]
 101 0062 DB68     		ldr	r3, [r3, #12]
 102 0064 B3F5706F 		cmp	r3, #3840
 103 0068 07D0     		beq	.L7
 104              		.loc 1 324 0 is_stmt 0 discriminator 1
 105 006a 7B68     		ldr	r3, [r7, #4]
 106 006c DB68     		ldr	r3, [r3, #12]
 107 006e B3F5E06F 		cmp	r3, #1792
 108 0072 02D0     		beq	.L7
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC must be disabled */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 109              		.loc 1 327 0 is_stmt 1
 110 0074 7B68     		ldr	r3, [r7, #4]
 111 0076 0022     		movs	r2, #0
 112 0078 9A62     		str	r2, [r3, #40]
 113              	.L7:
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 114              		.loc 1 331 0
 115 007a 7B68     		ldr	r3, [r7, #4]
 116 007c 1B6B     		ldr	r3, [r3, #48]
 117 007e 002B     		cmp	r3, #0
 118 0080 0BD1     		bne	.L8
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 119              		.loc 1 334 0
 120 0082 7B68     		ldr	r3, [r7, #4]
 121 0084 DB68     		ldr	r3, [r3, #12]
 122 0086 B3F5E06F 		cmp	r3, #1792
 123 008a 03D9     		bls	.L9
ARM GAS  /tmp/cczU8NLw.s 			page 9


 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 124              		.loc 1 336 0
 125 008c 7B68     		ldr	r3, [r7, #4]
 126 008e 0222     		movs	r2, #2
 127 0090 1A63     		str	r2, [r3, #48]
 128 0092 02E0     		b	.L8
 129              	.L9:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 130              		.loc 1 340 0
 131 0094 7B68     		ldr	r3, [r7, #4]
 132 0096 0122     		movs	r2, #1
 133 0098 1A63     		str	r2, [r3, #48]
 134              	.L8:
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   Communication speed, First bit, CRC calculation state */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 135              		.loc 1 347 0
 136 009a 7B68     		ldr	r3, [r7, #4]
 137 009c 5A68     		ldr	r2, [r3, #4]
 138 009e 7B68     		ldr	r3, [r7, #4]
 139 00a0 9B68     		ldr	r3, [r3, #8]
 140 00a2 1A43     		orrs	r2, r2, r3
 141 00a4 7B68     		ldr	r3, [r7, #4]
 142 00a6 1B69     		ldr	r3, [r3, #16]
 143 00a8 1A43     		orrs	r2, r2, r3
 144 00aa 7B68     		ldr	r3, [r7, #4]
 145 00ac 5B69     		ldr	r3, [r3, #20]
 146 00ae 1A43     		orrs	r2, r2, r3
 147 00b0 7B68     		ldr	r3, [r7, #4]
 148 00b2 9B69     		ldr	r3, [r3, #24]
 149 00b4 03F40073 		and	r3, r3, #512
 150 00b8 1A43     		orrs	r2, r2, r3
 151 00ba 7B68     		ldr	r3, [r7, #4]
 152 00bc DB69     		ldr	r3, [r3, #28]
 153 00be 1A43     		orrs	r2, r2, r3
 154 00c0 7B68     		ldr	r3, [r7, #4]
 155 00c2 1B6A     		ldr	r3, [r3, #32]
 156 00c4 42EA0301 		orr	r1, r2, r3
 157 00c8 7B68     		ldr	r3, [r7, #4]
 158 00ca 9A6A     		ldr	r2, [r3, #40]
 159 00cc 7B68     		ldr	r3, [r7, #4]
 160 00ce 1B68     		ldr	r3, [r3]
 161 00d0 0A43     		orrs	r2, r2, r1
 162 00d2 1A60     		str	r2, [r3]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Length */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
ARM GAS  /tmp/cczU8NLw.s 			page 10


 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : NSS management, TI Mode and Rx Fifo Threshold */
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 163              		.loc 1 359 0
 164 00d4 7B68     		ldr	r3, [r7, #4]
 165 00d6 9B69     		ldr	r3, [r3, #24]
 166 00d8 1B0C     		lsrs	r3, r3, #16
 167 00da 03F00402 		and	r2, r3, #4
 168 00de 7B68     		ldr	r3, [r7, #4]
 169 00e0 5B6A     		ldr	r3, [r3, #36]
 170 00e2 1A43     		orrs	r2, r2, r3
 171 00e4 7B68     		ldr	r3, [r7, #4]
 172 00e6 5B6B     		ldr	r3, [r3, #52]
 173 00e8 1A43     		orrs	r2, r2, r3
 174 00ea 7B68     		ldr	r3, [r7, #4]
 175 00ec DB68     		ldr	r3, [r3, #12]
 176 00ee 42EA0301 		orr	r1, r2, r3
 177 00f2 7B68     		ldr	r3, [r7, #4]
 178 00f4 1B68     		ldr	r3, [r3]
 179 00f6 FA68     		ldr	r2, [r7, #12]
 180 00f8 0A43     		orrs	r2, r2, r1
 181 00fa 5A60     		str	r2, [r3, #4]
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 182              		.loc 1 373 0
 183 00fc 7B68     		ldr	r3, [r7, #4]
 184 00fe 1B68     		ldr	r3, [r3]
 185 0100 DA69     		ldr	r2, [r3, #28]
 186 0102 7B68     		ldr	r3, [r7, #4]
 187 0104 1B68     		ldr	r3, [r3]
 188 0106 22F40062 		bic	r2, r2, #2048
 189 010a DA61     		str	r2, [r3, #28]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 190              		.loc 1 376 0
 191 010c 7B68     		ldr	r3, [r7, #4]
 192 010e 0022     		movs	r2, #0
 193 0110 1A66     		str	r2, [r3, #96]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 194              		.loc 1 377 0
ARM GAS  /tmp/cczU8NLw.s 			page 11


 195 0112 7B68     		ldr	r3, [r7, #4]
 196 0114 0122     		movs	r2, #1
 197 0116 83F85D20 		strb	r2, [r3, #93]
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 198              		.loc 1 379 0
 199 011a 0023     		movs	r3, #0
 200              	.L3:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 201              		.loc 1 380 0
 202 011c 1846     		mov	r0, r3
 203 011e 1037     		adds	r7, r7, #16
 204              	.LCFI3:
 205              		.cfi_def_cfa_offset 8
 206 0120 BD46     		mov	sp, r7
 207              	.LCFI4:
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 0122 80BD     		pop	{r7, pc}
 211              		.cfi_endproc
 212              	.LFE138:
 214              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 215              		.align	1
 216              		.global	HAL_SPI_DeInit
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	HAL_SPI_DeInit:
 223              	.LFB139:
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 224              		.loc 1 389 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              	.LCFI5:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              	.LCFI6:
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              	.LCFI7:
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
ARM GAS  /tmp/cczU8NLw.s 			page 12


 240              		.loc 1 391 0
 241 0008 7B68     		ldr	r3, [r7, #4]
 242 000a 002B     		cmp	r3, #0
 243 000c 01D1     		bne	.L11
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 244              		.loc 1 393 0
 245 000e 0123     		movs	r3, #1
 246 0010 1AE0     		b	.L12
 247              	.L11:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 248              		.loc 1 399 0
 249 0012 7B68     		ldr	r3, [r7, #4]
 250 0014 0222     		movs	r2, #2
 251 0016 83F85D20 		strb	r2, [r3, #93]
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 252              		.loc 1 402 0
 253 001a 7B68     		ldr	r3, [r7, #4]
 254 001c 1B68     		ldr	r3, [r3]
 255 001e 1A68     		ldr	r2, [r3]
 256 0020 7B68     		ldr	r3, [r7, #4]
 257 0022 1B68     		ldr	r3, [r3]
 258 0024 22F04002 		bic	r2, r2, #64
 259 0028 1A60     		str	r2, [r3]
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 260              		.loc 1 405 0
 261 002a 7868     		ldr	r0, [r7, #4]
 262 002c FFF7FEFF 		bl	HAL_SPI_MspDeInit
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 263              		.loc 1 407 0
 264 0030 7B68     		ldr	r3, [r7, #4]
 265 0032 0022     		movs	r2, #0
 266 0034 1A66     		str	r2, [r3, #96]
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 267              		.loc 1 408 0
 268 0036 7B68     		ldr	r3, [r7, #4]
 269 0038 0022     		movs	r2, #0
 270 003a 83F85D20 		strb	r2, [r3, #93]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 271              		.loc 1 411 0
 272 003e 7B68     		ldr	r3, [r7, #4]
 273 0040 0022     		movs	r2, #0
 274 0042 83F85C20 		strb	r2, [r3, #92]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
ARM GAS  /tmp/cczU8NLw.s 			page 13


 275              		.loc 1 413 0
 276 0046 0023     		movs	r3, #0
 277              	.L12:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 278              		.loc 1 414 0
 279 0048 1846     		mov	r0, r3
 280 004a 0837     		adds	r7, r7, #8
 281              	.LCFI8:
 282              		.cfi_def_cfa_offset 8
 283 004c BD46     		mov	sp, r7
 284              	.LCFI9:
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 004e 80BD     		pop	{r7, pc}
 288              		.cfi_endproc
 289              	.LFE139:
 291              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 292              		.align	1
 293              		.weak	HAL_SPI_MspInit
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv4-sp-d16
 299              	HAL_SPI_MspInit:
 300              	.LFB140:
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 301              		.loc 1 423 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306 0000 80B4     		push	{r7}
 307              	.LCFI10:
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 7, -4
 310 0002 83B0     		sub	sp, sp, #12
 311              	.LCFI11:
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              	.LCFI12:
 315              		.cfi_def_cfa_register 7
 316 0006 7860     		str	r0, [r7, #4]
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
ARM GAS  /tmp/cczU8NLw.s 			page 14


 317              		.loc 1 430 0
 318 0008 00BF     		nop
 319 000a 0C37     		adds	r7, r7, #12
 320              	.LCFI13:
 321              		.cfi_def_cfa_offset 4
 322 000c BD46     		mov	sp, r7
 323              	.LCFI14:
 324              		.cfi_def_cfa_register 13
 325              		@ sp needed
 326 000e 5DF8047B 		ldr	r7, [sp], #4
 327              	.LCFI15:
 328              		.cfi_restore 7
 329              		.cfi_def_cfa_offset 0
 330 0012 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE140:
 334              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 335              		.align	1
 336              		.weak	HAL_SPI_MspDeInit
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	HAL_SPI_MspDeInit:
 343              	.LFB141:
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 344              		.loc 1 439 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              	.LCFI16:
 351              		.cfi_def_cfa_offset 4
 352              		.cfi_offset 7, -4
 353 0002 83B0     		sub	sp, sp, #12
 354              	.LCFI17:
 355              		.cfi_def_cfa_offset 16
 356 0004 00AF     		add	r7, sp, #0
 357              	.LCFI18:
 358              		.cfi_def_cfa_register 7
 359 0006 7860     		str	r0, [r7, #4]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
ARM GAS  /tmp/cczU8NLw.s 			page 15


 360              		.loc 1 446 0
 361 0008 00BF     		nop
 362 000a 0C37     		adds	r7, r7, #12
 363              	.LCFI19:
 364              		.cfi_def_cfa_offset 4
 365 000c BD46     		mov	sp, r7
 366              	.LCFI20:
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 000e 5DF8047B 		ldr	r7, [sp], #4
 370              	.LCFI21:
 371              		.cfi_restore 7
 372              		.cfi_def_cfa_offset 0
 373 0012 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE141:
 377              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 378              		.align	1
 379              		.global	HAL_SPI_Transmit
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	HAL_SPI_Transmit:
 386              	.LFB142:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief   Data transfers functions
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### IO operation functions #####
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  [..]
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     data transfers.
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) There are two modes of transfer:
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             after finishing transfer.
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             using DMA mode.
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
ARM GAS  /tmp/cczU8NLw.s 			page 16


 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 387              		.loc 1 495 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 32
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391 0000 80B5     		push	{r7, lr}
 392              	.LCFI22:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 88B0     		sub	sp, sp, #32
 397              	.LCFI23:
 398              		.cfi_def_cfa_offset 40
 399 0004 00AF     		add	r7, sp, #0
 400              	.LCFI24:
 401              		.cfi_def_cfa_register 7
 402 0006 F860     		str	r0, [r7, #12]
 403 0008 B960     		str	r1, [r7, #8]
 404 000a 3B60     		str	r3, [r7]
 405 000c 1346     		mov	r3, r2	@ movhi
 406 000e FB80     		strh	r3, [r7, #6]	@ movhi
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 407              		.loc 1 496 0
 408 0010 0023     		movs	r3, #0
 409 0012 BB61     		str	r3, [r7, #24]
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 410              		.loc 1 497 0
 411 0014 0023     		movs	r3, #0
 412 0016 FB77     		strb	r3, [r7, #31]
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 413              		.loc 1 503 0
 414 0018 FB68     		ldr	r3, [r7, #12]
 415 001a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 416 001e 012B     		cmp	r3, #1
 417 0020 01D1     		bne	.L16
 418              		.loc 1 503 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cczU8NLw.s 			page 17


 419 0022 0223     		movs	r3, #2
 420 0024 F8E0     		b	.L17
 421              	.L16:
 422              		.loc 1 503 0 discriminator 2
 423 0026 FB68     		ldr	r3, [r7, #12]
 424 0028 0122     		movs	r2, #1
 425 002a 83F85C20 		strb	r2, [r3, #92]
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 426              		.loc 1 506 0 is_stmt 1 discriminator 2
 427 002e FFF7FEFF 		bl	HAL_GetTick
 428 0032 B861     		str	r0, [r7, #24]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 429              		.loc 1 508 0 discriminator 2
 430 0034 FB68     		ldr	r3, [r7, #12]
 431 0036 93F85D30 		ldrb	r3, [r3, #93]
 432 003a DBB2     		uxtb	r3, r3
 433 003c 012B     		cmp	r3, #1
 434 003e 02D0     		beq	.L18
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 435              		.loc 1 510 0
 436 0040 0223     		movs	r3, #2
 437 0042 FB77     		strb	r3, [r7, #31]
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 438              		.loc 1 511 0
 439 0044 DFE0     		b	.L19
 440              	.L18:
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 441              		.loc 1 514 0
 442 0046 BB68     		ldr	r3, [r7, #8]
 443 0048 002B     		cmp	r3, #0
 444 004a 02D0     		beq	.L20
 445              		.loc 1 514 0 is_stmt 0 discriminator 1
 446 004c FB88     		ldrh	r3, [r7, #6]
 447 004e 002B     		cmp	r3, #0
 448 0050 02D1     		bne	.L21
 449              	.L20:
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 450              		.loc 1 516 0 is_stmt 1
 451 0052 0123     		movs	r3, #1
 452 0054 FB77     		strb	r3, [r7, #31]
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 453              		.loc 1 517 0
 454 0056 D6E0     		b	.L19
 455              	.L21:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 456              		.loc 1 521 0
 457 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 18


 458 005a 0322     		movs	r2, #3
 459 005c 83F85D20 		strb	r2, [r3, #93]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 460              		.loc 1 522 0
 461 0060 FB68     		ldr	r3, [r7, #12]
 462 0062 0022     		movs	r2, #0
 463 0064 1A66     		str	r2, [r3, #96]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 464              		.loc 1 523 0
 465 0066 FB68     		ldr	r3, [r7, #12]
 466 0068 BA68     		ldr	r2, [r7, #8]
 467 006a 9A63     		str	r2, [r3, #56]
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 468              		.loc 1 524 0
 469 006c FB68     		ldr	r3, [r7, #12]
 470 006e FA88     		ldrh	r2, [r7, #6]	@ movhi
 471 0070 9A87     		strh	r2, [r3, #60]	@ movhi
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 472              		.loc 1 525 0
 473 0072 FB68     		ldr	r3, [r7, #12]
 474 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 475 0076 DA87     		strh	r2, [r3, #62]	@ movhi
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 476              		.loc 1 528 0
 477 0078 FB68     		ldr	r3, [r7, #12]
 478 007a 0022     		movs	r2, #0
 479 007c 1A64     		str	r2, [r3, #64]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 480              		.loc 1 529 0
 481 007e FB68     		ldr	r3, [r7, #12]
 482 0080 0022     		movs	r2, #0
 483 0082 A3F84420 		strh	r2, [r3, #68]	@ movhi
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 484              		.loc 1 530 0
 485 0086 FB68     		ldr	r3, [r7, #12]
 486 0088 0022     		movs	r2, #0
 487 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 488              		.loc 1 531 0
 489 008e FB68     		ldr	r3, [r7, #12]
 490 0090 0022     		movs	r2, #0
 491 0092 1A65     		str	r2, [r3, #80]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 492              		.loc 1 532 0
 493 0094 FB68     		ldr	r3, [r7, #12]
 494 0096 0022     		movs	r2, #0
 495 0098 DA64     		str	r2, [r3, #76]
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 496              		.loc 1 535 0
 497 009a FB68     		ldr	r3, [r7, #12]
 498 009c 9B68     		ldr	r3, [r3, #8]
 499 009e B3F5004F 		cmp	r3, #32768
 500 00a2 07D1     		bne	.L22
ARM GAS  /tmp/cczU8NLw.s 			page 19


 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 501              		.loc 1 537 0
 502 00a4 FB68     		ldr	r3, [r7, #12]
 503 00a6 1B68     		ldr	r3, [r3]
 504 00a8 1A68     		ldr	r2, [r3]
 505 00aa FB68     		ldr	r3, [r7, #12]
 506 00ac 1B68     		ldr	r3, [r3]
 507 00ae 42F48042 		orr	r2, r2, #16384
 508 00b2 1A60     		str	r2, [r3]
 509              	.L22:
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 510              		.loc 1 549 0
 511 00b4 FB68     		ldr	r3, [r7, #12]
 512 00b6 1B68     		ldr	r3, [r3]
 513 00b8 1B68     		ldr	r3, [r3]
 514 00ba 03F04003 		and	r3, r3, #64
 515 00be 402B     		cmp	r3, #64
 516 00c0 07D0     		beq	.L23
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 517              		.loc 1 552 0
 518 00c2 FB68     		ldr	r3, [r7, #12]
 519 00c4 1B68     		ldr	r3, [r3]
 520 00c6 1A68     		ldr	r2, [r3]
 521 00c8 FB68     		ldr	r3, [r7, #12]
 522 00ca 1B68     		ldr	r3, [r3]
 523 00cc 42F04002 		orr	r2, r2, #64
 524 00d0 1A60     		str	r2, [r3]
 525              	.L23:
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 526              		.loc 1 556 0
 527 00d2 FB68     		ldr	r3, [r7, #12]
 528 00d4 DB68     		ldr	r3, [r3, #12]
 529 00d6 B3F5E06F 		cmp	r3, #1792
 530 00da 6DD9     		bls	.L30
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 531              		.loc 1 559 0
 532 00dc 28E0     		b	.L25
 533              	.L28:
ARM GAS  /tmp/cczU8NLw.s 			page 20


 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 534              		.loc 1 562 0
 535 00de FB68     		ldr	r3, [r7, #12]
 536 00e0 1B68     		ldr	r3, [r3]
 537 00e2 9B68     		ldr	r3, [r3, #8]
 538 00e4 03F00203 		and	r3, r3, #2
 539 00e8 022B     		cmp	r3, #2
 540 00ea 0FD1     		bne	.L26
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)pData);
 541              		.loc 1 564 0
 542 00ec BB68     		ldr	r3, [r7, #8]
 543 00ee 1A88     		ldrh	r2, [r3]
 544 00f0 FB68     		ldr	r3, [r7, #12]
 545 00f2 1B68     		ldr	r3, [r3]
 546 00f4 DA60     		str	r2, [r3, #12]
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pData += sizeof(uint16_t);
 547              		.loc 1 565 0
 548 00f6 BB68     		ldr	r3, [r7, #8]
 549 00f8 0233     		adds	r3, r3, #2
 550 00fa BB60     		str	r3, [r7, #8]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 551              		.loc 1 566 0
 552 00fc FB68     		ldr	r3, [r7, #12]
 553 00fe DB8F     		ldrh	r3, [r3, #62]	@ movhi
 554 0100 9BB2     		uxth	r3, r3
 555 0102 013B     		subs	r3, r3, #1
 556 0104 9AB2     		uxth	r2, r3
 557 0106 FB68     		ldr	r3, [r7, #12]
 558 0108 DA87     		strh	r2, [r3, #62]	@ movhi
 559 010a 11E0     		b	.L25
 560              	.L26:
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 561              		.loc 1 571 0
 562 010c 3B68     		ldr	r3, [r7]
 563 010e 002B     		cmp	r3, #0
 564 0110 0BD0     		beq	.L27
 565              		.loc 1 571 0 is_stmt 0 discriminator 1
 566 0112 3B68     		ldr	r3, [r7]
 567 0114 B3F1FF3F 		cmp	r3, #-1
 568 0118 0AD0     		beq	.L25
 569              		.loc 1 571 0 discriminator 2
 570 011a FFF7FEFF 		bl	HAL_GetTick
 571 011e 0246     		mov	r2, r0
 572 0120 BB69     		ldr	r3, [r7, #24]
 573 0122 D31A     		subs	r3, r2, r3
 574 0124 3A68     		ldr	r2, [r7]
 575 0126 9A42     		cmp	r2, r3
 576 0128 02D8     		bhi	.L25
 577              	.L27:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
ARM GAS  /tmp/cczU8NLw.s 			page 21


 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 578              		.loc 1 573 0 is_stmt 1
 579 012a 0323     		movs	r3, #3
 580 012c FB77     		strb	r3, [r7, #31]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 581              		.loc 1 574 0
 582 012e 6AE0     		b	.L19
 583              	.L25:
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 584              		.loc 1 559 0
 585 0130 FB68     		ldr	r3, [r7, #12]
 586 0132 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 587 0134 9BB2     		uxth	r3, r3
 588 0136 002B     		cmp	r3, #0
 589 0138 D1D1     		bne	.L28
 590 013a 42E0     		b	.L29
 591              	.L35:
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 592              		.loc 1 585 0
 593 013c FB68     		ldr	r3, [r7, #12]
 594 013e 1B68     		ldr	r3, [r3]
 595 0140 9B68     		ldr	r3, [r3, #8]
 596 0142 03F00203 		and	r3, r3, #2
 597 0146 022B     		cmp	r3, #2
 598 0148 24D1     		bne	.L31
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 599              		.loc 1 587 0
 600 014a FB68     		ldr	r3, [r7, #12]
 601 014c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 602 014e 9BB2     		uxth	r3, r3
 603 0150 012B     		cmp	r3, #1
 604 0152 0FD9     		bls	.L32
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* write on the data register in packing mode */
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)pData);
 605              		.loc 1 590 0
 606 0154 BB68     		ldr	r3, [r7, #8]
 607 0156 1A88     		ldrh	r2, [r3]
 608 0158 FB68     		ldr	r3, [r7, #12]
 609 015a 1B68     		ldr	r3, [r3]
 610 015c DA60     		str	r2, [r3, #12]
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           pData += sizeof(uint16_t);
 611              		.loc 1 591 0
 612 015e BB68     		ldr	r3, [r7, #8]
 613 0160 0233     		adds	r3, r3, #2
 614 0162 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/cczU8NLw.s 			page 22


 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 615              		.loc 1 592 0
 616 0164 FB68     		ldr	r3, [r7, #12]
 617 0166 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 618 0168 9BB2     		uxth	r3, r3
 619 016a 023B     		subs	r3, r3, #2
 620 016c 9AB2     		uxth	r2, r3
 621 016e FB68     		ldr	r3, [r7, #12]
 622 0170 DA87     		strh	r2, [r3, #62]	@ movhi
 623 0172 21E0     		b	.L30
 624              	.L32:
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*pData++);
 625              		.loc 1 596 0
 626 0174 BB68     		ldr	r3, [r7, #8]
 627 0176 5A1C     		adds	r2, r3, #1
 628 0178 BA60     		str	r2, [r7, #8]
 629 017a FA68     		ldr	r2, [r7, #12]
 630 017c 1268     		ldr	r2, [r2]
 631 017e 0C32     		adds	r2, r2, #12
 632 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 633 0182 1370     		strb	r3, [r2]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 634              		.loc 1 597 0
 635 0184 FB68     		ldr	r3, [r7, #12]
 636 0186 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 637 0188 9BB2     		uxth	r3, r3
 638 018a 013B     		subs	r3, r3, #1
 639 018c 9AB2     		uxth	r2, r3
 640 018e FB68     		ldr	r3, [r7, #12]
 641 0190 DA87     		strh	r2, [r3, #62]	@ movhi
 642 0192 11E0     		b	.L30
 643              	.L31:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 644              		.loc 1 603 0
 645 0194 3B68     		ldr	r3, [r7]
 646 0196 002B     		cmp	r3, #0
 647 0198 0BD0     		beq	.L34
 648              		.loc 1 603 0 is_stmt 0 discriminator 1
 649 019a 3B68     		ldr	r3, [r7]
 650 019c B3F1FF3F 		cmp	r3, #-1
 651 01a0 0AD0     		beq	.L30
 652              		.loc 1 603 0 discriminator 2
 653 01a2 FFF7FEFF 		bl	HAL_GetTick
 654 01a6 0246     		mov	r2, r0
 655 01a8 BB69     		ldr	r3, [r7, #24]
 656 01aa D31A     		subs	r3, r2, r3
 657 01ac 3A68     		ldr	r2, [r7]
 658 01ae 9A42     		cmp	r2, r3
 659 01b0 02D8     		bhi	.L30
ARM GAS  /tmp/cczU8NLw.s 			page 23


 660              	.L34:
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 661              		.loc 1 605 0 is_stmt 1
 662 01b2 0323     		movs	r3, #3
 663 01b4 FB77     		strb	r3, [r7, #31]
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 664              		.loc 1 606 0
 665 01b6 26E0     		b	.L19
 666              	.L30:
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 667              		.loc 1 582 0
 668 01b8 FB68     		ldr	r3, [r7, #12]
 669 01ba DB8F     		ldrh	r3, [r3, #62]	@ movhi
 670 01bc 9BB2     		uxth	r3, r3
 671 01be 002B     		cmp	r3, #0
 672 01c0 BCD1     		bne	.L35
 673              	.L29:
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 674              		.loc 1 620 0
 675 01c2 BA69     		ldr	r2, [r7, #24]
 676 01c4 3968     		ldr	r1, [r7]
 677 01c6 F868     		ldr	r0, [r7, #12]
 678 01c8 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 679 01cc 0346     		mov	r3, r0
 680 01ce 002B     		cmp	r3, #0
 681 01d0 02D0     		beq	.L36
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 682              		.loc 1 622 0
 683 01d2 FB68     		ldr	r3, [r7, #12]
 684 01d4 2022     		movs	r2, #32
 685 01d6 1A66     		str	r2, [r3, #96]
 686              	.L36:
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 687              		.loc 1 626 0
 688 01d8 FB68     		ldr	r3, [r7, #12]
 689 01da 9B68     		ldr	r3, [r3, #8]
 690 01dc 002B     		cmp	r3, #0
 691 01de 0AD1     		bne	.L37
 692              	.LBB2:
ARM GAS  /tmp/cczU8NLw.s 			page 24


 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 693              		.loc 1 628 0
 694 01e0 0023     		movs	r3, #0
 695 01e2 7B61     		str	r3, [r7, #20]
 696 01e4 FB68     		ldr	r3, [r7, #12]
 697 01e6 1B68     		ldr	r3, [r3]
 698 01e8 DB68     		ldr	r3, [r3, #12]
 699 01ea 7B61     		str	r3, [r7, #20]
 700 01ec FB68     		ldr	r3, [r7, #12]
 701 01ee 1B68     		ldr	r3, [r3]
 702 01f0 9B68     		ldr	r3, [r3, #8]
 703 01f2 7B61     		str	r3, [r7, #20]
 704 01f4 7B69     		ldr	r3, [r7, #20]
 705              	.L37:
 706              	.LBE2:
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 707              		.loc 1 631 0
 708 01f6 FB68     		ldr	r3, [r7, #12]
 709 01f8 1B6E     		ldr	r3, [r3, #96]
 710 01fa 002B     		cmp	r3, #0
 711 01fc 02D0     		beq	.L38
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 712              		.loc 1 633 0
 713 01fe 0123     		movs	r3, #1
 714 0200 FB77     		strb	r3, [r7, #31]
 715 0202 00E0     		b	.L19
 716              	.L38:
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
 717              		.loc 1 636 0
 718 0204 00BF     		nop
 719              	.L19:
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 720              		.loc 1 637 0
 721 0206 FB68     		ldr	r3, [r7, #12]
 722 0208 0122     		movs	r2, #1
 723 020a 83F85D20 		strb	r2, [r3, #93]
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 724              		.loc 1 639 0
 725 020e FB68     		ldr	r3, [r7, #12]
 726 0210 0022     		movs	r2, #0
 727 0212 83F85C20 		strb	r2, [r3, #92]
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 728              		.loc 1 640 0
 729 0216 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 730              	.L17:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 731              		.loc 1 641 0
 732 0218 1846     		mov	r0, r3
 733 021a 2037     		adds	r7, r7, #32
 734              	.LCFI25:
ARM GAS  /tmp/cczU8NLw.s 			page 25


 735              		.cfi_def_cfa_offset 8
 736 021c BD46     		mov	sp, r7
 737              	.LCFI26:
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 021e 80BD     		pop	{r7, pc}
 741              		.cfi_endproc
 742              	.LFE142:
 744              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 745              		.align	1
 746              		.global	HAL_SPI_Receive
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv4-sp-d16
 752              	HAL_SPI_Receive:
 753              	.LFB143:
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be received
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 754              		.loc 1 653 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 24
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 80B5     		push	{r7, lr}
 759              	.LCFI27:
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 88B0     		sub	sp, sp, #32
 764              	.LCFI28:
 765              		.cfi_def_cfa_offset 40
 766 0004 02AF     		add	r7, sp, #8
 767              	.LCFI29:
 768              		.cfi_def_cfa 7, 32
 769 0006 F860     		str	r0, [r7, #12]
 770 0008 B960     		str	r1, [r7, #8]
 771 000a 3B60     		str	r3, [r7]
 772 000c 1346     		mov	r3, r2	@ movhi
 773 000e FB80     		strh	r3, [r7, #6]	@ movhi
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 774              		.loc 1 657 0
 775 0010 0023     		movs	r3, #0
 776 0012 3B61     		str	r3, [r7, #16]
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
ARM GAS  /tmp/cczU8NLw.s 			page 26


 777              		.loc 1 658 0
 778 0014 0023     		movs	r3, #0
 779 0016 FB75     		strb	r3, [r7, #23]
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 780              		.loc 1 660 0
 781 0018 FB68     		ldr	r3, [r7, #12]
 782 001a 5B68     		ldr	r3, [r3, #4]
 783 001c B3F5827F 		cmp	r3, #260
 784 0020 12D1     		bne	.L40
 785              		.loc 1 660 0 is_stmt 0 discriminator 1
 786 0022 FB68     		ldr	r3, [r7, #12]
 787 0024 9B68     		ldr	r3, [r3, #8]
 788 0026 002B     		cmp	r3, #0
 789 0028 0ED1     		bne	.L40
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 790              		.loc 1 662 0 is_stmt 1
 791 002a FB68     		ldr	r3, [r7, #12]
 792 002c 0422     		movs	r2, #4
 793 002e 83F85D20 		strb	r2, [r3, #93]
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 794              		.loc 1 664 0
 795 0032 FA88     		ldrh	r2, [r7, #6]
 796 0034 3B68     		ldr	r3, [r7]
 797 0036 0093     		str	r3, [sp]
 798 0038 1346     		mov	r3, r2
 799 003a BA68     		ldr	r2, [r7, #8]
 800 003c B968     		ldr	r1, [r7, #8]
 801 003e F868     		ldr	r0, [r7, #12]
 802 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 803 0044 0346     		mov	r3, r0
 804 0046 FAE0     		b	.L41
 805              	.L40:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 806              		.loc 1 668 0
 807 0048 FB68     		ldr	r3, [r7, #12]
 808 004a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 809 004e 012B     		cmp	r3, #1
 810 0050 01D1     		bne	.L42
 811              		.loc 1 668 0 is_stmt 0 discriminator 1
 812 0052 0223     		movs	r3, #2
 813 0054 F3E0     		b	.L41
 814              	.L42:
 815              		.loc 1 668 0 discriminator 2
 816 0056 FB68     		ldr	r3, [r7, #12]
 817 0058 0122     		movs	r2, #1
 818 005a 83F85C20 		strb	r2, [r3, #92]
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 819              		.loc 1 671 0 is_stmt 1 discriminator 2
 820 005e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cczU8NLw.s 			page 27


 821 0062 3861     		str	r0, [r7, #16]
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 822              		.loc 1 673 0 discriminator 2
 823 0064 FB68     		ldr	r3, [r7, #12]
 824 0066 93F85D30 		ldrb	r3, [r3, #93]
 825 006a DBB2     		uxtb	r3, r3
 826 006c 012B     		cmp	r3, #1
 827 006e 02D0     		beq	.L43
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 828              		.loc 1 675 0
 829 0070 0223     		movs	r3, #2
 830 0072 FB75     		strb	r3, [r7, #23]
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 831              		.loc 1 676 0
 832 0074 DAE0     		b	.L44
 833              	.L43:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 834              		.loc 1 679 0
 835 0076 BB68     		ldr	r3, [r7, #8]
 836 0078 002B     		cmp	r3, #0
 837 007a 02D0     		beq	.L45
 838              		.loc 1 679 0 is_stmt 0 discriminator 1
 839 007c FB88     		ldrh	r3, [r7, #6]
 840 007e 002B     		cmp	r3, #0
 841 0080 02D1     		bne	.L46
 842              	.L45:
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 843              		.loc 1 681 0 is_stmt 1
 844 0082 0123     		movs	r3, #1
 845 0084 FB75     		strb	r3, [r7, #23]
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 846              		.loc 1 682 0
 847 0086 D1E0     		b	.L44
 848              	.L46:
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 849              		.loc 1 686 0
 850 0088 FB68     		ldr	r3, [r7, #12]
 851 008a 0422     		movs	r2, #4
 852 008c 83F85D20 		strb	r2, [r3, #93]
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 853              		.loc 1 687 0
 854 0090 FB68     		ldr	r3, [r7, #12]
 855 0092 0022     		movs	r2, #0
 856 0094 1A66     		str	r2, [r3, #96]
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 857              		.loc 1 688 0
 858 0096 FB68     		ldr	r3, [r7, #12]
 859 0098 BA68     		ldr	r2, [r7, #8]
 860 009a 1A64     		str	r2, [r3, #64]
ARM GAS  /tmp/cczU8NLw.s 			page 28


 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 861              		.loc 1 689 0
 862 009c FB68     		ldr	r3, [r7, #12]
 863 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 864 00a0 A3F84420 		strh	r2, [r3, #68]	@ movhi
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 865              		.loc 1 690 0
 866 00a4 FB68     		ldr	r3, [r7, #12]
 867 00a6 FA88     		ldrh	r2, [r7, #6]	@ movhi
 868 00a8 A3F84620 		strh	r2, [r3, #70]	@ movhi
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 869              		.loc 1 693 0
 870 00ac FB68     		ldr	r3, [r7, #12]
 871 00ae 0022     		movs	r2, #0
 872 00b0 9A63     		str	r2, [r3, #56]
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 873              		.loc 1 694 0
 874 00b2 FB68     		ldr	r3, [r7, #12]
 875 00b4 0022     		movs	r2, #0
 876 00b6 9A87     		strh	r2, [r3, #60]	@ movhi
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 877              		.loc 1 695 0
 878 00b8 FB68     		ldr	r3, [r7, #12]
 879 00ba 0022     		movs	r2, #0
 880 00bc DA87     		strh	r2, [r3, #62]	@ movhi
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 881              		.loc 1 696 0
 882 00be FB68     		ldr	r3, [r7, #12]
 883 00c0 0022     		movs	r2, #0
 884 00c2 DA64     		str	r2, [r3, #76]
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 885              		.loc 1 697 0
 886 00c4 FB68     		ldr	r3, [r7, #12]
 887 00c6 0022     		movs	r2, #0
 888 00c8 1A65     		str	r2, [r3, #80]
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 889              		.loc 1 710 0
 890 00ca FB68     		ldr	r3, [r7, #12]
 891 00cc DB68     		ldr	r3, [r3, #12]
 892 00ce B3F5E06F 		cmp	r3, #1792
 893 00d2 08D9     		bls	.L47
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
ARM GAS  /tmp/cczU8NLw.s 			page 29


 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 894              		.loc 1 713 0
 895 00d4 FB68     		ldr	r3, [r7, #12]
 896 00d6 1B68     		ldr	r3, [r3]
 897 00d8 5A68     		ldr	r2, [r3, #4]
 898 00da FB68     		ldr	r3, [r7, #12]
 899 00dc 1B68     		ldr	r3, [r3]
 900 00de 22F48052 		bic	r2, r2, #4096
 901 00e2 5A60     		str	r2, [r3, #4]
 902 00e4 07E0     		b	.L48
 903              	.L47:
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 904              		.loc 1 718 0
 905 00e6 FB68     		ldr	r3, [r7, #12]
 906 00e8 1B68     		ldr	r3, [r3]
 907 00ea 5A68     		ldr	r2, [r3, #4]
 908 00ec FB68     		ldr	r3, [r7, #12]
 909 00ee 1B68     		ldr	r3, [r3]
 910 00f0 42F48052 		orr	r2, r2, #4096
 911 00f4 5A60     		str	r2, [r3, #4]
 912              	.L48:
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 913              		.loc 1 722 0
 914 00f6 FB68     		ldr	r3, [r7, #12]
 915 00f8 9B68     		ldr	r3, [r3, #8]
 916 00fa B3F5004F 		cmp	r3, #32768
 917 00fe 07D1     		bne	.L49
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 918              		.loc 1 724 0
 919 0100 FB68     		ldr	r3, [r7, #12]
 920 0102 1B68     		ldr	r3, [r3]
 921 0104 1A68     		ldr	r2, [r3]
 922 0106 FB68     		ldr	r3, [r7, #12]
 923 0108 1B68     		ldr	r3, [r3]
 924 010a 22F48042 		bic	r2, r2, #16384
 925 010e 1A60     		str	r2, [r3]
 926              	.L49:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 927              		.loc 1 728 0
 928 0110 FB68     		ldr	r3, [r7, #12]
 929 0112 1B68     		ldr	r3, [r3]
 930 0114 1B68     		ldr	r3, [r3]
 931 0116 03F04003 		and	r3, r3, #64
 932 011a 402B     		cmp	r3, #64
 933 011c 07D0     		beq	.L50
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/cczU8NLw.s 			page 30


 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 934              		.loc 1 731 0
 935 011e FB68     		ldr	r3, [r7, #12]
 936 0120 1B68     		ldr	r3, [r3]
 937 0122 1A68     		ldr	r2, [r3]
 938 0124 FB68     		ldr	r3, [r7, #12]
 939 0126 1B68     		ldr	r3, [r3]
 940 0128 42F04002 		orr	r2, r2, #64
 941 012c 1A60     		str	r2, [r3]
 942              	.L50:
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 943              		.loc 1 735 0
 944 012e FB68     		ldr	r3, [r7, #12]
 945 0130 DB68     		ldr	r3, [r3, #12]
 946 0132 B3F5E06F 		cmp	r3, #1792
 947 0136 60D8     		bhi	.L57
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 948              		.loc 1 738 0
 949 0138 2CE0     		b	.L52
 950              	.L55:
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 951              		.loc 1 741 0
 952 013a FB68     		ldr	r3, [r7, #12]
 953 013c 1B68     		ldr	r3, [r3]
 954 013e 9B68     		ldr	r3, [r3, #8]
 955 0140 03F00103 		and	r3, r3, #1
 956 0144 012B     		cmp	r3, #1
 957 0146 13D1     		bne	.L53
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* read the received data */
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (*pData) = *(__IO uint8_t *)&hspi->Instance->DR;
 958              		.loc 1 744 0
 959 0148 FB68     		ldr	r3, [r7, #12]
 960 014a 1B68     		ldr	r3, [r3]
 961 014c 0C33     		adds	r3, r3, #12
 962 014e 1B78     		ldrb	r3, [r3]
 963 0150 DAB2     		uxtb	r2, r3
 964 0152 BB68     		ldr	r3, [r7, #8]
 965 0154 1A70     		strb	r2, [r3]
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pData += sizeof(uint8_t);
 966              		.loc 1 745 0
 967 0156 BB68     		ldr	r3, [r7, #8]
 968 0158 0133     		adds	r3, r3, #1
 969 015a BB60     		str	r3, [r7, #8]
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 970              		.loc 1 746 0
 971 015c FB68     		ldr	r3, [r7, #12]
 972 015e B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 973 0162 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cczU8NLw.s 			page 31


 974 0164 013B     		subs	r3, r3, #1
 975 0166 9AB2     		uxth	r2, r3
 976 0168 FB68     		ldr	r3, [r7, #12]
 977 016a A3F84620 		strh	r2, [r3, #70]	@ movhi
 978 016e 11E0     		b	.L52
 979              	.L53:
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 980              		.loc 1 751 0
 981 0170 3B68     		ldr	r3, [r7]
 982 0172 002B     		cmp	r3, #0
 983 0174 0BD0     		beq	.L54
 984              		.loc 1 751 0 is_stmt 0 discriminator 1
 985 0176 3B68     		ldr	r3, [r7]
 986 0178 B3F1FF3F 		cmp	r3, #-1
 987 017c 0AD0     		beq	.L52
 988              		.loc 1 751 0 discriminator 2
 989 017e FFF7FEFF 		bl	HAL_GetTick
 990 0182 0246     		mov	r2, r0
 991 0184 3B69     		ldr	r3, [r7, #16]
 992 0186 D31A     		subs	r3, r2, r3
 993 0188 3A68     		ldr	r2, [r7]
 994 018a 9A42     		cmp	r2, r3
 995 018c 02D8     		bhi	.L52
 996              	.L54:
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 997              		.loc 1 753 0 is_stmt 1
 998 018e 0323     		movs	r3, #3
 999 0190 FB75     		strb	r3, [r7, #23]
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1000              		.loc 1 754 0
 1001 0192 4BE0     		b	.L44
 1002              	.L52:
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1003              		.loc 1 738 0
 1004 0194 FB68     		ldr	r3, [r7, #12]
 1005 0196 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1006 019a 9BB2     		uxth	r3, r3
 1007 019c 002B     		cmp	r3, #0
 1008 019e CCD1     		bne	.L55
 1009 01a0 31E0     		b	.L56
 1010              	.L60:
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
ARM GAS  /tmp/cczU8NLw.s 			page 32


 1011              		.loc 1 765 0
 1012 01a2 FB68     		ldr	r3, [r7, #12]
 1013 01a4 1B68     		ldr	r3, [r3]
 1014 01a6 9B68     		ldr	r3, [r3, #8]
 1015 01a8 03F00103 		and	r3, r3, #1
 1016 01ac 012B     		cmp	r3, #1
 1017 01ae 12D1     		bne	.L58
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)pData) = hspi->Instance->DR;
 1018              		.loc 1 767 0
 1019 01b0 FB68     		ldr	r3, [r7, #12]
 1020 01b2 1B68     		ldr	r3, [r3]
 1021 01b4 DB68     		ldr	r3, [r3, #12]
 1022 01b6 9AB2     		uxth	r2, r3
 1023 01b8 BB68     		ldr	r3, [r7, #8]
 1024 01ba 1A80     		strh	r2, [r3]	@ movhi
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pData += sizeof(uint16_t);
 1025              		.loc 1 768 0
 1026 01bc BB68     		ldr	r3, [r7, #8]
 1027 01be 0233     		adds	r3, r3, #2
 1028 01c0 BB60     		str	r3, [r7, #8]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 1029              		.loc 1 769 0
 1030 01c2 FB68     		ldr	r3, [r7, #12]
 1031 01c4 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1032 01c8 9BB2     		uxth	r3, r3
 1033 01ca 013B     		subs	r3, r3, #1
 1034 01cc 9AB2     		uxth	r2, r3
 1035 01ce FB68     		ldr	r3, [r7, #12]
 1036 01d0 A3F84620 		strh	r2, [r3, #70]	@ movhi
 1037 01d4 11E0     		b	.L57
 1038              	.L58:
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Time
 1039              		.loc 1 774 0
 1040 01d6 3B68     		ldr	r3, [r7]
 1041 01d8 002B     		cmp	r3, #0
 1042 01da 0BD0     		beq	.L59
 1043              		.loc 1 774 0 is_stmt 0 discriminator 1
 1044 01dc 3B68     		ldr	r3, [r7]
 1045 01de B3F1FF3F 		cmp	r3, #-1
 1046 01e2 0AD0     		beq	.L57
 1047              		.loc 1 774 0 discriminator 2
 1048 01e4 FFF7FEFF 		bl	HAL_GetTick
 1049 01e8 0246     		mov	r2, r0
 1050 01ea 3B69     		ldr	r3, [r7, #16]
 1051 01ec D31A     		subs	r3, r2, r3
 1052 01ee 3A68     		ldr	r2, [r7]
 1053 01f0 9A42     		cmp	r2, r3
 1054 01f2 02D8     		bhi	.L57
 1055              	.L59:
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 1056              		.loc 1 776 0 is_stmt 1
ARM GAS  /tmp/cczU8NLw.s 			page 33


 1057 01f4 0323     		movs	r3, #3
 1058 01f6 FB75     		strb	r3, [r7, #23]
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1059              		.loc 1 777 0
 1060 01f8 18E0     		b	.L44
 1061              	.L57:
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1062              		.loc 1 762 0
 1063 01fa FB68     		ldr	r3, [r7, #12]
 1064 01fc B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1065 0200 9BB2     		uxth	r3, r3
 1066 0202 002B     		cmp	r3, #0
 1067 0204 CDD1     		bne	.L60
 1068              	.L56:
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Handle the CRC Transmission */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* freeze the CRC before the latest data */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read the latest data */
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* the latest data has not been received */
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       *((uint16_t *)pData) = hspi->Instance->DR;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (*pData) = *(__IO uint8_t *)&hspi->Instance->DR;
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait the CRC data */
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
ARM GAS  /tmp/cczU8NLw.s 			page 34


 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, Timeout, tickstart) !
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1069              		.loc 1 848 0
 1070 0206 3A69     		ldr	r2, [r7, #16]
 1071 0208 3968     		ldr	r1, [r7]
 1072 020a F868     		ldr	r0, [r7, #12]
 1073 020c FFF7FEFF 		bl	SPI_EndRxTransaction
 1074 0210 0346     		mov	r3, r0
 1075 0212 002B     		cmp	r3, #0
 1076 0214 02D0     		beq	.L61
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1077              		.loc 1 850 0
 1078 0216 FB68     		ldr	r3, [r7, #12]
 1079 0218 2022     		movs	r2, #32
 1080 021a 1A66     		str	r2, [r3, #96]
 1081              	.L61:
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1082              		.loc 1 862 0
 1083 021c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 35


 1084 021e 1B6E     		ldr	r3, [r3, #96]
 1085 0220 002B     		cmp	r3, #0
 1086 0222 02D0     		beq	.L62
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1087              		.loc 1 864 0
 1088 0224 0123     		movs	r3, #1
 1089 0226 FB75     		strb	r3, [r7, #23]
 1090 0228 00E0     		b	.L44
 1091              	.L62:
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
 1092              		.loc 1 867 0
 1093 022a 00BF     		nop
 1094              	.L44:
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1095              		.loc 1 868 0
 1096 022c FB68     		ldr	r3, [r7, #12]
 1097 022e 0122     		movs	r2, #1
 1098 0230 83F85D20 		strb	r2, [r3, #93]
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1099              		.loc 1 869 0
 1100 0234 FB68     		ldr	r3, [r7, #12]
 1101 0236 0022     		movs	r2, #0
 1102 0238 83F85C20 		strb	r2, [r3, #92]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1103              		.loc 1 870 0
 1104 023c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1105              	.L41:
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1106              		.loc 1 871 0
 1107 023e 1846     		mov	r0, r3
 1108 0240 1837     		adds	r7, r7, #24
 1109              	.LCFI30:
 1110              		.cfi_def_cfa_offset 8
 1111 0242 BD46     		mov	sp, r7
 1112              	.LCFI31:
 1113              		.cfi_def_cfa_register 13
 1114              		@ sp needed
 1115 0244 80BD     		pop	{r7, pc}
 1116              		.cfi_endproc
 1117              	.LFE143:
 1119              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1120              		.align	1
 1121              		.global	HAL_SPI_TransmitReceive
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv4-sp-d16
 1127              	HAL_SPI_TransmitReceive:
 1128              	.LFB144:
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/cczU8NLw.s 			page 36


 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           uint32_t Timeout)
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 1129              		.loc 1 885 0
 1130              		.cfi_startproc
 1131              		@ args = 4, pretend = 0, frame = 40
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0000 80B5     		push	{r7, lr}
 1134              	.LCFI32:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 8AB0     		sub	sp, sp, #40
 1139              	.LCFI33:
 1140              		.cfi_def_cfa_offset 48
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI34:
 1143              		.cfi_def_cfa_register 7
 1144 0006 F860     		str	r0, [r7, #12]
 1145 0008 B960     		str	r1, [r7, #8]
 1146 000a 7A60     		str	r2, [r7, #4]
 1147 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 1148              		.loc 1 886 0
 1149 000e 0023     		movs	r3, #0
 1150 0010 FB61     		str	r3, [r7, #28]
 1151 0012 0023     		movs	r3, #0
 1152 0014 BB61     		str	r3, [r7, #24]
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 1153              		.loc 1 890 0
 1154 0016 0023     		movs	r3, #0
 1155 0018 7B61     		str	r3, [r7, #20]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t txallowed = 1U;
 1156              		.loc 1 892 0
 1157 001a 0123     		movs	r3, #1
 1158 001c 7B62     		str	r3, [r7, #36]
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1159              		.loc 1 893 0
 1160 001e 0023     		movs	r3, #0
 1161 0020 87F82330 		strb	r3, [r7, #35]
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1162              		.loc 1 899 0
ARM GAS  /tmp/cczU8NLw.s 			page 37


 1163 0024 FB68     		ldr	r3, [r7, #12]
 1164 0026 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1165 002a 012B     		cmp	r3, #1
 1166 002c 01D1     		bne	.L64
 1167              		.loc 1 899 0 is_stmt 0 discriminator 1
 1168 002e 0223     		movs	r3, #2
 1169 0030 CEE1     		b	.L65
 1170              	.L64:
 1171              		.loc 1 899 0 discriminator 2
 1172 0032 FB68     		ldr	r3, [r7, #12]
 1173 0034 0122     		movs	r2, #1
 1174 0036 83F85C20 		strb	r2, [r3, #92]
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1175              		.loc 1 902 0 is_stmt 1 discriminator 2
 1176 003a FFF7FEFF 		bl	HAL_GetTick
 1177 003e 7861     		str	r0, [r7, #20]
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp  = hspi->State;
 1178              		.loc 1 904 0 discriminator 2
 1179 0040 FB68     		ldr	r3, [r7, #12]
 1180 0042 93F85D30 		ldrb	r3, [r3, #93]
 1181 0046 DBB2     		uxtb	r3, r3
 1182 0048 FB61     		str	r3, [r7, #28]
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 1183              		.loc 1 905 0 discriminator 2
 1184 004a FB68     		ldr	r3, [r7, #12]
 1185 004c 5B68     		ldr	r3, [r3, #4]
 1186 004e BB61     		str	r3, [r7, #24]
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp == HAL_SPI_STATE_READY) || \
 1187              		.loc 1 907 0 discriminator 2
 1188 0050 FB69     		ldr	r3, [r7, #28]
 1189 0052 012B     		cmp	r3, #1
 1190 0054 0ED0     		beq	.L66
 1191              		.loc 1 907 0 is_stmt 0 discriminator 1
 1192 0056 BB69     		ldr	r3, [r7, #24]
 1193 0058 B3F5827F 		cmp	r3, #260
 1194 005c 06D1     		bne	.L67
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL
 1195              		.loc 1 908 0 is_stmt 1
 1196 005e FB68     		ldr	r3, [r7, #12]
 1197 0060 9B68     		ldr	r3, [r3, #8]
 1198 0062 002B     		cmp	r3, #0
 1199 0064 02D1     		bne	.L67
 1200              		.loc 1 908 0 is_stmt 0 discriminator 1
 1201 0066 FB69     		ldr	r3, [r7, #28]
 1202 0068 042B     		cmp	r3, #4
 1203 006a 03D0     		beq	.L66
 1204              	.L67:
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1205              		.loc 1 910 0 is_stmt 1
 1206 006c 0223     		movs	r3, #2
 1207 006e 87F82330 		strb	r3, [r7, #35]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/cczU8NLw.s 			page 38


 1208              		.loc 1 911 0
 1209 0072 A3E1     		b	.L68
 1210              	.L66:
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 1211              		.loc 1 914 0
 1212 0074 BB68     		ldr	r3, [r7, #8]
 1213 0076 002B     		cmp	r3, #0
 1214 0078 05D0     		beq	.L69
 1215              		.loc 1 914 0 is_stmt 0 discriminator 1
 1216 007a 7B68     		ldr	r3, [r7, #4]
 1217 007c 002B     		cmp	r3, #0
 1218 007e 02D0     		beq	.L69
 1219              		.loc 1 914 0 discriminator 2
 1220 0080 7B88     		ldrh	r3, [r7, #2]
 1221 0082 002B     		cmp	r3, #0
 1222 0084 03D1     		bne	.L70
 1223              	.L69:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1224              		.loc 1 916 0 is_stmt 1
 1225 0086 0123     		movs	r3, #1
 1226 0088 87F82330 		strb	r3, [r7, #35]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1227              		.loc 1 917 0
 1228 008c 96E1     		b	.L68
 1229              	.L70:
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 1230              		.loc 1 921 0
 1231 008e FB68     		ldr	r3, [r7, #12]
 1232 0090 93F85D30 		ldrb	r3, [r3, #93]
 1233 0094 DBB2     		uxtb	r3, r3
 1234 0096 042B     		cmp	r3, #4
 1235 0098 03D0     		beq	.L71
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1236              		.loc 1 923 0
 1237 009a FB68     		ldr	r3, [r7, #12]
 1238 009c 0522     		movs	r2, #5
 1239 009e 83F85D20 		strb	r2, [r3, #93]
 1240              	.L71:
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1241              		.loc 1 927 0
 1242 00a2 FB68     		ldr	r3, [r7, #12]
 1243 00a4 0022     		movs	r2, #0
 1244 00a6 1A66     		str	r2, [r3, #96]
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1245              		.loc 1 928 0
 1246 00a8 FB68     		ldr	r3, [r7, #12]
 1247 00aa 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 39


 1248 00ac 1A64     		str	r2, [r3, #64]
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1249              		.loc 1 929 0
 1250 00ae FB68     		ldr	r3, [r7, #12]
 1251 00b0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1252 00b2 A3F84620 		strh	r2, [r3, #70]	@ movhi
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1253              		.loc 1 930 0
 1254 00b6 FB68     		ldr	r3, [r7, #12]
 1255 00b8 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1256 00ba A3F84420 		strh	r2, [r3, #68]	@ movhi
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1257              		.loc 1 931 0
 1258 00be FB68     		ldr	r3, [r7, #12]
 1259 00c0 BA68     		ldr	r2, [r7, #8]
 1260 00c2 9A63     		str	r2, [r3, #56]
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1261              		.loc 1 932 0
 1262 00c4 FB68     		ldr	r3, [r7, #12]
 1263 00c6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1264 00c8 DA87     		strh	r2, [r3, #62]	@ movhi
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1265              		.loc 1 933 0
 1266 00ca FB68     		ldr	r3, [r7, #12]
 1267 00cc 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1268 00ce 9A87     		strh	r2, [r3, #60]	@ movhi
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1269              		.loc 1 936 0
 1270 00d0 FB68     		ldr	r3, [r7, #12]
 1271 00d2 0022     		movs	r2, #0
 1272 00d4 DA64     		str	r2, [r3, #76]
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1273              		.loc 1 937 0
 1274 00d6 FB68     		ldr	r3, [r7, #12]
 1275 00d8 0022     		movs	r2, #0
 1276 00da 1A65     		str	r2, [r3, #80]
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (hspi->RxXferCount > 1))
 1277              		.loc 1 948 0
 1278 00dc FB68     		ldr	r3, [r7, #12]
 1279 00de DB68     		ldr	r3, [r3, #12]
 1280 00e0 B3F5E06F 		cmp	r3, #1792
 1281 00e4 05D8     		bhi	.L72
 1282              		.loc 1 948 0 is_stmt 0 discriminator 1
 1283 00e6 FB68     		ldr	r3, [r7, #12]
 1284 00e8 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
ARM GAS  /tmp/cczU8NLw.s 			page 40


 1285 00ec 9BB2     		uxth	r3, r3
 1286 00ee 012B     		cmp	r3, #1
 1287 00f0 08D9     		bls	.L73
 1288              	.L72:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1289              		.loc 1 951 0 is_stmt 1
 1290 00f2 FB68     		ldr	r3, [r7, #12]
 1291 00f4 1B68     		ldr	r3, [r3]
 1292 00f6 5A68     		ldr	r2, [r3, #4]
 1293 00f8 FB68     		ldr	r3, [r7, #12]
 1294 00fa 1B68     		ldr	r3, [r3]
 1295 00fc 22F48052 		bic	r2, r2, #4096
 1296 0100 5A60     		str	r2, [r3, #4]
 1297 0102 07E0     		b	.L74
 1298              	.L73:
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1299              		.loc 1 956 0
 1300 0104 FB68     		ldr	r3, [r7, #12]
 1301 0106 1B68     		ldr	r3, [r3]
 1302 0108 5A68     		ldr	r2, [r3, #4]
 1303 010a FB68     		ldr	r3, [r7, #12]
 1304 010c 1B68     		ldr	r3, [r3]
 1305 010e 42F48052 		orr	r2, r2, #4096
 1306 0112 5A60     		str	r2, [r3, #4]
 1307              	.L74:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1308              		.loc 1 960 0
 1309 0114 FB68     		ldr	r3, [r7, #12]
 1310 0116 1B68     		ldr	r3, [r3]
 1311 0118 1B68     		ldr	r3, [r3]
 1312 011a 03F04003 		and	r3, r3, #64
 1313 011e 402B     		cmp	r3, #64
 1314 0120 07D0     		beq	.L75
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1315              		.loc 1 963 0
 1316 0122 FB68     		ldr	r3, [r7, #12]
 1317 0124 1B68     		ldr	r3, [r3]
 1318 0126 1A68     		ldr	r2, [r3]
 1319 0128 FB68     		ldr	r3, [r7, #12]
 1320 012a 1B68     		ldr	r3, [r3]
 1321 012c 42F04002 		orr	r2, r2, #64
 1322 0130 1A60     		str	r2, [r3]
 1323              	.L75:
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
ARM GAS  /tmp/cczU8NLw.s 			page 41


 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1324              		.loc 1 967 0
 1325 0132 FB68     		ldr	r3, [r7, #12]
 1326 0134 DB68     		ldr	r3, [r3, #12]
 1327 0136 B3F5E06F 		cmp	r3, #1792
 1328 013a 75D9     		bls	.L76
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01))
 1329              		.loc 1 969 0
 1330 013c FB68     		ldr	r3, [r7, #12]
 1331 013e 5B68     		ldr	r3, [r3, #4]
 1332 0140 002B     		cmp	r3, #0
 1333 0142 04D0     		beq	.L77
 1334              		.loc 1 969 0 is_stmt 0 discriminator 1
 1335 0144 FB68     		ldr	r3, [r7, #12]
 1336 0146 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1337 0148 9BB2     		uxth	r3, r3
 1338 014a 012B     		cmp	r3, #1
 1339 014c 60D1     		bne	.L79
 1340              	.L77:
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)pTxData);
 1341              		.loc 1 971 0 is_stmt 1
 1342 014e BB68     		ldr	r3, [r7, #8]
 1343 0150 1A88     		ldrh	r2, [r3]
 1344 0152 FB68     		ldr	r3, [r7, #12]
 1345 0154 1B68     		ldr	r3, [r3]
 1346 0156 DA60     		str	r2, [r3, #12]
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       pTxData += sizeof(uint16_t);
 1347              		.loc 1 972 0
 1348 0158 BB68     		ldr	r3, [r7, #8]
 1349 015a 0233     		adds	r3, r3, #2
 1350 015c BB60     		str	r3, [r7, #8]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1351              		.loc 1 973 0
 1352 015e FB68     		ldr	r3, [r7, #12]
 1353 0160 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1354 0162 9BB2     		uxth	r3, r3
 1355 0164 013B     		subs	r3, r3, #1
 1356 0166 9AB2     		uxth	r2, r3
 1357 0168 FB68     		ldr	r3, [r7, #12]
 1358 016a DA87     		strh	r2, [r3, #62]	@ movhi
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1359              		.loc 1 975 0
 1360 016c 50E0     		b	.L79
 1361              	.L82:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check TXE flag */
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (txallowed && (hspi->TxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)))
 1362              		.loc 1 978 0
 1363 016e 7B6A     		ldr	r3, [r7, #36]
 1364 0170 002B     		cmp	r3, #0
 1365 0172 1CD0     		beq	.L80
 1366              		.loc 1 978 0 is_stmt 0 discriminator 1
 1367 0174 FB68     		ldr	r3, [r7, #12]
 1368 0176 DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/cczU8NLw.s 			page 42


 1369 0178 9BB2     		uxth	r3, r3
 1370 017a 002B     		cmp	r3, #0
 1371 017c 17D0     		beq	.L80
 1372              		.loc 1 978 0 discriminator 2
 1373 017e FB68     		ldr	r3, [r7, #12]
 1374 0180 1B68     		ldr	r3, [r3]
 1375 0182 9B68     		ldr	r3, [r3, #8]
 1376 0184 03F00203 		and	r3, r3, #2
 1377 0188 022B     		cmp	r3, #2
 1378 018a 10D1     		bne	.L80
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)pTxData);
 1379              		.loc 1 980 0 is_stmt 1
 1380 018c BB68     		ldr	r3, [r7, #8]
 1381 018e 1A88     		ldrh	r2, [r3]
 1382 0190 FB68     		ldr	r3, [r7, #12]
 1383 0192 1B68     		ldr	r3, [r3]
 1384 0194 DA60     		str	r2, [r3, #12]
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pTxData += sizeof(uint16_t);
 1385              		.loc 1 981 0
 1386 0196 BB68     		ldr	r3, [r7, #8]
 1387 0198 0233     		adds	r3, r3, #2
 1388 019a BB60     		str	r3, [r7, #8]
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1389              		.loc 1 982 0
 1390 019c FB68     		ldr	r3, [r7, #12]
 1391 019e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1392 01a0 9BB2     		uxth	r3, r3
 1393 01a2 013B     		subs	r3, r3, #1
 1394 01a4 9AB2     		uxth	r2, r3
 1395 01a6 FB68     		ldr	r3, [r7, #12]
 1396 01a8 DA87     		strh	r2, [r3, #62]	@ movhi
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
 1397              		.loc 1 984 0
 1398 01aa 0023     		movs	r3, #0
 1399 01ac 7B62     		str	r3, [r7, #36]
 1400              	.L80:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (((hspi->Instance->CR1 & SPI_CR1_MSTR) == 0U) && ((hspi->Instance->CR2 & SPI_CR2_NSSP)
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check RXNE flag */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)))
 1401              		.loc 1 1001 0
 1402 01ae FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 43


 1403 01b0 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1404 01b4 9BB2     		uxth	r3, r3
 1405 01b6 002B     		cmp	r3, #0
 1406 01b8 1AD0     		beq	.L81
 1407              		.loc 1 1001 0 is_stmt 0 discriminator 1
 1408 01ba FB68     		ldr	r3, [r7, #12]
 1409 01bc 1B68     		ldr	r3, [r3]
 1410 01be 9B68     		ldr	r3, [r3, #8]
 1411 01c0 03F00103 		and	r3, r3, #1
 1412 01c4 012B     		cmp	r3, #1
 1413 01c6 13D1     		bne	.L81
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)pRxData) = hspi->Instance->DR;
 1414              		.loc 1 1003 0 is_stmt 1
 1415 01c8 FB68     		ldr	r3, [r7, #12]
 1416 01ca 1B68     		ldr	r3, [r3]
 1417 01cc DB68     		ldr	r3, [r3, #12]
 1418 01ce 9AB2     		uxth	r2, r3
 1419 01d0 7B68     		ldr	r3, [r7, #4]
 1420 01d2 1A80     		strh	r2, [r3]	@ movhi
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         pRxData += sizeof(uint16_t);
 1421              		.loc 1 1004 0
 1422 01d4 7B68     		ldr	r3, [r7, #4]
 1423 01d6 0233     		adds	r3, r3, #2
 1424 01d8 7B60     		str	r3, [r7, #4]
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 1425              		.loc 1 1005 0
 1426 01da FB68     		ldr	r3, [r7, #12]
 1427 01dc B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1428 01e0 9BB2     		uxth	r3, r3
 1429 01e2 013B     		subs	r3, r3, #1
 1430 01e4 9AB2     		uxth	r2, r3
 1431 01e6 FB68     		ldr	r3, [r7, #12]
 1432 01e8 A3F84620 		strh	r2, [r3, #70]	@ movhi
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
 1433              		.loc 1 1007 0
 1434 01ec 0123     		movs	r3, #1
 1435 01ee 7B62     		str	r3, [r7, #36]
 1436              	.L81:
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Timeout))
 1437              		.loc 1 1009 0
 1438 01f0 3B6B     		ldr	r3, [r7, #48]
 1439 01f2 B3F1FF3F 		cmp	r3, #-1
 1440 01f6 0BD0     		beq	.L79
 1441              		.loc 1 1009 0 is_stmt 0 discriminator 1
 1442 01f8 FFF7FEFF 		bl	HAL_GetTick
 1443 01fc 0246     		mov	r2, r0
 1444 01fe 7B69     		ldr	r3, [r7, #20]
 1445 0200 D31A     		subs	r3, r2, r3
 1446 0202 3A6B     		ldr	r2, [r7, #48]
 1447 0204 9A42     		cmp	r2, r3
 1448 0206 03D8     		bhi	.L79
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1449              		.loc 1 1011 0 is_stmt 1
ARM GAS  /tmp/cczU8NLw.s 			page 44


 1450 0208 0323     		movs	r3, #3
 1451 020a 87F82330 		strb	r3, [r7, #35]
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1452              		.loc 1 1012 0
 1453 020e D5E0     		b	.L68
 1454              	.L79:
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1455              		.loc 1 975 0
 1456 0210 FB68     		ldr	r3, [r7, #12]
 1457 0212 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1458 0214 9BB2     		uxth	r3, r3
 1459 0216 002B     		cmp	r3, #0
 1460 0218 A9D1     		bne	.L82
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1461              		.loc 1 975 0 is_stmt 0 discriminator 1
 1462 021a FB68     		ldr	r3, [r7, #12]
 1463 021c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1464 0220 9BB2     		uxth	r3, r3
 1465 0222 002B     		cmp	r3, #0
 1466 0224 A3D1     		bne	.L82
 1467 0226 B5E0     		b	.L83
 1468              	.L76:
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01))
 1469              		.loc 1 1019 0 is_stmt 1
 1470 0228 FB68     		ldr	r3, [r7, #12]
 1471 022a 5B68     		ldr	r3, [r3, #4]
 1472 022c 002B     		cmp	r3, #0
 1473 022e 05D0     		beq	.L84
 1474              		.loc 1 1019 0 is_stmt 0 discriminator 1
 1475 0230 FB68     		ldr	r3, [r7, #12]
 1476 0232 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1477 0234 9BB2     		uxth	r3, r3
 1478 0236 012B     		cmp	r3, #1
 1479 0238 40F09F80 		bne	.L86
 1480              	.L84:
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*pTxData);
 1481              		.loc 1 1021 0 is_stmt 1
 1482 023c FB68     		ldr	r3, [r7, #12]
 1483 023e 1B68     		ldr	r3, [r3]
 1484 0240 0C33     		adds	r3, r3, #12
 1485 0242 BA68     		ldr	r2, [r7, #8]
 1486 0244 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1487 0246 1A70     		strb	r2, [r3]
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       pTxData += sizeof(uint8_t);
 1488              		.loc 1 1022 0
 1489 0248 BB68     		ldr	r3, [r7, #8]
 1490 024a 0133     		adds	r3, r3, #1
 1491 024c BB60     		str	r3, [r7, #8]
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1492              		.loc 1 1023 0
ARM GAS  /tmp/cczU8NLw.s 			page 45


 1493 024e FB68     		ldr	r3, [r7, #12]
 1494 0250 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1495 0252 9BB2     		uxth	r3, r3
 1496 0254 013B     		subs	r3, r3, #1
 1497 0256 9AB2     		uxth	r2, r3
 1498 0258 FB68     		ldr	r3, [r7, #12]
 1499 025a DA87     		strh	r2, [r3, #62]	@ movhi
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1500              		.loc 1 1025 0
 1501 025c 8DE0     		b	.L86
 1502              	.L94:
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* check TXE flag */
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (txallowed && (hspi->TxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)))
 1503              		.loc 1 1028 0
 1504 025e 7B6A     		ldr	r3, [r7, #36]
 1505 0260 002B     		cmp	r3, #0
 1506 0262 31D0     		beq	.L87
 1507              		.loc 1 1028 0 is_stmt 0 discriminator 1
 1508 0264 FB68     		ldr	r3, [r7, #12]
 1509 0266 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1510 0268 9BB2     		uxth	r3, r3
 1511 026a 002B     		cmp	r3, #0
 1512 026c 2CD0     		beq	.L87
 1513              		.loc 1 1028 0 discriminator 2
 1514 026e FB68     		ldr	r3, [r7, #12]
 1515 0270 1B68     		ldr	r3, [r3]
 1516 0272 9B68     		ldr	r3, [r3, #8]
 1517 0274 03F00203 		and	r3, r3, #2
 1518 0278 022B     		cmp	r3, #2
 1519 027a 25D1     		bne	.L87
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 1520              		.loc 1 1030 0 is_stmt 1
 1521 027c FB68     		ldr	r3, [r7, #12]
 1522 027e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1523 0280 9BB2     		uxth	r3, r3
 1524 0282 012B     		cmp	r3, #1
 1525 0284 0FD9     		bls	.L88
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)pTxData);
 1526              		.loc 1 1032 0
 1527 0286 BB68     		ldr	r3, [r7, #8]
 1528 0288 1A88     		ldrh	r2, [r3]
 1529 028a FB68     		ldr	r3, [r7, #12]
 1530 028c 1B68     		ldr	r3, [r3]
 1531 028e DA60     		str	r2, [r3, #12]
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           pTxData += sizeof(uint16_t);
 1532              		.loc 1 1033 0
 1533 0290 BB68     		ldr	r3, [r7, #8]
 1534 0292 0233     		adds	r3, r3, #2
 1535 0294 BB60     		str	r3, [r7, #8]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1536              		.loc 1 1034 0
 1537 0296 FB68     		ldr	r3, [r7, #12]
 1538 0298 DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/cczU8NLw.s 			page 46


 1539 029a 9BB2     		uxth	r3, r3
 1540 029c 023B     		subs	r3, r3, #2
 1541 029e 9AB2     		uxth	r2, r3
 1542 02a0 FB68     		ldr	r3, [r7, #12]
 1543 02a2 DA87     		strh	r2, [r3, #62]	@ movhi
 1544 02a4 0EE0     		b	.L89
 1545              	.L88:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*pTxData++);
 1546              		.loc 1 1038 0
 1547 02a6 BB68     		ldr	r3, [r7, #8]
 1548 02a8 5A1C     		adds	r2, r3, #1
 1549 02aa BA60     		str	r2, [r7, #8]
 1550 02ac FA68     		ldr	r2, [r7, #12]
 1551 02ae 1268     		ldr	r2, [r2]
 1552 02b0 0C32     		adds	r2, r2, #12
 1553 02b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 02b4 1370     		strb	r3, [r2]
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 1555              		.loc 1 1039 0
 1556 02b6 FB68     		ldr	r3, [r7, #12]
 1557 02b8 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1558 02ba 9BB2     		uxth	r3, r3
 1559 02bc 013B     		subs	r3, r3, #1
 1560 02be 9AB2     		uxth	r2, r3
 1561 02c0 FB68     		ldr	r3, [r7, #12]
 1562 02c2 DA87     		strh	r2, [r3, #62]	@ movhi
 1563              	.L89:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
 1564              		.loc 1 1042 0
 1565 02c4 0023     		movs	r3, #0
 1566 02c6 7B62     		str	r3, [r7, #36]
 1567              	.L87:
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (((hspi->Instance->CR1 & SPI_CR1_MSTR) == 0U) && ((hspi->Instance->CR2 & SPI_CR2_NSSP)
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)))
 1568              		.loc 1 1059 0
 1569 02c8 FB68     		ldr	r3, [r7, #12]
 1570 02ca B3F84630 		ldrh	r3, [r3, #70]	@ movhi
ARM GAS  /tmp/cczU8NLw.s 			page 47


 1571 02ce 9BB2     		uxth	r3, r3
 1572 02d0 002B     		cmp	r3, #0
 1573 02d2 42D0     		beq	.L90
 1574              		.loc 1 1059 0 is_stmt 0 discriminator 1
 1575 02d4 FB68     		ldr	r3, [r7, #12]
 1576 02d6 1B68     		ldr	r3, [r3]
 1577 02d8 9B68     		ldr	r3, [r3, #8]
 1578 02da 03F00103 		and	r3, r3, #1
 1579 02de 012B     		cmp	r3, #1
 1580 02e0 3BD1     		bne	.L90
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
 1581              		.loc 1 1061 0 is_stmt 1
 1582 02e2 FB68     		ldr	r3, [r7, #12]
 1583 02e4 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1584 02e8 9BB2     		uxth	r3, r3
 1585 02ea 012B     		cmp	r3, #1
 1586 02ec 20D9     		bls	.L91
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((uint16_t *)pRxData) = hspi->Instance->DR;
 1587              		.loc 1 1063 0
 1588 02ee FB68     		ldr	r3, [r7, #12]
 1589 02f0 1B68     		ldr	r3, [r3]
 1590 02f2 DB68     		ldr	r3, [r3, #12]
 1591 02f4 9AB2     		uxth	r2, r3
 1592 02f6 7B68     		ldr	r3, [r7, #4]
 1593 02f8 1A80     		strh	r2, [r3]	@ movhi
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           pRxData += sizeof(uint16_t);
 1594              		.loc 1 1064 0
 1595 02fa 7B68     		ldr	r3, [r7, #4]
 1596 02fc 0233     		adds	r3, r3, #2
 1597 02fe 7B60     		str	r3, [r7, #4]
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1598              		.loc 1 1065 0
 1599 0300 FB68     		ldr	r3, [r7, #12]
 1600 0302 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1601 0306 9BB2     		uxth	r3, r3
 1602 0308 023B     		subs	r3, r3, #2
 1603 030a 9AB2     		uxth	r2, r3
 1604 030c FB68     		ldr	r3, [r7, #12]
 1605 030e A3F84620 		strh	r2, [r3, #70]	@ movhi
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1606              		.loc 1 1066 0
 1607 0312 FB68     		ldr	r3, [r7, #12]
 1608 0314 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1609 0318 9BB2     		uxth	r3, r3
 1610 031a 012B     		cmp	r3, #1
 1611 031c 1BD8     		bhi	.L93
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* set fiforxthreshold before to switch on 8 bit data size */
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1612              		.loc 1 1069 0
 1613 031e FB68     		ldr	r3, [r7, #12]
 1614 0320 1B68     		ldr	r3, [r3]
 1615 0322 5A68     		ldr	r2, [r3, #4]
 1616 0324 FB68     		ldr	r3, [r7, #12]
 1617 0326 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 48


 1618 0328 42F48052 		orr	r2, r2, #4096
 1619 032c 5A60     		str	r2, [r3, #4]
 1620 032e 12E0     		b	.L93
 1621              	.L91:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (*pRxData++) = *(__IO uint8_t *)&hspi->Instance->DR;
 1622              		.loc 1 1074 0
 1623 0330 FB68     		ldr	r3, [r7, #12]
 1624 0332 1B68     		ldr	r3, [r3]
 1625 0334 03F10C02 		add	r2, r3, #12
 1626 0338 7B68     		ldr	r3, [r7, #4]
 1627 033a 591C     		adds	r1, r3, #1
 1628 033c 7960     		str	r1, [r7, #4]
 1629 033e 1278     		ldrb	r2, [r2]
 1630 0340 D2B2     		uxtb	r2, r2
 1631 0342 1A70     		strb	r2, [r3]
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount--;
 1632              		.loc 1 1075 0
 1633 0344 FB68     		ldr	r3, [r7, #12]
 1634 0346 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1635 034a 9BB2     		uxth	r3, r3
 1636 034c 013B     		subs	r3, r3, #1
 1637 034e 9AB2     		uxth	r2, r3
 1638 0350 FB68     		ldr	r3, [r7, #12]
 1639 0352 A3F84620 		strh	r2, [r3, #70]	@ movhi
 1640              	.L93:
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
 1641              		.loc 1 1078 0
 1642 0356 0123     		movs	r3, #1
 1643 0358 7B62     		str	r3, [r7, #36]
 1644              	.L90:
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick() - tickstart) >=  Timeout))
 1645              		.loc 1 1080 0
 1646 035a 3B6B     		ldr	r3, [r7, #48]
 1647 035c B3F1FF3F 		cmp	r3, #-1
 1648 0360 0BD0     		beq	.L86
 1649              		.loc 1 1080 0 is_stmt 0 discriminator 1
 1650 0362 FFF7FEFF 		bl	HAL_GetTick
 1651 0366 0246     		mov	r2, r0
 1652 0368 7B69     		ldr	r3, [r7, #20]
 1653 036a D31A     		subs	r3, r2, r3
 1654 036c 3A6B     		ldr	r2, [r7, #48]
 1655 036e 9A42     		cmp	r2, r3
 1656 0370 03D8     		bhi	.L86
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1657              		.loc 1 1082 0 is_stmt 1
 1658 0372 0323     		movs	r3, #3
 1659 0374 87F82330 		strb	r3, [r7, #35]
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1660              		.loc 1 1083 0
ARM GAS  /tmp/cczU8NLw.s 			page 49


 1661 0378 20E0     		b	.L68
 1662              	.L86:
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1663              		.loc 1 1025 0
 1664 037a FB68     		ldr	r3, [r7, #12]
 1665 037c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1666 037e 9BB2     		uxth	r3, r3
 1667 0380 002B     		cmp	r3, #0
 1668 0382 7FF46CAF 		bne	.L94
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1669              		.loc 1 1025 0 is_stmt 0 discriminator 1
 1670 0386 FB68     		ldr	r3, [r7, #12]
 1671 0388 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1672 038c 9BB2     		uxth	r3, r3
 1673 038e 002B     		cmp	r3, #0
 1674 0390 7FF465AF 		bne	.L94
 1675              	.L83:
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait until TXE flag */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Error on the CRC reception */
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
ARM GAS  /tmp/cczU8NLw.s 			page 50


1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear CRC Flag */
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1676              		.loc 1 1141 0 is_stmt 1
 1677 0394 7A69     		ldr	r2, [r7, #20]
 1678 0396 396B     		ldr	r1, [r7, #48]
 1679 0398 F868     		ldr	r0, [r7, #12]
 1680 039a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1681 039e 0346     		mov	r3, r0
 1682 03a0 002B     		cmp	r3, #0
 1683 03a2 02D0     		beq	.L95
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1684              		.loc 1 1143 0
 1685 03a4 FB68     		ldr	r3, [r7, #12]
 1686 03a6 2022     		movs	r2, #32
 1687 03a8 1A66     		str	r2, [r3, #96]
 1688              	.L95:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1689              		.loc 1 1146 0
 1690 03aa FB68     		ldr	r3, [r7, #12]
 1691 03ac 1B6E     		ldr	r3, [r3, #96]
 1692 03ae 002B     		cmp	r3, #0
 1693 03b0 03D0     		beq	.L96
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1694              		.loc 1 1148 0
 1695 03b2 0123     		movs	r3, #1
 1696 03b4 87F82330 		strb	r3, [r7, #35]
 1697 03b8 00E0     		b	.L68
 1698              	.L96:
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
 1699              		.loc 1 1151 0
 1700 03ba 00BF     		nop
 1701              	.L68:
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1702              		.loc 1 1152 0
 1703 03bc FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 51


 1704 03be 0122     		movs	r2, #1
 1705 03c0 83F85D20 		strb	r2, [r3, #93]
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1706              		.loc 1 1153 0
 1707 03c4 FB68     		ldr	r3, [r7, #12]
 1708 03c6 0022     		movs	r2, #0
 1709 03c8 83F85C20 		strb	r2, [r3, #92]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1710              		.loc 1 1154 0
 1711 03cc 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1712              	.L65:
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1713              		.loc 1 1155 0
 1714 03d0 1846     		mov	r0, r3
 1715 03d2 2837     		adds	r7, r7, #40
 1716              	.LCFI35:
 1717              		.cfi_def_cfa_offset 8
 1718 03d4 BD46     		mov	sp, r7
 1719              	.LCFI36:
 1720              		.cfi_def_cfa_register 13
 1721              		@ sp needed
 1722 03d6 80BD     		pop	{r7, pc}
 1723              		.cfi_endproc
 1724              	.LFE144:
 1726              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1727              		.align	1
 1728              		.global	HAL_SPI_Transmit_IT
 1729              		.syntax unified
 1730              		.thumb
 1731              		.thumb_func
 1732              		.fpu fpv4-sp-d16
 1734              	HAL_SPI_Transmit_IT:
 1735              	.LFB145:
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 1736              		.loc 1 1166 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 24
 1739              		@ frame_needed = 1, uses_anonymous_args = 0
 1740              		@ link register save eliminated.
 1741 0000 80B4     		push	{r7}
 1742              	.LCFI37:
 1743              		.cfi_def_cfa_offset 4
 1744              		.cfi_offset 7, -4
 1745 0002 87B0     		sub	sp, sp, #28
 1746              	.LCFI38:
 1747              		.cfi_def_cfa_offset 32
 1748 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cczU8NLw.s 			page 52


 1749              	.LCFI39:
 1750              		.cfi_def_cfa_register 7
 1751 0006 F860     		str	r0, [r7, #12]
 1752 0008 B960     		str	r1, [r7, #8]
 1753 000a 1346     		mov	r3, r2
 1754 000c FB80     		strh	r3, [r7, #6]	@ movhi
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1755              		.loc 1 1167 0
 1756 000e 0023     		movs	r3, #0
 1757 0010 FB75     		strb	r3, [r7, #23]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1758              		.loc 1 1173 0
 1759 0012 FB68     		ldr	r3, [r7, #12]
 1760 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1761 0018 012B     		cmp	r3, #1
 1762 001a 01D1     		bne	.L98
 1763              		.loc 1 1173 0 is_stmt 0 discriminator 1
 1764 001c 0223     		movs	r3, #2
 1765 001e 6AE0     		b	.L99
 1766              	.L98:
 1767              		.loc 1 1173 0 discriminator 2
 1768 0020 FB68     		ldr	r3, [r7, #12]
 1769 0022 0122     		movs	r2, #1
 1770 0024 83F85C20 		strb	r2, [r3, #92]
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 1771              		.loc 1 1175 0 is_stmt 1 discriminator 2
 1772 0028 BB68     		ldr	r3, [r7, #8]
 1773 002a 002B     		cmp	r3, #0
 1774 002c 02D0     		beq	.L100
 1775              		.loc 1 1175 0 is_stmt 0 discriminator 1
 1776 002e FB88     		ldrh	r3, [r7, #6]
 1777 0030 002B     		cmp	r3, #0
 1778 0032 02D1     		bne	.L101
 1779              	.L100:
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1780              		.loc 1 1177 0 is_stmt 1
 1781 0034 0123     		movs	r3, #1
 1782 0036 FB75     		strb	r3, [r7, #23]
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1783              		.loc 1 1178 0
 1784 0038 58E0     		b	.L102
 1785              	.L101:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1786              		.loc 1 1181 0
 1787 003a FB68     		ldr	r3, [r7, #12]
 1788 003c 93F85D30 		ldrb	r3, [r3, #93]
 1789 0040 DBB2     		uxtb	r3, r3
 1790 0042 012B     		cmp	r3, #1
ARM GAS  /tmp/cczU8NLw.s 			page 53


 1791 0044 02D0     		beq	.L103
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1792              		.loc 1 1183 0
 1793 0046 0223     		movs	r3, #2
 1794 0048 FB75     		strb	r3, [r7, #23]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1795              		.loc 1 1184 0
 1796 004a 4FE0     		b	.L102
 1797              	.L103:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 1798              		.loc 1 1188 0
 1799 004c FB68     		ldr	r3, [r7, #12]
 1800 004e 0322     		movs	r2, #3
 1801 0050 83F85D20 		strb	r2, [r3, #93]
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1802              		.loc 1 1189 0
 1803 0054 FB68     		ldr	r3, [r7, #12]
 1804 0056 0022     		movs	r2, #0
 1805 0058 1A66     		str	r2, [r3, #96]
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1806              		.loc 1 1190 0
 1807 005a FB68     		ldr	r3, [r7, #12]
 1808 005c BA68     		ldr	r2, [r7, #8]
 1809 005e 9A63     		str	r2, [r3, #56]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1810              		.loc 1 1191 0
 1811 0060 FB68     		ldr	r3, [r7, #12]
 1812 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1813 0064 9A87     		strh	r2, [r3, #60]	@ movhi
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1814              		.loc 1 1192 0
 1815 0066 FB68     		ldr	r3, [r7, #12]
 1816 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1817 006a DA87     		strh	r2, [r3, #62]	@ movhi
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 1818              		.loc 1 1195 0
 1819 006c FB68     		ldr	r3, [r7, #12]
 1820 006e 0022     		movs	r2, #0
 1821 0070 1A64     		str	r2, [r3, #64]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1822              		.loc 1 1196 0
 1823 0072 FB68     		ldr	r3, [r7, #12]
 1824 0074 0022     		movs	r2, #0
 1825 0076 A3F84420 		strh	r2, [r3, #68]	@ movhi
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1826              		.loc 1 1197 0
 1827 007a FB68     		ldr	r3, [r7, #12]
 1828 007c 0022     		movs	r2, #0
 1829 007e A3F84620 		strh	r2, [r3, #70]	@ movhi
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1830              		.loc 1 1198 0
ARM GAS  /tmp/cczU8NLw.s 			page 54


 1831 0082 FB68     		ldr	r3, [r7, #12]
 1832 0084 0022     		movs	r2, #0
 1833 0086 DA64     		str	r2, [r3, #76]
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1834              		.loc 1 1201 0
 1835 0088 FB68     		ldr	r3, [r7, #12]
 1836 008a DB68     		ldr	r3, [r3, #12]
 1837 008c B3F5E06F 		cmp	r3, #1792
 1838 0090 03D9     		bls	.L104
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
 1839              		.loc 1 1203 0
 1840 0092 FB68     		ldr	r3, [r7, #12]
 1841 0094 1B4A     		ldr	r2, .L108
 1842 0096 1A65     		str	r2, [r3, #80]
 1843 0098 02E0     		b	.L105
 1844              	.L104:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
 1845              		.loc 1 1207 0
 1846 009a FB68     		ldr	r3, [r7, #12]
 1847 009c 1A4A     		ldr	r2, .L108+4
 1848 009e 1A65     		str	r2, [r3, #80]
 1849              	.L105:
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1850              		.loc 1 1211 0
 1851 00a0 FB68     		ldr	r3, [r7, #12]
 1852 00a2 9B68     		ldr	r3, [r3, #8]
 1853 00a4 B3F5004F 		cmp	r3, #32768
 1854 00a8 07D1     		bne	.L106
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 1855              		.loc 1 1213 0
 1856 00aa FB68     		ldr	r3, [r7, #12]
 1857 00ac 1B68     		ldr	r3, [r3]
 1858 00ae 1A68     		ldr	r2, [r3]
 1859 00b0 FB68     		ldr	r3, [r7, #12]
 1860 00b2 1B68     		ldr	r3, [r3]
 1861 00b4 42F48042 		orr	r2, r2, #16384
 1862 00b8 1A60     		str	r2, [r3]
 1863              	.L106:
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/cczU8NLw.s 			page 55


1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 1864              		.loc 1 1225 0
 1865 00ba FB68     		ldr	r3, [r7, #12]
 1866 00bc 1B68     		ldr	r3, [r3]
 1867 00be 5A68     		ldr	r2, [r3, #4]
 1868 00c0 FB68     		ldr	r3, [r7, #12]
 1869 00c2 1B68     		ldr	r3, [r3]
 1870 00c4 42F0A002 		orr	r2, r2, #160
 1871 00c8 5A60     		str	r2, [r3, #4]
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1872              		.loc 1 1229 0
 1873 00ca FB68     		ldr	r3, [r7, #12]
 1874 00cc 1B68     		ldr	r3, [r3]
 1875 00ce 1B68     		ldr	r3, [r3]
 1876 00d0 03F04003 		and	r3, r3, #64
 1877 00d4 402B     		cmp	r3, #64
 1878 00d6 08D0     		beq	.L107
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1879              		.loc 1 1232 0
 1880 00d8 FB68     		ldr	r3, [r7, #12]
 1881 00da 1B68     		ldr	r3, [r3]
 1882 00dc 1A68     		ldr	r2, [r3]
 1883 00de FB68     		ldr	r3, [r7, #12]
 1884 00e0 1B68     		ldr	r3, [r3]
 1885 00e2 42F04002 		orr	r2, r2, #64
 1886 00e6 1A60     		str	r2, [r3]
 1887 00e8 00E0     		b	.L102
 1888              	.L107:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
 1889              		.loc 1 1235 0
 1890 00ea 00BF     		nop
 1891              	.L102:
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1892              		.loc 1 1236 0
 1893 00ec FB68     		ldr	r3, [r7, #12]
 1894 00ee 0022     		movs	r2, #0
 1895 00f0 83F85C20 		strb	r2, [r3, #92]
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1896              		.loc 1 1237 0
 1897 00f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1898              	.L99:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1899              		.loc 1 1238 0
 1900 00f6 1846     		mov	r0, r3
 1901 00f8 1C37     		adds	r7, r7, #28
 1902              	.LCFI40:
 1903              		.cfi_def_cfa_offset 4
 1904 00fa BD46     		mov	sp, r7
ARM GAS  /tmp/cczU8NLw.s 			page 56


 1905              	.LCFI41:
 1906              		.cfi_def_cfa_register 13
 1907              		@ sp needed
 1908 00fc 5DF8047B 		ldr	r7, [sp], #4
 1909              	.LCFI42:
 1910              		.cfi_restore 7
 1911              		.cfi_def_cfa_offset 0
 1912 0100 7047     		bx	lr
 1913              	.L109:
 1914 0102 00BF     		.align	2
 1915              	.L108:
 1916 0104 00000000 		.word	SPI_TxISR_16BIT
 1917 0108 00000000 		.word	SPI_TxISR_8BIT
 1918              		.cfi_endproc
 1919              	.LFE145:
 1921              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 1922              		.align	1
 1923              		.global	HAL_SPI_Receive_IT
 1924              		.syntax unified
 1925              		.thumb
 1926              		.thumb_func
 1927              		.fpu fpv4-sp-d16
 1929              	HAL_SPI_Receive_IT:
 1930              	.LFB146:
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 1931              		.loc 1 1249 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 24
 1934              		@ frame_needed = 1, uses_anonymous_args = 0
 1935 0000 80B5     		push	{r7, lr}
 1936              	.LCFI43:
 1937              		.cfi_def_cfa_offset 8
 1938              		.cfi_offset 7, -8
 1939              		.cfi_offset 14, -4
 1940 0002 86B0     		sub	sp, sp, #24
 1941              	.LCFI44:
 1942              		.cfi_def_cfa_offset 32
 1943 0004 00AF     		add	r7, sp, #0
 1944              	.LCFI45:
 1945              		.cfi_def_cfa_register 7
 1946 0006 F860     		str	r0, [r7, #12]
 1947 0008 B960     		str	r1, [r7, #8]
 1948 000a 1346     		mov	r3, r2
 1949 000c FB80     		strh	r3, [r7, #6]	@ movhi
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1950              		.loc 1 1250 0
 1951 000e 0023     		movs	r3, #0
ARM GAS  /tmp/cczU8NLw.s 			page 57


 1952 0010 FB75     		strb	r3, [r7, #23]
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 1953              		.loc 1 1252 0
 1954 0012 FB68     		ldr	r3, [r7, #12]
 1955 0014 9B68     		ldr	r3, [r3, #8]
 1956 0016 002B     		cmp	r3, #0
 1957 0018 10D1     		bne	.L111
 1958              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1959 001a FB68     		ldr	r3, [r7, #12]
 1960 001c 5B68     		ldr	r3, [r3, #4]
 1961 001e B3F5827F 		cmp	r3, #260
 1962 0022 0BD1     		bne	.L111
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 1963              		.loc 1 1254 0 is_stmt 1
 1964 0024 FB68     		ldr	r3, [r7, #12]
 1965 0026 0422     		movs	r2, #4
 1966 0028 83F85D20 		strb	r2, [r3, #93]
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 1967              		.loc 1 1256 0
 1968 002c FB88     		ldrh	r3, [r7, #6]
 1969 002e BA68     		ldr	r2, [r7, #8]
 1970 0030 B968     		ldr	r1, [r7, #8]
 1971 0032 F868     		ldr	r0, [r7, #12]
 1972 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 1973 0038 0346     		mov	r3, r0
 1974 003a 81E0     		b	.L112
 1975              	.L111:
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1976              		.loc 1 1260 0
 1977 003c FB68     		ldr	r3, [r7, #12]
 1978 003e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1979 0042 012B     		cmp	r3, #1
 1980 0044 01D1     		bne	.L113
 1981              		.loc 1 1260 0 is_stmt 0 discriminator 1
 1982 0046 0223     		movs	r3, #2
 1983 0048 7AE0     		b	.L112
 1984              	.L113:
 1985              		.loc 1 1260 0 discriminator 2
 1986 004a FB68     		ldr	r3, [r7, #12]
 1987 004c 0122     		movs	r2, #1
 1988 004e 83F85C20 		strb	r2, [r3, #92]
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1989              		.loc 1 1262 0 is_stmt 1 discriminator 2
 1990 0052 FB68     		ldr	r3, [r7, #12]
 1991 0054 93F85D30 		ldrb	r3, [r3, #93]
 1992 0058 DBB2     		uxtb	r3, r3
 1993 005a 012B     		cmp	r3, #1
 1994 005c 02D0     		beq	.L114
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
ARM GAS  /tmp/cczU8NLw.s 			page 58


 1995              		.loc 1 1264 0
 1996 005e 0223     		movs	r3, #2
 1997 0060 FB75     		strb	r3, [r7, #23]
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1998              		.loc 1 1265 0
 1999 0062 68E0     		b	.L115
 2000              	.L114:
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2001              		.loc 1 1268 0
 2002 0064 BB68     		ldr	r3, [r7, #8]
 2003 0066 002B     		cmp	r3, #0
 2004 0068 02D0     		beq	.L116
 2005              		.loc 1 1268 0 is_stmt 0 discriminator 1
 2006 006a FB88     		ldrh	r3, [r7, #6]
 2007 006c 002B     		cmp	r3, #0
 2008 006e 02D1     		bne	.L117
 2009              	.L116:
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2010              		.loc 1 1270 0 is_stmt 1
 2011 0070 0123     		movs	r3, #1
 2012 0072 FB75     		strb	r3, [r7, #23]
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2013              		.loc 1 1271 0
 2014 0074 5FE0     		b	.L115
 2015              	.L117:
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2016              		.loc 1 1275 0
 2017 0076 FB68     		ldr	r3, [r7, #12]
 2018 0078 0422     		movs	r2, #4
 2019 007a 83F85D20 		strb	r2, [r3, #93]
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2020              		.loc 1 1276 0
 2021 007e FB68     		ldr	r3, [r7, #12]
 2022 0080 0022     		movs	r2, #0
 2023 0082 1A66     		str	r2, [r3, #96]
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2024              		.loc 1 1277 0
 2025 0084 FB68     		ldr	r3, [r7, #12]
 2026 0086 BA68     		ldr	r2, [r7, #8]
 2027 0088 1A64     		str	r2, [r3, #64]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2028              		.loc 1 1278 0
 2029 008a FB68     		ldr	r3, [r7, #12]
 2030 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2031 008e A3F84420 		strh	r2, [r3, #68]	@ movhi
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2032              		.loc 1 1279 0
 2033 0092 FB68     		ldr	r3, [r7, #12]
 2034 0094 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2035 0096 A3F84620 		strh	r2, [r3, #70]	@ movhi
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cczU8NLw.s 			page 59


1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 2036              		.loc 1 1282 0
 2037 009a FB68     		ldr	r3, [r7, #12]
 2038 009c 0022     		movs	r2, #0
 2039 009e 9A63     		str	r2, [r3, #56]
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2040              		.loc 1 1283 0
 2041 00a0 FB68     		ldr	r3, [r7, #12]
 2042 00a2 0022     		movs	r2, #0
 2043 00a4 9A87     		strh	r2, [r3, #60]	@ movhi
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2044              		.loc 1 1284 0
 2045 00a6 FB68     		ldr	r3, [r7, #12]
 2046 00a8 0022     		movs	r2, #0
 2047 00aa DA87     		strh	r2, [r3, #62]	@ movhi
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2048              		.loc 1 1285 0
 2049 00ac FB68     		ldr	r3, [r7, #12]
 2050 00ae 0022     		movs	r2, #0
 2051 00b0 1A65     		str	r2, [r3, #80]
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check the data size to adapt Rx threshold and the set the function for IT treatment */
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2052              		.loc 1 1288 0
 2053 00b2 FB68     		ldr	r3, [r7, #12]
 2054 00b4 DB68     		ldr	r3, [r3, #12]
 2055 00b6 B3F5E06F 		cmp	r3, #1792
 2056 00ba 0BD9     		bls	.L118
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16 bit */
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2057              		.loc 1 1291 0
 2058 00bc FB68     		ldr	r3, [r7, #12]
 2059 00be 1B68     		ldr	r3, [r3]
 2060 00c0 5A68     		ldr	r2, [r3, #4]
 2061 00c2 FB68     		ldr	r3, [r7, #12]
 2062 00c4 1B68     		ldr	r3, [r3]
 2063 00c6 22F48052 		bic	r2, r2, #4096
 2064 00ca 5A60     		str	r2, [r3, #4]
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2065              		.loc 1 1292 0
 2066 00cc FB68     		ldr	r3, [r7, #12]
 2067 00ce 1E4A     		ldr	r2, .L122
 2068 00d0 DA64     		str	r2, [r3, #76]
 2069 00d2 0AE0     		b	.L119
 2070              	.L118:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8 bit */
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2071              		.loc 1 1297 0
 2072 00d4 FB68     		ldr	r3, [r7, #12]
 2073 00d6 1B68     		ldr	r3, [r3]
 2074 00d8 5A68     		ldr	r2, [r3, #4]
 2075 00da FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 60


 2076 00dc 1B68     		ldr	r3, [r3]
 2077 00de 42F48052 		orr	r2, r2, #4096
 2078 00e2 5A60     		str	r2, [r3, #4]
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2079              		.loc 1 1298 0
 2080 00e4 FB68     		ldr	r3, [r7, #12]
 2081 00e6 194A     		ldr	r2, .L122+4
 2082 00e8 DA64     		str	r2, [r3, #76]
 2083              	.L119:
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2084              		.loc 1 1302 0
 2085 00ea FB68     		ldr	r3, [r7, #12]
 2086 00ec 9B68     		ldr	r3, [r3, #8]
 2087 00ee B3F5004F 		cmp	r3, #32768
 2088 00f2 07D1     		bne	.L120
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2089              		.loc 1 1304 0
 2090 00f4 FB68     		ldr	r3, [r7, #12]
 2091 00f6 1B68     		ldr	r3, [r3]
 2092 00f8 1A68     		ldr	r2, [r3]
 2093 00fa FB68     		ldr	r3, [r7, #12]
 2094 00fc 1B68     		ldr	r3, [r3]
 2095 00fe 22F48042 		bic	r2, r2, #16384
 2096 0102 1A60     		str	r2, [r3]
 2097              	.L120:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2098              		.loc 1 1325 0
 2099 0104 FB68     		ldr	r3, [r7, #12]
 2100 0106 1B68     		ldr	r3, [r3]
 2101 0108 5A68     		ldr	r2, [r3, #4]
 2102 010a FB68     		ldr	r3, [r7, #12]
 2103 010c 1B68     		ldr	r3, [r3]
 2104 010e 42F06002 		orr	r2, r2, #96
ARM GAS  /tmp/cczU8NLw.s 			page 61


 2105 0112 5A60     		str	r2, [r3, #4]
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             process unlock */
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2106              		.loc 1 1332 0
 2107 0114 FB68     		ldr	r3, [r7, #12]
 2108 0116 1B68     		ldr	r3, [r3]
 2109 0118 1B68     		ldr	r3, [r3]
 2110 011a 03F04003 		and	r3, r3, #64
 2111 011e 402B     		cmp	r3, #64
 2112 0120 08D0     		beq	.L121
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2113              		.loc 1 1335 0
 2114 0122 FB68     		ldr	r3, [r7, #12]
 2115 0124 1B68     		ldr	r3, [r3]
 2116 0126 1A68     		ldr	r2, [r3]
 2117 0128 FB68     		ldr	r3, [r7, #12]
 2118 012a 1B68     		ldr	r3, [r3]
 2119 012c 42F04002 		orr	r2, r2, #64
 2120 0130 1A60     		str	r2, [r3]
 2121 0132 00E0     		b	.L115
 2122              	.L121:
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
 2123              		.loc 1 1338 0
 2124 0134 00BF     		nop
 2125              	.L115:
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2126              		.loc 1 1340 0
 2127 0136 FB68     		ldr	r3, [r7, #12]
 2128 0138 0022     		movs	r2, #0
 2129 013a 83F85C20 		strb	r2, [r3, #92]
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2130              		.loc 1 1341 0
 2131 013e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2132              	.L112:
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2133              		.loc 1 1342 0
 2134 0140 1846     		mov	r0, r3
 2135 0142 1837     		adds	r7, r7, #24
 2136              	.LCFI46:
 2137              		.cfi_def_cfa_offset 8
 2138 0144 BD46     		mov	sp, r7
 2139              	.LCFI47:
 2140              		.cfi_def_cfa_register 13
 2141              		@ sp needed
 2142 0146 80BD     		pop	{r7, pc}
 2143              	.L123:
 2144              		.align	2
ARM GAS  /tmp/cczU8NLw.s 			page 62


 2145              	.L122:
 2146 0148 00000000 		.word	SPI_RxISR_16BIT
 2147 014c 00000000 		.word	SPI_RxISR_8BIT
 2148              		.cfi_endproc
 2149              	.LFE146:
 2151              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2152              		.align	1
 2153              		.global	HAL_SPI_TransmitReceive_IT
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2157              		.fpu fpv4-sp-d16
 2159              	HAL_SPI_TransmitReceive_IT:
 2160              	.LFB147:
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2161              		.loc 1 1354 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 32
 2164              		@ frame_needed = 1, uses_anonymous_args = 0
 2165              		@ link register save eliminated.
 2166 0000 80B4     		push	{r7}
 2167              	.LCFI48:
 2168              		.cfi_def_cfa_offset 4
 2169              		.cfi_offset 7, -4
 2170 0002 89B0     		sub	sp, sp, #36
 2171              	.LCFI49:
 2172              		.cfi_def_cfa_offset 40
 2173 0004 00AF     		add	r7, sp, #0
 2174              	.LCFI50:
 2175              		.cfi_def_cfa_register 7
 2176 0006 F860     		str	r0, [r7, #12]
 2177 0008 B960     		str	r1, [r7, #8]
 2178 000a 7A60     		str	r2, [r7, #4]
 2179 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 2180              		.loc 1 1355 0
 2181 000e 0023     		movs	r3, #0
 2182 0010 BB61     		str	r3, [r7, #24]
 2183 0012 0023     		movs	r3, #0
 2184 0014 7B61     		str	r3, [r7, #20]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2185              		.loc 1 1356 0
 2186 0016 0023     		movs	r3, #0
 2187 0018 FB77     		strb	r3, [r7, #31]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
ARM GAS  /tmp/cczU8NLw.s 			page 63


1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2188              		.loc 1 1362 0
 2189 001a FB68     		ldr	r3, [r7, #12]
 2190 001c 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2191 0020 012B     		cmp	r3, #1
 2192 0022 01D1     		bne	.L125
 2193              		.loc 1 1362 0 is_stmt 0 discriminator 1
 2194 0024 0223     		movs	r3, #2
 2195 0026 95E0     		b	.L126
 2196              	.L125:
 2197              		.loc 1 1362 0 discriminator 2
 2198 0028 FB68     		ldr	r3, [r7, #12]
 2199 002a 0122     		movs	r2, #1
 2200 002c 83F85C20 		strb	r2, [r3, #92]
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp  = hspi->State;
 2201              		.loc 1 1364 0 is_stmt 1 discriminator 2
 2202 0030 FB68     		ldr	r3, [r7, #12]
 2203 0032 93F85D30 		ldrb	r3, [r3, #93]
 2204 0036 DBB2     		uxtb	r3, r3
 2205 0038 BB61     		str	r3, [r7, #24]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 2206              		.loc 1 1365 0 discriminator 2
 2207 003a FB68     		ldr	r3, [r7, #12]
 2208 003c 5B68     		ldr	r3, [r3, #4]
 2209 003e 7B61     		str	r3, [r7, #20]
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp == HAL_SPI_STATE_READY) || \
 2210              		.loc 1 1367 0 discriminator 2
 2211 0040 BB69     		ldr	r3, [r7, #24]
 2212 0042 012B     		cmp	r3, #1
 2213 0044 0DD0     		beq	.L127
 2214              		.loc 1 1367 0 is_stmt 0 discriminator 1
 2215 0046 7B69     		ldr	r3, [r7, #20]
 2216 0048 B3F5827F 		cmp	r3, #260
 2217 004c 06D1     		bne	.L128
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL
 2218              		.loc 1 1368 0 is_stmt 1
 2219 004e FB68     		ldr	r3, [r7, #12]
 2220 0050 9B68     		ldr	r3, [r3, #8]
 2221 0052 002B     		cmp	r3, #0
 2222 0054 02D1     		bne	.L128
 2223              		.loc 1 1368 0 is_stmt 0 discriminator 1
 2224 0056 BB69     		ldr	r3, [r7, #24]
 2225 0058 042B     		cmp	r3, #4
 2226 005a 02D0     		beq	.L127
 2227              	.L128:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2228              		.loc 1 1370 0 is_stmt 1
 2229 005c 0223     		movs	r3, #2
 2230 005e FB77     		strb	r3, [r7, #31]
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2231              		.loc 1 1371 0
ARM GAS  /tmp/cczU8NLw.s 			page 64


 2232 0060 73E0     		b	.L129
 2233              	.L127:
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 2234              		.loc 1 1374 0
 2235 0062 BB68     		ldr	r3, [r7, #8]
 2236 0064 002B     		cmp	r3, #0
 2237 0066 05D0     		beq	.L130
 2238              		.loc 1 1374 0 is_stmt 0 discriminator 1
 2239 0068 7B68     		ldr	r3, [r7, #4]
 2240 006a 002B     		cmp	r3, #0
 2241 006c 02D0     		beq	.L130
 2242              		.loc 1 1374 0 discriminator 2
 2243 006e 7B88     		ldrh	r3, [r7, #2]
 2244 0070 002B     		cmp	r3, #0
 2245 0072 02D1     		bne	.L131
 2246              	.L130:
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2247              		.loc 1 1376 0 is_stmt 1
 2248 0074 0123     		movs	r3, #1
 2249 0076 FB77     		strb	r3, [r7, #31]
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2250              		.loc 1 1377 0
 2251 0078 67E0     		b	.L129
 2252              	.L131:
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 2253              		.loc 1 1381 0
 2254 007a FB68     		ldr	r3, [r7, #12]
 2255 007c 93F85D30 		ldrb	r3, [r3, #93]
 2256 0080 DBB2     		uxtb	r3, r3
 2257 0082 042B     		cmp	r3, #4
 2258 0084 03D0     		beq	.L132
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2259              		.loc 1 1383 0
 2260 0086 FB68     		ldr	r3, [r7, #12]
 2261 0088 0522     		movs	r2, #5
 2262 008a 83F85D20 		strb	r2, [r3, #93]
 2263              	.L132:
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2264              		.loc 1 1387 0
 2265 008e FB68     		ldr	r3, [r7, #12]
 2266 0090 0022     		movs	r2, #0
 2267 0092 1A66     		str	r2, [r3, #96]
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2268              		.loc 1 1388 0
 2269 0094 FB68     		ldr	r3, [r7, #12]
 2270 0096 BA68     		ldr	r2, [r7, #8]
 2271 0098 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/cczU8NLw.s 			page 65


1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2272              		.loc 1 1389 0
 2273 009a FB68     		ldr	r3, [r7, #12]
 2274 009c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2275 009e 9A87     		strh	r2, [r3, #60]	@ movhi
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2276              		.loc 1 1390 0
 2277 00a0 FB68     		ldr	r3, [r7, #12]
 2278 00a2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2279 00a4 DA87     		strh	r2, [r3, #62]	@ movhi
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2280              		.loc 1 1391 0
 2281 00a6 FB68     		ldr	r3, [r7, #12]
 2282 00a8 7A68     		ldr	r2, [r7, #4]
 2283 00aa 1A64     		str	r2, [r3, #64]
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2284              		.loc 1 1392 0
 2285 00ac FB68     		ldr	r3, [r7, #12]
 2286 00ae 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2287 00b0 A3F84420 		strh	r2, [r3, #68]	@ movhi
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2288              		.loc 1 1393 0
 2289 00b4 FB68     		ldr	r3, [r7, #12]
 2290 00b6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2291 00b8 A3F84620 		strh	r2, [r3, #70]	@ movhi
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2292              		.loc 1 1396 0
 2293 00bc FB68     		ldr	r3, [r7, #12]
 2294 00be DB68     		ldr	r3, [r3, #12]
 2295 00c0 B3F5E06F 		cmp	r3, #1792
 2296 00c4 06D9     		bls	.L133
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
 2297              		.loc 1 1398 0
 2298 00c6 FB68     		ldr	r3, [r7, #12]
 2299 00c8 254A     		ldr	r2, .L139
 2300 00ca DA64     		str	r2, [r3, #76]
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2301              		.loc 1 1399 0
 2302 00cc FB68     		ldr	r3, [r7, #12]
 2303 00ce 254A     		ldr	r2, .L139+4
 2304 00d0 1A65     		str	r2, [r3, #80]
 2305 00d2 05E0     		b	.L134
 2306              	.L133:
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
 2307              		.loc 1 1403 0
 2308 00d4 FB68     		ldr	r3, [r7, #12]
 2309 00d6 244A     		ldr	r2, .L139+8
 2310 00d8 DA64     		str	r2, [r3, #76]
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2311              		.loc 1 1404 0
 2312 00da FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 66


 2313 00dc 234A     		ldr	r2, .L139+12
 2314 00de 1A65     		str	r2, [r3, #80]
 2315              	.L134:
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check if packing mode is enabled and if there is more than 2 data to receive */
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (hspi->RxXferCount >= 2U))
 2316              		.loc 1 1425 0
 2317 00e0 FB68     		ldr	r3, [r7, #12]
 2318 00e2 DB68     		ldr	r3, [r3, #12]
 2319 00e4 B3F5E06F 		cmp	r3, #1792
 2320 00e8 05D8     		bhi	.L135
 2321              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2322 00ea FB68     		ldr	r3, [r7, #12]
 2323 00ec B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 2324 00f0 9BB2     		uxth	r3, r3
 2325 00f2 012B     		cmp	r3, #1
 2326 00f4 08D9     		bls	.L136
 2327              	.L135:
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16 bit */
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2328              		.loc 1 1428 0 is_stmt 1
 2329 00f6 FB68     		ldr	r3, [r7, #12]
 2330 00f8 1B68     		ldr	r3, [r3]
 2331 00fa 5A68     		ldr	r2, [r3, #4]
 2332 00fc FB68     		ldr	r3, [r7, #12]
 2333 00fe 1B68     		ldr	r3, [r3]
 2334 0100 22F48052 		bic	r2, r2, #4096
 2335 0104 5A60     		str	r2, [r3, #4]
 2336 0106 07E0     		b	.L137
 2337              	.L136:
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8 bit */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2338              		.loc 1 1433 0
 2339 0108 FB68     		ldr	r3, [r7, #12]
 2340 010a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 67


 2341 010c 5A68     		ldr	r2, [r3, #4]
 2342 010e FB68     		ldr	r3, [r7, #12]
 2343 0110 1B68     		ldr	r3, [r3]
 2344 0112 42F48052 		orr	r2, r2, #4096
 2345 0116 5A60     		str	r2, [r3, #4]
 2346              	.L137:
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2347              		.loc 1 1437 0
 2348 0118 FB68     		ldr	r3, [r7, #12]
 2349 011a 1B68     		ldr	r3, [r3]
 2350 011c 5A68     		ldr	r2, [r3, #4]
 2351 011e FB68     		ldr	r3, [r7, #12]
 2352 0120 1B68     		ldr	r3, [r3]
 2353 0122 42F0E002 		orr	r2, r2, #224
 2354 0126 5A60     		str	r2, [r3, #4]
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2355              		.loc 1 1440 0
 2356 0128 FB68     		ldr	r3, [r7, #12]
 2357 012a 1B68     		ldr	r3, [r3]
 2358 012c 1B68     		ldr	r3, [r3]
 2359 012e 03F04003 		and	r3, r3, #64
 2360 0132 402B     		cmp	r3, #64
 2361 0134 08D0     		beq	.L138
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2362              		.loc 1 1443 0
 2363 0136 FB68     		ldr	r3, [r7, #12]
 2364 0138 1B68     		ldr	r3, [r3]
 2365 013a 1A68     		ldr	r2, [r3]
 2366 013c FB68     		ldr	r3, [r7, #12]
 2367 013e 1B68     		ldr	r3, [r3]
 2368 0140 42F04002 		orr	r2, r2, #64
 2369 0144 1A60     		str	r2, [r3]
 2370 0146 00E0     		b	.L129
 2371              	.L138:
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
 2372              		.loc 1 1446 0
 2373 0148 00BF     		nop
 2374              	.L129:
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2375              		.loc 1 1448 0
 2376 014a FB68     		ldr	r3, [r7, #12]
 2377 014c 0022     		movs	r2, #0
 2378 014e 83F85C20 		strb	r2, [r3, #92]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2379              		.loc 1 1449 0
 2380 0152 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2381              	.L126:
ARM GAS  /tmp/cczU8NLw.s 			page 68


1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2382              		.loc 1 1450 0
 2383 0154 1846     		mov	r0, r3
 2384 0156 2437     		adds	r7, r7, #36
 2385              	.LCFI51:
 2386              		.cfi_def_cfa_offset 4
 2387 0158 BD46     		mov	sp, r7
 2388              	.LCFI52:
 2389              		.cfi_def_cfa_register 13
 2390              		@ sp needed
 2391 015a 5DF8047B 		ldr	r7, [sp], #4
 2392              	.LCFI53:
 2393              		.cfi_restore 7
 2394              		.cfi_def_cfa_offset 0
 2395 015e 7047     		bx	lr
 2396              	.L140:
 2397              		.align	2
 2398              	.L139:
 2399 0160 00000000 		.word	SPI_2linesRxISR_16BIT
 2400 0164 00000000 		.word	SPI_2linesTxISR_16BIT
 2401 0168 00000000 		.word	SPI_2linesRxISR_8BIT
 2402 016c 00000000 		.word	SPI_2linesTxISR_8BIT
 2403              		.cfi_endproc
 2404              	.LFE147:
 2406              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2407              		.align	1
 2408              		.global	HAL_SPI_Transmit_DMA
 2409              		.syntax unified
 2410              		.thumb
 2411              		.thumb_func
 2412              		.fpu fpv4-sp-d16
 2414              	HAL_SPI_Transmit_DMA:
 2415              	.LFB148:
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2416              		.loc 1 1461 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 24
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0000 80B5     		push	{r7, lr}
 2421              	.LCFI54:
 2422              		.cfi_def_cfa_offset 8
 2423              		.cfi_offset 7, -8
 2424              		.cfi_offset 14, -4
 2425 0002 86B0     		sub	sp, sp, #24
 2426              	.LCFI55:
 2427              		.cfi_def_cfa_offset 32
 2428 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cczU8NLw.s 			page 69


 2429              	.LCFI56:
 2430              		.cfi_def_cfa_register 7
 2431 0006 F860     		str	r0, [r7, #12]
 2432 0008 B960     		str	r1, [r7, #8]
 2433 000a 1346     		mov	r3, r2
 2434 000c FB80     		strh	r3, [r7, #6]	@ movhi
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2435              		.loc 1 1462 0
 2436 000e 0023     		movs	r3, #0
 2437 0010 FB75     		strb	r3, [r7, #23]
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2438              		.loc 1 1468 0
 2439 0012 FB68     		ldr	r3, [r7, #12]
 2440 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2441 0018 012B     		cmp	r3, #1
 2442 001a 01D1     		bne	.L142
 2443              		.loc 1 1468 0 is_stmt 0 discriminator 1
 2444 001c 0223     		movs	r3, #2
 2445 001e C0E0     		b	.L143
 2446              	.L142:
 2447              		.loc 1 1468 0 discriminator 2
 2448 0020 FB68     		ldr	r3, [r7, #12]
 2449 0022 0122     		movs	r2, #1
 2450 0024 83F85C20 		strb	r2, [r3, #92]
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2451              		.loc 1 1470 0 is_stmt 1 discriminator 2
 2452 0028 FB68     		ldr	r3, [r7, #12]
 2453 002a 93F85D30 		ldrb	r3, [r3, #93]
 2454 002e DBB2     		uxtb	r3, r3
 2455 0030 012B     		cmp	r3, #1
 2456 0032 02D0     		beq	.L144
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2457              		.loc 1 1472 0
 2458 0034 0223     		movs	r3, #2
 2459 0036 FB75     		strb	r3, [r7, #23]
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2460              		.loc 1 1473 0
 2461 0038 AEE0     		b	.L145
 2462              	.L144:
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2463              		.loc 1 1476 0
 2464 003a BB68     		ldr	r3, [r7, #8]
 2465 003c 002B     		cmp	r3, #0
 2466 003e 02D0     		beq	.L146
 2467              		.loc 1 1476 0 is_stmt 0 discriminator 1
 2468 0040 FB88     		ldrh	r3, [r7, #6]
 2469 0042 002B     		cmp	r3, #0
 2470 0044 02D1     		bne	.L147
ARM GAS  /tmp/cczU8NLw.s 			page 70


 2471              	.L146:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2472              		.loc 1 1478 0 is_stmt 1
 2473 0046 0123     		movs	r3, #1
 2474 0048 FB75     		strb	r3, [r7, #23]
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2475              		.loc 1 1479 0
 2476 004a A5E0     		b	.L145
 2477              	.L147:
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2478              		.loc 1 1483 0
 2479 004c FB68     		ldr	r3, [r7, #12]
 2480 004e 0322     		movs	r2, #3
 2481 0050 83F85D20 		strb	r2, [r3, #93]
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2482              		.loc 1 1484 0
 2483 0054 FB68     		ldr	r3, [r7, #12]
 2484 0056 0022     		movs	r2, #0
 2485 0058 1A66     		str	r2, [r3, #96]
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2486              		.loc 1 1485 0
 2487 005a FB68     		ldr	r3, [r7, #12]
 2488 005c BA68     		ldr	r2, [r7, #8]
 2489 005e 9A63     		str	r2, [r3, #56]
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2490              		.loc 1 1486 0
 2491 0060 FB68     		ldr	r3, [r7, #12]
 2492 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2493 0064 9A87     		strh	r2, [r3, #60]	@ movhi
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2494              		.loc 1 1487 0
 2495 0066 FB68     		ldr	r3, [r7, #12]
 2496 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2497 006a DA87     		strh	r2, [r3, #62]	@ movhi
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 2498              		.loc 1 1490 0
 2499 006c FB68     		ldr	r3, [r7, #12]
 2500 006e 0022     		movs	r2, #0
 2501 0070 1A64     		str	r2, [r3, #64]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2502              		.loc 1 1491 0
 2503 0072 FB68     		ldr	r3, [r7, #12]
 2504 0074 0022     		movs	r2, #0
 2505 0076 1A65     		str	r2, [r3, #80]
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2506              		.loc 1 1492 0
 2507 0078 FB68     		ldr	r3, [r7, #12]
 2508 007a 0022     		movs	r2, #0
 2509 007c DA64     		str	r2, [r3, #76]
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2510              		.loc 1 1493 0
ARM GAS  /tmp/cczU8NLw.s 			page 71


 2511 007e FB68     		ldr	r3, [r7, #12]
 2512 0080 0022     		movs	r2, #0
 2513 0082 A3F84420 		strh	r2, [r3, #68]	@ movhi
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2514              		.loc 1 1494 0
 2515 0086 FB68     		ldr	r3, [r7, #12]
 2516 0088 0022     		movs	r2, #0
 2517 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2518              		.loc 1 1497 0
 2519 008e FB68     		ldr	r3, [r7, #12]
 2520 0090 9B68     		ldr	r3, [r3, #8]
 2521 0092 B3F5004F 		cmp	r3, #32768
 2522 0096 07D1     		bne	.L148
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2523              		.loc 1 1499 0
 2524 0098 FB68     		ldr	r3, [r7, #12]
 2525 009a 1B68     		ldr	r3, [r3]
 2526 009c 1A68     		ldr	r2, [r3]
 2527 009e FB68     		ldr	r3, [r7, #12]
 2528 00a0 1B68     		ldr	r3, [r3]
 2529 00a2 42F48042 		orr	r2, r2, #16384
 2530 00a6 1A60     		str	r2, [r3]
 2531              	.L148:
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 2532              		.loc 1 1511 0
 2533 00a8 FB68     		ldr	r3, [r7, #12]
 2534 00aa 5B6D     		ldr	r3, [r3, #84]
 2535 00ac 3F4A     		ldr	r2, .L152
 2536 00ae 1A64     		str	r2, [r3, #64]
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2537              		.loc 1 1514 0
 2538 00b0 FB68     		ldr	r3, [r7, #12]
 2539 00b2 5B6D     		ldr	r3, [r3, #84]
 2540 00b4 3E4A     		ldr	r2, .L152+4
 2541 00b6 DA63     		str	r2, [r3, #60]
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2542              		.loc 1 1517 0
 2543 00b8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 72


 2544 00ba 5B6D     		ldr	r3, [r3, #84]
 2545 00bc 3D4A     		ldr	r2, .L152+8
 2546 00be DA64     		str	r2, [r3, #76]
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 2547              		.loc 1 1520 0
 2548 00c0 FB68     		ldr	r3, [r7, #12]
 2549 00c2 5B6D     		ldr	r3, [r3, #84]
 2550 00c4 0022     		movs	r2, #0
 2551 00c6 1A65     		str	r2, [r3, #80]
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2552              		.loc 1 1522 0
 2553 00c8 FB68     		ldr	r3, [r7, #12]
 2554 00ca 1B68     		ldr	r3, [r3]
 2555 00cc 5A68     		ldr	r2, [r3, #4]
 2556 00ce FB68     		ldr	r3, [r7, #12]
 2557 00d0 1B68     		ldr	r3, [r3]
 2558 00d2 22F48042 		bic	r2, r2, #16384
 2559 00d6 5A60     		str	r2, [r3, #4]
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* packing mode is enabled only if the DMA setting is HALWORD */
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
 2560              		.loc 1 1524 0
 2561 00d8 FB68     		ldr	r3, [r7, #12]
 2562 00da DB68     		ldr	r3, [r3, #12]
 2563 00dc B3F5E06F 		cmp	r3, #1792
 2564 00e0 2DD8     		bhi	.L149
 2565              		.loc 1 1524 0 is_stmt 0 discriminator 1
 2566 00e2 FB68     		ldr	r3, [r7, #12]
 2567 00e4 5B6D     		ldr	r3, [r3, #84]
 2568 00e6 9B69     		ldr	r3, [r3, #24]
 2569 00e8 B3F5005F 		cmp	r3, #8192
 2570 00ec 27D1     		bne	.L149
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
 2571              		.loc 1 1527 0 is_stmt 1
 2572 00ee FB68     		ldr	r3, [r7, #12]
 2573 00f0 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2574 00f2 9BB2     		uxth	r3, r3
 2575 00f4 03F00103 		and	r3, r3, #1
 2576 00f8 002B     		cmp	r3, #0
 2577 00fa 0FD1     		bne	.L150
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2578              		.loc 1 1529 0
 2579 00fc FB68     		ldr	r3, [r7, #12]
 2580 00fe 1B68     		ldr	r3, [r3]
 2581 0100 5A68     		ldr	r2, [r3, #4]
 2582 0102 FB68     		ldr	r3, [r7, #12]
 2583 0104 1B68     		ldr	r3, [r3]
 2584 0106 22F48042 		bic	r2, r2, #16384
 2585 010a 5A60     		str	r2, [r3, #4]
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 2586              		.loc 1 1530 0
 2587 010c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 73


 2588 010e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2589 0110 9BB2     		uxth	r3, r3
 2590 0112 5B08     		lsrs	r3, r3, #1
 2591 0114 9AB2     		uxth	r2, r3
 2592 0116 FB68     		ldr	r3, [r7, #12]
 2593 0118 DA87     		strh	r2, [r3, #62]	@ movhi
 2594 011a 10E0     		b	.L149
 2595              	.L150:
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2596              		.loc 1 1534 0
 2597 011c FB68     		ldr	r3, [r7, #12]
 2598 011e 1B68     		ldr	r3, [r3]
 2599 0120 5A68     		ldr	r2, [r3, #4]
 2600 0122 FB68     		ldr	r3, [r7, #12]
 2601 0124 1B68     		ldr	r3, [r3]
 2602 0126 42F48042 		orr	r2, r2, #16384
 2603 012a 5A60     		str	r2, [r3, #4]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 2604              		.loc 1 1535 0
 2605 012c FB68     		ldr	r3, [r7, #12]
 2606 012e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2607 0130 9BB2     		uxth	r3, r3
 2608 0132 5B08     		lsrs	r3, r3, #1
 2609 0134 9BB2     		uxth	r3, r3
 2610 0136 0133     		adds	r3, r3, #1
 2611 0138 9AB2     		uxth	r2, r3
 2612 013a FB68     		ldr	r3, [r7, #12]
 2613 013c DA87     		strh	r2, [r3, #62]	@ movhi
 2614              	.L149:
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi->T
 2615              		.loc 1 1540 0
 2616 013e FB68     		ldr	r3, [r7, #12]
 2617 0140 586D     		ldr	r0, [r3, #84]
 2618 0142 FB68     		ldr	r3, [r7, #12]
 2619 0144 9B6B     		ldr	r3, [r3, #56]
 2620 0146 1946     		mov	r1, r3
 2621 0148 FB68     		ldr	r3, [r7, #12]
 2622 014a 1B68     		ldr	r3, [r3]
 2623 014c 0C33     		adds	r3, r3, #12
 2624 014e 1A46     		mov	r2, r3
 2625 0150 FB68     		ldr	r3, [r7, #12]
 2626 0152 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2627 0154 9BB2     		uxth	r3, r3
 2628 0156 FFF7FEFF 		bl	HAL_DMA_Start_IT
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2629              		.loc 1 1543 0
 2630 015a FB68     		ldr	r3, [r7, #12]
 2631 015c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 74


 2632 015e 1B68     		ldr	r3, [r3]
 2633 0160 03F04003 		and	r3, r3, #64
 2634 0164 402B     		cmp	r3, #64
 2635 0166 07D0     		beq	.L151
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2636              		.loc 1 1546 0
 2637 0168 FB68     		ldr	r3, [r7, #12]
 2638 016a 1B68     		ldr	r3, [r3]
 2639 016c 1A68     		ldr	r2, [r3]
 2640 016e FB68     		ldr	r3, [r7, #12]
 2641 0170 1B68     		ldr	r3, [r3]
 2642 0172 42F04002 		orr	r2, r2, #64
 2643 0176 1A60     		str	r2, [r3]
 2644              	.L151:
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2645              		.loc 1 1550 0
 2646 0178 FB68     		ldr	r3, [r7, #12]
 2647 017a 1B68     		ldr	r3, [r3]
 2648 017c 5A68     		ldr	r2, [r3, #4]
 2649 017e FB68     		ldr	r3, [r7, #12]
 2650 0180 1B68     		ldr	r3, [r3]
 2651 0182 42F02002 		orr	r2, r2, #32
 2652 0186 5A60     		str	r2, [r3, #4]
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 2653              		.loc 1 1553 0
 2654 0188 FB68     		ldr	r3, [r7, #12]
 2655 018a 1B68     		ldr	r3, [r3]
 2656 018c 5A68     		ldr	r2, [r3, #4]
 2657 018e FB68     		ldr	r3, [r7, #12]
 2658 0190 1B68     		ldr	r3, [r3]
 2659 0192 42F00202 		orr	r2, r2, #2
 2660 0196 5A60     		str	r2, [r3, #4]
 2661              	.L145:
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2662              		.loc 1 1557 0
 2663 0198 FB68     		ldr	r3, [r7, #12]
 2664 019a 0022     		movs	r2, #0
 2665 019c 83F85C20 		strb	r2, [r3, #92]
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2666              		.loc 1 1558 0
 2667 01a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2668              	.L143:
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2669              		.loc 1 1559 0
 2670 01a2 1846     		mov	r0, r3
 2671 01a4 1837     		adds	r7, r7, #24
 2672              	.LCFI57:
ARM GAS  /tmp/cczU8NLw.s 			page 75


 2673              		.cfi_def_cfa_offset 8
 2674 01a6 BD46     		mov	sp, r7
 2675              	.LCFI58:
 2676              		.cfi_def_cfa_register 13
 2677              		@ sp needed
 2678 01a8 80BD     		pop	{r7, pc}
 2679              	.L153:
 2680 01aa 00BF     		.align	2
 2681              	.L152:
 2682 01ac 00000000 		.word	SPI_DMAHalfTransmitCplt
 2683 01b0 00000000 		.word	SPI_DMATransmitCplt
 2684 01b4 00000000 		.word	SPI_DMAError
 2685              		.cfi_endproc
 2686              	.LFE148:
 2688              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2689              		.align	1
 2690              		.global	HAL_SPI_Receive_DMA
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu fpv4-sp-d16
 2696              	HAL_SPI_Receive_DMA:
 2697              	.LFB149:
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2698              		.loc 1 1571 0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 24
 2701              		@ frame_needed = 1, uses_anonymous_args = 0
 2702 0000 80B5     		push	{r7, lr}
 2703              	.LCFI59:
 2704              		.cfi_def_cfa_offset 8
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 86B0     		sub	sp, sp, #24
 2708              	.LCFI60:
 2709              		.cfi_def_cfa_offset 32
 2710 0004 00AF     		add	r7, sp, #0
 2711              	.LCFI61:
 2712              		.cfi_def_cfa_register 7
 2713 0006 F860     		str	r0, [r7, #12]
 2714 0008 B960     		str	r1, [r7, #8]
 2715 000a 1346     		mov	r3, r2
 2716 000c FB80     		strh	r3, [r7, #6]	@ movhi
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2717              		.loc 1 1572 0
 2718 000e 0023     		movs	r3, #0
ARM GAS  /tmp/cczU8NLw.s 			page 76


 2719 0010 FB75     		strb	r3, [r7, #23]
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2720              		.loc 1 1574 0
 2721 0012 FB68     		ldr	r3, [r7, #12]
 2722 0014 9B68     		ldr	r3, [r3, #8]
 2723 0016 002B     		cmp	r3, #0
 2724 0018 10D1     		bne	.L155
 2725              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2726 001a FB68     		ldr	r3, [r7, #12]
 2727 001c 5B68     		ldr	r3, [r3, #4]
 2728 001e B3F5827F 		cmp	r3, #260
 2729 0022 0BD1     		bne	.L155
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2730              		.loc 1 1576 0 is_stmt 1
 2731 0024 FB68     		ldr	r3, [r7, #12]
 2732 0026 0422     		movs	r2, #4
 2733 0028 83F85D20 		strb	r2, [r3, #93]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 2734              		.loc 1 1578 0
 2735 002c FB88     		ldrh	r3, [r7, #6]
 2736 002e BA68     		ldr	r2, [r7, #8]
 2737 0030 B968     		ldr	r1, [r7, #8]
 2738 0032 F868     		ldr	r0, [r7, #12]
 2739 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2740 0038 0346     		mov	r3, r0
 2741 003a B6E0     		b	.L156
 2742              	.L155:
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2743              		.loc 1 1582 0
 2744 003c FB68     		ldr	r3, [r7, #12]
 2745 003e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2746 0042 012B     		cmp	r3, #1
 2747 0044 01D1     		bne	.L157
 2748              		.loc 1 1582 0 is_stmt 0 discriminator 1
 2749 0046 0223     		movs	r3, #2
 2750 0048 AFE0     		b	.L156
 2751              	.L157:
 2752              		.loc 1 1582 0 discriminator 2
 2753 004a FB68     		ldr	r3, [r7, #12]
 2754 004c 0122     		movs	r2, #1
 2755 004e 83F85C20 		strb	r2, [r3, #92]
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2756              		.loc 1 1584 0 is_stmt 1 discriminator 2
 2757 0052 FB68     		ldr	r3, [r7, #12]
 2758 0054 93F85D30 		ldrb	r3, [r3, #93]
 2759 0058 DBB2     		uxtb	r3, r3
 2760 005a 012B     		cmp	r3, #1
 2761 005c 02D0     		beq	.L158
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
ARM GAS  /tmp/cczU8NLw.s 			page 77


 2762              		.loc 1 1586 0
 2763 005e 0223     		movs	r3, #2
 2764 0060 FB75     		strb	r3, [r7, #23]
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2765              		.loc 1 1587 0
 2766 0062 9DE0     		b	.L159
 2767              	.L158:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2768              		.loc 1 1590 0
 2769 0064 BB68     		ldr	r3, [r7, #8]
 2770 0066 002B     		cmp	r3, #0
 2771 0068 02D0     		beq	.L160
 2772              		.loc 1 1590 0 is_stmt 0 discriminator 1
 2773 006a FB88     		ldrh	r3, [r7, #6]
 2774 006c 002B     		cmp	r3, #0
 2775 006e 02D1     		bne	.L161
 2776              	.L160:
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2777              		.loc 1 1592 0 is_stmt 1
 2778 0070 0123     		movs	r3, #1
 2779 0072 FB75     		strb	r3, [r7, #23]
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2780              		.loc 1 1593 0
 2781 0074 94E0     		b	.L159
 2782              	.L161:
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2783              		.loc 1 1597 0
 2784 0076 FB68     		ldr	r3, [r7, #12]
 2785 0078 0422     		movs	r2, #4
 2786 007a 83F85D20 		strb	r2, [r3, #93]
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2787              		.loc 1 1598 0
 2788 007e FB68     		ldr	r3, [r7, #12]
 2789 0080 0022     		movs	r2, #0
 2790 0082 1A66     		str	r2, [r3, #96]
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2791              		.loc 1 1599 0
 2792 0084 FB68     		ldr	r3, [r7, #12]
 2793 0086 BA68     		ldr	r2, [r7, #8]
 2794 0088 1A64     		str	r2, [r3, #64]
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2795              		.loc 1 1600 0
 2796 008a FB68     		ldr	r3, [r7, #12]
 2797 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2798 008e A3F84420 		strh	r2, [r3, #68]	@ movhi
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2799              		.loc 1 1601 0
 2800 0092 FB68     		ldr	r3, [r7, #12]
 2801 0094 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2802 0096 A3F84620 		strh	r2, [r3, #70]	@ movhi
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cczU8NLw.s 			page 78


1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2803              		.loc 1 1604 0
 2804 009a FB68     		ldr	r3, [r7, #12]
 2805 009c 0022     		movs	r2, #0
 2806 009e DA64     		str	r2, [r3, #76]
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2807              		.loc 1 1605 0
 2808 00a0 FB68     		ldr	r3, [r7, #12]
 2809 00a2 0022     		movs	r2, #0
 2810 00a4 1A65     		str	r2, [r3, #80]
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2811              		.loc 1 1606 0
 2812 00a6 FB68     		ldr	r3, [r7, #12]
 2813 00a8 0022     		movs	r2, #0
 2814 00aa 9A87     		strh	r2, [r3, #60]	@ movhi
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2815              		.loc 1 1607 0
 2816 00ac FB68     		ldr	r3, [r7, #12]
 2817 00ae 0022     		movs	r2, #0
 2818 00b0 DA87     		strh	r2, [r3, #62]	@ movhi
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2819              		.loc 1 1610 0
 2820 00b2 FB68     		ldr	r3, [r7, #12]
 2821 00b4 9B68     		ldr	r3, [r3, #8]
 2822 00b6 B3F5004F 		cmp	r3, #32768
 2823 00ba 07D1     		bne	.L162
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2824              		.loc 1 1612 0
 2825 00bc FB68     		ldr	r3, [r7, #12]
 2826 00be 1B68     		ldr	r3, [r3]
 2827 00c0 1A68     		ldr	r2, [r3]
 2828 00c2 FB68     		ldr	r3, [r7, #12]
 2829 00c4 1B68     		ldr	r3, [r3]
 2830 00c6 22F48042 		bic	r2, r2, #16384
 2831 00ca 1A60     		str	r2, [r3]
 2832              	.L162:
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* packing mode management is enabled by the DMA settings */
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmarx->Init.MemDataAlignment == DMA_MDA
 2833              		.loc 1 1624 0
 2834 00cc FB68     		ldr	r3, [r7, #12]
 2835 00ce DB68     		ldr	r3, [r3, #12]
 2836 00d0 B3F5E06F 		cmp	r3, #1792
 2837 00d4 08D8     		bhi	.L163
ARM GAS  /tmp/cczU8NLw.s 			page 79


 2838              		.loc 1 1624 0 is_stmt 0 discriminator 1
 2839 00d6 FB68     		ldr	r3, [r7, #12]
 2840 00d8 9B6D     		ldr	r3, [r3, #88]
 2841 00da 9B69     		ldr	r3, [r3, #24]
 2842 00dc B3F5005F 		cmp	r3, #8192
 2843 00e0 02D1     		bne	.L163
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2844              		.loc 1 1627 0 is_stmt 1
 2845 00e2 0123     		movs	r3, #1
 2846 00e4 FB75     		strb	r3, [r7, #23]
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2847              		.loc 1 1628 0
 2848 00e6 5BE0     		b	.L159
 2849              	.L163:
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 2850              		.loc 1 1631 0
 2851 00e8 FB68     		ldr	r3, [r7, #12]
 2852 00ea 1B68     		ldr	r3, [r3]
 2853 00ec 5A68     		ldr	r2, [r3, #4]
 2854 00ee FB68     		ldr	r3, [r7, #12]
 2855 00f0 1B68     		ldr	r3, [r3]
 2856 00f2 22F40052 		bic	r2, r2, #8192
 2857 00f6 5A60     		str	r2, [r3, #4]
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2858              		.loc 1 1632 0
 2859 00f8 FB68     		ldr	r3, [r7, #12]
 2860 00fa DB68     		ldr	r3, [r3, #12]
 2861 00fc B3F5E06F 		cmp	r3, #1792
 2862 0100 08D9     		bls	.L164
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2863              		.loc 1 1635 0
 2864 0102 FB68     		ldr	r3, [r7, #12]
 2865 0104 1B68     		ldr	r3, [r3]
 2866 0106 5A68     		ldr	r2, [r3, #4]
 2867 0108 FB68     		ldr	r3, [r7, #12]
 2868 010a 1B68     		ldr	r3, [r3]
 2869 010c 22F48052 		bic	r2, r2, #4096
 2870 0110 5A60     		str	r2, [r3, #4]
 2871 0112 07E0     		b	.L165
 2872              	.L164:
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2873              		.loc 1 1640 0
 2874 0114 FB68     		ldr	r3, [r7, #12]
 2875 0116 1B68     		ldr	r3, [r3]
 2876 0118 5A68     		ldr	r2, [r3, #4]
 2877 011a FB68     		ldr	r3, [r7, #12]
 2878 011c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 80


 2879 011e 42F48052 		orr	r2, r2, #4096
 2880 0122 5A60     		str	r2, [r3, #4]
 2881              	.L165:
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 2882              		.loc 1 1644 0
 2883 0124 FB68     		ldr	r3, [r7, #12]
 2884 0126 9B6D     		ldr	r3, [r3, #88]
 2885 0128 224A     		ldr	r2, .L167
 2886 012a 1A64     		str	r2, [r3, #64]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2887              		.loc 1 1647 0
 2888 012c FB68     		ldr	r3, [r7, #12]
 2889 012e 9B6D     		ldr	r3, [r3, #88]
 2890 0130 214A     		ldr	r2, .L167+4
 2891 0132 DA63     		str	r2, [r3, #60]
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2892              		.loc 1 1650 0
 2893 0134 FB68     		ldr	r3, [r7, #12]
 2894 0136 9B6D     		ldr	r3, [r3, #88]
 2895 0138 204A     		ldr	r2, .L167+8
 2896 013a DA64     		str	r2, [r3, #76]
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 2897              		.loc 1 1653 0
 2898 013c FB68     		ldr	r3, [r7, #12]
 2899 013e 9B6D     		ldr	r3, [r3, #88]
 2900 0140 0022     		movs	r2, #0
 2901 0142 1A65     		str	r2, [r3, #80]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi->R
 2902              		.loc 1 1656 0
 2903 0144 FB68     		ldr	r3, [r7, #12]
 2904 0146 986D     		ldr	r0, [r3, #88]
 2905 0148 FB68     		ldr	r3, [r7, #12]
 2906 014a 1B68     		ldr	r3, [r3]
 2907 014c 0C33     		adds	r3, r3, #12
 2908 014e 1946     		mov	r1, r3
 2909 0150 FB68     		ldr	r3, [r7, #12]
 2910 0152 1B6C     		ldr	r3, [r3, #64]
 2911 0154 1A46     		mov	r2, r3
 2912 0156 FB68     		ldr	r3, [r7, #12]
 2913 0158 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 2914 015c 9BB2     		uxth	r3, r3
 2915 015e FFF7FEFF 		bl	HAL_DMA_Start_IT
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2916              		.loc 1 1659 0
ARM GAS  /tmp/cczU8NLw.s 			page 81


 2917 0162 FB68     		ldr	r3, [r7, #12]
 2918 0164 1B68     		ldr	r3, [r3]
 2919 0166 1B68     		ldr	r3, [r3]
 2920 0168 03F04003 		and	r3, r3, #64
 2921 016c 402B     		cmp	r3, #64
 2922 016e 07D0     		beq	.L166
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2923              		.loc 1 1662 0
 2924 0170 FB68     		ldr	r3, [r7, #12]
 2925 0172 1B68     		ldr	r3, [r3]
 2926 0174 1A68     		ldr	r2, [r3]
 2927 0176 FB68     		ldr	r3, [r7, #12]
 2928 0178 1B68     		ldr	r3, [r3]
 2929 017a 42F04002 		orr	r2, r2, #64
 2930 017e 1A60     		str	r2, [r3]
 2931              	.L166:
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2932              		.loc 1 1666 0
 2933 0180 FB68     		ldr	r3, [r7, #12]
 2934 0182 1B68     		ldr	r3, [r3]
 2935 0184 5A68     		ldr	r2, [r3, #4]
 2936 0186 FB68     		ldr	r3, [r7, #12]
 2937 0188 1B68     		ldr	r3, [r3]
 2938 018a 42F02002 		orr	r2, r2, #32
 2939 018e 5A60     		str	r2, [r3, #4]
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 2940              		.loc 1 1669 0
 2941 0190 FB68     		ldr	r3, [r7, #12]
 2942 0192 1B68     		ldr	r3, [r3]
 2943 0194 5A68     		ldr	r2, [r3, #4]
 2944 0196 FB68     		ldr	r3, [r7, #12]
 2945 0198 1B68     		ldr	r3, [r3]
 2946 019a 42F00102 		orr	r2, r2, #1
 2947 019e 5A60     		str	r2, [r3, #4]
 2948              	.L159:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2949              		.loc 1 1673 0
 2950 01a0 FB68     		ldr	r3, [r7, #12]
 2951 01a2 0022     		movs	r2, #0
 2952 01a4 83F85C20 		strb	r2, [r3, #92]
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2953              		.loc 1 1674 0
 2954 01a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2955              	.L156:
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2956              		.loc 1 1675 0
 2957 01aa 1846     		mov	r0, r3
ARM GAS  /tmp/cczU8NLw.s 			page 82


 2958 01ac 1837     		adds	r7, r7, #24
 2959              	.LCFI62:
 2960              		.cfi_def_cfa_offset 8
 2961 01ae BD46     		mov	sp, r7
 2962              	.LCFI63:
 2963              		.cfi_def_cfa_register 13
 2964              		@ sp needed
 2965 01b0 80BD     		pop	{r7, pc}
 2966              	.L168:
 2967 01b2 00BF     		.align	2
 2968              	.L167:
 2969 01b4 00000000 		.word	SPI_DMAHalfReceiveCplt
 2970 01b8 00000000 		.word	SPI_DMAReceiveCplt
 2971 01bc 00000000 		.word	SPI_DMAError
 2972              		.cfi_endproc
 2973              	.LFE149:
 2975              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2976              		.align	1
 2977              		.global	HAL_SPI_TransmitReceive_DMA
 2978              		.syntax unified
 2979              		.thumb
 2980              		.thumb_func
 2981              		.fpu fpv4-sp-d16
 2983              	HAL_SPI_TransmitReceive_DMA:
 2984              	.LFB150:
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                               uint16_t Size)
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 2985              		.loc 1 1689 0
 2986              		.cfi_startproc
 2987              		@ args = 0, pretend = 0, frame = 32
 2988              		@ frame_needed = 1, uses_anonymous_args = 0
 2989 0000 80B5     		push	{r7, lr}
 2990              	.LCFI64:
 2991              		.cfi_def_cfa_offset 8
 2992              		.cfi_offset 7, -8
 2993              		.cfi_offset 14, -4
 2994 0002 88B0     		sub	sp, sp, #32
 2995              	.LCFI65:
 2996              		.cfi_def_cfa_offset 40
 2997 0004 00AF     		add	r7, sp, #0
 2998              	.LCFI66:
 2999              		.cfi_def_cfa_register 7
 3000 0006 F860     		str	r0, [r7, #12]
 3001 0008 B960     		str	r1, [r7, #8]
 3002 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 83


 3003 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 3004              		.loc 1 1690 0
 3005 000e 0023     		movs	r3, #0
 3006 0010 BB61     		str	r3, [r7, #24]
 3007 0012 0023     		movs	r3, #0
 3008 0014 7B61     		str	r3, [r7, #20]
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3009              		.loc 1 1691 0
 3010 0016 0023     		movs	r3, #0
 3011 0018 FB77     		strb	r3, [r7, #31]
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3012              		.loc 1 1697 0
 3013 001a FB68     		ldr	r3, [r7, #12]
 3014 001c 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3015 0020 012B     		cmp	r3, #1
 3016 0022 01D1     		bne	.L170
 3017              		.loc 1 1697 0 is_stmt 0 discriminator 1
 3018 0024 0223     		movs	r3, #2
 3019 0026 4DE1     		b	.L171
 3020              	.L170:
 3021              		.loc 1 1697 0 discriminator 2
 3022 0028 FB68     		ldr	r3, [r7, #12]
 3023 002a 0122     		movs	r2, #1
 3024 002c 83F85C20 		strb	r2, [r3, #92]
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp  = hspi->State;
 3025              		.loc 1 1699 0 is_stmt 1 discriminator 2
 3026 0030 FB68     		ldr	r3, [r7, #12]
 3027 0032 93F85D30 		ldrb	r3, [r3, #93]
 3028 0036 DBB2     		uxtb	r3, r3
 3029 0038 BB61     		str	r3, [r7, #24]
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 3030              		.loc 1 1700 0 discriminator 2
 3031 003a FB68     		ldr	r3, [r7, #12]
 3032 003c 5B68     		ldr	r3, [r3, #4]
 3033 003e 7B61     		str	r3, [r7, #20]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp == HAL_SPI_STATE_READY) ||
 3034              		.loc 1 1701 0 discriminator 2
 3035 0040 BB69     		ldr	r3, [r7, #24]
 3036 0042 012B     		cmp	r3, #1
 3037 0044 0DD0     		beq	.L172
 3038              		.loc 1 1701 0 is_stmt 0 discriminator 1
 3039 0046 7B69     		ldr	r3, [r7, #20]
 3040 0048 B3F5827F 		cmp	r3, #260
 3041 004c 06D1     		bne	.L173
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL
 3042              		.loc 1 1702 0 is_stmt 1
 3043 004e FB68     		ldr	r3, [r7, #12]
 3044 0050 9B68     		ldr	r3, [r3, #8]
 3045 0052 002B     		cmp	r3, #0
 3046 0054 02D1     		bne	.L173
ARM GAS  /tmp/cczU8NLw.s 			page 84


 3047              		.loc 1 1702 0 is_stmt 0 discriminator 1
 3048 0056 BB69     		ldr	r3, [r7, #24]
 3049 0058 042B     		cmp	r3, #4
 3050 005a 02D0     		beq	.L172
 3051              	.L173:
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3052              		.loc 1 1704 0 is_stmt 1
 3053 005c 0223     		movs	r3, #2
 3054 005e FB77     		strb	r3, [r7, #31]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3055              		.loc 1 1705 0
 3056 0060 2BE1     		b	.L174
 3057              	.L172:
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 3058              		.loc 1 1708 0
 3059 0062 BB68     		ldr	r3, [r7, #8]
 3060 0064 002B     		cmp	r3, #0
 3061 0066 05D0     		beq	.L175
 3062              		.loc 1 1708 0 is_stmt 0 discriminator 1
 3063 0068 7B68     		ldr	r3, [r7, #4]
 3064 006a 002B     		cmp	r3, #0
 3065 006c 02D0     		beq	.L175
 3066              		.loc 1 1708 0 discriminator 2
 3067 006e 7B88     		ldrh	r3, [r7, #2]
 3068 0070 002B     		cmp	r3, #0
 3069 0072 02D1     		bne	.L176
 3070              	.L175:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3071              		.loc 1 1710 0 is_stmt 1
 3072 0074 0123     		movs	r3, #1
 3073 0076 FB77     		strb	r3, [r7, #31]
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3074              		.loc 1 1711 0
 3075 0078 1FE1     		b	.L174
 3076              	.L176:
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 3077              		.loc 1 1715 0
 3078 007a FB68     		ldr	r3, [r7, #12]
 3079 007c 93F85D30 		ldrb	r3, [r3, #93]
 3080 0080 DBB2     		uxtb	r3, r3
 3081 0082 042B     		cmp	r3, #4
 3082 0084 03D0     		beq	.L177
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 3083              		.loc 1 1717 0
 3084 0086 FB68     		ldr	r3, [r7, #12]
 3085 0088 0522     		movs	r2, #5
 3086 008a 83F85D20 		strb	r2, [r3, #93]
 3087              	.L177:
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cczU8NLw.s 			page 85


1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3088              		.loc 1 1721 0
 3089 008e FB68     		ldr	r3, [r7, #12]
 3090 0090 0022     		movs	r2, #0
 3091 0092 1A66     		str	r2, [r3, #96]
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3092              		.loc 1 1722 0
 3093 0094 FB68     		ldr	r3, [r7, #12]
 3094 0096 BA68     		ldr	r2, [r7, #8]
 3095 0098 9A63     		str	r2, [r3, #56]
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3096              		.loc 1 1723 0
 3097 009a FB68     		ldr	r3, [r7, #12]
 3098 009c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3099 009e 9A87     		strh	r2, [r3, #60]	@ movhi
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3100              		.loc 1 1724 0
 3101 00a0 FB68     		ldr	r3, [r7, #12]
 3102 00a2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3103 00a4 DA87     		strh	r2, [r3, #62]	@ movhi
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3104              		.loc 1 1725 0
 3105 00a6 FB68     		ldr	r3, [r7, #12]
 3106 00a8 7A68     		ldr	r2, [r7, #4]
 3107 00aa 1A64     		str	r2, [r3, #64]
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3108              		.loc 1 1726 0
 3109 00ac FB68     		ldr	r3, [r7, #12]
 3110 00ae 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3111 00b0 A3F84420 		strh	r2, [r3, #68]	@ movhi
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3112              		.loc 1 1727 0
 3113 00b4 FB68     		ldr	r3, [r7, #12]
 3114 00b6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3115 00b8 A3F84620 		strh	r2, [r3, #70]	@ movhi
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3116              		.loc 1 1730 0
 3117 00bc FB68     		ldr	r3, [r7, #12]
 3118 00be 0022     		movs	r2, #0
 3119 00c0 DA64     		str	r2, [r3, #76]
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3120              		.loc 1 1731 0
 3121 00c2 FB68     		ldr	r3, [r7, #12]
 3122 00c4 0022     		movs	r2, #0
 3123 00c6 1A65     		str	r2, [r3, #80]
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/cczU8NLw.s 			page 86


1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset the threshold bit */
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
 3124              		.loc 1 1742 0
 3125 00c8 FB68     		ldr	r3, [r7, #12]
 3126 00ca 1B68     		ldr	r3, [r3]
 3127 00cc 5A68     		ldr	r2, [r3, #4]
 3128 00ce FB68     		ldr	r3, [r7, #12]
 3129 00d0 1B68     		ldr	r3, [r3]
 3130 00d2 22F4C042 		bic	r2, r2, #24576
 3131 00d6 5A60     		str	r2, [r3, #4]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* the packing mode management is enabled by the DMA settings according the spi data size */
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3132              		.loc 1 1745 0
 3133 00d8 FB68     		ldr	r3, [r7, #12]
 3134 00da DB68     		ldr	r3, [r3, #12]
 3135 00dc B3F5E06F 		cmp	r3, #1792
 3136 00e0 08D9     		bls	.L178
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 16bit */
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3137              		.loc 1 1748 0
 3138 00e2 FB68     		ldr	r3, [r7, #12]
 3139 00e4 1B68     		ldr	r3, [r3]
 3140 00e6 5A68     		ldr	r2, [r3, #4]
 3141 00e8 FB68     		ldr	r3, [r7, #12]
 3142 00ea 1B68     		ldr	r3, [r3]
 3143 00ec 22F48052 		bic	r2, r2, #4096
 3144 00f0 5A60     		str	r2, [r3, #4]
 3145 00f2 6FE0     		b	.L179
 3146              	.L178:
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* set fiforxthreshold according the reception data length: 8bit */
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3147              		.loc 1 1753 0
 3148 00f4 FB68     		ldr	r3, [r7, #12]
 3149 00f6 1B68     		ldr	r3, [r3]
 3150 00f8 5A68     		ldr	r2, [r3, #4]
 3151 00fa FB68     		ldr	r3, [r7, #12]
 3152 00fc 1B68     		ldr	r3, [r3]
 3153 00fe 42F48052 		orr	r2, r2, #4096
 3154 0102 5A60     		str	r2, [r3, #4]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3155              		.loc 1 1755 0
 3156 0104 FB68     		ldr	r3, [r7, #12]
 3157 0106 5B6D     		ldr	r3, [r3, #84]
 3158 0108 9B69     		ldr	r3, [r3, #24]
 3159 010a B3F5005F 		cmp	r3, #8192
 3160 010e 26D1     		bne	.L180
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
 3161              		.loc 1 1757 0
 3162 0110 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 87


 3163 0112 9B8F     		ldrh	r3, [r3, #60]
 3164 0114 03F00103 		and	r3, r3, #1
 3165 0118 002B     		cmp	r3, #0
 3166 011a 0FD1     		bne	.L181
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 3167              		.loc 1 1759 0
 3168 011c FB68     		ldr	r3, [r7, #12]
 3169 011e 1B68     		ldr	r3, [r3]
 3170 0120 5A68     		ldr	r2, [r3, #4]
 3171 0122 FB68     		ldr	r3, [r7, #12]
 3172 0124 1B68     		ldr	r3, [r3]
 3173 0126 22F48042 		bic	r2, r2, #16384
 3174 012a 5A60     		str	r2, [r3, #4]
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3175              		.loc 1 1760 0
 3176 012c FB68     		ldr	r3, [r7, #12]
 3177 012e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3178 0130 9BB2     		uxth	r3, r3
 3179 0132 5B08     		lsrs	r3, r3, #1
 3180 0134 9AB2     		uxth	r2, r3
 3181 0136 FB68     		ldr	r3, [r7, #12]
 3182 0138 DA87     		strh	r2, [r3, #62]	@ movhi
 3183 013a 10E0     		b	.L180
 3184              	.L181:
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 3185              		.loc 1 1764 0
 3186 013c FB68     		ldr	r3, [r7, #12]
 3187 013e 1B68     		ldr	r3, [r3]
 3188 0140 5A68     		ldr	r2, [r3, #4]
 3189 0142 FB68     		ldr	r3, [r7, #12]
 3190 0144 1B68     		ldr	r3, [r3]
 3191 0146 42F48042 		orr	r2, r2, #16384
 3192 014a 5A60     		str	r2, [r3, #4]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3193              		.loc 1 1765 0
 3194 014c FB68     		ldr	r3, [r7, #12]
 3195 014e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3196 0150 9BB2     		uxth	r3, r3
 3197 0152 5B08     		lsrs	r3, r3, #1
 3198 0154 9BB2     		uxth	r3, r3
 3199 0156 0133     		adds	r3, r3, #1
 3200 0158 9AB2     		uxth	r2, r3
 3201 015a FB68     		ldr	r3, [r7, #12]
 3202 015c DA87     		strh	r2, [r3, #62]	@ movhi
 3203              	.L180:
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3204              		.loc 1 1769 0
 3205 015e FB68     		ldr	r3, [r7, #12]
 3206 0160 9B6D     		ldr	r3, [r3, #88]
 3207 0162 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/cczU8NLw.s 			page 88


 3208 0164 B3F5005F 		cmp	r3, #8192
 3209 0168 34D1     		bne	.L179
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* set fiforxthreshold according the reception data length: 16bit */
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3210              		.loc 1 1772 0
 3211 016a FB68     		ldr	r3, [r7, #12]
 3212 016c 1B68     		ldr	r3, [r3]
 3213 016e 5A68     		ldr	r2, [r3, #4]
 3214 0170 FB68     		ldr	r3, [r7, #12]
 3215 0172 1B68     		ldr	r3, [r3]
 3216 0174 22F48052 		bic	r2, r2, #4096
 3217 0178 5A60     		str	r2, [r3, #4]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
 3218              		.loc 1 1774 0
 3219 017a FB68     		ldr	r3, [r7, #12]
 3220 017c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3221 0180 9BB2     		uxth	r3, r3
 3222 0182 03F00103 		and	r3, r3, #1
 3223 0186 002B     		cmp	r3, #0
 3224 0188 11D1     		bne	.L182
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3225              		.loc 1 1776 0
 3226 018a FB68     		ldr	r3, [r7, #12]
 3227 018c 1B68     		ldr	r3, [r3]
 3228 018e 5A68     		ldr	r2, [r3, #4]
 3229 0190 FB68     		ldr	r3, [r7, #12]
 3230 0192 1B68     		ldr	r3, [r3]
 3231 0194 22F40052 		bic	r2, r2, #8192
 3232 0198 5A60     		str	r2, [r3, #4]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3233              		.loc 1 1777 0
 3234 019a FB68     		ldr	r3, [r7, #12]
 3235 019c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3236 01a0 9BB2     		uxth	r3, r3
 3237 01a2 5B08     		lsrs	r3, r3, #1
 3238 01a4 9AB2     		uxth	r2, r3
 3239 01a6 FB68     		ldr	r3, [r7, #12]
 3240 01a8 A3F84620 		strh	r2, [r3, #70]	@ movhi
 3241 01ac 12E0     		b	.L179
 3242              	.L182:
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3243              		.loc 1 1781 0
 3244 01ae FB68     		ldr	r3, [r7, #12]
 3245 01b0 1B68     		ldr	r3, [r3]
 3246 01b2 5A68     		ldr	r2, [r3, #4]
 3247 01b4 FB68     		ldr	r3, [r7, #12]
 3248 01b6 1B68     		ldr	r3, [r3]
 3249 01b8 42F40052 		orr	r2, r2, #8192
 3250 01bc 5A60     		str	r2, [r3, #4]
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3251              		.loc 1 1782 0
ARM GAS  /tmp/cczU8NLw.s 			page 89


 3252 01be FB68     		ldr	r3, [r7, #12]
 3253 01c0 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3254 01c4 9BB2     		uxth	r3, r3
 3255 01c6 5B08     		lsrs	r3, r3, #1
 3256 01c8 9BB2     		uxth	r3, r3
 3257 01ca 0133     		adds	r3, r3, #1
 3258 01cc 9AB2     		uxth	r2, r3
 3259 01ce FB68     		ldr	r3, [r7, #12]
 3260 01d0 A3F84620 		strh	r2, [r3, #70]	@ movhi
 3261              	.L179:
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 3262              		.loc 1 1788 0
 3263 01d4 FB68     		ldr	r3, [r7, #12]
 3264 01d6 93F85D30 		ldrb	r3, [r3, #93]
 3265 01da DBB2     		uxtb	r3, r3
 3266 01dc 042B     		cmp	r3, #4
 3267 01de 08D1     		bne	.L183
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 3268              		.loc 1 1791 0
 3269 01e0 FB68     		ldr	r3, [r7, #12]
 3270 01e2 9B6D     		ldr	r3, [r3, #88]
 3271 01e4 394A     		ldr	r2, .L186
 3272 01e6 1A64     		str	r2, [r3, #64]
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3273              		.loc 1 1792 0
 3274 01e8 FB68     		ldr	r3, [r7, #12]
 3275 01ea 9B6D     		ldr	r3, [r3, #88]
 3276 01ec 384A     		ldr	r2, .L186+4
 3277 01ee DA63     		str	r2, [r3, #60]
 3278 01f0 07E0     		b	.L184
 3279              	.L183:
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 3280              		.loc 1 1797 0
 3281 01f2 FB68     		ldr	r3, [r7, #12]
 3282 01f4 9B6D     		ldr	r3, [r3, #88]
 3283 01f6 374A     		ldr	r2, .L186+8
 3284 01f8 1A64     		str	r2, [r3, #64]
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3285              		.loc 1 1798 0
 3286 01fa FB68     		ldr	r3, [r7, #12]
 3287 01fc 9B6D     		ldr	r3, [r3, #88]
 3288 01fe 364A     		ldr	r2, .L186+12
 3289 0200 DA63     		str	r2, [r3, #60]
 3290              	.L184:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cczU8NLw.s 			page 90


1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 3291              		.loc 1 1802 0
 3292 0202 FB68     		ldr	r3, [r7, #12]
 3293 0204 9B6D     		ldr	r3, [r3, #88]
 3294 0206 354A     		ldr	r2, .L186+16
 3295 0208 DA64     		str	r2, [r3, #76]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 3296              		.loc 1 1805 0
 3297 020a FB68     		ldr	r3, [r7, #12]
 3298 020c 9B6D     		ldr	r3, [r3, #88]
 3299 020e 0022     		movs	r2, #0
 3300 0210 1A65     		str	r2, [r3, #80]
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi->R
 3301              		.loc 1 1808 0
 3302 0212 FB68     		ldr	r3, [r7, #12]
 3303 0214 986D     		ldr	r0, [r3, #88]
 3304 0216 FB68     		ldr	r3, [r7, #12]
 3305 0218 1B68     		ldr	r3, [r3]
 3306 021a 0C33     		adds	r3, r3, #12
 3307 021c 1946     		mov	r1, r3
 3308 021e FB68     		ldr	r3, [r7, #12]
 3309 0220 1B6C     		ldr	r3, [r3, #64]
 3310 0222 1A46     		mov	r2, r3
 3311 0224 FB68     		ldr	r3, [r7, #12]
 3312 0226 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3313 022a 9BB2     		uxth	r3, r3
 3314 022c FFF7FEFF 		bl	HAL_DMA_Start_IT
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3315              		.loc 1 1811 0
 3316 0230 FB68     		ldr	r3, [r7, #12]
 3317 0232 1B68     		ldr	r3, [r3]
 3318 0234 5A68     		ldr	r2, [r3, #4]
 3319 0236 FB68     		ldr	r3, [r7, #12]
 3320 0238 1B68     		ldr	r3, [r3]
 3321 023a 42F00102 		orr	r2, r2, #1
 3322 023e 5A60     		str	r2, [r3, #4]
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
 3323              		.loc 1 1815 0
 3324 0240 FB68     		ldr	r3, [r7, #12]
 3325 0242 5B6D     		ldr	r3, [r3, #84]
 3326 0244 0022     		movs	r2, #0
 3327 0246 1A64     		str	r2, [r3, #64]
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3328              		.loc 1 1816 0
 3329 0248 FB68     		ldr	r3, [r7, #12]
 3330 024a 5B6D     		ldr	r3, [r3, #84]
 3331 024c 0022     		movs	r2, #0
ARM GAS  /tmp/cczU8NLw.s 			page 91


 3332 024e DA63     		str	r2, [r3, #60]
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3333              		.loc 1 1817 0
 3334 0250 FB68     		ldr	r3, [r7, #12]
 3335 0252 5B6D     		ldr	r3, [r3, #84]
 3336 0254 0022     		movs	r2, #0
 3337 0256 DA64     		str	r2, [r3, #76]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3338              		.loc 1 1818 0
 3339 0258 FB68     		ldr	r3, [r7, #12]
 3340 025a 5B6D     		ldr	r3, [r3, #84]
 3341 025c 0022     		movs	r2, #0
 3342 025e 1A65     		str	r2, [r3, #80]
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi->T
 3343              		.loc 1 1821 0
 3344 0260 FB68     		ldr	r3, [r7, #12]
 3345 0262 586D     		ldr	r0, [r3, #84]
 3346 0264 FB68     		ldr	r3, [r7, #12]
 3347 0266 9B6B     		ldr	r3, [r3, #56]
 3348 0268 1946     		mov	r1, r3
 3349 026a FB68     		ldr	r3, [r7, #12]
 3350 026c 1B68     		ldr	r3, [r3]
 3351 026e 0C33     		adds	r3, r3, #12
 3352 0270 1A46     		mov	r2, r3
 3353 0272 FB68     		ldr	r3, [r7, #12]
 3354 0274 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3355 0276 9BB2     		uxth	r3, r3
 3356 0278 FFF7FEFF 		bl	HAL_DMA_Start_IT
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 3357              		.loc 1 1824 0
 3358 027c FB68     		ldr	r3, [r7, #12]
 3359 027e 1B68     		ldr	r3, [r3]
 3360 0280 1B68     		ldr	r3, [r3]
 3361 0282 03F04003 		and	r3, r3, #64
 3362 0286 402B     		cmp	r3, #64
 3363 0288 07D0     		beq	.L185
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3364              		.loc 1 1827 0
 3365 028a FB68     		ldr	r3, [r7, #12]
 3366 028c 1B68     		ldr	r3, [r3]
 3367 028e 1A68     		ldr	r2, [r3]
 3368 0290 FB68     		ldr	r3, [r7, #12]
 3369 0292 1B68     		ldr	r3, [r3]
 3370 0294 42F04002 		orr	r2, r2, #64
 3371 0298 1A60     		str	r2, [r3]
 3372              	.L185:
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3373              		.loc 1 1830 0
 3374 029a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 92


 3375 029c 1B68     		ldr	r3, [r3]
 3376 029e 5A68     		ldr	r2, [r3, #4]
 3377 02a0 FB68     		ldr	r3, [r7, #12]
 3378 02a2 1B68     		ldr	r3, [r3]
 3379 02a4 42F02002 		orr	r2, r2, #32
 3380 02a8 5A60     		str	r2, [r3, #4]
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3381              		.loc 1 1833 0
 3382 02aa FB68     		ldr	r3, [r7, #12]
 3383 02ac 1B68     		ldr	r3, [r3]
 3384 02ae 5A68     		ldr	r2, [r3, #4]
 3385 02b0 FB68     		ldr	r3, [r7, #12]
 3386 02b2 1B68     		ldr	r3, [r3]
 3387 02b4 42F00202 		orr	r2, r2, #2
 3388 02b8 5A60     		str	r2, [r3, #4]
 3389              	.L174:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3390              		.loc 1 1837 0
 3391 02ba FB68     		ldr	r3, [r7, #12]
 3392 02bc 0022     		movs	r2, #0
 3393 02be 83F85C20 		strb	r2, [r3, #92]
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3394              		.loc 1 1838 0
 3395 02c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3396              	.L171:
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3397              		.loc 1 1839 0
 3398 02c4 1846     		mov	r0, r3
 3399 02c6 2037     		adds	r7, r7, #32
 3400              	.LCFI67:
 3401              		.cfi_def_cfa_offset 8
 3402 02c8 BD46     		mov	sp, r7
 3403              	.LCFI68:
 3404              		.cfi_def_cfa_register 13
 3405              		@ sp needed
 3406 02ca 80BD     		pop	{r7, pc}
 3407              	.L187:
 3408              		.align	2
 3409              	.L186:
 3410 02cc 00000000 		.word	SPI_DMAHalfReceiveCplt
 3411 02d0 00000000 		.word	SPI_DMAReceiveCplt
 3412 02d4 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3413 02d8 00000000 		.word	SPI_DMATransmitReceiveCplt
 3414 02dc 00000000 		.word	SPI_DMAError
 3415              		.cfi_endproc
 3416              	.LFE150:
 3418              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3419              		.align	1
 3420              		.global	HAL_SPI_Abort
 3421              		.syntax unified
 3422              		.thumb
 3423              		.thumb_func
ARM GAS  /tmp/cczU8NLw.s 			page 93


 3424              		.fpu fpv4-sp-d16
 3426              	HAL_SPI_Abort:
 3427              	.LFB151:
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 3428              		.loc 1 1855 0
 3429              		.cfi_startproc
 3430              		@ args = 0, pretend = 0, frame = 24
 3431              		@ frame_needed = 1, uses_anonymous_args = 0
 3432 0000 80B5     		push	{r7, lr}
 3433              	.LCFI69:
 3434              		.cfi_def_cfa_offset 8
 3435              		.cfi_offset 7, -8
 3436              		.cfi_offset 14, -4
 3437 0002 88B0     		sub	sp, sp, #32
 3438              	.LCFI70:
 3439              		.cfi_def_cfa_offset 40
 3440 0004 02AF     		add	r7, sp, #8
 3441              	.LCFI71:
 3442              		.cfi_def_cfa 7, 32
 3443 0006 7860     		str	r0, [r7, #4]
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3444              		.loc 1 1857 0
 3445 0008 0023     		movs	r3, #0
 3446 000a 3B61     		str	r3, [r7, #16]
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
 3447              		.loc 1 1860 0
 3448 000c 0023     		movs	r3, #0
 3449 000e FB75     		strb	r3, [r7, #23]
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 3450              		.loc 1 1863 0
 3451 0010 FFF7FEFF 		bl	HAL_GetTick
 3452 0014 3861     		str	r0, [r7, #16]
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3453              		.loc 1 1866 0
 3454 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 94


 3455 0018 1B68     		ldr	r3, [r3]
 3456 001a 5B68     		ldr	r3, [r3, #4]
 3457 001c 03F08003 		and	r3, r3, #128
 3458 0020 002B     		cmp	r3, #0
 3459 0022 02D0     		beq	.L189
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3460              		.loc 1 1868 0
 3461 0024 7B68     		ldr	r3, [r7, #4]
 3462 0026 734A     		ldr	r2, .L204
 3463 0028 1A65     		str	r2, [r3, #80]
 3464              	.L189:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3465              		.loc 1 1871 0
 3466 002a 7B68     		ldr	r3, [r7, #4]
 3467 002c 1B68     		ldr	r3, [r3]
 3468 002e 5B68     		ldr	r3, [r3, #4]
 3469 0030 03F04003 		and	r3, r3, #64
 3470 0034 002B     		cmp	r3, #0
 3471 0036 0DD0     		beq	.L191
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3472              		.loc 1 1873 0
 3473 0038 7B68     		ldr	r3, [r7, #4]
 3474 003a 6F4A     		ldr	r2, .L204+4
 3475 003c DA64     		str	r2, [r3, #76]
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (hspi->State != HAL_SPI_STATE_ABORT)
 3476              		.loc 1 1876 0
 3477 003e 09E0     		b	.L191
 3478              	.L193:
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 3479              		.loc 1 1878 0
 3480 0040 FFF7FEFF 		bl	HAL_GetTick
 3481 0044 0246     		mov	r2, r0
 3482 0046 3B69     		ldr	r3, [r7, #16]
 3483 0048 D31A     		subs	r3, r2, r3
 3484 004a B3F1FF3F 		cmp	r3, #-1
 3485 004e 01D1     		bne	.L191
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 3486              		.loc 1 1880 0
 3487 0050 0323     		movs	r3, #3
 3488 0052 CAE0     		b	.L192
 3489              	.L191:
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3490              		.loc 1 1876 0
 3491 0054 7B68     		ldr	r3, [r7, #4]
 3492 0056 93F85D30 		ldrb	r3, [r3, #93]
 3493 005a DBB2     		uxtb	r3, r3
 3494 005c 072B     		cmp	r3, #7
 3495 005e EFD1     		bne	.L193
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cczU8NLw.s 			page 95


1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupts in case of DMA Mode */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3496              		.loc 1 1885 0
 3497 0060 7B68     		ldr	r3, [r7, #4]
 3498 0062 1B68     		ldr	r3, [r3]
 3499 0064 5A68     		ldr	r2, [r3, #4]
 3500 0066 7B68     		ldr	r3, [r7, #4]
 3501 0068 1B68     		ldr	r3, [r3]
 3502 006a 22F02002 		bic	r2, r2, #32
 3503 006e 5A60     		str	r2, [r3, #4]
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or SPI DMA Rx request if enabled */
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(hspi->Instance->CR2
 3504              		.loc 1 1888 0
 3505 0070 7B68     		ldr	r3, [r7, #4]
 3506 0072 1B68     		ldr	r3, [r3]
 3507 0074 5B68     		ldr	r3, [r3, #4]
 3508 0076 03F00203 		and	r3, r3, #2
 3509 007a 002B     		cmp	r3, #0
 3510 007c 07D1     		bne	.L194
 3511              		.loc 1 1888 0 is_stmt 0 discriminator 1
 3512 007e 7B68     		ldr	r3, [r7, #4]
 3513 0080 1B68     		ldr	r3, [r3]
 3514 0082 5B68     		ldr	r3, [r3, #4]
 3515 0084 03F00103 		and	r3, r3, #1
 3516 0088 002B     		cmp	r3, #0
 3517 008a 00F08680 		beq	.L195
 3518              	.L194:
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3519              		.loc 1 1891 0 is_stmt 1
 3520 008e 7B68     		ldr	r3, [r7, #4]
 3521 0090 5B6D     		ldr	r3, [r3, #84]
 3522 0092 002B     		cmp	r3, #0
 3523 0094 3DD0     		beq	.L196
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3524              		.loc 1 1895 0
 3525 0096 7B68     		ldr	r3, [r7, #4]
 3526 0098 5B6D     		ldr	r3, [r3, #84]
 3527 009a 0022     		movs	r2, #0
 3528 009c 1A65     		str	r2, [r3, #80]
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
 3529              		.loc 1 1898 0
 3530 009e 7B68     		ldr	r3, [r7, #4]
 3531 00a0 5B6D     		ldr	r3, [r3, #84]
 3532 00a2 1846     		mov	r0, r3
 3533 00a4 FFF7FEFF 		bl	HAL_DMA_Abort
 3534 00a8 0346     		mov	r3, r0
 3535 00aa 002B     		cmp	r3, #0
ARM GAS  /tmp/cczU8NLw.s 			page 96


 3536 00ac 02D0     		beq	.L197
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3537              		.loc 1 1900 0
 3538 00ae 7B68     		ldr	r3, [r7, #4]
 3539 00b0 4022     		movs	r2, #64
 3540 00b2 1A66     		str	r2, [r3, #96]
 3541              	.L197:
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Tx DMA Request */
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
 3542              		.loc 1 1904 0
 3543 00b4 7B68     		ldr	r3, [r7, #4]
 3544 00b6 1B68     		ldr	r3, [r3]
 3545 00b8 5A68     		ldr	r2, [r3, #4]
 3546 00ba 7B68     		ldr	r3, [r7, #4]
 3547 00bc 1B68     		ldr	r3, [r3]
 3548 00be 22F00202 		bic	r2, r2, #2
 3549 00c2 5A60     		str	r2, [r3, #4]
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 3550              		.loc 1 1906 0
 3551 00c4 FFF7FEFF 		bl	HAL_GetTick
 3552 00c8 0346     		mov	r3, r0
 3553 00ca 1A46     		mov	r2, r3
 3554 00cc 6421     		movs	r1, #100
 3555 00ce 7868     		ldr	r0, [r7, #4]
 3556 00d0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3557 00d4 0346     		mov	r3, r0
 3558 00d6 002B     		cmp	r3, #0
 3559 00d8 02D0     		beq	.L198
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3560              		.loc 1 1908 0
 3561 00da 7B68     		ldr	r3, [r7, #4]
 3562 00dc 4022     		movs	r2, #64
 3563 00de 1A66     		str	r2, [r3, #96]
 3564              	.L198:
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable SPI Peripheral */
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3565              		.loc 1 1912 0
 3566 00e0 7B68     		ldr	r3, [r7, #4]
 3567 00e2 1B68     		ldr	r3, [r3]
 3568 00e4 1A68     		ldr	r2, [r3]
 3569 00e6 7B68     		ldr	r3, [r7, #4]
 3570 00e8 1B68     		ldr	r3, [r3]
 3571 00ea 22F04002 		bic	r2, r2, #64
 3572 00ee 1A60     		str	r2, [r3]
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
 3573              		.loc 1 1915 0
 3574 00f0 FFF7FEFF 		bl	HAL_GetTick
 3575 00f4 0346     		mov	r3, r0
ARM GAS  /tmp/cczU8NLw.s 			page 97


 3576 00f6 0093     		str	r3, [sp]
 3577 00f8 6423     		movs	r3, #100
 3578 00fa 0022     		movs	r2, #0
 3579 00fc 4FF4C061 		mov	r1, #1536
 3580 0100 7868     		ldr	r0, [r7, #4]
 3581 0102 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3582 0106 0346     		mov	r3, r0
 3583 0108 002B     		cmp	r3, #0
 3584 010a 02D0     		beq	.L196
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3585              		.loc 1 1917 0
 3586 010c 7B68     		ldr	r3, [r7, #4]
 3587 010e 4022     		movs	r2, #64
 3588 0110 1A66     		str	r2, [r3, #96]
 3589              	.L196:
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3590              		.loc 1 1921 0
 3591 0112 7B68     		ldr	r3, [r7, #4]
 3592 0114 9B6D     		ldr	r3, [r3, #88]
 3593 0116 002B     		cmp	r3, #0
 3594 0118 3FD0     		beq	.L195
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3595              		.loc 1 1925 0
 3596 011a 7B68     		ldr	r3, [r7, #4]
 3597 011c 9B6D     		ldr	r3, [r3, #88]
 3598 011e 0022     		movs	r2, #0
 3599 0120 1A65     		str	r2, [r3, #80]
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
 3600              		.loc 1 1928 0
 3601 0122 7B68     		ldr	r3, [r7, #4]
 3602 0124 9B6D     		ldr	r3, [r3, #88]
 3603 0126 1846     		mov	r0, r3
 3604 0128 FFF7FEFF 		bl	HAL_DMA_Abort
 3605 012c 0346     		mov	r3, r0
 3606 012e 002B     		cmp	r3, #0
 3607 0130 02D0     		beq	.L199
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3608              		.loc 1 1930 0
 3609 0132 7B68     		ldr	r3, [r7, #4]
 3610 0134 4022     		movs	r2, #64
 3611 0136 1A66     		str	r2, [r3, #96]
 3612              	.L199:
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable peripheral */
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3613              		.loc 1 1934 0
ARM GAS  /tmp/cczU8NLw.s 			page 98


 3614 0138 7B68     		ldr	r3, [r7, #4]
 3615 013a 1B68     		ldr	r3, [r3]
 3616 013c 1A68     		ldr	r2, [r3]
 3617 013e 7B68     		ldr	r3, [r7, #4]
 3618 0140 1B68     		ldr	r3, [r3]
 3619 0142 22F04002 		bic	r2, r2, #64
 3620 0146 1A60     		str	r2, [r3]
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Control the BSY flag */
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
 3621              		.loc 1 1937 0
 3622 0148 FFF7FEFF 		bl	HAL_GetTick
 3623 014c 0346     		mov	r3, r0
 3624 014e 0093     		str	r3, [sp]
 3625 0150 6423     		movs	r3, #100
 3626 0152 0022     		movs	r2, #0
 3627 0154 8021     		movs	r1, #128
 3628 0156 7868     		ldr	r0, [r7, #4]
 3629 0158 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 3630 015c 0346     		mov	r3, r0
 3631 015e 002B     		cmp	r3, #0
 3632 0160 02D0     		beq	.L200
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3633              		.loc 1 1939 0
 3634 0162 7B68     		ldr	r3, [r7, #4]
 3635 0164 4022     		movs	r2, #64
 3636 0166 1A66     		str	r2, [r3, #96]
 3637              	.L200:
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
 3638              		.loc 1 1943 0
 3639 0168 FFF7FEFF 		bl	HAL_GetTick
 3640 016c 0346     		mov	r3, r0
 3641 016e 0093     		str	r3, [sp]
 3642 0170 6423     		movs	r3, #100
 3643 0172 0022     		movs	r2, #0
 3644 0174 4FF4C061 		mov	r1, #1536
 3645 0178 7868     		ldr	r0, [r7, #4]
 3646 017a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3647 017e 0346     		mov	r3, r0
 3648 0180 002B     		cmp	r3, #0
 3649 0182 02D0     		beq	.L201
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3650              		.loc 1 1945 0
 3651 0184 7B68     		ldr	r3, [r7, #4]
 3652 0186 4022     		movs	r2, #64
 3653 0188 1A66     		str	r2, [r3, #96]
 3654              	.L201:
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Rx DMA Request */
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
 3655              		.loc 1 1949 0
ARM GAS  /tmp/cczU8NLw.s 			page 99


 3656 018a 7B68     		ldr	r3, [r7, #4]
 3657 018c 1B68     		ldr	r3, [r3]
 3658 018e 5A68     		ldr	r2, [r3, #4]
 3659 0190 7B68     		ldr	r3, [r7, #4]
 3660 0192 1B68     		ldr	r3, [r3]
 3661 0194 22F00102 		bic	r2, r2, #1
 3662 0198 5A60     		str	r2, [r3, #4]
 3663              	.L195:
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3664              		.loc 1 1953 0
 3665 019a 7B68     		ldr	r3, [r7, #4]
 3666 019c 0022     		movs	r2, #0
 3667 019e A3F84620 		strh	r2, [r3, #70]	@ movhi
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3668              		.loc 1 1954 0
 3669 01a2 7B68     		ldr	r3, [r7, #4]
 3670 01a4 0022     		movs	r2, #0
 3671 01a6 DA87     		strh	r2, [r3, #62]	@ movhi
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check error during Abort procedure */
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 3672              		.loc 1 1957 0
 3673 01a8 7B68     		ldr	r3, [r7, #4]
 3674 01aa 1B6E     		ldr	r3, [r3, #96]
 3675 01ac 402B     		cmp	r3, #64
 3676 01ae 02D1     		bne	.L202
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3677              		.loc 1 1960 0
 3678 01b0 0123     		movs	r3, #1
 3679 01b2 FB75     		strb	r3, [r7, #23]
 3680 01b4 02E0     		b	.L203
 3681              	.L202:
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 3682              		.loc 1 1965 0
 3683 01b6 7B68     		ldr	r3, [r7, #4]
 3684 01b8 0022     		movs	r2, #0
 3685 01ba 1A66     		str	r2, [r3, #96]
 3686              	.L203:
 3687              	.LBB3:
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3688              		.loc 1 1969 0
 3689 01bc 0023     		movs	r3, #0
 3690 01be FB60     		str	r3, [r7, #12]
 3691 01c0 7B68     		ldr	r3, [r7, #4]
 3692 01c2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 100


 3693 01c4 DB68     		ldr	r3, [r3, #12]
 3694 01c6 FB60     		str	r3, [r7, #12]
 3695 01c8 7B68     		ldr	r3, [r7, #4]
 3696 01ca 1B68     		ldr	r3, [r3]
 3697 01cc 9B68     		ldr	r3, [r3, #8]
 3698 01ce FB60     		str	r3, [r7, #12]
 3699 01d0 FB68     		ldr	r3, [r7, #12]
 3700              	.LBE3:
 3701              	.LBB4:
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 3702              		.loc 1 1970 0
 3703 01d2 0023     		movs	r3, #0
 3704 01d4 BB60     		str	r3, [r7, #8]
 3705 01d6 7B68     		ldr	r3, [r7, #4]
 3706 01d8 1B68     		ldr	r3, [r3]
 3707 01da 9B68     		ldr	r3, [r3, #8]
 3708 01dc BB60     		str	r3, [r7, #8]
 3709 01de BB68     		ldr	r3, [r7, #8]
 3710              	.LBE4:
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->state to ready */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3711              		.loc 1 1973 0
 3712 01e0 7B68     		ldr	r3, [r7, #4]
 3713 01e2 0122     		movs	r2, #1
 3714 01e4 83F85D20 		strb	r2, [r3, #93]
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3715              		.loc 1 1975 0
 3716 01e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3717              	.L192:
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3718              		.loc 1 1976 0
 3719 01ea 1846     		mov	r0, r3
 3720 01ec 1837     		adds	r7, r7, #24
 3721              	.LCFI72:
 3722              		.cfi_def_cfa_offset 8
 3723 01ee BD46     		mov	sp, r7
 3724              	.LCFI73:
 3725              		.cfi_def_cfa_register 13
 3726              		@ sp needed
 3727 01f0 80BD     		pop	{r7, pc}
 3728              	.L205:
 3729 01f2 00BF     		.align	2
 3730              	.L204:
 3731 01f4 00000000 		.word	SPI_AbortTx_ISR
 3732 01f8 00000000 		.word	SPI_AbortRx_ISR
 3733              		.cfi_endproc
 3734              	.LFE151:
 3736              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 3737              		.align	1
 3738              		.global	HAL_SPI_Abort_IT
 3739              		.syntax unified
 3740              		.thumb
 3741              		.thumb_func
 3742              		.fpu fpv4-sp-d16
 3744              	HAL_SPI_Abort_IT:
ARM GAS  /tmp/cczU8NLw.s 			page 101


 3745              	.LFB152:
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 3746              		.loc 1 1994 0
 3747              		.cfi_startproc
 3748              		@ args = 0, pretend = 0, frame = 32
 3749              		@ frame_needed = 1, uses_anonymous_args = 0
 3750 0000 80B5     		push	{r7, lr}
 3751              	.LCFI74:
 3752              		.cfi_def_cfa_offset 8
 3753              		.cfi_offset 7, -8
 3754              		.cfi_offset 14, -4
 3755 0002 88B0     		sub	sp, sp, #32
 3756              	.LCFI75:
 3757              		.cfi_def_cfa_offset 40
 3758 0004 00AF     		add	r7, sp, #0
 3759              	.LCFI76:
 3760              		.cfi_def_cfa_register 7
 3761 0006 7860     		str	r0, [r7, #4]
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3762              		.loc 1 1996 0
 3763 0008 0023     		movs	r3, #0
 3764 000a 7B61     		str	r3, [r7, #20]
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t abortcplt ;
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
 3765              		.loc 1 2000 0
 3766 000c 0023     		movs	r3, #0
 3767 000e FB77     		strb	r3, [r7, #31]
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   abortcplt = 1U;
 3768              		.loc 1 2001 0
 3769 0010 0123     		movs	r3, #1
 3770 0012 BB61     		str	r3, [r7, #24]
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 3771              		.loc 1 2004 0
 3772 0014 FFF7FEFF 		bl	HAL_GetTick
 3773 0018 7861     		str	r0, [r7, #20]
ARM GAS  /tmp/cczU8NLw.s 			page 102


2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3774              		.loc 1 2007 0
 3775 001a 7B68     		ldr	r3, [r7, #4]
 3776 001c 1B68     		ldr	r3, [r3]
 3777 001e 5B68     		ldr	r3, [r3, #4]
 3778 0020 03F08003 		and	r3, r3, #128
 3779 0024 002B     		cmp	r3, #0
 3780 0026 02D0     		beq	.L207
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3781              		.loc 1 2009 0
 3782 0028 7B68     		ldr	r3, [r7, #4]
 3783 002a 7A4A     		ldr	r2, .L227
 3784 002c 1A65     		str	r2, [r3, #80]
 3785              	.L207:
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3786              		.loc 1 2012 0
 3787 002e 7B68     		ldr	r3, [r7, #4]
 3788 0030 1B68     		ldr	r3, [r3]
 3789 0032 5B68     		ldr	r3, [r3, #4]
 3790 0034 03F04003 		and	r3, r3, #64
 3791 0038 002B     		cmp	r3, #0
 3792 003a 0DD0     		beq	.L209
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3793              		.loc 1 2014 0
 3794 003c 7B68     		ldr	r3, [r7, #4]
 3795 003e 764A     		ldr	r2, .L227+4
 3796 0040 DA64     		str	r2, [r3, #76]
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (hspi->State != HAL_SPI_STATE_ABORT)
 3797              		.loc 1 2017 0
 3798 0042 09E0     		b	.L209
 3799              	.L211:
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 3800              		.loc 1 2019 0
 3801 0044 FFF7FEFF 		bl	HAL_GetTick
 3802 0048 0246     		mov	r2, r0
 3803 004a 7B69     		ldr	r3, [r7, #20]
 3804 004c D31A     		subs	r3, r2, r3
 3805 004e B3F1FF3F 		cmp	r3, #-1
 3806 0052 01D1     		bne	.L209
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 3807              		.loc 1 2021 0
 3808 0054 0323     		movs	r3, #3
 3809 0056 D9E0     		b	.L210
 3810              	.L209:
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3811              		.loc 1 2017 0
 3812 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 103


 3813 005a 93F85D30 		ldrb	r3, [r3, #93]
 3814 005e DBB2     		uxtb	r3, r3
 3815 0060 072B     		cmp	r3, #7
 3816 0062 EFD1     		bne	.L211
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupts in case of DMA Mode */
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3817              		.loc 1 2026 0
 3818 0064 7B68     		ldr	r3, [r7, #4]
 3819 0066 1B68     		ldr	r3, [r3]
 3820 0068 5A68     		ldr	r2, [r3, #4]
 3821 006a 7B68     		ldr	r3, [r7, #4]
 3822 006c 1B68     		ldr	r3, [r3]
 3823 006e 22F02002 		bic	r2, r2, #32
 3824 0072 5A60     		str	r2, [r3, #4]
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      before any call to DMA Abort functions */
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 3825              		.loc 1 2031 0
 3826 0074 7B68     		ldr	r3, [r7, #4]
 3827 0076 5B6D     		ldr	r3, [r3, #84]
 3828 0078 002B     		cmp	r3, #0
 3829 007a 0FD0     		beq	.L212
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3830              		.loc 1 2035 0
 3831 007c 7B68     		ldr	r3, [r7, #4]
 3832 007e 1B68     		ldr	r3, [r3]
 3833 0080 5B68     		ldr	r3, [r3, #4]
 3834 0082 03F00203 		and	r3, r3, #2
 3835 0086 002B     		cmp	r3, #0
 3836 0088 04D0     		beq	.L213
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
 3837              		.loc 1 2037 0
 3838 008a 7B68     		ldr	r3, [r7, #4]
 3839 008c 5B6D     		ldr	r3, [r3, #84]
 3840 008e 634A     		ldr	r2, .L227+8
 3841 0090 1A65     		str	r2, [r3, #80]
 3842 0092 03E0     		b	.L212
 3843              	.L213:
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3844              		.loc 1 2041 0
 3845 0094 7B68     		ldr	r3, [r7, #4]
 3846 0096 5B6D     		ldr	r3, [r3, #84]
 3847 0098 0022     		movs	r2, #0
 3848 009a 1A65     		str	r2, [r3, #80]
 3849              	.L212:
ARM GAS  /tmp/cczU8NLw.s 			page 104


2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 3850              		.loc 1 2045 0
 3851 009c 7B68     		ldr	r3, [r7, #4]
 3852 009e 9B6D     		ldr	r3, [r3, #88]
 3853 00a0 002B     		cmp	r3, #0
 3854 00a2 0FD0     		beq	.L214
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3855              		.loc 1 2049 0
 3856 00a4 7B68     		ldr	r3, [r7, #4]
 3857 00a6 1B68     		ldr	r3, [r3]
 3858 00a8 5B68     		ldr	r3, [r3, #4]
 3859 00aa 03F00103 		and	r3, r3, #1
 3860 00ae 002B     		cmp	r3, #0
 3861 00b0 04D0     		beq	.L215
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
 3862              		.loc 1 2051 0
 3863 00b2 7B68     		ldr	r3, [r7, #4]
 3864 00b4 9B6D     		ldr	r3, [r3, #88]
 3865 00b6 5A4A     		ldr	r2, .L227+12
 3866 00b8 1A65     		str	r2, [r3, #80]
 3867 00ba 03E0     		b	.L214
 3868              	.L215:
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3869              		.loc 1 2055 0
 3870 00bc 7B68     		ldr	r3, [r7, #4]
 3871 00be 9B6D     		ldr	r3, [r3, #88]
 3872 00c0 0022     		movs	r2, #0
 3873 00c2 1A65     		str	r2, [r3, #80]
 3874              	.L214:
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN)) && (HAL_IS_BIT_SET(hspi->Instance->CR2
 3875              		.loc 1 2060 0
 3876 00c4 7B68     		ldr	r3, [r7, #4]
 3877 00c6 1B68     		ldr	r3, [r3]
 3878 00c8 5B68     		ldr	r3, [r3, #4]
 3879 00ca 03F00203 		and	r3, r3, #2
 3880 00ce 002B     		cmp	r3, #0
 3881 00d0 34D0     		beq	.L216
 3882              		.loc 1 2060 0 is_stmt 0 discriminator 1
 3883 00d2 7B68     		ldr	r3, [r7, #4]
 3884 00d4 1B68     		ldr	r3, [r3]
 3885 00d6 5B68     		ldr	r3, [r3, #4]
 3886 00d8 03F00103 		and	r3, r3, #1
 3887 00dc 002B     		cmp	r3, #0
ARM GAS  /tmp/cczU8NLw.s 			page 105


 3888 00de 2DD0     		beq	.L216
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3889              		.loc 1 2063 0 is_stmt 1
 3890 00e0 7B68     		ldr	r3, [r7, #4]
 3891 00e2 5B6D     		ldr	r3, [r3, #84]
 3892 00e4 002B     		cmp	r3, #0
 3893 00e6 11D0     		beq	.L217
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 3894              		.loc 1 2066 0
 3895 00e8 7B68     		ldr	r3, [r7, #4]
 3896 00ea 5B6D     		ldr	r3, [r3, #84]
 3897 00ec 1846     		mov	r0, r3
 3898 00ee FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3899 00f2 0346     		mov	r3, r0
 3900 00f4 002B     		cmp	r3, #0
 3901 00f6 07D0     		beq	.L218
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 3902              		.loc 1 2068 0
 3903 00f8 7B68     		ldr	r3, [r7, #4]
 3904 00fa 5B6D     		ldr	r3, [r3, #84]
 3905 00fc 0022     		movs	r2, #0
 3906 00fe 1A65     		str	r2, [r3, #80]
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3907              		.loc 1 2069 0
 3908 0100 7B68     		ldr	r3, [r7, #4]
 3909 0102 4022     		movs	r2, #64
 3910 0104 1A66     		str	r2, [r3, #96]
 3911 0106 01E0     		b	.L217
 3912              	.L218:
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 3913              		.loc 1 2073 0
 3914 0108 0023     		movs	r3, #0
 3915 010a BB61     		str	r3, [r7, #24]
 3916              	.L217:
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3917              		.loc 1 2077 0
 3918 010c 7B68     		ldr	r3, [r7, #4]
 3919 010e 9B6D     		ldr	r3, [r3, #88]
 3920 0110 002B     		cmp	r3, #0
 3921 0112 13D0     		beq	.L216
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 3922              		.loc 1 2080 0
 3923 0114 7B68     		ldr	r3, [r7, #4]
 3924 0116 9B6D     		ldr	r3, [r3, #88]
ARM GAS  /tmp/cczU8NLw.s 			page 106


 3925 0118 1846     		mov	r0, r3
 3926 011a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3927 011e 0346     		mov	r3, r0
 3928 0120 002B     		cmp	r3, #0
 3929 0122 09D0     		beq	.L219
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 3930              		.loc 1 2082 0
 3931 0124 7B68     		ldr	r3, [r7, #4]
 3932 0126 9B6D     		ldr	r3, [r3, #88]
 3933 0128 0022     		movs	r2, #0
 3934 012a 1A65     		str	r2, [r3, #80]
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3935              		.loc 1 2083 0
 3936 012c 7B68     		ldr	r3, [r7, #4]
 3937 012e 4022     		movs	r2, #64
 3938 0130 1A66     		str	r2, [r3, #96]
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 1U;
 3939              		.loc 1 2084 0
 3940 0132 0123     		movs	r3, #1
 3941 0134 BB61     		str	r3, [r7, #24]
 3942 0136 01E0     		b	.L216
 3943              	.L219:
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 3944              		.loc 1 2088 0
 3945 0138 0023     		movs	r3, #0
 3946 013a BB61     		str	r3, [r7, #24]
 3947              	.L216:
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3948              		.loc 1 2094 0
 3949 013c 7B68     		ldr	r3, [r7, #4]
 3950 013e 1B68     		ldr	r3, [r3]
 3951 0140 5B68     		ldr	r3, [r3, #4]
 3952 0142 03F00203 		and	r3, r3, #2
 3953 0146 002B     		cmp	r3, #0
 3954 0148 15D0     		beq	.L220
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3955              		.loc 1 2097 0
 3956 014a 7B68     		ldr	r3, [r7, #4]
 3957 014c 5B6D     		ldr	r3, [r3, #84]
 3958 014e 002B     		cmp	r3, #0
 3959 0150 11D0     		beq	.L220
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 3960              		.loc 1 2100 0
 3961 0152 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 107


 3962 0154 5B6D     		ldr	r3, [r3, #84]
 3963 0156 1846     		mov	r0, r3
 3964 0158 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3965 015c 0346     		mov	r3, r0
 3966 015e 002B     		cmp	r3, #0
 3967 0160 07D0     		beq	.L221
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 3968              		.loc 1 2102 0
 3969 0162 7B68     		ldr	r3, [r7, #4]
 3970 0164 5B6D     		ldr	r3, [r3, #84]
 3971 0166 0022     		movs	r2, #0
 3972 0168 1A65     		str	r2, [r3, #80]
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3973              		.loc 1 2103 0
 3974 016a 7B68     		ldr	r3, [r7, #4]
 3975 016c 4022     		movs	r2, #64
 3976 016e 1A66     		str	r2, [r3, #96]
 3977 0170 01E0     		b	.L220
 3978              	.L221:
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 3979              		.loc 1 2107 0
 3980 0172 0023     		movs	r3, #0
 3981 0174 BB61     		str	r3, [r7, #24]
 3982              	.L220:
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3983              		.loc 1 2112 0
 3984 0176 7B68     		ldr	r3, [r7, #4]
 3985 0178 1B68     		ldr	r3, [r3]
 3986 017a 5B68     		ldr	r3, [r3, #4]
 3987 017c 03F00103 		and	r3, r3, #1
 3988 0180 002B     		cmp	r3, #0
 3989 0182 15D0     		beq	.L222
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3990              		.loc 1 2115 0
 3991 0184 7B68     		ldr	r3, [r7, #4]
 3992 0186 9B6D     		ldr	r3, [r3, #88]
 3993 0188 002B     		cmp	r3, #0
 3994 018a 11D0     		beq	.L222
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 3995              		.loc 1 2118 0
 3996 018c 7B68     		ldr	r3, [r7, #4]
 3997 018e 9B6D     		ldr	r3, [r3, #88]
 3998 0190 1846     		mov	r0, r3
 3999 0192 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4000 0196 0346     		mov	r3, r0
ARM GAS  /tmp/cczU8NLw.s 			page 108


 4001 0198 002B     		cmp	r3, #0
 4002 019a 07D0     		beq	.L223
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 4003              		.loc 1 2120 0
 4004 019c 7B68     		ldr	r3, [r7, #4]
 4005 019e 9B6D     		ldr	r3, [r3, #88]
 4006 01a0 0022     		movs	r2, #0
 4007 01a2 1A65     		str	r2, [r3, #80]
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4008              		.loc 1 2121 0
 4009 01a4 7B68     		ldr	r3, [r7, #4]
 4010 01a6 4022     		movs	r2, #64
 4011 01a8 1A66     		str	r2, [r3, #96]
 4012 01aa 01E0     		b	.L222
 4013              	.L223:
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
 4014              		.loc 1 2125 0
 4015 01ac 0023     		movs	r3, #0
 4016 01ae BB61     		str	r3, [r7, #24]
 4017              	.L222:
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (abortcplt == 1U)
 4018              		.loc 1 2130 0
 4019 01b0 BB69     		ldr	r3, [r7, #24]
 4020 01b2 012B     		cmp	r3, #1
 4021 01b4 29D1     		bne	.L224
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4022              		.loc 1 2133 0
 4023 01b6 7B68     		ldr	r3, [r7, #4]
 4024 01b8 0022     		movs	r2, #0
 4025 01ba A3F84620 		strh	r2, [r3, #70]	@ movhi
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 4026              		.loc 1 2134 0
 4027 01be 7B68     		ldr	r3, [r7, #4]
 4028 01c0 0022     		movs	r2, #0
 4029 01c2 DA87     		strh	r2, [r3, #62]	@ movhi
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check error during Abort procedure */
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 4030              		.loc 1 2137 0
 4031 01c4 7B68     		ldr	r3, [r7, #4]
 4032 01c6 1B6E     		ldr	r3, [r3, #96]
 4033 01c8 402B     		cmp	r3, #64
 4034 01ca 02D1     		bne	.L225
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4035              		.loc 1 2140 0
ARM GAS  /tmp/cczU8NLw.s 			page 109


 4036 01cc 0123     		movs	r3, #1
 4037 01ce FB77     		strb	r3, [r7, #31]
 4038 01d0 02E0     		b	.L226
 4039              	.L225:
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Reset errorCode */
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 4040              		.loc 1 2145 0
 4041 01d2 7B68     		ldr	r3, [r7, #4]
 4042 01d4 0022     		movs	r2, #0
 4043 01d6 1A66     		str	r2, [r3, #96]
 4044              	.L226:
 4045              	.LBB5:
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4046              		.loc 1 2149 0
 4047 01d8 0023     		movs	r3, #0
 4048 01da 3B61     		str	r3, [r7, #16]
 4049 01dc 7B68     		ldr	r3, [r7, #4]
 4050 01de 1B68     		ldr	r3, [r3]
 4051 01e0 DB68     		ldr	r3, [r3, #12]
 4052 01e2 3B61     		str	r3, [r7, #16]
 4053 01e4 7B68     		ldr	r3, [r7, #4]
 4054 01e6 1B68     		ldr	r3, [r3]
 4055 01e8 9B68     		ldr	r3, [r3, #8]
 4056 01ea 3B61     		str	r3, [r7, #16]
 4057 01ec 3B69     		ldr	r3, [r7, #16]
 4058              	.LBE5:
 4059              	.LBB6:
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 4060              		.loc 1 2150 0
 4061 01ee 0023     		movs	r3, #0
 4062 01f0 FB60     		str	r3, [r7, #12]
 4063 01f2 7B68     		ldr	r3, [r7, #4]
 4064 01f4 1B68     		ldr	r3, [r3]
 4065 01f6 9B68     		ldr	r3, [r3, #8]
 4066 01f8 FB60     		str	r3, [r7, #12]
 4067 01fa FB68     		ldr	r3, [r7, #12]
 4068              	.LBE6:
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4069              		.loc 1 2153 0
 4070 01fc 7B68     		ldr	r3, [r7, #4]
 4071 01fe 0122     		movs	r2, #1
 4072 0200 83F85D20 		strb	r2, [r3, #93]
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
 4073              		.loc 1 2156 0
 4074 0204 7868     		ldr	r0, [r7, #4]
 4075 0206 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4076              	.L224:
ARM GAS  /tmp/cczU8NLw.s 			page 110


2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 4077              		.loc 1 2159 0
 4078 020a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4079              	.L210:
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4080              		.loc 1 2160 0
 4081 020c 1846     		mov	r0, r3
 4082 020e 2037     		adds	r7, r7, #32
 4083              	.LCFI77:
 4084              		.cfi_def_cfa_offset 8
 4085 0210 BD46     		mov	sp, r7
 4086              	.LCFI78:
 4087              		.cfi_def_cfa_register 13
 4088              		@ sp needed
 4089 0212 80BD     		pop	{r7, pc}
 4090              	.L228:
 4091              		.align	2
 4092              	.L227:
 4093 0214 00000000 		.word	SPI_AbortTx_ISR
 4094 0218 00000000 		.word	SPI_AbortRx_ISR
 4095 021c 00000000 		.word	SPI_DMATxAbortCallback
 4096 0220 00000000 		.word	SPI_DMARxAbortCallback
 4097              		.cfi_endproc
 4098              	.LFE152:
 4100              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4101              		.align	1
 4102              		.global	HAL_SPI_DMAPause
 4103              		.syntax unified
 4104              		.thumb
 4105              		.thumb_func
 4106              		.fpu fpv4-sp-d16
 4108              	HAL_SPI_DMAPause:
 4109              	.LFB153:
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4110              		.loc 1 2169 0
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 8
 4113              		@ frame_needed = 1, uses_anonymous_args = 0
 4114              		@ link register save eliminated.
 4115 0000 80B4     		push	{r7}
 4116              	.LCFI79:
 4117              		.cfi_def_cfa_offset 4
 4118              		.cfi_offset 7, -4
 4119 0002 83B0     		sub	sp, sp, #12
 4120              	.LCFI80:
 4121              		.cfi_def_cfa_offset 16
 4122 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cczU8NLw.s 			page 111


 4123              	.LCFI81:
 4124              		.cfi_def_cfa_register 7
 4125 0006 7860     		str	r0, [r7, #4]
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4126              		.loc 1 2171 0
 4127 0008 7B68     		ldr	r3, [r7, #4]
 4128 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 4129 000e 012B     		cmp	r3, #1
 4130 0010 01D1     		bne	.L230
 4131              		.loc 1 2171 0 is_stmt 0 discriminator 1
 4132 0012 0223     		movs	r3, #2
 4133 0014 10E0     		b	.L231
 4134              	.L230:
 4135              		.loc 1 2171 0 discriminator 2
 4136 0016 7B68     		ldr	r3, [r7, #4]
 4137 0018 0122     		movs	r2, #1
 4138 001a 83F85C20 		strb	r2, [r3, #92]
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4139              		.loc 1 2174 0 is_stmt 1 discriminator 2
 4140 001e 7B68     		ldr	r3, [r7, #4]
 4141 0020 1B68     		ldr	r3, [r3]
 4142 0022 5A68     		ldr	r2, [r3, #4]
 4143 0024 7B68     		ldr	r3, [r7, #4]
 4144 0026 1B68     		ldr	r3, [r3]
 4145 0028 22F00302 		bic	r2, r2, #3
 4146 002c 5A60     		str	r2, [r3, #4]
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4147              		.loc 1 2177 0 discriminator 2
 4148 002e 7B68     		ldr	r3, [r7, #4]
 4149 0030 0022     		movs	r2, #0
 4150 0032 83F85C20 		strb	r2, [r3, #92]
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 4151              		.loc 1 2179 0 discriminator 2
 4152 0036 0023     		movs	r3, #0
 4153              	.L231:
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4154              		.loc 1 2180 0
 4155 0038 1846     		mov	r0, r3
 4156 003a 0C37     		adds	r7, r7, #12
 4157              	.LCFI82:
 4158              		.cfi_def_cfa_offset 4
 4159 003c BD46     		mov	sp, r7
 4160              	.LCFI83:
 4161              		.cfi_def_cfa_register 13
 4162              		@ sp needed
 4163 003e 5DF8047B 		ldr	r7, [sp], #4
 4164              	.LCFI84:
 4165              		.cfi_restore 7
 4166              		.cfi_def_cfa_offset 0
 4167 0042 7047     		bx	lr
 4168              		.cfi_endproc
ARM GAS  /tmp/cczU8NLw.s 			page 112


 4169              	.LFE153:
 4171              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4172              		.align	1
 4173              		.global	HAL_SPI_DMAResume
 4174              		.syntax unified
 4175              		.thumb
 4176              		.thumb_func
 4177              		.fpu fpv4-sp-d16
 4179              	HAL_SPI_DMAResume:
 4180              	.LFB154:
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4181              		.loc 1 2189 0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 8
 4184              		@ frame_needed = 1, uses_anonymous_args = 0
 4185              		@ link register save eliminated.
 4186 0000 80B4     		push	{r7}
 4187              	.LCFI85:
 4188              		.cfi_def_cfa_offset 4
 4189              		.cfi_offset 7, -4
 4190 0002 83B0     		sub	sp, sp, #12
 4191              	.LCFI86:
 4192              		.cfi_def_cfa_offset 16
 4193 0004 00AF     		add	r7, sp, #0
 4194              	.LCFI87:
 4195              		.cfi_def_cfa_register 7
 4196 0006 7860     		str	r0, [r7, #4]
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4197              		.loc 1 2191 0
 4198 0008 7B68     		ldr	r3, [r7, #4]
 4199 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 4200 000e 012B     		cmp	r3, #1
 4201 0010 01D1     		bne	.L233
 4202              		.loc 1 2191 0 is_stmt 0 discriminator 1
 4203 0012 0223     		movs	r3, #2
 4204 0014 10E0     		b	.L234
 4205              	.L233:
 4206              		.loc 1 2191 0 discriminator 2
 4207 0016 7B68     		ldr	r3, [r7, #4]
 4208 0018 0122     		movs	r2, #1
 4209 001a 83F85C20 		strb	r2, [r3, #92]
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4210              		.loc 1 2194 0 is_stmt 1 discriminator 2
 4211 001e 7B68     		ldr	r3, [r7, #4]
 4212 0020 1B68     		ldr	r3, [r3]
 4213 0022 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 113


 4214 0024 7B68     		ldr	r3, [r7, #4]
 4215 0026 1B68     		ldr	r3, [r3]
 4216 0028 42F00302 		orr	r2, r2, #3
 4217 002c 5A60     		str	r2, [r3, #4]
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4218              		.loc 1 2197 0 discriminator 2
 4219 002e 7B68     		ldr	r3, [r7, #4]
 4220 0030 0022     		movs	r2, #0
 4221 0032 83F85C20 		strb	r2, [r3, #92]
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 4222              		.loc 1 2199 0 discriminator 2
 4223 0036 0023     		movs	r3, #0
 4224              	.L234:
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4225              		.loc 1 2200 0
 4226 0038 1846     		mov	r0, r3
 4227 003a 0C37     		adds	r7, r7, #12
 4228              	.LCFI88:
 4229              		.cfi_def_cfa_offset 4
 4230 003c BD46     		mov	sp, r7
 4231              	.LCFI89:
 4232              		.cfi_def_cfa_register 13
 4233              		@ sp needed
 4234 003e 5DF8047B 		ldr	r7, [sp], #4
 4235              	.LCFI90:
 4236              		.cfi_restore 7
 4237              		.cfi_def_cfa_offset 0
 4238 0042 7047     		bx	lr
 4239              		.cfi_endproc
 4240              	.LFE154:
 4242              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4243              		.align	1
 4244              		.global	HAL_SPI_DMAStop
 4245              		.syntax unified
 4246              		.thumb
 4247              		.thumb_func
 4248              		.fpu fpv4-sp-d16
 4250              	HAL_SPI_DMAStop:
 4251              	.LFB155:
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Stop the DMA Transfer.
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4252              		.loc 1 2209 0
 4253              		.cfi_startproc
 4254              		@ args = 0, pretend = 0, frame = 8
 4255              		@ frame_needed = 1, uses_anonymous_args = 0
 4256 0000 80B5     		push	{r7, lr}
 4257              	.LCFI91:
ARM GAS  /tmp/cczU8NLw.s 			page 114


 4258              		.cfi_def_cfa_offset 8
 4259              		.cfi_offset 7, -8
 4260              		.cfi_offset 14, -4
 4261 0002 82B0     		sub	sp, sp, #8
 4262              	.LCFI92:
 4263              		.cfi_def_cfa_offset 16
 4264 0004 00AF     		add	r7, sp, #0
 4265              	.LCFI93:
 4266              		.cfi_def_cfa_register 7
 4267 0006 7860     		str	r0, [r7, #4]
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      */
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 4268              		.loc 1 2217 0
 4269 0008 7B68     		ldr	r3, [r7, #4]
 4270 000a 5B6D     		ldr	r3, [r3, #84]
 4271 000c 002B     		cmp	r3, #0
 4272 000e 04D0     		beq	.L236
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmatx);
 4273              		.loc 1 2219 0
 4274 0010 7B68     		ldr	r3, [r7, #4]
 4275 0012 5B6D     		ldr	r3, [r3, #84]
 4276 0014 1846     		mov	r0, r3
 4277 0016 FFF7FEFF 		bl	HAL_DMA_Abort
 4278              	.L236:
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 4279              		.loc 1 2222 0
 4280 001a 7B68     		ldr	r3, [r7, #4]
 4281 001c 9B6D     		ldr	r3, [r3, #88]
 4282 001e 002B     		cmp	r3, #0
 4283 0020 04D0     		beq	.L237
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmarx);
 4284              		.loc 1 2224 0
 4285 0022 7B68     		ldr	r3, [r7, #4]
 4286 0024 9B6D     		ldr	r3, [r3, #88]
 4287 0026 1846     		mov	r0, r3
 4288 0028 FFF7FEFF 		bl	HAL_DMA_Abort
 4289              	.L237:
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4290              		.loc 1 2228 0
 4291 002c 7B68     		ldr	r3, [r7, #4]
 4292 002e 1B68     		ldr	r3, [r3]
 4293 0030 5A68     		ldr	r2, [r3, #4]
 4294 0032 7B68     		ldr	r3, [r7, #4]
 4295 0034 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 115


 4296 0036 22F00302 		bic	r2, r2, #3
 4297 003a 5A60     		str	r2, [r3, #4]
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4298              		.loc 1 2229 0
 4299 003c 7B68     		ldr	r3, [r7, #4]
 4300 003e 0122     		movs	r2, #1
 4301 0040 83F85D20 		strb	r2, [r3, #93]
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 4302              		.loc 1 2230 0
 4303 0044 0023     		movs	r3, #0
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4304              		.loc 1 2231 0
 4305 0046 1846     		mov	r0, r3
 4306 0048 0837     		adds	r7, r7, #8
 4307              	.LCFI94:
 4308              		.cfi_def_cfa_offset 8
 4309 004a BD46     		mov	sp, r7
 4310              	.LCFI95:
 4311              		.cfi_def_cfa_register 13
 4312              		@ sp needed
 4313 004c 80BD     		pop	{r7, pc}
 4314              		.cfi_endproc
 4315              	.LFE155:
 4317              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4318              		.align	1
 4319              		.global	HAL_SPI_IRQHandler
 4320              		.syntax unified
 4321              		.thumb
 4322              		.thumb_func
 4323              		.fpu fpv4-sp-d16
 4325              	HAL_SPI_IRQHandler:
 4326              	.LFB156:
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4327              		.loc 1 2240 0
 4328              		.cfi_startproc
 4329              		@ args = 0, pretend = 0, frame = 32
 4330              		@ frame_needed = 1, uses_anonymous_args = 0
 4331 0000 80B5     		push	{r7, lr}
 4332              	.LCFI96:
 4333              		.cfi_def_cfa_offset 8
 4334              		.cfi_offset 7, -8
 4335              		.cfi_offset 14, -4
 4336 0002 88B0     		sub	sp, sp, #32
 4337              	.LCFI97:
 4338              		.cfi_def_cfa_offset 40
 4339 0004 00AF     		add	r7, sp, #0
 4340              	.LCFI98:
 4341              		.cfi_def_cfa_register 7
 4342 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 116


2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4343              		.loc 1 2241 0
 4344 0008 7B68     		ldr	r3, [r7, #4]
 4345 000a 1B68     		ldr	r3, [r3]
 4346 000c 5B68     		ldr	r3, [r3, #4]
 4347 000e FB61     		str	r3, [r7, #28]
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4348              		.loc 1 2242 0
 4349 0010 7B68     		ldr	r3, [r7, #4]
 4350 0012 1B68     		ldr	r3, [r3]
 4351 0014 9B68     		ldr	r3, [r3, #8]
 4352 0016 BB61     		str	r3, [r7, #24]
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((itflag & SPI_FLAG_OVR) == RESET) &&
 4353              		.loc 1 2245 0
 4354 0018 BB69     		ldr	r3, [r7, #24]
 4355 001a 03F04003 		and	r3, r3, #64
 4356 001e 002B     		cmp	r3, #0
 4357 0020 0ED1     		bne	.L240
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       ((itflag & SPI_FLAG_RXNE) != RESET) && ((itsource & SPI_IT_RXNE) != RESET))
 4358              		.loc 1 2246 0 discriminator 1
 4359 0022 BB69     		ldr	r3, [r7, #24]
 4360 0024 03F00103 		and	r3, r3, #1
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       ((itflag & SPI_FLAG_RXNE) != RESET) && ((itsource & SPI_IT_RXNE) != RESET))
 4361              		.loc 1 2245 0 discriminator 1
 4362 0028 002B     		cmp	r3, #0
 4363 002a 09D0     		beq	.L240
 4364              		.loc 1 2246 0
 4365 002c FB69     		ldr	r3, [r7, #28]
 4366 002e 03F04003 		and	r3, r3, #64
 4367 0032 002B     		cmp	r3, #0
 4368 0034 04D0     		beq	.L240
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR(hspi);
 4369              		.loc 1 2248 0
 4370 0036 7B68     		ldr	r3, [r7, #4]
 4371 0038 DB6C     		ldr	r3, [r3, #76]
 4372 003a 7868     		ldr	r0, [r7, #4]
 4373 003c 9847     		blx	r3
 4374              	.LVL0:
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 4375              		.loc 1 2249 0
 4376 003e B1E0     		b	.L239
 4377              	.L240:
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((itflag & SPI_FLAG_TXE) != RESET) && ((itsource & SPI_IT_TXE) != RESET))
 4378              		.loc 1 2253 0
 4379 0040 BB69     		ldr	r3, [r7, #24]
 4380 0042 03F00203 		and	r3, r3, #2
 4381 0046 002B     		cmp	r3, #0
 4382 0048 09D0     		beq	.L242
 4383              		.loc 1 2253 0 is_stmt 0 discriminator 1
 4384 004a FB69     		ldr	r3, [r7, #28]
 4385 004c 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/cczU8NLw.s 			page 117


 4386 0050 002B     		cmp	r3, #0
 4387 0052 04D0     		beq	.L242
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR(hspi);
 4388              		.loc 1 2255 0 is_stmt 1
 4389 0054 7B68     		ldr	r3, [r7, #4]
 4390 0056 1B6D     		ldr	r3, [r3, #80]
 4391 0058 7868     		ldr	r0, [r7, #4]
 4392 005a 9847     		blx	r3
 4393              	.LVL1:
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 4394              		.loc 1 2256 0
 4395 005c A2E0     		b	.L239
 4396              	.L242:
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((itflag & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE)) != RESET) && ((itsource & SPI_IT_ER
 4397              		.loc 1 2260 0
 4398 005e BB69     		ldr	r3, [r7, #24]
 4399 0060 03F4B073 		and	r3, r3, #352
 4400 0064 002B     		cmp	r3, #0
 4401 0066 00F09D80 		beq	.L239
 4402              		.loc 1 2260 0 is_stmt 0 discriminator 1
 4403 006a FB69     		ldr	r3, [r7, #28]
 4404 006c 03F02003 		and	r3, r3, #32
 4405 0070 002B     		cmp	r3, #0
 4406 0072 00F09780 		beq	.L239
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_OVR) != RESET)
 4407              		.loc 1 2263 0 is_stmt 1
 4408 0076 BB69     		ldr	r3, [r7, #24]
 4409 0078 03F04003 		and	r3, r3, #64
 4410 007c 002B     		cmp	r3, #0
 4411 007e 23D0     		beq	.L243
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 4412              		.loc 1 2265 0
 4413 0080 7B68     		ldr	r3, [r7, #4]
 4414 0082 93F85D30 		ldrb	r3, [r3, #93]
 4415 0086 DBB2     		uxtb	r3, r3
 4416 0088 032B     		cmp	r3, #3
 4417 008a 11D0     		beq	.L244
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 4418              		.loc 1 2267 0
 4419 008c 7B68     		ldr	r3, [r7, #4]
 4420 008e 1B6E     		ldr	r3, [r3, #96]
 4421 0090 43F00402 		orr	r2, r3, #4
 4422 0094 7B68     		ldr	r3, [r7, #4]
 4423 0096 1A66     		str	r2, [r3, #96]
 4424              	.LBB7:
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4425              		.loc 1 2268 0
 4426 0098 0023     		movs	r3, #0
 4427 009a 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/cczU8NLw.s 			page 118


 4428 009c 7B68     		ldr	r3, [r7, #4]
 4429 009e 1B68     		ldr	r3, [r3]
 4430 00a0 DB68     		ldr	r3, [r3, #12]
 4431 00a2 7B61     		str	r3, [r7, #20]
 4432 00a4 7B68     		ldr	r3, [r7, #4]
 4433 00a6 1B68     		ldr	r3, [r3]
 4434 00a8 9B68     		ldr	r3, [r3, #8]
 4435 00aa 7B61     		str	r3, [r7, #20]
 4436 00ac 7B69     		ldr	r3, [r7, #20]
 4437              	.LBE7:
 4438 00ae 0BE0     		b	.L243
 4439              	.L244:
 4440              	.LBB8:
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4441              		.loc 1 2272 0
 4442 00b0 0023     		movs	r3, #0
 4443 00b2 3B61     		str	r3, [r7, #16]
 4444 00b4 7B68     		ldr	r3, [r7, #4]
 4445 00b6 1B68     		ldr	r3, [r3]
 4446 00b8 DB68     		ldr	r3, [r3, #12]
 4447 00ba 3B61     		str	r3, [r7, #16]
 4448 00bc 7B68     		ldr	r3, [r7, #4]
 4449 00be 1B68     		ldr	r3, [r3]
 4450 00c0 9B68     		ldr	r3, [r3, #8]
 4451 00c2 3B61     		str	r3, [r7, #16]
 4452 00c4 3B69     		ldr	r3, [r7, #16]
 4453              	.LBE8:
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return;
 4454              		.loc 1 2273 0
 4455 00c6 6DE0     		b	.L239
 4456              	.L243:
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_MODF) != RESET)
 4457              		.loc 1 2278 0
 4458 00c8 BB69     		ldr	r3, [r7, #24]
 4459 00ca 03F02003 		and	r3, r3, #32
 4460 00ce 002B     		cmp	r3, #0
 4461 00d0 14D0     		beq	.L245
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 4462              		.loc 1 2280 0
 4463 00d2 7B68     		ldr	r3, [r7, #4]
 4464 00d4 1B6E     		ldr	r3, [r3, #96]
 4465 00d6 43F00102 		orr	r2, r3, #1
 4466 00da 7B68     		ldr	r3, [r7, #4]
 4467 00dc 1A66     		str	r2, [r3, #96]
 4468              	.LBB9:
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4469              		.loc 1 2281 0
 4470 00de 0023     		movs	r3, #0
 4471 00e0 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 119


 4472 00e2 7B68     		ldr	r3, [r7, #4]
 4473 00e4 1B68     		ldr	r3, [r3]
 4474 00e6 9B68     		ldr	r3, [r3, #8]
 4475 00e8 FB60     		str	r3, [r7, #12]
 4476 00ea 7B68     		ldr	r3, [r7, #4]
 4477 00ec 1B68     		ldr	r3, [r3]
 4478 00ee 1A68     		ldr	r2, [r3]
 4479 00f0 7B68     		ldr	r3, [r7, #4]
 4480 00f2 1B68     		ldr	r3, [r3]
 4481 00f4 22F04002 		bic	r2, r2, #64
 4482 00f8 1A60     		str	r2, [r3]
 4483 00fa FB68     		ldr	r3, [r7, #12]
 4484              	.L245:
 4485              	.LBE9:
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_FRE) != RESET)
 4486              		.loc 1 2285 0
 4487 00fc BB69     		ldr	r3, [r7, #24]
 4488 00fe 03F48073 		and	r3, r3, #256
 4489 0102 002B     		cmp	r3, #0
 4490 0104 0CD0     		beq	.L246
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 4491              		.loc 1 2287 0
 4492 0106 7B68     		ldr	r3, [r7, #4]
 4493 0108 1B6E     		ldr	r3, [r3, #96]
 4494 010a 43F00802 		orr	r2, r3, #8
 4495 010e 7B68     		ldr	r3, [r7, #4]
 4496 0110 1A66     		str	r2, [r3, #96]
 4497              	.LBB10:
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 4498              		.loc 1 2288 0
 4499 0112 0023     		movs	r3, #0
 4500 0114 BB60     		str	r3, [r7, #8]
 4501 0116 7B68     		ldr	r3, [r7, #4]
 4502 0118 1B68     		ldr	r3, [r3]
 4503 011a 9B68     		ldr	r3, [r3, #8]
 4504 011c BB60     		str	r3, [r7, #8]
 4505 011e BB68     		ldr	r3, [r7, #8]
 4506              	.L246:
 4507              	.LBE10:
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4508              		.loc 1 2291 0
 4509 0120 7B68     		ldr	r3, [r7, #4]
 4510 0122 1B6E     		ldr	r3, [r3, #96]
 4511 0124 002B     		cmp	r3, #0
 4512 0126 3CD0     		beq	.L252
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable all interrupts */
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 4513              		.loc 1 2294 0
 4514 0128 7B68     		ldr	r3, [r7, #4]
 4515 012a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 120


 4516 012c 5A68     		ldr	r2, [r3, #4]
 4517 012e 7B68     		ldr	r3, [r7, #4]
 4518 0130 1B68     		ldr	r3, [r3]
 4519 0132 22F0E002 		bic	r2, r2, #224
 4520 0136 5A60     		str	r2, [r3, #4]
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 4521              		.loc 1 2296 0
 4522 0138 7B68     		ldr	r3, [r7, #4]
 4523 013a 0122     		movs	r2, #1
 4524 013c 83F85D20 		strb	r2, [r3, #93]
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
 4525              		.loc 1 2298 0
 4526 0140 FB69     		ldr	r3, [r7, #28]
 4527 0142 03F00203 		and	r3, r3, #2
 4528 0146 002B     		cmp	r3, #0
 4529 0148 04D1     		bne	.L248
 4530              		.loc 1 2298 0 is_stmt 0 discriminator 1
 4531 014a FB69     		ldr	r3, [r7, #28]
 4532 014c 03F00103 		and	r3, r3, #1
 4533 0150 002B     		cmp	r3, #0
 4534 0152 22D0     		beq	.L249
 4535              	.L248:
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 4536              		.loc 1 2300 0 is_stmt 1
 4537 0154 7B68     		ldr	r3, [r7, #4]
 4538 0156 1B68     		ldr	r3, [r3]
 4539 0158 5A68     		ldr	r2, [r3, #4]
 4540 015a 7B68     		ldr	r3, [r7, #4]
 4541 015c 1B68     		ldr	r3, [r3]
 4542 015e 22F00302 		bic	r2, r2, #3
 4543 0162 5A60     		str	r2, [r3, #4]
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
 4544              		.loc 1 2303 0
 4545 0164 7B68     		ldr	r3, [r7, #4]
 4546 0166 9B6D     		ldr	r3, [r3, #88]
 4547 0168 002B     		cmp	r3, #0
 4548 016a 08D0     		beq	.L250
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 4549              		.loc 1 2307 0
 4550 016c 7B68     		ldr	r3, [r7, #4]
 4551 016e 9B6D     		ldr	r3, [r3, #88]
 4552 0170 0E4A     		ldr	r2, .L253
 4553 0172 1A65     		str	r2, [r3, #80]
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmarx);
 4554              		.loc 1 2308 0
 4555 0174 7B68     		ldr	r3, [r7, #4]
 4556 0176 9B6D     		ldr	r3, [r3, #88]
 4557 0178 1846     		mov	r0, r3
 4558 017a FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/cczU8NLw.s 			page 121


 4559              	.L250:
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
 4560              		.loc 1 2311 0
 4561 017e 7B68     		ldr	r3, [r7, #4]
 4562 0180 5B6D     		ldr	r3, [r3, #84]
 4563 0182 002B     		cmp	r3, #0
 4564 0184 0CD0     		beq	.L247
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 4565              		.loc 1 2315 0
 4566 0186 7B68     		ldr	r3, [r7, #4]
 4567 0188 5B6D     		ldr	r3, [r3, #84]
 4568 018a 084A     		ldr	r2, .L253
 4569 018c 1A65     		str	r2, [r3, #80]
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmatx);
 4570              		.loc 1 2316 0
 4571 018e 7B68     		ldr	r3, [r7, #4]
 4572 0190 5B6D     		ldr	r3, [r3, #84]
 4573 0192 1846     		mov	r0, r3
 4574 0194 FFF7FEFF 		bl	HAL_DMA_Abort_IT
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 4575              		.loc 1 2311 0
 4576 0198 02E0     		b	.L247
 4577              	.L249:
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user error callback */
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
 4578              		.loc 1 2322 0
 4579 019a 7868     		ldr	r0, [r7, #4]
 4580 019c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4581              	.L247:
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 4582              		.loc 1 2325 0 discriminator 1
 4583 01a0 00BF     		nop
 4584              	.L252:
 4585              		.loc 1 2325 0 is_stmt 0
 4586 01a2 00BF     		nop
 4587              	.L239:
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4588              		.loc 1 2327 0 is_stmt 1
 4589 01a4 2037     		adds	r7, r7, #32
 4590              	.LCFI99:
 4591              		.cfi_def_cfa_offset 8
 4592 01a6 BD46     		mov	sp, r7
 4593              	.LCFI100:
 4594              		.cfi_def_cfa_register 13
 4595              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 122


 4596 01a8 80BD     		pop	{r7, pc}
 4597              	.L254:
 4598 01aa 00BF     		.align	2
 4599              	.L253:
 4600 01ac 00000000 		.word	SPI_DMAAbortOnError
 4601              		.cfi_endproc
 4602              	.LFE156:
 4604              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4605              		.align	1
 4606              		.weak	HAL_SPI_TxCpltCallback
 4607              		.syntax unified
 4608              		.thumb
 4609              		.thumb_func
 4610              		.fpu fpv4-sp-d16
 4612              	HAL_SPI_TxCpltCallback:
 4613              	.LFB157:
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx Transfer completed callback.
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4614              		.loc 1 2336 0
 4615              		.cfi_startproc
 4616              		@ args = 0, pretend = 0, frame = 8
 4617              		@ frame_needed = 1, uses_anonymous_args = 0
 4618              		@ link register save eliminated.
 4619 0000 80B4     		push	{r7}
 4620              	.LCFI101:
 4621              		.cfi_def_cfa_offset 4
 4622              		.cfi_offset 7, -4
 4623 0002 83B0     		sub	sp, sp, #12
 4624              	.LCFI102:
 4625              		.cfi_def_cfa_offset 16
 4626 0004 00AF     		add	r7, sp, #0
 4627              	.LCFI103:
 4628              		.cfi_def_cfa_register 7
 4629 0006 7860     		str	r0, [r7, #4]
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4630              		.loc 1 2343 0
 4631 0008 00BF     		nop
 4632 000a 0C37     		adds	r7, r7, #12
 4633              	.LCFI104:
 4634              		.cfi_def_cfa_offset 4
 4635 000c BD46     		mov	sp, r7
 4636              	.LCFI105:
 4637              		.cfi_def_cfa_register 13
 4638              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 123


 4639 000e 5DF8047B 		ldr	r7, [sp], #4
 4640              	.LCFI106:
 4641              		.cfi_restore 7
 4642              		.cfi_def_cfa_offset 0
 4643 0012 7047     		bx	lr
 4644              		.cfi_endproc
 4645              	.LFE157:
 4647              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4648              		.align	1
 4649              		.weak	HAL_SPI_RxCpltCallback
 4650              		.syntax unified
 4651              		.thumb
 4652              		.thumb_func
 4653              		.fpu fpv4-sp-d16
 4655              	HAL_SPI_RxCpltCallback:
 4656              	.LFB158:
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Rx Transfer completed callback.
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4657              		.loc 1 2352 0
 4658              		.cfi_startproc
 4659              		@ args = 0, pretend = 0, frame = 8
 4660              		@ frame_needed = 1, uses_anonymous_args = 0
 4661              		@ link register save eliminated.
 4662 0000 80B4     		push	{r7}
 4663              	.LCFI107:
 4664              		.cfi_def_cfa_offset 4
 4665              		.cfi_offset 7, -4
 4666 0002 83B0     		sub	sp, sp, #12
 4667              	.LCFI108:
 4668              		.cfi_def_cfa_offset 16
 4669 0004 00AF     		add	r7, sp, #0
 4670              	.LCFI109:
 4671              		.cfi_def_cfa_register 7
 4672 0006 7860     		str	r0, [r7, #4]
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4673              		.loc 1 2359 0
 4674 0008 00BF     		nop
 4675 000a 0C37     		adds	r7, r7, #12
 4676              	.LCFI110:
 4677              		.cfi_def_cfa_offset 4
 4678 000c BD46     		mov	sp, r7
 4679              	.LCFI111:
 4680              		.cfi_def_cfa_register 13
 4681              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 124


 4682 000e 5DF8047B 		ldr	r7, [sp], #4
 4683              	.LCFI112:
 4684              		.cfi_restore 7
 4685              		.cfi_def_cfa_offset 0
 4686 0012 7047     		bx	lr
 4687              		.cfi_endproc
 4688              	.LFE158:
 4690              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4691              		.align	1
 4692              		.weak	HAL_SPI_TxRxCpltCallback
 4693              		.syntax unified
 4694              		.thumb
 4695              		.thumb_func
 4696              		.fpu fpv4-sp-d16
 4698              	HAL_SPI_TxRxCpltCallback:
 4699              	.LFB159:
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callback.
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4700              		.loc 1 2368 0
 4701              		.cfi_startproc
 4702              		@ args = 0, pretend = 0, frame = 8
 4703              		@ frame_needed = 1, uses_anonymous_args = 0
 4704              		@ link register save eliminated.
 4705 0000 80B4     		push	{r7}
 4706              	.LCFI113:
 4707              		.cfi_def_cfa_offset 4
 4708              		.cfi_offset 7, -4
 4709 0002 83B0     		sub	sp, sp, #12
 4710              	.LCFI114:
 4711              		.cfi_def_cfa_offset 16
 4712 0004 00AF     		add	r7, sp, #0
 4713              	.LCFI115:
 4714              		.cfi_def_cfa_register 7
 4715 0006 7860     		str	r0, [r7, #4]
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4716              		.loc 1 2375 0
 4717 0008 00BF     		nop
 4718 000a 0C37     		adds	r7, r7, #12
 4719              	.LCFI116:
 4720              		.cfi_def_cfa_offset 4
 4721 000c BD46     		mov	sp, r7
 4722              	.LCFI117:
 4723              		.cfi_def_cfa_register 13
 4724              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 125


 4725 000e 5DF8047B 		ldr	r7, [sp], #4
 4726              	.LCFI118:
 4727              		.cfi_restore 7
 4728              		.cfi_def_cfa_offset 0
 4729 0012 7047     		bx	lr
 4730              		.cfi_endproc
 4731              	.LFE159:
 4733              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4734              		.align	1
 4735              		.weak	HAL_SPI_TxHalfCpltCallback
 4736              		.syntax unified
 4737              		.thumb
 4738              		.thumb_func
 4739              		.fpu fpv4-sp-d16
 4741              	HAL_SPI_TxHalfCpltCallback:
 4742              	.LFB160:
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx Half Transfer completed callback.
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4743              		.loc 1 2384 0
 4744              		.cfi_startproc
 4745              		@ args = 0, pretend = 0, frame = 8
 4746              		@ frame_needed = 1, uses_anonymous_args = 0
 4747              		@ link register save eliminated.
 4748 0000 80B4     		push	{r7}
 4749              	.LCFI119:
 4750              		.cfi_def_cfa_offset 4
 4751              		.cfi_offset 7, -4
 4752 0002 83B0     		sub	sp, sp, #12
 4753              	.LCFI120:
 4754              		.cfi_def_cfa_offset 16
 4755 0004 00AF     		add	r7, sp, #0
 4756              	.LCFI121:
 4757              		.cfi_def_cfa_register 7
 4758 0006 7860     		str	r0, [r7, #4]
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4759              		.loc 1 2391 0
 4760 0008 00BF     		nop
 4761 000a 0C37     		adds	r7, r7, #12
 4762              	.LCFI122:
 4763              		.cfi_def_cfa_offset 4
 4764 000c BD46     		mov	sp, r7
 4765              	.LCFI123:
 4766              		.cfi_def_cfa_register 13
 4767              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 126


 4768 000e 5DF8047B 		ldr	r7, [sp], #4
 4769              	.LCFI124:
 4770              		.cfi_restore 7
 4771              		.cfi_def_cfa_offset 0
 4772 0012 7047     		bx	lr
 4773              		.cfi_endproc
 4774              	.LFE160:
 4776              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4777              		.align	1
 4778              		.weak	HAL_SPI_RxHalfCpltCallback
 4779              		.syntax unified
 4780              		.thumb
 4781              		.thumb_func
 4782              		.fpu fpv4-sp-d16
 4784              	HAL_SPI_RxHalfCpltCallback:
 4785              	.LFB161:
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Rx Half Transfer completed callback.
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4786              		.loc 1 2400 0
 4787              		.cfi_startproc
 4788              		@ args = 0, pretend = 0, frame = 8
 4789              		@ frame_needed = 1, uses_anonymous_args = 0
 4790              		@ link register save eliminated.
 4791 0000 80B4     		push	{r7}
 4792              	.LCFI125:
 4793              		.cfi_def_cfa_offset 4
 4794              		.cfi_offset 7, -4
 4795 0002 83B0     		sub	sp, sp, #12
 4796              	.LCFI126:
 4797              		.cfi_def_cfa_offset 16
 4798 0004 00AF     		add	r7, sp, #0
 4799              	.LCFI127:
 4800              		.cfi_def_cfa_register 7
 4801 0006 7860     		str	r0, [r7, #4]
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4802              		.loc 1 2407 0
 4803 0008 00BF     		nop
 4804 000a 0C37     		adds	r7, r7, #12
 4805              	.LCFI128:
 4806              		.cfi_def_cfa_offset 4
 4807 000c BD46     		mov	sp, r7
 4808              	.LCFI129:
 4809              		.cfi_def_cfa_register 13
 4810              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 127


 4811 000e 5DF8047B 		ldr	r7, [sp], #4
 4812              	.LCFI130:
 4813              		.cfi_restore 7
 4814              		.cfi_def_cfa_offset 0
 4815 0012 7047     		bx	lr
 4816              		.cfi_endproc
 4817              	.LFE161:
 4819              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4820              		.align	1
 4821              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4822              		.syntax unified
 4823              		.thumb
 4824              		.thumb_func
 4825              		.fpu fpv4-sp-d16
 4827              	HAL_SPI_TxRxHalfCpltCallback:
 4828              	.LFB162:
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Tx and Rx Half Transfer callback.
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4829              		.loc 1 2416 0
 4830              		.cfi_startproc
 4831              		@ args = 0, pretend = 0, frame = 8
 4832              		@ frame_needed = 1, uses_anonymous_args = 0
 4833              		@ link register save eliminated.
 4834 0000 80B4     		push	{r7}
 4835              	.LCFI131:
 4836              		.cfi_def_cfa_offset 4
 4837              		.cfi_offset 7, -4
 4838 0002 83B0     		sub	sp, sp, #12
 4839              	.LCFI132:
 4840              		.cfi_def_cfa_offset 16
 4841 0004 00AF     		add	r7, sp, #0
 4842              	.LCFI133:
 4843              		.cfi_def_cfa_register 7
 4844 0006 7860     		str	r0, [r7, #4]
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4845              		.loc 1 2423 0
 4846 0008 00BF     		nop
 4847 000a 0C37     		adds	r7, r7, #12
 4848              	.LCFI134:
 4849              		.cfi_def_cfa_offset 4
 4850 000c BD46     		mov	sp, r7
 4851              	.LCFI135:
 4852              		.cfi_def_cfa_register 13
 4853              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 128


 4854 000e 5DF8047B 		ldr	r7, [sp], #4
 4855              	.LCFI136:
 4856              		.cfi_restore 7
 4857              		.cfi_def_cfa_offset 0
 4858 0012 7047     		bx	lr
 4859              		.cfi_endproc
 4860              	.LFE162:
 4862              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4863              		.align	1
 4864              		.weak	HAL_SPI_ErrorCallback
 4865              		.syntax unified
 4866              		.thumb
 4867              		.thumb_func
 4868              		.fpu fpv4-sp-d16
 4870              	HAL_SPI_ErrorCallback:
 4871              	.LFB163:
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief SPI error callback.
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4872              		.loc 1 2432 0
 4873              		.cfi_startproc
 4874              		@ args = 0, pretend = 0, frame = 8
 4875              		@ frame_needed = 1, uses_anonymous_args = 0
 4876              		@ link register save eliminated.
 4877 0000 80B4     		push	{r7}
 4878              	.LCFI137:
 4879              		.cfi_def_cfa_offset 4
 4880              		.cfi_offset 7, -4
 4881 0002 83B0     		sub	sp, sp, #12
 4882              	.LCFI138:
 4883              		.cfi_def_cfa_offset 16
 4884 0004 00AF     		add	r7, sp, #0
 4885              	.LCFI139:
 4886              		.cfi_def_cfa_register 7
 4887 0006 7860     		str	r0, [r7, #4]
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4888              		.loc 1 2442 0
 4889 0008 00BF     		nop
 4890 000a 0C37     		adds	r7, r7, #12
 4891              	.LCFI140:
 4892              		.cfi_def_cfa_offset 4
 4893 000c BD46     		mov	sp, r7
ARM GAS  /tmp/cczU8NLw.s 			page 129


 4894              	.LCFI141:
 4895              		.cfi_def_cfa_register 13
 4896              		@ sp needed
 4897 000e 5DF8047B 		ldr	r7, [sp], #4
 4898              	.LCFI142:
 4899              		.cfi_restore 7
 4900              		.cfi_def_cfa_offset 0
 4901 0012 7047     		bx	lr
 4902              		.cfi_endproc
 4903              	.LFE163:
 4905              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4906              		.align	1
 4907              		.weak	HAL_SPI_AbortCpltCallback
 4908              		.syntax unified
 4909              		.thumb
 4910              		.thumb_func
 4911              		.fpu fpv4-sp-d16
 4913              	HAL_SPI_AbortCpltCallback:
 4914              	.LFB164:
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4915              		.loc 1 2450 0
 4916              		.cfi_startproc
 4917              		@ args = 0, pretend = 0, frame = 8
 4918              		@ frame_needed = 1, uses_anonymous_args = 0
 4919              		@ link register save eliminated.
 4920 0000 80B4     		push	{r7}
 4921              	.LCFI143:
 4922              		.cfi_def_cfa_offset 4
 4923              		.cfi_offset 7, -4
 4924 0002 83B0     		sub	sp, sp, #12
 4925              	.LCFI144:
 4926              		.cfi_def_cfa_offset 16
 4927 0004 00AF     		add	r7, sp, #0
 4928              	.LCFI145:
 4929              		.cfi_def_cfa_register 7
 4930 0006 7860     		str	r0, [r7, #4]
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4931              		.loc 1 2457 0
 4932 0008 00BF     		nop
 4933 000a 0C37     		adds	r7, r7, #12
 4934              	.LCFI146:
 4935              		.cfi_def_cfa_offset 4
 4936 000c BD46     		mov	sp, r7
 4937              	.LCFI147:
ARM GAS  /tmp/cczU8NLw.s 			page 130


 4938              		.cfi_def_cfa_register 13
 4939              		@ sp needed
 4940 000e 5DF8047B 		ldr	r7, [sp], #4
 4941              	.LCFI148:
 4942              		.cfi_restore 7
 4943              		.cfi_def_cfa_offset 0
 4944 0012 7047     		bx	lr
 4945              		.cfi_endproc
 4946              	.LFE164:
 4948              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 4949              		.align	1
 4950              		.global	HAL_SPI_GetState
 4951              		.syntax unified
 4952              		.thumb
 4953              		.thumb_func
 4954              		.fpu fpv4-sp-d16
 4956              	HAL_SPI_GetState:
 4957              	.LFB165:
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI control functions
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI state
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 4958              		.loc 1 2485 0
 4959              		.cfi_startproc
 4960              		@ args = 0, pretend = 0, frame = 8
 4961              		@ frame_needed = 1, uses_anonymous_args = 0
 4962              		@ link register save eliminated.
 4963 0000 80B4     		push	{r7}
 4964              	.LCFI149:
 4965              		.cfi_def_cfa_offset 4
 4966              		.cfi_offset 7, -4
 4967 0002 83B0     		sub	sp, sp, #12
 4968              	.LCFI150:
ARM GAS  /tmp/cczU8NLw.s 			page 131


 4969              		.cfi_def_cfa_offset 16
 4970 0004 00AF     		add	r7, sp, #0
 4971              	.LCFI151:
 4972              		.cfi_def_cfa_register 7
 4973 0006 7860     		str	r0, [r7, #4]
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI handle state */
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->State;
 4974              		.loc 1 2487 0
 4975 0008 7B68     		ldr	r3, [r7, #4]
 4976 000a 93F85D30 		ldrb	r3, [r3, #93]
 4977 000e DBB2     		uxtb	r3, r3
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 4978              		.loc 1 2488 0
 4979 0010 1846     		mov	r0, r3
 4980 0012 0C37     		adds	r7, r7, #12
 4981              	.LCFI152:
 4982              		.cfi_def_cfa_offset 4
 4983 0014 BD46     		mov	sp, r7
 4984              	.LCFI153:
 4985              		.cfi_def_cfa_register 13
 4986              		@ sp needed
 4987 0016 5DF8047B 		ldr	r7, [sp], #4
 4988              	.LCFI154:
 4989              		.cfi_restore 7
 4990              		.cfi_def_cfa_offset 0
 4991 001a 7047     		bx	lr
 4992              		.cfi_endproc
 4993              	.LFE165:
 4995              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 4996              		.align	1
 4997              		.global	HAL_SPI_GetError
 4998              		.syntax unified
 4999              		.thumb
 5000              		.thumb_func
 5001              		.fpu fpv4-sp-d16
 5003              	HAL_SPI_GetError:
 5004              	.LFB166:
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI error code.
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5005              		.loc 1 2497 0
 5006              		.cfi_startproc
 5007              		@ args = 0, pretend = 0, frame = 8
 5008              		@ frame_needed = 1, uses_anonymous_args = 0
 5009              		@ link register save eliminated.
 5010 0000 80B4     		push	{r7}
 5011              	.LCFI155:
 5012              		.cfi_def_cfa_offset 4
 5013              		.cfi_offset 7, -4
 5014 0002 83B0     		sub	sp, sp, #12
 5015              	.LCFI156:
ARM GAS  /tmp/cczU8NLw.s 			page 132


 5016              		.cfi_def_cfa_offset 16
 5017 0004 00AF     		add	r7, sp, #0
 5018              	.LCFI157:
 5019              		.cfi_def_cfa_register 7
 5020 0006 7860     		str	r0, [r7, #4]
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI ErrorCode */
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->ErrorCode;
 5021              		.loc 1 2499 0
 5022 0008 7B68     		ldr	r3, [r7, #4]
 5023 000a 1B6E     		ldr	r3, [r3, #96]
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5024              		.loc 1 2500 0
 5025 000c 1846     		mov	r0, r3
 5026 000e 0C37     		adds	r7, r7, #12
 5027              	.LCFI158:
 5028              		.cfi_def_cfa_offset 4
 5029 0010 BD46     		mov	sp, r7
 5030              	.LCFI159:
 5031              		.cfi_def_cfa_register 13
 5032              		@ sp needed
 5033 0012 5DF8047B 		ldr	r7, [sp], #4
 5034              	.LCFI160:
 5035              		.cfi_restore 7
 5036              		.cfi_def_cfa_offset 0
 5037 0016 7047     		bx	lr
 5038              		.cfi_endproc
 5039              	.LFE166:
 5041              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5042              		.align	1
 5043              		.syntax unified
 5044              		.thumb
 5045              		.thumb_func
 5046              		.fpu fpv4-sp-d16
 5048              	SPI_DMATransmitCplt:
 5049              	.LFB167:
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   Private functions
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback.
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
ARM GAS  /tmp/cczU8NLw.s 			page 133


 5050              		.loc 1 2522 0
 5051              		.cfi_startproc
 5052              		@ args = 0, pretend = 0, frame = 24
 5053              		@ frame_needed = 1, uses_anonymous_args = 0
 5054 0000 80B5     		push	{r7, lr}
 5055              	.LCFI161:
 5056              		.cfi_def_cfa_offset 8
 5057              		.cfi_offset 7, -8
 5058              		.cfi_offset 14, -4
 5059 0002 86B0     		sub	sp, sp, #24
 5060              	.LCFI162:
 5061              		.cfi_def_cfa_offset 32
 5062 0004 00AF     		add	r7, sp, #0
 5063              	.LCFI163:
 5064              		.cfi_def_cfa_register 7
 5065 0006 7860     		str	r0, [r7, #4]
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5066              		.loc 1 2523 0
 5067 0008 7B68     		ldr	r3, [r7, #4]
 5068 000a 9B6B     		ldr	r3, [r3, #56]
 5069 000c 7B61     		str	r3, [r7, #20]
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 5070              		.loc 1 2524 0
 5071 000e 0023     		movs	r3, #0
 5072 0010 3B61     		str	r3, [r7, #16]
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5073              		.loc 1 2527 0
 5074 0012 FFF7FEFF 		bl	HAL_GetTick
 5075 0016 3861     		str	r0, [r7, #16]
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 5076              		.loc 1 2530 0
 5077 0018 7B68     		ldr	r3, [r7, #4]
 5078 001a 1B68     		ldr	r3, [r3]
 5079 001c 1B68     		ldr	r3, [r3]
 5080 001e 03F48073 		and	r3, r3, #256
 5081 0022 B3F5807F 		cmp	r3, #256
 5082 0026 3BD0     		beq	.L268
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5083              		.loc 1 2533 0
 5084 0028 7B69     		ldr	r3, [r7, #20]
 5085 002a 1B68     		ldr	r3, [r3]
 5086 002c 5A68     		ldr	r2, [r3, #4]
 5087 002e 7B69     		ldr	r3, [r7, #20]
 5088 0030 1B68     		ldr	r3, [r3]
 5089 0032 22F02002 		bic	r2, r2, #32
 5090 0036 5A60     		str	r2, [r3, #4]
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Tx DMA Request */
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5091              		.loc 1 2536 0
 5092 0038 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cczU8NLw.s 			page 134


 5093 003a 1B68     		ldr	r3, [r3]
 5094 003c 5A68     		ldr	r2, [r3, #4]
 5095 003e 7B69     		ldr	r3, [r7, #20]
 5096 0040 1B68     		ldr	r3, [r3]
 5097 0042 22F00202 		bic	r2, r2, #2
 5098 0046 5A60     		str	r2, [r3, #4]
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5099              		.loc 1 2539 0
 5100 0048 3A69     		ldr	r2, [r7, #16]
 5101 004a 6421     		movs	r1, #100
 5102 004c 7869     		ldr	r0, [r7, #20]
 5103 004e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5104 0052 0346     		mov	r3, r0
 5105 0054 002B     		cmp	r3, #0
 5106 0056 05D0     		beq	.L269
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5107              		.loc 1 2541 0
 5108 0058 7B69     		ldr	r3, [r7, #20]
 5109 005a 1B6E     		ldr	r3, [r3, #96]
 5110 005c 43F02002 		orr	r2, r3, #32
 5111 0060 7B69     		ldr	r3, [r7, #20]
 5112 0062 1A66     		str	r2, [r3, #96]
 5113              	.L269:
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 5114              		.loc 1 2545 0
 5115 0064 7B69     		ldr	r3, [r7, #20]
 5116 0066 9B68     		ldr	r3, [r3, #8]
 5117 0068 002B     		cmp	r3, #0
 5118 006a 0AD1     		bne	.L270
 5119              	.LBB11:
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5120              		.loc 1 2547 0
 5121 006c 0023     		movs	r3, #0
 5122 006e FB60     		str	r3, [r7, #12]
 5123 0070 7B69     		ldr	r3, [r7, #20]
 5124 0072 1B68     		ldr	r3, [r3]
 5125 0074 DB68     		ldr	r3, [r3, #12]
 5126 0076 FB60     		str	r3, [r7, #12]
 5127 0078 7B69     		ldr	r3, [r7, #20]
 5128 007a 1B68     		ldr	r3, [r3]
 5129 007c 9B68     		ldr	r3, [r3, #8]
 5130 007e FB60     		str	r3, [r7, #12]
 5131 0080 FB68     		ldr	r3, [r7, #12]
 5132              	.L270:
 5133              	.LBE11:
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5134              		.loc 1 2550 0
 5135 0082 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cczU8NLw.s 			page 135


 5136 0084 0022     		movs	r2, #0
 5137 0086 DA87     		strh	r2, [r3, #62]	@ movhi
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5138              		.loc 1 2551 0
 5139 0088 7B69     		ldr	r3, [r7, #20]
 5140 008a 0122     		movs	r2, #1
 5141 008c 83F85D20 		strb	r2, [r3, #93]
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5142              		.loc 1 2553 0
 5143 0090 7B69     		ldr	r3, [r7, #20]
 5144 0092 1B6E     		ldr	r3, [r3, #96]
 5145 0094 002B     		cmp	r3, #0
 5146 0096 03D0     		beq	.L268
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5147              		.loc 1 2555 0
 5148 0098 7869     		ldr	r0, [r7, #20]
 5149 009a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
 5150              		.loc 1 2556 0
 5151 009e 02E0     		b	.L267
 5152              	.L268:
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
 5153              		.loc 1 2559 0
 5154 00a0 7869     		ldr	r0, [r7, #20]
 5155 00a2 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5156              	.L267:
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5157              		.loc 1 2560 0
 5158 00a6 1837     		adds	r7, r7, #24
 5159              	.LCFI164:
 5160              		.cfi_def_cfa_offset 8
 5161 00a8 BD46     		mov	sp, r7
 5162              	.LCFI165:
 5163              		.cfi_def_cfa_register 13
 5164              		@ sp needed
 5165 00aa 80BD     		pop	{r7, pc}
 5166              		.cfi_endproc
 5167              	.LFE167:
 5169              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5170              		.align	1
 5171              		.syntax unified
 5172              		.thumb
 5173              		.thumb_func
 5174              		.fpu fpv4-sp-d16
 5176              	SPI_DMAReceiveCplt:
 5177              	.LFB168:
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback.
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/cczU8NLw.s 			page 136


2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5178              		.loc 1 2569 0
 5179              		.cfi_startproc
 5180              		@ args = 0, pretend = 0, frame = 16
 5181              		@ frame_needed = 1, uses_anonymous_args = 0
 5182 0000 80B5     		push	{r7, lr}
 5183              	.LCFI166:
 5184              		.cfi_def_cfa_offset 8
 5185              		.cfi_offset 7, -8
 5186              		.cfi_offset 14, -4
 5187 0002 84B0     		sub	sp, sp, #16
 5188              	.LCFI167:
 5189              		.cfi_def_cfa_offset 24
 5190 0004 00AF     		add	r7, sp, #0
 5191              	.LCFI168:
 5192              		.cfi_def_cfa_register 7
 5193 0006 7860     		str	r0, [r7, #4]
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5194              		.loc 1 2570 0
 5195 0008 7B68     		ldr	r3, [r7, #4]
 5196 000a 9B6B     		ldr	r3, [r3, #56]
 5197 000c FB60     		str	r3, [r7, #12]
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 5198              		.loc 1 2571 0
 5199 000e 0023     		movs	r3, #0
 5200 0010 BB60     		str	r3, [r7, #8]
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5201              		.loc 1 2577 0
 5202 0012 FFF7FEFF 		bl	HAL_GetTick
 5203 0016 B860     		str	r0, [r7, #8]
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 5204              		.loc 1 2580 0
 5205 0018 7B68     		ldr	r3, [r7, #4]
 5206 001a 1B68     		ldr	r3, [r3]
 5207 001c 1B68     		ldr	r3, [r3]
 5208 001e 03F48073 		and	r3, r3, #256
 5209 0022 B3F5807F 		cmp	r3, #256
 5210 0026 2AD0     		beq	.L273
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5211              		.loc 1 2583 0
 5212 0028 FB68     		ldr	r3, [r7, #12]
 5213 002a 1B68     		ldr	r3, [r3]
 5214 002c 5A68     		ldr	r2, [r3, #4]
 5215 002e FB68     		ldr	r3, [r7, #12]
 5216 0030 1B68     		ldr	r3, [r3]
 5217 0032 22F02002 		bic	r2, r2, #32
 5218 0036 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 137


2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag */
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, SPI_DEFAULT_TIMEOUT, ti
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Error on the CRC reception */
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read CRC */
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = hspi->Instance->DR;
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, SPI_DEFAULT_TIMEOUT
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* Error on the CRC reception */
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* To avoid GCC warning */
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           UNUSED(tmpreg);
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5219              		.loc 1 2624 0
 5220 0038 FB68     		ldr	r3, [r7, #12]
 5221 003a 1B68     		ldr	r3, [r3]
 5222 003c 5A68     		ldr	r2, [r3, #4]
 5223 003e FB68     		ldr	r3, [r7, #12]
 5224 0040 1B68     		ldr	r3, [r3]
 5225 0042 22F00302 		bic	r2, r2, #3
 5226 0046 5A60     		str	r2, [r3, #4]
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5227              		.loc 1 2627 0
 5228 0048 BA68     		ldr	r2, [r7, #8]
 5229 004a 6421     		movs	r1, #100
 5230 004c F868     		ldr	r0, [r7, #12]
 5231 004e FFF7FEFF 		bl	SPI_EndRxTransaction
ARM GAS  /tmp/cczU8NLw.s 			page 138


 5232 0052 0346     		mov	r3, r0
 5233 0054 002B     		cmp	r3, #0
 5234 0056 02D0     		beq	.L274
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 5235              		.loc 1 2629 0
 5236 0058 FB68     		ldr	r3, [r7, #12]
 5237 005a 2022     		movs	r2, #32
 5238 005c 1A66     		str	r2, [r3, #96]
 5239              	.L274:
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5240              		.loc 1 2632 0
 5241 005e FB68     		ldr	r3, [r7, #12]
 5242 0060 0022     		movs	r2, #0
 5243 0062 A3F84620 		strh	r2, [r3, #70]	@ movhi
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5244              		.loc 1 2633 0
 5245 0066 FB68     		ldr	r3, [r7, #12]
 5246 0068 0122     		movs	r2, #1
 5247 006a 83F85D20 		strb	r2, [r3, #93]
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5248              		.loc 1 2644 0
 5249 006e FB68     		ldr	r3, [r7, #12]
 5250 0070 1B6E     		ldr	r3, [r3, #96]
 5251 0072 002B     		cmp	r3, #0
 5252 0074 03D0     		beq	.L273
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5253              		.loc 1 2646 0
 5254 0076 F868     		ldr	r0, [r7, #12]
 5255 0078 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
 5256              		.loc 1 2647 0
 5257 007c 02E0     		b	.L272
 5258              	.L273:
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
 5259              		.loc 1 2650 0
 5260 007e F868     		ldr	r0, [r7, #12]
 5261 0080 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5262              	.L272:
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5263              		.loc 1 2651 0
 5264 0084 1037     		adds	r7, r7, #16
ARM GAS  /tmp/cczU8NLw.s 			page 139


 5265              	.LCFI169:
 5266              		.cfi_def_cfa_offset 8
 5267 0086 BD46     		mov	sp, r7
 5268              	.LCFI170:
 5269              		.cfi_def_cfa_register 13
 5270              		@ sp needed
 5271 0088 80BD     		pop	{r7, pc}
 5272              		.cfi_endproc
 5273              	.LFE168:
 5275              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5276              		.align	1
 5277              		.syntax unified
 5278              		.thumb
 5279              		.thumb_func
 5280              		.fpu fpv4-sp-d16
 5282              	SPI_DMATransmitReceiveCplt:
 5283              	.LFB169:
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5284              		.loc 1 2660 0
 5285              		.cfi_startproc
 5286              		@ args = 0, pretend = 0, frame = 16
 5287              		@ frame_needed = 1, uses_anonymous_args = 0
 5288 0000 80B5     		push	{r7, lr}
 5289              	.LCFI171:
 5290              		.cfi_def_cfa_offset 8
 5291              		.cfi_offset 7, -8
 5292              		.cfi_offset 14, -4
 5293 0002 84B0     		sub	sp, sp, #16
 5294              	.LCFI172:
 5295              		.cfi_def_cfa_offset 24
 5296 0004 00AF     		add	r7, sp, #0
 5297              	.LCFI173:
 5298              		.cfi_def_cfa_register 7
 5299 0006 7860     		str	r0, [r7, #4]
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5300              		.loc 1 2661 0
 5301 0008 7B68     		ldr	r3, [r7, #4]
 5302 000a 9B6B     		ldr	r3, [r3, #56]
 5303 000c FB60     		str	r3, [r7, #12]
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 5304              		.loc 1 2662 0
 5305 000e 0023     		movs	r3, #0
 5306 0010 BB60     		str	r3, [r7, #8]
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO int16_t tmpreg = 0U;
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5307              		.loc 1 2667 0
ARM GAS  /tmp/cczU8NLw.s 			page 140


 5308 0012 FFF7FEFF 		bl	HAL_GetTick
 5309 0016 B860     		str	r0, [r7, #8]
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 5310              		.loc 1 2670 0
 5311 0018 7B68     		ldr	r3, [r7, #4]
 5312 001a 1B68     		ldr	r3, [r3]
 5313 001c 1B68     		ldr	r3, [r3]
 5314 001e 03F48073 		and	r3, r3, #256
 5315 0022 B3F5807F 		cmp	r3, #256
 5316 0026 30D0     		beq	.L277
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5317              		.loc 1 2673 0
 5318 0028 FB68     		ldr	r3, [r7, #12]
 5319 002a 1B68     		ldr	r3, [r3]
 5320 002c 5A68     		ldr	r2, [r3, #4]
 5321 002e FB68     		ldr	r3, [r7, #12]
 5322 0030 1B68     		ldr	r3, [r3]
 5323 0032 22F02002 		bic	r2, r2, #32
 5324 0036 5A60     		str	r2, [r3, #4]
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           tickstart) != HAL_OK)
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = *(__IO uint8_t *)&hspi->Instance->DR;
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         tmpreg = hspi->Instance->DR;
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* To avoid GCC warning */
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         UNUSED(tmpreg);
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
ARM GAS  /tmp/cczU8NLw.s 			page 141


2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5325              		.loc 1 2708 0
 5326 0038 BA68     		ldr	r2, [r7, #8]
 5327 003a 6421     		movs	r1, #100
 5328 003c F868     		ldr	r0, [r7, #12]
 5329 003e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5330 0042 0346     		mov	r3, r0
 5331 0044 002B     		cmp	r3, #0
 5332 0046 05D0     		beq	.L278
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5333              		.loc 1 2710 0
 5334 0048 FB68     		ldr	r3, [r7, #12]
 5335 004a 1B6E     		ldr	r3, [r3, #96]
 5336 004c 43F02002 		orr	r2, r3, #32
 5337 0050 FB68     		ldr	r3, [r7, #12]
 5338 0052 1A66     		str	r2, [r3, #96]
 5339              	.L278:
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5340              		.loc 1 2714 0
 5341 0054 FB68     		ldr	r3, [r7, #12]
 5342 0056 1B68     		ldr	r3, [r3]
 5343 0058 5A68     		ldr	r2, [r3, #4]
 5344 005a FB68     		ldr	r3, [r7, #12]
 5345 005c 1B68     		ldr	r3, [r3]
 5346 005e 22F00302 		bic	r2, r2, #3
 5347 0062 5A60     		str	r2, [r3, #4]
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5348              		.loc 1 2716 0
 5349 0064 FB68     		ldr	r3, [r7, #12]
 5350 0066 0022     		movs	r2, #0
 5351 0068 DA87     		strh	r2, [r3, #62]	@ movhi
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5352              		.loc 1 2717 0
 5353 006a FB68     		ldr	r3, [r7, #12]
 5354 006c 0022     		movs	r2, #0
 5355 006e A3F84620 		strh	r2, [r3, #70]	@ movhi
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5356              		.loc 1 2718 0
 5357 0072 FB68     		ldr	r3, [r7, #12]
 5358 0074 0122     		movs	r2, #1
 5359 0076 83F85D20 		strb	r2, [r3, #93]
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
ARM GAS  /tmp/cczU8NLw.s 			page 142


 5360              		.loc 1 2729 0
 5361 007a FB68     		ldr	r3, [r7, #12]
 5362 007c 1B6E     		ldr	r3, [r3, #96]
 5363 007e 002B     		cmp	r3, #0
 5364 0080 03D0     		beq	.L277
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5365              		.loc 1 2731 0
 5366 0082 F868     		ldr	r0, [r7, #12]
 5367 0084 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
 5368              		.loc 1 2732 0
 5369 0088 02E0     		b	.L276
 5370              	.L277:
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
 5371              		.loc 1 2735 0
 5372 008a F868     		ldr	r0, [r7, #12]
 5373 008c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5374              	.L276:
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5375              		.loc 1 2736 0
 5376 0090 1037     		adds	r7, r7, #16
 5377              	.LCFI174:
 5378              		.cfi_def_cfa_offset 8
 5379 0092 BD46     		mov	sp, r7
 5380              	.LCFI175:
 5381              		.cfi_def_cfa_register 13
 5382              		@ sp needed
 5383 0094 80BD     		pop	{r7, pc}
 5384              		.cfi_endproc
 5385              	.LFE169:
 5387              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 5388              		.align	1
 5389              		.syntax unified
 5390              		.thumb
 5391              		.thumb_func
 5392              		.fpu fpv4-sp-d16
 5394              	SPI_DMAHalfTransmitCplt:
 5395              	.LFB170:
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5396              		.loc 1 2745 0
 5397              		.cfi_startproc
 5398              		@ args = 0, pretend = 0, frame = 16
 5399              		@ frame_needed = 1, uses_anonymous_args = 0
 5400 0000 80B5     		push	{r7, lr}
 5401              	.LCFI176:
 5402              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cczU8NLw.s 			page 143


 5403              		.cfi_offset 7, -8
 5404              		.cfi_offset 14, -4
 5405 0002 84B0     		sub	sp, sp, #16
 5406              	.LCFI177:
 5407              		.cfi_def_cfa_offset 24
 5408 0004 00AF     		add	r7, sp, #0
 5409              	.LCFI178:
 5410              		.cfi_def_cfa_register 7
 5411 0006 7860     		str	r0, [r7, #4]
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5412              		.loc 1 2746 0
 5413 0008 7B68     		ldr	r3, [r7, #4]
 5414 000a 9B6B     		ldr	r3, [r3, #56]
 5415 000c FB60     		str	r3, [r7, #12]
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 5416              		.loc 1 2748 0
 5417 000e F868     		ldr	r0, [r7, #12]
 5418 0010 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5419              		.loc 1 2749 0
 5420 0014 00BF     		nop
 5421 0016 1037     		adds	r7, r7, #16
 5422              	.LCFI179:
 5423              		.cfi_def_cfa_offset 8
 5424 0018 BD46     		mov	sp, r7
 5425              	.LCFI180:
 5426              		.cfi_def_cfa_register 13
 5427              		@ sp needed
 5428 001a 80BD     		pop	{r7, pc}
 5429              		.cfi_endproc
 5430              	.LFE170:
 5432              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 5433              		.align	1
 5434              		.syntax unified
 5435              		.thumb
 5436              		.thumb_func
 5437              		.fpu fpv4-sp-d16
 5439              	SPI_DMAHalfReceiveCplt:
 5440              	.LFB171:
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5441              		.loc 1 2758 0
 5442              		.cfi_startproc
 5443              		@ args = 0, pretend = 0, frame = 16
 5444              		@ frame_needed = 1, uses_anonymous_args = 0
 5445 0000 80B5     		push	{r7, lr}
 5446              	.LCFI181:
 5447              		.cfi_def_cfa_offset 8
 5448              		.cfi_offset 7, -8
ARM GAS  /tmp/cczU8NLw.s 			page 144


 5449              		.cfi_offset 14, -4
 5450 0002 84B0     		sub	sp, sp, #16
 5451              	.LCFI182:
 5452              		.cfi_def_cfa_offset 24
 5453 0004 00AF     		add	r7, sp, #0
 5454              	.LCFI183:
 5455              		.cfi_def_cfa_register 7
 5456 0006 7860     		str	r0, [r7, #4]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5457              		.loc 1 2759 0
 5458 0008 7B68     		ldr	r3, [r7, #4]
 5459 000a 9B6B     		ldr	r3, [r3, #56]
 5460 000c FB60     		str	r3, [r7, #12]
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 5461              		.loc 1 2761 0
 5462 000e F868     		ldr	r0, [r7, #12]
 5463 0010 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5464              		.loc 1 2762 0
 5465 0014 00BF     		nop
 5466 0016 1037     		adds	r7, r7, #16
 5467              	.LCFI184:
 5468              		.cfi_def_cfa_offset 8
 5469 0018 BD46     		mov	sp, r7
 5470              	.LCFI185:
 5471              		.cfi_def_cfa_register 13
 5472              		@ sp needed
 5473 001a 80BD     		pop	{r7, pc}
 5474              		.cfi_endproc
 5475              	.LFE171:
 5477              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 5478              		.align	1
 5479              		.syntax unified
 5480              		.thumb
 5481              		.thumb_func
 5482              		.fpu fpv4-sp-d16
 5484              	SPI_DMAHalfTransmitReceiveCplt:
 5485              	.LFB172:
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5486              		.loc 1 2771 0
 5487              		.cfi_startproc
 5488              		@ args = 0, pretend = 0, frame = 16
 5489              		@ frame_needed = 1, uses_anonymous_args = 0
 5490 0000 80B5     		push	{r7, lr}
 5491              	.LCFI186:
 5492              		.cfi_def_cfa_offset 8
 5493              		.cfi_offset 7, -8
 5494              		.cfi_offset 14, -4
ARM GAS  /tmp/cczU8NLw.s 			page 145


 5495 0002 84B0     		sub	sp, sp, #16
 5496              	.LCFI187:
 5497              		.cfi_def_cfa_offset 24
 5498 0004 00AF     		add	r7, sp, #0
 5499              	.LCFI188:
 5500              		.cfi_def_cfa_register 7
 5501 0006 7860     		str	r0, [r7, #4]
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5502              		.loc 1 2772 0
 5503 0008 7B68     		ldr	r3, [r7, #4]
 5504 000a 9B6B     		ldr	r3, [r3, #56]
 5505 000c FB60     		str	r3, [r7, #12]
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 5506              		.loc 1 2774 0
 5507 000e F868     		ldr	r0, [r7, #12]
 5508 0010 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5509              		.loc 1 2775 0
 5510 0014 00BF     		nop
 5511 0016 1037     		adds	r7, r7, #16
 5512              	.LCFI189:
 5513              		.cfi_def_cfa_offset 8
 5514 0018 BD46     		mov	sp, r7
 5515              	.LCFI190:
 5516              		.cfi_def_cfa_register 13
 5517              		@ sp needed
 5518 001a 80BD     		pop	{r7, pc}
 5519              		.cfi_endproc
 5520              	.LFE172:
 5522              		.section	.text.SPI_DMAError,"ax",%progbits
 5523              		.align	1
 5524              		.syntax unified
 5525              		.thumb
 5526              		.thumb_func
 5527              		.fpu fpv4-sp-d16
 5529              	SPI_DMAError:
 5530              	.LFB173:
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5531              		.loc 1 2784 0
 5532              		.cfi_startproc
 5533              		@ args = 0, pretend = 0, frame = 16
 5534              		@ frame_needed = 1, uses_anonymous_args = 0
 5535 0000 80B5     		push	{r7, lr}
 5536              	.LCFI191:
 5537              		.cfi_def_cfa_offset 8
 5538              		.cfi_offset 7, -8
 5539              		.cfi_offset 14, -4
 5540 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/cczU8NLw.s 			page 146


 5541              	.LCFI192:
 5542              		.cfi_def_cfa_offset 24
 5543 0004 00AF     		add	r7, sp, #0
 5544              	.LCFI193:
 5545              		.cfi_def_cfa_register 7
 5546 0006 7860     		str	r0, [r7, #4]
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5547              		.loc 1 2785 0
 5548 0008 7B68     		ldr	r3, [r7, #4]
 5549 000a 9B6B     		ldr	r3, [r3, #56]
 5550 000c FB60     		str	r3, [r7, #12]
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5551              		.loc 1 2788 0
 5552 000e FB68     		ldr	r3, [r7, #12]
 5553 0010 1B68     		ldr	r3, [r3]
 5554 0012 5A68     		ldr	r2, [r3, #4]
 5555 0014 FB68     		ldr	r3, [r7, #12]
 5556 0016 1B68     		ldr	r3, [r3]
 5557 0018 22F00302 		bic	r2, r2, #3
 5558 001c 5A60     		str	r2, [r3, #4]
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 5559              		.loc 1 2790 0
 5560 001e FB68     		ldr	r3, [r7, #12]
 5561 0020 1B6E     		ldr	r3, [r3, #96]
 5562 0022 43F01002 		orr	r2, r3, #16
 5563 0026 FB68     		ldr	r3, [r7, #12]
 5564 0028 1A66     		str	r2, [r3, #96]
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5565              		.loc 1 2791 0
 5566 002a FB68     		ldr	r3, [r7, #12]
 5567 002c 0122     		movs	r2, #1
 5568 002e 83F85D20 		strb	r2, [r3, #93]
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5569              		.loc 1 2792 0
 5570 0032 F868     		ldr	r0, [r7, #12]
 5571 0034 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5572              		.loc 1 2793 0
 5573 0038 00BF     		nop
 5574 003a 1037     		adds	r7, r7, #16
 5575              	.LCFI194:
 5576              		.cfi_def_cfa_offset 8
 5577 003c BD46     		mov	sp, r7
 5578              	.LCFI195:
 5579              		.cfi_def_cfa_register 13
 5580              		@ sp needed
 5581 003e 80BD     		pop	{r7, pc}
 5582              		.cfi_endproc
 5583              	.LFE173:
 5585              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5586              		.align	1
 5587              		.syntax unified
 5588              		.thumb
 5589              		.thumb_func
ARM GAS  /tmp/cczU8NLw.s 			page 147


 5590              		.fpu fpv4-sp-d16
 5592              	SPI_DMAAbortOnError:
 5593              	.LFB174:
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5594              		.loc 1 2802 0
 5595              		.cfi_startproc
 5596              		@ args = 0, pretend = 0, frame = 16
 5597              		@ frame_needed = 1, uses_anonymous_args = 0
 5598 0000 80B5     		push	{r7, lr}
 5599              	.LCFI196:
 5600              		.cfi_def_cfa_offset 8
 5601              		.cfi_offset 7, -8
 5602              		.cfi_offset 14, -4
 5603 0002 84B0     		sub	sp, sp, #16
 5604              	.LCFI197:
 5605              		.cfi_def_cfa_offset 24
 5606 0004 00AF     		add	r7, sp, #0
 5607              	.LCFI198:
 5608              		.cfi_def_cfa_register 7
 5609 0006 7860     		str	r0, [r7, #4]
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5610              		.loc 1 2803 0
 5611 0008 7B68     		ldr	r3, [r7, #4]
 5612 000a 9B6B     		ldr	r3, [r3, #56]
 5613 000c FB60     		str	r3, [r7, #12]
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5614              		.loc 1 2804 0
 5615 000e FB68     		ldr	r3, [r7, #12]
 5616 0010 0022     		movs	r2, #0
 5617 0012 A3F84620 		strh	r2, [r3, #70]	@ movhi
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5618              		.loc 1 2805 0
 5619 0016 FB68     		ldr	r3, [r7, #12]
 5620 0018 0022     		movs	r2, #0
 5621 001a DA87     		strh	r2, [r3, #62]	@ movhi
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5622              		.loc 1 2807 0
 5623 001c F868     		ldr	r0, [r7, #12]
 5624 001e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5625              		.loc 1 2808 0
 5626 0022 00BF     		nop
 5627 0024 1037     		adds	r7, r7, #16
 5628              	.LCFI199:
 5629              		.cfi_def_cfa_offset 8
 5630 0026 BD46     		mov	sp, r7
 5631              	.LCFI200:
 5632              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cczU8NLw.s 			page 148


 5633              		@ sp needed
 5634 0028 80BD     		pop	{r7, pc}
 5635              		.cfi_endproc
 5636              	.LFE174:
 5638              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5639              		.align	1
 5640              		.syntax unified
 5641              		.thumb
 5642              		.thumb_func
 5643              		.fpu fpv4-sp-d16
 5645              	SPI_DMATxAbortCallback:
 5646              	.LFB175:
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5647              		.loc 1 2819 0
 5648              		.cfi_startproc
 5649              		@ args = 0, pretend = 0, frame = 24
 5650              		@ frame_needed = 1, uses_anonymous_args = 0
 5651 0000 80B5     		push	{r7, lr}
 5652              	.LCFI201:
 5653              		.cfi_def_cfa_offset 8
 5654              		.cfi_offset 7, -8
 5655              		.cfi_offset 14, -4
 5656 0002 88B0     		sub	sp, sp, #32
 5657              	.LCFI202:
 5658              		.cfi_def_cfa_offset 40
 5659 0004 02AF     		add	r7, sp, #8
 5660              	.LCFI203:
 5661              		.cfi_def_cfa 7, 32
 5662 0006 7860     		str	r0, [r7, #4]
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5663              		.loc 1 2820 0
 5664 0008 7B68     		ldr	r3, [r7, #4]
 5665 000a 9B6B     		ldr	r3, [r3, #56]
 5666 000c 7B61     		str	r3, [r7, #20]
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 5667              		.loc 1 2822 0
 5668 000e 7B69     		ldr	r3, [r7, #20]
 5669 0010 5B6D     		ldr	r3, [r3, #84]
 5670 0012 0022     		movs	r2, #0
 5671 0014 1A65     		str	r2, [r3, #80]
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Tx DMA Request */
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5672              		.loc 1 2825 0
 5673 0016 7B69     		ldr	r3, [r7, #20]
 5674 0018 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 149


 5675 001a 5A68     		ldr	r2, [r3, #4]
 5676 001c 7B69     		ldr	r3, [r7, #20]
 5677 001e 1B68     		ldr	r3, [r3]
 5678 0020 22F00202 		bic	r2, r2, #2
 5679 0024 5A60     		str	r2, [r3, #4]
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 5680              		.loc 1 2827 0
 5681 0026 FFF7FEFF 		bl	HAL_GetTick
 5682 002a 0346     		mov	r3, r0
 5683 002c 1A46     		mov	r2, r3
 5684 002e 6421     		movs	r1, #100
 5685 0030 7869     		ldr	r0, [r7, #20]
 5686 0032 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5687 0036 0346     		mov	r3, r0
 5688 0038 002B     		cmp	r3, #0
 5689 003a 02D0     		beq	.L286
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5690              		.loc 1 2829 0
 5691 003c 7B69     		ldr	r3, [r7, #20]
 5692 003e 4022     		movs	r2, #64
 5693 0040 1A66     		str	r2, [r3, #96]
 5694              	.L286:
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 5695              		.loc 1 2833 0
 5696 0042 7B69     		ldr	r3, [r7, #20]
 5697 0044 1B68     		ldr	r3, [r3]
 5698 0046 1A68     		ldr	r2, [r3]
 5699 0048 7B69     		ldr	r3, [r7, #20]
 5700 004a 1B68     		ldr	r3, [r3]
 5701 004c 22F04002 		bic	r2, r2, #64
 5702 0050 1A60     		str	r2, [r3]
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 5703              		.loc 1 2836 0
 5704 0052 FFF7FEFF 		bl	HAL_GetTick
 5705 0056 0346     		mov	r3, r0
 5706 0058 0093     		str	r3, [sp]
 5707 005a 6423     		movs	r3, #100
 5708 005c 0022     		movs	r2, #0
 5709 005e 4FF4C061 		mov	r1, #1536
 5710 0062 7869     		ldr	r0, [r7, #20]
 5711 0064 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5712 0068 0346     		mov	r3, r0
 5713 006a 002B     		cmp	r3, #0
 5714 006c 02D0     		beq	.L287
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5715              		.loc 1 2838 0
 5716 006e 7B69     		ldr	r3, [r7, #20]
 5717 0070 4022     		movs	r2, #64
 5718 0072 1A66     		str	r2, [r3, #96]
ARM GAS  /tmp/cczU8NLw.s 			page 150


 5719              	.L287:
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 5720              		.loc 1 2842 0
 5721 0074 7B69     		ldr	r3, [r7, #20]
 5722 0076 9B6D     		ldr	r3, [r3, #88]
 5723 0078 002B     		cmp	r3, #0
 5724 007a 04D0     		beq	.L288
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
 5725              		.loc 1 2844 0
 5726 007c 7B69     		ldr	r3, [r7, #20]
 5727 007e 9B6D     		ldr	r3, [r3, #88]
 5728 0080 1B6D     		ldr	r3, [r3, #80]
 5729 0082 002B     		cmp	r3, #0
 5730 0084 27D1     		bne	.L291
 5731              	.L288:
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5732              		.loc 1 2851 0
 5733 0086 7B69     		ldr	r3, [r7, #20]
 5734 0088 0022     		movs	r2, #0
 5735 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5736              		.loc 1 2852 0
 5737 008e 7B69     		ldr	r3, [r7, #20]
 5738 0090 0022     		movs	r2, #0
 5739 0092 DA87     		strh	r2, [r3, #62]	@ movhi
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5740              		.loc 1 2855 0
 5741 0094 7B69     		ldr	r3, [r7, #20]
 5742 0096 1B6E     		ldr	r3, [r3, #96]
 5743 0098 402B     		cmp	r3, #64
 5744 009a 02D0     		beq	.L290
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5745              		.loc 1 2858 0
 5746 009c 7B69     		ldr	r3, [r7, #20]
 5747 009e 0022     		movs	r2, #0
 5748 00a0 1A66     		str	r2, [r3, #96]
 5749              	.L290:
 5750              	.LBB12:
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5751              		.loc 1 2862 0
ARM GAS  /tmp/cczU8NLw.s 			page 151


 5752 00a2 0023     		movs	r3, #0
 5753 00a4 3B61     		str	r3, [r7, #16]
 5754 00a6 7B69     		ldr	r3, [r7, #20]
 5755 00a8 1B68     		ldr	r3, [r3]
 5756 00aa DB68     		ldr	r3, [r3, #12]
 5757 00ac 3B61     		str	r3, [r7, #16]
 5758 00ae 7B69     		ldr	r3, [r7, #20]
 5759 00b0 1B68     		ldr	r3, [r3]
 5760 00b2 9B68     		ldr	r3, [r3, #8]
 5761 00b4 3B61     		str	r3, [r7, #16]
 5762 00b6 3B69     		ldr	r3, [r7, #16]
 5763              	.LBE12:
 5764              	.LBB13:
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5765              		.loc 1 2863 0
 5766 00b8 0023     		movs	r3, #0
 5767 00ba FB60     		str	r3, [r7, #12]
 5768 00bc 7B69     		ldr	r3, [r7, #20]
 5769 00be 1B68     		ldr	r3, [r3]
 5770 00c0 9B68     		ldr	r3, [r3, #8]
 5771 00c2 FB60     		str	r3, [r7, #12]
 5772 00c4 FB68     		ldr	r3, [r7, #12]
 5773              	.LBE13:
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5774              		.loc 1 2866 0
 5775 00c6 7B69     		ldr	r3, [r7, #20]
 5776 00c8 0122     		movs	r2, #1
 5777 00ca 83F85D20 		strb	r2, [r3, #93]
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5778              		.loc 1 2869 0
 5779 00ce 7869     		ldr	r0, [r7, #20]
 5780 00d0 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5781 00d4 00E0     		b	.L285
 5782              	.L291:
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5783              		.loc 1 2846 0
 5784 00d6 00BF     		nop
 5785              	.L285:
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5786              		.loc 1 2870 0
 5787 00d8 1837     		adds	r7, r7, #24
 5788              	.LCFI204:
 5789              		.cfi_def_cfa_offset 8
 5790 00da BD46     		mov	sp, r7
 5791              	.LCFI205:
 5792              		.cfi_def_cfa_register 13
 5793              		@ sp needed
 5794 00dc 80BD     		pop	{r7, pc}
 5795              		.cfi_endproc
 5796              	.LFE175:
 5798              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5799              		.align	1
 5800              		.syntax unified
ARM GAS  /tmp/cczU8NLw.s 			page 152


 5801              		.thumb
 5802              		.thumb_func
 5803              		.fpu fpv4-sp-d16
 5805              	SPI_DMARxAbortCallback:
 5806              	.LFB176:
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5807              		.loc 1 2881 0
 5808              		.cfi_startproc
 5809              		@ args = 0, pretend = 0, frame = 24
 5810              		@ frame_needed = 1, uses_anonymous_args = 0
 5811 0000 80B5     		push	{r7, lr}
 5812              	.LCFI206:
 5813              		.cfi_def_cfa_offset 8
 5814              		.cfi_offset 7, -8
 5815              		.cfi_offset 14, -4
 5816 0002 88B0     		sub	sp, sp, #32
 5817              	.LCFI207:
 5818              		.cfi_def_cfa_offset 40
 5819 0004 02AF     		add	r7, sp, #8
 5820              	.LCFI208:
 5821              		.cfi_def_cfa 7, 32
 5822 0006 7860     		str	r0, [r7, #4]
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5823              		.loc 1 2882 0
 5824 0008 7B68     		ldr	r3, [r7, #4]
 5825 000a 9B6B     		ldr	r3, [r3, #56]
 5826 000c 7B61     		str	r3, [r7, #20]
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 5827              		.loc 1 2885 0
 5828 000e 7B69     		ldr	r3, [r7, #20]
 5829 0010 1B68     		ldr	r3, [r3]
 5830 0012 1A68     		ldr	r2, [r3]
 5831 0014 7B69     		ldr	r3, [r7, #20]
 5832 0016 1B68     		ldr	r3, [r3]
 5833 0018 22F04002 		bic	r2, r2, #64
 5834 001c 1A60     		str	r2, [r3]
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 5835              		.loc 1 2887 0
 5836 001e 7B69     		ldr	r3, [r7, #20]
 5837 0020 9B6D     		ldr	r3, [r3, #88]
 5838 0022 0022     		movs	r2, #0
 5839 0024 1A65     		str	r2, [r3, #80]
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Rx DMA Request */
ARM GAS  /tmp/cczU8NLw.s 			page 153


2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 5840              		.loc 1 2890 0
 5841 0026 7B69     		ldr	r3, [r7, #20]
 5842 0028 1B68     		ldr	r3, [r3]
 5843 002a 5A68     		ldr	r2, [r3, #4]
 5844 002c 7B69     		ldr	r3, [r7, #20]
 5845 002e 1B68     		ldr	r3, [r3]
 5846 0030 22F00102 		bic	r2, r2, #1
 5847 0034 5A60     		str	r2, [r3, #4]
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 5848              		.loc 1 2893 0
 5849 0036 FFF7FEFF 		bl	HAL_GetTick
 5850 003a 0346     		mov	r3, r0
 5851 003c 0093     		str	r3, [sp]
 5852 003e 6423     		movs	r3, #100
 5853 0040 0022     		movs	r2, #0
 5854 0042 8021     		movs	r1, #128
 5855 0044 7869     		ldr	r0, [r7, #20]
 5856 0046 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 5857 004a 0346     		mov	r3, r0
 5858 004c 002B     		cmp	r3, #0
 5859 004e 02D0     		beq	.L293
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5860              		.loc 1 2895 0
 5861 0050 7B69     		ldr	r3, [r7, #20]
 5862 0052 4022     		movs	r2, #64
 5863 0054 1A66     		str	r2, [r3, #96]
 5864              	.L293:
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 5865              		.loc 1 2899 0
 5866 0056 FFF7FEFF 		bl	HAL_GetTick
 5867 005a 0346     		mov	r3, r0
 5868 005c 0093     		str	r3, [sp]
 5869 005e 6423     		movs	r3, #100
 5870 0060 0022     		movs	r2, #0
 5871 0062 4FF4C061 		mov	r1, #1536
 5872 0066 7869     		ldr	r0, [r7, #20]
 5873 0068 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5874 006c 0346     		mov	r3, r0
 5875 006e 002B     		cmp	r3, #0
 5876 0070 02D0     		beq	.L294
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5877              		.loc 1 2901 0
 5878 0072 7B69     		ldr	r3, [r7, #20]
 5879 0074 4022     		movs	r2, #64
 5880 0076 1A66     		str	r2, [r3, #96]
 5881              	.L294:
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
ARM GAS  /tmp/cczU8NLw.s 			page 154


2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 5882              		.loc 1 2905 0
 5883 0078 7B69     		ldr	r3, [r7, #20]
 5884 007a 5B6D     		ldr	r3, [r3, #84]
 5885 007c 002B     		cmp	r3, #0
 5886 007e 04D0     		beq	.L295
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
 5887              		.loc 1 2907 0
 5888 0080 7B69     		ldr	r3, [r7, #20]
 5889 0082 5B6D     		ldr	r3, [r3, #84]
 5890 0084 1B6D     		ldr	r3, [r3, #80]
 5891 0086 002B     		cmp	r3, #0
 5892 0088 27D1     		bne	.L298
 5893              	.L295:
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5894              		.loc 1 2914 0
 5895 008a 7B69     		ldr	r3, [r7, #20]
 5896 008c 0022     		movs	r2, #0
 5897 008e A3F84620 		strh	r2, [r3, #70]	@ movhi
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5898              		.loc 1 2915 0
 5899 0092 7B69     		ldr	r3, [r7, #20]
 5900 0094 0022     		movs	r2, #0
 5901 0096 DA87     		strh	r2, [r3, #62]	@ movhi
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5902              		.loc 1 2918 0
 5903 0098 7B69     		ldr	r3, [r7, #20]
 5904 009a 1B6E     		ldr	r3, [r3, #96]
 5905 009c 402B     		cmp	r3, #64
 5906 009e 02D0     		beq	.L297
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5907              		.loc 1 2921 0
 5908 00a0 7B69     		ldr	r3, [r7, #20]
 5909 00a2 0022     		movs	r2, #0
 5910 00a4 1A66     		str	r2, [r3, #96]
 5911              	.L297:
 5912              	.LBB14:
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5913              		.loc 1 2925 0
 5914 00a6 0023     		movs	r3, #0
 5915 00a8 3B61     		str	r3, [r7, #16]
 5916 00aa 7B69     		ldr	r3, [r7, #20]
 5917 00ac 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 155


 5918 00ae DB68     		ldr	r3, [r3, #12]
 5919 00b0 3B61     		str	r3, [r7, #16]
 5920 00b2 7B69     		ldr	r3, [r7, #20]
 5921 00b4 1B68     		ldr	r3, [r3]
 5922 00b6 9B68     		ldr	r3, [r3, #8]
 5923 00b8 3B61     		str	r3, [r7, #16]
 5924 00ba 3B69     		ldr	r3, [r7, #16]
 5925              	.LBE14:
 5926              	.LBB15:
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5927              		.loc 1 2926 0
 5928 00bc 0023     		movs	r3, #0
 5929 00be FB60     		str	r3, [r7, #12]
 5930 00c0 7B69     		ldr	r3, [r7, #20]
 5931 00c2 1B68     		ldr	r3, [r3]
 5932 00c4 9B68     		ldr	r3, [r3, #8]
 5933 00c6 FB60     		str	r3, [r7, #12]
 5934 00c8 FB68     		ldr	r3, [r7, #12]
 5935              	.LBE15:
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5936              		.loc 1 2929 0
 5937 00ca 7B69     		ldr	r3, [r7, #20]
 5938 00cc 0122     		movs	r2, #1
 5939 00ce 83F85D20 		strb	r2, [r3, #93]
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5940              		.loc 1 2932 0
 5941 00d2 7869     		ldr	r0, [r7, #20]
 5942 00d4 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5943 00d8 00E0     		b	.L292
 5944              	.L298:
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5945              		.loc 1 2909 0
 5946 00da 00BF     		nop
 5947              	.L292:
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 5948              		.loc 1 2933 0
 5949 00dc 1837     		adds	r7, r7, #24
 5950              	.LCFI209:
 5951              		.cfi_def_cfa_offset 8
 5952 00de BD46     		mov	sp, r7
 5953              	.LCFI210:
 5954              		.cfi_def_cfa_register 13
 5955              		@ sp needed
 5956 00e0 80BD     		pop	{r7, pc}
 5957              		.cfi_endproc
 5958              	.LFE176:
 5960              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5961              		.align	1
 5962              		.syntax unified
 5963              		.thumb
 5964              		.thumb_func
 5965              		.fpu fpv4-sp-d16
 5967              	SPI_2linesRxISR_8BIT:
ARM GAS  /tmp/cczU8NLw.s 			page 156


 5968              	.LFB177:
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 5969              		.loc 1 2942 0
 5970              		.cfi_startproc
 5971              		@ args = 0, pretend = 0, frame = 8
 5972              		@ frame_needed = 1, uses_anonymous_args = 0
 5973 0000 80B5     		push	{r7, lr}
 5974              	.LCFI211:
 5975              		.cfi_def_cfa_offset 8
 5976              		.cfi_offset 7, -8
 5977              		.cfi_offset 14, -4
 5978 0002 82B0     		sub	sp, sp, #8
 5979              	.LCFI212:
 5980              		.cfi_def_cfa_offset 16
 5981 0004 00AF     		add	r7, sp, #0
 5982              	.LCFI213:
 5983              		.cfi_def_cfa_register 7
 5984 0006 7860     		str	r0, [r7, #4]
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in packing mode */
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
 5985              		.loc 1 2944 0
 5986 0008 7B68     		ldr	r3, [r7, #4]
 5987 000a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 5988 000e 9BB2     		uxth	r3, r3
 5989 0010 012B     		cmp	r3, #1
 5990 0012 23D9     		bls	.L300
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 5991              		.loc 1 2946 0
 5992 0014 7B68     		ldr	r3, [r7, #4]
 5993 0016 1B68     		ldr	r3, [r3]
 5994 0018 DA68     		ldr	r2, [r3, #12]
 5995 001a 7B68     		ldr	r3, [r7, #4]
 5996 001c 1B6C     		ldr	r3, [r3, #64]
 5997 001e 92B2     		uxth	r2, r2
 5998 0020 1A80     		strh	r2, [r3]	@ movhi
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 5999              		.loc 1 2947 0
 6000 0022 7B68     		ldr	r3, [r7, #4]
 6001 0024 1B6C     		ldr	r3, [r3, #64]
 6002 0026 9A1C     		adds	r2, r3, #2
 6003 0028 7B68     		ldr	r3, [r7, #4]
 6004 002a 1A64     		str	r2, [r3, #64]
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 6005              		.loc 1 2948 0
 6006 002c 7B68     		ldr	r3, [r7, #4]
 6007 002e B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6008 0032 9BB2     		uxth	r3, r3
 6009 0034 023B     		subs	r3, r3, #2
ARM GAS  /tmp/cczU8NLw.s 			page 157


 6010 0036 9AB2     		uxth	r2, r3
 6011 0038 7B68     		ldr	r3, [r7, #4]
 6012 003a A3F84620 		strh	r2, [r3, #70]	@ movhi
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 6013              		.loc 1 2949 0
 6014 003e 7B68     		ldr	r3, [r7, #4]
 6015 0040 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6016 0044 9BB2     		uxth	r3, r3
 6017 0046 012B     		cmp	r3, #1
 6018 0048 1DD1     		bne	.L302
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* set fiforxthreshold according the reception data length: 8bit */
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 6019              		.loc 1 2952 0
 6020 004a 7B68     		ldr	r3, [r7, #4]
 6021 004c 1B68     		ldr	r3, [r3]
 6022 004e 5A68     		ldr	r2, [r3, #4]
 6023 0050 7B68     		ldr	r3, [r7, #4]
 6024 0052 1B68     		ldr	r3, [r3]
 6025 0054 42F48052 		orr	r2, r2, #4096
 6026 0058 5A60     		str	r2, [r3, #4]
 6027 005a 14E0     		b	.L302
 6028              	.L300:
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *hspi->pRxBuffPtr++ = *((__IO uint8_t *)&hspi->Instance->DR);
 6029              		.loc 1 2958 0
 6030 005c 7B68     		ldr	r3, [r7, #4]
 6031 005e 1B68     		ldr	r3, [r3]
 6032 0060 03F10C02 		add	r2, r3, #12
 6033 0064 7B68     		ldr	r3, [r7, #4]
 6034 0066 1B6C     		ldr	r3, [r3, #64]
 6035 0068 581C     		adds	r0, r3, #1
 6036 006a 7968     		ldr	r1, [r7, #4]
 6037 006c 0864     		str	r0, [r1, #64]
 6038 006e 1278     		ldrb	r2, [r2]
 6039 0070 D2B2     		uxtb	r2, r2
 6040 0072 1A70     		strb	r2, [r3]
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
 6041              		.loc 1 2959 0
 6042 0074 7B68     		ldr	r3, [r7, #4]
 6043 0076 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6044 007a 9BB2     		uxth	r3, r3
 6045 007c 013B     		subs	r3, r3, #1
 6046 007e 9AB2     		uxth	r2, r3
 6047 0080 7B68     		ldr	r3, [r7, #4]
 6048 0082 A3F84620 		strh	r2, [r3, #70]	@ movhi
 6049              	.L302:
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check end of the reception */
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6050              		.loc 1 2963 0
 6051 0086 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 158


 6052 0088 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6053 008c 9BB2     		uxth	r3, r3
 6054 008e 002B     		cmp	r3, #0
 6055 0090 0FD1     		bne	.L304
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 6056              		.loc 1 2975 0
 6057 0092 7B68     		ldr	r3, [r7, #4]
 6058 0094 1B68     		ldr	r3, [r3]
 6059 0096 5A68     		ldr	r2, [r3, #4]
 6060 0098 7B68     		ldr	r3, [r7, #4]
 6061 009a 1B68     		ldr	r3, [r3]
 6062 009c 22F06002 		bic	r2, r2, #96
 6063 00a0 5A60     		str	r2, [r3, #4]
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6064              		.loc 1 2977 0
 6065 00a2 7B68     		ldr	r3, [r7, #4]
 6066 00a4 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6067 00a6 9BB2     		uxth	r3, r3
 6068 00a8 002B     		cmp	r3, #0
 6069 00aa 02D1     		bne	.L304
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6070              		.loc 1 2979 0
 6071 00ac 7868     		ldr	r0, [r7, #4]
 6072 00ae FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6073              	.L304:
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6074              		.loc 1 2982 0
 6075 00b2 00BF     		nop
 6076 00b4 0837     		adds	r7, r7, #8
 6077              	.LCFI214:
 6078              		.cfi_def_cfa_offset 8
 6079 00b6 BD46     		mov	sp, r7
 6080              	.LCFI215:
 6081              		.cfi_def_cfa_register 13
 6082              		@ sp needed
 6083 00b8 80BD     		pop	{r7, pc}
 6084              		.cfi_endproc
 6085              	.LFE177:
 6087              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 6088              		.align	1
 6089              		.syntax unified
 6090              		.thumb
ARM GAS  /tmp/cczU8NLw.s 			page 159


 6091              		.thumb_func
 6092              		.fpu fpv4-sp-d16
 6094              	SPI_2linesTxISR_8BIT:
 6095              	.LFB178:
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint8_t tmpreg = 0U;
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check end of the reception */
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6096              		.loc 1 3024 0
 6097              		.cfi_startproc
 6098              		@ args = 0, pretend = 0, frame = 8
 6099              		@ frame_needed = 1, uses_anonymous_args = 0
 6100 0000 80B5     		push	{r7, lr}
 6101              	.LCFI216:
 6102              		.cfi_def_cfa_offset 8
 6103              		.cfi_offset 7, -8
 6104              		.cfi_offset 14, -4
 6105 0002 82B0     		sub	sp, sp, #8
 6106              	.LCFI217:
ARM GAS  /tmp/cczU8NLw.s 			page 160


 6107              		.cfi_def_cfa_offset 16
 6108 0004 00AF     		add	r7, sp, #0
 6109              	.LCFI218:
 6110              		.cfi_def_cfa_register 7
 6111 0006 7860     		str	r0, [r7, #4]
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
 6112              		.loc 1 3026 0
 6113 0008 7B68     		ldr	r3, [r7, #4]
 6114 000a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6115 000c 9BB2     		uxth	r3, r3
 6116 000e 012B     		cmp	r3, #1
 6117 0010 12D9     		bls	.L306
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6118              		.loc 1 3028 0
 6119 0012 7B68     		ldr	r3, [r7, #4]
 6120 0014 9B6B     		ldr	r3, [r3, #56]
 6121 0016 1A88     		ldrh	r2, [r3]
 6122 0018 7B68     		ldr	r3, [r7, #4]
 6123 001a 1B68     		ldr	r3, [r3]
 6124 001c DA60     		str	r2, [r3, #12]
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 6125              		.loc 1 3029 0
 6126 001e 7B68     		ldr	r3, [r7, #4]
 6127 0020 9B6B     		ldr	r3, [r3, #56]
 6128 0022 9A1C     		adds	r2, r3, #2
 6129 0024 7B68     		ldr	r3, [r7, #4]
 6130 0026 9A63     		str	r2, [r3, #56]
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 6131              		.loc 1 3030 0
 6132 0028 7B68     		ldr	r3, [r7, #4]
 6133 002a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6134 002c 9BB2     		uxth	r3, r3
 6135 002e 023B     		subs	r3, r3, #2
 6136 0030 9AB2     		uxth	r2, r3
 6137 0032 7B68     		ldr	r3, [r7, #4]
 6138 0034 DA87     		strh	r2, [r3, #62]	@ movhi
 6139 0036 10E0     		b	.L307
 6140              	.L306:
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 6141              		.loc 1 3035 0
 6142 0038 7B68     		ldr	r3, [r7, #4]
 6143 003a 9B6B     		ldr	r3, [r3, #56]
 6144 003c 591C     		adds	r1, r3, #1
 6145 003e 7A68     		ldr	r2, [r7, #4]
 6146 0040 9163     		str	r1, [r2, #56]
 6147 0042 7A68     		ldr	r2, [r7, #4]
 6148 0044 1268     		ldr	r2, [r2]
 6149 0046 0C32     		adds	r2, r2, #12
 6150 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6151 004a 1370     		strb	r3, [r2]
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount--;
ARM GAS  /tmp/cczU8NLw.s 			page 161


 6152              		.loc 1 3036 0
 6153 004c 7B68     		ldr	r3, [r7, #4]
 6154 004e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6155 0050 9BB2     		uxth	r3, r3
 6156 0052 013B     		subs	r3, r3, #1
 6157 0054 9AB2     		uxth	r2, r3
 6158 0056 7B68     		ldr	r3, [r7, #4]
 6159 0058 DA87     		strh	r2, [r3, #62]	@ movhi
 6160              	.L307:
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* check the end of the transmission */
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6161              		.loc 1 3040 0
 6162 005a 7B68     		ldr	r3, [r7, #4]
 6163 005c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6164 005e 9BB2     		uxth	r3, r3
 6165 0060 002B     		cmp	r3, #0
 6166 0062 10D1     		bne	.L309
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6167              		.loc 1 3054 0
 6168 0064 7B68     		ldr	r3, [r7, #4]
 6169 0066 1B68     		ldr	r3, [r3]
 6170 0068 5A68     		ldr	r2, [r3, #4]
 6171 006a 7B68     		ldr	r3, [r7, #4]
 6172 006c 1B68     		ldr	r3, [r3]
 6173 006e 22F08002 		bic	r2, r2, #128
 6174 0072 5A60     		str	r2, [r3, #4]
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6175              		.loc 1 3056 0
 6176 0074 7B68     		ldr	r3, [r7, #4]
 6177 0076 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6178 007a 9BB2     		uxth	r3, r3
 6179 007c 002B     		cmp	r3, #0
 6180 007e 02D1     		bne	.L309
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6181              		.loc 1 3058 0
 6182 0080 7868     		ldr	r0, [r7, #4]
 6183 0082 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6184              	.L309:
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/cczU8NLw.s 			page 162


3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6185              		.loc 1 3061 0
 6186 0086 00BF     		nop
 6187 0088 0837     		adds	r7, r7, #8
 6188              	.LCFI219:
 6189              		.cfi_def_cfa_offset 8
 6190 008a BD46     		mov	sp, r7
 6191              	.LCFI220:
 6192              		.cfi_def_cfa_register 13
 6193              		@ sp needed
 6194 008c 80BD     		pop	{r7, pc}
 6195              		.cfi_endproc
 6196              	.LFE178:
 6198              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 6199              		.align	1
 6200              		.syntax unified
 6201              		.thumb
 6202              		.thumb_func
 6203              		.fpu fpv4-sp-d16
 6205              	SPI_2linesRxISR_16BIT:
 6206              	.LFB179:
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6207              		.loc 1 3070 0
 6208              		.cfi_startproc
 6209              		@ args = 0, pretend = 0, frame = 8
 6210              		@ frame_needed = 1, uses_anonymous_args = 0
 6211 0000 80B5     		push	{r7, lr}
 6212              	.LCFI221:
 6213              		.cfi_def_cfa_offset 8
 6214              		.cfi_offset 7, -8
 6215              		.cfi_offset 14, -4
 6216 0002 82B0     		sub	sp, sp, #8
 6217              	.LCFI222:
 6218              		.cfi_def_cfa_offset 16
 6219 0004 00AF     		add	r7, sp, #0
 6220              	.LCFI223:
 6221              		.cfi_def_cfa_register 7
 6222 0006 7860     		str	r0, [r7, #4]
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 6223              		.loc 1 3072 0
 6224 0008 7B68     		ldr	r3, [r7, #4]
 6225 000a 1B68     		ldr	r3, [r3]
 6226 000c DA68     		ldr	r2, [r3, #12]
 6227 000e 7B68     		ldr	r3, [r7, #4]
 6228 0010 1B6C     		ldr	r3, [r3, #64]
 6229 0012 92B2     		uxth	r2, r2
 6230 0014 1A80     		strh	r2, [r3]	@ movhi
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
ARM GAS  /tmp/cczU8NLw.s 			page 163


 6231              		.loc 1 3073 0
 6232 0016 7B68     		ldr	r3, [r7, #4]
 6233 0018 1B6C     		ldr	r3, [r3, #64]
 6234 001a 9A1C     		adds	r2, r3, #2
 6235 001c 7B68     		ldr	r3, [r7, #4]
 6236 001e 1A64     		str	r2, [r3, #64]
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 6237              		.loc 1 3074 0
 6238 0020 7B68     		ldr	r3, [r7, #4]
 6239 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6240 0026 9BB2     		uxth	r3, r3
 6241 0028 013B     		subs	r3, r3, #1
 6242 002a 9AB2     		uxth	r2, r3
 6243 002c 7B68     		ldr	r3, [r7, #4]
 6244 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6245              		.loc 1 3076 0
 6246 0032 7B68     		ldr	r3, [r7, #4]
 6247 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6248 0038 9BB2     		uxth	r3, r3
 6249 003a 002B     		cmp	r3, #0
 6250 003c 0FD1     		bne	.L312
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE interrupt */
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
 6251              		.loc 1 3087 0
 6252 003e 7B68     		ldr	r3, [r7, #4]
 6253 0040 1B68     		ldr	r3, [r3]
 6254 0042 5A68     		ldr	r2, [r3, #4]
 6255 0044 7B68     		ldr	r3, [r7, #4]
 6256 0046 1B68     		ldr	r3, [r3]
 6257 0048 22F04002 		bic	r2, r2, #64
 6258 004c 5A60     		str	r2, [r3, #4]
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6259              		.loc 1 3089 0
 6260 004e 7B68     		ldr	r3, [r7, #4]
 6261 0050 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6262 0052 9BB2     		uxth	r3, r3
 6263 0054 002B     		cmp	r3, #0
 6264 0056 02D1     		bne	.L312
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6265              		.loc 1 3091 0
 6266 0058 7868     		ldr	r0, [r7, #4]
 6267 005a FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6268              	.L312:
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cczU8NLw.s 			page 164


3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6269              		.loc 1 3094 0
 6270 005e 00BF     		nop
 6271 0060 0837     		adds	r7, r7, #8
 6272              	.LCFI224:
 6273              		.cfi_def_cfa_offset 8
 6274 0062 BD46     		mov	sp, r7
 6275              	.LCFI225:
 6276              		.cfi_def_cfa_register 13
 6277              		@ sp needed
 6278 0064 80BD     		pop	{r7, pc}
 6279              		.cfi_endproc
 6280              	.LFE179:
 6282              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 6283              		.align	1
 6284              		.syntax unified
 6285              		.thumb
 6286              		.thumb_func
 6287              		.fpu fpv4-sp-d16
 6289              	SPI_2linesTxISR_16BIT:
 6290              	.LFB180:
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = hspi->Instance->DR;
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE interrupt */
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6291              		.loc 1 3128 0
ARM GAS  /tmp/cczU8NLw.s 			page 165


 6292              		.cfi_startproc
 6293              		@ args = 0, pretend = 0, frame = 8
 6294              		@ frame_needed = 1, uses_anonymous_args = 0
 6295 0000 80B5     		push	{r7, lr}
 6296              	.LCFI226:
 6297              		.cfi_def_cfa_offset 8
 6298              		.cfi_offset 7, -8
 6299              		.cfi_offset 14, -4
 6300 0002 82B0     		sub	sp, sp, #8
 6301              	.LCFI227:
 6302              		.cfi_def_cfa_offset 16
 6303 0004 00AF     		add	r7, sp, #0
 6304              	.LCFI228:
 6305              		.cfi_def_cfa_register 7
 6306 0006 7860     		str	r0, [r7, #4]
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6307              		.loc 1 3130 0
 6308 0008 7B68     		ldr	r3, [r7, #4]
 6309 000a 9B6B     		ldr	r3, [r3, #56]
 6310 000c 1A88     		ldrh	r2, [r3]
 6311 000e 7B68     		ldr	r3, [r7, #4]
 6312 0010 1B68     		ldr	r3, [r3]
 6313 0012 DA60     		str	r2, [r3, #12]
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6314              		.loc 1 3131 0
 6315 0014 7B68     		ldr	r3, [r7, #4]
 6316 0016 9B6B     		ldr	r3, [r3, #56]
 6317 0018 9A1C     		adds	r2, r3, #2
 6318 001a 7B68     		ldr	r3, [r7, #4]
 6319 001c 9A63     		str	r2, [r3, #56]
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 6320              		.loc 1 3132 0
 6321 001e 7B68     		ldr	r3, [r7, #4]
 6322 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6323 0022 9BB2     		uxth	r3, r3
 6324 0024 013B     		subs	r3, r3, #1
 6325 0026 9AB2     		uxth	r2, r3
 6326 0028 7B68     		ldr	r3, [r7, #4]
 6327 002a DA87     		strh	r2, [r3, #62]	@ movhi
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6328              		.loc 1 3135 0
 6329 002c 7B68     		ldr	r3, [r7, #4]
 6330 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6331 0030 9BB2     		uxth	r3, r3
 6332 0032 002B     		cmp	r3, #0
 6333 0034 10D1     		bne	.L315
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
ARM GAS  /tmp/cczU8NLw.s 			page 166


3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6334              		.loc 1 3149 0
 6335 0036 7B68     		ldr	r3, [r7, #4]
 6336 0038 1B68     		ldr	r3, [r3]
 6337 003a 5A68     		ldr	r2, [r3, #4]
 6338 003c 7B68     		ldr	r3, [r7, #4]
 6339 003e 1B68     		ldr	r3, [r3]
 6340 0040 22F08002 		bic	r2, r2, #128
 6341 0044 5A60     		str	r2, [r3, #4]
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6342              		.loc 1 3151 0
 6343 0046 7B68     		ldr	r3, [r7, #4]
 6344 0048 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6345 004c 9BB2     		uxth	r3, r3
 6346 004e 002B     		cmp	r3, #0
 6347 0050 02D1     		bne	.L315
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6348              		.loc 1 3153 0
 6349 0052 7868     		ldr	r0, [r7, #4]
 6350 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6351              	.L315:
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6352              		.loc 1 3156 0
 6353 0058 00BF     		nop
 6354 005a 0837     		adds	r7, r7, #8
 6355              	.LCFI229:
 6356              		.cfi_def_cfa_offset 8
 6357 005c BD46     		mov	sp, r7
 6358              	.LCFI230:
 6359              		.cfi_def_cfa_register 13
 6360              		@ sp needed
 6361 005e 80BD     		pop	{r7, pc}
 6362              		.cfi_endproc
 6363              	.LFE180:
 6365              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 6366              		.align	1
 6367              		.syntax unified
 6368              		.thumb
 6369              		.thumb_func
 6370              		.fpu fpv4-sp-d16
 6372              	SPI_RxISR_8BIT:
 6373              	.LFB181:
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/cczU8NLw.s 			page 167


3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint8_t tmpreg = 0U;
3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6374              		.loc 1 3191 0
 6375              		.cfi_startproc
 6376              		@ args = 0, pretend = 0, frame = 8
 6377              		@ frame_needed = 1, uses_anonymous_args = 0
 6378 0000 80B5     		push	{r7, lr}
 6379              	.LCFI231:
 6380              		.cfi_def_cfa_offset 8
 6381              		.cfi_offset 7, -8
 6382              		.cfi_offset 14, -4
 6383 0002 82B0     		sub	sp, sp, #8
 6384              	.LCFI232:
 6385              		.cfi_def_cfa_offset 16
 6386 0004 00AF     		add	r7, sp, #0
 6387              	.LCFI233:
 6388              		.cfi_def_cfa_register 7
 6389 0006 7860     		str	r0, [r7, #4]
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *hspi->pRxBuffPtr++ = (*(__IO uint8_t *)&hspi->Instance->DR);
 6390              		.loc 1 3192 0
 6391 0008 7B68     		ldr	r3, [r7, #4]
 6392 000a 1B68     		ldr	r3, [r3]
 6393 000c 03F10C02 		add	r2, r3, #12
 6394 0010 7B68     		ldr	r3, [r7, #4]
 6395 0012 1B6C     		ldr	r3, [r3, #64]
 6396 0014 581C     		adds	r0, r3, #1
 6397 0016 7968     		ldr	r1, [r7, #4]
 6398 0018 0864     		str	r0, [r1, #64]
 6399 001a 1278     		ldrb	r2, [r2]
 6400 001c D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cczU8NLw.s 			page 168


 6401 001e 1A70     		strb	r2, [r3]
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 6402              		.loc 1 3193 0
 6403 0020 7B68     		ldr	r3, [r7, #4]
 6404 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6405 0026 9BB2     		uxth	r3, r3
 6406 0028 013B     		subs	r3, r3, #1
 6407 002a 9AB2     		uxth	r2, r3
 6408 002c 7B68     		ldr	r3, [r7, #4]
 6409 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6410              		.loc 1 3203 0
 6411 0032 7B68     		ldr	r3, [r7, #4]
 6412 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6413 0038 9BB2     		uxth	r3, r3
 6414 003a 002B     		cmp	r3, #0
 6415 003c 02D1     		bne	.L318
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6416              		.loc 1 3212 0
 6417 003e 7868     		ldr	r0, [r7, #4]
 6418 0040 FFF7FEFF 		bl	SPI_CloseRx_ISR
 6419              	.L318:
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6420              		.loc 1 3214 0
 6421 0044 00BF     		nop
 6422 0046 0837     		adds	r7, r7, #8
 6423              	.LCFI234:
 6424              		.cfi_def_cfa_offset 8
 6425 0048 BD46     		mov	sp, r7
 6426              	.LCFI235:
 6427              		.cfi_def_cfa_register 13
 6428              		@ sp needed
 6429 004a 80BD     		pop	{r7, pc}
 6430              		.cfi_endproc
 6431              	.LFE181:
 6433              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 6434              		.align	1
 6435              		.syntax unified
 6436              		.thumb
ARM GAS  /tmp/cczU8NLw.s 			page 169


 6437              		.thumb_func
 6438              		.fpu fpv4-sp-d16
 6440              	SPI_RxISR_16BIT:
 6441              	.LFB182:
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read data register to flush CRC */
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmpreg = hspi->Instance->DR;
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* To avoid GCC warning */
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(tmpreg);
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6442              		.loc 1 3247 0
 6443              		.cfi_startproc
 6444              		@ args = 0, pretend = 0, frame = 8
 6445              		@ frame_needed = 1, uses_anonymous_args = 0
 6446 0000 80B5     		push	{r7, lr}
 6447              	.LCFI236:
 6448              		.cfi_def_cfa_offset 8
 6449              		.cfi_offset 7, -8
 6450              		.cfi_offset 14, -4
 6451 0002 82B0     		sub	sp, sp, #8
 6452              	.LCFI237:
 6453              		.cfi_def_cfa_offset 16
 6454 0004 00AF     		add	r7, sp, #0
 6455              	.LCFI238:
 6456              		.cfi_def_cfa_register 7
 6457 0006 7860     		str	r0, [r7, #4]
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 6458              		.loc 1 3248 0
 6459 0008 7B68     		ldr	r3, [r7, #4]
 6460 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 170


 6461 000c DA68     		ldr	r2, [r3, #12]
 6462 000e 7B68     		ldr	r3, [r7, #4]
 6463 0010 1B6C     		ldr	r3, [r3, #64]
 6464 0012 92B2     		uxth	r2, r2
 6465 0014 1A80     		strh	r2, [r3]	@ movhi
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6466              		.loc 1 3249 0
 6467 0016 7B68     		ldr	r3, [r7, #4]
 6468 0018 1B6C     		ldr	r3, [r3, #64]
 6469 001a 9A1C     		adds	r2, r3, #2
 6470 001c 7B68     		ldr	r3, [r7, #4]
 6471 001e 1A64     		str	r2, [r3, #64]
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 6472              		.loc 1 3250 0
 6473 0020 7B68     		ldr	r3, [r7, #4]
 6474 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6475 0026 9BB2     		uxth	r3, r3
 6476 0028 013B     		subs	r3, r3, #1
 6477 002a 9AB2     		uxth	r2, r3
 6478 002c 7B68     		ldr	r3, [r7, #4]
 6479 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6480              		.loc 1 3260 0
 6481 0032 7B68     		ldr	r3, [r7, #4]
 6482 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6483 0038 9BB2     		uxth	r3, r3
 6484 003a 002B     		cmp	r3, #0
 6485 003c 02D1     		bne	.L321
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6486              		.loc 1 3269 0
 6487 003e 7868     		ldr	r0, [r7, #4]
 6488 0040 FFF7FEFF 		bl	SPI_CloseRx_ISR
 6489              	.L321:
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6490              		.loc 1 3271 0
 6491 0044 00BF     		nop
 6492 0046 0837     		adds	r7, r7, #8
 6493              	.LCFI239:
 6494              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cczU8NLw.s 			page 171


 6495 0048 BD46     		mov	sp, r7
 6496              	.LCFI240:
 6497              		.cfi_def_cfa_register 13
 6498              		@ sp needed
 6499 004a 80BD     		pop	{r7, pc}
 6500              		.cfi_endproc
 6501              	.LFE182:
 6503              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 6504              		.align	1
 6505              		.syntax unified
 6506              		.thumb
 6507              		.thumb_func
 6508              		.fpu fpv4-sp-d16
 6510              	SPI_TxISR_8BIT:
 6511              	.LFB183:
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6512              		.loc 1 3280 0
 6513              		.cfi_startproc
 6514              		@ args = 0, pretend = 0, frame = 8
 6515              		@ frame_needed = 1, uses_anonymous_args = 0
 6516 0000 80B5     		push	{r7, lr}
 6517              	.LCFI241:
 6518              		.cfi_def_cfa_offset 8
 6519              		.cfi_offset 7, -8
 6520              		.cfi_offset 14, -4
 6521 0002 82B0     		sub	sp, sp, #8
 6522              	.LCFI242:
 6523              		.cfi_def_cfa_offset 16
 6524 0004 00AF     		add	r7, sp, #0
 6525              	.LCFI243:
 6526              		.cfi_def_cfa_register 7
 6527 0006 7860     		str	r0, [r7, #4]
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 6528              		.loc 1 3281 0
 6529 0008 7B68     		ldr	r3, [r7, #4]
 6530 000a 9B6B     		ldr	r3, [r3, #56]
 6531 000c 591C     		adds	r1, r3, #1
 6532 000e 7A68     		ldr	r2, [r7, #4]
 6533 0010 9163     		str	r1, [r2, #56]
 6534 0012 7A68     		ldr	r2, [r7, #4]
 6535 0014 1268     		ldr	r2, [r2]
 6536 0016 0C32     		adds	r2, r2, #12
 6537 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6538 001a 1370     		strb	r3, [r2]
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 6539              		.loc 1 3282 0
 6540 001c 7B68     		ldr	r3, [r7, #4]
 6541 001e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6542 0020 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cczU8NLw.s 			page 172


 6543 0022 013B     		subs	r3, r3, #1
 6544 0024 9AB2     		uxth	r2, r3
 6545 0026 7B68     		ldr	r3, [r7, #4]
 6546 0028 DA87     		strh	r2, [r3, #62]	@ movhi
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6547              		.loc 1 3284 0
 6548 002a 7B68     		ldr	r3, [r7, #4]
 6549 002c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6550 002e 9BB2     		uxth	r3, r3
 6551 0030 002B     		cmp	r3, #0
 6552 0032 02D1     		bne	.L324
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6553              		.loc 1 3293 0
 6554 0034 7868     		ldr	r0, [r7, #4]
 6555 0036 FFF7FEFF 		bl	SPI_CloseTx_ISR
 6556              	.L324:
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6557              		.loc 1 3295 0
 6558 003a 00BF     		nop
 6559 003c 0837     		adds	r7, r7, #8
 6560              	.LCFI244:
 6561              		.cfi_def_cfa_offset 8
 6562 003e BD46     		mov	sp, r7
 6563              	.LCFI245:
 6564              		.cfi_def_cfa_register 13
 6565              		@ sp needed
 6566 0040 80BD     		pop	{r7, pc}
 6567              		.cfi_endproc
 6568              	.LFE183:
 6570              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 6571              		.align	1
 6572              		.syntax unified
 6573              		.thumb
 6574              		.thumb_func
 6575              		.fpu fpv4-sp-d16
 6577              	SPI_TxISR_16BIT:
 6578              	.LFB184:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6579              		.loc 1 3304 0
ARM GAS  /tmp/cczU8NLw.s 			page 173


 6580              		.cfi_startproc
 6581              		@ args = 0, pretend = 0, frame = 8
 6582              		@ frame_needed = 1, uses_anonymous_args = 0
 6583 0000 80B5     		push	{r7, lr}
 6584              	.LCFI246:
 6585              		.cfi_def_cfa_offset 8
 6586              		.cfi_offset 7, -8
 6587              		.cfi_offset 14, -4
 6588 0002 82B0     		sub	sp, sp, #8
 6589              	.LCFI247:
 6590              		.cfi_def_cfa_offset 16
 6591 0004 00AF     		add	r7, sp, #0
 6592              	.LCFI248:
 6593              		.cfi_def_cfa_register 7
 6594 0006 7860     		str	r0, [r7, #4]
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6595              		.loc 1 3306 0
 6596 0008 7B68     		ldr	r3, [r7, #4]
 6597 000a 9B6B     		ldr	r3, [r3, #56]
 6598 000c 1A88     		ldrh	r2, [r3]
 6599 000e 7B68     		ldr	r3, [r7, #4]
 6600 0010 1B68     		ldr	r3, [r3]
 6601 0012 DA60     		str	r2, [r3, #12]
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6602              		.loc 1 3307 0
 6603 0014 7B68     		ldr	r3, [r7, #4]
 6604 0016 9B6B     		ldr	r3, [r3, #56]
 6605 0018 9A1C     		adds	r2, r3, #2
 6606 001a 7B68     		ldr	r3, [r7, #4]
 6607 001c 9A63     		str	r2, [r3, #56]
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 6608              		.loc 1 3308 0
 6609 001e 7B68     		ldr	r3, [r7, #4]
 6610 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6611 0022 9BB2     		uxth	r3, r3
 6612 0024 013B     		subs	r3, r3, #1
 6613 0026 9AB2     		uxth	r2, r3
 6614 0028 7B68     		ldr	r3, [r7, #4]
 6615 002a DA87     		strh	r2, [r3, #62]	@ movhi
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6616              		.loc 1 3310 0
 6617 002c 7B68     		ldr	r3, [r7, #4]
 6618 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6619 0030 9BB2     		uxth	r3, r3
 6620 0032 002B     		cmp	r3, #0
 6621 0034 02D1     		bne	.L327
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
ARM GAS  /tmp/cczU8NLw.s 			page 174


 6622              		.loc 1 3319 0
 6623 0036 7868     		ldr	r0, [r7, #4]
 6624 0038 FFF7FEFF 		bl	SPI_CloseTx_ISR
 6625              	.L327:
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6626              		.loc 1 3321 0
 6627 003c 00BF     		nop
 6628 003e 0837     		adds	r7, r7, #8
 6629              	.LCFI249:
 6630              		.cfi_def_cfa_offset 8
 6631 0040 BD46     		mov	sp, r7
 6632              	.LCFI250:
 6633              		.cfi_def_cfa_register 13
 6634              		@ sp needed
 6635 0042 80BD     		pop	{r7, pc}
 6636              		.cfi_endproc
 6637              	.LFE184:
 6639              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 6640              		.align	1
 6641              		.syntax unified
 6642              		.thumb
 6643              		.thumb_func
 6644              		.fpu fpv4-sp-d16
 6646              	SPI_WaitFlagStateUntilTimeout:
 6647              	.LFB185:
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Handle SPI Communication Timeout.
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param hspi pointer to a SPI_HandleTypeDef structure that contains
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Flag SPI flag to check
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param State flag state to check
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Timeout Timeout duration
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Tickstart tick start value
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6648              		.loc 1 3335 0
 6649              		.cfi_startproc
 6650              		@ args = 4, pretend = 0, frame = 16
 6651              		@ frame_needed = 1, uses_anonymous_args = 0
 6652 0000 80B5     		push	{r7, lr}
 6653              	.LCFI251:
 6654              		.cfi_def_cfa_offset 8
 6655              		.cfi_offset 7, -8
 6656              		.cfi_offset 14, -4
 6657 0002 84B0     		sub	sp, sp, #16
 6658              	.LCFI252:
 6659              		.cfi_def_cfa_offset 24
 6660 0004 00AF     		add	r7, sp, #0
 6661              	.LCFI253:
 6662              		.cfi_def_cfa_register 7
 6663 0006 F860     		str	r0, [r7, #12]
 6664 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/cczU8NLw.s 			page 175


 6665 000a 7A60     		str	r2, [r7, #4]
 6666 000c 3B60     		str	r3, [r7]
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Flag) != State)
 6667              		.loc 1 3336 0
 6668 000e 4DE0     		b	.L329
 6669              	.L335:
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 6670              		.loc 1 3338 0
 6671 0010 3B68     		ldr	r3, [r7]
 6672 0012 B3F1FF3F 		cmp	r3, #-1
 6673 0016 49D0     		beq	.L329
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) >= Timeout))
 6674              		.loc 1 3340 0
 6675 0018 3B68     		ldr	r3, [r7]
 6676 001a 002B     		cmp	r3, #0
 6677 001c 07D0     		beq	.L330
 6678              		.loc 1 3340 0 is_stmt 0 discriminator 1
 6679 001e FFF7FEFF 		bl	HAL_GetTick
 6680 0022 0246     		mov	r2, r0
 6681 0024 BB69     		ldr	r3, [r7, #24]
 6682 0026 D31A     		subs	r3, r2, r3
 6683 0028 3A68     		ldr	r2, [r7]
 6684 002a 9A42     		cmp	r2, r3
 6685 002c 3ED8     		bhi	.L329
 6686              	.L330:
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         and slave for their respective CRC calculation */
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 6687              		.loc 1 3347 0 is_stmt 1
 6688 002e FB68     		ldr	r3, [r7, #12]
 6689 0030 1B68     		ldr	r3, [r3]
 6690 0032 5A68     		ldr	r2, [r3, #4]
 6691 0034 FB68     		ldr	r3, [r7, #12]
 6692 0036 1B68     		ldr	r3, [r3]
 6693 0038 22F0E002 		bic	r2, r2, #224
 6694 003c 5A60     		str	r2, [r3, #4]
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6695              		.loc 1 3349 0
 6696 003e FB68     		ldr	r3, [r7, #12]
 6697 0040 5B68     		ldr	r3, [r3, #4]
 6698 0042 B3F5827F 		cmp	r3, #260
 6699 0046 11D1     		bne	.L331
 6700              		.loc 1 3349 0 is_stmt 0 discriminator 1
 6701 0048 FB68     		ldr	r3, [r7, #12]
 6702 004a 9B68     		ldr	r3, [r3, #8]
 6703 004c B3F5004F 		cmp	r3, #32768
 6704 0050 04D0     		beq	.L332
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 6705              		.loc 1 3350 0 is_stmt 1
 6706 0052 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 176


 6707 0054 9B68     		ldr	r3, [r3, #8]
 6708 0056 B3F5806F 		cmp	r3, #1024
 6709 005a 07D1     		bne	.L331
 6710              	.L332:
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 6711              		.loc 1 3353 0
 6712 005c FB68     		ldr	r3, [r7, #12]
 6713 005e 1B68     		ldr	r3, [r3]
 6714 0060 1A68     		ldr	r2, [r3]
 6715 0062 FB68     		ldr	r3, [r7, #12]
 6716 0064 1B68     		ldr	r3, [r3]
 6717 0066 22F04002 		bic	r2, r2, #64
 6718 006a 1A60     		str	r2, [r3]
 6719              	.L331:
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 6720              		.loc 1 3357 0
 6721 006c FB68     		ldr	r3, [r7, #12]
 6722 006e 9B6A     		ldr	r3, [r3, #40]
 6723 0070 B3F5005F 		cmp	r3, #8192
 6724 0074 10D1     		bne	.L333
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 6725              		.loc 1 3359 0
 6726 0076 FB68     		ldr	r3, [r7, #12]
 6727 0078 1B68     		ldr	r3, [r3]
 6728 007a 1968     		ldr	r1, [r3]
 6729 007c FB68     		ldr	r3, [r7, #12]
 6730 007e 1A68     		ldr	r2, [r3]
 6731 0080 4DF6FF73 		movw	r3, #57343
 6732 0084 0B40     		ands	r3, r3, r1
 6733 0086 1360     		str	r3, [r2]
 6734 0088 FB68     		ldr	r3, [r7, #12]
 6735 008a 1B68     		ldr	r3, [r3]
 6736 008c 1A68     		ldr	r2, [r3]
 6737 008e FB68     		ldr	r3, [r7, #12]
 6738 0090 1B68     		ldr	r3, [r3]
 6739 0092 42F40052 		orr	r2, r2, #8192
 6740 0096 1A60     		str	r2, [r3]
 6741              	.L333:
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 6742              		.loc 1 3362 0
 6743 0098 FB68     		ldr	r3, [r7, #12]
 6744 009a 0122     		movs	r2, #1
 6745 009c 83F85D20 		strb	r2, [r3, #93]
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 6746              		.loc 1 3365 0
 6747 00a0 FB68     		ldr	r3, [r7, #12]
 6748 00a2 0022     		movs	r2, #0
ARM GAS  /tmp/cczU8NLw.s 			page 177


 6749 00a4 83F85C20 		strb	r2, [r3, #92]
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
 6750              		.loc 1 3367 0
 6751 00a8 0323     		movs	r3, #3
 6752 00aa 08E0     		b	.L334
 6753              	.L329:
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6754              		.loc 1 3336 0
 6755 00ac FB68     		ldr	r3, [r7, #12]
 6756 00ae 1B68     		ldr	r3, [r3]
 6757 00b0 9A68     		ldr	r2, [r3, #8]
 6758 00b2 BB68     		ldr	r3, [r7, #8]
 6759 00b4 1340     		ands	r3, r3, r2
 6760 00b6 7A68     		ldr	r2, [r7, #4]
 6761 00b8 9A42     		cmp	r2, r3
 6762 00ba A9D1     		bne	.L335
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 6763              		.loc 1 3372 0
 6764 00bc 0023     		movs	r3, #0
 6765              	.L334:
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6766              		.loc 1 3373 0
 6767 00be 1846     		mov	r0, r3
 6768 00c0 1037     		adds	r7, r7, #16
 6769              	.LCFI254:
 6770              		.cfi_def_cfa_offset 8
 6771 00c2 BD46     		mov	sp, r7
 6772              	.LCFI255:
 6773              		.cfi_def_cfa_register 13
 6774              		@ sp needed
 6775 00c4 80BD     		pop	{r7, pc}
 6776              		.cfi_endproc
 6777              	.LFE185:
 6779              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 6780              		.align	1
 6781              		.syntax unified
 6782              		.thumb
 6783              		.thumb_func
 6784              		.fpu fpv4-sp-d16
 6786              	SPI_WaitFifoStateUntilTimeout:
 6787              	.LFB186:
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Handle SPI FIFO Communication Timeout.
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param hspi pointer to a SPI_HandleTypeDef structure that contains
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Fifo Fifo to check
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param State Fifo state to check
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Timeout Timeout duration
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Tickstart tick start value
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/cczU8NLw.s 			page 178


3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6788              		.loc 1 3387 0
 6789              		.cfi_startproc
 6790              		@ args = 4, pretend = 0, frame = 24
 6791              		@ frame_needed = 1, uses_anonymous_args = 0
 6792 0000 80B5     		push	{r7, lr}
 6793              	.LCFI256:
 6794              		.cfi_def_cfa_offset 8
 6795              		.cfi_offset 7, -8
 6796              		.cfi_offset 14, -4
 6797 0002 86B0     		sub	sp, sp, #24
 6798              	.LCFI257:
 6799              		.cfi_def_cfa_offset 32
 6800 0004 00AF     		add	r7, sp, #0
 6801              	.LCFI258:
 6802              		.cfi_def_cfa_register 7
 6803 0006 F860     		str	r0, [r7, #12]
 6804 0008 B960     		str	r1, [r7, #8]
 6805 000a 7A60     		str	r2, [r7, #4]
 6806 000c 3B60     		str	r3, [r7]
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint8_t tmpreg;
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 6807              		.loc 1 3390 0
 6808 000e 5BE0     		b	.L337
 6809              	.L344:
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 6810              		.loc 1 3392 0
 6811 0010 BB68     		ldr	r3, [r7, #8]
 6812 0012 B3F5C06F 		cmp	r3, #1536
 6813 0016 09D1     		bne	.L338
 6814              		.loc 1 3392 0 is_stmt 0 discriminator 1
 6815 0018 7B68     		ldr	r3, [r7, #4]
 6816 001a 002B     		cmp	r3, #0
 6817 001c 06D1     		bne	.L338
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
 6818              		.loc 1 3394 0 is_stmt 1
 6819 001e FB68     		ldr	r3, [r7, #12]
 6820 0020 1B68     		ldr	r3, [r3]
 6821 0022 0C33     		adds	r3, r3, #12
 6822 0024 1B78     		ldrb	r3, [r3]
 6823 0026 DBB2     		uxtb	r3, r3
 6824 0028 FB75     		strb	r3, [r7, #23]
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* To avoid GCC warning */
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       UNUSED(tmpreg);
 6825              		.loc 1 3396 0
 6826 002a FB7D     		ldrb	r3, [r7, #23]
 6827              	.L338:
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 6828              		.loc 1 3399 0
 6829 002c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cczU8NLw.s 			page 179


 6830 002e B3F1FF3F 		cmp	r3, #-1
 6831 0032 49D0     		beq	.L337
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((Timeout == 0) || ((HAL_GetTick() - Tickstart) >= Timeout))
 6832              		.loc 1 3401 0
 6833 0034 3B68     		ldr	r3, [r7]
 6834 0036 002B     		cmp	r3, #0
 6835 0038 07D0     		beq	.L339
 6836              		.loc 1 3401 0 is_stmt 0 discriminator 1
 6837 003a FFF7FEFF 		bl	HAL_GetTick
 6838 003e 0246     		mov	r2, r0
 6839 0040 3B6A     		ldr	r3, [r7, #32]
 6840 0042 D31A     		subs	r3, r2, r3
 6841 0044 3A68     		ldr	r2, [r7]
 6842 0046 9A42     		cmp	r2, r3
 6843 0048 3ED8     		bhi	.L337
 6844              	.L339:
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            and slave for their respective CRC calculation */
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 6845              		.loc 1 3408 0 is_stmt 1
 6846 004a FB68     		ldr	r3, [r7, #12]
 6847 004c 1B68     		ldr	r3, [r3]
 6848 004e 5A68     		ldr	r2, [r3, #4]
 6849 0050 FB68     		ldr	r3, [r7, #12]
 6850 0052 1B68     		ldr	r3, [r3]
 6851 0054 22F0E002 		bic	r2, r2, #224
 6852 0058 5A60     		str	r2, [r3, #4]
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6853              		.loc 1 3410 0
 6854 005a FB68     		ldr	r3, [r7, #12]
 6855 005c 5B68     		ldr	r3, [r3, #4]
 6856 005e B3F5827F 		cmp	r3, #260
 6857 0062 11D1     		bne	.L340
 6858              		.loc 1 3410 0 is_stmt 0 discriminator 1
 6859 0064 FB68     		ldr	r3, [r7, #12]
 6860 0066 9B68     		ldr	r3, [r3, #8]
 6861 0068 B3F5004F 		cmp	r3, #32768
 6862 006c 04D0     		beq	.L341
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 6863              		.loc 1 3411 0 is_stmt 1
 6864 006e FB68     		ldr	r3, [r7, #12]
 6865 0070 9B68     		ldr	r3, [r3, #8]
 6866 0072 B3F5806F 		cmp	r3, #1024
 6867 0076 07D1     		bne	.L340
 6868              	.L341:
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 6869              		.loc 1 3414 0
 6870 0078 FB68     		ldr	r3, [r7, #12]
 6871 007a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 180


 6872 007c 1A68     		ldr	r2, [r3]
 6873 007e FB68     		ldr	r3, [r7, #12]
 6874 0080 1B68     		ldr	r3, [r3]
 6875 0082 22F04002 		bic	r2, r2, #64
 6876 0086 1A60     		str	r2, [r3]
 6877              	.L340:
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 6878              		.loc 1 3418 0
 6879 0088 FB68     		ldr	r3, [r7, #12]
 6880 008a 9B6A     		ldr	r3, [r3, #40]
 6881 008c B3F5005F 		cmp	r3, #8192
 6882 0090 10D1     		bne	.L342
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 6883              		.loc 1 3420 0
 6884 0092 FB68     		ldr	r3, [r7, #12]
 6885 0094 1B68     		ldr	r3, [r3]
 6886 0096 1968     		ldr	r1, [r3]
 6887 0098 FB68     		ldr	r3, [r7, #12]
 6888 009a 1A68     		ldr	r2, [r3]
 6889 009c 4DF6FF73 		movw	r3, #57343
 6890 00a0 0B40     		ands	r3, r3, r1
 6891 00a2 1360     		str	r3, [r2]
 6892 00a4 FB68     		ldr	r3, [r7, #12]
 6893 00a6 1B68     		ldr	r3, [r3]
 6894 00a8 1A68     		ldr	r2, [r3]
 6895 00aa FB68     		ldr	r3, [r7, #12]
 6896 00ac 1B68     		ldr	r3, [r3]
 6897 00ae 42F40052 		orr	r2, r2, #8192
 6898 00b2 1A60     		str	r2, [r3]
 6899              	.L342:
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 6900              		.loc 1 3423 0
 6901 00b4 FB68     		ldr	r3, [r7, #12]
 6902 00b6 0122     		movs	r2, #1
 6903 00b8 83F85D20 		strb	r2, [r3, #93]
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 6904              		.loc 1 3426 0
 6905 00bc FB68     		ldr	r3, [r7, #12]
 6906 00be 0022     		movs	r2, #0
 6907 00c0 83F85C20 		strb	r2, [r3, #92]
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
 6908              		.loc 1 3428 0
 6909 00c4 0323     		movs	r3, #3
 6910 00c6 08E0     		b	.L343
 6911              	.L337:
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6912              		.loc 1 3390 0
 6913 00c8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 181


 6914 00ca 1B68     		ldr	r3, [r3]
 6915 00cc 9A68     		ldr	r2, [r3, #8]
 6916 00ce BB68     		ldr	r3, [r7, #8]
 6917 00d0 1340     		ands	r3, r3, r2
 6918 00d2 7A68     		ldr	r2, [r7, #4]
 6919 00d4 9A42     		cmp	r2, r3
 6920 00d6 9BD1     		bne	.L344
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 6921              		.loc 1 3433 0
 6922 00d8 0023     		movs	r3, #0
 6923              	.L343:
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6924              		.loc 1 3434 0
 6925 00da 1846     		mov	r0, r3
 6926 00dc 1837     		adds	r7, r7, #24
 6927              	.LCFI259:
 6928              		.cfi_def_cfa_offset 8
 6929 00de BD46     		mov	sp, r7
 6930              	.LCFI260:
 6931              		.cfi_def_cfa_register 13
 6932              		@ sp needed
 6933 00e0 80BD     		pop	{r7, pc}
 6934              		.cfi_endproc
 6935              	.LFE186:
 6937              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 6938              		.align	1
 6939              		.syntax unified
 6940              		.thumb
 6941              		.thumb_func
 6942              		.fpu fpv4-sp-d16
 6944              	SPI_EndRxTransaction:
 6945              	.LFB187:
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None.
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 6946              		.loc 1 3445 0
 6947              		.cfi_startproc
 6948              		@ args = 0, pretend = 0, frame = 16
 6949              		@ frame_needed = 1, uses_anonymous_args = 0
 6950 0000 80B5     		push	{r7, lr}
 6951              	.LCFI261:
 6952              		.cfi_def_cfa_offset 8
 6953              		.cfi_offset 7, -8
 6954              		.cfi_offset 14, -4
 6955 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/cczU8NLw.s 			page 182


 6956              	.LCFI262:
 6957              		.cfi_def_cfa_offset 32
 6958 0004 02AF     		add	r7, sp, #8
 6959              	.LCFI263:
 6960              		.cfi_def_cfa 7, 24
 6961 0006 F860     		str	r0, [r7, #12]
 6962 0008 B960     		str	r1, [r7, #8]
 6963 000a 7A60     		str	r2, [r7, #4]
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6964              		.loc 1 3446 0
 6965 000c FB68     		ldr	r3, [r7, #12]
 6966 000e 5B68     		ldr	r3, [r3, #4]
 6967 0010 B3F5827F 		cmp	r3, #260
 6968 0014 11D1     		bne	.L346
 6969              		.loc 1 3446 0 is_stmt 0 discriminator 1
 6970 0016 FB68     		ldr	r3, [r7, #12]
 6971 0018 9B68     		ldr	r3, [r3, #8]
 6972 001a B3F5004F 		cmp	r3, #32768
 6973 001e 04D0     		beq	.L347
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 6974              		.loc 1 3447 0 is_stmt 1
 6975 0020 FB68     		ldr	r3, [r7, #12]
 6976 0022 9B68     		ldr	r3, [r3, #8]
 6977 0024 B3F5806F 		cmp	r3, #1024
 6978 0028 07D1     		bne	.L346
 6979              	.L347:
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable SPI peripheral */
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 6980              		.loc 1 3450 0
 6981 002a FB68     		ldr	r3, [r7, #12]
 6982 002c 1B68     		ldr	r3, [r3]
 6983 002e 1A68     		ldr	r2, [r3]
 6984 0030 FB68     		ldr	r3, [r7, #12]
 6985 0032 1B68     		ldr	r3, [r3]
 6986 0034 22F04002 		bic	r2, r2, #64
 6987 0038 1A60     		str	r2, [r3]
 6988              	.L346:
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 6989              		.loc 1 3454 0
 6990 003a 7B68     		ldr	r3, [r7, #4]
 6991 003c 0093     		str	r3, [sp]
 6992 003e BB68     		ldr	r3, [r7, #8]
 6993 0040 0022     		movs	r2, #0
 6994 0042 8021     		movs	r1, #128
 6995 0044 F868     		ldr	r0, [r7, #12]
 6996 0046 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6997 004a 0346     		mov	r3, r0
 6998 004c 002B     		cmp	r3, #0
 6999 004e 07D0     		beq	.L348
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7000              		.loc 1 3456 0
 7001 0050 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cczU8NLw.s 			page 183


 7002 0052 1B6E     		ldr	r3, [r3, #96]
 7003 0054 43F02002 		orr	r2, r3, #32
 7004 0058 FB68     		ldr	r3, [r7, #12]
 7005 005a 1A66     		str	r2, [r3, #96]
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7006              		.loc 1 3457 0
 7007 005c 0323     		movs	r3, #3
 7008 005e 23E0     		b	.L349
 7009              	.L348:
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 7010              		.loc 1 3460 0
 7011 0060 FB68     		ldr	r3, [r7, #12]
 7012 0062 5B68     		ldr	r3, [r3, #4]
 7013 0064 B3F5827F 		cmp	r3, #260
 7014 0068 1DD1     		bne	.L350
 7015              		.loc 1 3460 0 is_stmt 0 discriminator 1
 7016 006a FB68     		ldr	r3, [r7, #12]
 7017 006c 9B68     		ldr	r3, [r3, #8]
 7018 006e B3F5004F 		cmp	r3, #32768
 7019 0072 04D0     		beq	.L351
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 7020              		.loc 1 3461 0 is_stmt 1
 7021 0074 FB68     		ldr	r3, [r7, #12]
 7022 0076 9B68     		ldr	r3, [r3, #8]
 7023 0078 B3F5806F 		cmp	r3, #1024
 7024 007c 13D1     		bne	.L350
 7025              	.L351:
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
 7026              		.loc 1 3464 0
 7027 007e 7B68     		ldr	r3, [r7, #4]
 7028 0080 0093     		str	r3, [sp]
 7029 0082 BB68     		ldr	r3, [r7, #8]
 7030 0084 0022     		movs	r2, #0
 7031 0086 4FF4C061 		mov	r1, #1536
 7032 008a F868     		ldr	r0, [r7, #12]
 7033 008c FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7034 0090 0346     		mov	r3, r0
 7035 0092 002B     		cmp	r3, #0
 7036 0094 07D0     		beq	.L350
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7037              		.loc 1 3466 0
 7038 0096 FB68     		ldr	r3, [r7, #12]
 7039 0098 1B6E     		ldr	r3, [r3, #96]
 7040 009a 43F02002 		orr	r2, r3, #32
 7041 009e FB68     		ldr	r3, [r7, #12]
 7042 00a0 1A66     		str	r2, [r3, #96]
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 7043              		.loc 1 3467 0
 7044 00a2 0323     		movs	r3, #3
 7045 00a4 00E0     		b	.L349
 7046              	.L350:
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/cczU8NLw.s 			page 184


3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 7047              		.loc 1 3470 0
 7048 00a6 0023     		movs	r3, #0
 7049              	.L349:
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7050              		.loc 1 3471 0
 7051 00a8 1846     		mov	r0, r3
 7052 00aa 1037     		adds	r7, r7, #16
 7053              	.LCFI264:
 7054              		.cfi_def_cfa_offset 8
 7055 00ac BD46     		mov	sp, r7
 7056              	.LCFI265:
 7057              		.cfi_def_cfa_register 13
 7058              		@ sp needed
 7059 00ae 80BD     		pop	{r7, pc}
 7060              		.cfi_endproc
 7061              	.LFE187:
 7063              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 7064              		.align	1
 7065              		.syntax unified
 7066              		.thumb
 7067              		.thumb_func
 7068              		.fpu fpv4-sp-d16
 7070              	SPI_EndRxTxTransaction:
 7071              	.LFB188:
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief Handle the check of the RXTX or TX transaction complete.
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param hspi SPI handle
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Timeout Timeout duration
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param Tickstart tick start value
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7072              		.loc 1 3480 0
 7073              		.cfi_startproc
 7074              		@ args = 0, pretend = 0, frame = 16
 7075              		@ frame_needed = 1, uses_anonymous_args = 0
 7076 0000 80B5     		push	{r7, lr}
 7077              	.LCFI266:
 7078              		.cfi_def_cfa_offset 8
 7079              		.cfi_offset 7, -8
 7080              		.cfi_offset 14, -4
 7081 0002 86B0     		sub	sp, sp, #24
 7082              	.LCFI267:
 7083              		.cfi_def_cfa_offset 32
 7084 0004 02AF     		add	r7, sp, #8
 7085              	.LCFI268:
 7086              		.cfi_def_cfa 7, 24
 7087 0006 F860     		str	r0, [r7, #12]
 7088 0008 B960     		str	r1, [r7, #8]
 7089 000a 7A60     		str	r2, [r7, #4]
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the TX fifo is empty */
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 7090              		.loc 1 3482 0
 7091 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 185


 7092 000e 0093     		str	r3, [sp]
 7093 0010 BB68     		ldr	r3, [r7, #8]
 7094 0012 0022     		movs	r2, #0
 7095 0014 4FF4C051 		mov	r1, #6144
 7096 0018 F868     		ldr	r0, [r7, #12]
 7097 001a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7098 001e 0346     		mov	r3, r0
 7099 0020 002B     		cmp	r3, #0
 7100 0022 07D0     		beq	.L353
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7101              		.loc 1 3484 0
 7102 0024 FB68     		ldr	r3, [r7, #12]
 7103 0026 1B6E     		ldr	r3, [r3, #96]
 7104 0028 43F02002 		orr	r2, r3, #32
 7105 002c FB68     		ldr	r3, [r7, #12]
 7106 002e 1A66     		str	r2, [r3, #96]
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7107              		.loc 1 3485 0
 7108 0030 0323     		movs	r3, #3
 7109 0032 27E0     		b	.L354
 7110              	.L353:
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 7111              		.loc 1 3488 0
 7112 0034 7B68     		ldr	r3, [r7, #4]
 7113 0036 0093     		str	r3, [sp]
 7114 0038 BB68     		ldr	r3, [r7, #8]
 7115 003a 0022     		movs	r2, #0
 7116 003c 8021     		movs	r1, #128
 7117 003e F868     		ldr	r0, [r7, #12]
 7118 0040 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 7119 0044 0346     		mov	r3, r0
 7120 0046 002B     		cmp	r3, #0
 7121 0048 07D0     		beq	.L355
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7122              		.loc 1 3490 0
 7123 004a FB68     		ldr	r3, [r7, #12]
 7124 004c 1B6E     		ldr	r3, [r3, #96]
 7125 004e 43F02002 		orr	r2, r3, #32
 7126 0052 FB68     		ldr	r3, [r7, #12]
 7127 0054 1A66     		str	r2, [r3, #96]
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7128              		.loc 1 3491 0
 7129 0056 0323     		movs	r3, #3
 7130 0058 14E0     		b	.L354
 7131              	.L355:
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the RX fifo is empty */
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
 7132              		.loc 1 3494 0
 7133 005a 7B68     		ldr	r3, [r7, #4]
 7134 005c 0093     		str	r3, [sp]
 7135 005e BB68     		ldr	r3, [r7, #8]
 7136 0060 0022     		movs	r2, #0
ARM GAS  /tmp/cczU8NLw.s 			page 186


 7137 0062 4FF4C061 		mov	r1, #1536
 7138 0066 F868     		ldr	r0, [r7, #12]
 7139 0068 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7140 006c 0346     		mov	r3, r0
 7141 006e 002B     		cmp	r3, #0
 7142 0070 07D0     		beq	.L356
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7143              		.loc 1 3496 0
 7144 0072 FB68     		ldr	r3, [r7, #12]
 7145 0074 1B6E     		ldr	r3, [r3, #96]
 7146 0076 43F02002 		orr	r2, r3, #32
 7147 007a FB68     		ldr	r3, [r7, #12]
 7148 007c 1A66     		str	r2, [r3, #96]
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 7149              		.loc 1 3497 0
 7150 007e 0323     		movs	r3, #3
 7151 0080 00E0     		b	.L354
 7152              	.L356:
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 7153              		.loc 1 3499 0
 7154 0082 0023     		movs	r3, #0
 7155              	.L354:
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7156              		.loc 1 3500 0
 7157 0084 1846     		mov	r0, r3
 7158 0086 1037     		adds	r7, r7, #16
 7159              	.LCFI269:
 7160              		.cfi_def_cfa_offset 8
 7161 0088 BD46     		mov	sp, r7
 7162              	.LCFI270:
 7163              		.cfi_def_cfa_register 13
 7164              		@ sp needed
 7165 008a 80BD     		pop	{r7, pc}
 7166              		.cfi_endproc
 7167              	.LFE188:
 7169              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 7170              		.align	1
 7171              		.syntax unified
 7172              		.thumb
 7173              		.thumb_func
 7174              		.fpu fpv4-sp-d16
 7176              	SPI_CloseRxTx_ISR:
 7177              	.LFB189:
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7178              		.loc 1 3509 0
 7179              		.cfi_startproc
 7180              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cczU8NLw.s 			page 187


 7181              		@ frame_needed = 1, uses_anonymous_args = 0
 7182 0000 80B5     		push	{r7, lr}
 7183              	.LCFI271:
 7184              		.cfi_def_cfa_offset 8
 7185              		.cfi_offset 7, -8
 7186              		.cfi_offset 14, -4
 7187 0002 84B0     		sub	sp, sp, #16
 7188              	.LCFI272:
 7189              		.cfi_def_cfa_offset 24
 7190 0004 00AF     		add	r7, sp, #0
 7191              	.LCFI273:
 7192              		.cfi_def_cfa_register 7
 7193 0006 7860     		str	r0, [r7, #4]
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7194              		.loc 1 3510 0
 7195 0008 0023     		movs	r3, #0
 7196 000a FB60     		str	r3, [r7, #12]
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7197              		.loc 1 3513 0
 7198 000c FFF7FEFF 		bl	HAL_GetTick
 7199 0010 F860     		str	r0, [r7, #12]
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable ERR interrupt */
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 7200              		.loc 1 3516 0
 7201 0012 7B68     		ldr	r3, [r7, #4]
 7202 0014 1B68     		ldr	r3, [r3]
 7203 0016 5A68     		ldr	r2, [r3, #4]
 7204 0018 7B68     		ldr	r3, [r7, #4]
 7205 001a 1B68     		ldr	r3, [r3]
 7206 001c 22F02002 		bic	r2, r2, #32
 7207 0020 5A60     		str	r2, [r3, #4]
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7208              		.loc 1 3519 0
 7209 0022 FA68     		ldr	r2, [r7, #12]
 7210 0024 6421     		movs	r1, #100
 7211 0026 7868     		ldr	r0, [r7, #4]
 7212 0028 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7213 002c 0346     		mov	r3, r0
 7214 002e 002B     		cmp	r3, #0
 7215 0030 05D0     		beq	.L358
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7216              		.loc 1 3521 0
 7217 0032 7B68     		ldr	r3, [r7, #4]
 7218 0034 1B6E     		ldr	r3, [r3, #96]
 7219 0036 43F02002 		orr	r2, r3, #32
 7220 003a 7B68     		ldr	r3, [r7, #4]
 7221 003c 1A66     		str	r2, [r3, #96]
 7222              	.L358:
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/cczU8NLw.s 			page 188


3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7223              		.loc 1 3536 0
 7224 003e 7B68     		ldr	r3, [r7, #4]
 7225 0040 1B6E     		ldr	r3, [r3, #96]
 7226 0042 002B     		cmp	r3, #0
 7227 0044 15D1     		bne	.L359
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 7228              		.loc 1 3538 0
 7229 0046 7B68     		ldr	r3, [r7, #4]
 7230 0048 93F85D30 		ldrb	r3, [r3, #93]
 7231 004c DBB2     		uxtb	r3, r3
 7232 004e 042B     		cmp	r3, #4
 7233 0050 07D1     		bne	.L360
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 7234              		.loc 1 3540 0
 7235 0052 7B68     		ldr	r3, [r7, #4]
 7236 0054 0122     		movs	r2, #1
 7237 0056 83F85D20 		strb	r2, [r3, #93]
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 7238              		.loc 1 3541 0
 7239 005a 7868     		ldr	r0, [r7, #4]
 7240 005c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7241              		.loc 1 3557 0
 7242 0060 0EE0     		b	.L363
 7243              	.L360:
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 7244              		.loc 1 3545 0
 7245 0062 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 189


 7246 0064 0122     		movs	r2, #1
 7247 0066 83F85D20 		strb	r2, [r3, #93]
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 7248              		.loc 1 3546 0
 7249 006a 7868     		ldr	r0, [r7, #4]
 7250 006c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 7251              		.loc 1 3557 0
 7252 0070 06E0     		b	.L363
 7253              	.L359:
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 7254              		.loc 1 3551 0
 7255 0072 7B68     		ldr	r3, [r7, #4]
 7256 0074 0122     		movs	r2, #1
 7257 0076 83F85D20 		strb	r2, [r3, #93]
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 7258              		.loc 1 3552 0
 7259 007a 7868     		ldr	r0, [r7, #4]
 7260 007c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7261              	.L363:
 7262              		.loc 1 3557 0
 7263 0080 00BF     		nop
 7264 0082 1037     		adds	r7, r7, #16
 7265              	.LCFI274:
 7266              		.cfi_def_cfa_offset 8
 7267 0084 BD46     		mov	sp, r7
 7268              	.LCFI275:
 7269              		.cfi_def_cfa_register 13
 7270              		@ sp needed
 7271 0086 80BD     		pop	{r7, pc}
 7272              		.cfi_endproc
 7273              	.LFE189:
 7275              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 7276              		.align	1
 7277              		.syntax unified
 7278              		.thumb
 7279              		.thumb_func
 7280              		.fpu fpv4-sp-d16
 7282              	SPI_CloseRx_ISR:
 7283              	.LFB190:
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7284              		.loc 1 3566 0
 7285              		.cfi_startproc
 7286              		@ args = 0, pretend = 0, frame = 8
 7287              		@ frame_needed = 1, uses_anonymous_args = 0
 7288 0000 80B5     		push	{r7, lr}
 7289              	.LCFI276:
 7290              		.cfi_def_cfa_offset 8
 7291              		.cfi_offset 7, -8
 7292              		.cfi_offset 14, -4
ARM GAS  /tmp/cczU8NLw.s 			page 190


 7293 0002 82B0     		sub	sp, sp, #8
 7294              	.LCFI277:
 7295              		.cfi_def_cfa_offset 16
 7296 0004 00AF     		add	r7, sp, #0
 7297              	.LCFI278:
 7298              		.cfi_def_cfa_register 7
 7299 0006 7860     		str	r0, [r7, #4]
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 7300              		.loc 1 3568 0
 7301 0008 7B68     		ldr	r3, [r7, #4]
 7302 000a 1B68     		ldr	r3, [r3]
 7303 000c 5A68     		ldr	r2, [r3, #4]
 7304 000e 7B68     		ldr	r3, [r7, #4]
 7305 0010 1B68     		ldr	r3, [r3]
 7306 0012 22F06002 		bic	r2, r2, #96
 7307 0016 5A60     		str	r2, [r3, #4]
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 7308              		.loc 1 3571 0
 7309 0018 FFF7FEFF 		bl	HAL_GetTick
 7310 001c 0346     		mov	r3, r0
 7311 001e 1A46     		mov	r2, r3
 7312 0020 6421     		movs	r1, #100
 7313 0022 7868     		ldr	r0, [r7, #4]
 7314 0024 FFF7FEFF 		bl	SPI_EndRxTransaction
 7315 0028 0346     		mov	r3, r0
 7316 002a 002B     		cmp	r3, #0
 7317 002c 05D0     		beq	.L365
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7318              		.loc 1 3573 0
 7319 002e 7B68     		ldr	r3, [r7, #4]
 7320 0030 1B6E     		ldr	r3, [r3, #96]
 7321 0032 43F02002 		orr	r2, r3, #32
 7322 0036 7B68     		ldr	r3, [r7, #4]
 7323 0038 1A66     		str	r2, [r3, #96]
 7324              	.L365:
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7325              		.loc 1 3575 0
 7326 003a 7B68     		ldr	r3, [r7, #4]
 7327 003c 0122     		movs	r2, #1
 7328 003e 83F85D20 		strb	r2, [r3, #93]
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/cczU8NLw.s 			page 191


3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7329              		.loc 1 3588 0
 7330 0042 7B68     		ldr	r3, [r7, #4]
 7331 0044 1B6E     		ldr	r3, [r3, #96]
 7332 0046 002B     		cmp	r3, #0
 7333 0048 03D1     		bne	.L366
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 7334              		.loc 1 3590 0
 7335 004a 7868     		ldr	r0, [r7, #4]
 7336 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7337              		.loc 1 3599 0
 7338 0050 02E0     		b	.L368
 7339              	.L366:
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 7340              		.loc 1 3594 0
 7341 0052 7868     		ldr	r0, [r7, #4]
 7342 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7343              	.L368:
 7344              		.loc 1 3599 0
 7345 0058 00BF     		nop
 7346 005a 0837     		adds	r7, r7, #8
 7347              	.LCFI279:
 7348              		.cfi_def_cfa_offset 8
 7349 005c BD46     		mov	sp, r7
 7350              	.LCFI280:
 7351              		.cfi_def_cfa_register 13
 7352              		@ sp needed
 7353 005e 80BD     		pop	{r7, pc}
 7354              		.cfi_endproc
 7355              	.LFE190:
 7357              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 7358              		.align	1
 7359              		.syntax unified
 7360              		.thumb
 7361              		.thumb_func
 7362              		.fpu fpv4-sp-d16
 7364              	SPI_CloseTx_ISR:
 7365              	.LFB191:
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
ARM GAS  /tmp/cczU8NLw.s 			page 192


 7366              		.loc 1 3608 0
 7367              		.cfi_startproc
 7368              		@ args = 0, pretend = 0, frame = 16
 7369              		@ frame_needed = 1, uses_anonymous_args = 0
 7370 0000 80B5     		push	{r7, lr}
 7371              	.LCFI281:
 7372              		.cfi_def_cfa_offset 8
 7373              		.cfi_offset 7, -8
 7374              		.cfi_offset 14, -4
 7375 0002 84B0     		sub	sp, sp, #16
 7376              	.LCFI282:
 7377              		.cfi_def_cfa_offset 24
 7378 0004 00AF     		add	r7, sp, #0
 7379              	.LCFI283:
 7380              		.cfi_def_cfa_register 7
 7381 0006 7860     		str	r0, [r7, #4]
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7382              		.loc 1 3609 0
 7383 0008 0023     		movs	r3, #0
 7384 000a FB60     		str	r3, [r7, #12]
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7385              		.loc 1 3612 0
 7386 000c FFF7FEFF 		bl	HAL_GetTick
 7387 0010 F860     		str	r0, [r7, #12]
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 7388              		.loc 1 3615 0
 7389 0012 7B68     		ldr	r3, [r7, #4]
 7390 0014 1B68     		ldr	r3, [r3]
 7391 0016 5A68     		ldr	r2, [r3, #4]
 7392 0018 7B68     		ldr	r3, [r7, #4]
 7393 001a 1B68     		ldr	r3, [r3]
 7394 001c 22F0A002 		bic	r2, r2, #160
 7395 0020 5A60     		str	r2, [r3, #4]
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7396              		.loc 1 3618 0
 7397 0022 FA68     		ldr	r2, [r7, #12]
 7398 0024 6421     		movs	r1, #100
 7399 0026 7868     		ldr	r0, [r7, #4]
 7400 0028 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7401 002c 0346     		mov	r3, r0
 7402 002e 002B     		cmp	r3, #0
 7403 0030 05D0     		beq	.L370
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7404              		.loc 1 3620 0
 7405 0032 7B68     		ldr	r3, [r7, #4]
 7406 0034 1B6E     		ldr	r3, [r3, #96]
 7407 0036 43F02002 		orr	r2, r3, #32
 7408 003a 7B68     		ldr	r3, [r7, #4]
 7409 003c 1A66     		str	r2, [r3, #96]
 7410              	.L370:
ARM GAS  /tmp/cczU8NLw.s 			page 193


3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7411              		.loc 1 3624 0
 7412 003e 7B68     		ldr	r3, [r7, #4]
 7413 0040 9B68     		ldr	r3, [r3, #8]
 7414 0042 002B     		cmp	r3, #0
 7415 0044 0AD1     		bne	.L371
 7416              	.LBB16:
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7417              		.loc 1 3626 0
 7418 0046 0023     		movs	r3, #0
 7419 0048 BB60     		str	r3, [r7, #8]
 7420 004a 7B68     		ldr	r3, [r7, #4]
 7421 004c 1B68     		ldr	r3, [r3]
 7422 004e DB68     		ldr	r3, [r3, #12]
 7423 0050 BB60     		str	r3, [r7, #8]
 7424 0052 7B68     		ldr	r3, [r7, #4]
 7425 0054 1B68     		ldr	r3, [r3]
 7426 0056 9B68     		ldr	r3, [r3, #8]
 7427 0058 BB60     		str	r3, [r7, #8]
 7428 005a BB68     		ldr	r3, [r7, #8]
 7429              	.L371:
 7430              	.LBE16:
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7431              		.loc 1 3629 0
 7432 005c 7B68     		ldr	r3, [r7, #4]
 7433 005e 0122     		movs	r2, #1
 7434 0060 83F85D20 		strb	r2, [r3, #93]
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 7435              		.loc 1 3630 0
 7436 0064 7B68     		ldr	r3, [r7, #4]
 7437 0066 1B6E     		ldr	r3, [r3, #96]
 7438 0068 002B     		cmp	r3, #0
 7439 006a 03D0     		beq	.L372
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 7440              		.loc 1 3632 0
 7441 006c 7868     		ldr	r0, [r7, #4]
 7442 006e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7443              		.loc 1 3638 0
 7444 0072 02E0     		b	.L374
 7445              	.L372:
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 7446              		.loc 1 3636 0
 7447 0074 7868     		ldr	r0, [r7, #4]
 7448 0076 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
ARM GAS  /tmp/cczU8NLw.s 			page 194


 7449              	.L374:
 7450              		.loc 1 3638 0
 7451 007a 00BF     		nop
 7452 007c 1037     		adds	r7, r7, #16
 7453              	.LCFI284:
 7454              		.cfi_def_cfa_offset 8
 7455 007e BD46     		mov	sp, r7
 7456              	.LCFI285:
 7457              		.cfi_def_cfa_register 13
 7458              		@ sp needed
 7459 0080 80BD     		pop	{r7, pc}
 7460              		.cfi_endproc
 7461              	.LFE191:
 7463              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 7464              		.align	1
 7465              		.syntax unified
 7466              		.thumb
 7467              		.thumb_func
 7468              		.fpu fpv4-sp-d16
 7470              	SPI_AbortRx_ISR:
 7471              	.LFB192:
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7472              		.loc 1 3647 0
 7473              		.cfi_startproc
 7474              		@ args = 0, pretend = 0, frame = 16
 7475              		@ frame_needed = 1, uses_anonymous_args = 0
 7476 0000 80B5     		push	{r7, lr}
 7477              	.LCFI286:
 7478              		.cfi_def_cfa_offset 8
 7479              		.cfi_offset 7, -8
 7480              		.cfi_offset 14, -4
 7481 0002 86B0     		sub	sp, sp, #24
 7482              	.LCFI287:
 7483              		.cfi_def_cfa_offset 32
 7484 0004 02AF     		add	r7, sp, #8
 7485              	.LCFI288:
 7486              		.cfi_def_cfa 7, 24
 7487 0006 7860     		str	r0, [r7, #4]
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7488              		.loc 1 3648 0
 7489 0008 0023     		movs	r3, #0
 7490 000a FB60     		str	r3, [r7, #12]
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7491              		.loc 1 3651 0
 7492 000c FFF7FEFF 		bl	HAL_GetTick
 7493 0010 F860     		str	r0, [r7, #12]
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/cczU8NLw.s 			page 195


3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7494              		.loc 1 3654 0
 7495 0012 7B68     		ldr	r3, [r7, #4]
 7496 0014 1B68     		ldr	r3, [r3]
 7497 0016 1A68     		ldr	r2, [r3]
 7498 0018 7B68     		ldr	r3, [r7, #4]
 7499 001a 1B68     		ldr	r3, [r3]
 7500 001c 22F04002 		bic	r2, r2, #64
 7501 0020 1A60     		str	r2, [r3]
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 7502              		.loc 1 3657 0
 7503 0022 7B68     		ldr	r3, [r7, #4]
 7504 0024 1B68     		ldr	r3, [r3]
 7505 0026 5A68     		ldr	r2, [r3, #4]
 7506 0028 7B68     		ldr	r3, [r7, #4]
 7507 002a 1B68     		ldr	r3, [r3]
 7508 002c 22F0E002 		bic	r2, r2, #224
 7509 0030 5A60     		str	r2, [r3, #4]
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 7510              		.loc 1 3659 0
 7511 0032 0AE0     		b	.L376
 7512              	.L377:
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 7513              		.loc 1 3661 0
 7514 0034 FFF7FEFF 		bl	HAL_GetTick
 7515 0038 0246     		mov	r2, r0
 7516 003a FB68     		ldr	r3, [r7, #12]
 7517 003c D31A     		subs	r3, r2, r3
 7518 003e B3F1FF3F 		cmp	r3, #-1
 7519 0042 02D1     		bne	.L376
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7520              		.loc 1 3663 0
 7521 0044 7B68     		ldr	r3, [r7, #4]
 7522 0046 4022     		movs	r2, #64
 7523 0048 1A66     		str	r2, [r3, #96]
 7524              	.L376:
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 7525              		.loc 1 3659 0
 7526 004a 7B68     		ldr	r3, [r7, #4]
 7527 004c 1B68     		ldr	r3, [r3]
 7528 004e 5B68     		ldr	r3, [r3, #4]
 7529 0050 03F04003 		and	r3, r3, #64
 7530 0054 002B     		cmp	r3, #0
 7531 0056 EDD1     		bne	.L377
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 7532              		.loc 1 3668 0
 7533 0058 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cczU8NLw.s 			page 196


 7534 005c 0346     		mov	r3, r0
 7535 005e 0093     		str	r3, [sp]
 7536 0060 6423     		movs	r3, #100
 7537 0062 0022     		movs	r2, #0
 7538 0064 8021     		movs	r1, #128
 7539 0066 7868     		ldr	r0, [r7, #4]
 7540 0068 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 7541 006c 0346     		mov	r3, r0
 7542 006e 002B     		cmp	r3, #0
 7543 0070 02D0     		beq	.L378
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7544              		.loc 1 3670 0
 7545 0072 7B68     		ldr	r3, [r7, #4]
 7546 0074 4022     		movs	r2, #64
 7547 0076 1A66     		str	r2, [r3, #96]
 7548              	.L378:
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 7549              		.loc 1 3674 0
 7550 0078 FFF7FEFF 		bl	HAL_GetTick
 7551 007c 0346     		mov	r3, r0
 7552 007e 0093     		str	r3, [sp]
 7553 0080 6423     		movs	r3, #100
 7554 0082 0022     		movs	r2, #0
 7555 0084 4FF4C061 		mov	r1, #1536
 7556 0088 7868     		ldr	r0, [r7, #4]
 7557 008a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7558 008e 0346     		mov	r3, r0
 7559 0090 002B     		cmp	r3, #0
 7560 0092 02D0     		beq	.L379
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7561              		.loc 1 3676 0
 7562 0094 7B68     		ldr	r3, [r7, #4]
 7563 0096 4022     		movs	r2, #64
 7564 0098 1A66     		str	r2, [r3, #96]
 7565              	.L379:
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7566              		.loc 1 3679 0
 7567 009a 7B68     		ldr	r3, [r7, #4]
 7568 009c 0722     		movs	r2, #7
 7569 009e 83F85D20 		strb	r2, [r3, #93]
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7570              		.loc 1 3680 0
 7571 00a2 00BF     		nop
 7572 00a4 1037     		adds	r7, r7, #16
 7573              	.LCFI289:
 7574              		.cfi_def_cfa_offset 8
 7575 00a6 BD46     		mov	sp, r7
 7576              	.LCFI290:
 7577              		.cfi_def_cfa_register 13
 7578              		@ sp needed
ARM GAS  /tmp/cczU8NLw.s 			page 197


 7579 00a8 80BD     		pop	{r7, pc}
 7580              		.cfi_endproc
 7581              	.LFE192:
 7583              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 7584              		.align	1
 7585              		.syntax unified
 7586              		.thumb
 7587              		.thumb_func
 7588              		.fpu fpv4-sp-d16
 7590              	SPI_AbortTx_ISR:
 7591              	.LFB193:
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 7592              		.loc 1 3689 0
 7593              		.cfi_startproc
 7594              		@ args = 0, pretend = 0, frame = 16
 7595              		@ frame_needed = 1, uses_anonymous_args = 0
 7596 0000 80B5     		push	{r7, lr}
 7597              	.LCFI291:
 7598              		.cfi_def_cfa_offset 8
 7599              		.cfi_offset 7, -8
 7600              		.cfi_offset 14, -4
 7601 0002 86B0     		sub	sp, sp, #24
 7602              	.LCFI292:
 7603              		.cfi_def_cfa_offset 32
 7604 0004 02AF     		add	r7, sp, #8
 7605              	.LCFI293:
 7606              		.cfi_def_cfa 7, 24
 7607 0006 7860     		str	r0, [r7, #4]
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart = 0U;
 7608              		.loc 1 3690 0
 7609 0008 0023     		movs	r3, #0
 7610 000a FB60     		str	r3, [r7, #12]
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7611              		.loc 1 3693 0
 7612 000c FFF7FEFF 		bl	HAL_GetTick
 7613 0010 F860     		str	r0, [r7, #12]
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 7614              		.loc 1 3696 0
 7615 0012 7B68     		ldr	r3, [r7, #4]
 7616 0014 1B68     		ldr	r3, [r3]
 7617 0016 5A68     		ldr	r2, [r3, #4]
 7618 0018 7B68     		ldr	r3, [r7, #4]
 7619 001a 1B68     		ldr	r3, [r3]
 7620 001c 22F0E002 		bic	r2, r2, #224
 7621 0020 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cczU8NLw.s 			page 198


3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 7622              		.loc 1 3698 0
 7623 0022 0AE0     		b	.L381
 7624              	.L382:
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((HAL_GetTick() - tickstart) >=  HAL_MAX_DELAY)
 7625              		.loc 1 3700 0
 7626 0024 FFF7FEFF 		bl	HAL_GetTick
 7627 0028 0246     		mov	r2, r0
 7628 002a FB68     		ldr	r3, [r7, #12]
 7629 002c D31A     		subs	r3, r2, r3
 7630 002e B3F1FF3F 		cmp	r3, #-1
 7631 0032 02D1     		bne	.L381
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7632              		.loc 1 3702 0
 7633 0034 7B68     		ldr	r3, [r7, #4]
 7634 0036 4022     		movs	r2, #64
 7635 0038 1A66     		str	r2, [r3, #96]
 7636              	.L381:
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 7637              		.loc 1 3698 0
 7638 003a 7B68     		ldr	r3, [r7, #4]
 7639 003c 1B68     		ldr	r3, [r3]
 7640 003e 5B68     		ldr	r3, [r3, #4]
 7641 0040 03F08003 		and	r3, r3, #128
 7642 0044 002B     		cmp	r3, #0
 7643 0046 EDD1     		bne	.L382
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 7644              		.loc 1 3706 0
 7645 0048 FFF7FEFF 		bl	HAL_GetTick
 7646 004c 0346     		mov	r3, r0
 7647 004e 1A46     		mov	r2, r3
 7648 0050 6421     		movs	r1, #100
 7649 0052 7868     		ldr	r0, [r7, #4]
 7650 0054 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7651 0058 0346     		mov	r3, r0
 7652 005a 002B     		cmp	r3, #0
 7653 005c 02D0     		beq	.L383
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7654              		.loc 1 3708 0
 7655 005e 7B68     		ldr	r3, [r7, #4]
 7656 0060 4022     		movs	r2, #64
 7657 0062 1A66     		str	r2, [r3, #96]
 7658              	.L383:
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7659              		.loc 1 3712 0
 7660 0064 7B68     		ldr	r3, [r7, #4]
 7661 0066 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczU8NLw.s 			page 199


 7662 0068 1A68     		ldr	r2, [r3]
 7663 006a 7B68     		ldr	r3, [r7, #4]
 7664 006c 1B68     		ldr	r3, [r3]
 7665 006e 22F04002 		bic	r2, r2, #64
 7666 0072 1A60     		str	r2, [r3]
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 7667              		.loc 1 3715 0
 7668 0074 FFF7FEFF 		bl	HAL_GetTick
 7669 0078 0346     		mov	r3, r0
 7670 007a 0093     		str	r3, [sp]
 7671 007c 6423     		movs	r3, #100
 7672 007e 0022     		movs	r2, #0
 7673 0080 4FF4C061 		mov	r1, #1536
 7674 0084 7868     		ldr	r0, [r7, #4]
 7675 0086 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7676 008a 0346     		mov	r3, r0
 7677 008c 002B     		cmp	r3, #0
 7678 008e 02D0     		beq	.L384
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 7679              		.loc 1 3717 0
 7680 0090 7B68     		ldr	r3, [r7, #4]
 7681 0092 4022     		movs	r2, #64
 7682 0094 1A66     		str	r2, [r3, #96]
 7683              	.L384:
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7684              		.loc 1 3720 0
 7685 0096 7B68     		ldr	r3, [r7, #4]
 7686 0098 0722     		movs	r2, #7
 7687 009a 83F85D20 		strb	r2, [r3, #93]
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 7688              		.loc 1 3721 0
 7689 009e 00BF     		nop
 7690 00a0 1037     		adds	r7, r7, #16
 7691              	.LCFI294:
 7692              		.cfi_def_cfa_offset 8
 7693 00a2 BD46     		mov	sp, r7
 7694              	.LCFI295:
 7695              		.cfi_def_cfa_register 13
 7696              		@ sp needed
 7697 00a4 80BD     		pop	{r7, pc}
 7698              		.cfi_endproc
 7699              	.LFE193:
 7701              		.text
 7702              	.Letext0:
 7703              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 7704              		.file 3 "/usr/include/newlib/sys/lock.h"
 7705              		.file 4 "/usr/include/newlib/sys/_types.h"
 7706              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 7707              		.file 6 "/usr/include/newlib/sys/reent.h"
 7708              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 7709              		.file 8 "Inc/main.h"
 7710              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cczU8NLw.s 			page 200


 7711              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 7712              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 7713              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 7714              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 7715              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 7716              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
ARM GAS  /tmp/cczU8NLw.s 			page 201


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_spi.c
                            *COM*:0000000000000004 SpiTxData
                            *COM*:0000000000000004 SpiRxData
                            *COM*:0000000000000004 UpdateFile
     /tmp/cczU8NLw.s:21     .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/cczU8NLw.s:28     .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/cczU8NLw.s:299    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/cczU8NLw.s:215    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/cczU8NLw.s:222    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/cczU8NLw.s:342    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/cczU8NLw.s:292    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/cczU8NLw.s:335    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/cczU8NLw.s:378    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/cczU8NLw.s:385    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/cczU8NLw.s:7070   .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/cczU8NLw.s:745    .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/cczU8NLw.s:752    .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/cczU8NLw.s:1127   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/cczU8NLw.s:6944   .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/cczU8NLw.s:1120   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/cczU8NLw.s:1727   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/cczU8NLw.s:1734   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/cczU8NLw.s:1916   .text.HAL_SPI_Transmit_IT:0000000000000104 $d
     /tmp/cczU8NLw.s:6577   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/cczU8NLw.s:6510   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/cczU8NLw.s:1922   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/cczU8NLw.s:1929   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/cczU8NLw.s:2159   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/cczU8NLw.s:2146   .text.HAL_SPI_Receive_IT:0000000000000148 $d
     /tmp/cczU8NLw.s:6440   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/cczU8NLw.s:6372   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/cczU8NLw.s:2152   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/cczU8NLw.s:2399   .text.HAL_SPI_TransmitReceive_IT:0000000000000160 $d
     /tmp/cczU8NLw.s:6205   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/cczU8NLw.s:6289   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/cczU8NLw.s:5967   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/cczU8NLw.s:6094   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/cczU8NLw.s:2407   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/cczU8NLw.s:2414   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/cczU8NLw.s:2682   .text.HAL_SPI_Transmit_DMA:00000000000001ac $d
     /tmp/cczU8NLw.s:5394   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/cczU8NLw.s:5048   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/cczU8NLw.s:5529   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/cczU8NLw.s:2689   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/cczU8NLw.s:2696   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/cczU8NLw.s:2983   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/cczU8NLw.s:2969   .text.HAL_SPI_Receive_DMA:00000000000001b4 $d
     /tmp/cczU8NLw.s:5439   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/cczU8NLw.s:5176   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/cczU8NLw.s:2976   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/cczU8NLw.s:3410   .text.HAL_SPI_TransmitReceive_DMA:00000000000002cc $d
     /tmp/cczU8NLw.s:5484   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/cczU8NLw.s:5282   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/cczU8NLw.s:3419   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/cczU8NLw.s:3426   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/cczU8NLw.s:6786   .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
ARM GAS  /tmp/cczU8NLw.s 			page 202


     /tmp/cczU8NLw.s:6646   .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/cczU8NLw.s:3731   .text.HAL_SPI_Abort:00000000000001f4 $d
     /tmp/cczU8NLw.s:7590   .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/cczU8NLw.s:7470   .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/cczU8NLw.s:3737   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/cczU8NLw.s:3744   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/cczU8NLw.s:4913   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/cczU8NLw.s:4093   .text.HAL_SPI_Abort_IT:0000000000000214 $d
     /tmp/cczU8NLw.s:5645   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/cczU8NLw.s:5805   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/cczU8NLw.s:4101   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/cczU8NLw.s:4108   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/cczU8NLw.s:4172   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/cczU8NLw.s:4179   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/cczU8NLw.s:4243   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/cczU8NLw.s:4250   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/cczU8NLw.s:4318   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/cczU8NLw.s:4325   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/cczU8NLw.s:4870   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/cczU8NLw.s:4600   .text.HAL_SPI_IRQHandler:00000000000001ac $d
     /tmp/cczU8NLw.s:5592   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/cczU8NLw.s:4605   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4612   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/cczU8NLw.s:4648   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4655   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/cczU8NLw.s:4691   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4698   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/cczU8NLw.s:4734   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4741   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/cczU8NLw.s:4777   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4784   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/cczU8NLw.s:4820   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4827   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/cczU8NLw.s:4863   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4906   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:4949   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/cczU8NLw.s:4956   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/cczU8NLw.s:4996   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/cczU8NLw.s:5003   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
     /tmp/cczU8NLw.s:5042   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/cczU8NLw.s:5170   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/cczU8NLw.s:5276   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/cczU8NLw.s:5388   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/cczU8NLw.s:5433   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/cczU8NLw.s:5478   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/cczU8NLw.s:5523   .text.SPI_DMAError:0000000000000000 $t
     /tmp/cczU8NLw.s:5586   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/cczU8NLw.s:5639   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:5799   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/cczU8NLw.s:5961   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:7176   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/cczU8NLw.s:6088   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:6199   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:6283   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:6366   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:7282   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/cczU8NLw.s:6434   .text.SPI_RxISR_16BIT:0000000000000000 $t
ARM GAS  /tmp/cczU8NLw.s 			page 203


     /tmp/cczU8NLw.s:6504   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:7364   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/cczU8NLw.s:6571   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/cczU8NLw.s:6640   .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/cczU8NLw.s:6780   .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/cczU8NLw.s:6938   .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/cczU8NLw.s:7064   .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/cczU8NLw.s:7170   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/cczU8NLw.s:7276   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/cczU8NLw.s:7358   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/cczU8NLw.s:7464   .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/cczU8NLw.s:7584   .text.SPI_AbortTx_ISR:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
